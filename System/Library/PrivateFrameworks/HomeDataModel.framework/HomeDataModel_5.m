uint64_t initializeWithTake for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _OWORD *v55;
  uint64_t updated;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  char *__dst;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  char *v72;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    v14[v16[9]] = v15[v16[9]];
    v14[v16[10]] = v15[v16[10]];
    v14[v16[11]] = v15[v16[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_23E536F20();
  v23 = *(_QWORD *)(v22 - 8);
  v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  if (v70(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[9];
  v26 = a3[10];
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *(_BYTE *)(a2 + v26);
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_BYTE *)(a1 + v26) = v29;
  v8(a1 + a3[11], a2 + a3[11], v6);
  v30 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  v31 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);
  v34 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v71 = (void (*)(char *, char *, uint64_t))v8;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v34, 1, v6))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v35, (uint64_t)v36, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  v38 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  v39 = a3[25];
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[26];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = type metadata accessor for StaticSoftwareUpdate(0);
  v44 = *(_QWORD *)(v43 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v68 = v23;
    v69 = v44;
    v71(v41, v42, v6);
    v46 = *(int *)(v43 + 20);
    v47 = &v41[v46];
    v48 = &v42[v46];
    v49 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v72 = v41;
      v55 = v47;
      *(_OWORD *)v47 = *(_OWORD *)v48;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v57 = *(int *)(updated + 20);
      v66 = updated;
      __dst = &v47[v57];
      v58 = &v48[v57];
      if (v70(&v48[v57], 1, v22))
      {
LABEL_22:
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
LABEL_26:
        *(_OWORD *)((char *)v55 + *(int *)(v66 + 24)) = *(_OWORD *)&v48[*(int *)(v66 + 24)];
        *(_OWORD *)((char *)v55 + *(int *)(v66 + 28)) = *(_OWORD *)&v48[*(int *)(v66 + 28)];
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v55 + *(int *)(v63 + 48)) = v48[*(int *)(v63 + 48)];
        swift_storeEnumTagMultiPayload();
        v62 = v69;
        v41 = v72;
LABEL_27:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v41, 0, 1, v43);
        goto LABEL_28;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          v71(v47, v48, v6);
          v51 = (int *)type metadata accessor for StaticHH2Update(0);
          v47[v51[5]] = v48[v51[5]];
          *(_OWORD *)&v47[v51[6]] = *(_OWORD *)&v48[v51[6]];
          v52 = v51[7];
          v53 = &v47[v52];
          v54 = &v48[v52];
          v53[8] = v54[8];
          *(_QWORD *)v53 = *(_QWORD *)v54;
          swift_storeEnumTagMultiPayload();
        }
        v62 = v69;
        goto LABEL_27;
      }
      v72 = v41;
      v55 = v47;
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v59 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v60 = *(int *)(v59 + 20);
      v66 = v59;
      __dst = &v47[v60];
      v58 = &v48[v60];
      if (v70(&v48[v60], 1, v22))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(__dst, v58, v22);
    v55 = v47;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v22);
    goto LABEL_26;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_28:
  v64 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v64) = *(_BYTE *)(a2 + v64);
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  return a1;
}

uint64_t sub_23E487A20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[7];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[8];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
          {
            v8 = v18;
            v15 = a3[21];
          }
          else
          {
            v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
            v14 = *(_QWORD *)(v8 - 8);
            v15 = a3[26];
          }
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23E487B6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[21];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[26];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for StaticAccessory.HomePodTypes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E487D00 + 4 * byte_23E552CA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E487D34 + 4 * byte_23E552CA4[v4]))();
}

uint64_t sub_23E487D34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E487D3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E487D44);
  return result;
}

uint64_t sub_23E487D50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E487D58);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E487D5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E487D64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.HomePodTypes()
{
  return &type metadata for StaticAccessory.HomePodTypes;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >> 1 < 0xFFF)
    goto LABEL_17;
  if (a2 + 57346 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 57346 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 57346;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 57346;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 57346;
  }
LABEL_17:
  v6 = (*a1 & 0xFC | (*a1 >> 14) | (*a1 >> 1) & 0x1F00) ^ 0x1FFF;
  if (v6 >= 0x1FFD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 57346 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 57346 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >> 1 >= 0xFFF)
    v5 = v4;
  else
    v5 = 0;
  if (a2 >> 1 <= 0xFFE)
    return ((uint64_t (*)(void))((char *)&loc_23E487E94 + 4 * byte_23E552CB3[v5]))();
  *a1 = a2 - 8190;
  return ((uint64_t (*)(void))((char *)sub_23E487ECC + 4 * byte_23E552CAE[v5]))();
}

uint64_t sub_23E487ECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23E487ED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23E487EDCLL);
  return result;
}

uint64_t sub_23E487EFC(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23E487F04);
  v2 = ((-a2 >> 2) & 0x7FF) - (a2 << 11);
  *(_WORD *)result = (8 * v2) & 0xFE00 | (4 * (v2 & 0x3F));
  return result;
}

uint64_t sub_23E487F08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23E487F10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23E487F1C(unsigned __int16 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  v4 = (v1 & 3 | (4 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_WORD *sub_23E487F44(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_23E487F54(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x103 | ((_WORD)a2 << 14);
  else
    *result = (((_WORD)a2 - 2) << 6) & 0x100 | (a2 - 2) & 3 | 0x8000;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticAccessory.DeviceIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E536F80();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for StaticAccessory.DeviceIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23E536F80();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for StaticAccessory.DeviceIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23E536F80();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for StaticAccessory.DeviceIdentifier(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E536F80();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.CodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.UuidCodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E4882BC + 4 * byte_23E552CBD[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E4882F0 + 4 * byte_23E552CB8[v4]))();
}

uint64_t sub_23E4882F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4882F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E488300);
  return result;
}

uint64_t sub_23E48830C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E488314);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E488318(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E488320(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.CodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.CameraCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.CameraCodingKeys;
}

uint64_t _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO19BluetoothCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E4883BC + 4 * byte_23E552CC2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E4883DC + 4 * byte_23E552CC7[v4]))();
}

_BYTE *sub_23E4883BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E4883DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4883E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4883EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4883F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4883FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys;
}

uint64_t _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E488464 + 4 * byte_23E552CD1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E488498 + 4 * byte_23E552CCC[v4]))();
}

uint64_t sub_23E488498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4884A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4884A8);
  return result;
}

uint64_t sub_23E4884B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4884BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E4884C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4884C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticAccessory.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_23E488540 + 4 * byte_23E552CDB[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_23E488574 + 4 * byte_23E552CD6[v4]))();
}

uint64_t sub_23E488574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E48857C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E488584);
  return result;
}

uint64_t sub_23E488590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E488598);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_23E48859C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4885A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.CodingKeys()
{
  return &type metadata for StaticAccessory.CodingKeys;
}

unint64_t sub_23E4885C4()
{
  unint64_t result;

  result = qword_256D47A28;
  if (!qword_256D47A28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5534C4, &type metadata for StaticAccessory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A28);
  }
  return result;
}

unint64_t sub_23E48860C()
{
  unint64_t result;

  result = qword_256D47A30;
  if (!qword_256D47A30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5535CC, &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A30);
  }
  return result;
}

unint64_t sub_23E488654()
{
  unint64_t result;

  result = qword_256D47A38;
  if (!qword_256D47A38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553684, &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A38);
  }
  return result;
}

unint64_t sub_23E48869C()
{
  unint64_t result;

  result = qword_256D47A40;
  if (!qword_256D47A40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55387C, &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A40);
  }
  return result;
}

unint64_t sub_23E4886E4()
{
  unint64_t result;

  result = qword_256D47A48;
  if (!qword_256D47A48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553934, &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A48);
  }
  return result;
}

unint64_t sub_23E48872C()
{
  unint64_t result;

  result = qword_256D47A50;
  if (!qword_256D47A50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5539EC, &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A50);
  }
  return result;
}

unint64_t sub_23E488774()
{
  unint64_t result;

  result = qword_256D47A58;
  if (!qword_256D47A58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553AA4, &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A58);
  }
  return result;
}

unint64_t sub_23E4887BC()
{
  unint64_t result;

  result = qword_256D47A60;
  if (!qword_256D47A60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55395C, &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A60);
  }
  return result;
}

unint64_t sub_23E488804()
{
  unint64_t result;

  result = qword_256D47A68;
  if (!qword_256D47A68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553984, &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A68);
  }
  return result;
}

unint64_t sub_23E48884C()
{
  unint64_t result;

  result = qword_256D47A70;
  if (!qword_256D47A70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5538A4, &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A70);
  }
  return result;
}

unint64_t sub_23E488894()
{
  unint64_t result;

  result = qword_256D47A78;
  if (!qword_256D47A78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5538CC, &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A78);
  }
  return result;
}

unint64_t sub_23E4888DC()
{
  unint64_t result;

  result = qword_256D47A80;
  if (!qword_256D47A80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553A14, &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A80);
  }
  return result;
}

unint64_t sub_23E488924()
{
  unint64_t result;

  result = qword_256D47A88;
  if (!qword_256D47A88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553A3C, &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A88);
  }
  return result;
}

unint64_t sub_23E48896C()
{
  unint64_t result;

  result = qword_256D47A90;
  if (!qword_256D47A90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55379C, &type metadata for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A90);
  }
  return result;
}

unint64_t sub_23E4889B4()
{
  unint64_t result;

  result = qword_256D47A98;
  if (!qword_256D47A98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5537C4, &type metadata for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47A98);
  }
  return result;
}

unint64_t sub_23E4889FC()
{
  unint64_t result;

  result = qword_256D47AA0;
  if (!qword_256D47AA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55374C, &type metadata for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AA0);
  }
  return result;
}

unint64_t sub_23E488A44()
{
  unint64_t result;

  result = qword_256D47AA8;
  if (!qword_256D47AA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553774, &type metadata for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AA8);
  }
  return result;
}

unint64_t sub_23E488A8C()
{
  unint64_t result;

  result = qword_256D47AB0;
  if (!qword_256D47AB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5536FC, &type metadata for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AB0);
  }
  return result;
}

unint64_t sub_23E488AD4()
{
  unint64_t result;

  result = qword_256D47AB8;
  if (!qword_256D47AB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553724, &type metadata for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AB8);
  }
  return result;
}

unint64_t sub_23E488B1C()
{
  unint64_t result;

  result = qword_256D47AC0;
  if (!qword_256D47AC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5536AC, &type metadata for StaticAccessory.SpecialMediaCategory.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AC0);
  }
  return result;
}

unint64_t sub_23E488B64()
{
  unint64_t result;

  result = qword_256D47AC8;
  if (!qword_256D47AC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5536D4, &type metadata for StaticAccessory.SpecialMediaCategory.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AC8);
  }
  return result;
}

unint64_t sub_23E488BAC()
{
  unint64_t result;

  result = qword_256D47AD0;
  if (!qword_256D47AD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5535F4, &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AD0);
  }
  return result;
}

unint64_t sub_23E488BF4()
{
  unint64_t result;

  result = qword_256D47AD8;
  if (!qword_256D47AD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55361C, &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AD8);
  }
  return result;
}

unint64_t sub_23E488C3C()
{
  unint64_t result;

  result = qword_256D47AE0;
  if (!qword_256D47AE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55353C, &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AE0);
  }
  return result;
}

unint64_t sub_23E488C84()
{
  unint64_t result;

  result = qword_256D47AE8;
  if (!qword_256D47AE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553564, &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AE8);
  }
  return result;
}

unint64_t sub_23E488CCC()
{
  unint64_t result;

  result = qword_256D47AF0;
  if (!qword_256D47AF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5534EC, &type metadata for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AF0);
  }
  return result;
}

unint64_t sub_23E488D14()
{
  unint64_t result;

  result = qword_256D47AF8;
  if (!qword_256D47AF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553514, &type metadata for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47AF8);
  }
  return result;
}

unint64_t sub_23E488D5C()
{
  unint64_t result;

  result = qword_256D47B00;
  if (!qword_256D47B00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5537EC, &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47B00);
  }
  return result;
}

unint64_t sub_23E488DA4()
{
  unint64_t result;

  result = qword_256D47B08;
  if (!qword_256D47B08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553814, &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47B08);
  }
  return result;
}

unint64_t sub_23E488DEC()
{
  unint64_t result;

  result = qword_256D47B10;
  if (!qword_256D47B10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553434, &type metadata for StaticAccessory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47B10);
  }
  return result;
}

unint64_t sub_23E488E34()
{
  unint64_t result;

  result = qword_256D47B18;
  if (!qword_256D47B18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55345C, &type metadata for StaticAccessory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47B18);
  }
  return result;
}

uint64_t sub_23E488E78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56A960 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F4E72657474616DLL && a2 == 0xEC00000044496564 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E569CF0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E56A460 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56A980 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E564730 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56A9A0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56A9C0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E568D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56A9E0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AA00 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x72427341776F6873 && a2 == 0xEC00000065676469 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569D70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 25;
    else
      return 26;
  }
}

uint64_t sub_23E4898C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74726F50726961 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5654656C707061 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6365526F69647561 && a2 == 0xED00007265766965 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172656D6163 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F50656D6F68 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x70646E4569726973 && a2 == 0xEC000000746E696FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72656B61657073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23E489BD8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023E56AA20 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56AA40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E489CC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746F6F7465756C62 && a2 == 0xE900000000000068;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23E489DAC()
{
  unint64_t result;

  result = qword_256D47B20;
  if (!qword_256D47B20)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.HomePodTypes, &type metadata for StaticAccessory.HomePodTypes);
    atomic_store(result, (unint64_t *)&qword_256D47B20);
  }
  return result;
}

uint64_t sub_23E489DF0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E483E2C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23E489E08()
{
  return swift_deallocObject();
}

uint64_t sub_23E489E18()
{
  return swift_deallocObject();
}

uint64_t sub_23E489E28()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_23E489E80()
{
  unsigned __int8 v1;

  sub_23E537718();
  return v1;
}

uint64_t sub_23E489EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int EnumCaseMultiPayload;
  unint64_t v23;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for StaticAccessory(0);
  v6 = (v3 + v4 + *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + v6;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v0 + v6, v8);
  swift_bridgeObjectRelease();
  v11 = v0 + v6 + v5[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v10(v11, v8);
  else
    swift_bridgeObjectRelease();
  v12 = v7 + v5[7];
  v13 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v10(v12, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = v7 + v5[8];
  v15 = sub_23E536F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (!v17(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v10(v7 + v5[11], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v7 + v5[21];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8))
    v10(v18, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v7 + v5[26];
  v20 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
  {
    v10(v19, v8);
    v21 = v19 + *(int *)(v20 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v23 = v21 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v17(v23, 1, v15))
        (*(void (**)(unint64_t, uint64_t))(v16 + 8))(v23, v15);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      v10(v21, v8);
      type metadata accessor for StaticHH2Update(0);
LABEL_18:
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E48A264@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StaticAccessory(0);
  return sub_23E483D24(a1);
}

uint64_t sub_23E48A304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v3[25] = swift_task_alloc();
  v4 = sub_23E536F80();
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E48A3A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  id v14;
  BOOL v15;
  id v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _OWORD *v75;
  void *v76;
  _QWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)@<X0>(_BYTE *@<X0>, _BYTE *@<X8>);
  uint64_t v87;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1 >> 62)
    goto LABEL_59;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    goto LABEL_60;
  do
  {
    v79 = (_OWORD *)(v0 + 56);
    v75 = (_OWORD *)(v0 + 88);
    v3 = (unsigned __int8 *)(v0 + 16);
    v77 = *(_QWORD **)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192);
    *(_QWORD *)(v0 + 248) = 2;
    v6 = (_QWORD *)sub_23E20D354(MEMORY[0x24BEE4AF8]);
    *(_BYTE *)(v0 + 352) = 0;
    v74 = v1 & 0xC000000000000001;
    v71 = v5;
    v72 = v4 + 32;
    v70 = v5 + 64;
    v78 = (_OWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    v7 = 0;
    v73 = v2;
    while (1)
    {
      v13 = v74 ? (id)MEMORY[0x24264F148](v7, *(_QWORD *)(v0 + 184)) : *(id *)(v72 + 8 * v7);
      v14 = v13;
      v15 = __OFADD__(v7++, 1);
      if (v15)
        break;
      v16 = objc_msgSend(v13, sel_uniqueIdentifier);
      sub_23E536F68();

      v76 = v14;
      if (!v6[2])
      {
        v18 = (void (*)(uint64_t, uint64_t, uint64_t))v77[2];
LABEL_23:
        v36 = *(_QWORD *)(v0 + 232);
        v18(v36, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v81 = v6;
        v38 = v36;
        v1 = (unint64_t)v6;
        v40 = sub_23E1E3300(v38);
        v41 = v6[2];
        v42 = (v39 & 1) == 0;
        v43 = v41 + v42;
        if (__OFADD__(v41, v42))
          goto LABEL_57;
        v44 = v39;
        if (v6[3] >= v43)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v39 & 1) == 0)
              goto LABEL_30;
          }
          else
          {
            sub_23E21D318();
            v6 = v81;
            if ((v44 & 1) == 0)
              goto LABEL_30;
          }
        }
        else
        {
          v45 = *(_QWORD *)(v0 + 232);
          sub_23E212884(v43, isUniquelyReferenced_nonNull_native);
          v6 = v81;
          v46 = sub_23E1E3300(v45);
          if ((v44 & 1) != (v47 & 1))
            return sub_23E5383C0();
          v40 = v46;
          if ((v44 & 1) == 0)
          {
LABEL_30:
            v48 = *(_QWORD *)(v0 + 232);
            v49 = *(_QWORD *)(v0 + 208);
            v1 = *(_QWORD *)(v0 + 192);
            v6[(v40 >> 6) + 8] |= 1 << v40;
            v18(v6[6] + v77[9] * v40, v48, v49);
            *(_QWORD *)(v6[7] + 8 * v40) = v1;
            v50 = v6[2];
            v15 = __OFADD__(v50, 1);
            v51 = v50 + 1;
            if (v15)
              goto LABEL_58;
            v6[2] = v51;
            goto LABEL_5;
          }
        }
        v8 = *(_QWORD *)(v0 + 192);
        v9 = v6[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 8 * v40) = v8;
LABEL_5:
        v10 = *(_QWORD *)(v0 + 232);
        v11 = *(_QWORD *)(v0 + 208);
        swift_bridgeObjectRelease();
        v12 = (void (*)(uint64_t, uint64_t))v77[1];
        v12(v10, v11);
        goto LABEL_6;
      }
      v17 = sub_23E1E3300(*(_QWORD *)(v0 + 240));
      v18 = (void (*)(uint64_t, uint64_t, uint64_t))v77[2];
      if ((v19 & 1) == 0)
        goto LABEL_23;
      v20 = *(_QWORD **)(v6[7] + 8 * v17);
      v18(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = swift_isUniquelyReferenced_nonNull_native();
      v22 = -1 << *(_BYTE *)(v71 + 32);
      v23 = ~v22;
      v24 = -v22;
      if (v24 < 64)
        v25 = ~(-1 << v24);
      else
        v25 = -1;
      v26 = v25 & *(_QWORD *)(v71 + 64);
      v80 = v20;
      v81 = (_QWORD *)v71;
      v82 = v70;
      v83 = v23;
      v84 = 0;
      v85 = v26;
      v86 = sub_23E287450;
      v87 = 0;
      swift_bridgeObjectRetain();
      sub_23E287460(v0 + 16);
      if (*(_QWORD *)(v0 + 48))
      {
        v27 = *v3;
        sub_23E1EA76C(v78, v79);
        v1 = (unint64_t)v20;
        v29 = sub_23E1EAF70(v27);
        v30 = v20[2];
        v31 = (v28 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          break;
        }
        v33 = v28;
        if (v20[3] >= v32)
        {
          if ((v21 & 1) != 0)
          {
            if ((v28 & 1) == 0)
              goto LABEL_38;
          }
          else
          {
            v1 = (unint64_t)&v80;
            sub_23E21D324();
            if ((v33 & 1) == 0)
              goto LABEL_38;
          }
        }
        else
        {
          sub_23E212890(v32, v21);
          v1 = (unint64_t)v80;
          v34 = sub_23E1EAF70(v27);
          if ((v33 & 1) != (v35 & 1))
            return sub_23E5383C0();
          v29 = v34;
          if ((v33 & 1) == 0)
          {
LABEL_38:
            v20 = v80;
            v80[(v29 >> 6) + 8] |= 1 << v29;
            *(_BYTE *)(v20[6] + v29) = v27;
            sub_23E1EA76C(v79, (_OWORD *)(v20[7] + 32 * v29));
            v54 = v20[2];
            v15 = __OFADD__(v54, 1);
            v55 = v54 + 1;
            if (!v15)
            {
              v20[2] = v55;
              goto LABEL_41;
            }
            goto LABEL_55;
          }
        }
        v20 = v80;
        v52 = (_OWORD *)(v0 + 88);
        sub_23E1EA76C(v79, v75);
        v53 = (_OWORD *)(v20[7] + 32 * v29);
LABEL_40:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
        sub_23E1EA76C(v52, v53);
LABEL_41:
        while (1)
        {
          sub_23E287460(v0 + 16);
          if (!*(_QWORD *)(v0 + 48))
            break;
          v56 = *v3;
          sub_23E1EA76C(v78, v79);
          v1 = sub_23E1EAF70(v56);
          v58 = v20[2];
          v59 = (v57 & 1) == 0;
          v60 = v58 + v59;
          if (__OFADD__(v58, v59))
            goto LABEL_54;
          v61 = v57;
          if (v20[3] < v60)
          {
            sub_23E212890(v60, 1);
            v20 = v80;
            v62 = sub_23E1EAF70(v56);
            if ((v61 & 1) != (v63 & 1))
              return sub_23E5383C0();
            v1 = v62;
          }
          if ((v61 & 1) != 0)
          {
            v52 = (_OWORD *)(v0 + 88);
            sub_23E1EA76C(v79, v75);
            v53 = (_OWORD *)(v20[7] + 32 * v1);
            goto LABEL_40;
          }
          v20[(v1 >> 6) + 8] |= 1 << v1;
          *(_BYTE *)(v20[6] + v1) = v56;
          sub_23E1EA76C(v79, (_OWORD *)(v20[7] + 32 * v1));
          v64 = v20[2];
          v15 = __OFADD__(v64, 1);
          v65 = v64 + 1;
          if (v15)
            goto LABEL_55;
          v20[2] = v65;
        }
      }
      v66 = *(_QWORD *)(v0 + 224);
      v67 = *(_QWORD *)(v0 + 208);
      swift_bridgeObjectRelease();
      sub_23E2261B0();
      swift_release();
      swift_bridgeObjectRelease();
      v68 = swift_isUniquelyReferenced_nonNull_native();
      v81 = v6;
      sub_23E21A528((uint64_t)v20, v66, v68);
      v6 = v81;
      swift_bridgeObjectRelease();
      v12 = (void (*)(uint64_t, uint64_t))v77[1];
      v12(v66, v67);
LABEL_6:
      v1 = (unint64_t)v76;
      *(_QWORD *)(v0 + 256) = v6;
      v12(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));

      if (v7 == v73)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 264) = sub_23E5378F8();
        *(_QWORD *)(v0 + 272) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  while (v2);
LABEL_60:
  *(_QWORD *)(v0 + 312) = sub_23E5378F8();
  *(_QWORD *)(v0 + 320) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48AA70()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E48AAD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48AB34()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 288) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E48AB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 256);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 144) = v1;
    *(_BYTE *)(v0 + 152) = *(_BYTE *)(v0 + 352);
    *(_QWORD *)(v0 + 160) = v2;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v3;
    *v3 = v0;
    v3[1] = sub_23E48AC7C;
    return DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:)(*(_QWORD *)(v0 + 200), (uint64_t *)(v0 + 144), 0, 0);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 176);
    v6 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E48AC7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E48ACE0()
{
  uint64_t v0;

  sub_23E1FDCC4(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48AD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);

  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48ADDC()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E48AE40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48AEA0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 336) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E48AEE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 344) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48AF48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[42];
  v2 = v0[22];
  swift_release();
  swift_getKeyPath();
  v0[21] = v1;
  sub_23E30AAAC();
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E40BD30(v3, v2);
  return swift_task_switch();
}

uint64_t sub_23E48B008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48B088(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 128) = a4;
  *(_QWORD *)(v5 + 136) = a5;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D476F0);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v7 = sub_23E536F80();
  *(_QWORD *)(v5 + 160) = v7;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  v8 = a3[1];
  *(_OWORD *)(v5 + 200) = *a3;
  *(_OWORD *)(v5 + 216) = v8;
  sub_23E5378F8();
  *(_QWORD *)(v5 + 232) = sub_23E5378EC();
  *(_QWORD *)(v5 + 240) = sub_23E5378B0();
  *(_QWORD *)(v5 + 248) = v9;
  return swift_task_switch();
}

uint64_t sub_23E48B174()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  BOOL v12;
  id v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char v16;
  _QWORD *v17;
  char v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _OWORD *v66;
  void *v67;
  _QWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _QWORD *v71;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = (_QWORD *)sub_23E20D354(MEMORY[0x24BEE4AF8]);
  *(_BYTE *)(v0 + 352) = 0;
  if (v1 >> 62)
    goto LABEL_54;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_55;
  do
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(v0 + 16);
    v68 = *(_QWORD **)(v0 + 168);
    v65 = v1 & 0xC000000000000001;
    v66 = (_OWORD *)(v0 + 88);
    v63 = *(_QWORD *)(v0 + 128) + 32;
    v69 = (_OWORD *)(v0 + 24);
    v70 = (_OWORD *)(v0 + 56);
    v64 = v3;
    while (1)
    {
      v11 = v65 ? (id)MEMORY[0x24264F148](v4, *(_QWORD *)(v0 + 128)) : *(id *)(v63 + 8 * v4);
      v1 = (unint64_t)v11;
      v12 = __OFADD__(v4++, 1);
      if (v12)
        break;
      v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_23E536F68();

      v67 = (void *)v1;
      if (!v2[2])
      {
        v15 = (void (*)(uint64_t, uint64_t, uint64_t))v68[2];
LABEL_20:
        v27 = *(_QWORD *)(v0 + 184);
        v15(v27, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v30 = sub_23E1E3300(v27);
        v31 = v2[2];
        v32 = (v29 & 1) == 0;
        v33 = v31 + v32;
        if (__OFADD__(v31, v32))
          goto LABEL_52;
        v1 = v29;
        if (v2[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v29 & 1) == 0)
              goto LABEL_27;
          }
          else
          {
            sub_23E21D318();
            if ((v1 & 1) == 0)
              goto LABEL_27;
          }
        }
        else
        {
          v34 = *(_QWORD *)(v0 + 184);
          sub_23E212884(v33, isUniquelyReferenced_nonNull_native);
          v35 = sub_23E1E3300(v34);
          if ((v1 & 1) != (v36 & 1))
            return sub_23E5383C0();
          v30 = v35;
          if ((v1 & 1) == 0)
          {
LABEL_27:
            v37 = *(_QWORD *)(v0 + 184);
            v38 = *(_QWORD *)(v0 + 160);
            v39 = *(_QWORD *)(v0 + 136);
            v2[(v30 >> 6) + 8] |= 1 << v30;
            v15(v2[6] + v68[9] * v30, v37, v38);
            *(_QWORD *)(v2[7] + 8 * v30) = v39;
            v40 = v2[2];
            v12 = __OFADD__(v40, 1);
            v41 = v40 + 1;
            if (v12)
              goto LABEL_53;
            v2[2] = v41;
            goto LABEL_5;
          }
        }
        v6 = *(_QWORD *)(v0 + 136);
        v7 = v2[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v7 + 8 * v30) = v6;
LABEL_5:
        v8 = *(_QWORD *)(v0 + 184);
        v9 = *(_QWORD *)(v0 + 160);
        swift_bridgeObjectRelease();
        v10 = (void (*)(uint64_t, uint64_t))v68[1];
        v10(v8, v9);
        goto LABEL_6;
      }
      v14 = sub_23E1E3300(*(_QWORD *)(v0 + 192));
      v15 = (void (*)(uint64_t, uint64_t, uint64_t))v68[2];
      if ((v16 & 1) == 0)
        goto LABEL_20;
      v17 = *(_QWORD **)(v2[7] + 8 * v14);
      v15(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v71 = v17;
      swift_bridgeObjectRetain();
      sub_23E287460(v0 + 16);
      if (*(_QWORD *)(v0 + 48))
      {
        v1 = *v5;
        sub_23E1EA76C(v69, v70);
        v20 = sub_23E1EAF70(v1);
        v21 = v17[2];
        v22 = (v19 & 1) == 0;
        v23 = v21 + v22;
        if (__OFADD__(v21, v22))
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          break;
        }
        v24 = v19;
        if (v17[3] >= v23)
        {
          if ((v18 & 1) != 0)
          {
            if ((v19 & 1) == 0)
              goto LABEL_35;
          }
          else
          {
            sub_23E21D324();
            if ((v24 & 1) == 0)
              goto LABEL_35;
          }
        }
        else
        {
          sub_23E212890(v23, v18);
          v25 = sub_23E1EAF70(v1);
          if ((v24 & 1) != (v26 & 1))
            return sub_23E5383C0();
          v20 = v25;
          if ((v24 & 1) == 0)
          {
LABEL_35:
            v17[(v20 >> 6) + 8] |= 1 << v20;
            *(_BYTE *)(v17[6] + v20) = v1;
            sub_23E1EA76C(v70, (_OWORD *)(v17[7] + 32 * v20));
            v44 = v17[2];
            v12 = __OFADD__(v44, 1);
            v45 = v44 + 1;
            if (!v12)
            {
              v17[2] = v45;
              goto LABEL_38;
            }
            goto LABEL_50;
          }
        }
        v42 = (_OWORD *)(v0 + 88);
        sub_23E1EA76C(v70, v66);
        v43 = (_OWORD *)(v17[7] + 32 * v20);
LABEL_37:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
        sub_23E1EA76C(v42, v43);
LABEL_38:
        while (1)
        {
          sub_23E287460(v0 + 16);
          if (!*(_QWORD *)(v0 + 48))
            break;
          v1 = *v5;
          sub_23E1EA76C(v69, v70);
          v47 = sub_23E1EAF70(v1);
          v48 = v17[2];
          v49 = (v46 & 1) == 0;
          v50 = v48 + v49;
          if (__OFADD__(v48, v49))
            goto LABEL_49;
          v51 = v46;
          if (v17[3] < v50)
          {
            sub_23E212890(v50, 1);
            v17 = v71;
            v52 = sub_23E1EAF70(v1);
            if ((v51 & 1) != (v53 & 1))
              return sub_23E5383C0();
            v47 = v52;
          }
          if ((v51 & 1) != 0)
          {
            v42 = (_OWORD *)(v0 + 88);
            sub_23E1EA76C(v70, v66);
            v43 = (_OWORD *)(v17[7] + 32 * v47);
            goto LABEL_37;
          }
          v17[(v47 >> 6) + 8] |= 1 << v47;
          *(_BYTE *)(v17[6] + v47) = v1;
          sub_23E1EA76C(v70, (_OWORD *)(v17[7] + 32 * v47));
          v54 = v17[2];
          v12 = __OFADD__(v54, 1);
          v55 = v54 + 1;
          if (v12)
            goto LABEL_50;
          v17[2] = v55;
        }
      }
      v56 = *(_QWORD *)(v0 + 176);
      v57 = *(_QWORD *)(v0 + 160);
      swift_bridgeObjectRelease();
      sub_23E2261B0();
      swift_release();
      swift_bridgeObjectRelease();
      v58 = swift_isUniquelyReferenced_nonNull_native();
      sub_23E21A528((uint64_t)v17, v56, v58);
      swift_bridgeObjectRelease();
      v10 = (void (*)(uint64_t, uint64_t))v68[1];
      v10(v56, v57);
LABEL_6:
      v10(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160));

      if (v4 == v64)
        goto LABEL_55;
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain_n();
    v3 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  while (v3);
LABEL_55:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 208) >= 2uLL && *(_QWORD *)(v0 + 224))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = CharacteristicValueSet.batchWrites.getter();
    swift_bridgeObjectRelease();
    if (v60 >> 62)
    {
      sub_23E48BE60();
      swift_bridgeObjectRetain();
      v61 = sub_23E538018();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_23E53836C();
      sub_23E48BE60();
      v61 = v60;
    }
    *(_QWORD *)(v0 + 256) = v61;
    swift_bridgeObjectRelease();
    if (qword_256D3EDC0 != -1)
      swift_once();
    return swift_task_switch();
  }
  else
  {
    swift_bridgeObjectRelease();
    v62 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v62;
    *v62 = v0;
    v62[1] = sub_23E48BDAC;
    return sub_23E48A304(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_23E48B8EC()
{
  uint64_t v0;

  type metadata accessor for WidgetDataModel();
  *(_QWORD *)(v0 + 264) = swift_initStaticObject();
  return swift_task_switch();
}

uint64_t sub_23E48B934()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v2 = v0[27];
  v1 = v0[28];
  v4 = v0[25];
  v3 = v0[26];
  v5 = (_QWORD *)v0[19];
  *v5 = v0[32];
  v5[1] = v4;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_storeEnumTagMultiPayload();
  v0[34] = qword_256D42FC0;
  v8 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v6 = (_QWORD *)swift_task_alloc();
  v0[35] = v6;
  *v6 = v0;
  v6[1] = sub_23E48B9C0;
  return v8();
}

uint64_t sub_23E48B9C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 288) = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 296) = v4;
  *v4 = v3;
  v4[1] = sub_23E48BA44;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_23E48BA44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 304) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  v5 = (uint64_t (*)(void))((char *)&dword_256D43080 + dword_256D43080);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 312) = v4;
  *v4 = v2;
  v4[1] = sub_23E48BAF4;
  return v5();
}

uint64_t sub_23E48BAF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, double);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 320) = a1;
  swift_task_dealloc();
  v6 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_256D47708 + dword_256D47708);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[41] = v4;
  *v4 = v3;
  v4[1] = sub_23E48BB90;
  return v6(v2[15], v2[19], 20.0);
}

uint64_t sub_23E48BB90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E48BC08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release();
  sub_23E48BE9C(v1);

  return swift_task_switch();
}

uint64_t sub_23E48BC54()
{
  return swift_task_switch();
}

uint64_t sub_23E48BC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48BCEC()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_23E48BD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48BDAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E48BDF8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23E48BE60()
{
  unint64_t result;

  result = qword_256D42920[0];
  if (!qword_256D42920[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_256D42920);
  }
  return result;
}

uint64_t sub_23E48BE9C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D476F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HMHomeManager.homesSortOrder.getter()
{
  return sub_23E1ED91C(0x486465726564724FLL, 0xEC00000073656D6FLL);
}

uint64_t sub_23E48BEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_23E537934();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_23E537928();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_23E1FB28C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E5378B0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static HMHomeManager.homesSortedByKey.getter()
{
  return 0x486465726564724FLL;
}

void *static HMHomeManager.applicationDataWriteCompletion.getter()
{
  void *v0;

  swift_beginAccess();
  v0 = off_256D47B50;
  sub_23E27D5B0((uint64_t)off_256D47B50);
  return v0;
}

uint64_t static HMHomeManager.applicationDataWriteCompletion.setter(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = off_256D47B50;
  off_256D47B50 = a1;
  qword_256D47B58 = a2;
  return sub_23E22D1F8((uint64_t)v4);
}

uint64_t (*static HMHomeManager.applicationDataWriteCompletion.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23E48C134()
{
  char *v0;

  v0 = (char *)swift_bridgeObjectRetain();
  sub_23E48C1C0(v0, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  return swift_bridgeObjectRelease();
}

uint64_t HMHomeManager.homesSortOrder.setter(char *a1)
{
  sub_23E48C1C0(a1, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E48C1C0(char *a1, void *a2, void *a3)
{
  void *v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v35[4];
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  ObjectType = swift_getObjectType();
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend(v3, sel_applicationData);
  v19 = a1;
  v41 = MEMORY[0x24BEE4AF8];
  v20 = *((_QWORD *)a1 + 2);
  v37 = ObjectType;
  v38 = v3;
  v35[3] = a3;
  v36 = v14;
  v35[1] = v19;
  v35[2] = a2;
  v35[0] = v18;
  if (v20)
  {
    v21 = &v19[(*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)];
    v22 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v39 = *(_QWORD *)(v9 + 72);
    v40 = v22;
    swift_bridgeObjectRetain();
    while (1)
    {
      v40(v17, v21, v8);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v23(v17, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v17, v8);
      sub_23E536F38();
      sub_23E537538();
      swift_bridgeObjectRelease();
      v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      MEMORY[0x24264EA70](v24);
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23E537820();
      sub_23E53785C();
      sub_23E537808();
      v21 += v39;
      if (!--v20)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v17, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  v25 = (void *)sub_23E5377E4();
  v26 = (void *)sub_23E537538();
  v27 = v35[0];
  objc_msgSend(v35[0], sel_setObject_forKeyedSubscript_, v25, v26);

  swift_bridgeObjectRelease();
  v28 = sub_23E537934();
  v29 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v36, 1, 1, v28);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v32 = v37;
  v31 = v38;
  v30[4] = v38;
  v30[5] = v32;
  v33 = v31;
  sub_23E48BEFC(v29, (uint64_t)&unk_256D47B68, (uint64_t)v30);
  return swift_release();
}

uint64_t (*HMHomeManager.homesSortOrder.modify(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0x486465726564724FLL, 0xEC00000073656D6FLL);
  return sub_23E48C540;
}

uint64_t sub_23E48C540(char **a1, char a2)
{
  char *v2;
  char *v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = (char *)swift_bridgeObjectRetain();
    sub_23E48C1C0(v3, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E48C1C0(v2, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E48C5B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1ED91C(0x486465726564724FLL, 0xEC00000073656D6FLL);
  *a1 = result;
  return result;
}

uint64_t sub_23E48C600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[18] = a4;
  v4[19] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[20] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v4[21] = v5;
  v4[22] = *(_QWORD *)(v5 - 8);
  v4[23] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v4[24] = v6;
  v4[25] = *(_QWORD *)(v6 - 8);
  v4[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E48C6B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = sub_23E5378F8();
  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48C720()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(*(_QWORD *)(v0 + 168), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E48C798()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E48C7F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[29];
  v3 = v0[22];
  v2 = v0[23];
  v4 = v0[21];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E48C858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  v1 = v0[26];
  v2 = v0[24];
  v3 = v0[25];
  v5 = v0[22];
  v4 = v0[23];
  v6 = v0[21];
  v7 = (void *)v0[18];
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = objc_msgSend(v7, sel_applicationData);
  v0[31] = v8;
  v0[2] = v0;
  v0[3] = sub_23E48C978;
  v9 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_23E267484;
  v0[13] = &block_descriptor_37;
  v0[14] = v9;
  objc_msgSend(v7, sel_updateApplicationData_completionHandler_, v8, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_23E48C978()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E48C9D8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  swift_beginAccess();
  v1 = (void (*)(uint64_t))off_256D47B50;
  if (off_256D47B50)
  {
    v2 = swift_retain();
    v1(v2);
    sub_23E22D1F8((uint64_t)v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48CA74()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 248);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E48CAE0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E48CB0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E48C600(a1, v4, v5, v6);
}

BOOL sub_23E48CB84(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  unint64_t v8;
  uint64_t i;
  int v10;
  uint64_t v11;

  if (qword_256D3EEE0 != -1)
LABEL_19:
    swift_once();
  v4 = *(_QWORD *)(qword_256D89878 + 16);
  if (!v4)
    return 0;
  v5 = 0;
  v6 = qword_256D89878 + 32;
  while (*(unsigned __int8 *)(v6 + v5) != a2)
  {
    if (v4 == ++v5)
    {
LABEL_11:
      for (i = 0; ; ++i)
      {
        v10 = *(unsigned __int8 *)(v6 + i);
        result = v10 == a2;
        if (v10 == a2)
          break;
        v11 = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        if (v11 == v4)
          return result;
      }
      return result;
    }
  }
  v8 = 0;
  while (*(unsigned __int8 *)(v6 + v8) != a1)
  {
    if (v4 == ++v8)
      goto LABEL_11;
  }
  return v5 < v8;
}

uint64_t sub_23E48CC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = CharacteristicKind.rawValue.getter(a1);
  v3 = v2;
  if (v1 == CharacteristicKind.rawValue.getter(v1) && v3 == v4)
    v6 = 0;
  else
    v6 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_23E48CD00(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  result = 0;
  while (*(unsigned __int8 *)(a2 + 32 + result) != a1)
  {
    if (v2 == ++result)
      return 0;
  }
  return result;
}

unint64_t static SymptomError.tileIconSymbol(for:)(unint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v4;

  if (result)
  {
    v1 = swift_bridgeObjectRetain();
    v4 = sub_23E24A098(v1);
    sub_23E48FCA4(&v4);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16))
    {
      v2 = *(unsigned __int8 *)(v4 + 32);
      swift_release();
      if (v2 <= 0x13 && ((1 << v2) & 0x80003) != 0)
        return 0xD000000000000018;
    }
    else
    {
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t SymptomError.init(from:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;

  v2 = 0;
  v3 = 5;
  switch(result)
  {
    case 1:
      goto LABEL_13;
    case 2:
      v2 = 1;
      goto LABEL_13;
    case 3:
      v2 = 2;
      goto LABEL_13;
    case 4:
      v2 = 3;
      goto LABEL_13;
    case 5:
      v2 = 4;
LABEL_13:
      v3 = v2;
      goto LABEL_14;
    case 6:
LABEL_14:
      *a2 = v3;
      break;
    case 7:
      *a2 = 6;
      break;
    case 8:
      *a2 = 7;
      break;
    case 9:
      *a2 = 8;
      break;
    case 10:
      *a2 = 9;
      break;
    case 11:
      *a2 = 10;
      break;
    case 12:
      *a2 = 11;
      break;
    case 13:
      *a2 = 12;
      break;
    case 14:
      *a2 = 13;
      break;
    case 15:
      *a2 = 14;
      break;
    case 16:
      *a2 = 15;
      break;
    case 17:
      *a2 = 16;
      break;
    case 18:
      *a2 = 17;
      break;
    case 19:
      *a2 = 18;
      break;
    case 20:
      *a2 = 19;
      break;
    case 21:
      *a2 = 22;
      break;
    default:
      if (result == 1000)
        v4 = 21;
      else
        v4 = 23;
      if (result == 999)
        v5 = 20;
      else
        v5 = v4;
      *a2 = v5;
      break;
  }
  return result;
}

BOOL static SymptomError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SymptomError.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E48CF68(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E48CFA4 + 4 * byte_23E553EF5[a1]))(0xD000000000000014, 0x800000023E56AB10);
}

uint64_t sub_23E48CFA4()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_23E48D190()
{
  return 0x465044436465656ELL;
}

uint64_t sub_23E48D1AC()
{
  unsigned __int8 *v0;

  return sub_23E48CF68(*v0);
}

uint64_t sub_23E48D1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4923F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E48D1D8(_BYTE *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_23E48D1E4()
{
  sub_23E490CA4();
  return sub_23E538570();
}

uint64_t sub_23E48D20C()
{
  sub_23E490CA4();
  return sub_23E53857C();
}

uint64_t sub_23E48D234()
{
  sub_23E490D2C();
  return sub_23E538570();
}

uint64_t sub_23E48D25C()
{
  sub_23E490D2C();
  return sub_23E53857C();
}

uint64_t sub_23E48D284()
{
  sub_23E490F4C();
  return sub_23E538570();
}

uint64_t sub_23E48D2AC()
{
  sub_23E490F4C();
  return sub_23E53857C();
}

uint64_t sub_23E48D2D4()
{
  sub_23E490DB4();
  return sub_23E538570();
}

uint64_t sub_23E48D2FC()
{
  sub_23E490DB4();
  return sub_23E53857C();
}

uint64_t sub_23E48D324()
{
  sub_23E490DF8();
  return sub_23E538570();
}

uint64_t sub_23E48D34C()
{
  sub_23E490DF8();
  return sub_23E53857C();
}

uint64_t sub_23E48D374()
{
  sub_23E490D70();
  return sub_23E538570();
}

uint64_t sub_23E48D39C()
{
  sub_23E490D70();
  return sub_23E53857C();
}

uint64_t sub_23E48D3C4()
{
  sub_23E491128();
  return sub_23E538570();
}

uint64_t sub_23E48D3EC()
{
  sub_23E491128();
  return sub_23E53857C();
}

uint64_t sub_23E48D414()
{
  sub_23E491238();
  return sub_23E538570();
}

uint64_t sub_23E48D43C()
{
  sub_23E491238();
  return sub_23E53857C();
}

uint64_t sub_23E48D464()
{
  sub_23E49116C();
  return sub_23E538570();
}

uint64_t sub_23E48D48C()
{
  sub_23E49116C();
  return sub_23E53857C();
}

uint64_t sub_23E48D4B4()
{
  sub_23E490EC4();
  return sub_23E538570();
}

uint64_t sub_23E48D4DC()
{
  sub_23E490EC4();
  return sub_23E53857C();
}

uint64_t sub_23E48D504()
{
  sub_23E490E80();
  return sub_23E538570();
}

uint64_t sub_23E48D52C()
{
  sub_23E490E80();
  return sub_23E53857C();
}

uint64_t sub_23E48D554()
{
  sub_23E4911F4();
  return sub_23E538570();
}

uint64_t sub_23E48D57C()
{
  sub_23E4911F4();
  return sub_23E53857C();
}

uint64_t sub_23E48D5A4()
{
  sub_23E4911B0();
  return sub_23E538570();
}

uint64_t sub_23E48D5CC()
{
  sub_23E4911B0();
  return sub_23E53857C();
}

uint64_t sub_23E48D5F4()
{
  sub_23E490F08();
  return sub_23E538570();
}

uint64_t sub_23E48D61C()
{
  sub_23E490F08();
  return sub_23E53857C();
}

uint64_t sub_23E48D644()
{
  sub_23E4912C0();
  return sub_23E538570();
}

uint64_t sub_23E48D66C()
{
  sub_23E4912C0();
  return sub_23E53857C();
}

uint64_t sub_23E48D694()
{
  sub_23E49127C();
  return sub_23E538570();
}

uint64_t sub_23E48D6BC()
{
  sub_23E49127C();
  return sub_23E53857C();
}

uint64_t sub_23E48D6E4()
{
  sub_23E490E3C();
  return sub_23E538570();
}

uint64_t sub_23E48D70C()
{
  sub_23E490E3C();
  return sub_23E53857C();
}

uint64_t sub_23E48D734()
{
  sub_23E490FD4();
  return sub_23E538570();
}

uint64_t sub_23E48D75C()
{
  sub_23E490FD4();
  return sub_23E53857C();
}

uint64_t sub_23E48D784()
{
  sub_23E490CE8();
  return sub_23E538570();
}

uint64_t sub_23E48D7AC()
{
  sub_23E490CE8();
  return sub_23E53857C();
}

uint64_t sub_23E48D7D4()
{
  sub_23E49105C();
  return sub_23E538570();
}

uint64_t sub_23E48D7FC()
{
  sub_23E49105C();
  return sub_23E53857C();
}

uint64_t sub_23E48D824()
{
  sub_23E4910A0();
  return sub_23E538570();
}

uint64_t sub_23E48D84C()
{
  sub_23E4910A0();
  return sub_23E53857C();
}

uint64_t sub_23E48D874()
{
  sub_23E4910E4();
  return sub_23E538570();
}

uint64_t sub_23E48D89C()
{
  sub_23E4910E4();
  return sub_23E53857C();
}

uint64_t sub_23E48D8C4()
{
  sub_23E490F90();
  return sub_23E538570();
}

uint64_t sub_23E48D8EC()
{
  sub_23E490F90();
  return sub_23E53857C();
}

uint64_t sub_23E48D914()
{
  sub_23E491018();
  return sub_23E538570();
}

uint64_t sub_23E48D93C()
{
  sub_23E491018();
  return sub_23E53857C();
}

void SymptomError.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B70);
  v96 = *(_QWORD *)(v3 - 8);
  v97 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v95 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B78);
  v93 = *(_QWORD *)(v5 - 8);
  v94 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v92 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B80);
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v89 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B88);
  v34[1] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34[0] = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B90);
  v87 = *(_QWORD *)(v10 - 8);
  v88 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B98);
  v84 = *(_QWORD *)(v12 - 8);
  v85 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BA0);
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v80 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BA8);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BB0);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v74 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BB8);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BC0);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BC8);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v65 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BD0);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BD8);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BE0);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v56 = (char *)v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BE8);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BF0);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47BF8);
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C00);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C08);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C10);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C18);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C20);
  MEMORY[0x24BDAC7A8](v30);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47C28);
  v98 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v32 = (char *)v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E490CA4();
  v99 = v32;
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E48E0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_23E4912C0();
  v4 = *(_QWORD *)(v3 - 112);
  v5 = *(_QWORD *)(v3 - 104);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 120) + 8))(v4, v5);
}

uint64_t SymptomError.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t SymptomError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;

  v109 = a2;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47CF0);
  v85 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v104 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47CF8);
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v103 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D00);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v102 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D08);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v101 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D10);
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v100 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D18);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v99 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D20);
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v98 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D28);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v97 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D30);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v96 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D38);
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v95 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D40);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v94 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D48);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v93 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D50);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v108 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D58);
  v53 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v92 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D60);
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v91 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D68);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v89 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D70);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v107 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D78);
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v90 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D80);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v106 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D88);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v88 = (char *)v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D90);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v87 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47D98);
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v86 = (char *)v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47DA0);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47DA8);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1[3];
  v110 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_23E490CA4();
  v34 = v111;
  sub_23E5384E0();
  if (!v34)
  {
    v41[2] = v28;
    v41[0] = v26;
    v41[1] = v25;
    v111 = v30;
    v42 = v29;
    v35 = sub_23E5381C8();
    if (*(_QWORD *)(v35 + 16) == 1)
      __asm { BR              X9 }
    v36 = sub_23E537ED4();
    swift_allocError();
    v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v38 = &type metadata for SymptomError;
    v39 = v42;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x24BEE26D0], v36);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v32, v39);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v110);
}

void sub_23E48F148()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 65) = 1;
  sub_23E49127C();
  v5 = *(_QWORD *)(v4 - 296);
  v6 = *(_QWORD *)(v4 - 648);
  sub_23E5380C0();
  if (!v1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 640) + 8))(v5, *(_QWORD *)(v4 - 632));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v0, v6);
    *v3 = v2;
    JUMPOUT(0x23E48F11CLL);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23E48F118);
}

void sub_23E48F90C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 22;
  sub_23E490CE8();
  sub_23E5380C0();
  if (v0)
    JUMPOUT(0x23E48F950);
  JUMPOUT(0x23E48F8E4);
}

uint64_t sub_23E48F9F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SymptomError.init(from:)(a1, a2);
}

void sub_23E48FA08(_QWORD *a1)
{
  SymptomError.encode(to:)(a1);
}

BOOL sub_23E48FA1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (qword_256D3EEE0 != -1)
    swift_once();
  v4 = qword_256D89878;
  v5 = sub_23E48CD00(v2, qword_256D89878);
  if ((v6 & 1) == 0)
  {
    v7 = v5;
    v8 = sub_23E48CD00(v3, v4);
    if ((v9 & 1) == 0)
      return v7 < v8;
  }
  sub_23E48CD00(v2, v4);
  return (v11 & 1) == 0;
}

BOOL static SymptomError.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (qword_256D3EEE0 != -1)
    swift_once();
  v4 = qword_256D89878;
  v5 = sub_23E48CD00(v2, qword_256D89878);
  if ((v6 & 1) == 0)
  {
    v7 = v5;
    v8 = sub_23E48CD00(v3, v4);
    if ((v9 & 1) == 0)
      return v7 < v8;
  }
  sub_23E48CD00(v2, v4);
  return (v11 & 1) == 0;
}

BOOL sub_23E48FB54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (qword_256D3EEE0 != -1)
    swift_once();
  v4 = qword_256D89878;
  v5 = sub_23E48CD00(v3, qword_256D89878);
  if ((v6 & 1) == 0)
  {
    v7 = v5;
    v8 = sub_23E48CD00(v2, v4);
    if ((v9 & 1) == 0)
      return v7 >= v8;
  }
  sub_23E48CD00(v3, v4);
  return v11 & 1;
}

BOOL sub_23E48FBEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (qword_256D3EEE0 != -1)
    swift_once();
  v4 = qword_256D89878;
  v5 = sub_23E48CD00(v2, qword_256D89878);
  if ((v6 & 1) == 0)
  {
    v7 = v5;
    v8 = sub_23E48CD00(v3, v4);
    if ((v9 & 1) == 0)
      return v7 >= v8;
  }
  sub_23E48CD00(v2, v4);
  return v11 & 1;
}

BOOL sub_23E48FC84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E48CB84(*a1, *a2);
}

void sub_23E48FC90()
{
  qword_256D89878 = (uint64_t)&unk_250EDAAF8;
}

uint64_t sub_23E48FCA4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E530D18(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23E48FD0C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23E48FD0C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 *__dst;

  v3 = a1;
  v4 = a1[1];
  result = sub_23E53830C();
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_23E490548(0, v4, 1, v3);
      return result;
    }
    goto LABEL_190;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_198;
  v104 = result;
  if (v4 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (unsigned __int8 *)(MEMORY[0x24BEE4AF8] + 32);
    if (v4 != 1)
    {
      v2 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
      goto LABEL_153;
    }
    v103 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_23E537844();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v102 = v3;
  v11 = *v3;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v105 = v4;
  while (2)
  {
    v13 = v10 + 1;
    if (v10 + 1 >= v4)
      goto LABEL_69;
    v14 = *(unsigned __int8 *)(v11 + v13);
    v15 = *(unsigned __int8 *)(v11 + v10);
    if (qword_256D3EEE0 != -1)
      swift_once();
    v16 = *(_QWORD *)(qword_256D89878 + 16);
    if (v16)
    {
      v17 = 0;
      v18 = qword_256D89878 + 32;
      while (*(unsigned __int8 *)(v18 + v17) != v14)
      {
        if (v16 == ++v17)
        {
LABEL_26:
          v20 = 0;
          v4 = v105;
          while (*(unsigned __int8 *)(v18 + v20) != v14)
          {
            v21 = v20 + 1;
            if (__OFADD__(v20, 1))
            {
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
              goto LABEL_192;
            }
            ++v20;
            if (v21 == v16)
              goto LABEL_30;
          }
          v22 = v10 + 2;
          if (v10 + 2 < v105)
          {
            v23 = 1;
            goto LABEL_35;
          }
LABEL_57:
          if (v22 >= v10)
          {
            if (v10 < v22)
            {
              v31 = v22 - 1;
              v32 = v10;
              while (1)
              {
                if (v32 != v31)
                {
                  if (!v11)
                    goto LABEL_196;
                  v33 = *(_BYTE *)(v11 + v32);
                  *(_BYTE *)(v11 + v32) = *(_BYTE *)(v11 + v31);
                  *(_BYTE *)(v11 + v31) = v33;
                }
                v77 = ++v32 < v31--;
                if (!v77)
                  goto LABEL_66;
              }
            }
            goto LABEL_66;
          }
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          result = sub_23E538000();
          __break(1u);
          return result;
        }
      }
      v19 = 0;
      while (*(unsigned __int8 *)(v18 + v19) != v15)
      {
        if (v16 == ++v19)
          goto LABEL_26;
      }
      v23 = v17 < v19;
      v22 = v10 + 2;
      v4 = v105;
      if (v10 + 2 >= v105)
      {
LABEL_56:
        v13 = v22;
        if (v23)
          goto LABEL_57;
LABEL_69:
        if (v13 < v4)
          goto LABEL_70;
        goto LABEL_100;
      }
    }
    else
    {
      v4 = v105;
LABEL_30:
      v22 = v10 + 2;
      if (v10 + 2 >= v4)
        goto LABEL_66;
      v23 = 0;
    }
LABEL_35:
    v24 = qword_256D89878 + 32;
    if (v4 <= v22 + 1)
      v25 = v22 + 1;
    else
      v25 = v4;
    while (!v16)
    {
LABEL_38:
      if (v23)
        goto LABEL_57;
LABEL_39:
      v13 = v22++;
      if (v22 >= v4)
      {
        v22 = v25;
        v13 = v25;
        if (v23)
          goto LABEL_57;
        goto LABEL_69;
      }
    }
    v26 = 0;
    v27 = *(unsigned __int8 *)(v11 + v22);
    do
    {
      if (*(unsigned __int8 *)(v24 + v26) == v27)
      {
        v28 = 0;
        while (*(unsigned __int8 *)(v24 + v28) != *(unsigned __int8 *)(v11 + v13))
        {
          if (v16 == ++v28)
            goto LABEL_48;
        }
        if (v23 == v26 >= v28)
          goto LABEL_56;
        goto LABEL_39;
      }
      ++v26;
    }
    while (v16 != v26);
LABEL_48:
    v29 = 0;
    while (*(unsigned __int8 *)(v24 + v29) != v27)
    {
      v30 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      ++v29;
      if (v30 == v16)
        goto LABEL_38;
    }
    if (v23)
      goto LABEL_39;
LABEL_66:
    v13 = v22;
    if (v22 >= v4)
      goto LABEL_100;
LABEL_70:
    if (__OFSUB__(v13, v10))
      goto LABEL_189;
    if (v13 - v10 >= v104)
      goto LABEL_100;
    if (__OFADD__(v10, v104))
      goto LABEL_191;
    if (v10 + v104 >= v4)
      v34 = v4;
    else
      v34 = v10 + v104;
    if (v34 < v10)
    {
LABEL_192:
      __break(1u);
      goto LABEL_193;
    }
    if (v13 == v34)
    {
LABEL_100:
      if (v13 < v10)
        goto LABEL_188;
      v106 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_23E530794(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
      v46 = *((_QWORD *)v12 + 2);
      v45 = *((_QWORD *)v12 + 3);
      v2 = v46 + 1;
      if (v46 >= v45 >> 1)
        v12 = sub_23E530794((char *)(v45 > 1), v46 + 1, 1, v12);
      *((_QWORD *)v12 + 2) = v2;
      v47 = v12 + 32;
      v48 = &v12[16 * v46 + 32];
      *(_QWORD *)v48 = v10;
      *((_QWORD *)v48 + 1) = v13;
      if (v46)
      {
        while (1)
        {
          v49 = v2 - 1;
          if (v2 >= 4)
          {
            v54 = &v47[16 * v2];
            v55 = *((_QWORD *)v54 - 8);
            v56 = *((_QWORD *)v54 - 7);
            v60 = __OFSUB__(v56, v55);
            v57 = v56 - v55;
            if (v60)
              goto LABEL_172;
            v59 = *((_QWORD *)v54 - 6);
            v58 = *((_QWORD *)v54 - 5);
            v60 = __OFSUB__(v58, v59);
            v52 = v58 - v59;
            v53 = v60;
            if (v60)
              goto LABEL_173;
            v61 = v2 - 2;
            v62 = &v47[16 * v2 - 32];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v60 = __OFSUB__(v63, v64);
            v65 = v63 - v64;
            if (v60)
              goto LABEL_175;
            v60 = __OFADD__(v52, v65);
            v66 = v52 + v65;
            if (v60)
              goto LABEL_178;
            if (v66 >= v57)
            {
              v84 = &v47[16 * v49];
              v86 = *(_QWORD *)v84;
              v85 = *((_QWORD *)v84 + 1);
              v60 = __OFSUB__(v85, v86);
              v87 = v85 - v86;
              if (v60)
                goto LABEL_183;
              v77 = v52 < v87;
              goto LABEL_137;
            }
          }
          else
          {
            if (v2 != 3)
            {
              v78 = *((_QWORD *)v12 + 4);
              v79 = *((_QWORD *)v12 + 5);
              v60 = __OFSUB__(v79, v78);
              v71 = v79 - v78;
              v72 = v60;
              goto LABEL_131;
            }
            v51 = *((_QWORD *)v12 + 4);
            v50 = *((_QWORD *)v12 + 5);
            v60 = __OFSUB__(v50, v51);
            v52 = v50 - v51;
            v53 = v60;
          }
          if ((v53 & 1) != 0)
            goto LABEL_174;
          v61 = v2 - 2;
          v67 = &v47[16 * v2 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v70 = __OFSUB__(v68, v69);
          v71 = v68 - v69;
          v72 = v70;
          if (v70)
            goto LABEL_177;
          v73 = &v47[16 * v49];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v60 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v60)
            goto LABEL_180;
          if (__OFADD__(v71, v76))
            goto LABEL_181;
          if (v71 + v76 >= v52)
          {
            v77 = v52 < v76;
LABEL_137:
            if (v77)
              v49 = v61;
            goto LABEL_139;
          }
LABEL_131:
          if ((v72 & 1) != 0)
            goto LABEL_176;
          v80 = &v47[16 * v49];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v60 = __OFSUB__(v81, v82);
          v83 = v81 - v82;
          if (v60)
            goto LABEL_179;
          if (v83 < v71)
            goto LABEL_148;
LABEL_139:
          v88 = v49 - 1;
          if (v49 - 1 >= v2)
            goto LABEL_168;
          if (!v11)
            goto LABEL_194;
          v89 = &v47[16 * v88];
          v90 = *(_QWORD *)v89;
          v91 = &v47[16 * v49];
          v92 = *((_QWORD *)v91 + 1);
          sub_23E490678((unsigned __int8 *)(v11 + *(_QWORD *)v89), (unsigned __int8 *)(v11 + *(_QWORD *)v91), v11 + v92, __dst);
          if (v1)
            goto LABEL_164;
          if (v92 < v90)
            goto LABEL_169;
          if (v49 > *((_QWORD *)v12 + 2))
            goto LABEL_170;
          *(_QWORD *)v89 = v90;
          *(_QWORD *)&v47[16 * v88 + 8] = v92;
          v93 = *((_QWORD *)v12 + 2);
          if (v49 >= v93)
            goto LABEL_171;
          v2 = v93 - 1;
          memmove(&v47[16 * v49], v91 + 16, 16 * (v93 - 1 - v49));
          *((_QWORD *)v12 + 2) = v93 - 1;
          if (v93 <= 2)
            goto LABEL_148;
        }
      }
      v2 = 1;
LABEL_148:
      v4 = v105;
      v10 = v106;
      if (v106 >= v105)
        goto LABEL_166;
      continue;
    }
    break;
  }
  if (qword_256D3EEE0 != -1)
    swift_once();
  while (2)
  {
    v35 = v13;
LABEL_82:
    v36 = *(_QWORD *)(qword_256D89878 + 16);
    if (!v36)
    {
LABEL_80:
      if (++v13 != v34)
        continue;
      v13 = v34;
      goto LABEL_100;
    }
    break;
  }
  v37 = 0;
  v38 = v35 - 1;
  v39 = *(unsigned __int8 *)(v11 + v35 - 1);
  v40 = *(unsigned __int8 *)(v11 + v35);
  v41 = qword_256D89878 + 32;
  do
  {
    if (*(unsigned __int8 *)(v41 + v37) == v40)
    {
      v42 = 0;
      while (*(unsigned __int8 *)(v41 + v42) != v39)
      {
        if (v36 == ++v42)
          goto LABEL_90;
      }
      if (v37 >= v42)
        goto LABEL_80;
LABEL_96:
      if (!v11)
        goto LABEL_195;
      *(_BYTE *)(v11 + v35) = v39;
      *(_BYTE *)(v11 + v38) = v40;
      --v35;
      if (v38 == v10)
        goto LABEL_80;
      goto LABEL_82;
    }
    ++v37;
  }
  while (v36 != v37);
LABEL_90:
  v43 = 0;
  while (1)
  {
    if (*(unsigned __int8 *)(v41 + v43) == v40)
      goto LABEL_96;
    v44 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    ++v43;
    if (v44 == v36)
      goto LABEL_80;
  }
  __break(1u);
LABEL_166:
  v3 = v102;
  v9 = v103;
LABEL_153:
  v103 = v9;
  if (v2 >= 2)
  {
    v94 = *v3;
    do
    {
      v95 = v2 - 2;
      if (v2 < 2)
        goto LABEL_184;
      if (!v94)
        goto LABEL_197;
      v96 = v12;
      v97 = v12 + 32;
      v98 = *(_QWORD *)&v12[16 * v95 + 32];
      v99 = *(_QWORD *)&v12[16 * v2 + 24];
      sub_23E490678((unsigned __int8 *)(v94 + v98), (unsigned __int8 *)(v94 + *(_QWORD *)&v97[16 * v2 - 16]), v94 + v99, __dst);
      if (v1)
        break;
      if (v99 < v98)
        goto LABEL_185;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v96 = sub_23E530CC8((uint64_t)v96);
      if (v95 >= *((_QWORD *)v96 + 2))
        goto LABEL_186;
      v100 = &v96[16 * v95 + 32];
      *(_QWORD *)v100 = v98;
      *((_QWORD *)v100 + 1) = v99;
      v101 = *((_QWORD *)v96 + 2);
      if (v2 > v101)
        goto LABEL_187;
      memmove(&v96[16 * v2 + 16], &v96[16 * v2 + 32], 16 * (v101 - v2));
      v12 = v96;
      *((_QWORD *)v96 + 2) = v101 - 1;
      v2 = v101 - 1;
    }
    while (v101 > 2);
  }
LABEL_164:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v103 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E490548(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    if (qword_256D3EEE0 != -1)
      result = swift_once();
    do
    {
      v8 = v4;
      while (2)
      {
        v9 = *(_QWORD *)(qword_256D89878 + 16);
        if (v9)
        {
          v10 = 0;
          v11 = v8 - 1;
          v12 = *(unsigned __int8 *)(v7 + v8 - 1);
          v13 = *(unsigned __int8 *)(v7 + v8);
          v14 = qword_256D89878 + 32;
          while (*(unsigned __int8 *)(v14 + v10) != v13)
          {
            if (v9 == ++v10)
            {
LABEL_15:
              v16 = 0;
              while (*(unsigned __int8 *)(v14 + v16) != v13)
              {
                v17 = v16 + 1;
                if (__OFADD__(v16, 1))
                {
                  __break(1u);
                  goto LABEL_25;
                }
                ++v16;
                if (v17 == v9)
                  goto LABEL_5;
              }
              goto LABEL_21;
            }
          }
          v15 = 0;
          while (*(unsigned __int8 *)(v14 + v15) != v12)
          {
            if (v9 == ++v15)
              goto LABEL_15;
          }
          if (v10 >= v15)
            break;
LABEL_21:
          if (!v7)
          {
LABEL_25:
            __break(1u);
            return result;
          }
          *(_BYTE *)(v7 + v8) = v12;
          *(_BYTE *)(v7 + v11) = v13;
          --v8;
          if (v11 != v6)
            continue;
        }
        break;
      }
LABEL_5:
      ++v4;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_23E490678(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  size_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unint64_t v23;
  unsigned __int8 *v24;
  int v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;

  v34 = __src;
  v4 = __dst;
  v5 = (unsigned __int8 *)a3;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v33 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v10 = &v4[v9];
      v32 = &v4[v9];
      v34 = v6;
      if (v7 < v6 && v5 != v6)
      {
        if (qword_256D3EEE0 != -1)
          swift_once();
        while (1)
        {
          v20 = v5 - 1;
          v21 = v10 - 1;
          v22 = *(_QWORD *)(qword_256D89878 + 16);
          if (v22)
            break;
LABEL_60:
          v32 = v10 - 1;
          if (v5 < v10 || v20 >= v10 || v5 != v10)
            *v20 = *v21;
          v24 = v6;
          --v10;
          if (v6 <= v7)
            goto LABEL_66;
LABEL_65:
          v6 = v24;
          --v5;
          if (v10 <= v4)
            goto LABEL_66;
        }
        v23 = 0;
        v24 = v6 - 1;
        v25 = *(v6 - 1);
        v26 = *v21;
        v27 = qword_256D89878 + 32;
        while (*(unsigned __int8 *)(v27 + v23) != v26)
        {
          if (v22 == ++v23)
          {
LABEL_49:
            v29 = 0;
            while (*(unsigned __int8 *)(v27 + v29) != v26)
            {
              v30 = v29 + 1;
              if (__OFADD__(v29, 1))
              {
                __break(1u);
LABEL_68:
                __break(1u);
                goto LABEL_69;
              }
              ++v29;
              if (v30 == v22)
                goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
        v28 = 0;
        while (*(unsigned __int8 *)(v27 + v28) != v25)
        {
          if (v22 == ++v28)
            goto LABEL_49;
        }
        if (v23 >= v28)
          goto LABEL_60;
LABEL_55:
        if (v5 != v6 || v20 >= v6)
          *v20 = v25;
        v34 = v6 - 1;
        if (v24 > v7)
          goto LABEL_65;
      }
      goto LABEL_66;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v32 = v10;
    if (v6 != v7 && v6 < v5)
    {
      if (qword_256D3EEE0 != -1)
LABEL_69:
        swift_once();
      do
      {
        v11 = *v4;
        v12 = *(_QWORD *)(qword_256D89878 + 16);
        if (v12)
        {
          v13 = 0;
          v14 = *v6;
          v15 = qword_256D89878 + 32;
          while (*(unsigned __int8 *)(v15 + v13) != v14)
          {
            if (v12 == ++v13)
            {
LABEL_17:
              v17 = 0;
              while (*(unsigned __int8 *)(v15 + v17) != v14)
              {
                v18 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_68;
                ++v17;
                if (v18 == v12)
                  goto LABEL_27;
              }
LABEL_23:
              v19 = v6 + 1;
              if (v7 < v6 || v7 >= v19 || v7 != v6)
                *v7 = v14;
              goto LABEL_30;
            }
          }
          v16 = 0;
          while (*(unsigned __int8 *)(v15 + v16) != v11)
          {
            if (v12 == ++v16)
              goto LABEL_17;
          }
          if (v13 < v16)
            goto LABEL_23;
        }
LABEL_27:
        if (v7 != v4)
          *v7 = v11;
        v33 = ++v4;
        v19 = v6;
LABEL_30:
        ++v7;
        if (v4 >= v10)
          break;
        v6 = v19;
      }
      while (v19 < v5);
      v34 = v7;
    }
LABEL_66:
    sub_23E5308C0(&v34, &v33, &v32);
    return 1;
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (a1)
  {
    v1 = swift_bridgeObjectRetain();
    v4 = sub_23E24A098(v1);
    sub_23E48FCA4(&v4);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 16))
    {
      v2 = *(unsigned __int8 *)(v4 + 32);
      swift_release();
      __asm { BR              X9 }
    }
    swift_release();
  }
  return 0;
}

unint64_t sub_23E490CA4()
{
  unint64_t result;

  result = qword_256D47C30;
  if (!qword_256D47C30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555330, &type metadata for SymptomError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C30);
  }
  return result;
}

unint64_t sub_23E490CE8()
{
  unint64_t result;

  result = qword_256D47C38;
  if (!qword_256D47C38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5552E0, &type metadata for SymptomError.PrimaryResidentUnreachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C38);
  }
  return result;
}

unint64_t sub_23E490D2C()
{
  unint64_t result;

  result = qword_256D47C40;
  if (!qword_256D47C40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555290, &type metadata for SymptomError.FixInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C40);
  }
  return result;
}

unint64_t sub_23E490D70()
{
  unint64_t result;

  result = qword_256D47C48;
  if (!qword_256D47C48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555240, &type metadata for SymptomError.NeedGeneralFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C48);
  }
  return result;
}

unint64_t sub_23E490DB4()
{
  unint64_t result;

  result = qword_256D47C50;
  if (!qword_256D47C50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5551F0, &type metadata for SymptomError.NeedCDPFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C50);
  }
  return result;
}

unint64_t sub_23E490DF8()
{
  unint64_t result;

  result = qword_256D47C58;
  if (!qword_256D47C58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5551A0, &type metadata for SymptomError.NeedCaptiveLeaseRenewalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C58);
  }
  return result;
}

unint64_t sub_23E490E3C()
{
  unint64_t result;

  result = qword_256D47C60;
  if (!qword_256D47C60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555150, &type metadata for SymptomError.NetworkNotShareableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C60);
  }
  return result;
}

unint64_t sub_23E490E80()
{
  unint64_t result;

  result = qword_256D47C68;
  if (!qword_256D47C68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555100, &type metadata for SymptomError.NeedNetworkProfileInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C68);
  }
  return result;
}

unint64_t sub_23E490EC4()
{
  unint64_t result;

  result = qword_256D47C70;
  if (!qword_256D47C70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5550B0, &type metadata for SymptomError.NeedNetworkProfileFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C70);
  }
  return result;
}

unint64_t sub_23E490F08()
{
  unint64_t result;

  result = qword_256D47C78;
  if (!qword_256D47C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555060, &type metadata for SymptomError.NeedWiFiSecurityFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C78);
  }
  return result;
}

unint64_t sub_23E490F4C()
{
  unint64_t result;

  result = qword_256D47C80;
  if (!qword_256D47C80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555010, &type metadata for SymptomError.Need8021xNetworkFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C80);
  }
  return result;
}

unint64_t sub_23E490F90()
{
  unint64_t result;

  result = qword_256D47C88;
  if (!qword_256D47C88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554FC0, &type metadata for SymptomError.VpnProfileExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C88);
  }
  return result;
}

unint64_t sub_23E490FD4()
{
  unint64_t result;

  result = qword_256D47C90;
  if (!qword_256D47C90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554F70, &type metadata for SymptomError.NoConfiguredTargetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C90);
  }
  return result;
}

unint64_t sub_23E491018()
{
  unint64_t result;

  result = qword_256D47C98;
  if (!qword_256D47C98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554F20, &type metadata for SymptomError.WiFiNetworkMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47C98);
  }
  return result;
}

unint64_t sub_23E49105C()
{
  unint64_t result;

  result = qword_256D47CA0;
  if (!qword_256D47CA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554ED0, &type metadata for SymptomError.StereoErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CA0);
  }
  return result;
}

unint64_t sub_23E4910A0()
{
  unint64_t result;

  result = qword_256D47CA8;
  if (!qword_256D47CA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554E80, &type metadata for SymptomError.StereoNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CA8);
  }
  return result;
}

unint64_t sub_23E4910E4()
{
  unint64_t result;

  result = qword_256D47CB0;
  if (!qword_256D47CB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554E30, &type metadata for SymptomError.StereoVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CB0);
  }
  return result;
}

unint64_t sub_23E491128()
{
  unint64_t result;

  result = qword_256D47CB8;
  if (!qword_256D47CB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554DE0, &type metadata for SymptomError.NeedHardwareFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CB8);
  }
  return result;
}

unint64_t sub_23E49116C()
{
  unint64_t result;

  result = qword_256D47CC0;
  if (!qword_256D47CC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554D90, &type metadata for SymptomError.NeedInternetFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CC0);
  }
  return result;
}

unint64_t sub_23E4911B0()
{
  unint64_t result;

  result = qword_256D47CC8;
  if (!qword_256D47CC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554D40, &type metadata for SymptomError.NeedWiFiPerformanceFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CC8);
  }
  return result;
}

unint64_t sub_23E4911F4()
{
  unint64_t result;

  result = qword_256D47CD0;
  if (!qword_256D47CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554CF0, &type metadata for SymptomError.NeedWiFiFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CD0);
  }
  return result;
}

unint64_t sub_23E491238()
{
  unint64_t result;

  result = qword_256D47CD8;
  if (!qword_256D47CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554CA0, &type metadata for SymptomError.NeedHomeKitFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CD8);
  }
  return result;
}

unint64_t sub_23E49127C()
{
  unint64_t result;

  result = qword_256D47CE0;
  if (!qword_256D47CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554C50, &type metadata for SymptomError.NeediTunesCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CE0);
  }
  return result;
}

unint64_t sub_23E4912C0()
{
  unint64_t result;

  result = qword_256D47CE8;
  if (!qword_256D47CE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554C00, &type metadata for SymptomError.NeediCloudCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47CE8);
  }
  return result;
}

unint64_t sub_23E491308()
{
  unint64_t result;

  result = qword_2543331C8;
  if (!qword_2543331C8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SymptomError, &type metadata for SymptomError);
    atomic_store(result, (unint64_t *)&qword_2543331C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomError()
{
  return &type metadata for SymptomError;
}

uint64_t _s13HomeDataModel12SymptomErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13HomeDataModel12SymptomErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_23E491440 + 4 * byte_23E553F6D[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_23E491474 + 4 * byte_23E553F68[v4]))();
}

uint64_t sub_23E491474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49147C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E491484);
  return result;
}

uint64_t sub_23E491490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E491498);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_23E49149C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4914A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymptomError.CodingKeys()
{
  return &type metadata for SymptomError.CodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeediCloudCredentialCodingKeys()
{
  return &type metadata for SymptomError.NeediCloudCredentialCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeediTunesCredentialCodingKeys()
{
  return &type metadata for SymptomError.NeediTunesCredentialCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedHomeKitFixCodingKeys()
{
  return &type metadata for SymptomError.NeedHomeKitFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiPerformanceFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiPerformanceFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedInternetFixCodingKeys()
{
  return &type metadata for SymptomError.NeedInternetFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedHardwareFixCodingKeys()
{
  return &type metadata for SymptomError.NeedHardwareFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoVersionMismatchCodingKeys()
{
  return &type metadata for SymptomError.StereoVersionMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoNotFoundCodingKeys()
{
  return &type metadata for SymptomError.StereoNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoErrorCodingKeys()
{
  return &type metadata for SymptomError.StereoErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.WiFiNetworkMismatchCodingKeys()
{
  return &type metadata for SymptomError.WiFiNetworkMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NoConfiguredTargetsCodingKeys()
{
  return &type metadata for SymptomError.NoConfiguredTargetsCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.VpnProfileExpiredCodingKeys()
{
  return &type metadata for SymptomError.VpnProfileExpiredCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.Need8021xNetworkFixCodingKeys()
{
  return &type metadata for SymptomError.Need8021xNetworkFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiSecurityFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiSecurityFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedNetworkProfileFixCodingKeys()
{
  return &type metadata for SymptomError.NeedNetworkProfileFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedNetworkProfileInstallCodingKeys()
{
  return &type metadata for SymptomError.NeedNetworkProfileInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NetworkNotShareableCodingKeys()
{
  return &type metadata for SymptomError.NetworkNotShareableCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedCaptiveLeaseRenewalCodingKeys()
{
  return &type metadata for SymptomError.NeedCaptiveLeaseRenewalCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedCDPFixCodingKeys()
{
  return &type metadata for SymptomError.NeedCDPFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedGeneralFixCodingKeys()
{
  return &type metadata for SymptomError.NeedGeneralFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.FixInProgressCodingKeys()
{
  return &type metadata for SymptomError.FixInProgressCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.PrimaryResidentUnreachableCodingKeys()
{
  return &type metadata for SymptomError.PrimaryResidentUnreachableCodingKeys;
}

unint64_t sub_23E491634()
{
  unint64_t result;

  result = qword_256D47DB0;
  if (!qword_256D47DB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554BD8, &type metadata for SymptomError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DB0);
  }
  return result;
}

unint64_t sub_23E49167C()
{
  unint64_t result;

  result = qword_256D47DB8;
  if (!qword_256D47DB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554AF8, &type metadata for SymptomError.NeediCloudCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DB8);
  }
  return result;
}

unint64_t sub_23E4916C4()
{
  unint64_t result;

  result = qword_256D47DC0;
  if (!qword_256D47DC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554B20, &type metadata for SymptomError.NeediCloudCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DC0);
  }
  return result;
}

unint64_t sub_23E49170C()
{
  unint64_t result;

  result = qword_256D47DC8;
  if (!qword_256D47DC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554AA8, &type metadata for SymptomError.NeediTunesCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DC8);
  }
  return result;
}

unint64_t sub_23E491754()
{
  unint64_t result;

  result = qword_256D47DD0;
  if (!qword_256D47DD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554AD0, &type metadata for SymptomError.NeediTunesCredentialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DD0);
  }
  return result;
}

unint64_t sub_23E49179C()
{
  unint64_t result;

  result = qword_256D47DD8;
  if (!qword_256D47DD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554A58, &type metadata for SymptomError.NeedHomeKitFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DD8);
  }
  return result;
}

unint64_t sub_23E4917E4()
{
  unint64_t result;

  result = qword_256D47DE0;
  if (!qword_256D47DE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554A80, &type metadata for SymptomError.NeedHomeKitFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DE0);
  }
  return result;
}

unint64_t sub_23E49182C()
{
  unint64_t result;

  result = qword_256D47DE8;
  if (!qword_256D47DE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554A08, &type metadata for SymptomError.NeedWiFiFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DE8);
  }
  return result;
}

unint64_t sub_23E491874()
{
  unint64_t result;

  result = qword_256D47DF0;
  if (!qword_256D47DF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554A30, &type metadata for SymptomError.NeedWiFiFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DF0);
  }
  return result;
}

unint64_t sub_23E4918BC()
{
  unint64_t result;

  result = qword_256D47DF8;
  if (!qword_256D47DF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5549B8, &type metadata for SymptomError.NeedWiFiPerformanceFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47DF8);
  }
  return result;
}

unint64_t sub_23E491904()
{
  unint64_t result;

  result = qword_256D47E00;
  if (!qword_256D47E00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5549E0, &type metadata for SymptomError.NeedWiFiPerformanceFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E00);
  }
  return result;
}

unint64_t sub_23E49194C()
{
  unint64_t result;

  result = qword_256D47E08;
  if (!qword_256D47E08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554968, &type metadata for SymptomError.NeedInternetFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E08);
  }
  return result;
}

unint64_t sub_23E491994()
{
  unint64_t result;

  result = qword_256D47E10;
  if (!qword_256D47E10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554990, &type metadata for SymptomError.NeedInternetFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E10);
  }
  return result;
}

unint64_t sub_23E4919DC()
{
  unint64_t result;

  result = qword_256D47E18;
  if (!qword_256D47E18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554918, &type metadata for SymptomError.NeedHardwareFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E18);
  }
  return result;
}

unint64_t sub_23E491A24()
{
  unint64_t result;

  result = qword_256D47E20;
  if (!qword_256D47E20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554940, &type metadata for SymptomError.NeedHardwareFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E20);
  }
  return result;
}

unint64_t sub_23E491A6C()
{
  unint64_t result;

  result = qword_256D47E28;
  if (!qword_256D47E28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5548C8, &type metadata for SymptomError.StereoVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E28);
  }
  return result;
}

unint64_t sub_23E491AB4()
{
  unint64_t result;

  result = qword_256D47E30;
  if (!qword_256D47E30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5548F0, &type metadata for SymptomError.StereoVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E30);
  }
  return result;
}

unint64_t sub_23E491AFC()
{
  unint64_t result;

  result = qword_256D47E38;
  if (!qword_256D47E38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554878, &type metadata for SymptomError.StereoNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E38);
  }
  return result;
}

unint64_t sub_23E491B44()
{
  unint64_t result;

  result = qword_256D47E40;
  if (!qword_256D47E40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5548A0, &type metadata for SymptomError.StereoNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E40);
  }
  return result;
}

unint64_t sub_23E491B8C()
{
  unint64_t result;

  result = qword_256D47E48;
  if (!qword_256D47E48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554828, &type metadata for SymptomError.StereoErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E48);
  }
  return result;
}

unint64_t sub_23E491BD4()
{
  unint64_t result;

  result = qword_256D47E50;
  if (!qword_256D47E50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554850, &type metadata for SymptomError.StereoErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E50);
  }
  return result;
}

unint64_t sub_23E491C1C()
{
  unint64_t result;

  result = qword_256D47E58;
  if (!qword_256D47E58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5547D8, &type metadata for SymptomError.WiFiNetworkMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E58);
  }
  return result;
}

unint64_t sub_23E491C64()
{
  unint64_t result;

  result = qword_256D47E60;
  if (!qword_256D47E60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554800, &type metadata for SymptomError.WiFiNetworkMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E60);
  }
  return result;
}

unint64_t sub_23E491CAC()
{
  unint64_t result;

  result = qword_256D47E68;
  if (!qword_256D47E68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554788, &type metadata for SymptomError.NoConfiguredTargetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E68);
  }
  return result;
}

unint64_t sub_23E491CF4()
{
  unint64_t result;

  result = qword_256D47E70;
  if (!qword_256D47E70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5547B0, &type metadata for SymptomError.NoConfiguredTargetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E70);
  }
  return result;
}

unint64_t sub_23E491D3C()
{
  unint64_t result;

  result = qword_256D47E78;
  if (!qword_256D47E78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554738, &type metadata for SymptomError.VpnProfileExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E78);
  }
  return result;
}

unint64_t sub_23E491D84()
{
  unint64_t result;

  result = qword_256D47E80;
  if (!qword_256D47E80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554760, &type metadata for SymptomError.VpnProfileExpiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E80);
  }
  return result;
}

unint64_t sub_23E491DCC()
{
  unint64_t result;

  result = qword_256D47E88;
  if (!qword_256D47E88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5546E8, &type metadata for SymptomError.Need8021xNetworkFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E88);
  }
  return result;
}

unint64_t sub_23E491E14()
{
  unint64_t result;

  result = qword_256D47E90;
  if (!qword_256D47E90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554710, &type metadata for SymptomError.Need8021xNetworkFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E90);
  }
  return result;
}

unint64_t sub_23E491E5C()
{
  unint64_t result;

  result = qword_256D47E98;
  if (!qword_256D47E98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554698, &type metadata for SymptomError.NeedWiFiSecurityFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47E98);
  }
  return result;
}

unint64_t sub_23E491EA4()
{
  unint64_t result;

  result = qword_256D47EA0;
  if (!qword_256D47EA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5546C0, &type metadata for SymptomError.NeedWiFiSecurityFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EA0);
  }
  return result;
}

unint64_t sub_23E491EEC()
{
  unint64_t result;

  result = qword_256D47EA8;
  if (!qword_256D47EA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554648, &type metadata for SymptomError.NeedNetworkProfileFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EA8);
  }
  return result;
}

unint64_t sub_23E491F34()
{
  unint64_t result;

  result = qword_256D47EB0;
  if (!qword_256D47EB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554670, &type metadata for SymptomError.NeedNetworkProfileFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EB0);
  }
  return result;
}

unint64_t sub_23E491F7C()
{
  unint64_t result;

  result = qword_256D47EB8;
  if (!qword_256D47EB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5545F8, &type metadata for SymptomError.NeedNetworkProfileInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EB8);
  }
  return result;
}

unint64_t sub_23E491FC4()
{
  unint64_t result;

  result = qword_256D47EC0;
  if (!qword_256D47EC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554620, &type metadata for SymptomError.NeedNetworkProfileInstallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EC0);
  }
  return result;
}

unint64_t sub_23E49200C()
{
  unint64_t result;

  result = qword_256D47EC8;
  if (!qword_256D47EC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5545A8, &type metadata for SymptomError.NetworkNotShareableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EC8);
  }
  return result;
}

unint64_t sub_23E492054()
{
  unint64_t result;

  result = qword_256D47ED0;
  if (!qword_256D47ED0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5545D0, &type metadata for SymptomError.NetworkNotShareableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47ED0);
  }
  return result;
}

unint64_t sub_23E49209C()
{
  unint64_t result;

  result = qword_256D47ED8;
  if (!qword_256D47ED8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554558, &type metadata for SymptomError.NeedCaptiveLeaseRenewalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47ED8);
  }
  return result;
}

unint64_t sub_23E4920E4()
{
  unint64_t result;

  result = qword_256D47EE0;
  if (!qword_256D47EE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554580, &type metadata for SymptomError.NeedCaptiveLeaseRenewalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EE0);
  }
  return result;
}

unint64_t sub_23E49212C()
{
  unint64_t result;

  result = qword_256D47EE8;
  if (!qword_256D47EE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554508, &type metadata for SymptomError.NeedCDPFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EE8);
  }
  return result;
}

unint64_t sub_23E492174()
{
  unint64_t result;

  result = qword_256D47EF0;
  if (!qword_256D47EF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554530, &type metadata for SymptomError.NeedCDPFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EF0);
  }
  return result;
}

unint64_t sub_23E4921BC()
{
  unint64_t result;

  result = qword_256D47EF8;
  if (!qword_256D47EF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5544B8, &type metadata for SymptomError.NeedGeneralFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47EF8);
  }
  return result;
}

unint64_t sub_23E492204()
{
  unint64_t result;

  result = qword_256D47F00;
  if (!qword_256D47F00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5544E0, &type metadata for SymptomError.NeedGeneralFixCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F00);
  }
  return result;
}

unint64_t sub_23E49224C()
{
  unint64_t result;

  result = qword_256D47F08;
  if (!qword_256D47F08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554468, &type metadata for SymptomError.FixInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F08);
  }
  return result;
}

unint64_t sub_23E492294()
{
  unint64_t result;

  result = qword_256D47F10;
  if (!qword_256D47F10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554490, &type metadata for SymptomError.FixInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F10);
  }
  return result;
}

unint64_t sub_23E4922DC()
{
  unint64_t result;

  result = qword_256D47F18;
  if (!qword_256D47F18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554418, &type metadata for SymptomError.PrimaryResidentUnreachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F18);
  }
  return result;
}

unint64_t sub_23E492324()
{
  unint64_t result;

  result = qword_256D47F20;
  if (!qword_256D47F20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554440, &type metadata for SymptomError.PrimaryResidentUnreachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F20);
  }
  return result;
}

unint64_t sub_23E49236C()
{
  unint64_t result;

  result = qword_256D47F28;
  if (!qword_256D47F28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554B48, &type metadata for SymptomError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F28);
  }
  return result;
}

unint64_t sub_23E4923B4()
{
  unint64_t result;

  result = qword_256D47F30;
  if (!qword_256D47F30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E554B70, &type metadata for SymptomError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47F30);
  }
  return result;
}

uint64_t sub_23E4923F8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023E56AB10 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E56AB30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6F486465656ELL && a2 == 0xEE0078694674694BLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x694669576465656ELL && a2 == 0xEB00000000786946 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023E56AB50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65746E496465656ELL && a2 == 0xEF78694674656E72 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x647261486465656ELL && a2 == 0xEF78694665726177 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56AB70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F4E6F6572657473 && a2 == 0xEE00646E756F4674 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x72456F6572657473 && a2 == 0xEB00000000726F72 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AB90 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56ABB0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56ABD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56ABF0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AC10 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56AC30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023E56AC50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AC70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E56AC90 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x465044436465656ELL && a2 == 0xEA00000000007869 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x656E65476465656ELL && a2 == 0xEE007869466C6172 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x6F72506E49786966 && a2 == 0xED00007373657267 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023E56ACB0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 22;
    else
      return 23;
  }
}

uint64_t LegacyHFImageIdentifiers.caPackageIdentifier.getter(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  if (qword_256D3EEE8 != -1)
    swift_once();
  v2 = qword_256D89880;
  v3 = LegacyHFImageIdentifiers.rawValue.getter(a1);
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_23E211350(v3, v4), (v6 & 1) != 0))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_23E492E14()
{
  unint64_t result;

  result = sub_23E20E7D0((uint64_t)&unk_250EDF0D8);
  qword_256D89880 = result;
  return result;
}

uint64_t sub_23E492E38(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v17 = sub_23E536F80();
  v4 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_23E2058F8(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v16 = v2;
    v10 = 0;
    v8 = v18;
    v2 = a1 & 0xC000000000000001;
    while (v7 != v10)
    {
      if (v2)
        v11 = (id)MEMORY[0x24264F148](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_uniqueIdentifier, v16);
      sub_23E536F68();

      v18 = v8;
      v15 = *(_QWORD *)(v8 + 16);
      v14 = *(_QWORD *)(v8 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_23E2058F8(v14 > 1, v15 + 1, 1);
        v8 = v18;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v15, v6, v17);
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_23E493004(uint64_t a1, _BYTE *a2, _QWORD *a3, _BYTE *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char v14;
  char v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v22;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v7 = a1;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v8 = a6;
    v9 = 0;
    v10 = (char *)(a1 + 48);
    v11 = MEMORY[0x24BEE4AF8];
    while (v9 < *(_QWORD *)(v7 + 16))
    {
      v13 = (void *)*((_QWORD *)v10 - 2);
      v12 = (void *)*((_QWORD *)v10 - 1);
      v14 = *v10;
      v27[0] = v13;
      v27[1] = v12;
      v28 = v14;
      sub_23E23C270(v13, v12, v14);
      v15 = sub_23E493550((uint64_t)v27, a2, a3, a4, a5, v8);
      if (v6)
      {
        sub_23E23C24C(v13, v12, v14);
        swift_release();
        goto LABEL_15;
      }
      if ((v15 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v29 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23E2CB3D8(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v11 = v29;
        }
        v18 = *(_QWORD *)(v11 + 16);
        v17 = *(_QWORD *)(v11 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_23E2CB3D8(v17 > 1, v18 + 1, 1);
          v11 = v29;
        }
        *(_QWORD *)(v11 + 16) = v18 + 1;
        v19 = v11 + 24 * v18;
        *(_QWORD *)(v19 + 32) = v13;
        *(_QWORD *)(v19 + 40) = v12;
        *(_BYTE *)(v19 + 48) = v14;
        v8 = a6;
        v7 = a1;
      }
      else
      {
        sub_23E23C24C(v13, v12, v14);
      }
      ++v9;
      v10 += 24;
      if (v22 == v9)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E4931A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = 0;
  v39 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v38 = a1;
  v33 = (char *)&v32 - v11;
  if ((v16 & v14) != 0)
    goto LABEL_6;
LABEL_7:
  v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
  }
  else
  {
    if (v20 >= v36)
      goto LABEL_33;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    ++v13;
    if (v21)
      goto LABEL_22;
    v13 = v20 + 1;
    if (v20 + 1 >= v36)
      goto LABEL_33;
    v21 = *(_QWORD *)(v35 + 8 * v13);
    if (v21)
      goto LABEL_22;
    v13 = v20 + 2;
    if (v20 + 2 >= v36)
      goto LABEL_33;
    v21 = *(_QWORD *)(v35 + 8 * v13);
    if (v21)
      goto LABEL_22;
    v13 = v20 + 3;
    if (v20 + 3 >= v36)
      goto LABEL_33;
    v21 = *(_QWORD *)(v35 + 8 * v13);
    if (v21)
      goto LABEL_22;
    v22 = v20 + 4;
    if (v22 >= v36)
    {
LABEL_33:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_34:
      swift_release();
      sub_23E273104((uint64_t)v5);
      return v39;
    }
    v21 = *(_QWORD *)(v35 + 8 * v22);
    if (v21)
    {
      v13 = v22;
LABEL_22:
      v17 = (v21 - 1) & v21;
      for (i = __clz(__rbit64(v21)) + (v13 << 6); ; i = v18 | (v13 << 6))
      {
        v23 = *(_QWORD *)(v7 + 72);
        (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, *(_QWORD *)(v38 + 48) + v23 * i, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
          break;
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v12, v5, v6);
        v25 = *v37;
        if (*(_QWORD *)(*v37 + 16)
          && (v26 = sub_23E1E3300((uint64_t)v12), (v27 & 1) != 0)
          && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26) + 16) >= 5uLL)
        {
          v24(v34, v12, v6);
          v28 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E2058F8(0, *(_QWORD *)(v28 + 16) + 1, 1);
            v28 = v39;
          }
          v30 = *(_QWORD *)(v28 + 16);
          v29 = *(_QWORD *)(v28 + 24);
          v31 = v30 + 1;
          if (v30 >= v29 >> 1)
          {
            v32 = v30 + 1;
            sub_23E2058F8(v29 > 1, v30 + 1, 1);
            v31 = v32;
            v28 = v39;
          }
          *(_QWORD *)(v28 + 16) = v31;
          result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v28+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ v30 * v23, v34, v6);
          v39 = v28;
          v12 = v33;
          if (!v17)
            goto LABEL_7;
        }
        else
        {
          result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          if (!v17)
            goto LABEL_7;
        }
LABEL_6:
        v18 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
      }
      goto LABEL_34;
    }
    while (1)
    {
      v13 = v22 + 1;
      if (__OFADD__(v22, 1))
        break;
      if (v13 >= v36)
        goto LABEL_33;
      v21 = *(_QWORD *)(v35 + 8 * v13);
      ++v22;
      if (v21)
        goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E493550(uint64_t a1, _BYTE *a2, _QWORD *a3, _BYTE *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  void *v25;
  id v26;
  void (*v27)(char *, uint64_t);
  _QWORD *v28;
  void *v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  void *v44;
  uint64_t result;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  id v56;
  _BYTE *v57;
  char *v58;
  uint64_t *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a3;
  v59 = a6;
  v57 = a4;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v57 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v57 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v57 - v19;
  v22 = *(_QWORD **)a1;
  v21 = *(void **)(a1 + 8);
  v23 = *(unsigned __int8 *)(a1 + 16);
  if ((v23 - 1) < 2)
  {
    v24 = *a5;
    v25 = v21;
    sub_23E23C270(v22, v21, v23);
    swift_bridgeObjectRetain();
    v26 = objc_msgSend(v25, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v26) = sub_23E20FAB0((uint64_t)v20, v24);
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v20, v9);
    if ((v26 & 1) != 0)
    {
      v28 = v22;
      v29 = v25;
LABEL_4:
      v30 = v23;
LABEL_9:
      sub_23E23C24C(v28, v29, v30);
      return 0;
    }
    v60 = v22;
    v36 = v25;
    v37 = objc_msgSend(v25, sel_uniqueIdentifier);
    sub_23E536F68();

    v38 = v59;
    v39 = *v59;
    if (*(_QWORD *)(*v59 + 16) && (v40 = sub_23E1E3300((uint64_t)v15), (v41 & 1) != 0))
    {
      v42 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v40);
      swift_bridgeObjectRetain();
      v27(v15, v9);
      v43 = sub_23E2101B4((uint64_t)v60, v42);
      swift_bridgeObjectRelease();
      v44 = v36;
      if (v43)
      {
        v28 = v60;
        v29 = v36;
        goto LABEL_4;
      }
    }
    else
    {
      v27(v15, v9);
      v44 = v36;
    }
    v46 = objc_msgSend(v44, sel_uniqueIdentifier, v57);
    v47 = (uint64_t)v58;
    sub_23E536F68();

    v48 = *v38;
    if (*(_QWORD *)(*v38 + 16) && (v49 = sub_23E1E3300(v47), (v50 & 1) != 0))
    {
      v51 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v49);
      swift_bridgeObjectRetain();
    }
    else
    {
      v51 = MEMORY[0x24BEE4B08];
    }
    v27((char *)v47, v9);
    v62 = v51;
    v52 = v60;
    sub_23E3819C8(&v61, (uint64_t)v60);
    v53 = objc_msgSend(v36, sel_uniqueIdentifier);
    sub_23E23C24C(v52, v36, v23);
    sub_23E536F68();

    v54 = v62;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = *v38;
    *v38 = 0x8000000000000000;
    sub_23E21C24C(v54, (uint64_t)v20, isUniquelyReferenced_nonNull_native);
    *v38 = v61;
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (!v23)
  {
    v31 = *v60;
    v32 = v22;
    v33 = v22;
    v34 = v21;
    sub_23E23C270(v33, v21, 0);
    swift_bridgeObjectRetain();
    v35 = objc_msgSend(v32, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v35) = sub_23E20FAB0((uint64_t)v20, v31);
    swift_bridgeObjectRelease();
    v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v20, v9);
    if ((v35 & 1) != 0 || (*v57 & 1) != 0)
    {
      v28 = v32;
      v29 = v34;
      v30 = 0;
      goto LABEL_9;
    }
    v56 = objc_msgSend(v32, sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1FFF40((uint64_t)v20, v18);
    sub_23E23C24C(v32, v34, 0);
LABEL_24:
    v27(v20, v9);
    return 1;
  }
  if ((*a2 & 1) != 0)
    return 0;
  result = 1;
  *a2 = 1;
  return result;
}

_QWORD *sub_23E493984(uint64_t a1, uint64_t *a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  id v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  id v45;
  id v46;
  _QWORD v48[2];
  char *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  id v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;

  v50 = a4;
  v51 = a3;
  v54 = a2;
  v6 = sub_23E536F80();
  v60 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)v48 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v61 = v10;
  v59 = v11;
  v48[0] = a1;
  v48[1] = v4;
  v14 = a1 + 32;
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v52 = a1 + 32;
  v53 = v13;
  do
  {
    v19 = v14 + 24 * v15;
    v21 = *(id *)v19;
    v20 = *(id *)(v19 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v19 + 16);
    if ((_DWORD)v22 == 1)
    {
      v57 = v15;
      v58 = v16;
      v23 = *v54;
      sub_23E23C270(v21, v20, 1);
      v55 = v21;
      sub_23E23C270(v21, v20, 1);
      swift_bridgeObjectRetain();
      v56 = v20;
      v24 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_23E536F68();

      v62 = v23;
      if (*(_QWORD *)(v23 + 16))
      {
        v25 = v62;
        sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
        v26 = sub_23E5374CC();
        v27 = -1 << *(_BYTE *)(v25 + 32);
        v28 = v26 & ~v27;
        v29 = v25 + 56;
        if (((*(_QWORD *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
        {
          v30 = ~v27;
          v31 = v60[9];
          v32 = (void (*)(uint64_t, unint64_t, uint64_t))v60[2];
          while (1)
          {
            v33 = v61;
            v34 = v59;
            v32(v59, *(_QWORD *)(v62 + 48) + v31 * v28, v61);
            sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
            v35 = sub_23E537514();
            v36 = (void (*)(uint64_t, uint64_t))v60[1];
            v36(v34, v33);
            if ((v35 & 1) != 0)
              break;
            v28 = (v28 + 1) & v30;
            if (((*(_QWORD *)(v29 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
              goto LABEL_12;
          }
          swift_bridgeObjectRelease();
          v36((uint64_t)v63, v61);
          v46 = v55;
          v45 = v56;
          sub_23E23C24C(v55, v56, 1);
          sub_23E23C24C(v46, v45, 1);
          v13 = v53;
          v16 = v58;
          goto LABEL_4;
        }
      }
LABEL_12:
      swift_bridgeObjectRelease();
      v37 = v61;
      v38 = (void (*)(char *, uint64_t))v60[1];
      v38(v63, v61);
      v16 = v58;
      if (*v51 == 1)
      {
        v18 = v55;
        v17 = v56;
        sub_23E23C24C(v55, v56, 1);
        sub_23E23C24C(v18, v17, 1);
        v13 = v53;
LABEL_4:
        v14 = v52;
        v15 = v57;
        goto LABEL_5;
      }
      v20 = v56;
      v39 = objc_msgSend(v56, sel_uniqueIdentifier);
      v40 = v59;
      sub_23E536F68();

      LOBYTE(v39) = sub_23E20FAB0(v40, v50);
      v38((char *)v40, v37);
      v15 = v57;
      if ((v39 & 1) != 0)
      {
        v22 = objc_msgSend(v20, sel_uniqueIdentifier);
        v41 = v49;
        sub_23E536F68();

        sub_23E1FFF40(v40, v41);
        v38((char *)v40, v37);
        sub_23E23C24C(v55, v20, 1);
        LOBYTE(v22) = 0;
        v21 = v20;
        v20 = 0;
      }
      else
      {
        LOBYTE(v22) = 1;
        v21 = v55;
        sub_23E23C24C(v55, v20, 1);
      }
      v14 = v52;
      v13 = v53;
    }
    else
    {
      sub_23E23C270(*(id *)v19, *(id *)(v19 + 8), *(_BYTE *)(v19 + 16));
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23E51FBA0(0, v16[2] + 1, 1, v16);
    v43 = v16[2];
    v42 = v16[3];
    if (v43 >= v42 >> 1)
      v16 = sub_23E51FBA0((_QWORD *)(v42 > 1), v43 + 1, 1, v16);
    v16[2] = v43 + 1;
    v44 = &v16[3 * v43];
    v44[4] = v21;
    v44[5] = v20;
    *((_BYTE *)v44 + 48) = (_BYTE)v22;
LABEL_5:
    ++v15;
  }
  while (v15 != v13);
  swift_bridgeObjectRelease();
  return v16;
}

void _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;

  v4 = 0;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v53 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)&v53 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v66 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BEE4B08];
  v74 = MEMORY[0x24BEE4B08];
  v73 = 0;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v69 = v6;
    v18 = (void **)(a1 + 40);
    v19 = (_BYTE *)(a1 + 48);
    v61 = v17;
    swift_bridgeObjectRetain();
    v20 = a1 + 32;
    v21 = v61;
    v22 = 1;
    v23 = (void **)(a1 + 32);
    v60 = a1 + 32;
    v55 = a2;
    v56 = a1;
    v54 = v9;
    do
    {
      v26 = (unint64_t)*v23;
      v27 = (unint64_t)*v18;
      if (*v19)
      {
        if (*v19 == 3 && (v27 | v26) == 0)
        {
          v59 = v22;
          v30 = sub_23E492E38(a2);
          v65 = sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
          v31 = sub_23E537A24();
          v64 = *(_QWORD *)(v30 + 16);
          if (v64)
          {
            v57 = v30;
            v58 = v4;
            v32 = 0;
            v34 = v68;
            v33 = v69;
            v63 = v30 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
            v35 = *(_QWORD *)(v69 + 72);
            v36 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
            v37 = v66;
            v36(v66, v63, v5);
            while (1)
            {
              v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
              v40(v37, 0, 1, v5);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v37, 1, v5) == 1)
              {
                a2 = v55;
                v4 = v58;
                v9 = v54;
                goto LABEL_27;
              }
              v67 = v32;
              (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v34, v37, v5);
              swift_bridgeObjectRetain();
              v41 = sub_23E5374CC();
              v42 = -1 << *(_BYTE *)(v31 + 32);
              v43 = v41 & ~v42;
              v44 = *(_QWORD *)(v31 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43;
              v62 = v40;
              if ((v44 & 1) != 0)
              {
                v45 = ~v42;
                while (1)
                {
                  v36(v12, *(_QWORD *)(v31 + 48) + v43 * v35, v5);
                  sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
                  v46 = sub_23E537514();
                  v39 = *(void (**)(char *, uint64_t))(v69 + 8);
                  v39(v12, v5);
                  if ((v46 & 1) != 0)
                    break;
                  v43 = (v43 + 1) & v45;
                  if (((*(_QWORD *)(v31 + 56 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
                    goto LABEL_14;
                }
                swift_bridgeObjectRelease();
                v34 = v68;
                v33 = v69;
              }
              else
              {
LABEL_14:
                swift_bridgeObjectRelease();
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v34 = v68;
                v36(v12, (unint64_t)v68, v5);
                v71 = v31;
                sub_23E2009CC((uint64_t)v12, v43, isUniquelyReferenced_nonNull_native);
                v31 = v71;
                swift_bridgeObjectRelease();
                v33 = v69;
                v39 = *(void (**)(char *, uint64_t))(v69 + 8);
              }
              v32 = v67 + 1;
              v39(v34, v5);
              v37 = v66;
              if (v32 == v64)
                break;
              v36(v66, v63 + v35 * v32, v5);
            }
            a2 = v55;
            v4 = v58;
            v9 = v54;
            v62(v66, 1, 1, v5);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v66, 1, 1, v5);
          }
LABEL_27:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23E23C24C(0, 0, 3);
          v74 = v31;
          v73 = 1;
          v20 = v60;
          v21 = v61;
          v22 = v59;
          if (v59 == v61)
          {
LABEL_28:
            swift_bridgeObjectRelease();
            v16 = MEMORY[0x24BEE4B08];
            goto LABEL_29;
          }
        }
        else if (v22 == v21)
        {
          goto LABEL_28;
        }
      }
      else
      {
        v28 = v22;
        v29 = objc_msgSend((id)v26, sel_uniqueIdentifier);
        sub_23E536F68();

        sub_23E1FFF40((uint64_t)v12, v9);
        sub_23E23C24C((id)v26, (id)v27, 0);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v12, v5);
        sub_23E23C24C((id)v26, (id)v27, 0);
        v21 = v61;
        if (v28 == v61)
          goto LABEL_28;
        v22 = v28;
        v20 = v60;
      }
      v23 = (void **)(v20 + 24 * v22);
      v18 = v23 + 1;
      v19 = v23 + 2;
    }
    while (!__OFADD__(v22++, 1));
    __break(1u);
  }
  else
  {
LABEL_29:
    v72 = 0;
    v71 = v16;
    v70 = MEMORY[0x24BEE4B00];
    v47 = swift_bridgeObjectRetain();
    sub_23E493004(v47, &v72, &v71, &v73, &v74, &v70);
    v49 = v48;
    v50 = swift_bridgeObjectRetain();
    v51 = sub_23E4931A0(v50, &v70);
    v52 = sub_23E4FD850(v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23E493984(v49, &v71, &v72, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E4943C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EF15C0[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E4944BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4944CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TemperatureStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D47F90);
}

uint64_t sub_23E4944F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E494500()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for HumidityStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D48020);
}

uint64_t sub_23E494524()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E494534()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for AirQualityStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D480B0);
}

uint64_t sub_23E494558()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E494568()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for BlindsStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D48140);
}

uint64_t sub_23E49458C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E49459C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for FanStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D481D0);
}

uint64_t sub_23E4945C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4945D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for AirPurifierStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D48260);
}

uint64_t sub_23E4945F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TemperatureStatusItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  v20 = sub_23E4FDBC4((uint64_t)&unk_250EDE078);
  v21 = type metadata accessor for StaticService();
  sub_23E53704C();
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.temperatureGaugeData(from:)(a1, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D3F310);
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v17 = v19;
    sub_23E1E2F50((uint64_t)v14, v19, type metadata accessor for TemperatureStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    return sub_23E1E2FA0((uint64_t)v14, type metadata accessor for TemperatureStatusItem);
  }
}

uint64_t sub_23E49481C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HumidityStatusItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  v20 = sub_23E4FDBC4((uint64_t)&unk_250EDE0A0);
  v21 = type metadata accessor for StaticService();
  sub_23E53704C();
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(a1, 1, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D3F310);
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v17 = v19;
    sub_23E1E2F50((uint64_t)v14, v19, type metadata accessor for HumidityStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    return sub_23E1E2FA0((uint64_t)v14, type metadata accessor for HumidityStatusItem);
  }
}

uint64_t sub_23E494A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for IconTextValueStringDataHolder();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for AirQualityStatusItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = (uint64_t)&v15[*(int *)(v13 + 20)];
  v18[16] = 4;
  v19 = type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.airQualityGaugeData(from:)(a1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_256D3F310);
    sub_23E1E2FA0(v16, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FDC((uint64_t)v10, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2F50((uint64_t)v15, a2, type metadata accessor for AirQualityStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    return sub_23E1E2FA0((uint64_t)v15, type metadata accessor for AirQualityStatusItem);
  }
}

uint64_t sub_23E494C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  int *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  _QWORD v125[2];
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  _QWORD v130[2];
  char v131;
  uint64_t v132;
  char v133;

  v97 = a2;
  v3 = sub_23E536F80();
  v101 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v100 = (char *)&v89 - v13;
  v14 = type metadata accessor for StaticService();
  v116 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v112 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v115 = (uint64_t)&v89 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v114 = (uint64_t)&v89 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v117 = (uint64_t)&v89 - v21;
  v107 = type metadata accessor for StaticAccessory(0);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v111 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FanStatusItem(0);
  v98 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = v24;
  v27 = *(int *)(v24 + 20);
  v94 = v26;
  v28 = (uint64_t)&v26[v27];
  v123 = sub_23E4FDBC4((uint64_t)&unk_250EDE0C8);
  v122 = v14;
  v129 = v14;
  sub_23E53704C();
  v29 = a1;
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  v90 = v28;
  swift_storeEnumTagMultiPayload();
  v30 = sub_23E4FDBC4((uint64_t)&unk_250EDE0F0);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  v32 = *(_BYTE *)(a1 + 32);
  v33 = *(_DWORD *)(v29 + 36);
  v34 = sub_23E26B68C(v29);
  if ((v36 & 1) != 0)
    goto LABEL_40;
  if (v33 != (_DWORD)v35)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_40:
    __break(1u);
    JUMPOUT(0x23E495D2CLL);
  }
  v105 = v33;
  v95 = v31;
  v91 = v5;
  v96 = v3;
  v92 = v8;
  v93 = (int *)v6;
  v104 = 1 << v32;
  if (v34 == 1 << v32)
  {
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  v103 = v29 + 56;
  v37 = v34;
  v38 = v35;
  swift_bridgeObjectRetain();
  v39 = v38;
  v40 = v37;
  v110 = 0;
  v41 = v117;
  v113 = v12;
  v102 = v29;
  while (1)
  {
    if (v40 < 0 || v40 >= 1 << *(_BYTE *)(v29 + 32))
      goto LABEL_34;
    if (((*(_QWORD *)(v103 + (((unint64_t)v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      goto LABEL_35;
    if (*(_DWORD *)(v29 + 36) != (_DWORD)v39)
      goto LABEL_36;
    v108 = v39;
    v42 = *(_QWORD *)(v29 + 48);
    v43 = *(_QWORD *)(v106 + 72);
    v109 = v40;
    v44 = v111;
    v45 = sub_23E1E2F50(v42 + v43 * v40, v111, type metadata accessor for StaticAccessory);
    v46 = *(_QWORD *)(v44 + *(int *)(v107 + 80));
    MEMORY[0x24BDAC7A8](v45);
    *(&v89 - 2) = v44;
    swift_bridgeObjectRetain();
    v47 = v110;
    v48 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v89 - 4), v46);
    v110 = v47;
    swift_bridgeObjectRelease();
    v49 = MEMORY[0x24BEE4AF8];
    v130[0] = MEMORY[0x24BEE4AF8];
    v119 = *(_QWORD *)(v48 + 16);
    if (!v119)
      goto LABEL_20;
    v50 = 0;
    v118 = v48;
    do
    {
      if (v50 >= *(_QWORD *)(v48 + 16))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v52 = *(_QWORD *)(v116 + 72);
      v121 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
      v120 = v52;
      sub_23E1E2F50(v48 + v121 + v52 * v50, v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v53 = *(unsigned __int8 *)(v41 + *(int *)(v122 + 92));
      v54 = v114;
      sub_23E1E2F50(v41, v114, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v53 == 53)
        LOBYTE(v53) = *(_BYTE *)(v54 + *(int *)(v122 + 84));
      sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (*(_QWORD *)(v30 + 16))
      {
        v55 = sub_23E53845C();
        v124 = v53;
        ServiceKind.rawValue.getter(v55);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        v56 = sub_23E5384A4() & ~(-1 << *(_BYTE *)(v30 + 32));
        if (((*(_QWORD *)(v30 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFF8)) >> v56) & 1) != 0)
          __asm { BR              X9 }
      }
      v41 = v117;
      v51 = v115;
      sub_23E1E2F50(v117, v115, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2FA0(v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v12 = v113;
      v48 = v118;
      ++v50;
    }
    while (v50 != v119);
    v49 = v130[0];
LABEL_20:
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v111, type metadata accessor for StaticAccessory);
    v57 = *(_QWORD *)(v49 + 16);
    swift_release();
    if (v57)
      break;
    v29 = v102;
    v40 = sub_23E2CD280(v109, v108, 0, v102);
    if ((v58 & 1) != 0)
      goto LABEL_39;
    if (v105 != (_DWORD)v39)
      goto LABEL_37;
    if (v40 == v104)
    {
LABEL_24:
      v59 = 1;
      v60 = 1 << *(_BYTE *)(v29 + 32);
      v61 = *(unsigned int *)(v29 + 36);
      v62 = v60;
      v63 = v61;
      goto LABEL_26;
    }
  }
  v59 = 0;
  v29 = v102;
  v61 = *(unsigned int *)(v102 + 36);
  v60 = 1 << *(_BYTE *)(v102 + 32);
  v62 = v109;
  v63 = v108;
LABEL_26:
  v130[0] = v62;
  v130[1] = v63;
  v131 = 0;
  v132 = 0;
  v133 = v59;
  v125[0] = v60;
  v125[1] = v61;
  v126 = 0;
  v127 = 0;
  v128 = 1;
  v64 = sub_23E497A60((uint64_t)v130, (uint64_t)v125, v29, (void (*)(uint64_t *__return_ptr, char *))sub_23E498078);
  sub_23E23D578(v62, v63, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v65 = v96;
  v66 = (uint64_t)v100;
  if (v64 <= 0)
  {
    sub_23E1E2FA0(v90, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v97, 1, 1, v99);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, 1, 1, v96);
    static String.hfLocalized(_:)();
    v68 = v67;
    v70 = v69;
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v71 = swift_allocObject();
    v72 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v71 + 16) = xmmword_23E539650;
    v73 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v71 + 56) = v72;
    *(_QWORD *)(v71 + 64) = v73;
    *(_QWORD *)(v71 + 32) = v64;
    v74 = sub_23E537574();
    v76 = v75;
    swift_bridgeObjectRelease();
    v77 = v101;
    swift_bridgeObjectRelease();
    sub_23E1FC2F8(v66, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v12, 1, v65) == 1)
    {
      v78 = v91;
      sub_23E536F74();
      sub_23E1E7C64(v66, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
      v79 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
    }
    else
    {
      sub_23E1E7C64(v66, &qword_254333F50);
      v79 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
      v78 = v91;
      v79(v91, v12, v65);
    }
    v81 = v97;
    v82 = (uint64_t)v92;
    v79(v92, v78, v65);
    v83 = v93;
    v84 = (_QWORD *)(v82 + v93[5]);
    *v84 = 0;
    v84[1] = 0xE000000000000000;
    v85 = (_QWORD *)(v82 + v83[6]);
    *v85 = v68;
    v85[1] = v70;
    v86 = (uint64_t *)(v82 + v83[7]);
    *v86 = v74;
    v86[1] = v76;
    v87 = v82 + v83[8];
    *(_QWORD *)v87 = 0;
    *(_QWORD *)(v87 + 8) = 0;
    *(_QWORD *)(v87 + 16) = 0;
    *(_BYTE *)(v87 + 24) = -1;
    v88 = (uint64_t)v94;
    sub_23E1E2FDC(v82, (uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2F50(v88, v81, type metadata accessor for FanStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56))(v81, 0, 1, v99);
    return sub_23E1E2FA0(v88, type metadata accessor for FanStatusItem);
  }
}

uint64_t sub_23E495ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t result;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  BOOL v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  int *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  _QWORD v119[2];
  char v120;
  uint64_t v121;
  char v122;
  _QWORD v123[2];
  char v124;
  uint64_t v125;
  char v126;

  v99 = a2;
  v98 = sub_23E536F80();
  v96 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v97 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v90);
  v92 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v91 = (uint64_t)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v87 - v8;
  v10 = type metadata accessor for StaticService();
  v114 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v112 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v87 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v115 = (char *)&v87 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v87 - v18;
  v104 = type metadata accessor for StaticAccessory(0);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v109 = (uint64_t)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for AirPurifierStatusItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (uint64_t)&v25[*(int *)(v23 + 20)];
  v117 = 3;
  v110 = v10;
  v118 = v10;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  v87 = v26;
  swift_storeEnumTagMultiPayload();
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 16) = 3;
  v28 = *(_BYTE *)(a1 + 32);
  v29 = *(_DWORD *)(a1 + 36);
  v105 = a1;
  result = sub_23E26B68C(a1);
  if ((v32 & 1) != 0)
  {
LABEL_47:
    __break(1u);
    return result;
  }
  if (v29 != (_DWORD)v31)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v102 = v29;
  v95 = v27;
  v88 = v9;
  v89 = v25;
  v93 = v22;
  v94 = v21;
  v101 = 1 << v28;
  v33 = result == 1 << v28;
  v34 = v105;
  v35 = v110;
  if (!v33)
  {
    v36 = 0;
    v100 = v105 + 56;
    v113 = "00-8000-0026BB765291";
    v111 = 0x800000023E55F7B0;
    while ((result & 0x8000000000000000) == 0 && result < 1 << *(_BYTE *)(v34 + 32))
    {
      if (((*(_QWORD *)(v100 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
        goto LABEL_42;
      if (*(_DWORD *)(v34 + 36) != (_DWORD)v31)
        goto LABEL_43;
      v107 = v31;
      v37 = *(_QWORD *)(v34 + 48);
      v38 = *(_QWORD *)(v103 + 72);
      v108 = result;
      v39 = v109;
      v40 = sub_23E1E2F50(v37 + v38 * result, v109, type metadata accessor for StaticAccessory);
      v41 = *(_QWORD *)(v39 + *(int *)(v104 + 80));
      MEMORY[0x24BDAC7A8](v40);
      *(&v87 - 2) = v39;
      swift_bridgeObjectRetain();
      v42 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)(&v87 - 4), v41);
      v106 = v36;
      result = swift_bridgeObjectRelease();
      v43 = MEMORY[0x24BEE4AF8];
      v123[0] = MEMORY[0x24BEE4AF8];
      v116 = *(_QWORD *)(v42 + 16);
      if (v116)
      {
        v44 = 0;
        v45 = (uint64_t)v115;
        while (1)
        {
          if (v44 >= *(_QWORD *)(v42 + 16))
          {
            __break(1u);
            goto LABEL_41;
          }
          v46 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
          v47 = *(_QWORD *)(v114 + 72);
          sub_23E1E2F50(v42 + v46 + v47 * v44, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v48 = v19[*(int *)(v35 + 92)];
          sub_23E1E2F50((uint64_t)v19, v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v48 == 53)
            LOBYTE(v48) = *(_BYTE *)(v45 + *(int *)(v35 + 84));
          v49 = sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          LOBYTE(v119[0]) = v48;
          if (ServiceKind.rawValue.getter(v49) == 0xD000000000000024 && v50 == v111)
          {
            swift_bridgeObjectRelease();
            sub_23E1E2F50((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v51 = sub_23E538354();
            swift_bridgeObjectRelease();
            sub_23E1E2F50((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if ((v51 & 1) == 0)
            {
              sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
              goto LABEL_12;
            }
          }
          v52 = StaticService.isActivated.getter();
          sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v52)
          {
            sub_23E1E2FDC((uint64_t)v19, v112, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v53 = v123[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23E2CB160(0, *(_QWORD *)(v53 + 16) + 1, 1);
              v53 = v123[0];
            }
            v55 = *(_QWORD *)(v53 + 16);
            v54 = *(_QWORD *)(v53 + 24);
            if (v55 >= v54 >> 1)
            {
              sub_23E2CB160(v54 > 1, v55 + 1, 1);
              v53 = v123[0];
            }
            *(_QWORD *)(v53 + 16) = v55 + 1;
            result = sub_23E1E2FDC(v112, v53 + v46 + v55 * v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v35 = v110;
            goto LABEL_13;
          }
LABEL_12:
          result = sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_13:
          v45 = (uint64_t)v115;
          if (v116 == ++v44)
          {
            v43 = v123[0];
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v109, type metadata accessor for StaticAccessory);
      v56 = *(_QWORD *)(v43 + 16);
      swift_release();
      if (v56)
      {
        v58 = 0;
        v34 = v105;
        v60 = *(unsigned int *)(v105 + 36);
        v59 = 1 << *(_BYTE *)(v105 + 32);
        v61 = v108;
        v62 = v107;
        goto LABEL_34;
      }
      v34 = v105;
      result = sub_23E2CD280(v108, v107, 0, v105);
      if ((v57 & 1) != 0)
        goto LABEL_46;
      v36 = v106;
      if (v102 != (_DWORD)v31)
        goto LABEL_44;
      if (result == v101)
        goto LABEL_32;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_32:
  v58 = 1;
  v59 = 1 << *(_BYTE *)(v34 + 32);
  v60 = *(unsigned int *)(v34 + 36);
  v61 = v59;
  v62 = v60;
LABEL_34:
  v119[0] = v61;
  v119[1] = v62;
  v120 = 0;
  v121 = 0;
  v122 = v58;
  v123[0] = v59;
  v123[1] = v60;
  v124 = 0;
  v125 = 0;
  v126 = 1;
  v63 = sub_23E497A60((uint64_t)v119, (uint64_t)v123, v34, (void (*)(uint64_t *__return_ptr, char *))sub_23E497A58);
  sub_23E23D578(v61, v62, 0);
  swift_release();
  swift_bridgeObjectRelease();
  v64 = v99;
  v65 = v98;
  v66 = v97;
  v67 = v96;
  if (v63 <= 0)
  {
    sub_23E1E2FA0(v87, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v64, 1, 1, v94);
  }
  else
  {
    v68 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v88, 1, 1, v98);
    static String.hfLocalized(_:)();
    v116 = v69;
    v71 = v70;
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v72 = swift_allocObject();
    v73 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v72 + 16) = xmmword_23E539650;
    v74 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v72 + 56) = v73;
    *(_QWORD *)(v72 + 64) = v74;
    *(_QWORD *)(v72 + 32) = v63;
    v75 = sub_23E537574();
    v77 = v76;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v91;
    sub_23E1FC2F8(v68, v91);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v78, 1, v65) == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v68, &qword_254333F50);
      sub_23E1E7C64(v78, &qword_254333F50);
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
    }
    else
    {
      sub_23E1E7C64(v68, &qword_254333F50);
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
      v79(v66, v78, v65);
    }
    v80 = (int *)v90;
    v81 = (uint64_t)v92;
    v79(v92, (uint64_t)v66, v65);
    v82 = (_QWORD *)(v81 + v80[5]);
    *v82 = 0;
    v82[1] = 0xE000000000000000;
    v83 = (_QWORD *)(v81 + v80[6]);
    *v83 = v116;
    v83[1] = v71;
    v84 = (uint64_t *)(v81 + v80[7]);
    *v84 = v75;
    v84[1] = v77;
    v85 = v81 + v80[8];
    *(_QWORD *)v85 = 0;
    *(_QWORD *)(v85 + 8) = 0;
    *(_QWORD *)(v85 + 16) = 0;
    *(_BYTE *)(v85 + 24) = -1;
    v86 = (uint64_t)v89;
    sub_23E1E2FDC(v81, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2F50(v86, v64, type metadata accessor for AirPurifierStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v64, 0, 1, v94);
    return sub_23E1E2FA0(v86, type metadata accessor for AirPurifierStatusItem);
  }
}

uint64_t sub_23E4968F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t result;
  uint64_t v11;

  v4 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 92));
  sub_23E1E2F50(a1, (uint64_t)v7, v9);
  if (v8 == 53)
    LOBYTE(v8) = v7[*(int *)(v4 + 84)];
  result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *a2 = v8;
  return result;
}

uint64_t sub_23E4969A0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v9 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  v19 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48298);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A8);
  sub_23E536C98();
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A0);
  a2[4] = sub_23E4980FC();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D482B0, &qword_256D48298, MEMORY[0x24BDCD130]);
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D482B8, &qword_256D482A8, MEMORY[0x24BEE1718]);
  sub_23E1F21F8();
  v15 = v18;
  sub_23E536C50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v12);
}

uint64_t sub_23E496C1C@<X0>(int a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[4];
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v15 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v15;
  sub_23E536C98();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  a2[4] = sub_23E2BE714();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  sub_23E536C2C();
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v12, v10);
}

uint64_t sub_23E496E70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v6 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  v43 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v13 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  v37 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48298);
  v17 = *(_QWORD *)(v16 - 8);
  v34 = v16;
  v35 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A0);
  v21 = *(_QWORD *)(v20 - 8);
  v39 = v20;
  v40 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v32[1] = *a1;
  v33 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A8);
  sub_23E536C98();
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v32[0] = *(_QWORD *)(v9 + 8);
  ((void (*)(char *, uint64_t))v32[0])(v11, v8);
  sub_23E1F9710(&qword_256D482B0, &qword_256D48298, MEMORY[0x24BDCD130]);
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D482B8, &qword_256D482A8, MEMORY[0x24BEE1718]);
  sub_23E1F21F8();
  v23 = v34;
  v24 = v36;
  sub_23E536C50();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v23);
  sub_23E536CA4();
  swift_getKeyPath();
  v25 = v38;
  sub_23E536C38();
  swift_release();
  ((void (*)(char *, uint64_t))v32[0])(v11, v8);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D482C0);
  v27 = v41;
  v41[3] = v26;
  v27[4] = sub_23E498080(&qword_256D482C8, &qword_256D482C0, (uint64_t (*)(void))sub_23E4980FC);
  __swift_allocate_boxed_opaque_existential_1(v27);
  sub_23E1F9710(&qword_256D482F0, &qword_256D482A0, MEMORY[0x24BDCCEF8]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  v28 = v33;
  v29 = v39;
  v30 = v42;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v29);
}

uint64_t sub_23E497270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[4];

  v6 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v10[2] = a1;
  swift_bridgeObjectRetain();
  v7 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8 = sub_23E49827C(v7, a2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

uint64_t sub_23E49731C@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v31 = a2;
  v37 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v5 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  v39 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v30 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v28[1] = *a1;
  v29 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v40 = v31;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  v20 = v32;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  sub_23E536CA4();
  swift_getKeyPath();
  v21 = v35;
  sub_23E536C38();
  swift_release();
  v19(v14, v11);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417C8);
  v23 = v37;
  v37[3] = v22;
  v23[4] = sub_23E498080((unint64_t *)&qword_256D417D0, &qword_256D417C8, (uint64_t (*)(void))sub_23E2BE714);
  __swift_allocate_boxed_opaque_existential_1(v23);
  sub_23E1F9710(&qword_256D41808, &qword_256D417B0, MEMORY[0x24BDCD0F0]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  v24 = v29;
  v25 = v34;
  v26 = v38;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v24, v25);
}

uint64_t sub_23E4976F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;

  LODWORD(v3) = a2;
  v6 = type metadata accessor for StaticService();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v37 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v35 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v35 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v35 - v14;
  v16 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v44 = a1;
  swift_bridgeObjectRetain();
  v17 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v43, v16);
  result = swift_bridgeObjectRelease();
  v19 = MEMORY[0x24BEE4AF8];
  v47 = MEMORY[0x24BEE4AF8];
  v39 = *(_QWORD *)(v17 + 16);
  if (!v39)
  {
LABEL_20:
    result = swift_bridgeObjectRelease();
    *a3 = v19;
    return result;
  }
  v35 = a3;
  v20 = 0;
  v36 = v3;
  v38 = v17;
  while (v20 < *(_QWORD *)(v17 + 16))
  {
    v21 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v22 = *(_QWORD *)(v41 + 72);
    sub_23E1E2F50(v17 + v21 + v22 * v20, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v23 = v15[*(int *)(v42 + 92)];
    sub_23E1E2F50((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v23 == 53)
      LOBYTE(v23) = v13[*(int *)(v42 + 84)];
    v24 = v13;
    v25 = sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v46 = v23;
    v45 = v3;
    v26 = ServiceKind.rawValue.getter(v25);
    v28 = v27;
    if (v26 == ServiceKind.rawValue.getter(v26) && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
      v30 = v40;
      sub_23E1E2F50((uint64_t)v15, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      v31 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v40;
      sub_23E1E2F50((uint64_t)v15, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v31 & 1) == 0)
      {
        sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        goto LABEL_4;
      }
    }
    v32 = StaticService.isActivated.getter();
    sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v32)
    {
      sub_23E1E2FDC((uint64_t)v15, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v33 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB160(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v33 = v47;
      }
      v3 = *(_QWORD *)(v33 + 16);
      v34 = *(_QWORD *)(v33 + 24);
      if (v3 >= v34 >> 1)
      {
        sub_23E2CB160(v34 > 1, v3 + 1, 1);
        v33 = v47;
      }
      *(_QWORD *)(v33 + 16) = v3 + 1;
      result = sub_23E1E2FDC(v37, v33 + v21 + v3 * v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v3) = v36;
      goto LABEL_5;
    }
LABEL_4:
    result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
    v13 = v24;
    ++v20;
    v17 = v38;
    if (v39 == v20)
    {
      v19 = v47;
      a3 = v35;
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E497A40@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E49731C(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_23E497A48()
{
  return swift_deallocObject();
}

uint64_t sub_23E497A58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23E4976F0(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_23E497A60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *__return_ptr, char *);
  uint64_t v52;
  uint64_t v53;

  v51 = a4;
  v7 = type metadata accessor for StaticAccessory(0);
  v50 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a1;
  v48 = sub_23E497F58(a2, a1);
  if (!v48)
    goto LABEL_11;
  v10 = *(_BYTE *)(a3 + 32);
  v11 = *(unsigned int *)(a3 + 36);
  result = sub_23E26B68C(a3);
  if ((v14 & 1) == 0)
  {
    v15 = result;
    v16 = 1 << v10;
    if (result < 1 << v10)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if ((_DWORD)v11 != (_DWORD)v13)
    {
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v16 != result)
    {
      v47 = v13;
      v52 = a2;
      swift_retain();
      swift_bridgeObjectRetain();
      v17 = v11;
      while (1)
      {
        v18 = v17;
        v19 = sub_23E2CD280(v16, v17, 0, a3);
        v17 = v20;
        v22 = v21;
        result = sub_23E23D578(v16, v18, 0);
        if ((v22 & 1) != 0)
          goto LABEL_54;
        if ((_DWORD)v11 != (_DWORD)v17)
          goto LABEL_47;
        v16 = v19;
        if (v19 == v15)
        {
          sub_23E23D578(v15, v47, 0);
          swift_release();
          swift_bridgeObjectRelease();
          a2 = v52;
          break;
        }
      }
    }
LABEL_11:
    result = v49;
    if ((*(_BYTE *)(v49 + 16) & 1) != 0 || (*(_BYTE *)(a2 + 16) & 1) != 0)
      goto LABEL_55;
    v23 = *(_QWORD *)(v49 + 8);
    v24 = *(_QWORD *)(a2 + 8);
    if ((_DWORD)v23 != (_DWORD)v24)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v25 = *(_QWORD *)a2;
    v26 = *(_QWORD *)(v49 + 24);
    v27 = *(unsigned __int8 *)(v49 + 32);
    v28 = *(_QWORD *)(a2 + 24);
    v29 = *(unsigned __int8 *)(a2 + 32);
    v52 = *(_QWORD *)v49;
    if (v52 == v25)
    {
      if (((v27 | v29) & 1) != 0)
        return 0;
    }
    else
    {
      if (!v48)
      {
LABEL_23:
        v31 = v28;
        LODWORD(v28) = v29;
        v45 = v26;
        LOBYTE(v29) = v27;
        v26 = v52;
        v32 = v23;
        v52 = v25;
        LODWORD(v23) = v24;
        goto LABEL_24;
      }
      v45 = v28;
      v30 = sub_23E497F58(v49, a2);
      v31 = v26;
      v28 = v27;
      v26 = v25;
      v32 = v24;
      if (!v30)
      {
LABEL_24:
        LODWORD(v49) = v28;
        v44 = v31;
        v46 = v32;
        v47 = v26;
        if ((v29 & 1) != 0)
        {
          result = sub_23E497FC8(v26, v32, 0);
          v24 = 0;
          v34 = v32;
          v35 = v26;
          goto LABEL_28;
        }
        sub_23E2CD78C(v26, v32, a3, (uint64_t)v9);
        sub_23E497FC8(v26, v32, 0);
        swift_bridgeObjectRetain();
        swift_retain();
        v51(&v53, v9);
        sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
        swift_release();
        swift_bridgeObjectRelease();
        v36 = *(_QWORD *)(v53 + 16);
        result = swift_bridgeObjectRelease();
        v24 = v36 - v45;
        if (__OFSUB__(v36, v45))
          goto LABEL_51;
        v35 = sub_23E2CD280(v26, v32, 0, a3);
        v34 = v37;
        v39 = v38;
        result = sub_23E23D578(v26, v32, 0);
        if ((v39 & 1) != 0)
        {
LABEL_36:
          __break(1u);
LABEL_37:
          result = sub_23E23D578(v47, v46, 0);
          if ((v49 & 1) != 0)
            goto LABEL_59;
          sub_23E2CD78C(v35, v34, a3, (uint64_t)v9);
          swift_bridgeObjectRetain();
          swift_retain();
          v51(&v53, v9);
          sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
          swift_release();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v41 = __OFADD__(v24, v44);
          v24 += v44;
          if (!v41)
          {
LABEL_59:
            if (!v48)
              return v24;
            v41 = __OFSUB__(0, v24);
            v24 = -v24;
            if (!v41)
              return v24;
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
LABEL_28:
        while ((_DWORD)v34 == (_DWORD)v23)
        {
          if (v35 >= v52)
            goto LABEL_37;
          if (v35 < 0 || v35 >= 1 << *(_BYTE *)(a3 + 32))
            goto LABEL_43;
          if (((*(_QWORD *)(a3 + 56 + (((unint64_t)v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
            goto LABEL_44;
          if (*(_DWORD *)(a3 + 36) != (_DWORD)v23)
            goto LABEL_45;
          sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v50 + 72) * v35, (uint64_t)v9, type metadata accessor for StaticAccessory);
          swift_bridgeObjectRetain();
          swift_retain();
          v51(&v53, v9);
          sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
          swift_release();
          swift_bridgeObjectRelease();
          v40 = *(_QWORD *)(v53 + 16);
          result = swift_bridgeObjectRelease();
          v41 = __OFADD__(v24, v40);
          v24 += v40;
          if (v41)
            goto LABEL_46;
          result = sub_23E2CD280(v35, v34, 0, a3);
          v35 = result;
          v34 = v42;
          if ((v43 & 1) != 0)
            goto LABEL_36;
        }
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      __break(1u);
    }
    v33 = a3;
    a3 = v28;
    sub_23E2CD78C(v52, v23, v33, (uint64_t)v9);
    v51(&v53, v9);
    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    swift_bridgeObjectRelease();
    v24 = a3 - v26;
    if (!__OFSUB__(a3, v26))
      return v24;
    __break(1u);
    goto LABEL_23;
  }
LABEL_56:
  __break(1u);
  return result;
}

BOOL sub_23E497F58(_BOOL8 result, uint64_t a2)
{
  BOOL v2;

  if ((*(_BYTE *)(result + 16) & 1) != 0 || (*(_BYTE *)(a2 + 16) & 1) != 0)
    goto LABEL_15;
  if (*(_QWORD *)(result + 8) != *(_DWORD *)(a2 + 8))
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v2 = *(_QWORD *)result < *(_QWORD *)a2;
  if (*(_QWORD *)result == *(_QWORD *)a2)
  {
    if ((*(_BYTE *)(result + 32) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 32) & 1) != 0)
        return 0;
      goto LABEL_14;
    }
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
LABEL_16:
      __break(1u);
      return result;
    }
    return *(_QWORD *)(result + 24) < *(_QWORD *)(a2 + 24);
  }
  return v2;
}

uint64_t sub_23E497FC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23E497FDC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v5 = sub_23E1F9710(&qword_256D3F760, &qword_256D3F700, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v4, &v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E49804C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E496E70(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E498054()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E498078@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E497270(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E498080(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23E497FDC((unint64_t *)&qword_256D41800, &qword_256D41798);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDB0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E4980FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D482D0;
  if (!qword_256D482D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D482A0);
    v2[0] = sub_23E498178();
    v2[1] = sub_23E497FDC((unint64_t *)&qword_256D417E0, &qword_256D417A8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D482D0);
  }
  return result;
}

unint64_t sub_23E498178()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D482D8;
  if (!qword_256D482D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48298);
    v2[0] = sub_23E498214(&qword_256D482E0, (uint64_t (*)(void))sub_23E2BE868, MEMORY[0x24BEE1720]);
    v2[1] = sub_23E498214(&qword_256D482E8, (uint64_t (*)(void))sub_23E2BE8AC, MEMORY[0x24BEE1700]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D482D8);
  }
  return result;
}

uint64_t sub_23E498214(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D482A8);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E49827C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;

  v44 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v44);
  v38 = (uint64_t)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v42 = (uint64_t)v36 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v36 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v36 - v13;
  result = MEMORY[0x24BEE4AF8];
  v48 = MEMORY[0x24BEE4AF8];
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v16 = 0;
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v43 = *(_QWORD *)(v12 + 72);
    v36[1] = v2;
    v37 = v17;
    v39 = a1 + v17;
    v45 = a2 + 56;
    v40 = v11;
    while (1)
    {
      sub_23E1E2F50(v39 + v43 * v16, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v19 = v14[*(int *)(v44 + 92)];
      sub_23E1E2F50((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v19 == 53)
        LOBYTE(v19) = v11[*(int *)(v44 + 84)];
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_3;
      v20 = sub_23E53845C();
      v46 = v19;
      ServiceKind.rawValue.getter(v20);
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      v21 = sub_23E5384A4();
      v22 = -1 << *(_BYTE *)(a2 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v45 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = ~v22;
        while (1)
        {
          v47 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v23);
          v46 = v19;
          v25 = ServiceKind.rawValue.getter(v21);
          v27 = v26;
          if (v25 == ServiceKind.rawValue.getter(v25) && v27 == v28)
            break;
          v30 = sub_23E538354();
          swift_bridgeObjectRelease();
          v21 = swift_bridgeObjectRelease();
          if ((v30 & 1) != 0)
            goto LABEL_19;
          v23 = (v23 + 1) & v24;
          if (((*(_QWORD *)(v45 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            goto LABEL_3;
        }
        swift_bridgeObjectRelease_n();
LABEL_19:
        v31 = v42;
        sub_23E1E2F50((uint64_t)v14, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v32 = StaticService.isActivated.getter();
        sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v32)
        {
          sub_23E1E2FDC((uint64_t)v14, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v33 = v48;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E2CB160(0, *(_QWORD *)(v33 + 16) + 1, 1);
            v33 = v48;
          }
          v35 = *(_QWORD *)(v33 + 16);
          v34 = *(_QWORD *)(v33 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_23E2CB160(v34 > 1, v35 + 1, 1);
            v33 = v48;
          }
          *(_QWORD *)(v33 + 16) = v35 + 1;
          sub_23E1E2FDC(v38, v33 + v37 + v35 * v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          goto LABEL_5;
        }
      }
      else
      {
LABEL_3:
        v18 = v42;
        sub_23E1E2F50((uint64_t)v14, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0(v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
      v11 = v40;
      if (++v16 == v41)
        return v48;
    }
  }
  return result;
}

uint64_t sub_23E498620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E496C1C(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_23E498628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E4969A0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t StaticProfileBag.isNaturalLightSupported.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  v1 = MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v37 = (char *)&v35 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v35 - v5;
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 64);
  v35 = *v0 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v41 = v6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  v13 = (uint64_t)v37;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v42 = v12;
      v15 = v14 | (v12 << 6);
      goto LABEL_5;
    }
    v30 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v30 >= v36)
      goto LABEL_26;
    v31 = *(_QWORD *)(v35 + 8 * v30);
    v32 = v12 + 1;
    if (!v31)
    {
      v32 = v12 + 2;
      if (v12 + 2 >= v36)
        goto LABEL_26;
      v31 = *(_QWORD *)(v35 + 8 * v32);
      if (!v31)
      {
        v32 = v12 + 3;
        if (v12 + 3 >= v36)
          goto LABEL_26;
        v31 = *(_QWORD *)(v35 + 8 * v32);
        if (!v31)
        {
          v32 = v12 + 4;
          if (v12 + 4 >= v36)
            goto LABEL_26;
          v31 = *(_QWORD *)(v35 + 8 * v32);
          if (!v31)
          {
            v32 = v12 + 5;
            if (v12 + 5 >= v36)
              goto LABEL_26;
            v31 = *(_QWORD *)(v35 + 8 * v32);
            if (!v31)
            {
              v33 = v12 + 6;
              if (v12 + 6 >= v36)
              {
LABEL_26:
                v34 = 0;
                goto LABEL_27;
              }
              v31 = *(_QWORD *)(v35 + 8 * v33);
              if (!v31)
              {
                while (1)
                {
                  v32 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    goto LABEL_29;
                  if (v32 >= v36)
                    goto LABEL_26;
                  v31 = *(_QWORD *)(v35 + 8 * v32);
                  ++v33;
                  if (v31)
                    goto LABEL_24;
                }
              }
              v32 = v12 + 6;
            }
          }
        }
      }
    }
LABEL_24:
    v10 = (v31 - 1) & v31;
    v42 = v32;
    v15 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_5:
    v16 = v41;
    v17 = *(_QWORD *)(v41 + 48);
    v18 = sub_23E536F80();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    v21 = (uint64_t)v38;
    v20(v38, v17 + *(_QWORD *)(v19 + 72) * v15, v18);
    v22 = *(_QWORD *)(v16 + 56);
    v23 = type metadata accessor for StaticLightProfile();
    v24 = v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v15;
    v25 = v40;
    sub_23E1E2F50(v24, v21 + *(int *)(v40 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    sub_23E412BD8(v21, v13);
    v26 = *(int *)(v25 + 48);
    v27 = v39;
    v28 = (uint64_t)&v39[v26];
    v29 = v13 + v26;
    v20(v39, v13, v18);
    sub_23E1E2F50(v29, v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    LODWORD(v20) = *(unsigned __int8 *)(v28 + *(int *)(v23 + 20));
    sub_23E1E2FA0(v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
    result = sub_23E1E7C64(v13, &qword_256D3F9B8);
    v12 = v42;
    if ((_DWORD)v20 == 1)
    {
      v34 = 1;
LABEL_27:
      swift_release();
      swift_bridgeObjectRelease();
      return v34;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t StaticProfileBag.isNaturalLightEnabled.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  int v32;
  char v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;

  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  v1 = MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v41 = (char *)&v39 - v4;
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v39 - v5;
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 64);
  v39 = *v0 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v45 = v6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  v13 = (uint64_t)v41;
  while (v10)
  {
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v46 = v12;
    v15 = v14 | (v12 << 6);
LABEL_5:
    v16 = v45;
    v17 = *(_QWORD *)(v45 + 48);
    v18 = sub_23E536F80();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    v21 = (uint64_t)v42;
    v20(v42, v17 + *(_QWORD *)(v19 + 72) * v15, v18);
    v22 = *(_QWORD *)(v16 + 56);
    v23 = type metadata accessor for StaticLightProfile();
    v24 = v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v15;
    v25 = v44;
    sub_23E1E2F50(v24, v21 + *(int *)(v44 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    sub_23E412BD8(v21, v13);
    v26 = *(int *)(v25 + 48);
    v27 = v43;
    v28 = (uint64_t)&v43[v26];
    v29 = v13 + v26;
    v20(v43, v13, v18);
    sub_23E1E2F50(v29, v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v30 = (char *)(v28 + *(int *)(v23 + 24));
    v31 = *v30;
    v32 = v30[1];
    if (v32 == 2)
      v33 = v31;
    else
      v33 = v32;
    sub_23E1E2FA0(v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v18);
    result = sub_23E1E7C64(v13, &qword_256D3F9B8);
    v12 = v46;
    if ((v33 & 1) != 0)
    {
      v38 = 1;
LABEL_30:
      swift_release();
      swift_bridgeObjectRelease();
      return v38;
    }
  }
  v34 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v34 >= v40)
    goto LABEL_29;
  v35 = *(_QWORD *)(v39 + 8 * v34);
  v36 = v12 + 1;
  if (v35)
    goto LABEL_27;
  v36 = v12 + 2;
  if (v12 + 2 >= v40)
    goto LABEL_29;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (v35)
    goto LABEL_27;
  v36 = v12 + 3;
  if (v12 + 3 >= v40)
    goto LABEL_29;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (v35)
    goto LABEL_27;
  v36 = v12 + 4;
  if (v12 + 4 >= v40)
    goto LABEL_29;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (v35)
    goto LABEL_27;
  v36 = v12 + 5;
  if (v12 + 5 >= v40)
    goto LABEL_29;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (v35)
  {
LABEL_27:
    v10 = (v35 - 1) & v35;
    v46 = v36;
    v15 = __clz(__rbit64(v35)) + (v36 << 6);
    goto LABEL_5;
  }
  v37 = v12 + 6;
  if (v12 + 6 >= v40)
  {
LABEL_29:
    v38 = 0;
    goto LABEL_30;
  }
  v35 = *(_QWORD *)(v39 + 8 * v37);
  if (v35)
  {
    v36 = v12 + 6;
    goto LABEL_27;
  }
  while (1)
  {
    v36 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v36 >= v40)
      goto LABEL_29;
    v35 = *(_QWORD *)(v39 + 8 * v36);
    ++v37;
    if (v35)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

BOOL static StaticProfileBag.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static StaticProfileBag.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_23E2B1D74(*a1, *a2) & 1) != 0)
    return sub_23E2B2280(v2, v3);
  else
    return 0;
}

uint64_t StaticProfileBag.staticLightProfilesDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticProfileBag.staticTelevisionProfilesDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticProfileBag.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_23E239D94(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(a1, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23E498D94()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000022;
  else
    return 0xD00000000000001DLL;
}

uint64_t sub_23E498DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E49B898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E498DF8()
{
  sub_23E49A8B4();
  return sub_23E538570();
}

uint64_t sub_23E498E20()
{
  sub_23E49A8B4();
  return sub_23E53857C();
}

uint64_t StaticProfileBag.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D482F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E49A8B4();
  sub_23E5384EC();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D48308);
  sub_23E49A8F8();
  sub_23E5382AC();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D48320);
    sub_23E49A994();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticProfileBag.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *v0;
  v2 = v0[1];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E239D94(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(v4, v2);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t StaticProfileBag.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48338);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E49A8B4();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D48308);
  v13 = 0;
  sub_23E49AA30();
  sub_23E538180();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D48320);
  v13 = 1;
  sub_23E49AACC();
  swift_bridgeObjectRetain();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4991F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_23E2B1D74(*a1, *a2) & 1) != 0)
    return sub_23E2B2280(v2, v3);
  else
    return 0;
}

uint64_t sub_23E499238()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *v0;
  v2 = v0[1];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E239D94(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(v4, v2);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4992A8(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_23E239D94(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E499304()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *v0;
  v2 = v0[1];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E239D94(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(v4, v2);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E499370@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticProfileBag.init(from:)(a1, a2);
}

uint64_t sub_23E499384(_QWORD *a1)
{
  return StaticProfileBag.encode(to:)(a1);
}

uint64_t StaticProfileBag.setNaturalLight(_:)(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 88) = a2;
  v4 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v4;
  return swift_task_switch();
}

uint64_t sub_23E4993B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48368);
  *(_QWORD *)(v0 + 48) = sub_23E49AB68();
  *(_QWORD *)(v0 + 16) = v1;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_23E49944C;
  return static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 88), v0 + 16, 0);
}

uint64_t sub_23E49944C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E4994C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticProfileBag.mediaSourceDisplayOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for StaticTelevisionProfile();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48378);
  MEMORY[0x24BDAC7A8](v8);
  v26 = (uint64_t)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + 8);
  v11 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v10 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v17 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(v10 + 56) + *(_QWORD *)(v2 + 72) * i, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    sub_23E49ABB4((uint64_t)v7, (uint64_t)v5);
    if (*(_QWORD *)(*(_QWORD *)&v5[*(int *)(v1 + 20)] + 16))
    {
      swift_release();
      v23 = v26;
      sub_23E49ABB4((uint64_t)v5, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v23, 0, 1, v1);
      goto LABEL_28;
    }
    result = sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v20 >= v15)
      goto LABEL_27;
    v21 = *(_QWORD *)(v11 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_27;
      v21 = *(_QWORD *)(v11 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v15)
          goto LABEL_27;
        v21 = *(_QWORD *)(v11 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 3;
          if (v20 + 3 >= v15)
            goto LABEL_27;
          v21 = *(_QWORD *)(v11 + 8 * v17);
          if (!v21)
          {
            v17 = v20 + 4;
            if (v20 + 4 >= v15)
              goto LABEL_27;
            v21 = *(_QWORD *)(v11 + 8 * v17);
            if (!v21)
              break;
          }
        }
      }
    }
LABEL_22:
    v14 = (v21 - 1) & v21;
  }
  v22 = v20 + 5;
  if (v22 < v15)
  {
    v21 = *(_QWORD *)(v11 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        v17 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_33;
        if (v17 >= v15)
          goto LABEL_27;
        v21 = *(_QWORD *)(v11 + 8 * v17);
        ++v22;
        if (v21)
          goto LABEL_22;
      }
    }
    v17 = v22;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  v23 = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v26, 1, 1, v1);
LABEL_28:
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v23, 1, v1) == 1)
  {
    sub_23E1E7C64(v23, &qword_256D48378);
    return 0;
  }
  else
  {
    v24 = *(_QWORD *)(v23 + *(int *)(v1 + 20));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
  }
  return v24;
}

uint64_t static StaticProfileBag.ValueUpdate.== infix(_:_:)(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t StaticProfileBag.ValueUpdate.hash(into:)()
{
  sub_23E538468();
  return sub_23E538474();
}

uint64_t sub_23E49985C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F7250616964656DLL;
  else
    return 0x6F7250746867696CLL;
}

uint64_t sub_23E499898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E49BA04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4998BC()
{
  sub_23E49ABF8();
  return sub_23E538570();
}

uint64_t sub_23E4998E4()
{
  sub_23E49ABF8();
  return sub_23E53857C();
}

unint64_t sub_23E49990C()
{
  return 0xD000000000000016;
}

uint64_t sub_23E499928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E49B980(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23E499950()
{
  sub_23E49AC80();
  return sub_23E538570();
}

uint64_t sub_23E499978()
{
  sub_23E49AC80();
  return sub_23E53857C();
}

uint64_t sub_23E4999A0()
{
  return 0x457265776F507369;
}

uint64_t sub_23E4999C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x457265776F507369 && a2 == 0xEE0064656C62616ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E499A7C()
{
  sub_23E49AC3C();
  return sub_23E538570();
}

uint64_t sub_23E499AA4()
{
  sub_23E49AC3C();
  return sub_23E53857C();
}

uint64_t StaticProfileBag.ValueUpdate.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48380);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48388);
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48390);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E49ABF8();
  sub_23E5384EC();
  if (v11 < 0)
  {
    v24 = 1;
    sub_23E49AC3C();
    v13 = v17;
    v12 = v22;
    sub_23E5381E0();
    v14 = v19;
    sub_23E53827C();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v14);
  }
  else
  {
    v23 = 0;
    sub_23E49AC80();
    v12 = v22;
    sub_23E5381E0();
    sub_23E53827C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v12);
}

uint64_t StaticProfileBag.ValueUpdate.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t StaticProfileBag.ValueUpdate.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;

  v29 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483B0);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483C0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23E49ABF8();
  v13 = v34;
  sub_23E5384E0();
  if (v13)
    goto LABEL_7;
  v27 = v4;
  v28 = v5;
  v15 = v31;
  v14 = v32;
  v34 = v9;
  v16 = sub_23E5381C8();
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v21 = sub_23E537ED4();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v23 = &type metadata for StaticProfileBag.ValueUpdate;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
LABEL_7:
    v19 = (uint64_t)v33;
    return __swift_destroy_boxed_opaque_existential_0(v19);
  }
  v17 = v11;
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    v36 = 1;
    sub_23E49AC3C();
    sub_23E5380C0();
    v18 = sub_23E538150();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    v19 = (uint64_t)v33;
    v20 = v18 & 1 | 0x80;
  }
  else
  {
    v35 = 0;
    sub_23E49AC80();
    sub_23E5380C0();
    v25 = v27;
    v26 = sub_23E538150();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v8);
    v19 = (uint64_t)v33;
    v20 = v26 & 1;
  }
  *v29 = v20;
  return __swift_destroy_boxed_opaque_existential_0(v19);
}

uint64_t sub_23E49A0E4(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_23E49A124()
{
  sub_23E538468();
  return sub_23E538474();
}

uint64_t sub_23E49A164()
{
  sub_23E53845C();
  sub_23E538468();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E49A1B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticProfileBag.ValueUpdate.init(from:)(a1, a2);
}

uint64_t sub_23E49A1C8(_QWORD *a1)
{
  return StaticProfileBag.ValueUpdate.encode(to:)(a1);
}

uint64_t StaticProfileBag.Kind.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E49A204()
{
  sub_23E49ACC4();
  return sub_23E538570();
}

uint64_t sub_23E49A22C()
{
  sub_23E49ACC4();
  return sub_23E53857C();
}

uint64_t sub_23E49A254()
{
  sub_23E49AD4C();
  return sub_23E538570();
}

uint64_t sub_23E49A27C()
{
  sub_23E49AD4C();
  return sub_23E53857C();
}

uint64_t sub_23E49A2A4()
{
  sub_23E49AD08();
  return sub_23E538570();
}

uint64_t sub_23E49A2CC()
{
  sub_23E49AD08();
  return sub_23E53857C();
}

uint64_t StaticProfileBag.Kind.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483C8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483D0);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483D8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E49ACC4();
  sub_23E5384EC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23E49AD08();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23E49AD4C();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StaticProfileBag.Kind.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticProfileBag.Kind.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D483F8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48400);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48408);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E49ACC4();
  v11 = v33;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticProfileBag.Kind;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23E49AD08();
    sub_23E5380C0();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23E49AD4C();
    v22 = v6;
    sub_23E5380C0();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23E49A864@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticProfileBag.Kind.init(from:)(a1, a2);
}

uint64_t sub_23E49A878(_QWORD *a1)
{
  return StaticProfileBag.Kind.encode(to:)(a1);
}

BOOL StaticProfileBag.isEmpty.getter()
{
  _QWORD *v0;

  return !*(_QWORD *)(*v0 + 16) && *(_QWORD *)(v0[1] + 16) == 0;
}

unint64_t sub_23E49A8B4()
{
  unint64_t result;

  result = qword_256D48300;
  if (!qword_256D48300)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555E40, &type metadata for StaticProfileBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48300);
  }
  return result;
}

unint64_t sub_23E49A8F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D48310;
  if (!qword_256D48310)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48308);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D48318, (uint64_t (*)(uint64_t))type metadata accessor for StaticLightProfile, (uint64_t)&protocol conformance descriptor for StaticLightProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D48310);
  }
  return result;
}

unint64_t sub_23E49A994()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D48328;
  if (!qword_256D48328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48320);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D48330, (uint64_t (*)(uint64_t))type metadata accessor for StaticTelevisionProfile, (uint64_t)&protocol conformance descriptor for StaticTelevisionProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D48328);
  }
  return result;
}

unint64_t sub_23E49AA30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D48340;
  if (!qword_256D48340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48308);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D48348, (uint64_t (*)(uint64_t))type metadata accessor for StaticLightProfile, (uint64_t)&protocol conformance descriptor for StaticLightProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D48340);
  }
  return result;
}

unint64_t sub_23E49AACC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D48350;
  if (!qword_256D48350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48320);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D48358, (uint64_t (*)(uint64_t))type metadata accessor for StaticTelevisionProfile, (uint64_t)&protocol conformance descriptor for StaticTelevisionProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D48350);
  }
  return result;
}

unint64_t sub_23E49AB68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D48370;
  if (!qword_256D48370)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48368);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE03C8], v1);
    atomic_store(result, (unint64_t *)&qword_256D48370);
  }
  return result;
}

uint64_t sub_23E49ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E49ABF8()
{
  unint64_t result;

  result = qword_256D48398;
  if (!qword_256D48398)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555DF0, &type metadata for StaticProfileBag.ValueUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48398);
  }
  return result;
}

unint64_t sub_23E49AC3C()
{
  unint64_t result;

  result = qword_256D483A0;
  if (!qword_256D483A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555DA0, &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D483A0);
  }
  return result;
}

unint64_t sub_23E49AC80()
{
  unint64_t result;

  result = qword_256D483A8;
  if (!qword_256D483A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555D50, &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D483A8);
  }
  return result;
}

unint64_t sub_23E49ACC4()
{
  unint64_t result;

  result = qword_256D483E0;
  if (!qword_256D483E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555D00, &type metadata for StaticProfileBag.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D483E0);
  }
  return result;
}

unint64_t sub_23E49AD08()
{
  unint64_t result;

  result = qword_256D483E8;
  if (!qword_256D483E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555CB0, &type metadata for StaticProfileBag.Kind.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D483E8);
  }
  return result;
}

unint64_t sub_23E49AD4C()
{
  unint64_t result;

  result = qword_256D483F0;
  if (!qword_256D483F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555C60, &type metadata for StaticProfileBag.Kind.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D483F0);
  }
  return result;
}

unint64_t sub_23E49AD94()
{
  unint64_t result;

  result = qword_256D48410;
  if (!qword_256D48410)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticProfileBag, &type metadata for StaticProfileBag);
    atomic_store(result, (unint64_t *)&qword_256D48410);
  }
  return result;
}

unint64_t sub_23E49ADDC()
{
  unint64_t result;

  result = qword_256D48418;
  if (!qword_256D48418)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticProfileBag.ValueUpdate, &type metadata for StaticProfileBag.ValueUpdate);
    atomic_store(result, (unint64_t *)&qword_256D48418);
  }
  return result;
}

unint64_t sub_23E49AE24()
{
  unint64_t result;

  result = qword_256D48420;
  if (!qword_256D48420)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticProfileBag.Kind, &type metadata for StaticProfileBag.Kind);
    atomic_store(result, (unint64_t *)&qword_256D48420);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag()
{
  return &type metadata for StaticProfileBag;
}

uint64_t getEnumTagSinglePayload for StaticProfileBag.ValueUpdate(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for StaticProfileBag.ValueUpdate(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_23E49AF60 + 4 * byte_23E5554F5[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_23E49AF94 + 4 * byte_23E5554F0[v4]))();
}

uint64_t sub_23E49AF94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49AF9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E49AFA4);
  return result;
}

uint64_t sub_23E49AFBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E49AFC4);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_23E49AFC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49AFD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49AFDC(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_23E49AFE8(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_23E49AFF8(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate()
{
  return &type metadata for StaticProfileBag.ValueUpdate;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind()
{
  return &type metadata for StaticProfileBag.Kind;
}

uint64_t initializeBufferWithCopyOfBuffer for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProfileError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProfileError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E49B168(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProfileError()
{
  return &type metadata for ProfileError;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.CodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.LightProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.LightProfileCodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.MediaProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.MediaProfileCodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.CodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.LightProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys;
}

uint64_t _s13HomeDataModel16StaticProfileBagV11ValueUpdateO22LightProfileCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E49B218 + 4 * byte_23E5554FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E49B238 + 4 * byte_23E5554FF[v4]))();
}

_BYTE *sub_23E49B218(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E49B238(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E49B240(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E49B248(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E49B250(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E49B258(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys;
}

uint64_t _s13HomeDataModel16StaticProfileBagV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E49B2C0 + 4 * byte_23E555509[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E49B2F4 + 4 * byte_23E555504[v4]))();
}

uint64_t sub_23E49B2F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49B2FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E49B304);
  return result;
}

uint64_t sub_23E49B310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E49B318);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E49B31C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E49B324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.CodingKeys()
{
  return &type metadata for StaticProfileBag.CodingKeys;
}

unint64_t sub_23E49B344()
{
  unint64_t result;

  result = qword_256D48428;
  if (!qword_256D48428)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5558B8, &type metadata for StaticProfileBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48428);
  }
  return result;
}

unint64_t sub_23E49B38C()
{
  unint64_t result;

  result = qword_256D48430;
  if (!qword_256D48430)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555970, &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48430);
  }
  return result;
}

unint64_t sub_23E49B3D4()
{
  unint64_t result;

  result = qword_256D48438;
  if (!qword_256D48438)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555A28, &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48438);
  }
  return result;
}

unint64_t sub_23E49B41C()
{
  unint64_t result;

  result = qword_256D48440;
  if (!qword_256D48440)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555AE0, &type metadata for StaticProfileBag.ValueUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48440);
  }
  return result;
}

unint64_t sub_23E49B464()
{
  unint64_t result;

  result = qword_256D48448;
  if (!qword_256D48448)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555C38, &type metadata for StaticProfileBag.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48448);
  }
  return result;
}

unint64_t sub_23E49B4AC()
{
  unint64_t result;

  result = qword_256D48450;
  if (!qword_256D48450)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555B58, &type metadata for StaticProfileBag.Kind.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48450);
  }
  return result;
}

unint64_t sub_23E49B4F4()
{
  unint64_t result;

  result = qword_256D48458;
  if (!qword_256D48458)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555B80, &type metadata for StaticProfileBag.Kind.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48458);
  }
  return result;
}

unint64_t sub_23E49B53C()
{
  unint64_t result;

  result = qword_256D48460;
  if (!qword_256D48460)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555B08, &type metadata for StaticProfileBag.Kind.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48460);
  }
  return result;
}

unint64_t sub_23E49B584()
{
  unint64_t result;

  result = qword_256D48468;
  if (!qword_256D48468)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555B30, &type metadata for StaticProfileBag.Kind.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48468);
  }
  return result;
}

unint64_t sub_23E49B5CC()
{
  unint64_t result;

  result = qword_256D48470;
  if (!qword_256D48470)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555BA8, &type metadata for StaticProfileBag.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48470);
  }
  return result;
}

unint64_t sub_23E49B614()
{
  unint64_t result;

  result = qword_256D48478;
  if (!qword_256D48478)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555BD0, &type metadata for StaticProfileBag.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48478);
  }
  return result;
}

unint64_t sub_23E49B65C()
{
  unint64_t result;

  result = qword_256D48480;
  if (!qword_256D48480)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555998, &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48480);
  }
  return result;
}

unint64_t sub_23E49B6A4()
{
  unint64_t result;

  result = qword_256D48488;
  if (!qword_256D48488)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5559C0, &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48488);
  }
  return result;
}

unint64_t sub_23E49B6EC()
{
  unint64_t result;

  result = qword_256D48490;
  if (!qword_256D48490)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5558E0, &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48490);
  }
  return result;
}

unint64_t sub_23E49B734()
{
  unint64_t result;

  result = qword_256D48498;
  if (!qword_256D48498)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555908, &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48498);
  }
  return result;
}

unint64_t sub_23E49B77C()
{
  unint64_t result;

  result = qword_256D484A0;
  if (!qword_256D484A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555A50, &type metadata for StaticProfileBag.ValueUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D484A0);
  }
  return result;
}

unint64_t sub_23E49B7C4()
{
  unint64_t result;

  result = qword_256D484A8;
  if (!qword_256D484A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555A78, &type metadata for StaticProfileBag.ValueUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D484A8);
  }
  return result;
}

unint64_t sub_23E49B80C()
{
  unint64_t result;

  result = qword_256D484B0;
  if (!qword_256D484B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555828, &type metadata for StaticProfileBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D484B0);
  }
  return result;
}

unint64_t sub_23E49B854()
{
  unint64_t result;

  result = qword_256D484B8;
  if (!qword_256D484B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E555850, &type metadata for StaticProfileBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D484B8);
  }
  return result;
}

uint64_t sub_23E49B898(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001DLL && a2 == 0x800000023E56AE80 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023E56AEA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E49B980(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023E56AED0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23E538354();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23E49BA04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F7250746867696CLL && a2 == 0xEC000000656C6966;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7250616964656DLL && a2 == 0xEC000000656C6966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ActionEndpoint.init(staticEndpoint:overridingAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  _QWORD *v26;
  __int128 *v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  unint64_t v31;
  int64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[16];
  uint64_t v58;
  _QWORD v59[32];
  _QWORD *v60;
  __int128 v61[17];

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a3, a1, v6);
  v8 = (int *)type metadata accessor for StaticEndpoint();
  v9 = a1 + v8[11];
  v10 = (int *)type metadata accessor for ActionEndpoint();
  v7(a3 + v10[5], v9, v6);
  *(_QWORD *)(a3 + v10[6]) = *(_QWORD *)(a1 + v8[12]);
  v11 = (uint64_t *)(a1 + v8[6]);
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)(a3 + v10[7]);
  *v14 = v12;
  v14[1] = v13;
  *(_BYTE *)(a3 + v10[8]) = 1;
  v15 = a1 + v8[5];
  v16 = *(_QWORD *)v15;
  LOWORD(v15) = *(_WORD *)(v15 + 8);
  v17 = a3 + v10[9];
  *(_QWORD *)v17 = v16;
  *(_WORD *)(v17 + 8) = v15;
  sub_23E1E2F50(a1 + v8[13], a3 + v10[10], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  *(_QWORD *)(a3 + v10[11]) = *(_QWORD *)(a1 + v8[8]);
  v18 = v10[12];
  *(_QWORD *)(a3 + v18) = *(_QWORD *)(a1 + v8[9]);
  v54 = a1;
  *(_QWORD *)(a3 + v10[13]) = *(_QWORD *)(a1 + v8[10]);
  v19 = sub_23E222BE0(MEMORY[0x24BEE4AF8]);
  v58 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_23E2571E4(v19, (void (*)(uint64_t *, char *))sub_23E4A0208, (uint64_t)v57, a2);
  swift_bridgeObjectRelease();
  v56 = v20 + 64;
  v21 = 1 << *(_BYTE *)(v20 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & *(_QWORD *)(v20 + 64);
  v24 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  v25 = 0;
  v55 = v20;
  while (1)
  {
    if (v23)
    {
      v28 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v29 = v28 | (v25 << 6);
      goto LABEL_23;
    }
    v30 = __OFADD__(v25++, 1);
    if (v30)
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v25 >= v24)
      goto LABEL_44;
    v31 = *(_QWORD *)(v56 + 8 * v25);
    if (!v31)
      break;
LABEL_22:
    v23 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v25 << 6);
LABEL_23:
    v33 = *(_BYTE *)(*(_QWORD *)(v20 + 48) + v29);
    if (*(_QWORD *)(v20 + 16) && (v34 = sub_23E2112EC(v33), (v35 & 1) != 0))
    {
      sub_23E22328C((__int128 *)(*(_QWORD *)(v20 + 56) + (v34 << 8)), (uint64_t)v61);
      sub_23E23D3E8((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E22335C);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60 = *(_QWORD **)(a3 + v18);
      v37 = v60;
      *(_QWORD *)(a3 + v18) = 0x8000000000000000;
      v39 = sub_23E2112EC(v33);
      v40 = v37[2];
      v41 = (v38 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
        goto LABEL_46;
      v43 = v38;
      if (v37[3] >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v38 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_23E21E580();
          if ((v43 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_23E213E1C(v42, isUniquelyReferenced_nonNull_native);
        v44 = sub_23E2112EC(v33);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_49;
        v39 = v44;
        if ((v43 & 1) != 0)
        {
LABEL_4:
          v26 = v60;
          v27 = (__int128 *)(v60[7] + (v39 << 8));
          sub_23E22328C(v27, (uint64_t)v59);
          sub_23E23D3E8((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E23D46C);
          sub_23E22328C(v61, (uint64_t)v27);
          goto LABEL_5;
        }
      }
      v26 = v60;
      v60[(v39 >> 6) + 8] |= 1 << v39;
      *(_BYTE *)(v26[6] + v39) = v33;
      sub_23E22328C(v61, v26[7] + (v39 << 8));
      v51 = v26[2];
      v30 = __OFADD__(v51, 1);
      v52 = v51 + 1;
      if (v30)
        goto LABEL_47;
      v26[2] = v52;
LABEL_5:
      *(_QWORD *)(a3 + v18) = v26;
      swift_bridgeObjectRelease();
      v20 = v55;
    }
    else
    {
      v46 = sub_23E2112EC(v33);
      if ((v47 & 1) != 0)
      {
        v48 = v46;
        v49 = swift_isUniquelyReferenced_nonNull_native();
        v50 = *(_QWORD *)(a3 + v18);
        v59[0] = v50;
        *(_QWORD *)(a3 + v18) = 0x8000000000000000;
        if (!v49)
        {
          sub_23E21E580();
          v50 = v59[0];
        }
        sub_23E22328C((__int128 *)(*(_QWORD *)(v50 + 56) + (v48 << 8)), (uint64_t)v61);
        sub_23E49E184(v48, v50);
        *(_QWORD *)(a3 + v18) = v50;
        swift_bridgeObjectRelease();
        sub_23E23D3E8((uint64_t)v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E23D46C);
      }
    }
  }
  v32 = v25 + 1;
  if (v25 + 1 >= v24)
    goto LABEL_44;
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
    goto LABEL_21;
  v32 = v25 + 2;
  if (v25 + 2 >= v24)
    goto LABEL_44;
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
    goto LABEL_21;
  v32 = v25 + 3;
  if (v25 + 3 >= v24)
    goto LABEL_44;
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
    goto LABEL_21;
  v32 = v25 + 4;
  if (v25 + 4 >= v24)
    goto LABEL_44;
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
    goto LABEL_21;
  v32 = v25 + 5;
  if (v25 + 5 >= v24)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    return swift_release();
  }
  v31 = *(_QWORD *)(v56 + 8 * v32);
  if (v31)
  {
LABEL_21:
    v25 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    v25 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v25 >= v24)
      goto LABEL_44;
    v31 = *(_QWORD *)(v56 + 8 * v25);
    ++v32;
    if (v31)
      goto LABEL_22;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t ActionEndpoint.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  char v4;
  char v5;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 44));
  result = sub_23E26B68C(v1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(v1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result != 1 << *(_BYTE *)(v1 + 32))
    sub_23E2CD37C(result, v3, v1, &v5);
  return 0;
}

uint64_t ActionEndpoint.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  char v4;
  char v5;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 44));
  result = sub_23E26B68C(v1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(v1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result != 1 << *(_BYTE *)(v1 + 32))
    sub_23E2CD37C(result, v3, v1, &v5);
  return 0;
}

uint64_t ActionEndpoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ActionEndpoint.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActionEndpoint() + 20);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ActionEndpoint.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionEndpoint.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 32));
}

uint64_t ActionEndpoint.endpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for ActionEndpoint();
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t ActionEndpoint.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ActionEndpoint();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
}

uint64_t ActionEndpoint.deviceTypes.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.clusters.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.clusters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ActionEndpoint() + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ActionEndpoint.clusters.modify())(_QWORD)
{
  type metadata accessor for ActionEndpoint();
  return nullsub_1;
}

uint64_t ActionEndpoint.linkedEndpointIDs.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.canToggle.getter()
{
  return 0;
}

uint64_t ActionEndpoint.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionEndpoint() + 44));
  return sub_23E26764C(v3, a1);
}

uint64_t ActionEndpoint.init(staticEndpoint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a2, a1, v4);
  v6 = (int *)type metadata accessor for StaticEndpoint();
  v7 = a1 + v6[11];
  v8 = (int *)type metadata accessor for ActionEndpoint();
  v5(a2 + v8[5], v7, v4);
  *(_QWORD *)(a2 + v8[6]) = *(_QWORD *)(a1 + v6[12]);
  v9 = (uint64_t *)(a1 + v6[6]);
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)(a2 + v8[7]);
  *v12 = v10;
  v12[1] = v11;
  *(_BYTE *)(a2 + v8[8]) = 1;
  v13 = a1 + v6[5];
  v14 = *(_QWORD *)v13;
  LOWORD(v13) = *(_WORD *)(v13 + 8);
  v15 = a2 + v8[9];
  *(_QWORD *)v15 = v14;
  *(_WORD *)(v15 + 8) = v13;
  sub_23E1E2F50(a1 + v6[13], a2 + v8[10], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  *(_QWORD *)(a2 + v8[11]) = *(_QWORD *)(a1 + v6[8]);
  *(_QWORD *)(a2 + v8[12]) = *(_QWORD *)(a1 + v6[9]);
  v16 = *(_QWORD *)(a1 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  *(_QWORD *)(a2 + v8[13]) = v16;
  return result;
}

uint64_t sub_23E49C4F0(uint64_t result, char *a2, uint64_t a3)
{
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  __int128 v26[16];
  __int128 v27[16];
  uint64_t v28;

  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)result;
  v6 = *(_QWORD *)result;
  v7 = 1 << *(_BYTE *)(*(_QWORD *)result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v10 = *(_QWORD *)(v6 + 64);
  v9 = v6 + 64;
  v11 = *a2;
  v12 = v8 & v10;
  v13 = (unint64_t)(v7 + 63) >> 6;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v4 << 6);
LABEL_5:
    v16 = *(char *)(*(_QWORD *)(v5 + 48) + v15);
    result = sub_23E22328C((__int128 *)(*(_QWORD *)(v5 + 56) + (v15 << 8)), (uint64_t)v26);
    if (dword_23E5561D0[v16] == dword_23E5561D0[v11])
    {
      swift_bridgeObjectRetain();
      sub_23E23D3E8((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E22335C);
      swift_release();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v27[0] = *v3;
      *v3 = 0x8000000000000000;
      sub_23E21AE94(v26, v11, isUniquelyReferenced_nonNull_native);
      v21 = *(_QWORD *)&v27[0];
      goto LABEL_26;
    }
  }
  v17 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v17 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v9 + 8 * v17);
  ++v4;
  if (v18)
    goto LABEL_24;
  v4 = v17 + 1;
  if (v17 + 1 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v9 + 8 * v4);
  if (v18)
    goto LABEL_24;
  v4 = v17 + 2;
  if (v17 + 2 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v9 + 8 * v4);
  if (v18)
    goto LABEL_24;
  v4 = v17 + 3;
  if (v17 + 3 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v9 + 8 * v4);
  if (v18)
    goto LABEL_24;
  v4 = v17 + 4;
  if (v17 + 4 >= v13)
    goto LABEL_28;
  v18 = *(_QWORD *)(v9 + 8 * v4);
  if (v18)
  {
LABEL_24:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v4 << 6);
    goto LABEL_5;
  }
  v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_28:
    result = type metadata accessor for ActionEndpoint();
    v22 = *(_QWORD *)(a3 + *(int *)(result + 48));
    if (!*(_QWORD *)(v22 + 16))
      return result;
    result = sub_23E2112EC(v11);
    if ((v23 & 1) == 0)
      return result;
    sub_23E22328C((__int128 *)(*(_QWORD *)(v22 + 56) + (result << 8)), (uint64_t)v27);
    sub_23E23D3E8((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E22335C);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E21AE94(v27, v11, v24);
    v21 = v28;
LABEL_26:
    *v3 = v21;
    return swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v4 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v4 >= v13)
      goto LABEL_28;
    v18 = *(_QWORD *)(v9 + 8 * v4);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_32:
  __break(1u);
  return result;
}

void ClusterKind.primaryClusterKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ActionEndpoint.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for ActionEndpoint();
  sub_23E5374D8();
  v5 = *(_QWORD *)(v1 + v4[6]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538498();
  sub_23E538480();
  MatterTileMetadata.hash(into:)();
  v6 = *(_QWORD *)(v2 + v4[11]);
  swift_bridgeObjectRetain();
  sub_23E240BC0((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_23E23A220((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v2 + v4[13]);
  swift_bridgeObjectRetain();
  sub_23E24157C((uint64_t)a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E49C8F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E49C918 + 4 * byte_23E555E90[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E49C918()
{
  return 0x4449656D6F68;
}

uint64_t sub_23E49C92C()
{
  return 0x7344496D6F6F72;
}

uint64_t sub_23E49C944()
{
  return 1701667182;
}

uint64_t sub_23E49C954()
{
  return 0x6168636165527369;
}

uint64_t sub_23E49C974()
{
  return 0x746E696F70646E65;
}

uint64_t sub_23E49C994()
{
  return 0x617461646174656DLL;
}

uint64_t sub_23E49C9AC()
{
  return 0x7954656369766564;
}

uint64_t sub_23E49C9CC()
{
  return 0x7372657473756C63;
}

unint64_t sub_23E49C9E4()
{
  return 0xD000000000000011;
}

uint64_t sub_23E49CA00()
{
  unsigned __int8 *v0;

  return sub_23E49C8F0(*v0);
}

uint64_t sub_23E49CA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4A12B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E49CA2C()
{
  sub_23E4A0220();
  return sub_23E538570();
}

uint64_t sub_23E49CA54()
{
  sub_23E4A0220();
  return sub_23E53857C();
}

uint64_t ActionEndpoint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D484C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4A0220();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ActionEndpoint();
    LOBYTE(v13) = 1;
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[6]);
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 3;
    sub_23E538270();
    LOBYTE(v13) = 4;
    sub_23E53827C();
    v10 = (uint64_t *)(v3 + v9[9]);
    v11 = *v10;
    LOWORD(v10) = *((_WORD *)v10 + 4);
    v13 = v11;
    v14 = (__int16)v10;
    v15 = 5;
    sub_23E2CE674();
    sub_23E5382AC();
    LOBYTE(v13) = 6;
    type metadata accessor for MatterTileMetadata();
    sub_23E1EE1C4(&qword_256D402A8, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[11]);
    v15 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
    sub_23E26BA10(&qword_256D40288, (uint64_t (*)(void))sub_23E26B8C4, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[12]);
    v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BA0);
    sub_23E2CE7C8(&qword_256D41BA8, (uint64_t (*)(void))sub_23E2CE6B8, (uint64_t (*)(void))sub_23E2CE6FC, MEMORY[0x24BEE04C0]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v15 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BC0);
    sub_23E2CE8CC(&qword_256D41BC8, MEMORY[0x24BEE4480], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ActionEndpoint.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t ActionEndpoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  int *v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  __int16 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  __int16 v40;
  char v41;

  v30 = a2;
  v31 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v31);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v34 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D484D0);
  v11 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (int *)type metadata accessor for ActionEndpoint();
  MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23E4A0220();
  v32 = v13;
  v16 = v36;
  sub_23E5384E0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  v29 = v4;
  v36 = v11;
  LOBYTE(v39) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v17 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v17(v38, v10, v5);
  LOBYTE(v39) = 1;
  v18 = v8;
  sub_23E538180();
  v19 = v37;
  v20 = v38;
  v17(&v38[v37[5]], v18, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v41 = 2;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v20[v19[6]] = v39;
  LOBYTE(v39) = 3;
  v21 = sub_23E538144();
  v22 = (uint64_t *)&v20[v19[7]];
  *v22 = v21;
  v22[1] = v23;
  LOBYTE(v39) = 4;
  v20[v19[8]] = sub_23E538150() & 1;
  v41 = 5;
  sub_23E2CE784();
  sub_23E538180();
  v24 = v40;
  v25 = &v20[v19[9]];
  *(_QWORD *)v25 = v39;
  *((_WORD *)v25 + 4) = v24;
  LOBYTE(v39) = 6;
  sub_23E1EE1C4(&qword_256D402F0, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
  v26 = (uint64_t)v29;
  sub_23E538180();
  sub_23E4A0264(v26, (uint64_t)&v20[v19[10]]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
  v41 = 7;
  sub_23E26BA10(&qword_256D402D8, (uint64_t (*)(void))sub_23E26BA78, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v20[v37[11]] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BA0);
  v41 = 8;
  sub_23E2CE7C8(&qword_256D41BE8, (uint64_t (*)(void))sub_23E2CE844, (uint64_t (*)(void))sub_23E2CE888, MEMORY[0x24BEE04E0]);
  sub_23E538180();
  *(_QWORD *)v37[12] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BC0);
  v41 = 9;
  sub_23E2CE8CC(&qword_256D41C00, MEMORY[0x24BEE44A8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v33);
  v27 = (uint64_t)v38;
  *(_QWORD *)&v38[v37[13]] = v39;
  sub_23E1E2F50(v27, v30, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  return sub_23E1E2FA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
}

uint64_t sub_23E49D670()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E49D6B0()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E49D6E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionEndpoint.init(from:)(a1, a2);
}

uint64_t sub_23E49D6FC(_QWORD *a1)
{
  return ActionEndpoint.encode(to:)(a1);
}

uint64_t ActionEndpoint.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t ActionEndpoint.foregroundColor.getter()
{
  return sub_23E537364();
}

uint64_t ActionEndpoint.isDoubleHigh.getter()
{
  return 0;
}

void ActionEndpoint.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ActionEndpoint.isFavorite.getter()
{
  return 0;
}

uint64_t ActionEndpoint.shouldShowInDashboard.getter()
{
  return 0;
}

uint64_t _s13HomeDataModel14ActionEndpointV7roomIDsShy10Foundation4UUIDVGvg_0()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.roomName.getter()
{
  return 0;
}

uint64_t ActionEndpoint.canBeToggled.getter()
{
  return 0;
}

uint64_t ActionEndpoint.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t ActionEndpoint.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionEndpoint() + 44));
  result = sub_23E26B68C(v3);
  if ((v6 & 1) == 0)
  {
    if (*(_DWORD *)(v3 + 36) == v5)
    {
      if (result != 1 << *(_BYTE *)(v3 + 32))
      {
        sub_23E2CD37C(result, v5, v3, &v20);
        v18 = IconSymbol.rawValue.getter();
        *(_QWORD *)a1 = v18;
        *(_QWORD *)(a1 + 8) = v19;
        *(_BYTE *)(a1 + 16) = 2;
        *(_QWORD *)(a1 + 24) = v18;
        *(_QWORD *)(a1 + 32) = v19;
        *(_BYTE *)(a1 + 40) = 2;
        *(_QWORD *)(a1 + 48) = v18;
        *(_QWORD *)(a1 + 56) = v19;
        *(_BYTE *)(a1 + 64) = 2;
        *(_BYTE *)(a1 + 88) = 2;
        *(_QWORD *)(a1 + 72) = v18;
        *(_QWORD *)(a1 + 80) = v19;
        goto LABEL_7;
      }
      if (qword_256D3ED80 == -1)
      {
LABEL_5:
        v7 = unk_256D42D60;
        v8 = byte_256D42D68;
        v9 = qword_256D42D70;
        v10 = unk_256D42D78;
        v11 = byte_256D42D80;
        v12 = qword_256D42D88;
        v13 = unk_256D42D90;
        v14 = byte_256D42D98;
        v15 = qword_256D42DA0;
        v16 = unk_256D42DA8;
        v17 = byte_256D42DB0;
        *(_QWORD *)a1 = qword_256D42D58;
        *(_QWORD *)(a1 + 8) = v7;
        *(_BYTE *)(a1 + 16) = v8;
        *(_QWORD *)(a1 + 24) = v9;
        *(_QWORD *)(a1 + 32) = v10;
        *(_BYTE *)(a1 + 40) = v11;
        *(_QWORD *)(a1 + 48) = v12;
        *(_QWORD *)(a1 + 56) = v13;
        *(_BYTE *)(a1 + 64) = v14;
        *(_QWORD *)(a1 + 72) = v15;
        *(_QWORD *)(a1 + 80) = v16;
        *(_BYTE *)(a1 + 88) = v17;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRetain();
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E49D94C()
{
  ActionEndpoint.isActivated.getter();
  return 0;
}

uint64_t sub_23E49D964()
{
  ActionEndpoint.statusString.getter();
  return 0;
}

char ActionEndpoint.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  __int16 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  char v13;
  char v15;
  unsigned __int8 v16;

  v3 = type metadata accessor for ActionEndpoint();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 44));
  v5 = sub_23E26B68C(v4);
  if ((v7 & 1) != 0)
    goto LABEL_11;
  if (*(_DWORD *)(v4 + 36) != v6)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return v5;
  }
  if (v5 == 1 << *(_BYTE *)(v4 + 32))
  {
    v8 = 26;
  }
  else
  {
    LOBYTE(v5) = sub_23E2CD37C(v5, v6, v4, &v16);
    v8 = v16;
  }
  v9 = v1 + *(int *)(v3 + 40);
  v10 = *(void **)(v9 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    LOBYTE(v5) = IconSymbol.init(rawValue:)(v12);
    v13 = v15;
  }
  else
  {
    v13 = 88;
  }
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = 1;
  *(_BYTE *)(a1 + 3) = v13;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return v5;
}

unint64_t sub_23E49DA64(int64_t a1, uint64_t a2)
{
  return sub_23E1E777C(a1, a2, type metadata accessor for StateSnapshot);
}

void sub_23E49DA70(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = sub_23E537C4C();

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v10 = v21[1];
              *v20 = *v21;
              v20[1] = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_23E49DC20(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = sub_23E53845C();
        CharacteristicKind.rawValue.getter(v10);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        result = sub_23E5384A4();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_BYTE *)(v12 + v3);
          v14 = (_BYTE *)(v12 + v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49DDF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23E53845C();
        swift_bridgeObjectRetain();
        sub_23E5375EC();
        v9 = sub_23E5384A4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49DFCC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  unint64_t v13;
  _DWORD *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_DWORD *)(v11 + 4 * v6);
        result = MEMORY[0x24264F6DC](*(_QWORD *)(a2 + 40), *v12, 4);
        v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = (_DWORD *)(v11 + 4 * v3);
            if (v3 != v6 || v16 >= v12 + 1)
              *v16 = *v12;
            v17 = *(_QWORD *)(a2 + 56);
            v18 = v17 + 40 * v3;
            v19 = (__int128 *)(v17 + 40 * v6);
            if (40 * v3 < (uint64_t)(40 * v6) || v18 >= (unint64_t)v19 + 40 || (v20 = v3 == v6, v3 = v6, !v20))
            {
              v9 = *v19;
              v10 = v19[1];
              *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
              *(_OWORD *)v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49E184(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  const void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23E53845C();
        sub_23E53848C();
        result = sub_23E5384A4();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          result = v13 + (v3 << 8);
          v14 = (const void *)(v13 + (v6 << 8));
          if (v3 << 8 != v6 << 8 || (v3 = v6, result >= (unint64_t)v14 + 256))
          {
            result = (unint64_t)memmove((void *)result, v14, 0x100uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v16 = *v15;
    v17 = (-1 << v3) - 1;
  }
  else
  {
    v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    v17 = *v15;
    v16 = (-1 << result) - 1;
  }
  *v15 = v17 & v16;
  v18 = *(_QWORD *)(a2 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49E34C(unint64_t a1, uint64_t a2)
{
  return sub_23E49EBCC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
}

unint64_t sub_23E49E358(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_23E538450();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for StaticMatterDevice() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49E514(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23E53845C();
        swift_bridgeObjectRetain();
        sub_23E5375EC();
        v10 = sub_23E5384A4();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49E6E8(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_23E53845C();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x23E49E9ECLL);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_23E49EA14(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _WORD *v11;
  unint64_t v12;
  _WORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_WORD *)(v10 + 2 * v6);
        result = MEMORY[0x24264F6DC](*(_QWORD *)(a2 + 40), (unsigned __int16)*v11, 2);
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_WORD *)(v10 + 2 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = v16 + 24 * v3;
            v18 = (__int128 *)(v16 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              v9 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49EBC0(unint64_t a1, uint64_t a2)
{
  return sub_23E49EBCC(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
}

unint64_t sub_23E49EBCC(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _WORD *v12;
  unint64_t v13;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_WORD *)(v11 + 2 * v7);
        result = MEMORY[0x24264F6DC](*(_QWORD *)(a2 + 40), (unsigned __int16)*v12, 2);
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13)
            goto LABEL_6;
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        v16 = (_WORD *)(v11 + 2 * v4);
        if (v4 != v7 || v16 >= v12 + 1)
          *v16 = *v12;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49ED98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = sub_23E53845C();
        CharacteristicKind.rawValue.getter(v9);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        result = sub_23E5384A4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49EF70(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23E53845C();
        sub_23E53848C();
        result = sub_23E5384A4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_DWORD *)(v11 + 4 * v3);
          v13 = (_DWORD *)(v11 + 4 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 32 * v3);
          v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 2))
          {
            v9 = v16[1];
            *v15 = *v16;
            v15[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49F128(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_23E536F80();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23E5374CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49F3C8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23E536F80();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23E5374CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49F66C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_23E536F80();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23E5374CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 40 * a1;
            v25 = (__int128 *)(v23 + 40 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 40))
            {
              v26 = *v25;
              v27 = v25[1];
              *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
              *(_OWORD *)v24 = v26;
              *(_OWORD *)(v24 + 16) = v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

char *sub_23E49F918(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v4 = sub_23E536F80();
  v33 = *(_QWORD *)(v4 - 8);
  result = (char *)MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = (char *)sub_23E537D48();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v32 = (unint64_t)(result + 1) & v11;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v31(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_23E5374CC();
        result = (char *)(*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v32)
        {
          if (v19 >= v32 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = (char *)(v22 + (a1 << 7));
            v23 = (char *)(v22 + (v10 << 7));
            if (a1 != v10 || (a1 = v10, result >= v23 + 128))
            {
              result = (char *)memmove(result, v23, 0x80uLL);
              v13 = v17;
              v12 = v15;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v32 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49FBC0(int64_t a1, uint64_t a2)
{
  return sub_23E1E777C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

unint64_t sub_23E49FBCC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = sub_23E53845C();
        CharacteristicKind.rawValue.getter(v9);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        result = sub_23E5384A4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_BYTE *)(v11 + v3);
        v13 = (_BYTE *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for StaticCharacteristic() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E49FDCC(int64_t a1, uint64_t a2)
{
  return sub_23E1E777C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

unint64_t sub_23E49FDD8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32[4];

  v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v31 = a2 + 64;
    result = sub_23E537D48();
    v12 = v31;
    if ((*(_QWORD *)(v31 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v29 = v11;
      v30 = (result + 1) & v11;
      v13 = *(_QWORD *)(v5 + 72);
      do
      {
        v14 = v13 * v10;
        sub_23E1E2F50(*(_QWORD *)(a2 + 48) + v13 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        sub_23E53845C();
        StaticAccessory.hash(into:)(v32);
        StaticService.hash(into:)(v32);
        StaticCharacteristic.hash(into:)();
        v15 = sub_23E5384A4();
        result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v16 = v15 & v11;
        if (a1 >= (uint64_t)v30)
        {
          if (v16 >= v30 && a1 >= (uint64_t)v16)
          {
LABEL_12:
            if (v13 * a1 < v14
              || *(_QWORD *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v13))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v17 = *(_QWORD *)(a2 + 56);
            v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for IconTextValueStringDataHolder() - 8) + 72);
            v19 = v18 * a1;
            result = v17 + v18 * a1;
            v20 = v18 * v10;
            v21 = v17 + v18 * v10 + v18;
            if (v19 < v20 || result >= v21)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v11 = v29;
            }
            else
            {
              a1 = v10;
              v11 = v29;
              if (v19 != v20)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
          }
        }
        else if (v16 >= v30 || a1 >= (uint64_t)v16)
        {
          goto LABEL_12;
        }
        v10 = (v10 + 1) & v11;
        v12 = v31;
      }
      while (((*(_QWORD *)(v31 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v23 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t type metadata accessor for ActionEndpoint()
{
  uint64_t result;

  result = qword_256D48568;
  if (!qword_256D48568)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s13HomeDataModel14ActionEndpointV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  BOOL v16;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for ActionEndpoint();
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
    || (sub_23E1F8470(*(_QWORD *)(a1 + v4[6]), *(_QWORD *)(a2 + v4[6])) & 1) == 0)
  {
    return 0;
  }
  v5 = v4[7];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if ((v9 || (sub_23E538354() & 1) != 0)
    && *(unsigned __int8 *)(a1 + v4[8]) == *(unsigned __int8 *)(a2 + v4[8])
    && ((v10 = v4[9],
         v11 = *(_QWORD *)(a1 + v10),
         v12 = *(unsigned __int16 *)(a1 + v10 + 8),
         v13 = (uint64_t *)(a2 + v10),
         v14 = *v13,
         v15 = *((unsigned __int16 *)v13 + 4),
         v11 == v14)
      ? (v16 = v12 == v15)
      : (v16 = 0),
        v16
     && _s13HomeDataModel18MatterTileMetadataV2eeoiySbAC_ACtFZ_0(a1 + v4[10], a2 + v4[10])
     && (sub_23E336398(*(_QWORD *)(a1 + v4[11]), *(_QWORD *)(a2 + v4[11])) & 1) != 0
     && (sub_23E2B141C(*(_QWORD *)(a1 + v4[12]), *(_QWORD *)(a2 + v4[12])) & 1) != 0))
  {
    return sub_23E336590(*(_QWORD *)(a1 + v4[13]), *(_QWORD *)(a2 + v4[13]));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E4A0208(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_23E49C4F0(a1, a2, *(_QWORD *)(v2 + 16));
}

unint64_t sub_23E4A0220()
{
  unint64_t result;

  result = qword_256D484C8;
  if (!qword_256D484C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55617C, &type metadata for ActionEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D484C8);
  }
  return result;
}

uint64_t sub_23E4A0264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4A02A8()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D484E0, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
}

uint64_t sub_23E4A02D4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D484F0, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  a1[2] = sub_23E1EE1C4(&qword_256D484F8, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  a1[3] = sub_23E1EE1C4(&qword_256D40300, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  a1[4] = sub_23E1EE1C4(&qword_256D402C0, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  a1[5] = sub_23E1EE1C4(&qword_256D48500, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  result = sub_23E1EE1C4(&qword_256D48508, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
  a1[6] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionEndpoint(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_WORD *)v14 + 4) = *((_WORD *)v15 + 4);
    v16 = a3[10];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)((char *)a2 + v16 + 8);
    *(_QWORD *)v17 = *(_QWORD *)((char *)a2 + v16);
    *((_QWORD *)v17 + 1) = v19;
    v20 = *(_QWORD *)((char *)a2 + v16 + 24);
    *((_QWORD *)v17 + 2) = *(_QWORD *)((char *)a2 + v16 + 16);
    *((_QWORD *)v17 + 3) = v20;
    v21 = *(_QWORD *)((char *)a2 + v16 + 40);
    *((_QWORD *)v17 + 4) = *(_QWORD *)((char *)a2 + v16 + 32);
    *((_QWORD *)v17 + 5) = v21;
    *((_DWORD *)v17 + 12) = *(_DWORD *)((char *)a2 + v16 + 48);
    v22 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v17[v22];
    v23 = &v18[v22];
    v24 = sub_23E536F20();
    v25 = *(_QWORD *)(v24 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    v28 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
    *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  void *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_WORD *)(v13 + 8) = *(_WORD *)(v14 + 8);
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(a2 + v15 + 8);
  *(_QWORD *)v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 8) = v18;
  v19 = *(_QWORD *)(a2 + v15 + 24);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  *(_QWORD *)(v16 + 24) = v19;
  v20 = *(_QWORD *)(a2 + v15 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(a2 + v15 + 32);
  *(_QWORD *)(v16 + 40) = v20;
  *(_DWORD *)(v16 + 48) = *(_DWORD *)(a2 + v15 + 48);
  v21 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v16 + v21);
  v22 = (const void *)(v17 + v21);
  v23 = sub_23E536F20();
  v24 = *(_QWORD *)(v23 - 8);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  v26 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  v14 = a3[10];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  *(_BYTE *)(v15 + 49) = *(_BYTE *)(v16 + 49);
  *(_BYTE *)(v15 + 50) = *(_BYTE *)(v16 + 50);
  *(_BYTE *)(v15 + 51) = *(_BYTE *)(v16 + 51);
  v17 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v18 = (void *)(v15 + v17);
  v19 = (void *)(v16 + v17);
  v20 = sub_23E536F20();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  v12 = a3[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(a2 + v12 + 32);
  *(_DWORD *)(v13 + 48) = *(_DWORD *)(a2 + v12 + 48);
  v16 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v17 = (void *)(v13 + v16);
  v18 = (const void *)(v14 + v16);
  v19 = sub_23E536F20();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_WORD *)(v14 + 8) = *(_WORD *)(v15 + 8);
  v16 = a3[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  *(_QWORD *)(v17 + 40) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v17 + 48) = *(_DWORD *)(v18 + 48);
  v22 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v23 = (void *)(v17 + v22);
  v24 = (void *)(v18 + v22);
  v25 = sub_23E536F20();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionEndpoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4A0F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for MatterTileMetadata();
    v10 = a1 + *(int *)(a3 + 40);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionEndpoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4A0FB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for MatterTileMetadata();
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E4A1058()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActionEndpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E4A1158 + 4 * byte_23E555E9F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E4A118C + 4 * byte_23E555E9A[v4]))();
}

uint64_t sub_23E4A118C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A1194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4A119CLL);
  return result;
}

uint64_t sub_23E4A11A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4A11B0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E4A11B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A11BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionEndpoint.CodingKeys()
{
  return &type metadata for ActionEndpoint.CodingKeys;
}

unint64_t sub_23E4A11DC()
{
  unint64_t result;

  result = qword_256D485C0;
  if (!qword_256D485C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556154, &type metadata for ActionEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D485C0);
  }
  return result;
}

unint64_t sub_23E4A1224()
{
  unint64_t result;

  result = qword_256D485C8;
  if (!qword_256D485C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5560C4, &type metadata for ActionEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D485C8);
  }
  return result;
}

unint64_t sub_23E4A126C()
{
  unint64_t result;

  result = qword_256D485D0;
  if (!qword_256D485D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5560EC, &type metadata for ActionEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D485D0);
  }
  return result;
}

uint64_t sub_23E4A12B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7344496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7372657473756C63 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E564DA0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23E4A16D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(uint64_t, char *, uint64_t);
  _QWORD v20[5];
  uint64_t v21;
  int v22;

  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  *(_QWORD *)(a5 + 8) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  *(_QWORD *)(a5 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  *(_QWORD *)(a5 + 24) = v14;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 72))(v20, a3, a4);
  sub_23E4A24CC((uint64_t)v20, (uint64_t)&v21);
  v15 = v22;
  *(_QWORD *)(a5 + 32) = v21;
  *(_DWORD *)(a5 + 40) = v15;
  *(_BYTE *)(a5 + 44) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4) & 1;
  (*(void (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  v16 = type metadata accessor for StaticAlarm();
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v17(a5 + *(int *)(v16 + 36), v13, v10);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(a5 + *(int *)(v16 + 40), a2, v10);
}

uint64_t StaticAlarm.hour.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t StaticAlarm.minute.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t StaticAlarm.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAlarm.repeatSchedule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_DWORD *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t StaticAlarm.isEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t StaticAlarm.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticAlarm() + 36);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StaticAlarm()
{
  uint64_t result;

  result = qword_256D48790;
  if (!qword_256D48790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StaticAlarm.parentContainerUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticAlarm() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticAlarm.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v1 = *(_QWORD *)(v0 + 32);
  sub_23E538468();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  sub_23E53848C();
  sub_23E538474();
  type metadata accessor for StaticAlarm();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t sub_23E4A1AA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4A1AD4 + 4 * byte_23E556240[a1]))(1920298856, 0xE400000000000000);
}

uint64_t sub_23E4A1AD4()
{
  return 0x6574756E696DLL;
}

uint64_t sub_23E4A1AE8()
{
  return 0x656C746974;
}

uint64_t sub_23E4A1AFC()
{
  return 0x6353746165706572;
}

uint64_t sub_23E4A1B20()
{
  return 0x656C62616E457369;
}

uint64_t sub_23E4A1B3C()
{
  return 25705;
}

unint64_t sub_23E4A1B48()
{
  return 0xD000000000000013;
}

uint64_t sub_23E4A1B64()
{
  unsigned __int8 *v0;

  return sub_23E4A1AA8(*v0);
}

uint64_t sub_23E4A1B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4A4938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4A1B90()
{
  sub_23E4A47EC();
  return sub_23E538570();
}

uint64_t sub_23E4A1BB8()
{
  sub_23E4A47EC();
  return sub_23E53857C();
}

uint64_t StaticAlarm.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v11;
  int v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D485D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4A47EC();
  sub_23E5384EC();
  LOBYTE(v11) = 0;
  sub_23E538294();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_23E538294();
    LOBYTE(v11) = 2;
    sub_23E5381EC();
    v9 = *(_DWORD *)(v3 + 40);
    v11 = *(_QWORD *)(v3 + 32);
    v12 = v9;
    v13 = 3;
    sub_23E4A4830();
    sub_23E5382AC();
    LOBYTE(v11) = 4;
    sub_23E53827C();
    type metadata accessor for StaticAlarm();
    LOBYTE(v11) = 5;
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E5382AC();
    LOBYTE(v11) = 6;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticAlarm.hashValue.getter()
{
  sub_23E53845C();
  StaticAlarm.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticAlarm.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  void (*v24)(uint64_t, char *, uint64_t);
  _QWORD v26[3];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;

  v27 = a2;
  v3 = sub_23E536F80();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v26 - v6;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D485F0);
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticAlarm();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E4A47EC();
  v15 = v33;
  sub_23E5384E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  v16 = v7;
  v33 = v11;
  v17 = v8;
  v18 = v28;
  v19 = v29;
  v20 = v30;
  LOBYTE(v34) = 0;
  v21 = (uint64_t)v13;
  *(_QWORD *)v13 = sub_23E538168();
  LOBYTE(v34) = 1;
  *((_QWORD *)v13 + 1) = sub_23E538168();
  LOBYTE(v34) = 2;
  *((_QWORD *)v13 + 2) = sub_23E5380D8();
  *((_QWORD *)v13 + 3) = v22;
  v36 = 3;
  sub_23E4A4874();
  sub_23E538180();
  v23 = v35;
  *((_QWORD *)v13 + 4) = v34;
  *((_DWORD *)v13 + 10) = v23;
  LOBYTE(v34) = 4;
  v26[2] = 0;
  v13[44] = sub_23E538150() & 1;
  LOBYTE(v34) = 5;
  v26[1] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v24(v21 + *(int *)(v33 + 36), v16, v20);
  LOBYTE(v34) = 6;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v31);
  v24(v21 + *(int *)(v33 + 40), v18, v20);
  sub_23E4A48B8(v21, v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return sub_23E4A48FC(v21);
}

uint64_t sub_23E4A2270()
{
  sub_23E53845C();
  StaticAlarm.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4A22B0()
{
  sub_23E53845C();
  StaticAlarm.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4A22E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAlarm.init(from:)(a1, a2);
}

uint64_t sub_23E4A22FC(_QWORD *a1)
{
  return StaticAlarm.encode(to:)(a1);
}

uint64_t sub_23E4A2310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

BOOL sub_23E4A2350(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __OFSUB__(*a1, *a2);
  v2 = (uint64_t)(*a1 - *a2) < 0;
  if (*a1 == *a2)
  {
    v4 = a1[1];
    v5 = a2[1];
    v3 = __OFSUB__(v4, v5);
    v2 = v4 - v5 < 0;
    if (v4 == v5)
      JUMPOUT(0x24264E1E8);
  }
  return v2 != v3;
}

BOOL static StaticAlarm.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1 < *a2;
  if (*a1 == *a2)
  {
    v3 = a1[1];
    v4 = a2[1];
    v2 = v3 < v4;
    if (v3 == v4)
    {
      type metadata accessor for StaticAlarm();
      JUMPOUT(0x24264E1E8);
    }
  }
  return v2;
}

BOOL sub_23E4A23EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2 < *a1;
  if (*a2 == *a1 && (v4 = a2[1], v5 = a1[1], v3 = v4 < v5, v4 == v5))
    v6 = MEMORY[0x24264E1E8]((char *)a2 + *(int *)(a3 + 36), (char *)a1 + *(int *)(a3 + 36));
  else
    v6 = v3;
  return (v6 & 1) == 0;
}

BOOL sub_23E4A2440(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1 < *a2;
  if (*a1 == *a2 && (v4 = a1[1], v5 = a2[1], v3 = v4 < v5, v4 == v5))
    v6 = MEMORY[0x24264E1E8]((char *)a1 + *(int *)(a3 + 36), (char *)a2 + *(int *)(a3 + 36));
  else
    v6 = v3;
  return (v6 & 1) == 0;
}

BOOL sub_23E4A2490(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __OFSUB__(*a2, *a1);
  v2 = (uint64_t)(*a2 - *a1) < 0;
  if (*a2 == *a1)
  {
    v4 = a2[1];
    v5 = a1[1];
    v3 = __OFSUB__(v4, v5);
    v2 = v4 - v5 < 0;
    if (v4 == v5)
      JUMPOUT(0x24264E1E8);
  }
  return v2 != v3;
}

uint64_t sub_23E4A24CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  sub_23E4A6564(a1, (uint64_t)&v38);
  if (!v39)
  {
    sub_23E4A65AC(a1);
    result = sub_23E4A65AC((uint64_t)&v38);
    v7 = 0;
    v10 = (char *)MEMORY[0x24BEE4AF8];
LABEL_46:
    *(_QWORD *)a2 = v10;
    *(_DWORD *)(a2 + 8) = v7;
    return result;
  }
  sub_23E1E6C84(&v38, (uint64_t)v40);
  v4 = v41;
  v5 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!HIDWORD(v6))
  {
    v7 = v6;
    v8 = v41;
    v9 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(1, v8, v9) & 1) != 0)
    {
      v10 = sub_23E51FDEC(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v12 = *((_QWORD *)v10 + 2);
      v11 = *((_QWORD *)v10 + 3);
      if (v12 >= v11 >> 1)
        v10 = sub_23E51FDEC((char *)(v11 > 1), v12 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v12 + 1;
      v10[v12 + 32] = 0;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
    }
    v14 = v41;
    v15 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(2, v14, v15) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v17 = *((_QWORD *)v10 + 2);
      v16 = *((_QWORD *)v10 + 3);
      if (v17 >= v16 >> 1)
        v10 = sub_23E51FDEC((char *)(v16 > 1), v17 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v17 + 1;
      v10[v17 + 32] = 1;
    }
    v18 = v41;
    v19 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(4, v18, v19) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v21 = *((_QWORD *)v10 + 2);
      v20 = *((_QWORD *)v10 + 3);
      if (v21 >= v20 >> 1)
        v10 = sub_23E51FDEC((char *)(v20 > 1), v21 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v21 + 1;
      v10[v21 + 32] = 2;
    }
    v22 = v41;
    v23 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(8, v22, v23) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v25 = *((_QWORD *)v10 + 2);
      v24 = *((_QWORD *)v10 + 3);
      if (v25 >= v24 >> 1)
        v10 = sub_23E51FDEC((char *)(v24 > 1), v25 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v25 + 1;
      v10[v25 + 32] = 3;
    }
    v26 = v41;
    v27 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(16, v26, v27) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v29 = *((_QWORD *)v10 + 2);
      v28 = *((_QWORD *)v10 + 3);
      if (v29 >= v28 >> 1)
        v10 = sub_23E51FDEC((char *)(v28 > 1), v29 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v29 + 1;
      v10[v29 + 32] = 4;
    }
    v30 = v41;
    v31 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(32, v30, v31) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v33 = *((_QWORD *)v10 + 2);
      v32 = *((_QWORD *)v10 + 3);
      if (v33 >= v32 >> 1)
        v10 = sub_23E51FDEC((char *)(v32 > 1), v33 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v33 + 1;
      v10[v33 + 32] = 5;
    }
    v34 = v41;
    v35 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(64, v34, v35) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_23E51FDEC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v37 = *((_QWORD *)v10 + 2);
      v36 = *((_QWORD *)v10 + 3);
      if (v37 >= v36 >> 1)
        v10 = sub_23E51FDEC((char *)(v36 > 1), v37 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v37 + 1;
      v10[v37 + 32] = 6;
    }
    sub_23E4A65AC(a1);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    goto LABEL_46;
  }
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t StaticAlarm.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, _QWORD, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = sub_23E536F20();
  v20 = *(_QWORD *)(v1 - 8);
  v21 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536FEC();
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536BC0();
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536FC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D48600);
  v10 = sub_23E536FE0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23E546C30;
  v15 = *(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104);
  v15(v14 + v13, *MEMORY[0x24BDCF258], v10);
  v15(v14 + v13 + v12, *MEMORY[0x24BDCF230], v10);
  v15(v14 + v13 + 2 * v12, *MEMORY[0x24BDCF278], v10);
  v15(v14 + v13 + 3 * v12, *MEMORY[0x24BDCF200], v10);
  v15(v14 + v13 + 4 * v12, *MEMORY[0x24BDCF250], v10);
  v15(v14 + v13 + 5 * v12, *MEMORY[0x24BDCF240], v10);
  sub_23E2D0A4C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_23E536F08();
  sub_23E536FBC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
  v16 = *(void (**)(char *, uint64_t))(v19 + 8);
  v16(v6, v4);
  sub_23E536BA8();
  sub_23E536BB4();
  sub_23E536FC8();
  sub_23E536FD4();
  v16(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v9, v23);
}

BOOL static StaticAlarm.RepeatSchedule.Day.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticAlarm.RepeatSchedule.Day.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E4A2CF8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4A2D24 + 4 * byte_23E556247[*v0]))(0x7961646E6F6DLL, 0xE600000000000000);
}

uint64_t sub_23E4A2D24()
{
  return 0x79616473657574;
}

uint64_t sub_23E4A2D3C()
{
  return 0x616473656E646577;
}

uint64_t sub_23E4A2D58()
{
  return 0x7961647372756874;
}

uint64_t sub_23E4A2D70()
{
  return 0x796164697266;
}

uint64_t sub_23E4A2D80()
{
  return 0x7961647275746173;
}

uint64_t sub_23E4A2D98(uint64_t a1)
{
  return a1 + 1542;
}

uint64_t sub_23E4A2DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4A61B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4A2DC4()
{
  sub_23E4A4C10();
  return sub_23E538570();
}

uint64_t sub_23E4A2DEC()
{
  sub_23E4A4C10();
  return sub_23E53857C();
}

uint64_t sub_23E4A2E14()
{
  sub_23E4A4CDC();
  return sub_23E538570();
}

uint64_t sub_23E4A2E3C()
{
  sub_23E4A4CDC();
  return sub_23E53857C();
}

uint64_t sub_23E4A2E64()
{
  sub_23E4A4DEC();
  return sub_23E538570();
}

uint64_t sub_23E4A2E8C()
{
  sub_23E4A4DEC();
  return sub_23E53857C();
}

uint64_t sub_23E4A2EB4()
{
  sub_23E4A4C98();
  return sub_23E538570();
}

uint64_t sub_23E4A2EDC()
{
  sub_23E4A4C98();
  return sub_23E53857C();
}

uint64_t sub_23E4A2F04()
{
  sub_23E4A4C54();
  return sub_23E538570();
}

uint64_t sub_23E4A2F2C()
{
  sub_23E4A4C54();
  return sub_23E53857C();
}

uint64_t sub_23E4A2F54()
{
  sub_23E4A4D20();
  return sub_23E538570();
}

uint64_t sub_23E4A2F7C()
{
  sub_23E4A4D20();
  return sub_23E53857C();
}

uint64_t sub_23E4A2FA4()
{
  sub_23E4A4DA8();
  return sub_23E538570();
}

uint64_t sub_23E4A2FCC()
{
  sub_23E4A4DA8();
  return sub_23E53857C();
}

uint64_t sub_23E4A2FF4()
{
  sub_23E4A4D64();
  return sub_23E538570();
}

uint64_t sub_23E4A301C()
{
  sub_23E4A4D64();
  return sub_23E53857C();
}

void StaticAlarm.RepeatSchedule.Day.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48608);
  v17[16] = *(_QWORD *)(v3 - 8);
  v17[17] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[15] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48610);
  v17[13] = *(_QWORD *)(v5 - 8);
  v17[14] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[12] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48618);
  v17[10] = *(_QWORD *)(v7 - 8);
  v17[11] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[9] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48620);
  v17[7] = *(_QWORD *)(v9 - 8);
  v17[8] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[6] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48628);
  v17[4] = *(_QWORD *)(v11 - 8);
  v17[5] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[3] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48630);
  v17[1] = *(_QWORD *)(v13 - 8);
  v17[2] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48638);
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48640);
  v17[19] = *(_QWORD *)(v15 - 8);
  v17[20] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4A4C10();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E4A32B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 71) = 0;
  sub_23E4A4DEC();
  v5 = *(_QWORD *)(v4 - 96);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

uint64_t StaticAlarm.RepeatSchedule.Day.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticAlarm.RepeatSchedule.Day.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;

  v50 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48688);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48690);
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48698);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486A0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486A8);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486B0);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486B8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486C0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_23E4A4C10();
  v22 = v52;
  sub_23E5384E0();
  if (!v22)
  {
    v30[2] = v16;
    v30[0] = v14;
    v30[1] = v13;
    v52 = v18;
    v31 = v17;
    v23 = v20;
    v24 = sub_23E5381C8();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_23E537ED4();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v27 = &type metadata for StaticAlarm.RepeatSchedule.Day;
    v28 = v31;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
}

void sub_23E4A3944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 70) = 1;
  sub_23E4A4DA8();
  v4 = *(_QWORD *)(v3 - 160);
  v5 = *(_QWORD *)(v3 - 264);
  sub_23E5380C0();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v4, *(_QWORD *)(v3 - 248));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
    JUMPOUT(0x23E4A3BC8);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23E4A3914);
}

uint64_t sub_23E4A3BD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAlarm.RepeatSchedule.Day.init(from:)(a1, a2);
}

void sub_23E4A3BE4(_QWORD *a1)
{
  StaticAlarm.RepeatSchedule.Day.encode(to:)(a1);
}

uint64_t StaticAlarm.RepeatSchedule.days.getter()
{
  return swift_bridgeObjectRetain();
}

id StaticAlarm.RepeatSchedule.detailDescription.getter()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)DetailDateMaskToString();
  if (result)
  {
    v1 = result;
    v2 = sub_23E53755C();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StaticAlarm.RepeatSchedule.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_23E538468();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  return sub_23E53848C();
}

uint64_t sub_23E4A3CB0()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6156776172;
  else
    return 1937334628;
}

uint64_t sub_23E4A3CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4A6484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4A3D08()
{
  sub_23E4A4E30();
  return sub_23E538570();
}

uint64_t sub_23E4A3D30()
{
  sub_23E4A4E30();
  return sub_23E53857C();
}

uint64_t StaticAlarm.RepeatSchedule.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[3];
  char v11;
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[2] = *((_DWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4A4E30();
  sub_23E5384EC();
  v13 = v8;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D486D8);
  sub_23E4A4EB8(&qword_256D486E0, (uint64_t (*)(void))sub_23E4A4E74, MEMORY[0x24BEE12A0]);
  sub_23E5382AC();
  if (!v2)
  {
    v11 = 1;
    sub_23E5382DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticAlarm.RepeatSchedule.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_23E53845C();
  sub_23E538468();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t StaticAlarm.RepeatSchedule.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  _BYTE v12[16];
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D486F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4A4E30();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D486D8);
  v12[15] = 0;
  sub_23E4A4EB8(&qword_256D486F8, (uint64_t (*)(void))sub_23E4A4F20, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  v10 = sub_23E5381B0();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_DWORD *)(a2 + 8) = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4A40E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_23E538468();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  return sub_23E53848C();
}

uint64_t sub_23E4A4144()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_23E53845C();
  v2 = *(_QWORD *)(v1 + 16);
  sub_23E538468();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      ++v3;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E4A41BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAlarm.RepeatSchedule.init(from:)(a1, a2);
}

uint64_t sub_23E4A41D0(_QWORD *a1)
{
  return StaticAlarm.RepeatSchedule.encode(to:)(a1);
}

Swift::Void __swiftcall StaticAlarm.setEnable(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for StaticAlarm();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_23E4A48B8(v1, (uint64_t)v5);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_23E4A501C((uint64_t)v5, v11 + v10);
  sub_23E26D310((uint64_t)v8, (uint64_t)&unk_256D48710, v11);
  swift_release();
}

uint64_t sub_23E4A42F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23E4A4310()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23E5378F8();
  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4A437C()
{
  swift_release();
  if (qword_2543327B8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4A43E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4A4440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  swift_release();
  v2 = type metadata accessor for StaticAlarm();
  v3 = v1 + *(int *)(v2 + 36);
  v4 = v1 + *(int *)(v2 + 40);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E4A65EC;
  return CoordinationDataModel.toggleAlarm(staticAlarmID:parentContainerID:)(v0[2], v3, v4);
}

uint64_t StaticAlarm.delete()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E4A44E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23E5378F8();
  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4A454C()
{
  swift_release();
  if (qword_2543327B8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4A45B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4A4610()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  swift_release();
  v2 = type metadata accessor for StaticAlarm();
  v3 = v1 + *(int *)(v2 + 36);
  v4 = v1 + *(int *)(v2 + 40);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E421918;
  return CoordinationDataModel.deleteAlarm(_:parentContainerID:)(v0[2], v3, v4);
}

BOOL _s13HomeDataModel11StaticAlarmV14RepeatScheduleV2eeoiySbAE_AEtFZ_0(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  int v10;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4 == *(_QWORD *)(*(_QWORD *)a2 + 16))
  {
    if (v4)
      v5 = v2 == v3;
    else
      v5 = 1;
    if (v5)
      return a1[2] == a2[2];
    v6 = (unsigned __int8 *)(v2 + 32);
    v7 = (unsigned __int8 *)(v3 + 32);
    while (1)
    {
      v9 = *v6++;
      v8 = v9;
      v10 = *v7++;
      if (v8 != v10)
        break;
      if (!--v4)
        return a1[2] == a2[2];
    }
  }
  return 0;
}

uint64_t _s13HomeDataModel11StaticAlarmV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (!v5 || (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v4 != v5) && (sub_23E538354() & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v6 = *(_DWORD *)(a1 + 40);
  v7 = *(_DWORD *)(a2 + 40);
  if (sub_23E2627B4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32))
    && v6 == v7
    && *(unsigned __int8 *)(a1 + 44) == *(unsigned __int8 *)(a2 + 44))
  {
    type metadata accessor for StaticAlarm();
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  return 0;
}

unint64_t sub_23E4A47EC()
{
  unint64_t result;

  result = qword_256D485E0;
  if (!qword_256D485E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556DEC, &type metadata for StaticAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D485E0);
  }
  return result;
}

unint64_t sub_23E4A4830()
{
  unint64_t result;

  result = qword_256D485E8;
  if (!qword_256D485E8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule, &type metadata for StaticAlarm.RepeatSchedule);
    atomic_store(result, (unint64_t *)&qword_256D485E8);
  }
  return result;
}

unint64_t sub_23E4A4874()
{
  unint64_t result;

  result = qword_256D485F8;
  if (!qword_256D485F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule, &type metadata for StaticAlarm.RepeatSchedule);
    atomic_store(result, (unint64_t *)&qword_256D485F8);
  }
  return result;
}

uint64_t sub_23E4A48B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4A48FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4A4938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1920298856 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6353746165706572 && a2 == 0xEE00656C75646568 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AEF0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_23E4A4C10()
{
  unint64_t result;

  result = qword_256D48648;
  if (!qword_256D48648)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556D9C, &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48648);
  }
  return result;
}

unint64_t sub_23E4A4C54()
{
  unint64_t result;

  result = qword_256D48650;
  if (!qword_256D48650)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556D4C, &type metadata for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48650);
  }
  return result;
}

unint64_t sub_23E4A4C98()
{
  unint64_t result;

  result = qword_256D48658;
  if (!qword_256D48658)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556CFC, &type metadata for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48658);
  }
  return result;
}

unint64_t sub_23E4A4CDC()
{
  unint64_t result;

  result = qword_256D48660;
  if (!qword_256D48660)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556CAC, &type metadata for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48660);
  }
  return result;
}

unint64_t sub_23E4A4D20()
{
  unint64_t result;

  result = qword_256D48668;
  if (!qword_256D48668)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556C5C, &type metadata for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48668);
  }
  return result;
}

unint64_t sub_23E4A4D64()
{
  unint64_t result;

  result = qword_256D48670;
  if (!qword_256D48670)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556C0C, &type metadata for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48670);
  }
  return result;
}

unint64_t sub_23E4A4DA8()
{
  unint64_t result;

  result = qword_256D48678;
  if (!qword_256D48678)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556BBC, &type metadata for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48678);
  }
  return result;
}

unint64_t sub_23E4A4DEC()
{
  unint64_t result;

  result = qword_256D48680;
  if (!qword_256D48680)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556B6C, &type metadata for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48680);
  }
  return result;
}

unint64_t sub_23E4A4E30()
{
  unint64_t result;

  result = qword_256D486D0;
  if (!qword_256D486D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556B1C, &type metadata for StaticAlarm.RepeatSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D486D0);
  }
  return result;
}

unint64_t sub_23E4A4E74()
{
  unint64_t result;

  result = qword_256D486E8;
  if (!qword_256D486E8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule.Day, &type metadata for StaticAlarm.RepeatSchedule.Day);
    atomic_store(result, (unint64_t *)&qword_256D486E8);
  }
  return result;
}

uint64_t sub_23E4A4EB8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D486D8);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E4A4F20()
{
  unint64_t result;

  result = qword_256D48700;
  if (!qword_256D48700)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule.Day, &type metadata for StaticAlarm.RepeatSchedule.Day);
    atomic_store(result, &qword_256D48700);
  }
  return result;
}

uint64_t sub_23E4A4F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = type metadata accessor for StaticAlarm();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 36);
  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v4 + *(int *)(v1 + 40), v6);
  return swift_deallocObject();
}

uint64_t sub_23E4A501C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4A5060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticAlarm() - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23E23C694;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch();
}

uint64_t sub_23E4A50DC()
{
  return sub_23E1EE1C4(&qword_256D48720, (uint64_t (*)(uint64_t))type metadata accessor for StaticAlarm, (uint64_t)&protocol conformance descriptor for StaticAlarm);
}

unint64_t sub_23E4A510C()
{
  unint64_t result;

  result = qword_256D48728;
  if (!qword_256D48728)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule.Day, &type metadata for StaticAlarm.RepeatSchedule.Day);
    atomic_store(result, (unint64_t *)&qword_256D48728);
  }
  return result;
}

unint64_t sub_23E4A5154()
{
  unint64_t result;

  result = qword_256D48730;
  if (!qword_256D48730)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlarm.RepeatSchedule, &type metadata for StaticAlarm.RepeatSchedule);
    atomic_store(result, (unint64_t *)&qword_256D48730);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticAlarm(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[4];
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_BYTE *)(a1 + 44) = *((_BYTE *)a2 + 44);
    v9 = *(int *)(a3 + 36);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    *(_QWORD *)(a1 + 32) = v8;
    v12 = sub_23E536F80();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13((uint64_t)v4 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v12);
  }
  return v4;
}

uint64_t destroy for StaticAlarm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 40), v5);
}

uint64_t initializeWithCopy for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + 32) = v7;
  v11 = sub_23E536F80();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t assignWithCopy for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v9);
  return a1;
}

uint64_t initializeWithTake for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t assignWithTake for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAlarm()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4A5614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StaticAlarm()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4A569C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E4A5710()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAlarm.RepeatSchedule(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 12))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticAlarm.RepeatSchedule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 12) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule()
{
  return &type metadata for StaticAlarm.RepeatSchedule;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day;
}

uint64_t storeEnumTagSinglePayload for StaticAlarm.RepeatSchedule.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E4A5974 + 4 * byte_23E556261[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E4A59A8 + 4 * byte_23E55625C[v4]))();
}

uint64_t sub_23E4A59A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A59B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4A59B8);
  return result;
}

uint64_t sub_23E4A59C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4A59CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E4A59D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A59D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.CodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.CodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys;
}

uint64_t _s13HomeDataModel11StaticAlarmV14RepeatScheduleV3DayOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E4A5AC0 + 4 * byte_23E55626B[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E4A5AF4 + 4 * byte_23E556266[v4]))();
}

uint64_t sub_23E4A5AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A5AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4A5B04);
  return result;
}

uint64_t sub_23E4A5B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4A5B18);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E4A5B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A5B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.CodingKeys()
{
  return &type metadata for StaticAlarm.CodingKeys;
}

unint64_t sub_23E4A5B44()
{
  unint64_t result;

  result = qword_256D487E0;
  if (!qword_256D487E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556754, &type metadata for StaticAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D487E0);
  }
  return result;
}

unint64_t sub_23E4A5B8C()
{
  unint64_t result;

  result = qword_256D487E8;
  if (!qword_256D487E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556A3C, &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D487E8);
  }
  return result;
}

unint64_t sub_23E4A5BD4()
{
  unint64_t result;

  result = qword_256D487F0;
  if (!qword_256D487F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556AF4, &type metadata for StaticAlarm.RepeatSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D487F0);
  }
  return result;
}

unint64_t sub_23E4A5C1C()
{
  unint64_t result;

  result = qword_256D487F8;
  if (!qword_256D487F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556A64, &type metadata for StaticAlarm.RepeatSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D487F8);
  }
  return result;
}

unint64_t sub_23E4A5C64()
{
  unint64_t result;

  result = qword_256D48800;
  if (!qword_256D48800)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556A8C, &type metadata for StaticAlarm.RepeatSchedule.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48800);
  }
  return result;
}

unint64_t sub_23E4A5CAC()
{
  unint64_t result;

  result = qword_256D48808;
  if (!qword_256D48808)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55695C, &type metadata for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48808);
  }
  return result;
}

unint64_t sub_23E4A5CF4()
{
  unint64_t result;

  result = qword_256D48810;
  if (!qword_256D48810)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556984, &type metadata for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48810);
  }
  return result;
}

unint64_t sub_23E4A5D3C()
{
  unint64_t result;

  result = qword_256D48818;
  if (!qword_256D48818)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55690C, &type metadata for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48818);
  }
  return result;
}

unint64_t sub_23E4A5D84()
{
  unint64_t result;

  result = qword_256D48820;
  if (!qword_256D48820)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556934, &type metadata for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48820);
  }
  return result;
}

unint64_t sub_23E4A5DCC()
{
  unint64_t result;

  result = qword_256D48828;
  if (!qword_256D48828)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5568BC, &type metadata for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48828);
  }
  return result;
}

unint64_t sub_23E4A5E14()
{
  unint64_t result;

  result = qword_256D48830;
  if (!qword_256D48830)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5568E4, &type metadata for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48830);
  }
  return result;
}

unint64_t sub_23E4A5E5C()
{
  unint64_t result;

  result = qword_256D48838;
  if (!qword_256D48838)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55686C, &type metadata for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48838);
  }
  return result;
}

unint64_t sub_23E4A5EA4()
{
  unint64_t result;

  result = qword_256D48840;
  if (!qword_256D48840)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556894, &type metadata for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48840);
  }
  return result;
}

unint64_t sub_23E4A5EEC()
{
  unint64_t result;

  result = qword_256D48848;
  if (!qword_256D48848)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55681C, &type metadata for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48848);
  }
  return result;
}

unint64_t sub_23E4A5F34()
{
  unint64_t result;

  result = qword_256D48850;
  if (!qword_256D48850)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556844, &type metadata for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48850);
  }
  return result;
}

unint64_t sub_23E4A5F7C()
{
  unint64_t result;

  result = qword_256D48858;
  if (!qword_256D48858)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5567CC, &type metadata for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48858);
  }
  return result;
}

unint64_t sub_23E4A5FC4()
{
  unint64_t result;

  result = qword_256D48860;
  if (!qword_256D48860)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5567F4, &type metadata for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48860);
  }
  return result;
}

unint64_t sub_23E4A600C()
{
  unint64_t result;

  result = qword_256D48868;
  if (!qword_256D48868)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55677C, &type metadata for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48868);
  }
  return result;
}

unint64_t sub_23E4A6054()
{
  unint64_t result;

  result = qword_256D48870;
  if (!qword_256D48870)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5567A4, &type metadata for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48870);
  }
  return result;
}

unint64_t sub_23E4A609C()
{
  unint64_t result;

  result = qword_256D48878;
  if (!qword_256D48878)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5569AC, &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48878);
  }
  return result;
}

unint64_t sub_23E4A60E4()
{
  unint64_t result;

  result = qword_256D48880;
  if (!qword_256D48880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5569D4, &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48880);
  }
  return result;
}

unint64_t sub_23E4A612C()
{
  unint64_t result;

  result = qword_256D48888;
  if (!qword_256D48888)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5566C4, &type metadata for StaticAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48888);
  }
  return result;
}

unint64_t sub_23E4A6174()
{
  unint64_t result;

  result = qword_256D48890;
  if (!qword_256D48890)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5566EC, &type metadata for StaticAlarm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48890);
  }
  return result;
}

uint64_t sub_23E4A61B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7961646E6F6DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616473657574 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616473656E646577 && a2 == 0xE900000000000079 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7961647372756874 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x796164697266 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7961647275746173 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7961646E7573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23E4A6484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1937334628 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E4A6564(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4A65AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48898);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

HomeDataModel::CameraClipPlaybackViewState_optional __swiftcall CameraClipPlaybackViewState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::CameraClipPlaybackViewState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CameraClipPlaybackViewState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4A6678 + 4 * byte_23E556E40[*v0]))(0x646573756170, 0xE600000000000000);
}

uint64_t sub_23E4A6678()
{
  return 0x676E6979616C70;
}

unint64_t sub_23E4A6690()
{
  return 0xD000000000000014;
}

unint64_t sub_23E4A66AC()
{
  return 0xD000000000000015;
}

uint64_t sub_23E4A66CC()
{
  return 1702259052;
}

void sub_23E4A66DC(char *a1)
{
  sub_23E52277C(*a1);
}

unint64_t sub_23E4A66EC()
{
  unint64_t result;

  result = qword_256D488A0;
  if (!qword_256D488A0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraClipPlaybackViewState, &type metadata for CameraClipPlaybackViewState);
    atomic_store(result, (unint64_t *)&qword_256D488A0);
  }
  return result;
}

void sub_23E4A6730()
{
  char *v0;

  sub_23E4E4B64(*v0);
}

void sub_23E4A6738(uint64_t a1)
{
  char *v1;

  sub_23E2A6974(a1, *v1);
}

void sub_23E4A6740(uint64_t a1)
{
  char *v1;

  sub_23E4E4F54(a1, *v1);
}

HomeDataModel::CameraClipPlaybackViewState_optional sub_23E4A6748(Swift::String *a1)
{
  return CameraClipPlaybackViewState.init(rawValue:)(*a1);
}

uint64_t sub_23E4A6754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CameraClipPlaybackViewState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for CameraClipPlaybackViewState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E4A67C4 + 4 * byte_23E556E4A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E4A67F8 + 4 * byte_23E556E45[v4]))();
}

uint64_t sub_23E4A67F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A6800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4A6808);
  return result;
}

uint64_t sub_23E4A6814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4A681CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E4A6820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4A6828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraClipPlaybackViewState()
{
  return &type metadata for CameraClipPlaybackViewState;
}

uint64_t storeEnumTagSinglePayload for CameraClipPlaybackViewState.StateError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E4A6884 + 4 * byte_23E556E4F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E4A68A4 + 4 * byte_23E556E54[v4]))();
}

_BYTE *sub_23E4A6884(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E4A68A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4A68AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4A68B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4A68BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4A68C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CameraClipPlaybackViewState.StateError()
{
  return &type metadata for CameraClipPlaybackViewState.StateError;
}

unint64_t sub_23E4A68E4()
{
  unint64_t result;

  result = qword_256D488A8;
  if (!qword_256D488A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556F7C, &type metadata for CameraClipPlaybackViewState.StateError);
    atomic_store(result, (unint64_t *)&qword_256D488A8);
  }
  return result;
}

void sub_23E4A6928(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  id v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20[6];
  uint64_t v21;

  v3 = v2;
  v4 = a2;
  v21 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
    sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
    sub_23E537A3C();
    v4 = (unint64_t)v20[1];
    v19 = v20[2];
    v5 = (uint64_t)v20[3];
    v6 = (char *)v20[4];
    v7 = (unint64_t)v20[5];
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a2 + 32);
    v19 = (_QWORD *)(a2 + 56);
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if ((v4 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_23E537DD8())
    goto LABEL_35;
  sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v12 = v20[0];
  swift_unknownObjectRelease();
  v13 = (int64_t)v6;
  v14 = v7;
  if (!v12)
    goto LABEL_35;
  while (1)
  {
    v20[0] = v12;
    sub_23E4AE5E8((uint64_t)&v21, v20);
    if (v3)
    {

      swift_bridgeObjectRelease();
      sub_23E2261B0();
      return;
    }

    v6 = (char *)v13;
    v7 = v14;
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_8;
LABEL_11:
    if (!v7)
      break;
    v14 = (v7 - 1) & v7;
    v15 = __clz(__rbit64(v7)) | ((_QWORD)v6 << 6);
    v13 = (int64_t)v6;
LABEL_24:
    v12 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v15);
    if (!v12)
      goto LABEL_35;
  }
  v13 = (int64_t)(v6 + 1);
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v11)
    goto LABEL_35;
  v16 = v19[v13];
  if (v16)
  {
LABEL_23:
    v14 = (v16 - 1) & v16;
    v15 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_24;
  }
  v17 = (int64_t)(v6 + 2);
  if ((uint64_t)(v6 + 2) >= v11)
    goto LABEL_35;
  v16 = v19[v17];
  if (v16)
    goto LABEL_22;
  v17 = (int64_t)(v6 + 3);
  if ((uint64_t)(v6 + 3) >= v11)
    goto LABEL_35;
  v16 = v19[v17];
  if (v16)
    goto LABEL_22;
  v17 = (int64_t)(v6 + 4);
  if ((uint64_t)(v6 + 4) >= v11)
    goto LABEL_35;
  v16 = v19[v17];
  if (v16)
  {
LABEL_22:
    v13 = v17;
    goto LABEL_23;
  }
  v13 = (int64_t)(v6 + 5);
  if ((uint64_t)(v6 + 5) >= v11)
    goto LABEL_35;
  v16 = v19[v13];
  if (v16)
    goto LABEL_23;
  v18 = v6 + 6;
  while ((char *)v11 != v18)
  {
    v16 = v19[(_QWORD)v18++];
    if (v16)
    {
      v13 = (int64_t)(v18 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_23E2261B0();
}

void sub_23E4A6C34(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  char v27;
  char v28;
  void *v29;
  void *rawValue;
  uint64_t v32;
  _QWORD v33[6];
  void *v34;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
    sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
    sub_23E537A3C();
    v2 = v33[1];
    v32 = v33[2];
    v4 = v33[3];
    v3 = v33[4];
    v5 = v33[5];
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v32 = a2 + 56;
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v9 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    v10 = v3;
    if (v2 < 0)
    {
      v13 = sub_23E537DD8();
      if (!v13)
        goto LABEL_38;
      v33[0] = v13;
      sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v34;
      swift_unknownObjectRelease();
      if (!v14)
        goto LABEL_38;
      goto LABEL_33;
    }
    if (!v5)
      break;
    v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v12 = v11 | (v3 << 6);
LABEL_32:
    v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_38;
LABEL_33:
    objc_opt_self();
    v18 = swift_dynamicCastObjCClass();
    if (v18)
    {
      v19 = (void *)v18;
      v20 = v14;
      v21 = objc_msgSend(v19, sel_characteristic);
      v22 = objc_msgSend(v21, sel_service);

      if (!v22)
      {

        goto LABEL_9;
      }
      v23 = objc_msgSend(v22, sel_serviceType);
      v24 = sub_23E53755C();
      rawValue = v25;

      v26._countAndFlagsBits = v24;
      v26._object = rawValue;
      ServiceKind.init(rawValue:)(v26);

      v27 = (char)v34;
      if (v34 == 53)
        v27 = 0;
      LOBYTE(v33[0]) = v27;
      ServiceKind.umbrellaCategory.getter(&v34);
      v28 = (char)v34;
      v34 = a1;
      swift_bridgeObjectRetain();
      sub_23E381AC0((uint64_t)v33, v28);
      v29 = v34;
      swift_bridgeObjectRelease();

      a1 = v29;
    }
    else
    {
LABEL_9:

    }
  }
  v15 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v15 >= v9)
      goto LABEL_38;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    ++v3;
    if (!v16)
    {
      v3 = v10 + 2;
      if (v10 + 2 >= v9)
        goto LABEL_38;
      v16 = *(_QWORD *)(v32 + 8 * v3);
      if (!v16)
      {
        v3 = v10 + 3;
        if (v10 + 3 >= v9)
          goto LABEL_38;
        v16 = *(_QWORD *)(v32 + 8 * v3);
        if (!v16)
        {
          v3 = v10 + 4;
          if (v10 + 4 >= v9)
            goto LABEL_38;
          v16 = *(_QWORD *)(v32 + 8 * v3);
          if (!v16)
          {
            v3 = v10 + 5;
            if (v10 + 5 >= v9)
              goto LABEL_38;
            v16 = *(_QWORD *)(v32 + 8 * v3);
            if (!v16)
            {
              v17 = v10 + 6;
              while (v9 != v17)
              {
                v16 = *(_QWORD *)(v32 + 8 * v17++);
                if (v16)
                {
                  v3 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_38:
              sub_23E2261B0();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v5 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v3 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_23E4A6FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  char *v21;
  _BYTE v22[16];
  char *v23;
  uint64_t v24;

  v1 = type metadata accessor for StaticService();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v0, (uint64_t)v7, v8);
  v9 = *(_QWORD *)&v7[*(int *)(v5 + 80)];
  v23 = v7;
  swift_bridgeObjectRetain();
  v10 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)v22, v9);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v21 = v7;
    v24 = MEMORY[0x24BEE4AF8];
    sub_23E2CB18C(0, v11, 0);
    v12 = *(unsigned __int8 *)(v2 + 80);
    v20 = v10;
    v13 = v10 + ((v12 + 32) & ~v12);
    v14 = *(_QWORD *)(v2 + 72);
    v15 = v24;
    do
    {
      sub_23E1E2F50(v13, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v16 = v4[*(int *)(v1 + 84)];
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB18C(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v24;
      }
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_23E2CB18C(v17 > 1, v18 + 1, 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v18 + 1;
      *(_BYTE *)(v15 + v18 + 32) = v16;
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v7 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  sub_23E1E2FA0((uint64_t)v7, type metadata accessor for StaticAccessory);
  return v15;
}

uint64_t sub_23E4A7214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[5];
  uint64_t v39;
  uint64_t v40;
  void (*v41)(unint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  unint64_t v72;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)v38 - v7;
  v59 = 0;
  v60 = 0xE000000000000000;
  sub_23E537E68();
  v71 = v59;
  v72 = v60;
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, v3, MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v8 = type metadata accessor for StaticMatterDevice();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v59 = StaticMatterDevice.statusString.getter();
  v60 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  StaticMatterDevice.tileIcon.getter((uint64_t)&v59);
  v47 = v59;
  v48 = v60;
  v49 = v61;
  v50 = v62;
  v51 = v63;
  v52 = v64;
  v53 = v65;
  v54 = v66;
  v55 = v67;
  v56 = v68;
  v57 = v69;
  v58 = v70;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v10 = MEMORY[0x24BEE4AF8];
  v59 = MEMORY[0x24BEE4AF8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v12 = sub_23E309770();
  v38[3] = v11;
  v38[2] = v12;
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v42 = *(_QWORD *)(v4 + 72);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23E539650;
  v38[4] = v8;
  v15 = v1 + *(int *)(v8 + 40);
  v45 = v4;
  v41 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16);
  v41(v14 + v13, v15, v2);
  v16 = sub_23E2CD9CC(v14);
  swift_setDeallocating();
  v46 = v2;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v38[1] = v1;
    v59 = v10;
    sub_23E2058B0(0, v17, 0);
    result = sub_23E26B68C(v16);
    v19 = result;
    v21 = v20;
    v23 = v22 & 1;
    v40 = v16 + 56;
    v39 = v16;
    while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(_BYTE *)(v16 + 32))
    {
      if (((*(_QWORD *)(v40 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v16 + 36) != (_DWORD)v21)
        goto LABEL_17;
      v24 = *(_QWORD *)(v16 + 48) + v19 * v42;
      v25 = v43;
      v26 = v46;
      v41((unint64_t)v43, v24, v46);
      v27 = v45;
      v28 = v44;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v25, v26);
      v29 = sub_23E536F38();
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
      v32 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v32 + 16) + 1, 1);
        v32 = v59;
      }
      v34 = *(_QWORD *)(v32 + 16);
      v33 = *(_QWORD *)(v32 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_23E2058B0(v33 > 1, v34 + 1, 1);
        v32 = v59;
      }
      *(_QWORD *)(v32 + 16) = v34 + 1;
      v35 = v32 + 16 * v34;
      *(_QWORD *)(v35 + 32) = v29;
      *(_QWORD *)(v35 + 40) = v31;
      v16 = v39;
      result = sub_23E2CD280(v19, v21, v23 & 1, v39);
      v19 = result;
      v21 = v36;
      v23 = v37 & 1;
      if (!--v17)
      {
        sub_23E23D578(result, v36, v37 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x24BEE4AF8];
LABEL_14:
    v59 = v32;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    StaticMatterDevice.isActivated.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v71;
  }
  return result;
}

uint64_t sub_23E4A7A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v37 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v36 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)v32 - v5;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_23E537E68();
  v63 = v51;
  v64 = v52;
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, v2, MEMORY[0x24BDCEAB8]);
  v38 = v1;
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = type metadata accessor for StaticEndpoint();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v51 = StaticEndpoint.statusString.getter();
  v52 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  StaticEndpoint.tileIcon.getter((uint64_t)&v51);
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v45 = v57;
  v46 = v58;
  v47 = v59;
  v48 = v60;
  v49 = v61;
  v50 = v62;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v8 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v10 = sub_23E309770();
  v32[3] = v9;
  v32[2] = v10;
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v32[4] = v6;
  v11 = *(_QWORD *)(v0 + *(int *)(v6 + 48));
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v32[1] = v0;
    v51 = v8;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v12, 0);
    result = sub_23E26B68C(v11);
    v14 = result;
    v16 = v15;
    v18 = v17 & 1;
    v34 = v11 + 56;
    v33 = v11;
    while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v11 + 32))
    {
      if (((*(_QWORD *)(v34 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v11 + 36) != (_DWORD)v16)
        goto LABEL_16;
      v19 = v37;
      v20 = *(_QWORD *)(v11 + 48) + *(_QWORD *)(v37 + 72) * v14;
      v21 = v35;
      v22 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v20, v38);
      v23 = v36;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v36, v21, v22);
      v24 = sub_23E536F38();
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v22);
      v8 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v51;
      }
      v28 = *(_QWORD *)(v8 + 16);
      v27 = *(_QWORD *)(v8 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_23E2058B0(v27 > 1, v28 + 1, 1);
        v8 = v51;
      }
      *(_QWORD *)(v8 + 16) = v28 + 1;
      v29 = v8 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v24;
      *(_QWORD *)(v29 + 40) = v26;
      v11 = v33;
      result = sub_23E2CD280(v14, v16, v18 & 1, v33);
      v14 = result;
      v16 = v30;
      v18 = v31 & 1;
      if (!--v12)
      {
        sub_23E23D578(result, v30, v31 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v51 = v8;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    StaticEndpoint.isActivated.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v63;
  }
  return result;
}

uint64_t sub_23E4A8164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[5];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;

  v35 = sub_23E536F80();
  v34 = *(_QWORD *)(v35 - 8);
  v1 = MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)v29 - v3;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_23E537E68();
  v60 = v48;
  v61 = v49;
  sub_23E537628();
  v4 = type metadata accessor for StaticMediaProfile();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v48 = StaticMediaProfile.tileStatusString.getter();
  v49 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  StaticMediaProfile.tileIcon.getter((uint64_t)&v48);
  v36 = v48;
  v37 = v49;
  v38 = v50;
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v45 = v57;
  v46 = v58;
  v47 = v59;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = MEMORY[0x24BEE4AF8];
  v48 = MEMORY[0x24BEE4AF8];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v29[4] = sub_23E309770();
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v8 = *(_QWORD *)(v0 + *(int *)(v4 + 24));
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v29[1] = v7;
    v29[2] = v4;
    v29[3] = v0;
    v48 = v6;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v9, 0);
    result = sub_23E26B68C(v8);
    v11 = result;
    v13 = v12;
    v15 = v14 & 1;
    v31 = v8 + 56;
    v30 = v8;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(v8 + 32))
    {
      if (((*(_QWORD *)(v31 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v8 + 36) != (_DWORD)v13)
        goto LABEL_16;
      v16 = v34;
      v17 = *(_QWORD *)(v8 + 48) + *(_QWORD *)(v34 + 72) * v11;
      v18 = v32;
      v19 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v32, v17, v35);
      v20 = v33;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v18, v19);
      v21 = sub_23E536F38();
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v19);
      v6 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v48;
      }
      v25 = *(_QWORD *)(v6 + 16);
      v24 = *(_QWORD *)(v6 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23E2058B0(v24 > 1, v25 + 1, 1);
        v6 = v48;
      }
      *(_QWORD *)(v6 + 16) = v25 + 1;
      v26 = v6 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
      v8 = v30;
      result = sub_23E2CD280(v11, v13, v15 & 1, v30);
      v11 = result;
      v13 = v27;
      v15 = v28 & 1;
      if (!--v9)
      {
        sub_23E23D578(result, v27, v28 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v48 = v6;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v60;
  }
  return result;
}

uint64_t sub_23E4A88D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  HomeDataModel::StaticRenderingMode renderingMode;
  HomeDataModel::Icon::Info tileOffStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOnStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOffStateIconInfo;
  HomeDataModel::Icon v53;
  uint64_t countAndFlagsBits;
  void *object;

  v1 = v0;
  v46 = sub_23E536F80();
  v45 = *(_QWORD *)(v46 - 8);
  v2 = MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v36 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53.tileOnStateIconInfo.name._countAndFlagsBits = 0;
  v53.tileOnStateIconInfo.name._object = (void *)0xE000000000000000;
  sub_23E537E68();
  countAndFlagsBits = v53.tileOnStateIconInfo.name._countAndFlagsBits;
  object = v53.tileOnStateIconInfo.name._object;
  sub_23E537628();
  v8 = type metadata accessor for StaticCameraProfile();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v53.tileOnStateIconInfo.name._countAndFlagsBits = _s13HomeDataModel19StaticCameraProfileV12statusStringSSSgvg_0();
  v53.tileOnStateIconInfo.name._object = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  v10._countAndFlagsBits = 0x69662E6F65646976;
  v10._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(&v53, v10);
  v47 = v53.tileOnStateIconInfo.name._countAndFlagsBits;
  v48 = v53.tileOnStateIconInfo.name._object;
  renderingMode = v53.tileOnStateIconInfo.renderingMode;
  tileOffStateIconInfo = v53.tileOffStateIconInfo;
  accessoryControlOnStateIconInfo = v53.accessoryControlOnStateIconInfo;
  accessoryControlOffStateIconInfo = v53.accessoryControlOffStateIconInfo;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v11 = MEMORY[0x24BEE4AF8];
  v53.tileOnStateIconInfo.name._countAndFlagsBits = MEMORY[0x24BEE4AF8];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v13 = sub_23E309770();
  v40 = v12;
  v39 = v13;
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v14 = *(_QWORD *)(v0 + *(int *)(v8 + 24));
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v36 = v8;
    v37 = v7;
    v38 = v0;
    v53.tileOnStateIconInfo.name._countAndFlagsBits = v11;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v15, 0);
    result = sub_23E26B68C(v14);
    v17 = result;
    v19 = v18;
    v21 = v20 & 1;
    v42 = v14 + 56;
    v41 = v14;
    while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(_BYTE *)(v14 + 32))
    {
      if (((*(_QWORD *)(v42 + (((unint64_t)v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        goto LABEL_18;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v19)
        goto LABEL_19;
      v22 = v45;
      v23 = *(_QWORD *)(v14 + 48) + *(_QWORD *)(v45 + 72) * v17;
      v24 = v43;
      v25 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, v23, v46);
      v26 = v44;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v44, v24, v25);
      v27 = sub_23E536F38();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v25);
      v11 = v53.tileOnStateIconInfo.name._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v53.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      v31 = *(_QWORD *)(v11 + 16);
      v30 = *(_QWORD *)(v11 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23E2058B0(v30 > 1, v31 + 1, 1);
        v11 = v53.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      *(_QWORD *)(v11 + 16) = v31 + 1;
      v32 = v11 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v27;
      *(_QWORD *)(v32 + 40) = v29;
      v14 = v41;
      result = sub_23E2CD280(v17, v19, v21 & 1, v41);
      v17 = result;
      v19 = v33;
      v21 = v34 & 1;
      if (!--v15)
      {
        sub_23E23D578(result, v33, v34 & 1);
        swift_bridgeObjectRelease();
        v1 = v38;
        v7 = v37;
        v8 = v36;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_13:
    v53.tileOnStateIconInfo.name._countAndFlagsBits = v11;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E1E7C20(v1 + *(int *)(v8 + 48), (uint64_t)v7, &qword_256D44418);
    v35 = type metadata accessor for StaticCameraStreamControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v7, 1, v35) == 1)
      sub_23E1E7C64((uint64_t)v7, &qword_256D44418);
    else
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    sub_23E537628();
    swift_bridgeObjectRelease();
    return countAndFlagsBits;
  }
  return result;
}

uint64_t sub_23E4A911C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD v38[5];
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  HomeDataModel::StaticRenderingMode renderingMode;
  HomeDataModel::Icon::Info tileOffStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOnStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOffStateIconInfo;
  HomeDataModel::Icon v51;
  uint64_t countAndFlagsBits;
  void *object;

  v1 = v0;
  v43 = sub_23E536F80();
  v42 = *(_QWORD *)(v43 - 8);
  v2 = MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v40 = (char *)v38 - v4;
  v51.tileOnStateIconInfo.name._countAndFlagsBits = 0;
  v51.tileOnStateIconInfo.name._object = (void *)0xE000000000000000;
  sub_23E537E68();
  countAndFlagsBits = v51.tileOnStateIconInfo.name._countAndFlagsBits;
  object = v51.tileOnStateIconInfo.name._object;
  sub_23E537628();
  v5 = type metadata accessor for StaticService();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v51.tileOnStateIconInfo.name._countAndFlagsBits = StaticService.tileStatusString.getter();
  v51.tileOnStateIconInfo.name._object = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticService.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticService.tileIcon.getter(&v51);
  v45 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
  v46 = v51.tileOnStateIconInfo.name._object;
  renderingMode = v51.tileOnStateIconInfo.renderingMode;
  tileOffStateIconInfo = v51.tileOffStateIconInfo;
  accessoryControlOnStateIconInfo = v51.accessoryControlOnStateIconInfo;
  accessoryControlOffStateIconInfo = v51.accessoryControlOffStateIconInfo;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v7 = *(_BYTE *)(v0 + *(int *)(v5 + 84));
  v51.tileOnStateIconInfo.name._countAndFlagsBits = MEMORY[0x24BEE4AF8];
  sub_23E2058B0(0, 1, 0);
  v8 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
  LOBYTE(v45) = v7;
  ServiceKind.localizedDescription.getter();
  v10 = v9;
  v12 = v11;
  v14 = *(_QWORD *)(v8 + 16);
  v13 = *(_QWORD *)(v8 + 24);
  v15 = v14 + 1;
  if (v14 >= v13 >> 1)
    goto LABEL_18;
  while (1)
  {
    *(_QWORD *)(v8 + 16) = v15;
    v16 = v8 + 16 * v14;
    *(_QWORD *)(v16 + 32) = v10;
    *(_QWORD *)(v16 + 40) = v12;
    v51.tileOnStateIconInfo.name._countAndFlagsBits = v8;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
    v18 = sub_23E309770();
    v38[3] = v17;
    v38[2] = v18;
    sub_23E5374F0();
    v14 = v19;
    swift_release();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v38[4] = v5;
    v20 = *(_QWORD *)(v1 + *(int *)(v5 + 56));
    v5 = *(_QWORD *)(v20 + 16);
    v21 = MEMORY[0x24BEE4AF8];
    if (!v5)
      break;
    v38[1] = v1;
    v51.tileOnStateIconInfo.name._countAndFlagsBits = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v5, 0);
    v1 = sub_23E26B68C(v20);
    v23 = v22;
    v10 = v24 & 1;
    v13 = v20 + 56;
    v39 = v20 + 56;
    while ((v1 & 0x8000000000000000) == 0)
    {
      v13 = 1 << *(_BYTE *)(v20 + 32);
      if (v1 >= (uint64_t)v13)
        break;
      v13 = *(_QWORD *)(v39 + (((unint64_t)v1 >> 3) & 0xFFFFFFFFFFFFF8)) >> v1;
      if ((v13 & 1) == 0)
        goto LABEL_16;
      v13 = *(unsigned int *)(v20 + 36);
      if ((_DWORD)v13 != (_DWORD)v23)
        goto LABEL_17;
      v25 = v42;
      v26 = v40;
      v27 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v42 + 72) * v1, v43);
      v28 = v41;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v41, v26, v27);
      v15 = sub_23E536F38();
      v44 = v29;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v27);
      v21 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
      v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      v31 = *(_QWORD *)(v21 + 16);
      v30 = *(_QWORD *)(v21 + 24);
      v14 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        sub_23E2058B0(v30 > 1, v31 + 1, 1);
        v21 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      *(_QWORD *)(v21 + 16) = v14;
      v32 = v21 + 16 * v31;
      v33 = v44;
      *(_QWORD *)(v32 + 32) = v15;
      *(_QWORD *)(v32 + 40) = v33;
      v20 = v12;
      v34 = sub_23E2CD280(v1, v23, v10 & 1, v12);
      v1 = v34;
      v23 = v35;
      v10 = v36 & 1;
      if (!--v5)
      {
        sub_23E23D578(v34, v35, v36 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    sub_23E2058B0(v13 > 1, v15, 1);
    v8 = v51.tileOnStateIconInfo.name._countAndFlagsBits;
  }
LABEL_14:
  v51.tileOnStateIconInfo.name._countAndFlagsBits = v21;
  sub_23E5374F0();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticService.isActivated.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_23E4A993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD v30[5];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unint64_t v62;

  v36 = sub_23E536F80();
  v35 = *(_QWORD *)(v36 - 8);
  v1 = MEMORY[0x24BDAC7A8](v36);
  v34 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)v30 - v3;
  v49 = 0;
  v50 = 0xE000000000000000;
  sub_23E537E68();
  v61 = v49;
  v62 = v50;
  sub_23E537628();
  v4 = type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v49 = StaticServiceGroup.tileStatusString.getter();
  v50 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticServiceGroup.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticServiceGroup.tileIcon.getter((uint64_t)&v49);
  v37 = v49;
  v38 = v50;
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v45 = v57;
  v46 = v58;
  v47 = v59;
  v48 = v60;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  StaticServiceGroup.isDoubleHigh.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = MEMORY[0x24BEE4AF8];
  v49 = MEMORY[0x24BEE4AF8];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v8 = sub_23E309770();
  v30[3] = v7;
  v30[2] = v8;
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v30[4] = v4;
  v9 = *(_QWORD *)(v0 + *(int *)(v4 + 32));
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v30[1] = v0;
    v49 = v6;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v10, 0);
    result = sub_23E26B68C(v9);
    v12 = result;
    v14 = v13;
    v16 = v15 & 1;
    v32 = v9 + 56;
    v31 = v9;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)(v32 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v9 + 36) != (_DWORD)v14)
        goto LABEL_16;
      v17 = v35;
      v18 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v35 + 72) * v12;
      v19 = v33;
      v20 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v18, v36);
      v21 = v34;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v34, v19, v20);
      v22 = sub_23E536F38();
      v24 = v23;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v20);
      v6 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v49;
      }
      v26 = *(_QWORD *)(v6 + 16);
      v25 = *(_QWORD *)(v6 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_23E2058B0(v25 > 1, v26 + 1, 1);
        v6 = v49;
      }
      *(_QWORD *)(v6 + 16) = v26 + 1;
      v27 = v6 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
      v9 = v31;
      result = sub_23E2CD280(v12, v14, v16 & 1, v31);
      v12 = result;
      v14 = v28;
      v16 = v29 & 1;
      if (!--v10)
      {
        sub_23E23D578(result, v28, v29 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v49 = v6;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    StaticServiceGroup.isActivated.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v61;
  }
  return result;
}

uint64_t sub_23E4AA0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;

  v37 = sub_23E536F80();
  v36 = *(_QWORD *)(v37 - 8);
  v1 = MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v34 = (char *)v31 - v3;
  v4 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = 0;
  v51 = 0xE000000000000000;
  sub_23E537E68();
  v62 = v50;
  v63 = v51;
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v50 = StaticMediaSystem.tileStatusString.getter();
  v51 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E1E2F50(v0, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  Icon.init(staticMediaSystem:)((uint64_t)v6, (uint64_t)&v50);
  v38 = v50;
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v45 = v57;
  v46 = v58;
  v47 = v59;
  v48 = v60;
  v49 = v61;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v8 = MEMORY[0x24BEE4AF8];
  v50 = MEMORY[0x24BEE4AF8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v31[4] = sub_23E309770();
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v10 = *(_QWORD *)(v0 + *(int *)(v4 + 84));
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v31[1] = v9;
    v31[2] = v4;
    v31[3] = v0;
    v50 = v8;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v11, 0);
    result = sub_23E26B68C(v10);
    v13 = result;
    v15 = v14;
    v17 = v16 & 1;
    v33 = v10 + 56;
    v32 = v10;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(v10 + 32))
    {
      if (((*(_QWORD *)(v33 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v10 + 36) != (_DWORD)v15)
        goto LABEL_16;
      v18 = v36;
      v19 = *(_QWORD *)(v10 + 48) + *(_QWORD *)(v36 + 72) * v13;
      v20 = v34;
      v21 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v34, v19, v37);
      v22 = v35;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v35, v20, v21);
      v23 = sub_23E536F38();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v21);
      v8 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v50;
      }
      v27 = *(_QWORD *)(v8 + 16);
      v26 = *(_QWORD *)(v8 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23E2058B0(v26 > 1, v27 + 1, 1);
        v8 = v50;
      }
      *(_QWORD *)(v8 + 16) = v27 + 1;
      v28 = v8 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v23;
      *(_QWORD *)(v28 + 40) = v25;
      v10 = v32;
      result = sub_23E2CD280(v13, v15, v17 & 1, v32);
      v13 = result;
      v15 = v29;
      v17 = v30 & 1;
      if (!--v11)
      {
        sub_23E23D578(result, v29, v30 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v50 = v8;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v62;
  }
  return result;
}

uint64_t sub_23E4AA87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[4];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;

  v49 = sub_23E536F80();
  v48 = *(_QWORD *)(v49 - 8);
  v1 = MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v46 = (char *)v42 - v3;
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_23E537E68();
  v74 = v62;
  v75 = v63;
  sub_23E537628();
  v4 = type metadata accessor for StaticAccessory(0);
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v62 = StaticAccessory.statusString.getter();
  v63 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  StaticAccessory.tileIcon.getter((uint64_t)&v62);
  v50 = v62;
  v51 = v63;
  v52 = v64;
  v53 = v65;
  v54 = v66;
  v55 = v67;
  v56 = v68;
  v57 = v69;
  v58 = v70;
  v59 = v71;
  v60 = v72;
  v61 = v73;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = sub_23E4A6FFC();
  v7 = *(_QWORD *)(v6 + 16);
  v43 = v4;
  if (v7)
  {
    v62 = MEMORY[0x24BEE4AF8];
    sub_23E2058B0(0, v7, 0);
    v8 = 0;
    v9 = v62;
    do
    {
      LOBYTE(v50) = *(_BYTE *)(v6 + v8 + 32);
      ServiceKind.localizedDescription.getter();
      v11 = v10;
      v13 = v12;
      v62 = v9;
      v15 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_23E2058B0(v14 > 1, v15 + 1, 1);
        v9 = v62;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v15 + 1;
      v16 = v9 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v13;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    v4 = v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v62 = v9;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v18 = sub_23E309770();
  sub_23E5374F0();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v19 = *(int *)(v4 + 48);
  v42[3] = v0;
  v20 = *(_QWORD *)(v0 + v19);
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    v42[1] = v18;
    v42[2] = v17;
    v62 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v21, 0);
    result = sub_23E26B68C(v20);
    v24 = result;
    v26 = v25;
    v28 = v27 & 1;
    v45 = v20 + 56;
    v44 = v20;
    while ((v24 & 0x8000000000000000) == 0 && v24 < 1 << *(_BYTE *)(v20 + 32))
    {
      if (((*(_QWORD *)(v45 + (((unint64_t)v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v20 + 36) != (_DWORD)v26)
        goto LABEL_23;
      v29 = *(_QWORD *)(v20 + 48);
      v30 = v48;
      v31 = v46;
      v32 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, v29 + *(_QWORD *)(v48 + 72) * v24, v49);
      v33 = v47;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v47, v31, v32);
      v34 = sub_23E536F38();
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v32);
      v22 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v62;
      }
      v38 = *(_QWORD *)(v22 + 16);
      v37 = *(_QWORD *)(v22 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_23E2058B0(v37 > 1, v38 + 1, 1);
        v22 = v62;
      }
      *(_QWORD *)(v22 + 16) = v38 + 1;
      v39 = v22 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v36;
      v20 = v44;
      result = sub_23E2CD280(v24, v26, v28 & 1, v44);
      v24 = result;
      v26 = v40;
      v28 = v41 & 1;
      if (!--v21)
      {
        sub_23E23D578(result, v40, v41 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  else
  {
LABEL_20:
    v62 = v22;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    StaticAccessory.isActivated.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v74;
  }
  return result;
}

uint64_t sub_23E4AB100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v37 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v36 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)v32 - v5;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_23E537E68();
  v63 = v51;
  v64 = v52;
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, v2, MEMORY[0x24BDCEAB8]);
  v38 = v1;
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = type metadata accessor for ActionEndpoint();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v51 = ActionEndpoint.statusString.getter();
  v52 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  ActionEndpoint.tileIcon.getter((uint64_t)&v51);
  v39 = v51;
  v40 = v52;
  v41 = v53;
  v42 = v54;
  v43 = v55;
  v44 = v56;
  v45 = v57;
  v46 = v58;
  v47 = v59;
  v48 = v60;
  v49 = v61;
  v50 = v62;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v8 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v10 = sub_23E309770();
  v32[2] = v9;
  v32[1] = v10;
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v11 = *(_QWORD *)(v0 + *(int *)(v6 + 24));
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v32[0] = v0;
    v51 = v8;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v12, 0);
    result = sub_23E26B68C(v11);
    v14 = result;
    v16 = v15;
    v18 = v17 & 1;
    v34 = v11 + 56;
    v33 = v11;
    while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(v11 + 32))
    {
      if (((*(_QWORD *)(v34 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v11 + 36) != (_DWORD)v16)
        goto LABEL_16;
      v19 = v37;
      v20 = *(_QWORD *)(v11 + 48) + *(_QWORD *)(v37 + 72) * v14;
      v21 = v35;
      v22 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v35, v20, v38);
      v23 = v36;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v36, v21, v22);
      v24 = sub_23E536F38();
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v22);
      v8 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v51;
      }
      v28 = *(_QWORD *)(v8 + 16);
      v27 = *(_QWORD *)(v8 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_23E2058B0(v27 > 1, v28 + 1, 1);
        v8 = v51;
      }
      *(_QWORD *)(v8 + 16) = v28 + 1;
      v29 = v8 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v24;
      *(_QWORD *)(v29 + 40) = v26;
      v11 = v33;
      result = sub_23E2CD280(v14, v16, v18 & 1, v33);
      v14 = result;
      v16 = v30;
      v18 = v31 & 1;
      if (!--v12)
      {
        sub_23E23D578(result, v30, v31 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v51 = v8;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    ActionEndpoint.isActivated.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v63;
  }
  return result;
}

uint64_t sub_23E4AB800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[5];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v46 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v45 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)v41 - v5;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_23E537E68();
  v60 = v48;
  v61 = v49;
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, v2, MEMORY[0x24BDCEAB8]);
  v47 = v1;
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v6 = type metadata accessor for StaticActionSet();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v48 = 0;
  v49 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  v7 = (uint64_t *)(v0 + *(int *)(v6 + 32));
  v8 = *v7;
  v9 = v7[1];
  v10 = *((_BYTE *)v7 + 16);
  v11 = v7[3];
  v12 = v7[4];
  v13 = *((_BYTE *)v7 + 40);
  v14 = v7[6];
  v15 = v7[7];
  v16 = *((_BYTE *)v7 + 64);
  v17 = v7[9];
  v18 = v7[10];
  LOBYTE(v7) = *((_BYTE *)v7 + 88);
  v48 = v8;
  v49 = v9;
  v50 = v10;
  v51 = v11;
  v52 = v12;
  v53 = v13;
  v54 = v14;
  v55 = v15;
  v56 = v16;
  v57 = v17;
  v58 = v18;
  v59 = (char)v7;
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  sub_23E537628();
  v19 = MEMORY[0x24BEE4AF8];
  v48 = MEMORY[0x24BEE4AF8];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v41[3] = sub_23E309770();
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v41[4] = v6;
  v21 = *(_QWORD *)(v0 + *(int *)(v6 + 40));
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v41[1] = v20;
    v41[2] = v0;
    v48 = v19;
    swift_bridgeObjectRetain();
    sub_23E2058B0(0, v22, 0);
    result = sub_23E26B68C(v21);
    v24 = result;
    v26 = v25;
    v28 = v27 & 1;
    v42 = v21;
    v43 = v21 + 56;
    while ((v24 & 0x8000000000000000) == 0 && v24 < 1 << *(_BYTE *)(v21 + 32))
    {
      if (((*(_QWORD *)(v43 + (((unint64_t)v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_15;
      if (*(_DWORD *)(v21 + 36) != (_DWORD)v26)
        goto LABEL_16;
      v30 = v46;
      v29 = v47;
      v31 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v44, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v46 + 72) * v24, v47);
      v32 = v45;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v45, v31, v29);
      v33 = sub_23E536F38();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      v19 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v48;
      }
      v37 = *(_QWORD *)(v19 + 16);
      v36 = *(_QWORD *)(v19 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_23E2058B0(v36 > 1, v37 + 1, 1);
        v19 = v48;
      }
      *(_QWORD *)(v19 + 16) = v37 + 1;
      v38 = v19 + 16 * v37;
      *(_QWORD *)(v38 + 32) = v33;
      *(_QWORD *)(v38 + 40) = v35;
      v21 = v42;
      result = sub_23E2CD280(v24, v26, v28 & 1, v42);
      v24 = result;
      v26 = v39;
      v28 = v40 & 1;
      if (!--v22)
      {
        sub_23E23D578(result, v39, v40 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    v48 = v19;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v60;
  }
  return result;
}

uint64_t StaticActionSet.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticActionSet.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E4ABF10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  int v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  id v65;
  char v66;
  id v67;
  void *v68;
  char v69;
  id v70;
  id v71;
  unsigned __int8 v72;
  id v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  char v87;
  _QWORD v88[2];
  char v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;

  v85 = a4;
  v79 = a3;
  v86 = a1;
  v84 = a5;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for StaticActionSet();
  v81 = *((_QWORD *)v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_23E536F68();

  v14 = objc_msgSend(a2, sel_name);
  v15 = sub_23E53755C();
  v17 = v16;

  v18 = (uint64_t *)&v12[v10[5]];
  *v18 = v15;
  v18[1] = v17;
  v19 = objc_msgSend(a2, sel_actions);
  v20 = sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
  v21 = sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
  v78 = v20;
  v77 = v21;
  v22 = sub_23E537A0C();

  sub_23E4A6928(MEMORY[0x24BEE4B08], v22);
  v24 = v23;
  v76 = 0;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  v82 = v7;
  v83 = v6;
  v80 = v9;
  if (!v25)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    v26 = v6;
    v27 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_23E539650;
    v29 = v28 + v27;
    v30 = objc_msgSend(v85, sel_roomForEntireHome);
    v31 = objc_msgSend(v30, sel_uniqueIdentifier);

    sub_23E536F68();
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v29, v9, v26);
    v24 = sub_23E2CD9CC(v28);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  *(_QWORD *)&v12[v10[10]] = v24;
  v32 = objc_msgSend(a2, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)((char *)v88);
  v12[v10[6]] = v88[0];
  v33 = objc_msgSend(a2, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)(&v87);
  Icon.init(actionSetKind:)(&v87, (uint64_t)v88);
  v34 = v88[1];
  v35 = v89;
  v36 = v90;
  v37 = v91;
  v38 = v92;
  v39 = v93;
  v40 = v94;
  v41 = v95;
  v43 = v96;
  v42 = v97;
  v44 = v98;
  v45 = &v12[v10[8]];
  *(_QWORD *)v45 = v88[0];
  *((_QWORD *)v45 + 1) = v34;
  v45[16] = v35;
  *((_QWORD *)v45 + 3) = v36;
  *((_QWORD *)v45 + 4) = v37;
  v45[40] = v38;
  *((_QWORD *)v45 + 6) = v39;
  *((_QWORD *)v45 + 7) = v40;
  v45[64] = v41;
  *((_QWORD *)v45 + 9) = v43;
  *((_QWORD *)v45 + 10) = v42;
  v45[88] = v44;
  v46 = HMActionSet.tileIconTint.getter();
  if (!v46)
  {
    v46 = HMActionSet.defaultTint.getter();
    if (!v46)
    {
      if (qword_256D3EEF0 != -1)
        swift_once();
      swift_beginAccess();
      v46 = swift_retain();
    }
  }
  *(_QWORD *)&v12[v10[9]] = v46;
  v47 = sub_23E4AED54(v86, a2);
  LODWORD(v77) = v47;
  if (v47 == 2)
  {
    v48 = objc_msgSend(a2, sel_actions);
    v49 = sub_23E537A0C();

    v50 = v79;
    swift_bridgeObjectRetain();
    sub_23E4AFFD8(1u, v49, v50);
    v52 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v53 = v47;
    swift_bridgeObjectRelease();
    v52 = v53 & 1;
  }
  v54 = v80;
  v12[v10[13]] = v52 & 1;
  v55 = objc_msgSend(a2, sel_actions);
  v56 = sub_23E537A0C();

  sub_23E4A6C34(MEMORY[0x24BEE4B08], v56);
  v58 = v57;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12[v10[12]] = v58;
  v59 = objc_msgSend(a2, sel_actions);
  v60 = sub_23E537A0C();

  if ((v60 & 0xC000000000000001) != 0)
    v61 = sub_23E537DB4();
  else
    v61 = *(_QWORD *)(v60 + 16);
  v62 = v82;
  swift_bridgeObjectRelease();
  if (!v61)
    goto LABEL_20;
  v63 = objc_msgSend(a2, sel_applicationData);
  v64 = (void *)sub_23E537538();
  v65 = objc_msgSend(v63, sel_objectForKeyedSubscript_, v64);

  if (v65)
  {
    swift_unknownObjectRelease();
    v66 = HMActionSet.shouldShowInDashboard.getter();
    goto LABEL_21;
  }
  v67 = objc_msgSend(a2, sel_home);
  if (!v67 || (v68 = v67, v69 = HMHome.showPredictedScenesOnDashboard.getter(), v68, (v69 & 1) != 0))
  {
    v70 = objc_msgSend(a2, sel_actionSetType);
    sub_23E53755C();

    HMActionSet.ActionSetKind.init(rawValue:)(&v87);
    v66 = sub_23E41EF9C(v87, (uint64_t)&unk_250EDD898);
  }
  else
  {
LABEL_20:
    v66 = 0;
  }
LABEL_21:
  v12[v10[11]] = v66 & 1;
  v71 = v85;
  if ((v77 & 0x100) != 0)
    v72 = 2;
  else
    v72 = objc_msgSend(a2, sel_isExecuting);
  v12[v10[14]] = v72;
  v73 = objc_msgSend(v71, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E2FA0(v86, type metadata accessor for StateSnapshot.UpdateType);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v12[v10[7]], v54, v83);
  v74 = v84;
  sub_23E1E2FDC((uint64_t)v12, v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v81 + 56))(v74, 0, 1, v10);
}

uint64_t StaticActionSet.actionSet.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E4AC688()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4AC6F4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4AC758()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4AC7B8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4AC800()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4AC868()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_actionSetFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

BOOL static StaticActionSet.ExecutionStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t StaticActionSet.ExecutionStatus.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E4AC8F8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E69747563657865;
  if (*v0 != 1)
    v1 = 0x64656C696166;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_23E4AC94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4B030C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4AC970()
{
  sub_23E4ACD14();
  return sub_23E538570();
}

uint64_t sub_23E4AC998()
{
  sub_23E4ACD14();
  return sub_23E53857C();
}

uint64_t sub_23E4AC9C0()
{
  sub_23E4ACD9C();
  return sub_23E538570();
}

uint64_t sub_23E4AC9E8()
{
  sub_23E4ACD9C();
  return sub_23E53857C();
}

uint64_t sub_23E4ACA10()
{
  sub_23E4ACD58();
  return sub_23E538570();
}

uint64_t sub_23E4ACA38()
{
  sub_23E4ACD58();
  return sub_23E53857C();
}

uint64_t sub_23E4ACA60()
{
  sub_23E4ACDE0();
  return sub_23E538570();
}

uint64_t sub_23E4ACA88()
{
  sub_23E4ACDE0();
  return sub_23E53857C();
}

uint64_t StaticActionSet.ExecutionStatus.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D488B8);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D488C0);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D488C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D488D0);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4ACD14();
  sub_23E5384EC();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_23E4ACD9C();
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_23E4ACD58();
      v15 = v20;
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_23E4ACDE0();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

unint64_t sub_23E4ACD14()
{
  unint64_t result;

  result = qword_256D488D8;
  if (!qword_256D488D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557824, &type metadata for StaticActionSet.ExecutionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D488D8);
  }
  return result;
}

unint64_t sub_23E4ACD58()
{
  unint64_t result;

  result = qword_256D488E0;
  if (!qword_256D488E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5577D4, &type metadata for StaticActionSet.ExecutionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D488E0);
  }
  return result;
}

unint64_t sub_23E4ACD9C()
{
  unint64_t result;

  result = qword_256D488E8;
  if (!qword_256D488E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557784, &type metadata for StaticActionSet.ExecutionStatus.ExecutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D488E8);
  }
  return result;
}

unint64_t sub_23E4ACDE0()
{
  unint64_t result;

  result = qword_256D488F0;
  if (!qword_256D488F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557734, &type metadata for StaticActionSet.ExecutionStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D488F0);
  }
  return result;
}

uint64_t StaticActionSet.ExecutionStatus.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

_QWORD *StaticActionSet.ExecutionStatus.init(from:)(_QWORD *a1)
{
  return sub_23E4B0454(a1);
}

_QWORD *sub_23E4ACE7C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23E4B0454(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_23E4ACEA4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return StaticActionSet.ExecutionStatus.encode(to:)(a1, *v1);
}

uint64_t static StaticActionSet.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t StaticActionSet.Error.hash(into:)()
{
  return sub_23E538468();
}

uint64_t StaticActionSet.Error.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticActionSet.actionSetKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticActionSet();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t StaticActionSet.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticActionSet() + 28);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticActionSet.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StaticActionSet() + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[3];
  v8 = v3[4];
  v9 = *((_BYTE *)v3 + 40);
  v10 = v3[6];
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = v3[9];
  v14 = v3[10];
  LOBYTE(v3) = *((_BYTE *)v3 + 88);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.roomIds.getter()
{
  type metadata accessor for StaticActionSet();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.umbrellaCategories.getter()
{
  type metadata accessor for StaticActionSet();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.isActivated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 52));
}

uint64_t StaticActionSet.executionStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 56));
}

uint64_t StaticActionSet.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for StaticActionSet();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(v1 + v4[6]);
  if ((_DWORD)v5 != 7)
  {
    sub_23E538474();
    __asm { BR              X9 }
  }
  sub_23E538474();
  sub_23E5374D8();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_retain();
  sub_23E537334();
  swift_release();
  v6 = *(_QWORD *)(v1 + v4[10]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v6);
  swift_bridgeObjectRelease();
  sub_23E538474();
  v7 = *(_QWORD *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_23E241228((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  sub_23E538474();
  return sub_23E538468();
}

uint64_t sub_23E4AD404(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4AD42C + 4 * byte_23E556FF7[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4AD42C()
{
  return 1701667182;
}

uint64_t sub_23E4AD43C()
{
  return 0x65536E6F69746361;
}

uint64_t sub_23E4AD460()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E4AD474()
{
  return 0x6E6F6349656C6974;
}

uint64_t sub_23E4AD49C()
{
  return 0x7364496D6F6F72;
}

unint64_t sub_23E4AD4B4()
{
  return 0xD000000000000015;
}

uint64_t sub_23E4AD4D4()
{
  return 0x6176697463417369;
}

uint64_t sub_23E4AD4F4()
{
  return 0x6F69747563657865;
}

unint64_t sub_23E4AD518()
{
  return 0xD000000000000012;
}

uint64_t sub_23E4AD534()
{
  unsigned __int8 *v0;

  return sub_23E4AD404(*v0);
}

uint64_t sub_23E4AD53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4B18F8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E4AD560(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_23E4AD56C()
{
  sub_23E4B082C();
  return sub_23E538570();
}

uint64_t sub_23E4AD594()
{
  sub_23E4B082C();
  return sub_23E53857C();
}

uint64_t StaticActionSet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D488F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4B082C();
  sub_23E5384EC();
  LOBYTE(v23[0]) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticActionSet();
    LOBYTE(v23[0]) = 1;
    sub_23E538270();
    LOBYTE(v23[0]) = *(_BYTE *)(v3 + v9[6]);
    v34 = 2;
    sub_23E396910();
    sub_23E538234();
    LOBYTE(v23[0]) = 3;
    sub_23E5382AC();
    v10 = (uint64_t *)(v3 + v9[8]);
    v11 = *v10;
    v12 = v10[1];
    v13 = *((_BYTE *)v10 + 16);
    v14 = v10[3];
    v15 = v10[4];
    v16 = *((_BYTE *)v10 + 40);
    v17 = v10[6];
    v18 = v10[7];
    v19 = *((_BYTE *)v10 + 64);
    v21 = v10[9];
    v20 = v10[10];
    LOBYTE(v10) = *((_BYTE *)v10 + 88);
    v23[0] = v11;
    v23[1] = v12;
    v24 = v13;
    v25 = v14;
    v26 = v15;
    v27 = v16;
    v28 = v17;
    v29 = v18;
    v30 = v19;
    v31 = v21;
    v32 = v20;
    v33 = (char)v10;
    v34 = 4;
    sub_23E4B0870();
    sub_23E5382AC();
    v23[0] = *(_QWORD *)(v3 + v9[9]);
    v34 = 5;
    sub_23E4B08B4();
    sub_23E5382AC();
    v23[0] = *(_QWORD *)(v3 + v9[10]);
    v34 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v23[0]) = 7;
    sub_23E53827C();
    v23[0] = *(_QWORD *)(v3 + v9[12]);
    v34 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D48918);
    sub_23E4B0A08(&qword_256D48920, (uint64_t (*)(void))sub_23E4B08F8, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v23[0]) = 9;
    sub_23E53827C();
    LOBYTE(v23[0]) = *(_BYTE *)(v3 + v9[14]);
    v34 = 10;
    sub_23E4B093C();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticActionSet.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticActionSet.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticActionSet.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *);
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;

  v38 = a2;
  v4 = sub_23E536F80();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v37 - v8;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48938);
  v10 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (int *)type metadata accessor for StaticActionSet();
  MEMORY[0x24BDAC7A8](v43);
  v41 = a1;
  v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4B082C();
  v39 = v12;
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  v37 = v10;
  LOBYTE(v45) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v14 = v4;
  v15 = *(void (**)(char *, char *))(v44 + 32);
  v16 = v42;
  v17 = v9;
  v18 = v14;
  v15(v42, v17);
  LOBYTE(v45) = 1;
  v19 = sub_23E538144();
  v20 = v43;
  v21 = (uint64_t *)&v16[v43[5]];
  *v21 = v19;
  v21[1] = v22;
  v57 = 2;
  sub_23E396AA8();
  sub_23E538108();
  v16[v20[6]] = v45;
  LOBYTE(v45) = 3;
  sub_23E538180();
  ((void (*)(char *, char *, uint64_t))v15)(&v16[v20[7]], v7, v18);
  v57 = 4;
  sub_23E4B0980();
  sub_23E538180();
  v23 = v46;
  v24 = v47;
  v25 = v48;
  v26 = v49;
  v27 = v50;
  v28 = v51;
  v29 = v52;
  v30 = v53;
  v31 = v54;
  v32 = v55;
  v33 = v56;
  v34 = &v16[v20[8]];
  *(_QWORD *)v34 = v45;
  *((_QWORD *)v34 + 1) = v23;
  v34[16] = v24;
  *((_QWORD *)v34 + 3) = v25;
  *((_QWORD *)v34 + 4) = v26;
  v34[40] = v27;
  *((_QWORD *)v34 + 6) = v28;
  *((_QWORD *)v34 + 7) = v29;
  v34[64] = v30;
  *((_QWORD *)v34 + 9) = v31;
  *((_QWORD *)v34 + 10) = v32;
  v34[88] = v33;
  v57 = 5;
  sub_23E4B09C4();
  sub_23E538180();
  *(_QWORD *)&v16[v20[9]] = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v57 = 6;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v16[v20[10]] = v45;
  LOBYTE(v45) = 7;
  v16[v43[11]] = sub_23E538150() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D48918);
  v57 = 8;
  sub_23E4B0A08(&qword_256D48950, (uint64_t (*)(void))sub_23E4B0A70, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v16[v43[12]] = v45;
  LOBYTE(v45) = 9;
  v42[v43[13]] = sub_23E538150() & 1;
  v57 = 10;
  sub_23E4B0AB4();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v40);
  v35 = (uint64_t)v42;
  v42[v43[14]] = v45;
  sub_23E1E2F50(v35, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E4AE1B4()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticActionSet.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E4AE1F4()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticActionSet.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E4AE22C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticActionSet.init(from:)(a1, a2);
}

uint64_t sub_23E4AE240(_QWORD *a1)
{
  return StaticActionSet.encode(to:)(a1);
}

uint64_t _s13HomeDataModel15StaticActionSetV12tileIconTint7SwiftUI5ColorVvg_0()
{
  type metadata accessor for StaticActionSet();
  return swift_retain();
}

uint64_t StaticActionSet.isDoubleHigh.getter()
{
  return 0;
}

void StaticActionSet.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticActionSet.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t StaticActionSet.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 44));
}

uint64_t StaticActionSet.roomName.getter()
{
  return 0;
}

uint64_t StaticActionSet.canBeToggled.getter()
{
  return 1;
}

uint64_t StaticActionSet.isReachable.getter()
{
  return 1;
}

uint64_t StaticActionSet.statusString.getter()
{
  return 0;
}

uint64_t sub_23E4AE30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[3];
  v8 = v3[4];
  v9 = *((_BYTE *)v3 + 40);
  v10 = v3[6];
  v11 = v3[7];
  v12 = *((_BYTE *)v3 + 64);
  v13 = v3[9];
  v14 = v3[10];
  LOBYTE(v3) = *((_BYTE *)v3 + 88);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_BYTE *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  *(_BYTE *)(a2 + 64) = v12;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v14;
  *(_BYTE *)(a2 + 88) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4AE38C()
{
  return swift_retain();
}

uint64_t sub_23E4AE398()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4AE3A4()
{
  return 0x6341636974617473;
}

BOOL sub_23E4AE3D4(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_23E4AE3FC(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_23E4AE418(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_23E4AE428@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t updated;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v27 = a5;
  v28 = a6;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
    goto LABEL_8;
  v19 = (uint64_t *)(a2 + 32);
  while (1)
  {
    v21 = *v19++;
    v20 = v21;
    if ((unint64_t)(v21 - 1) >= 2)
      break;
    if (!--v18)
      goto LABEL_8;
  }
  if (v20
    && (swift_bridgeObjectRetain(),
        v22 = objc_msgSend(v17, sel_uniqueIdentifier, v27),
        sub_23E536F68(),
        v22,
        LOBYTE(v22) = sub_23E20FAB0((uint64_t)v16, v20),
        sub_23E261F60(v20),
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13),
        (v22 & 1) == 0))
  {
    v26 = type metadata accessor for StaticActionSet();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v28, 1, 1, v26);
  }
  else
  {
LABEL_8:
    sub_23E1E2F50(a3, (uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
    v23 = v17;
    swift_bridgeObjectRetain();
    v24 = v27;
    return sub_23E4ABF10((uint64_t)v12, v23, a4, v24, v28);
  }
}

void sub_23E4AE5E8(uint64_t a1, void **a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  void (*v34)(uint64_t, uint64_t);
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void *v91;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v70 - v9;
  v11 = sub_23E536F80();
  v83 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v79 = (char *)&v70 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v82 = (uint64_t)&v70 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v70 - v19;
  v21 = *a2;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
      return;
    v73 = v14;
    v74 = a1;
    v72 = v2;
    objc_opt_self();
    v35 = (void *)swift_dynamicCastObjCClassUnconditional();
    v71 = v21;
    v36 = objc_msgSend(v35, sel_mediaProfiles);
    v37 = sub_23E1E335C(0, &qword_256D48A20);
    sub_23E1E6118(&qword_256D48A28, &qword_256D48A20);
    v38 = sub_23E537A0C();

    v84 = v38;
    v76 = v37;
    if ((v38 & 0xC000000000000001) != 0)
    {
      sub_23E537D78();
      sub_23E537A3C();
      v84 = v86;
      v81 = v87;
      v39 = v88;
      v40 = v89;
      v41 = v90;
    }
    else
    {
      v40 = 0;
      v42 = -1 << *(_BYTE *)(v84 + 32);
      v43 = *(_QWORD *)(v84 + 56);
      v81 = v84 + 56;
      v44 = ~v42;
      v45 = -v42;
      if (v45 < 64)
        v46 = ~(-1 << v45);
      else
        v46 = -1;
      v41 = v46 & v43;
      v39 = v44;
    }
    v78 = v84 & 0x7FFFFFFFFFFFFFFFLL;
    v70 = v39;
    v80 = (unint64_t)(v39 + 64) >> 6;
    v75 = MEMORY[0x24BEE4AD0] + 8;
    v77 = v8;
    while (1)
    {
      if (v84 < 0)
      {
        v50 = sub_23E537DD8();
        if (!v50)
          goto LABEL_45;
        v85 = v50;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v51 = v91;
        swift_unknownObjectRelease();
        v49 = v40;
        v47 = v41;
        if (!v51)
          goto LABEL_45;
      }
      else
      {
        if (v41)
        {
          v47 = (v41 - 1) & v41;
          v48 = __clz(__rbit64(v41)) | (v40 << 6);
          v49 = v40;
        }
        else
        {
          v52 = v40 + 1;
          if (__OFADD__(v40, 1))
          {
            __break(1u);
            return;
          }
          if (v52 >= v80)
            goto LABEL_45;
          v53 = *(_QWORD *)(v81 + 8 * v52);
          v49 = v40 + 1;
          if (!v53)
          {
            v49 = v40 + 2;
            if (v40 + 2 >= v80)
              goto LABEL_45;
            v53 = *(_QWORD *)(v81 + 8 * v49);
            if (!v53)
            {
              v49 = v40 + 3;
              if (v40 + 3 >= v80)
                goto LABEL_45;
              v53 = *(_QWORD *)(v81 + 8 * v49);
              if (!v53)
              {
                v49 = v40 + 4;
                if (v40 + 4 >= v80)
                  goto LABEL_45;
                v53 = *(_QWORD *)(v81 + 8 * v49);
                if (!v53)
                {
                  v54 = v40 + 5;
                  while (v80 != v54)
                  {
                    v53 = *(_QWORD *)(v81 + 8 * v54++);
                    if (v53)
                    {
                      v49 = v54 - 1;
                      goto LABEL_39;
                    }
                  }
LABEL_45:
                  sub_23E2261B0();

                  return;
                }
              }
            }
          }
LABEL_39:
          v47 = (v53 - 1) & v53;
          v48 = __clz(__rbit64(v53)) + (v49 << 6);
        }
        v51 = *(id *)(*(_QWORD *)(v84 + 48) + 8 * v48);
        if (!v51)
          goto LABEL_45;
      }
      v55 = objc_msgSend(v51, sel_accessory, v70);
      if (!v55)
        break;
      v56 = v55;
      v57 = objc_msgSend(v55, sel_room);

      if (!v57)
        break;
      v58 = objc_msgSend(v57, sel_uniqueIdentifier);

      v59 = v11;
      v60 = v82;
      sub_23E536F68();

      v61 = v83;
      v62 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
      v63 = v60;
      v11 = v59;
      v62(v8, v63, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v8, 0, 1, v59);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v8, 1, v59) == 1)
        goto LABEL_18;
      v64 = v73;
      v62(v73, (uint64_t)v77, v59);
      v65 = v79;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v79, v64, v59);
      v66 = v82;
      sub_23E1FFF40(v82, v65);

      v67 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v68 = v66;
      v11 = v59;
      v67(v68, v59);
      v69 = v64;
      v8 = v77;
      v67((uint64_t)v69, v59);
LABEL_19:
      v40 = v49;
      v41 = v47;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v8, 1, 1, v11);
LABEL_18:

    sub_23E1E7C64((uint64_t)v8, &qword_254333F50);
    goto LABEL_19;
  }
  objc_opt_self();
  v22 = (void *)swift_dynamicCastObjCClassUnconditional();
  v23 = v21;
  v24 = objc_msgSend(v22, sel_characteristic);
  v25 = objc_msgSend(v24, sel_service);

  if (v25
    && (v26 = objc_msgSend(v25, sel_accessory), v25, v26)
    && (v27 = objc_msgSend(v26, sel_room), v26, v27))
  {
    v28 = objc_msgSend(v27, sel_uniqueIdentifier);

    v29 = v82;
    sub_23E536F68();

    v30 = v29;
    v31 = v83;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
    v32(v10, v30, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v11) != 1)
    {
      v32(v20, (uint64_t)v10, v11);
      v33 = v79;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v79, v20, v11);
      sub_23E1FFF40(v30, v33);

      v34 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v34(v30, v11);
      v34((uint64_t)v20, v11);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v10, 1, 1, v11);
  }

  sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
}

uint64_t sub_23E4AED54(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t updated;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int v18;
  int v19;
  _BYTE v21[16];

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E2F50(a1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v12 = *((_QWORD *)v10 + 1);
    v13 = *((_QWORD *)v10 + 2);
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_23E536F68();

    MEMORY[0x24BDAC7A8](v15);
    *(_QWORD *)&v21[-16] = v7;
    v16 = sub_23E35ECB4((uint64_t (*)(char *))sub_23E4B1D98, (_BOOL8)&v21[-32], v12);
    v17 = swift_bridgeObjectRelease();
    v18 = v16;
    MEMORY[0x24BDAC7A8](v17);
    *(_QWORD *)&v21[-16] = v7;
    LOBYTE(v14) = sub_23E35ECB4((uint64_t (*)(char *))sub_23E4B1E14, (_BOOL8)&v21[-32], v13);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    v19 = v14 & 1;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
    v18 = 2;
    v19 = 2;
  }
  return v18 | (v19 << 8);
}

void sub_23E4AEF24(unsigned __int8 *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  id v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78[2];
  char v79;
  _BYTE *v80;

  v73 = a3;
  v80 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v7);
  v69 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for StaticCharacteristic();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v67 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for StaticService();
  v10 = *(_QWORD *)(v71 - 8);
  v11 = MEMORY[0x24BDAC7A8](v71);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v72 = (uint64_t)&v67 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E536F80();
  v77 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v67 - v22;
  v76 = *a1;
  v24 = *a2;
  objc_opt_self();
  v25 = swift_dynamicCastObjCClass();
  if (!v25)
    goto LABEL_27;
  v26 = (void *)v25;
  v75 = v4;
  v74 = v24;
  v27 = objc_msgSend(v26, sel_characteristic);
  v28 = objc_msgSend(v27, sel_service);

  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v17, 1, 1, v18);
    goto LABEL_9;
  }
  v29 = objc_msgSend(v28, sel_uniqueIdentifier);

  sub_23E536F68();
  v30 = v77;
  v31 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  v31(v17, v21, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v18) == 1)
  {
LABEL_9:

    v44 = &qword_254333F50;
    v45 = (uint64_t)v17;
LABEL_10:
    sub_23E1E7C64(v45, v44);
    goto LABEL_12;
  }
  v32 = v23;
  v31(v23, v17, v18);
  v33 = v73;
  if (!*(_QWORD *)(v73 + 16) || (v34 = sub_23E1E3300((uint64_t)v23), (v35 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v18);

    goto LABEL_12;
  }
  sub_23E1E2F50(*(_QWORD *)(v33 + 56) + *(_QWORD *)(v10 + 72) * v34, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v36 = v72;
  sub_23E1E2FDC((uint64_t)v13, v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v37 = objc_msgSend(v26, sel_characteristic);
  v38 = objc_msgSend(v37, sel_characteristicType);

  v39 = sub_23E53755C();
  v41 = v40;

  v42._countAndFlagsBits = v39;
  v42._object = v41;
  CharacteristicKind.init(rawValue:)(v42);
  v43 = LOBYTE(v78[0]);
  if (LOBYTE(v78[0]) != 174)
  {
    v48 = *(_QWORD *)(v36 + *(int *)(v71 + 104));
    if (!*(_QWORD *)(v48 + 16))
    {
      v52 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v69, 1, 1, v70);
LABEL_20:

      sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v18);
      v44 = &qword_2543332A0;
      v45 = v52;
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    v49 = sub_23E1EAF70(v43);
    if ((v50 & 1) != 0)
    {
      v51 = v68;
      v52 = v69;
      sub_23E1E2F50(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v68 + 72) * v49, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v53 = 0;
      v54 = v70;
    }
    else
    {
      v53 = 1;
      v52 = v69;
      v54 = v70;
      v51 = v68;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v52, v53, 1, v54);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v52, 1, v54) == 1)
      goto LABEL_20;
    v55 = sub_23E1E2FDC(v52, v67, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    LOBYTE(v78[0]) = v43;
    if (CharacteristicKind.rawValue.getter(v55) == 0xD000000000000024 && v56 == 0x800000023E55EC70)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      v57 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0)
      {
        v58 = *(int *)(v54 + 24);
        v59 = v67;
        v60 = v67 + v58;
        v62 = *(_QWORD *)(v60 + 8);
        v63 = *(_BYTE *)(v60 + 16);
        v78[0] = *(_QWORD *)v60;
        v61 = v78[0];
        v78[1] = v62;
        v79 = v63;
        sub_23E1E8058(v78[0], v62, v63);
        v64 = objc_msgSend(v26, sel_targetValue);
        _s13HomeDataModel20StaticCharacteristicV026typedValueIsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0((uint64_t)v78);
        v66 = v65;

        sub_23E1EAB20(v61, v62, v63);
        sub_23E1E2FA0(v59, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v18);
        v46 = v76 & v66;
        goto LABEL_13;
      }

    }
    sub_23E1E2FA0(v67, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v18);
LABEL_27:
    v47 = v80;
    v46 = v76;
    goto LABEL_28;
  }

  sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v18);
LABEL_12:
  v46 = 0;
LABEL_13:
  v47 = v80;
LABEL_28:
  *v47 = v46;
}

BOOL _s13HomeDataModel15StaticActionSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  _BOOL8 result;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _QWORD v51[2];
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for StaticActionSet();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_23E538354(), result = 0, (v10 & 1) != 0))
  {
    v12 = v4[6];
    v13 = *(unsigned __int8 *)(a1 + v12);
    v14 = *(unsigned __int8 *)(a2 + v12);
    if (v13 == 7)
    {
      if (v14 != 7)
        return 0;
    }
    else
    {
      if (v14 == 7)
        return 0;
      sub_23E52398C(v13);
      if ((v15 & 1) == 0)
        return 0;
    }
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    {
      v16 = (uint64_t *)(a1 + v4[8]);
      v17 = *v16;
      v18 = v16[1];
      v19 = *((_BYTE *)v16 + 16);
      v20 = v16[3];
      v21 = v16[4];
      v22 = *((_BYTE *)v16 + 40);
      v23 = v16[6];
      v24 = v16[7];
      v25 = *((_BYTE *)v16 + 64);
      v26 = v16[9];
      v27 = v16[10];
      LOBYTE(v16) = *((_BYTE *)v16 + 88);
      v51[0] = v17;
      v51[1] = v18;
      v52 = v19;
      v53 = v20;
      v54 = v21;
      v55 = v22;
      v56 = v23;
      v57 = v24;
      v58 = v25;
      v59 = v26;
      v60 = v27;
      v61 = (char)v16;
      v28 = (uint64_t *)(a2 + v4[8]);
      v29 = *v28;
      v30 = v28[1];
      v31 = *((_BYTE *)v28 + 16);
      v32 = v28[3];
      v33 = v28[4];
      v34 = *((_BYTE *)v28 + 40);
      v35 = v28[6];
      v36 = v28[7];
      v37 = *((_BYTE *)v28 + 64);
      v38 = v28[9];
      v39 = v28[10];
      LOBYTE(v28) = *((_BYTE *)v28 + 88);
      v40[0] = v29;
      v40[1] = v30;
      v41 = v31;
      v42 = v32;
      v43 = v33;
      v44 = v34;
      v45 = v35;
      v46 = v36;
      v47 = v37;
      v48 = v38;
      v49 = v39;
      v50 = (char)v28;
      if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)v51, (uint64_t)v40)
        && (sub_23E5372F8() & 1) != 0
        && (sub_23E1F8470(*(_QWORD *)(a1 + v4[10]), *(_QWORD *)(a2 + v4[10])) & 1) != 0
        && *(unsigned __int8 *)(a1 + v4[11]) == *(unsigned __int8 *)(a2 + v4[11])
        && (sub_23E336E44(*(_QWORD *)(a1 + v4[12]), *(_QWORD *)(a2 + v4[12])) & 1) != 0
        && *(unsigned __int8 *)(a1 + v4[13]) == *(unsigned __int8 *)(a2 + v4[13]))
      {
        return *(unsigned __int8 *)(a1 + v4[14]) == *(unsigned __int8 *)(a2 + v4[14]);
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v29;
  uint64_t v31;

  v4 = type metadata accessor for StaticActionSet();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v31 - v15;
  v17 = *(int *)(v14 + 20);
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_23E1E2F50(a1, (uint64_t)&v31 - v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    sub_23E1E2F50(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  }
  else
  {
    v22 = 1;
    v23 = sub_23E538354();
    sub_23E1E2F50(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    sub_23E1E2F50(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    if ((v23 & 1) != 0)
      goto LABEL_17;
  }
  v24 = *(int *)(v4 + 20);
  v25 = *(_QWORD *)&v16[v24];
  v26 = *(_QWORD *)&v16[v24 + 8];
  v27 = &v13[v24];
  if (v25 == *(_QWORD *)v27 && v26 == *((_QWORD *)v27 + 1))
  {
    sub_23E1E2F50((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    sub_23E1E2F50((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  }
  else
  {
    v29 = sub_23E538354();
    sub_23E1E2F50((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    sub_23E1E2F50((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v22 = 0;
    if ((v29 & 1) == 0)
      goto LABEL_16;
  }
  v22 = MEMORY[0x24264E1E8](v10, v7);
LABEL_16:
  sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_17:
  sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  return v22 & 1;
}

uint64_t sub_23E4AF9C0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticActionSet();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F80);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticActionSet;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333F80);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D68C();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212B9C(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E4B1DD0(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E4AFCE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a4 + 16);
  if (!v12)
    return sub_23E20736C(MEMORY[0x24BEE4AF8]);
  v13 = 0;
  while ((unint64_t)(*(_QWORD *)(a4 + 8 * v13 + 32) - 1) <= 1)
  {
    if (v12 == ++v13)
      return sub_23E20736C(MEMORY[0x24BEE4AF8]);
  }
  v15 = objc_msgSend(a2, sel_actionSets);
  sub_23E1E335C(0, &qword_254332C00);
  v16 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v17);
  *(&v31 - 4) = a4;
  *(&v31 - 3) = a1;
  *(&v31 - 2) = a3;
  *(&v31 - 1) = (uint64_t)a2;
  v18 = 0;
  v19 = sub_23E473974((void (*)(id *))sub_23E4B1DB4, (uint64_t)(&v31 - 6), v16);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v32 = 0;
    v33 = MEMORY[0x24BEE4AF8];
    sub_23E200634(0, v20, 0);
    v21 = v33;
    v22 = *(_QWORD *)(type metadata accessor for StaticActionSet() - 8);
    v23 = *(unsigned __int8 *)(v22 + 80);
    v31 = v19;
    v24 = v19 + ((v23 + 32) & ~v23);
    v25 = *(_QWORD *)(v22 + 72);
    do
    {
      v26 = (uint64_t)&v11[*(int *)(v8 + 48)];
      sub_23E1E2F50(v24, v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v27 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v11, v26, v27);
      v33 = v21;
      v29 = *(_QWORD *)(v21 + 16);
      v28 = *(_QWORD *)(v21 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_23E200634(v28 > 1, v29 + 1, 1);
        v21 = v33;
      }
      *(_QWORD *)(v21 + 16) = v29 + 1;
      sub_23E2005EC((uint64_t)v11, v21+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v29);
      v24 += v25;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    v18 = v32;
    if (*(_QWORD *)(v21 + 16))
      goto LABEL_12;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A8);
      v30 = sub_23E53806C();
      goto LABEL_15;
    }
  }
  v30 = MEMORY[0x24BEE4B00];
LABEL_15:
  v33 = v30;
  sub_23E4AF9C0(v21, 1, &v33);
  swift_bridgeObjectRelease();
  if (!v18)
    return v33;
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23E4AFFD8(unsigned __int8 a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  void *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  char *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25[6];
  unsigned __int8 v26;

  v4 = v3;
  v6 = a2;
  v26 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
    sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
    sub_23E537A3C();
    v6 = (unint64_t)v25[1];
    v23 = v25[2];
    v7 = v25[3];
    v8 = (char *)v25[4];
    v9 = (unint64_t)v25[5];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a2 + 32);
    v23 = (_QWORD *)(a2 + 56);
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v7 = (void *)v11;
    v8 = 0;
  }
  v22 = ((unint64_t)v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  v14 = sub_23E537DD8();
  if (v14)
  {
    v24 = v14;
    sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v25[0];
    swift_unknownObjectRelease();
    v16 = (int64_t)v8;
    v17 = v9;
    while (v15)
    {
      v25[0] = v15;
      sub_23E4AEF24(&v26, v25, a3, &v24);

      if (v4)
        break;
      v26 = v24;
      v8 = (char *)v16;
      v9 = v17;
      if ((v6 & 0x8000000000000000) != 0)
        goto LABEL_8;
LABEL_11:
      if (v9)
      {
        v17 = (v9 - 1) & v9;
        v18 = __clz(__rbit64(v9)) | ((_QWORD)v8 << 6);
        v16 = (int64_t)v8;
      }
      else
      {
        v16 = (int64_t)(v8 + 1);
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v16 >= v22)
          break;
        v19 = v23[v16];
        if (!v19)
        {
          v20 = (int64_t)(v8 + 2);
          if ((uint64_t)(v8 + 2) >= v22)
            break;
          v19 = v23[v20];
          if (v19)
            goto LABEL_22;
          v20 = (int64_t)(v8 + 3);
          if ((uint64_t)(v8 + 3) >= v22)
            break;
          v19 = v23[v20];
          if (v19)
            goto LABEL_22;
          v20 = (int64_t)(v8 + 4);
          if ((uint64_t)(v8 + 4) >= v22)
            break;
          v19 = v23[v20];
          if (v19)
          {
LABEL_22:
            v16 = v20;
          }
          else
          {
            v16 = (int64_t)(v8 + 5);
            if ((uint64_t)(v8 + 5) >= v22)
              break;
            v19 = v23[v16];
            if (!v19)
            {
              v21 = v8 + 6;
              while ((char *)v22 != v21)
              {
                v19 = v23[(_QWORD)v21++];
                if (v19)
                {
                  v16 = (int64_t)(v21 - 1);
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v17 = (v19 - 1) & v19;
        v18 = __clz(__rbit64(v19)) + (v16 << 6);
      }
      v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
    }
  }
  sub_23E2261B0();
}

uint64_t sub_23E4B030C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69747563657865 && a2 == 0xE900000000000067 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_23E4B0454(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A00);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A08);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A10);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A18);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4ACD14();
  v11 = (uint64_t)v30;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_23E537ED4();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v10 = &type metadata for StaticActionSet.ExecutionStatus;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_23E4ACD9C();
      v16 = v28;
      sub_23E5380C0();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_23E4ACD58();
      sub_23E5380C0();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_23E4ACDE0();
    sub_23E5380C0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return v10;
}

unint64_t sub_23E4B082C()
{
  unint64_t result;

  result = qword_256D48900;
  if (!qword_256D48900)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5576E4, &type metadata for StaticActionSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48900);
  }
  return result;
}

unint64_t sub_23E4B0870()
{
  unint64_t result;

  result = qword_256D48908;
  if (!qword_256D48908)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon, &type metadata for Icon);
    atomic_store(result, (unint64_t *)&qword_256D48908);
  }
  return result;
}

unint64_t sub_23E4B08B4()
{
  unint64_t result;

  result = qword_256D48910;
  if (!qword_256D48910)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E40]);
    atomic_store(result, (unint64_t *)&qword_256D48910);
  }
  return result;
}

unint64_t sub_23E4B08F8()
{
  unint64_t result;

  result = qword_256D48928;
  if (!qword_256D48928)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for UmbrellaCategory, &type metadata for UmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D48928);
  }
  return result;
}

unint64_t sub_23E4B093C()
{
  unint64_t result;

  result = qword_256D48930;
  if (!qword_256D48930)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticActionSet.ExecutionStatus, &type metadata for StaticActionSet.ExecutionStatus);
    atomic_store(result, (unint64_t *)&qword_256D48930);
  }
  return result;
}

unint64_t sub_23E4B0980()
{
  unint64_t result;

  result = qword_256D48940;
  if (!qword_256D48940)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon, &type metadata for Icon);
    atomic_store(result, (unint64_t *)&qword_256D48940);
  }
  return result;
}

unint64_t sub_23E4B09C4()
{
  unint64_t result;

  result = qword_256D48948;
  if (!qword_256D48948)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Color, MEMORY[0x24BDF3E40]);
    atomic_store(result, (unint64_t *)&qword_256D48948);
  }
  return result;
}

uint64_t sub_23E4B0A08(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D48918);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E4B0A70()
{
  unint64_t result;

  result = qword_256D48958;
  if (!qword_256D48958)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for UmbrellaCategory, &type metadata for UmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D48958);
  }
  return result;
}

unint64_t sub_23E4B0AB4()
{
  unint64_t result;

  result = qword_256D48960;
  if (!qword_256D48960)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticActionSet.ExecutionStatus, &type metadata for StaticActionSet.ExecutionStatus);
    atomic_store(result, (unint64_t *)&qword_256D48960);
  }
  return result;
}

unint64_t sub_23E4B0AFC()
{
  unint64_t result;

  result = qword_256D48968;
  if (!qword_256D48968)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticActionSet.ExecutionStatus, &type metadata for StaticActionSet.ExecutionStatus);
    atomic_store(result, (unint64_t *)&qword_256D48968);
  }
  return result;
}

unint64_t sub_23E4B0B44()
{
  unint64_t result;

  result = qword_256D48970;
  if (!qword_256D48970)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticActionSet.Error, &type metadata for StaticActionSet.Error);
    atomic_store(result, (unint64_t *)&qword_256D48970);
  }
  return result;
}

uint64_t sub_23E4B0B88()
{
  return sub_23E1EE1C4(&qword_256D48978, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
}

uint64_t sub_23E4B0BB4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D48980, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  a1[2] = sub_23E1EE1C4(&qword_256D48988, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  a1[3] = sub_23E1EE1C4(&qword_256D40E88, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  a1[4] = sub_23E1EE1C4(&qword_256D40D48, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  a1[5] = sub_23E1EE1C4(&qword_256D48990, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  result = sub_23E1EE1C4(&qword_256D48998, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  a1[6] = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticActionSet(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = (uint64_t *)&a2[v9];
    v14 = *v12;
    v13 = v12[1];
    LOBYTE(v12) = a2[v10];
    *(_QWORD *)v11 = v14;
    *((_QWORD *)v11 + 1) = v13;
    a1[v10] = (char)v12;
    v15 = a3[7];
    v16 = &a1[v15];
    v17 = &a2[v15];
    swift_bridgeObjectRetain();
    v8(v16, v17, v7);
    v18 = a3[8];
    v19 = a3[9];
    v20 = &a1[v18];
    v21 = &a2[v18];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v20[16] = v21[16];
    v23 = *((_QWORD *)v21 + 4);
    *((_QWORD *)v20 + 3) = *((_QWORD *)v21 + 3);
    *((_QWORD *)v20 + 4) = v23;
    v20[40] = v21[40];
    v24 = *((_QWORD *)v21 + 7);
    *((_QWORD *)v20 + 6) = *((_QWORD *)v21 + 6);
    *((_QWORD *)v20 + 7) = v24;
    v20[64] = v21[64];
    v25 = *((_QWORD *)v21 + 10);
    *((_QWORD *)v20 + 9) = *((_QWORD *)v21 + 9);
    *((_QWORD *)v20 + 10) = v25;
    v20[88] = v21[88];
    *(_QWORD *)&a1[v19] = *(_QWORD *)&a2[v19];
    v26 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
    a1[v26] = a2[v26];
    v27 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    a1[v27] = a2[v27];
    a1[a3[14]] = a2[a3[14]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = *(_QWORD *)(v13 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 64) = *(_BYTE *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 88) = *(_BYTE *)(v13 + 88);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v9 = a3[8];
  v10 = a3[9];
  v11 = (_OWORD *)(a1 + v9);
  v12 = (_OWORD *)(a2 + v9);
  v13 = v12[3];
  v11[2] = v12[2];
  v11[3] = v13;
  v11[4] = v12[4];
  *(_OWORD *)((char *)v11 + 73) = *(_OWORD *)((char *)v12 + 73);
  v14 = v12[1];
  *v11 = *v12;
  v11[1] = v14;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v15 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v7(a1 + v13, a2 + v13, v6);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 32) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 40) = *(_BYTE *)(v16 + 40);
  v19 = *(_QWORD *)(v16 + 56);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  *(_QWORD *)(v15 + 56) = v19;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 64) = *(_BYTE *)(v16 + 64);
  v20 = *(_QWORD *)(v16 + 80);
  *(_QWORD *)(v15 + 72) = *(_QWORD *)(v16 + 72);
  *(_QWORD *)(v15 + 80) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 88) = *(_BYTE *)(v16 + 88);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v21 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_bridgeObjectRelease();
  v22 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  return a1;
}

uint64_t sub_23E4B1220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E4B12A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus()
{
  return &type metadata for StaticActionSet.ExecutionStatus;
}

uint64_t storeEnumTagSinglePayload for StaticActionSet.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E4B1374 + 4 * byte_23E557002[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E4B1394 + 4 * byte_23E557007[v4]))();
}

_BYTE *sub_23E4B1374(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E4B1394(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4B139C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4B13A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4B13AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4B13B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.Error()
{
  return &type metadata for StaticActionSet.Error;
}

uint64_t storeEnumTagSinglePayload for StaticActionSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23E4B141C + 4 * byte_23E557011[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23E4B1450 + 4 * byte_23E55700C[v4]))();
}

uint64_t sub_23E4B1450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B1458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4B1460);
  return result;
}

uint64_t sub_23E4B146C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4B1474);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23E4B1478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B1480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.CodingKeys()
{
  return &type metadata for StaticActionSet.CodingKeys;
}

uint64_t _s13HomeDataModel15StaticActionSetV15ExecutionStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E4B14E8 + 4 * byte_23E55701B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E4B151C + 4 * byte_23E557016[v4]))();
}

uint64_t sub_23E4B151C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B1524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4B152CLL);
  return result;
}

uint64_t sub_23E4B1538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4B1540);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E4B1544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B154C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.CodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.NoneCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.ExecutingCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.ExecutingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.FailedCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.FailedCodingKeys;
}

unint64_t sub_23E4B159C()
{
  unint64_t result;

  result = qword_256D489A0;
  if (!qword_256D489A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557604, &type metadata for StaticActionSet.ExecutionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489A0);
  }
  return result;
}

unint64_t sub_23E4B15E4()
{
  unint64_t result;

  result = qword_256D489A8;
  if (!qword_256D489A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5576BC, &type metadata for StaticActionSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489A8);
  }
  return result;
}

unint64_t sub_23E4B162C()
{
  unint64_t result;

  result = qword_256D489B0;
  if (!qword_256D489B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55762C, &type metadata for StaticActionSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489B0);
  }
  return result;
}

unint64_t sub_23E4B1674()
{
  unint64_t result;

  result = qword_256D489B8;
  if (!qword_256D489B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557654, &type metadata for StaticActionSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489B8);
  }
  return result;
}

unint64_t sub_23E4B16BC()
{
  unint64_t result;

  result = qword_256D489C0;
  if (!qword_256D489C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557524, &type metadata for StaticActionSet.ExecutionStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489C0);
  }
  return result;
}

unint64_t sub_23E4B1704()
{
  unint64_t result;

  result = qword_256D489C8;
  if (!qword_256D489C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55754C, &type metadata for StaticActionSet.ExecutionStatus.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489C8);
  }
  return result;
}

unint64_t sub_23E4B174C()
{
  unint64_t result;

  result = qword_256D489D0;
  if (!qword_256D489D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5574D4, &type metadata for StaticActionSet.ExecutionStatus.ExecutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489D0);
  }
  return result;
}

unint64_t sub_23E4B1794()
{
  unint64_t result;

  result = qword_256D489D8;
  if (!qword_256D489D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5574FC, &type metadata for StaticActionSet.ExecutionStatus.ExecutingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489D8);
  }
  return result;
}

unint64_t sub_23E4B17DC()
{
  unint64_t result;

  result = qword_256D489E0;
  if (!qword_256D489E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557484, &type metadata for StaticActionSet.ExecutionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489E0);
  }
  return result;
}

unint64_t sub_23E4B1824()
{
  unint64_t result;

  result = qword_256D489E8;
  if (!qword_256D489E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5574AC, &type metadata for StaticActionSet.ExecutionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489E8);
  }
  return result;
}

unint64_t sub_23E4B186C()
{
  unint64_t result;

  result = qword_256D489F0;
  if (!qword_256D489F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557574, &type metadata for StaticActionSet.ExecutionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489F0);
  }
  return result;
}

unint64_t sub_23E4B18B4()
{
  unint64_t result;

  result = qword_256D489F8;
  if (!qword_256D489F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55759C, &type metadata for StaticActionSet.ExecutionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D489F8);
  }
  return result;
}

uint64_t sub_23E4B18F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xED0000646E694B74 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6349656C6974 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6349656C6974 && a2 == 0xEC000000746E6954 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56AF40 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6176697463417369 && a2 == 0xEB00000000646574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F69747563657865 && a2 == 0xEF7375746174536ELL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_23E4B1D98()
{
  return sub_23E36143C() & 1;
}

uint64_t sub_23E4B1DB4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E4AE428(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_23E4B1DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticActionSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4B1E14()
{
  return sub_23E4B1D98() & 1;
}

uint64_t StaticClusterPowerSource.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t result;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  int v47;
  unsigned __int8 v48;
  uint64_t v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  __int128 v65;
  uint64_t v66;

  v5 = *(_QWORD *)a1;
  v6 = *(unsigned __int16 *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 10);
  ObjectType = swift_getObjectType();
  v62 = v5;
  v63 = v6;
  v64 = v7;
  v9 = *(void (**)(__int128 *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v65, &v62, 0, ObjectType, a2);
  if (!v66)
  {
    sub_23E1E9988((uint64_t)&v65);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_254332E00 != -1)
      swift_once();
    v16 = sub_23E5371A8();
    __swift_project_value_buffer(v16, (uint64_t)qword_254333308);
    v17 = sub_23E537190();
    v18 = sub_23E537B08();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_22;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v7;
    v22 = v20;
    *(_DWORD *)v19 = 136315138;
    v62 = v20;
    *(_QWORD *)&v65 = v5;
    WORD4(v65) = v6;
    BYTE10(v65) = v21;
    v23 = ClusterPath.description.getter();
    *(_QWORD *)&v65 = sub_23E1FD768(v23, v24, &v62);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v25 = "Couldn't get value for status attribute '%s'";
    goto LABEL_21;
  }
  v10 = v62;
  v62 = v5;
  v63 = v6;
  v64 = v7;
  v9(&v65, &v62, 1, ObjectType, a2);
  if (!v66)
  {
    sub_23E1E9988((uint64_t)&v65);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_254332E00 != -1)
      swift_once();
    v26 = sub_23E5371A8();
    __swift_project_value_buffer(v26, (uint64_t)qword_254333308);
    v17 = sub_23E537190();
    v18 = sub_23E537B08();
    if (!os_log_type_enabled(v17, v18))
      goto LABEL_22;
    v19 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v7;
    v22 = v27;
    *(_DWORD *)v19 = 136315138;
    v62 = v27;
    *(_QWORD *)&v65 = v5;
    WORD4(v65) = v6;
    BYTE10(v65) = v28;
    v29 = ClusterPath.description.getter();
    *(_QWORD *)&v65 = sub_23E1FD768(v29, v30, &v62);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v25 = "Couldn't get value for order attribute '%s'";
    goto LABEL_21;
  }
  v61 = v62;
  *(_QWORD *)&v65 = v5;
  WORD4(v65) = v6;
  BYTE10(v65) = v7;
  v11 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a2 + 72))(&v65, ObjectType, a2);
  if ((v11 & 0x100000000) == 0)
  {
    v12 = v11;
    *(_QWORD *)&v65 = v5;
    WORD4(v65) = v6;
    BYTE10(v65) = v7;
    v13 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a2 + 80))(&v65, ObjectType, a2);
    if ((v12 & 1) != 0)
    {
      sub_23E4B3350(9, v13, a2, v5, v6 | ((_DWORD)v7 << 16), &v65);
      if (v66)
      {
        v14 = swift_dynamicCast();
        v15 = v62;
        if (!v14)
          v15 = 2;
LABEL_30:
        v58 = v15;
        v60 = v7;
        if ((v12 & 2) != 0)
        {
          v46 = v6 | ((_DWORD)v7 << 16);
          sub_23E4B3350(12, v13, a2, v5, v46, &v65);
          if (v66)
          {
            v47 = swift_dynamicCast();
            v48 = v62;
            if (!v47)
              v48 = 0;
            v57 = v48;
            v49 = v47 ^ 1u;
          }
          else
          {
            sub_23E1E9988((uint64_t)&v65);
            v57 = 0;
            v49 = 1;
          }
          v56 = v49;
          sub_23E4B3350(13, v13, a2, v5, v46, &v65);
          swift_bridgeObjectRelease();
          if (v66)
          {
            v50 = swift_dynamicCast();
            v51 = v62;
            if (!v50)
              v51 = 0;
            v55 = v51;
            v52 = v50 ^ 1u;
          }
          else
          {
            sub_23E1E9988((uint64_t)&v65);
            v55 = 0;
            v52 = 1;
          }
          v54 = v52;
          v39 = v5;
          *(_QWORD *)&v65 = v5;
          WORD4(v65) = v6;
          BYTE10(v65) = v60;
          v53 = sub_23E4B343C((uint64_t)&v65, ObjectType, a2, 14, "Failed to fetch batteryChargeLevel: %s");
          v40 = (unint64_t)v53 << 40;
          v59 = (unint64_t)(v53 & 0x100) << 40;
          if ((v12 & 4) != 0)
            goto LABEL_32;
        }
        else
        {
          v39 = v5;
          swift_bridgeObjectRelease();
          v40 = 0;
          v55 = 0;
          v57 = 0;
          v59 = 0x1000000000000;
          v54 = 1;
          v56 = 1;
          if ((v12 & 4) != 0)
          {
LABEL_32:
            *(_QWORD *)&v65 = v39;
            WORD4(v65) = v6;
            v41 = v60;
            BYTE10(v65) = v60;
            v42 = a2;
            v43 = v40;
            v44 = sub_23E4B343C((uint64_t)&v65, ObjectType, v42, 26, "Failed to fetch batteryChargeState: %s");
            result = swift_unknownObjectRelease();
            v33 = (v44 >> 8) & 1;
            v45 = v44 << 56;
            v40 = v43;
LABEL_45:
            v32 = v59 | v40 | v55 | (v54 << 32) | v45;
            *(_QWORD *)a3 = v39;
            *(_QWORD *)(a3 + 8) = v6 | (v41 << 16) | (v10 << 24) | (v61 << 32);
            *(_QWORD *)(a3 + 16) = v12 | (unint64_t)(v58 << 32) | ((unint64_t)v57 << 40) | (v56 << 48);
            goto LABEL_23;
          }
        }
        result = swift_unknownObjectRelease();
        v45 = 0;
        LOBYTE(v33) = 1;
        v41 = v60;
        goto LABEL_45;
      }
      sub_23E1E9988((uint64_t)&v65);
    }
    v15 = 2;
    goto LABEL_30;
  }
  if (qword_254332E00 != -1)
    swift_once();
  v34 = sub_23E5371A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_254333308);
  v17 = sub_23E537190();
  v18 = sub_23E537B08();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v36 = v7;
    v22 = v35;
    *(_DWORD *)v19 = 136315138;
    v62 = v35;
    *(_QWORD *)&v65 = v5;
    WORD4(v65) = v6;
    BYTE10(v65) = v36;
    v37 = ClusterPath.description.getter();
    *(_QWORD *)&v65 = sub_23E1FD768(v37, v38, &v62);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v25 = "Couldn't get value for feature map attribute '%s'";
LABEL_21:
    _os_log_impl(&dword_23E1DF000, v17, v18, v25, v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v19, -1, -1);
  }
LABEL_22:

  result = swift_unknownObjectRelease();
  v32 = 0;
  LOBYTE(v33) = 0;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0x300000000;
LABEL_23:
  *(_QWORD *)(a3 + 24) = v32;
  *(_BYTE *)(a3 + 32) = v33;
  return result;
}

void StaticClusterPowerSource.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t StaticClusterPowerSource.status.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticClusterPowerSource.order.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t StaticClusterPowerSource.supportedFeatures.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t StaticClusterPowerSource.wiredConnected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t StaticClusterPowerSource.batteryRemaining.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 21) | (*(unsigned __int8 *)(v0 + 22) << 8);
}

unint64_t StaticClusterPowerSource.batteryTimeRemaining.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t StaticClusterPowerSource.batteryChargeLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 29) | (*(unsigned __int8 *)(v0 + 30) << 8);
}

uint64_t StaticClusterPowerSource.batteryChargeState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 31) | (*(unsigned __int8 *)(v0 + 32) << 8);
}

uint64_t StaticClusterPowerSource.init(id:status:order:supportedFeatures:wiredConnected:batteryRemaining:batteryTimeRemaining:batteryChargeLevel:batteryChargeState:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, char a5@<W4>, __int16 a6@<W5>, uint64_t a7@<X6>, __int16 a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  __int16 v11;
  char v12;

  v11 = *(_WORD *)(result + 8);
  v12 = *(_BYTE *)(result + 10);
  *(_QWORD *)a9 = *(_QWORD *)result;
  *(_WORD *)(a9 + 8) = v11;
  *(_BYTE *)(a9 + 10) = v12;
  *(_BYTE *)(a9 + 11) = a2;
  *(_BYTE *)(a9 + 12) = a3;
  *(_DWORD *)(a9 + 16) = a4;
  *(_BYTE *)(a9 + 20) = a5;
  *(_BYTE *)(a9 + 21) = a6;
  *(_BYTE *)(a9 + 22) = HIBYTE(a6) & 1;
  *(_DWORD *)(a9 + 24) = a7;
  *(_BYTE *)(a9 + 28) = BYTE4(a7) & 1;
  *(_BYTE *)(a9 + 29) = a8;
  *(_BYTE *)(a9 + 30) = HIBYTE(a8) & 1;
  *(_BYTE *)(a9 + 31) = a10;
  *(_BYTE *)(a9 + 32) = a11 & 1;
  return result;
}

uint64_t StaticClusterPowerSource.hash(into:)()
{
  unsigned __int8 *v0;
  int v1;
  unsigned __int8 v2;
  int v3;
  unsigned __int8 v5;
  unsigned __int8 v6;

  v1 = v0[20];
  v2 = v0[22];
  v3 = v0[28];
  v5 = v0[30];
  v6 = v0[32];
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  sub_23E538474();
  sub_23E538474();
  sub_23E53848C();
  if (v1 != 2)
    sub_23E538474();
  sub_23E538474();
  if ((v2 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if (v3)
  {
    sub_23E538474();
    if ((v5 & 1) != 0)
      goto LABEL_9;
    goto LABEL_7;
  }
  sub_23E538474();
  sub_23E53848C();
  if ((v5 & 1) == 0)
LABEL_7:
    sub_23E538474();
LABEL_9:
  sub_23E538474();
  if ((v6 & 1) == 0)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E4B2848(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4B2870 + 4 * byte_23E557880[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4B2870()
{
  return 0x737574617473;
}

uint64_t sub_23E4B2884()
{
  return 0x726564726FLL;
}

unint64_t sub_23E4B2898()
{
  return 0xD000000000000011;
}

unint64_t sub_23E4B290C()
{
  return 0xD000000000000012;
}

uint64_t sub_23E4B2934()
{
  unsigned __int8 *v0;

  return sub_23E4B2848(*v0);
}

uint64_t sub_23E4B293C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4B3B3C(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E4B2960(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23E4B296C()
{
  sub_23E4B37C4();
  return sub_23E538570();
}

uint64_t sub_23E4B2994()
{
  sub_23E4B37C4();
  return sub_23E53857C();
}

uint64_t StaticClusterPowerSource.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  char v33;
  int v34;
  char v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A30);
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v34 = *((unsigned __int8 *)v1 + 11);
  v9 = *((unsigned __int8 *)v1 + 12);
  v27 = *((_DWORD *)v1 + 4);
  v28 = v9;
  v10 = *((unsigned __int8 *)v1 + 20);
  v24 = *((unsigned __int8 *)v1 + 21);
  v25 = *((unsigned __int8 *)v1 + 22);
  v26 = v10;
  v23 = *((unsigned int *)v1 + 6);
  v11 = *((unsigned __int8 *)v1 + 28);
  v12 = *((unsigned __int8 *)v1 + 29);
  v21 = *((unsigned __int8 *)v1 + 30);
  v22 = v11;
  v18 = *((unsigned __int8 *)v1 + 31);
  v19 = *((unsigned __int8 *)v1 + 32);
  v20 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4B37C4();
  sub_23E5384EC();
  v31 = v6;
  v32 = v7;
  v33 = v8;
  v35 = 0;
  sub_23E248D7C();
  v13 = v30;
  sub_23E5382AC();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  v15 = v27;
  v16 = v29;
  LOBYTE(v31) = v34;
  v35 = 1;
  type metadata accessor for MTRPowerSourceStatus(0);
  sub_23E1EE1C4(&qword_256D48A40, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceStatus, (uint64_t)&protocol conformance descriptor for MTRPowerSourceStatus);
  sub_23E5382AC();
  LOBYTE(v31) = 2;
  sub_23E5382C4();
  LODWORD(v31) = v15;
  v35 = 3;
  type metadata accessor for MTRPowerSourceFeature(0);
  sub_23E1EE1C4(&qword_256D48A48, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&protocol conformance descriptor for MTRPowerSourceFeature);
  sub_23E5382AC();
  LOBYTE(v31) = 4;
  sub_23E5381F8();
  LOBYTE(v31) = 5;
  sub_23E538240();
  LOBYTE(v31) = 6;
  v35 = v22;
  sub_23E538258();
  LOBYTE(v31) = v20;
  BYTE1(v31) = v21;
  v35 = 7;
  type metadata accessor for MTRPowerSourceBatChargeLevel(0);
  sub_23E1EE1C4(&qword_256D48A50, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeLevel, (uint64_t)&protocol conformance descriptor for MTRPowerSourceBatChargeLevel);
  sub_23E538234();
  LOBYTE(v31) = v18;
  BYTE1(v31) = v19;
  v35 = 8;
  type metadata accessor for MTRPowerSourceBatChargeState(0);
  sub_23E1EE1C4(&qword_256D48A58, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeState, (uint64_t)&protocol conformance descriptor for MTRPowerSourceBatChargeState);
  sub_23E538234();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t StaticClusterPowerSource.hashValue.getter()
{
  sub_23E53845C();
  StaticClusterPowerSource.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticClusterPowerSource.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  char v14;
  char v15;
  _QWORD *v16;
  char v17;
  char v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  unsigned __int16 v28;
  unsigned __int8 v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48A60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4B37C4();
  sub_23E5384E0();
  if (!v2)
  {
    v31 = 0;
    sub_23E248DC0();
    sub_23E538180();
    v26 = a2;
    v9 = v27;
    v10 = v28;
    v11 = v29;
    type metadata accessor for MTRPowerSourceStatus(0);
    v31 = 1;
    sub_23E1EE1C4(&qword_256D48A68, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceStatus, (uint64_t)&protocol conformance descriptor for MTRPowerSourceStatus);
    sub_23E538180();
    v24 = v9;
    v25 = v10;
    v30 = v11;
    LOBYTE(v9) = v27;
    LOBYTE(v27) = 2;
    LOBYTE(v11) = sub_23E538198();
    type metadata accessor for MTRPowerSourceFeature(0);
    v31 = 3;
    sub_23E1EE1C4(&qword_256D48A70, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&protocol conformance descriptor for MTRPowerSourceFeature);
    sub_23E538180();
    v12 = v27;
    LOBYTE(v27) = 4;
    v23 = sub_23E5380E4();
    LOBYTE(v27) = 5;
    v22 = sub_23E538114();
    LOBYTE(v27) = 6;
    v21 = sub_23E53812C();
    type metadata accessor for MTRPowerSourceBatChargeLevel(0);
    v31 = 7;
    sub_23E1EE1C4(&qword_256D48A78, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeLevel, (uint64_t)&protocol conformance descriptor for MTRPowerSourceBatChargeLevel);
    sub_23E538108();
    v19 = BYTE1(v27);
    v20 = v27;
    type metadata accessor for MTRPowerSourceBatChargeState(0);
    v31 = 8;
    sub_23E1EE1C4(&qword_256D48A80, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeState, (uint64_t)&protocol conformance descriptor for MTRPowerSourceBatChargeState);
    sub_23E538108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v27;
    v15 = BYTE1(v27);
    v16 = v26;
    *v26 = v24;
    *((_WORD *)v16 + 4) = v25;
    *((_BYTE *)v16 + 10) = v30;
    *((_BYTE *)v16 + 11) = v9;
    *((_BYTE *)v16 + 12) = v11;
    *((_DWORD *)v16 + 4) = v12;
    *((_BYTE *)v16 + 20) = v23;
    v17 = BYTE1(v22);
    *((_BYTE *)v16 + 21) = v22;
    *((_BYTE *)v16 + 22) = v17 & 1;
    v18 = BYTE4(v21);
    *((_DWORD *)v16 + 6) = v21;
    *((_BYTE *)v16 + 28) = v18 & 1;
    *((_BYTE *)v16 + 29) = v20;
    *((_BYTE *)v16 + 30) = v19;
    *((_BYTE *)v16 + 31) = v14;
    *((_BYTE *)v16 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E4B31E8()
{
  sub_23E53845C();
  StaticClusterPowerSource.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4B328C()
{
  sub_23E53845C();
  StaticClusterPowerSource.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4B3328@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticClusterPowerSource.init(from:)(a1, a2);
}

uint64_t sub_23E4B333C(_QWORD *a1)
{
  return StaticClusterPowerSource.encode(to:)(a1);
}

uint64_t sub_23E4B3350@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned int a5@<W5>, _OWORD *a6@<X8>)
{
  uint64_t v7;
  __int16 v8;
  uint64_t v11;
  unsigned int v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  char v18;

  v7 = *(_QWORD *)(a2 + 16);
  if (!v7)
    goto LABEL_11;
  v8 = a5;
  v11 = result;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
  {
LABEL_5:
    v12 = HIWORD(a5);
    ObjectType = swift_getObjectType();
    v16 = a4;
    v17 = v8;
    v18 = v12;
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 48))(&v16, v11, ObjectType, a3);
  }
  if (v7 == 1)
    goto LABEL_11;
  if (*(_DWORD *)(a2 + 36) == (_DWORD)result)
    goto LABEL_5;
  if (v7 == 2)
  {
LABEL_11:
    *a6 = 0u;
    a6[1] = 0u;
  }
  else
  {
    v14 = 10;
    while (1)
    {
      v15 = v14 - 7;
      if (__OFADD__(v14 - 8, 1))
        break;
      if (*(_DWORD *)(a2 + 4 * v14) == (_DWORD)result)
        goto LABEL_5;
      ++v14;
      if (v15 == v7)
        goto LABEL_11;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E4B343C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *format;
  uint64_t v20;
  __int16 v21;
  char v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  uint64_t v26;

  v6 = *(_QWORD *)a1;
  v7 = *(_WORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 10);
  v20 = *(_QWORD *)a1;
  v21 = v7;
  v22 = v8;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 48))(&v23, &v20, a4, a2, a3);
  if (v26)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = 0;
      v10 = v20;
      return v10 | (v9 << 8);
    }
  }
  else
  {
    sub_23E1E9988((uint64_t)&v23);
  }
  if (qword_254332E00 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_254333308);
  v12 = sub_23E537190();
  v13 = sub_23E537B08();
  if (os_log_type_enabled(v12, v13))
  {
    format = a5;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v20 = v15;
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v16 = ClusterPath.description.getter();
    v23 = sub_23E1FD768(v16, v17, &v20);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v12, v13, format, v14, 0xCu);
    v9 = 1;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v15, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);

    v10 = 0;
  }
  else
  {

    v10 = 0;
    v9 = 1;
  }
  return v10 | (v9 << 8);
}

BOOL _s13HomeDataModel24StaticClusterPowerSourceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  int v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  char v10;
  int v11;
  char v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_23E557AE0[*(char *)(a1 + 10)] != dword_23E557AE0[*(char *)(a2 + 10)])
      return 0;
    result = 0;
    if (*(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11)
      && *(unsigned __int8 *)(a1 + 12) == *(unsigned __int8 *)(a2 + 12)
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
    {
      v4 = *(unsigned __int8 *)(a1 + 20);
      v5 = *(unsigned __int8 *)(a1 + 21);
      v6 = *(_BYTE *)(a1 + 22);
      v7 = *(_DWORD *)(a1 + 24);
      v8 = *(_BYTE *)(a1 + 28);
      v9 = *(unsigned __int8 *)(a1 + 29);
      v10 = *(_BYTE *)(a1 + 30);
      v11 = *(unsigned __int8 *)(a1 + 31);
      v12 = *(_BYTE *)(a1 + 32);
      v13 = *(unsigned __int8 *)(a2 + 20);
      if (v4 == 2)
      {
        if (v13 != 2)
          return 0;
        goto LABEL_12;
      }
      result = 0;
      if (v13 != 2 && ((((v4 & 1) == 0) ^ v13) & 1) != 0)
      {
LABEL_12:
        if ((v6 & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 22))
            return 0;
        }
        else
        {
          if (v5 == *(unsigned __int8 *)(a2 + 21))
            v14 = *(_BYTE *)(a2 + 22);
          else
            v14 = 1;
          if ((v14 & 1) != 0)
            return 0;
        }
        if ((v8 & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 28))
            return 0;
        }
        else
        {
          if (v7 == *(_DWORD *)(a2 + 24))
            v15 = *(_BYTE *)(a2 + 28);
          else
            v15 = 1;
          if ((v15 & 1) != 0)
            return 0;
        }
        if ((v10 & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 30))
            return 0;
        }
        else
        {
          if (v9 == *(unsigned __int8 *)(a2 + 29))
            v16 = *(_BYTE *)(a2 + 30);
          else
            v16 = 1;
          if ((v16 & 1) != 0)
            return 0;
        }
        if ((v12 & 1) == 0)
        {
          if (v11 == *(unsigned __int8 *)(a2 + 31))
            v17 = *(_BYTE *)(a2 + 32);
          else
            v17 = 1;
          return (v17 & 1) == 0;
        }
        return (*(_BYTE *)(a2 + 32) & 1) != 0;
      }
    }
  }
  return result;
}

unint64_t sub_23E4B37C4()
{
  unint64_t result;

  result = qword_256D48A38;
  if (!qword_256D48A38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557A8C, &type metadata for StaticClusterPowerSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48A38);
  }
  return result;
}

unint64_t sub_23E4B380C()
{
  unint64_t result;

  result = qword_256D48A88;
  if (!qword_256D48A88)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticClusterPowerSource, &type metadata for StaticClusterPowerSource);
    atomic_store(result, (unint64_t *)&qword_256D48A88);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticClusterPowerSource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticClusterPowerSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 20) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticClusterPowerSource()
{
  return &type metadata for StaticClusterPowerSource;
}

uint64_t getEnumTagSinglePayload for StaticClusterPowerSource.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticClusterPowerSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23E4B39E4 + 4 * byte_23E55788E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23E4B3A18 + 4 * byte_23E557889[v4]))();
}

uint64_t sub_23E4B3A18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B3A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4B3A28);
  return result;
}

uint64_t sub_23E4B3A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4B3A3CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23E4B3A40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4B3A48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticClusterPowerSource.CodingKeys()
{
  return &type metadata for StaticClusterPowerSource.CodingKeys;
}

unint64_t sub_23E4B3A68()
{
  unint64_t result;

  result = qword_256D48A90;
  if (!qword_256D48A90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E557A64, &type metadata for StaticClusterPowerSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48A90);
  }
  return result;
}

unint64_t sub_23E4B3AB0()
{
  unint64_t result;

  result = qword_256D48A98;
  if (!qword_256D48A98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5579D4, &type metadata for StaticClusterPowerSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48A98);
  }
  return result;
}

unint64_t sub_23E4B3AF8()
{
  unint64_t result;

  result = qword_256D48AA0[0];
  if (!qword_256D48AA0[0])
  {
    result = MEMORY[0x24264FDE4](&unk_23E5579FC, &type metadata for StaticClusterPowerSource.CodingKeys);
    atomic_store(result, qword_256D48AA0);
  }
  return result;
}

uint64_t sub_23E4B3B3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726564726FLL && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56AF80 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F436465726977 && a2 == 0xEE0064657463656ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56AFA0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E56AFC0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56AFE0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56B000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void ActionService.actionCharaceristicDescription.getter()
{
  uint64_t v0;

  switch(*(_BYTE *)(v0 + *(int *)(type metadata accessor for ActionService() + 44)))
  {
    case 3:
      ActionService.airPurifierString.getter();
      break;
    case 0xE:
    case 0x33:
    case 0x34:
      ActionService.motorizedDoorOrWindowString.getter();
      break;
    case 0x10:
      ActionService.fanString.getter();
      break;
    case 0x11:
      ActionService.faucetString.getter();
      break;
    case 0x13:
      ActionService.doorStateString.getter();
      break;
    case 0x14:
      ActionService.heaterCoolerString.getter();
      break;
    case 0x15:
      ActionService.humidifierDehumidifierString.getter();
      break;
    case 0x18:
      ActionService.irrigationSystemString.getter();
      break;
    case 0x1C:
      ActionService.lightBulbString.getter();
      break;
    case 0x1E:
      ActionService.lockStateString.getter();
      break;
    case 0x22:
    case 0x29:
      ActionService.switchString.getter();
      break;
    case 0x23:
      ActionService.securitySystemString.getter();
      break;
    case 0x2C:
      ActionService.televisionString.getter();
      break;
    case 0x2E:
      ActionService.thermostatString.getter();
      break;
    case 0x2F:
      ActionService.valveString.getter();
      break;
    case 0x30:
      ActionService.ventilationFan.getter();
      break;
    default:
      return;
  }
}

uint64_t ActionService.activeString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

void ActionService.doorStateString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v1 = -107;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value <= 1uLL)
    static String.hfLocalized(_:)();
}

uint64_t ActionService.fanString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v12 = v1;
  v11 = 105;
  v2 = sub_23E2B4680(&v11);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0 || (v12 = v1, v11 = 115, v4 = COERCE_DOUBLE(sub_23E2B51E4(&v11)), (v5 & 1) != 0) || v4 <= 0.0)
    {
      static String.hfLocalized(_:)();
      v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E2AAFC4();
      v6 = (void *)sub_23E537C34();
      v7 = (void *)sub_23E537C34();
      v8 = (void *)sub_23E537C34();
      v3 = sub_23E3F3440(v6);

    }
  }
  return v3;
}

uint64_t ActionService.faucetString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t ActionService.heaterCoolerString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v29;
  uint64_t v30;
  Swift::Int_optional v31;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v30 = v1;
  v29 = 3;
  v2 = sub_23E2B4680(&v29);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0)
    {
      static String.hfLocalized(_:)();
      return v4;
    }
    v30 = v1;
    v29 = -105;
    v31 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v29);
    if (v31.is_nil)
      return 0;
    if (v31.value == 2)
    {
      v30 = v1;
      v29 = 29;
      v19 = sub_23E2B51E4(&v29);
      if ((v20 & 1) != 0)
        return 0;
      v21 = *(double *)&v19;
    }
    else
    {
      if (v31.value != 1)
      {
        if (!v31.value)
        {
          v30 = v1;
          v29 = 55;
          v5 = sub_23E2B51E4(&v29);
          if ((v6 & 1) == 0)
          {
            v7 = *(double *)&v5;
            v30 = v1;
            v29 = 29;
            v8 = sub_23E2B51E4(&v29);
            if ((v9 & 1) == 0)
            {
              v10 = *(double *)&v8;
              static String.hfLocalized(_:)();
              __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
              v11 = swift_allocObject();
              *(_OWORD *)(v11 + 16) = xmmword_23E53B510;
              v12 = static ClimateSummarizer.temperatureAverageString(_:)(v7);
              v14 = v13;
              v15 = MEMORY[0x24BEE0D00];
              *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
              v16 = sub_23E2AEAC0();
              *(_QWORD *)(v11 + 64) = v16;
              *(_QWORD *)(v11 + 32) = v12;
              *(_QWORD *)(v11 + 40) = v14;
              v17 = static ClimateSummarizer.temperatureAverageString(_:)(v10);
              *(_QWORD *)(v11 + 96) = v15;
              *(_QWORD *)(v11 + 104) = v16;
              *(_QWORD *)(v11 + 72) = v17;
              *(_QWORD *)(v11 + 80) = v18;
LABEL_16:
              v3 = sub_23E537574();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v3;
            }
          }
        }
        return 0;
      }
      v30 = v1;
      v29 = 55;
      v22 = sub_23E2B51E4(&v29);
      if ((v23 & 1) != 0)
        return 0;
      v21 = *(double *)&v22;
    }
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23E539650;
    v25 = static ClimateSummarizer.temperatureAverageString(_:)(v21);
    v27 = v26;
    *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v24 + 64) = sub_23E2AEAC0();
    *(_QWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 40) = v27;
    goto LABEL_16;
  }
  return v3;
}

uint64_t ActionService.humidifierDehumidifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  Swift::Int value;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  Swift::Int_optional v37;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v36 = v1;
  v35 = 3;
  v2 = sub_23E2B4680(&v35);
  v3 = 0;
  if (v2 == 2)
    return v3;
  v4 = v2;
  v36 = v1;
  v35 = -102;
  v37 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v35);
  if (v37.is_nil)
    return 0;
  if ((v4 & 1) == 0)
  {
    static String.hfLocalized(_:)();
    return v5;
  }
  value = v37.value;
  static String.hfLocalized(_:)();
  v3 = v8;
  switch(value)
  {
    case 2:
      v36 = v1;
      v35 = 48;
      sub_23E2B51E4(&v35);
      if ((v26 & 1) != 0)
        return v3;
      goto LABEL_16;
    case 1:
      v36 = v1;
      v35 = 58;
      sub_23E2B51E4(&v35);
      if ((v27 & 1) != 0)
        return v3;
LABEL_16:
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_23E539650;
      sub_23E2AAFC4();
      v29 = (void *)sub_23E537C34();
      v30 = (void *)sub_23E537C34();
      v31 = (void *)sub_23E537C34();
      v32 = sub_23E3F3440(v29);
      v34 = v33;

      *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v28 + 64) = sub_23E2AEAC0();
      *(_QWORD *)(v28 + 32) = v32;
      *(_QWORD *)(v28 + 40) = v34;
      goto LABEL_17;
    case 0:
      v36 = v1;
      v35 = 58;
      sub_23E2B51E4(&v35);
      if ((v9 & 1) == 0)
      {
        v36 = v1;
        v35 = 48;
        sub_23E2B51E4(&v35);
        if ((v10 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_23E53B510;
          sub_23E2AAFC4();
          v12 = (void *)sub_23E537C34();
          v13 = (void *)sub_23E537C34();
          v14 = (void *)sub_23E537C34();
          v15 = sub_23E3F3440(v12);
          v17 = v16;

          v18 = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v11 + 56) = MEMORY[0x24BEE0D00];
          v19 = sub_23E2AEAC0();
          *(_QWORD *)(v11 + 64) = v19;
          *(_QWORD *)(v11 + 32) = v15;
          *(_QWORD *)(v11 + 40) = v17;
          v20 = (void *)sub_23E537C34();
          v21 = (void *)sub_23E537C34();
          v22 = (void *)sub_23E537C34();
          v23 = sub_23E3F3440(v20);
          v25 = v24;

          *(_QWORD *)(v11 + 96) = v18;
          *(_QWORD *)(v11 + 104) = v19;
          *(_QWORD *)(v11 + 72) = v23;
          *(_QWORD *)(v11 + 80) = v25;
LABEL_17:
          v3 = sub_23E537574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
  }
  return v3;
}

void ActionService.irrigationSystemString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned __int8 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = v1;
  v3 = 65;
  v2 = sub_23E2B4680(&v3);
  if (v2 != 2)
  {
    if ((v2 & 1) == 0)
    {
      v4 = v1;
      v3 = 3;
      if ((sub_23E2B4680(&v3) & 1) != 0)
      {
        v4 = v1;
        v3 = 106;
        StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
      }
    }
    static String.hfLocalized(_:)();
  }
}

uint64_t ActionService.lightBulbString.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v11;
  Swift::Int_optional v12;
  Swift::Int_optional v13;

  type metadata accessor for ActionService();
  v11 = 105;
  v0 = sub_23E2B4680(&v11);
  v1 = 0;
  if (v0 != 2)
  {
    if ((v0 & 1) != 0)
    {
      v11 = 12;
      v12 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v11);
      if (!v12.is_nil
        && v12.value >= 1
        && (StaticProfileBag.isNaturalLightSupported.getter() & 1) != 0
        && (StaticProfileBag.isNaturalLightEnabled.getter() & 1) != 0)
      {
        sub_23E2AAFC4();
        v3 = (void *)sub_23E537C40();
        v4 = (void *)sub_23E537C40();
        v5 = (void *)sub_23E537C40();
        v6 = sub_23E3F3440(v3);

        swift_bridgeObjectRetain();
        sub_23E537628();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        swift_bridgeObjectRetain();
        sub_23E537628();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      v11 = 12;
      v13 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v11);
      if (!v13.is_nil && v13.value >= 1)
      {
        sub_23E2AAFC4();
        v7 = (void *)sub_23E537C40();
        v8 = (void *)sub_23E537C40();
        v9 = (void *)sub_23E537C40();
        v1 = sub_23E3F3440(v7);

        return v1;
      }
    }
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

void ActionService.lockStateString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v1 = -100;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value <= 1uLL)
    static String.hfLocalized(_:)();
}

uint64_t ActionService.motorizedDoorOrWindowString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  Swift::Int_optional v13;

  v12 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v11 = -98;
  v13 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v11);
  v1 = 0;
  if (!v13.is_nil)
  {
    if (v13.value != 100 && v13.value)
    {
      sub_23E2AAFC4();
      v3 = (void *)sub_23E537C40();
      v4 = (void *)sub_23E537C40();
      v5 = (void *)sub_23E537C40();
      v6 = sub_23E3F3440(v3);
      v8 = v7;

      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_23E539650;
      *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 + 64) = sub_23E2AEAC0();
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v8;
      v1 = sub_23E537580();
      swift_bridgeObjectRelease();
    }
    else
    {
      static String.hfLocalized(_:)();
      return v2;
    }
  }
  return v1;
}

void ActionService.securitySystemString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v1 = -96;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil)
  {
    switch(v3.value)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

void ActionService.switchString.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v1 = 105;
  if (sub_23E2B4680(&v1) != 2)
    static String.hfLocalized(_:)();
}

uint64_t ActionService.airPurifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t ActionService.televisionString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int value;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  unsigned __int8 v32;
  uint64_t v33;
  Swift::Int_optional v34;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D441E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for ActionService();
  v6 = *((_QWORD *)v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v31 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v31 - v14;
  v16 = *(_QWORD *)(v0 + *(int *)(v13 + 60));
  v33 = v16;
  v32 = 3;
  v17 = sub_23E2B4680(&v32);
  v18 = 0;
  if (v17 != 2)
  {
    if ((v17 & 1) == 0)
      goto LABEL_14;
    v33 = v16;
    v32 = 4;
    v34 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v32);
    if (v34.is_nil)
      goto LABEL_14;
    v19 = *(_QWORD *)(v1 + v5[14]);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      value = v34.value;
      v22 = v19 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v23 = v19;
      v24 = *(_QWORD *)(v6 + 72);
      v31[1] = v23;
      swift_bridgeObjectRetain();
      do
      {
        sub_23E4B58B8(v22, (uint64_t)v12);
        v25 = &v12[v5[9]];
        if ((v25[8] & 1) == 0 && *(_QWORD *)v25 == value)
        {
          sub_23E35CEF8((uint64_t)v12, (uint64_t)v4);
          v26 = 0;
          goto LABEL_12;
        }
        sub_23E4B58FC((uint64_t)v12);
        v22 += v24;
        --v20;
      }
      while (v20);
      v26 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = 1;
    }
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v6 + 56))(v4, v26, 1, v5);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_23E4B5938((uint64_t)v4);
LABEL_14:
      static String.hfLocalized(_:)();
      return v27;
    }
    sub_23E35CEF8((uint64_t)v4, (uint64_t)v15);
    v18 = ActionService.configuredName.getter();
    v30 = v29;
    sub_23E35CEF8((uint64_t)v15, (uint64_t)v9);
    if (!v30)
    {
      v18 = *(_QWORD *)&v9[v5[5]];
      swift_bridgeObjectRetain();
    }
    sub_23E4B58FC((uint64_t)v9);
  }
  return v18;
}

uint64_t ActionService.thermostatString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int value;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v27;
  uint64_t v28;
  Swift::Int_optional v29;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v28 = v1;
  v27 = -104;
  v29 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v27);
  v2 = 0;
  if (!v29.is_nil)
  {
    value = v29.value;
    v28 = v1;
    v27 = -94;
    v4 = sub_23E2B51E4(&v27);
    if ((v5 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *(double *)&v4;
      switch(value)
      {
        case 0:
          static String.hfLocalized(_:)();
          return v7;
        case 1:
        case 2:
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_23E539650;
          v23 = static ClimateSummarizer.temperatureAverageString(_:)(v6);
          v25 = v24;
          *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v22 + 64) = sub_23E2AEAC0();
          *(_QWORD *)(v22 + 32) = v23;
          *(_QWORD *)(v22 + 40) = v25;
          goto LABEL_10;
        case 3:
          v28 = v1;
          v27 = 55;
          v8 = sub_23E2B51E4(&v27);
          if ((v9 & 1) != 0)
            return 0;
          v10 = *(double *)&v8;
          v28 = v1;
          v27 = 29;
          v11 = sub_23E2B51E4(&v27);
          if ((v12 & 1) != 0)
            return 0;
          v13 = *(double *)&v11;
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = xmmword_23E53B510;
          v15 = static ClimateSummarizer.temperatureAverageString(_:)(v10);
          v17 = v16;
          v18 = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE0D00];
          v19 = sub_23E2AEAC0();
          *(_QWORD *)(v14 + 64) = v19;
          *(_QWORD *)(v14 + 32) = v15;
          *(_QWORD *)(v14 + 40) = v17;
          v20 = static ClimateSummarizer.temperatureAverageString(_:)(v13);
          *(_QWORD *)(v14 + 96) = v18;
          *(_QWORD *)(v14 + 104) = v19;
          *(_QWORD *)(v14 + 72) = v20;
          *(_QWORD *)(v14 + 80) = v21;
LABEL_10:
          v2 = sub_23E537574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        default:
          return 0;
      }
    }
  }
  return v2;
}

uint64_t ActionService.valveString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t ActionService.ventilationFan.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v12 = v1;
  v11 = 3;
  v2 = sub_23E2B4680(&v11);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0 || (v12 = v1, v11 = 115, v4 = COERCE_DOUBLE(sub_23E2B51E4(&v11)), (v5 & 1) != 0) || v4 <= 0.0)
    {
      static String.hfLocalized(_:)();
      v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E2AAFC4();
      v6 = (void *)sub_23E537C34();
      v7 = (void *)sub_23E537C34();
      v8 = (void *)sub_23E537C34();
      v3 = sub_23E3F3440(v6);

    }
  }
  return v3;
}

uint64_t sub_23E4B58B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4B58FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4B5938(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D441E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4B5978()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_release();
}

_QWORD *sub_23E4B59C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_23E4B5A54(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E4B5B28(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_23E4B5BA4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_23E4B5C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = *(_QWORD *)(v3 + 48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)&v35 - v21, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    sub_23E1E7C64((uint64_t)&v38, &qword_256D40C68);
    goto LABEL_6;
  }
  sub_23E1E6C84(&v38, (uint64_t)v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    sub_23E1E7C64((uint64_t)&v35, &qword_256D40BF0);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
LABEL_6:
    v20(v17, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_23E1E6C84(&v38, (uint64_t)v41);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E1E6C84(&v35, (uint64_t)&v38);
        v28 = v42;
        v29 = v43;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        v30 = *((_QWORD *)&v39 + 1);
        v31 = v40;
        v32 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
        v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16))(v32, v30, v31, v28, v29);
        goto LABEL_9;
      }
      v37 = 0;
      v35 = 0u;
      v36 = 0u;
      sub_23E1E7C64((uint64_t)&v35, &qword_256D40C00);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    }
    else
    {
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
      sub_23E1E7C64((uint64_t)&v38, &qword_256D44460);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6B608]), sel_init);
  }
  sub_23E1E6C84(&v35, (uint64_t)&v38);
  v22 = v42;
  v23 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  v24 = *((_QWORD *)&v39 + 1);
  v25 = v40;
  v26 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
  v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 24))(v26, v24, v25, v22, v23);
LABEL_9:
  v33 = v27;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return (id)v33;
}

id sub_23E4B5F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = *(_QWORD *)(v3 + 48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)&v35 - v21, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    sub_23E1E7C64((uint64_t)&v38, &qword_256D40C68);
    goto LABEL_6;
  }
  sub_23E1E6C84(&v38, (uint64_t)v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    sub_23E1E7C64((uint64_t)&v35, &qword_256D40BF0);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
LABEL_6:
    v20(v17, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_23E1E6C84(&v38, (uint64_t)v41);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E1E6C84(&v35, (uint64_t)&v38);
        v28 = v42;
        v29 = v43;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        v30 = *((_QWORD *)&v39 + 1);
        v31 = v40;
        v32 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
        v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 32))(v32, v30, v31, v28, v29);
        goto LABEL_9;
      }
      v37 = 0;
      v35 = 0u;
      v36 = 0u;
      sub_23E1E7C64((uint64_t)&v35, &qword_256D40C00);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    }
    else
    {
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
      sub_23E1E7C64((uint64_t)&v38, &qword_256D44460);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6B608]), sel_init);
  }
  sub_23E1E6C84(&v35, (uint64_t)&v38);
  v22 = v42;
  v23 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  v24 = *((_QWORD *)&v39 + 1);
  v25 = v40;
  v26 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
  v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 40))(v26, v24, v25, v22, v23);
LABEL_9:
  v33 = v27;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return (id)v33;
}

id sub_23E4B6284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x24BDAC7A8](v10);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = *(_QWORD *)(v3 + 48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)&v35 - v21, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    sub_23E1E7C64((uint64_t)&v38, &qword_256D40C68);
    goto LABEL_6;
  }
  sub_23E1E6C84(&v38, (uint64_t)v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    sub_23E1E7C64((uint64_t)&v35, &qword_256D40BF0);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
LABEL_6:
    v20(v17, v18 + *(_QWORD *)(*(_QWORD *)v18 + 88), v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_23E1E6C84(&v38, (uint64_t)v41);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E1E6C84(&v35, (uint64_t)&v38);
        v28 = v42;
        v29 = v43;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        v30 = *((_QWORD *)&v39 + 1);
        v31 = v40;
        v32 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
        v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 24))(v32, v30, v31, v28, v29);
        goto LABEL_9;
      }
      v37 = 0;
      v35 = 0u;
      v36 = 0u;
      sub_23E1E7C64((uint64_t)&v35, &qword_256D40C00);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
    }
    else
    {
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
      sub_23E1E7C64((uint64_t)&v38, &qword_256D44460);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE6B608]), sel_init);
  }
  sub_23E1E6C84(&v35, (uint64_t)&v38);
  v22 = v42;
  v23 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  v24 = *((_QWORD *)&v39 + 1);
  v25 = v40;
  v26 = __swift_project_boxed_opaque_existential_1(&v38, *((uint64_t *)&v39 + 1));
  v27 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 32))(v26, v24, v25, v22, v23);
LABEL_9:
  v33 = v27;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return (id)v33;
}

uint64_t sub_23E4B65B8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagerWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagerWrapper);
}

HomeDataModel::DeviceDisplayNames __swiftcall DeviceDisplayNames.init(name:roomName:)(Swift::String name, Swift::String_optional roomName)
{
  Swift::String_optional *v2;
  HomeDataModel::DeviceDisplayNames result;

  v2->value = name;
  v2[1] = roomName;
  result.roomName = roomName;
  result.name = name;
  return result;
}

uint64_t DeviceDisplayNames.displayName.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  char v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *v0;
  v1 = v0[1];
  if (!v0[3])
    goto LABEL_11;
  v3 = sub_23E5375C8();
  v5 = v4;
  if (v3 == sub_23E5375C8() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v8 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    goto LABEL_11;
  sub_23E5375C8();
  sub_23E5375C8();
  sub_23E537628();
  v9 = sub_23E53767C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    result = sub_23E5375F8();
    if (!__OFADD__(result, 1))
    {
      v11 = sub_23E53761C();
      swift_bridgeObjectRetain();
      v12 = sub_23E4B6B4C(v11, v2, v1);
LABEL_16:
      v17 = v12;
      v18 = v13;
      v19 = v14;
      v20 = v15;
      swift_bridgeObjectRelease();
      v2 = MEMORY[0x24264E878](v17, v18, v19, v20);
      swift_bridgeObjectRelease();
      return v2;
    }
    __break(1u);
    goto LABEL_18;
  }
  sub_23E5375C8();
  sub_23E5375C8();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v16 = sub_23E537688();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRetain();
    return v2;
  }
  result = sub_23E5375F8();
  if (!__OFADD__(result, 1))
  {
    sub_23E53761C();
    swift_bridgeObjectRetain();
    v12 = sub_23E5376B8();
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t DeviceDisplayNames.displayRoomName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  char v10;
  char v12;
  char v13;

  if (!*(_QWORD *)(v0 + 24))
    return 0;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_23E5375C8();
  v4 = v3;
  if (v2 == sub_23E5375C8() && v4 == v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_23E538354();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      DeviceDisplayNames.displayName.getter();
      sub_23E5375C8();
      swift_bridgeObjectRelease();
      sub_23E5375C8();
      v8 = sub_23E53767C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
      {
        DeviceDisplayNames.displayName.getter();
        sub_23E5375C8();
        swift_bridgeObjectRelease();
        sub_23E5375C8();
        sub_23E537628();
        v9 = sub_23E53767C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v9 ^ 1;
      }
      else
      {
        v10 = 0;
      }
      DeviceDisplayNames.displayName.getter();
      sub_23E5375C8();
      swift_bridgeObjectRelease();
      sub_23E5375C8();
      v12 = sub_23E537688();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
        DeviceDisplayNames.displayName.getter();
        sub_23E5375C8();
        swift_bridgeObjectRelease();
        sub_23E5375C8();
        sub_23E537628();
        swift_bridgeObjectRelease();
        v13 = sub_23E537688();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!(v10 & 1 | ((v13 & 1) == 0)))
          return v1;
      }
      else if ((v10 & 1) == 0)
      {
        return v1;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23E4B6B4C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_23E5376B8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DeviceDisplayNames()
{
  return &type metadata for DeviceDisplayNames;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SpeakersAndTelevisionsCategoryInformation()
{
  uint64_t result;

  result = qword_256D48BA8;
  if (!qword_256D48BA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static SpeakersAndTelevisionsCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;

  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation(),
        sub_23E5225C0(*((_BYTE *)a1 + *(int *)(v4 + 20))),
        (v5 & 1) != 0))
  {
    return sub_23E335E88(*(uint64_t *)((char *)a1 + *(int *)(v4 + 24)), *(uint64_t *)((char *)a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

void SpeakersAndTelevisionsCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E4B6D20
     + 4
     * byte_23E557C70[*(unsigned __int8 *)(v1
                                         + *(int *)(type metadata accessor for SpeakersAndTelevisionsCategoryInformation()
                                                  + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E4B6D20()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  return swift_bridgeObjectRelease();
}

uint64_t SpeakersAndTelevisionsCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  SpeakersAndTelevisionsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

void sub_23E4B6E00()
{
  unint64_t v0;

  if (!SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0))
    static String.hfLocalized(_:)();
}

void SpeakersAndTelevisionsCategoryInformation.summary.getter()
{
  unint64_t v0;

  if (!SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0))
    static String.hfLocalized(_:)();
}

uint64_t sub_23E4B6E90()
{
  unint64_t v0;
  uint64_t result;

  result = SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0);
  if (result)
    return sub_23E538318();
  return result;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.shortSummary.getter()
{
  unint64_t v0;
  uint64_t result;

  result = SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0);
  if (result)
    return sub_23E538318();
  return result;
}

_QWORD *SpeakersAndTelevisionsCategoryInformation.statusItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v22;
  uint64_t v23;
  __int128 v24[2];
  _BYTE v25[40];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _UNKNOWN **v29;
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48B28);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48B30);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23E25C4C0(v6);
  type metadata accessor for StateSnapshot(0);
  v8 = swift_bridgeObjectRetain();
  v9 = sub_23E4FB740(v8);
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23E4FB764(v10);
  v26 = xmmword_23E53B510;
  sub_23E2BCB58(v9, v11, (uint64_t)v5);
  v12 = type metadata accessor for SpeakerStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D48B30);
    v27 = 0u;
    v28 = 0u;
    v29 = 0;
  }
  else
  {
    *((_QWORD *)&v28 + 1) = v12;
    v29 = &off_250EE40D0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SpeakerStatusItem);
  }
  sub_23E2BDB48(v7, (uint64_t)v2);
  v14 = type metadata accessor for TelevisionStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v2, 1, v14) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_256D48B28);
    v30 = 0u;
    v31 = 0u;
    v32 = 0;
  }
  else
  {
    *((_QWORD *)&v31 + 1) = v14;
    v32 = &off_250EE4100;
    v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    sub_23E1E2FDC((uint64_t)v2, (uint64_t)v15, type metadata accessor for TelevisionStatusItem);
  }
  sub_23E1E7C20((uint64_t)&v27, (uint64_t)v25, &qword_256D3FE40);
  sub_23E25CD18((uint64_t)v25, (uint64_t)&v22);
  if (v23)
  {
    sub_23E1E6C84(&v22, (uint64_t)v24);
    sub_23E1E6C84(v24, (uint64_t)&v22);
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23E51F32C(0, v16[2] + 1, 1, v16);
    v18 = v16[2];
    v17 = v16[3];
    if (v18 >= v17 >> 1)
      v16 = sub_23E51F32C((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
    v16[2] = v18 + 1;
    sub_23E1E6C84(&v22, (uint64_t)&v16[5 * v18 + 4]);
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v22, &qword_256D3FE40);
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23E1E7C20((uint64_t)&v30, (uint64_t)v25, &qword_256D3FE40);
  sub_23E25CD18((uint64_t)v25, (uint64_t)&v22);
  if (v23)
  {
    sub_23E1E6C84(&v22, (uint64_t)v24);
    sub_23E1E6C84(v24, (uint64_t)&v22);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23E51F32C(0, v16[2] + 1, 1, v16);
    v20 = v16[2];
    v19 = v16[3];
    if (v20 >= v19 >> 1)
      v16 = sub_23E51F32C((_QWORD *)(v19 > 1), v20 + 1, 1, v16);
    v16[2] = v20 + 1;
    sub_23E1E6C84(&v22, (uint64_t)&v16[5 * v20 + 4]);
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v22, &qword_256D3FE40);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  swift_arrayDestroy();
  return v16;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a3;
  v5 = type metadata accessor for StateSnapshot(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  v32 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v16, type metadata accessor for StateSnapshot);
  v16[*(int *)(v14 + 20)] = 3;
  v33 = a2;
  sub_23E1E7C20(a2, (uint64_t)v13, &qword_256D3FE48);
  v17 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v13, &qword_256D3FE48);
    sub_23E1E2F50(a1, (uint64_t)v10, type metadata accessor for StateSnapshot);
  }
  else
  {
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E4FBE2C(v18);
    sub_23E1E2FA0((uint64_t)v13, type metadata accessor for StaticRoom);
    sub_23E1E2F50(a1, (uint64_t)v10, type metadata accessor for StateSnapshot);
    if (v19)
      goto LABEL_5;
  }
  v20 = swift_bridgeObjectRetain();
  v19 = sub_23E4FBE2C(v20);
LABEL_5:
  sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StateSnapshot);
  v21 = sub_23E4B9044(v19);
  *(_QWORD *)&v16[*(int *)(v14 + 24)] = v21;
  swift_retain();
  v22 = swift_bridgeObjectRetain();
  v23 = *(_QWORD *)(sub_23E4FB740(v22) + 16);
  swift_bridgeObjectRelease();
  sub_23E1E2F50(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
  if (v23)
  {
    sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StateSnapshot);
    v24 = v33;
    v25 = v34;
    v26 = v32;
LABEL_8:
    swift_release();
    sub_23E1E7C64(v24, &qword_256D3FE48);
    sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
    goto LABEL_9;
  }
  v27 = swift_bridgeObjectRetain();
  v28 = *(_QWORD *)(sub_23E4FB764(v27) + 16);
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StateSnapshot);
  v24 = v33;
  v25 = v34;
  v26 = v32;
  if (v28)
    goto LABEL_8;
  v31 = *(_QWORD *)(v21 + 16);
  swift_release();
  sub_23E1E7C64(v24, &qword_256D3FE48);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  if (!v31)
  {
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SpeakersAndTelevisionsCategoryInformation);
    v29 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, v29, 1, v14);
  }
LABEL_9:
  sub_23E1E2FDC((uint64_t)v16, v25, (uint64_t (*)(_QWORD))type metadata accessor for SpeakersAndTelevisionsCategoryInformation);
  v29 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, v29, 1, v14);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E4B7668()
{
  __int128 v1[4];

  sub_23E53845C();
  SpeakersAndTelevisionsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E4B76A8()
{
  __int128 v1[4];

  sub_23E53845C();
  SpeakersAndTelevisionsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

BOOL sub_23E4B76E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[2];
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v3 = type metadata accessor for StaticService();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - v6;
  v8 = type metadata accessor for StaticAccessory(0);
  v9 = *(unsigned __int16 *)(a1 + *(int *)(v8 + 88));
  if ((~v9 & 0xFEFC) != 0)
    return v9 != 32771;
  v10 = *(_QWORD *)(a1 + *(int *)(v8 + 80));
  MEMORY[0x24BDAC7A8](v8);
  v13[-2] = a1;
  swift_bridgeObjectRetain();
  v11 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)&v13[-4], v10);
  v13[1] = v1;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v15 = v11;
    v17 = *(_QWORD *)(v4 + 72);
    v16 = v3;
    sub_23E1E2F50(v11 + v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v18 = v7[*(int *)(v3 + 84)];
    ServiceKind.umbrellaCategory.getter(&v19);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23E4B79A8()
{
  JUMPOUT(0x23E4B79B0);
}

void sub_23E4B7A40()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  char v4;

  v4 = sub_23E538354();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v2, v1);
  if ((v4 & 1) == 0)
  {
    if (!__OFADD__(v0, 1))
    {
      if (v0 + 1 == v3)
        JUMPOUT(0x23E4B79ACLL);
      JUMPOUT(0x23E4B79ECLL);
    }
    __break(1u);
    JUMPOUT(0x23E4B7B2CLL);
  }
  sub_23E4B79A8();
}

void sub_23E4B7AF4()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v1, v0);
  JUMPOUT(0x23E4B79ACLL);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  int v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  void *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int64_t v78;
  unint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int *v91;
  void *v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t result;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  int64_t v119;
  unint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v132 = (uint64_t)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for StaticService();
  v133 = *(_QWORD *)(v136 - 8);
  v4 = MEMORY[0x24BDAC7A8](v136);
  v128 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v124 = (char *)&v110 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v123 = (uint64_t)&v110 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v121 = (uint64_t)&v110 - v10;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  v134 = v11;
  v135 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v122 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v126 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for StaticAccessory(0);
  v115 = *(_QWORD *)(v125 - 8);
  v16 = MEMORY[0x24BDAC7A8](v125);
  v127 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v114 = (uint64_t)&v110 - v18;
  v19 = type metadata accessor for StaticMediaSystem();
  v129 = *(_QWORD *)(v19 - 8);
  v130 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v120 = (unint64_t)&v110 - v23;
  v131 = type metadata accessor for StaticMediaProfile();
  v24 = *(_QWORD *)(v131 - 8);
  v25 = MEMORY[0x24BDAC7A8](v131);
  v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v110 - v28;
  v116 = type metadata accessor for StateSnapshot(0);
  v117 = a1;
  v30 = swift_bridgeObjectRetain();
  v31 = sub_23E4FB740(v30);
  v32 = *(_QWORD *)(v31 + 56);
  v118 = v31 + 56;
  v33 = 1 << *(_BYTE *)(v31 + 32);
  v34 = -1;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  v35 = v34 & v32;
  v119 = (unint64_t)(v33 + 63) >> 6;
  v36 = v31;
  swift_bridgeObjectRetain();
  v37 = 0;
  v38 = 0;
  do
  {
    while (1)
    {
      if (v35)
      {
        v39 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        v40 = v39 | (v38 << 6);
      }
      else
      {
        v41 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
          goto LABEL_108;
        }
        if (v41 >= v119)
          goto LABEL_29;
        v42 = *(_QWORD *)(v118 + 8 * v41);
        ++v38;
        if (!v42)
        {
          v38 = v41 + 1;
          if (v41 + 1 >= v119)
            goto LABEL_29;
          v42 = *(_QWORD *)(v118 + 8 * v38);
          if (!v42)
          {
            v38 = v41 + 2;
            if (v41 + 2 >= v119)
              goto LABEL_29;
            v42 = *(_QWORD *)(v118 + 8 * v38);
            if (!v42)
            {
              v38 = v41 + 3;
              if (v41 + 3 >= v119)
                goto LABEL_29;
              v42 = *(_QWORD *)(v118 + 8 * v38);
              if (!v42)
              {
                v38 = v41 + 4;
                if (v41 + 4 >= v119)
                  goto LABEL_29;
                v42 = *(_QWORD *)(v118 + 8 * v38);
                if (!v42)
                {
                  v43 = v41 + 5;
                  if (v43 >= v119)
                    goto LABEL_29;
                  v42 = *(_QWORD *)(v118 + 8 * v43);
                  if (!v42)
                  {
                    while (1)
                    {
                      v38 = v43 + 1;
                      if (__OFADD__(v43, 1))
                        break;
                      if (v38 >= v119)
                        goto LABEL_29;
                      v42 = *(_QWORD *)(v118 + 8 * v38);
                      ++v43;
                      if (v42)
                        goto LABEL_24;
                    }
LABEL_109:
                    __break(1u);
                    goto LABEL_110;
                  }
                  v38 = v43;
                }
              }
            }
          }
        }
LABEL_24:
        v35 = (v42 - 1) & v42;
        v40 = __clz(__rbit64(v42)) + (v38 << 6);
      }
      sub_23E1E2F50(*(_QWORD *)(v36 + 48) + *(_QWORD *)(v24 + 72) * v40, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      sub_23E1E2FDC((uint64_t)v29, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      v44 = v27[*(int *)(v131 + 76)];
      if (v44 != 6)
        break;
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    }
    v45 = v44 == 1;
    sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v46 = __OFADD__(v37, v45);
    v37 += v45;
  }
  while (!v46);
  __break(1u);
LABEL_29:
  swift_release();
  swift_bridgeObjectRelease();
  v47 = swift_bridgeObjectRetain();
  v48 = sub_23E4FB764(v47);
  v49 = v48;
  v50 = v48 + 56;
  v51 = 1 << *(_BYTE *)(v48 + 32);
  v52 = -1;
  if (v51 < 64)
    v52 = ~(-1 << v51);
  v53 = v52 & *(_QWORD *)(v48 + 56);
  v54 = (unint64_t)(v51 + 63) >> 6;
  swift_bridgeObjectRetain();
  v55 = 0;
  v56 = 0;
  do
  {
    while (1)
    {
      if (v53)
      {
        v57 = __clz(__rbit64(v53));
        v53 &= v53 - 1;
        v58 = v57 | (v56 << 6);
      }
      else
      {
        v59 = v56 + 1;
        if (__OFADD__(v56, 1))
          goto LABEL_105;
        if (v59 >= v54)
          goto LABEL_57;
        v60 = *(_QWORD *)(v50 + 8 * v59);
        ++v56;
        if (!v60)
        {
          v56 = v59 + 1;
          if (v59 + 1 >= v54)
            goto LABEL_57;
          v60 = *(_QWORD *)(v50 + 8 * v56);
          if (!v60)
          {
            v56 = v59 + 2;
            if (v59 + 2 >= v54)
              goto LABEL_57;
            v60 = *(_QWORD *)(v50 + 8 * v56);
            if (!v60)
            {
              v56 = v59 + 3;
              if (v59 + 3 >= v54)
                goto LABEL_57;
              v60 = *(_QWORD *)(v50 + 8 * v56);
              if (!v60)
              {
                v56 = v59 + 4;
                if (v59 + 4 >= v54)
                  goto LABEL_57;
                v60 = *(_QWORD *)(v50 + 8 * v56);
                if (!v60)
                {
                  v61 = v59 + 5;
                  if (v61 >= v54)
                    goto LABEL_57;
                  v60 = *(_QWORD *)(v50 + 8 * v61);
                  if (!v60)
                  {
                    while (1)
                    {
                      v56 = v61 + 1;
                      if (__OFADD__(v61, 1))
                        break;
                      if (v56 >= v54)
                        goto LABEL_57;
                      v60 = *(_QWORD *)(v50 + 8 * v56);
                      ++v61;
                      if (v60)
                        goto LABEL_52;
                    }
LABEL_110:
                    __break(1u);
                    goto LABEL_111;
                  }
                  v56 = v61;
                }
              }
            }
          }
        }
LABEL_52:
        v53 = (v60 - 1) & v60;
        v58 = __clz(__rbit64(v60)) + (v56 << 6);
      }
      v62 = v120;
      sub_23E1E2F50(*(_QWORD *)(v49 + 48) + *(_QWORD *)(v129 + 72) * v58, v120, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      sub_23E1E2FDC(v62, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      v63 = v22[*(int *)(v130 + 60)];
      if (v63 != 6)
        break;
      sub_23E1E2FA0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    }
    v64 = v63 == 1;
    sub_23E1E2FA0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v46 = __OFADD__(v55, v64);
    v55 += v64;
  }
  while (!v46);
  __break(1u);
LABEL_57:
  swift_release();
  swift_bridgeObjectRelease();
  if (__OFADD__(v37, v55))
    goto LABEL_107;
  v111 = v37 + v55;
  v65 = swift_bridgeObjectRetain();
  v66 = sub_23E4FBE2C(v65);
  v67 = *(_QWORD *)(v66 + 56);
  v112 = v66 + 56;
  v68 = 1 << *(_BYTE *)(v66 + 32);
  v69 = -1;
  if (v68 < 64)
    v69 = ~(-1 << v68);
  v120 = v69 & v67;
  v113 = (unint64_t)(v68 + 63) >> 6;
  v116 = v66;
  swift_bridgeObjectRetain();
  v70 = 0;
  v71 = 0;
  v72 = &unk_250EDFEC0;
  v73 = &dword_23E4B8E9C;
  v74 = (uint64_t)v124;
  v75 = v134;
  while (1)
  {
    v119 = v70;
    if (v120)
    {
      v76 = __clz(__rbit64(v120));
      v120 &= v120 - 1;
      v118 = v71;
      v77 = v76 | (v71 << 6);
      goto LABEL_82;
    }
    v78 = v71 + 1;
    if (__OFADD__(v71, 1))
      goto LABEL_106;
    if (v78 >= v113)
      break;
    v79 = *(_QWORD *)(v112 + 8 * v78);
    v80 = v71 + 1;
    if (!v79)
    {
      v80 = v71 + 2;
      if (v71 + 2 >= v113)
        break;
      v79 = *(_QWORD *)(v112 + 8 * v80);
      if (!v79)
      {
        v80 = v71 + 3;
        if (v71 + 3 >= v113)
          break;
        v79 = *(_QWORD *)(v112 + 8 * v80);
        if (!v79)
        {
          v80 = v71 + 4;
          if (v71 + 4 >= v113)
            break;
          v79 = *(_QWORD *)(v112 + 8 * v80);
          if (!v79)
          {
            v80 = v71 + 5;
            if (v71 + 5 >= v113)
              break;
            v79 = *(_QWORD *)(v112 + 8 * v80);
            if (!v79)
            {
              v81 = v71 + 6;
              if (v71 + 6 >= v113)
                break;
              v79 = *(_QWORD *)(v112 + 8 * v81);
              if (!v79)
              {
                while (1)
                {
                  v80 = v81 + 1;
                  if (__OFADD__(v81, 1))
                    break;
                  if (v80 >= v113)
                    goto LABEL_102;
                  v79 = *(_QWORD *)(v112 + 8 * v80);
                  ++v81;
                  if (v79)
                    goto LABEL_81;
                }
LABEL_111:
                __break(1u);
                JUMPOUT(0x23E4B8E9CLL);
              }
              v80 = v71 + 6;
            }
          }
        }
      }
    }
LABEL_81:
    v120 = (v79 - 1) & v79;
    v118 = v80;
    v77 = __clz(__rbit64(v79)) + (v80 << 6);
LABEL_82:
    v82 = v114;
    sub_23E1E2F50(*(_QWORD *)(v116 + 48) + *(_QWORD *)(v115 + 72) * v77, v114, type metadata accessor for StaticAccessory);
    v83 = v82;
    v84 = v127;
    sub_23E1E2FDC(v83, v127, type metadata accessor for StaticAccessory);
    v85 = *(_QWORD *)(v84 + *(int *)(v125 + 80));
    v86 = *(_QWORD *)(v85 + 16);
    if (v86)
    {
      v87 = v135;
      v88 = v85 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
      v117 = v85;
      swift_bridgeObjectRetain();
      v89 = *(_QWORD *)(v87 + 16);
      v130 = *(_QWORD *)(v87 + 72);
      v131 = v89;
      v90 = MEMORY[0x24BEE4AF8];
      do
      {
        v91 = v73;
        v92 = v72;
        v93 = v90;
        v94 = v126;
        ((void (*)(char *, unint64_t, uint64_t))v131)(v126, v88, v75);
        v95 = v135;
        v129 = *(_QWORD *)(v135 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v129)(v94, 0, 1, v75);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v94, 1, v75) == 1)
        {
          v90 = v93;
          v72 = v92;
          v73 = v91;
          goto LABEL_100;
        }
        v96 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
        v97 = (uint64_t)v122;
        v96(v122, v94, v75);
        v98 = *(_QWORD *)(v127 + *(int *)(v125 + 76));
        if (*(_QWORD *)(v98 + 16) && (v99 = sub_23E1E3300(v97), (v100 & 1) != 0))
        {
          sub_23E1E2F50(*(_QWORD *)(v98 + 56) + *(_QWORD *)(v133 + 72) * v99, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v101 = 0;
        }
        else
        {
          v101 = 1;
        }
        v102 = v132;
        v103 = v133;
        v104 = v136;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56))(v132, v101, 1, v136);
        (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v97, v134);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v102, 1, v104) == 1)
        {
          sub_23E1E7C64(v102, &qword_254332DE8);
          v74 = (uint64_t)v124;
          v90 = v93;
          v72 = v92;
          v73 = v91;
        }
        else
        {
          v105 = v121;
          sub_23E1E2FDC(v102, v121, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FDC(v105, v123, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v90 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v90 = sub_23E1E3348(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
          v72 = v92;
          v107 = *(_QWORD *)(v90 + 16);
          v106 = *(_QWORD *)(v90 + 24);
          v73 = v91;
          if (v107 >= v106 >> 1)
            v90 = sub_23E1E3348(v106 > 1, v107 + 1, 1, v90);
          *(_QWORD *)(v90 + 16) = v107 + 1;
          sub_23E1E2FDC(v123, v90+ ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80))+ *(_QWORD *)(v133 + 72) * v107, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v74 = (uint64_t)v124;
        }
        v88 += v130;
        --v86;
        v75 = v134;
      }
      while (v86);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v129)(v126, 1, 1, v134);
    }
    else
    {
      swift_bridgeObjectRetain();
      v90 = MEMORY[0x24BEE4AF8];
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v135 + 56))(v126, 1, 1, v75);
    }
LABEL_100:
    swift_bridgeObjectRelease();
    v131 = *(_QWORD *)(v90 + 16);
    if (v131)
    {
      v108 = v133;
      v130 = v90 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
      v117 = v90;
      swift_bridgeObjectRetain();
      v129 = *(_QWORD *)(v108 + 72);
      sub_23E1E2F50(v130, v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v127, type metadata accessor for StaticAccessory);
    v71 = v118;
    v70 = v119;
  }
LABEL_102:
  swift_release();
  swift_bridgeObjectRelease();
  result = v111 + v70;
  if (__OFADD__(v111, v70))
  {
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  return result;
}

uint64_t sub_23E4B9044(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23E4B91A0((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_23E4B91A0((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_23E4B91A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v23 = a2;
  v24 = a1;
  v5 = type metadata accessor for StaticAccessory(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 56);
  v25 = 0;
  v26 = a3 + 56;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * v16, (uint64_t)v9, type metadata accessor for StaticAccessory);
    v20 = sub_23E4B76E0((uint64_t)v9);
    result = sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v3)
      return result;
    if (v20)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v25++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v27)
  {
LABEL_27:
    v21 = v23;
    v22 = v25;
    swift_retain();
    return sub_23E52515C(v24, v21, v22, a3);
  }
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      goto LABEL_27;
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E4B93E0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E4B9450(&qword_256D48B38, (uint64_t)&protocol conformance descriptor for SpeakersAndTelevisionsCategoryInformation);
  result = sub_23E4B9450(&qword_256D48B40, (uint64_t)&protocol conformance descriptor for SpeakersAndTelevisionsCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E4B942C()
{
  return sub_23E4B9450(&qword_256D48B48, (uint64_t)&protocol conformance descriptor for SpeakersAndTelevisionsCategoryInformation);
}

uint64_t sub_23E4B9450(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpeakersAndTelevisionsCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4B949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeakersAndTelevisionsCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4B9524(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E4B959C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CoordinationSnapshot.staticCoordinationDataDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoordinationSnapshot.multipleUpdatesNeeded(for:)(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void **p_vtable;
  unint64_t v13;
  id v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t j;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void **v43;
  void *v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  _QWORD v63[5];
  id v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;

  v3 = *v1;
  if (!*(_QWORD *)(v3 + 16))
    return 2;
  v4 = (id)a1;
  v5 = sub_23E1E3300(a1);
  if ((v6 & 1) == 0)
    return 2;
  v7 = *(_QWORD *)(v3 + 56) + 32 * v5;
  v8 = *(id *)(v7 + 16);
  if (v8 != (id)4)
  {
    sub_23E223038(*(id *)(v7 + 16));
    v28 = (uint64_t)v8;
LABEL_28:
    sub_23E223048((id)v28);
    v29 = 4;
LABEL_30:
    sub_23E223048((id)v29);
    return 2;
  }
  v9 = *(_QWORD *)v7;
  v10 = *(_QWORD *)(v7 + 8);
  v11 = *(void **)(v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E223038((id)4);
  sub_23E223038(v11);
  sub_23E223048((id)4);
  sub_23E223048((id)4);
  if (v11 != (void *)4)
  {
    sub_23E223038(v11);
    sub_23E223048(v11);
    sub_23E223048((id)4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E223048((id)4);
    v29 = (uint64_t)v11;
    goto LABEL_30;
  }
  sub_23E223048((id)4);
  sub_23E223048((id)4);
  if (qword_2543327B8 != -1)
    swift_once();
  p_vtable = _TtC13HomeDataModel21CoordinationDataModel.vtable;
  v13 = sub_23E367DC0((uint64_t)v4);
  if (!(v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
    goto LABEL_36;
  }
  if (!sub_23E53803C())
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = 4;
    goto LABEL_28;
  }
LABEL_9:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)MEMORY[0x24264F148](0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v14 = *(id *)(v13 + 32);
  }
  v8 = v14;
  swift_bridgeObjectRelease();
  v15 = (void **)(qword_254332710 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v16 = *v15;
  if (!*v15)
  {
    v33 = 0;
    goto LABEL_57;
  }
  v64 = v4;
  v66 = v10;
  v67 = v9;
  v17 = objc_msgSend(v16, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v10 = sub_23E5377F0();

  v2 = MEMORY[0x24BEE4AF8];
  v68 = MEMORY[0x24BEE4AF8];
  if (v10 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    v18 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v18)
      goto LABEL_15;
LABEL_40:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x24BEE4AF8];
    goto LABEL_41;
  }
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v18)
    goto LABEL_40;
LABEL_15:
  v65 = v8;
  if (v18 < 1)
    goto LABEL_85;
  for (i = 0; i != v18; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x24264F148](i, v10);
    else
      v20 = *(id *)(v10 + 8 * i + 32);
    v21 = v20;
    v22 = objc_msgSend(v20, sel_category);
    v23 = objc_msgSend(v22, sel_categoryType);

    v24 = sub_23E53755C();
    v26 = v25;

    if (v24 == 0xD000000000000024 && v26 == 0x800000023E56B220)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      sub_23E537F28();
      continue;
    }
    v27 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
      goto LABEL_18;

  }
  swift_bridgeObjectRelease();
  v32 = v68;
  v8 = v65;
  p_vtable = (void **)(_TtC13HomeDataModel21CoordinationDataModel + 24);
  v2 = MEMORY[0x24BEE4AF8];
LABEL_41:
  v68 = v2;
  if ((v32 & 0x8000000000000000) != 0 || (v32 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v34 = sub_23E53803C();
    swift_release();
    if (!v34)
      goto LABEL_56;
LABEL_44:
    if (v34 >= 1)
    {
      for (j = 0; j != v34; ++j)
      {
        if ((v32 & 0xC000000000000001) != 0)
          v36 = (id)MEMORY[0x24264F148](j, v32);
        else
          v36 = *(id *)(v32 + 8 * j + 32);
        v37 = v36;
        v38 = objc_msgSend(v36, sel_softwareVersion);
        if (v38 && (v39 = v38, v40 = (uint64_t)objc_msgSend(v38, sel_majorVersion), v39, v40 < 18))
        {
          sub_23E537F1C();
          sub_23E537F4C();
          sub_23E537F58();
          sub_23E537F28();
        }
        else
        {

        }
      }
      swift_release();
      v33 = v68;
      v10 = v66;
      v9 = v67;
      v4 = v64;
      p_vtable = (void **)(_TtC13HomeDataModel21CoordinationDataModel + 24);
      goto LABEL_57;
    }
    goto LABEL_86;
  }
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
    goto LABEL_44;
LABEL_56:
  swift_release();
  v33 = MEMORY[0x24BEE4AF8];
  v10 = v66;
  v9 = v67;
  v4 = v64;
LABEL_57:
  v41 = objc_msgSend(v8, sel_siriEndpointProfile);

  if (v41)
  {
    if (v33)
    {
      if (!(v33 >> 62))
      {
        v42 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_61;
      }
LABEL_87:
      swift_bridgeObjectRetain();
      v42 = sub_23E53803C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_61:
      sub_23E223048((id)4);
      sub_23E223048((id)4);
      swift_bridgeObjectRelease();
      return v42 > 1;
    }
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_79:
    sub_23E223048((id)4);
    sub_23E223048((id)4);
    return 0;
  }
  swift_bridgeObjectRelease();
  v43 = (void **)((char *)p_vtable[226] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v44 = *v43;
  if (!*v43)
    goto LABEL_78;
  v65 = v8;
  v45 = objc_msgSend(v44, sel_mediaSystems);
  sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
  v46 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v47);
  v63[2] = v4;
  v48 = sub_23E206BB0(sub_23E2098DC, (uint64_t)v63, v46);
  swift_bridgeObjectRelease();
  if (!v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_79;
  }
  v66 = v10;
  v67 = v9;
  v64 = v48;
  v49 = objc_msgSend(v64, sel_components);
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FCD0);
  v50 = sub_23E5377F0();

  v51 = v65;
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    v52 = sub_23E53803C();
    if (v52)
      goto LABEL_67;
  }
  else
  {
    v52 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v52)
    {
LABEL_67:
      v8 = (id)(v50 & 0xC000000000000001);
      v53 = 4;
      while (1)
      {
        v54 = v8 ? (id)MEMORY[0x24264F148](v53 - 4, v50) : *(id *)(v50 + 8 * v53);
        v55 = v54;
        v56 = v53 - 3;
        if (__OFADD__(v53 - 4, 1))
          break;
        v57 = objc_msgSend(v54, sel_mediaProfile);
        if (!v57
          || (v58 = v57,
              v59 = objc_msgSend(v57, sel_accessory),
              v58,
              !v59)
          || (v60 = objc_msgSend(v59, sel_softwareVersion), v59, !v60))
        {
          swift_bridgeObjectRelease();

          v30 = 0;
          goto LABEL_91;
        }
        v61 = (uint64_t)objc_msgSend(v60, sel_majorVersion);

        if (v61 >= 18)
        {

          swift_bridgeObjectRelease();
          v30 = 0;
          goto LABEL_91;
        }
        ++v53;
        if (v56 == v52)
        {

          goto LABEL_90;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
  }

LABEL_90:
  swift_bridgeObjectRelease();
  v30 = 1;
LABEL_91:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v62 = v64;

  sub_23E223048((id)4);
  sub_23E223048((id)4);
  swift_bridgeObjectRelease();

  return v30;
}

uint64_t static CoordinationSnapshot.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23E2AEE7C(*a1, *a2);
}

uint64_t CoordinationSnapshot.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23E237750(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t CoordinationSnapshot.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237750((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4B9F80(uint64_t *a1, uint64_t *a2)
{
  return sub_23E2AEE7C(*a1, *a2);
}

uint64_t sub_23E4B9F8C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237750((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4B9FE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23E237750(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4BA018()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237750((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void CoordinationSnapshot.UpdateType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v1);
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  sub_23E282E54(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23E4BA130 + 4 * byte_23E557DA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BA130()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 64) = 0x3A726F4661746164;
  *(_QWORD *)(v2 - 56) = 0xE900000000000020;
  MEMORY[0x24264EA94](v3, v0);
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(_QWORD *)(v2 - 64);
}

void _s13HomeDataModel20CoordinationSnapshotV10UpdateTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD v23[7];
  uint64_t v24;

  v24 = a2;
  v3 = sub_23E536F80();
  v23[5] = *(_QWORD *)(v3 - 8);
  v23[6] = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v23[4] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v23[3] = (char *)v23 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v23[2] = (char *)v23 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v23[1] = (char *)v23 - v10;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  v12 = MEMORY[0x24BDAC7A8](updated);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48BF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v23 + *(int *)(v19 + 48) - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E282E54(a1, (uint64_t)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E282E54(v24, (uint64_t)v21);
  v22 = (char *)sub_23E4BA684 + 4 * byte_23E557DA8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BA684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;

  sub_23E282E54(v0, (uint64_t)v2);
  v3 = *v2;
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_23E4BB538(v0);
    v4 = 0;
  }
  else
  {
    v4 = sub_23E1F3D38(v3, *v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E282E98(v0);
  }
  return v4 & 1;
}

unint64_t sub_23E4BAB24()
{
  unint64_t result;

  result = qword_256D48BE8;
  if (!qword_256D48BE8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CoordinationSnapshot, &type metadata for CoordinationSnapshot);
    atomic_store(result, (unint64_t *)&qword_256D48BE8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoordinationSnapshot.UpdateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        v9 = sub_23E536F80();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        v11 = sub_23E536F80();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for CoordinationSnapshot.UpdateType(uint64_t a1)
{
  uint64_t result;
  uint64_t *v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  v3 = &qword_256D44510;
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_4;
    case 2:
    case 3:
      goto LABEL_3;
    case 4:
    case 5:
      v3 = &qword_256D44530;
LABEL_3:
      v4 = sub_23E536F80();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      __swift_instantiateConcreteTypeFromMangledName(v3);
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for CoordinationSnapshot.UpdateType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
    case 3u:
      v6 = sub_23E536F80();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
    case 5u:
      v8 = sub_23E536F80();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
      *(_QWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for CoordinationSnapshot.UpdateType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23E282E98((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        v6 = sub_23E536F80();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
        *(_QWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        v8 = sub_23E536F80();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
        *(_QWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for CoordinationSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
      v6 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      goto LABEL_5;
    case 4u:
    case 5u:
      v8 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for CoordinationSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23E282E98((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        v6 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
        *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
        goto LABEL_6;
      case 4u:
      case 5u:
        v8 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
        *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23E4BB538(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48BF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4BB578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  char v36;

  v12 = sub_23E536F80();
  v33 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for StaticTimer();
  v34 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (double *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 80))(a4, a5) & 1) != 0)
  {
    v18 = sub_23E536F20();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a3, v18);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(a2, v12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v34 + 56))(a6, 1, 1, v15);
  }
  else
  {
    *v17 = (*(double (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
    v20 = v15[5];
    v32 = a6;
    v21 = (char *)v17 + v20;
    v22 = sub_23E536F20();
    v31 = a2;
    v23 = v22;
    v30 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v21, a3, v22);
    *(double *)((char *)v17 + v15[6]) = (*(double (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
    v25 = (uint64_t *)((char *)v17 + v15[7]);
    *v25 = v24;
    v25[1] = v26;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 48))(v35, a4, a5);
    sub_23E4BBA08((uint64_t)v35, &v36);
    *((_BYTE *)v17 + v15[8]) = v36;
    *((_BYTE *)v17 + v15[9]) = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 56))(a4, a5) & 1;
    (*(void (**)(uint64_t, uint64_t))(a5 + 64))(a4, a5);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(a3, v23);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
    v27 = *(void (**)(_QWORD, _QWORD, _QWORD))(v33 + 32);
    v27((char *)v17 + v15[10], v14, v12);
    v27((char *)v17 + v15[11], v31, v12);
    v28 = v32;
    sub_23E4BCFF0((uint64_t)v17, v32);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v34 + 56))(v28, 0, 1, v15);
  }
}

uint64_t StaticTimer.State.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

double StaticTimer.remainingTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t StaticTimer.creationTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 20);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StaticTimer()
{
  uint64_t result;

  result = qword_256D48C98;
  if (!qword_256D48C98)
    return swift_getSingletonMetadata();
  return result;
}

double StaticTimer.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 24));
}

uint64_t StaticTimer.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticTimer.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticTimer();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t StaticTimer.isFiring.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 36));
}

uint64_t StaticTimer.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticTimer.parentContainerUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 44);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E4BBA08@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_23E4BDE60(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_23E1E6C84(&v8, (uint64_t)v10);
    v4 = v11;
    v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    sub_23E4BDEA8(a1);
    if (v6 != 2 && v6 != 3)
      LOBYTE(v6) = v6 == 1;
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  else
  {
    sub_23E4BDEA8(a1);
    result = sub_23E4BDEA8((uint64_t)&v8);
    LOBYTE(v6) = 0;
  }
  *a2 = v6;
  return result;
}

Swift::Double __swiftcall StaticTimer.calculatedRemainingTime()()
{
  Swift::Double *v0;
  uint64_t v1;
  int v2;
  Swift::Double result;
  double v4;
  double v5;

  v1 = type metadata accessor for StaticTimer();
  v2 = *((unsigned __int8 *)v0 + *(int *)(v1 + 32));
  if (v2 == 1)
    return *(Swift::Double *)((char *)v0 + *(int *)(v1 + 24));
  if (v2 == 2)
    return *v0;
  result = 0.0;
  if (v2 == 3)
  {
    v4 = *v0;
    sub_23E536ECC();
    return v4 + v5;
  }
  return result;
}

uint64_t StaticTimer.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E538498();
  v1 = type metadata accessor for StaticTimer();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  sub_23E538498();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28) + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E538468();
  sub_23E538474();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t sub_23E4BBCB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4BBCF4 + 4 * byte_23E557EE8[a1]))(0x6E696E69616D6572, 0xED0000656D695467);
}

uint64_t sub_23E4BBCF4()
{
  return 0x6E6F697461657263;
}

uint64_t sub_23E4BBD24()
{
  return 0x656C746974;
}

uint64_t sub_23E4BBD38()
{
  return 0x6574617473;
}

uint64_t sub_23E4BBD4C()
{
  return 0x676E697269467369;
}

uint64_t sub_23E4BBD64()
{
  return 25705;
}

unint64_t sub_23E4BBD70()
{
  return 0xD000000000000013;
}

uint64_t sub_23E4BBD8C()
{
  unsigned __int8 *v0;

  return sub_23E4BBCB4(*v0);
}

uint64_t sub_23E4BBD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4BDAC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4BBDB8()
{
  sub_23E4BCEA4();
  return sub_23E538570();
}

uint64_t sub_23E4BBDE0()
{
  sub_23E4BCEA4();
  return sub_23E53857C();
}

uint64_t StaticTimer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48BF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4BCEA4();
  sub_23E5384EC();
  v11[31] = 0;
  sub_23E538288();
  if (!v2)
  {
    v9 = type metadata accessor for StaticTimer();
    v11[30] = 1;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E5382AC();
    v11[29] = 2;
    sub_23E538288();
    v11[28] = 3;
    sub_23E5381EC();
    v11[27] = *(_BYTE *)(v3 + *(int *)(v9 + 32));
    v11[26] = 4;
    sub_23E4BCEE8();
    sub_23E5382AC();
    v11[25] = 5;
    sub_23E53827C();
    v11[24] = 6;
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E5382AC();
    v11[15] = 7;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticTimer.hashValue.getter()
{
  sub_23E53845C();
  StaticTimer.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticTimer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v33 = a2;
  v3 = sub_23E536F80();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v32 - v6;
  v7 = sub_23E536F20();
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48C10);
  v10 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for StaticTimer();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4BCEA4();
  v40 = v12;
  v16 = v42;
  sub_23E5384E0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = v9;
  v18 = v10;
  v19 = v38;
  v20 = v39;
  v51 = 0;
  sub_23E53815C();
  *(_QWORD *)v15 = v21;
  v50 = 1;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538180();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v15[v13[5]], v17, v20);
  v49 = 2;
  sub_23E53815C();
  *(_QWORD *)&v15[v13[6]] = v22;
  v48 = 3;
  v23 = sub_23E5380D8();
  v24 = (uint64_t *)&v15[v13[7]];
  *v24 = v23;
  v24[1] = v25;
  v46 = 4;
  sub_23E4BCF2C();
  sub_23E538180();
  v15[v13[8]] = v47;
  v45 = 5;
  v15[v13[9]] = sub_23E538150() & 1;
  v44 = 6;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v26 = v36;
  v42 = v15;
  sub_23E538180();
  v27 = (char *)v42 + v13[10];
  v32 = v13;
  v28 = v37;
  v37 = *(char **)(v35 + 32);
  ((void (*)(char *, char *, uint64_t))v37)(v27, v28, v26);
  v43 = 7;
  v29 = v34;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v40, v41);
  v30 = (uint64_t)v42;
  ((void (*)(char *, char *, uint64_t))v37)((char *)v42 + v32[11], v29, v26);
  sub_23E4BCF70(v30, v33);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_23E4BCFB4(v30);
}

uint64_t sub_23E4BC5DC()
{
  sub_23E53845C();
  StaticTimer.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4BC61C()
{
  sub_23E53845C();
  StaticTimer.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4BC654@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticTimer.init(from:)(a1, a2);
}

uint64_t sub_23E4BC668(_QWORD *a1)
{
  return StaticTimer.encode(to:)(a1);
}

BOOL sub_23E4BC680(double *a1, double *a2)
{
  return !_s13HomeDataModel11StaticTimerV1loiySbAC_ACtFZ_0(a2, a1);
}

BOOL sub_23E4BC6A8(double *a1, double *a2)
{
  return !_s13HomeDataModel11StaticTimerV1loiySbAC_ACtFZ_0(a1, a2);
}

BOOL sub_23E4BC6C4(double *a1, double *a2)
{
  return _s13HomeDataModel11StaticTimerV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t StaticTimer.shouldBeVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for StaticTimer();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v17 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v17 - v10;
  v12 = *(unsigned __int8 *)(v1 + *(int *)(v9 + 32));
  sub_23E4BCF70(v1, (uint64_t)&v17 - v10);
  if (v12 == 3)
  {
    sub_23E4BCFB4((uint64_t)v11);
    sub_23E4BCF70(v1, (uint64_t)v8);
    v13 = 1;
  }
  else
  {
    v14 = v11[*(int *)(v2 + 32)];
    sub_23E4BCFB4((uint64_t)v11);
    sub_23E4BCF70(v1, (uint64_t)v8);
    if (v14 == 2)
    {
      v13 = 1;
    }
    else
    {
      v15 = v8[*(int *)(v2 + 32)];
      sub_23E4BCFF0((uint64_t)v8, (uint64_t)v5);
      if (v15 == 1)
        v13 = v5[*(int *)(v2 + 36)];
      else
        v13 = 0;
      v8 = v5;
    }
  }
  sub_23E4BCFB4((uint64_t)v8);
  return v13;
}

HomeDataModel::StaticTimer::State_optional __swiftcall StaticTimer.State.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (HomeDataModel::StaticTimer::State_optional)rawValue;
}

HomeDataModel::StaticTimer::State_optional sub_23E4BC828(Swift::Int *a1)
{
  return StaticTimer.State.init(rawValue:)(*a1);
}

uint64_t sub_23E4BC830()
{
  sub_23E4BDE1C();
  return sub_23E5377A8();
}

uint64_t sub_23E4BC88C()
{
  sub_23E4BDE1C();
  return sub_23E53776C();
}

uint64_t StaticTimer.toggleState()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E4BC8F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23E5378F8();
  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4BC95C()
{
  swift_release();
  if (qword_2543327B8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4BC9C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4BCA20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  swift_release();
  v2 = type metadata accessor for StaticTimer();
  v3 = v1 + *(int *)(v2 + 40);
  v4 = v1 + *(int *)(v2 + 44);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E421918;
  return CoordinationDataModel.toggleTimerState(staticTimerID:parentContainerID:)(v0[2], v3, v4);
}

uint64_t StaticTimer.delete()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E4BCAC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23E5378F8();
  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4BCB2C()
{
  swift_release();
  if (qword_2543327B8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4BCB90()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4BCBF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  swift_release();
  v2 = type metadata accessor for StaticTimer();
  v3 = v1 + *(int *)(v2 + 40);
  v4 = v1 + *(int *)(v2 + 44);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E4A65EC;
  return CoordinationDataModel.deleteTimer(staticTimerID:parentContainerID:)(v0[2], v3, v4);
}

uint64_t _s13HomeDataModel11StaticTimerV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;

  if (*a1 != *a2)
    return 0;
  v4 = (int *)type metadata accessor for StaticTimer();
  if ((sub_23E536EF0() & 1) == 0 || *(double *)((char *)a1 + v4[6]) != *(double *)((char *)a2 + v4[6]))
    return 0;
  v5 = v4[7];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = *(_QWORD *)((char *)a1 + v5 + 8);
  v8 = (_QWORD *)((char *)a2 + v5);
  v9 = v8[1];
  if (v7)
  {
    if (!v9)
      return 0;
    v10 = *v6 == *v8 && v7 == v9;
    if (!v10 && (sub_23E538354() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (*((unsigned __int8 *)a1 + v4[8]) == *((unsigned __int8 *)a2 + v4[8])
    && *((unsigned __int8 *)a1 + v4[9]) == *((unsigned __int8 *)a2 + v4[9])
    && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
  {
    return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  return 0;
}

BOOL _s13HomeDataModel11StaticTimerV1loiySbAC_ACtFZ_0(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double v8;
  double v9;
  double v10;
  int v11;
  double v12;
  double v13;
  double v14;

  v4 = type metadata accessor for StaticTimer();
  v5 = v4;
  v6 = *(int *)(v4 + 32);
  v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 == 1)
  {
    v8 = *(double *)((char *)a1 + *(int *)(v4 + 24));
  }
  else if (v7 == 2)
  {
    v8 = *a1;
  }
  else
  {
    v8 = 0.0;
    if (v7 == 3)
    {
      v9 = *a1;
      sub_23E536ECC();
      v8 = v9 + v10;
      v6 = *(int *)(v5 + 32);
    }
  }
  v11 = *((unsigned __int8 *)a2 + v6);
  switch(v11)
  {
    case 1:
      v14 = *(double *)((char *)a2 + *(int *)(v5 + 24));
      if (v8 != v14)
        return v8 < v14;
      goto LABEL_20;
    case 2:
      v14 = *a2;
      if (v8 != *a2)
        return v8 < v14;
      goto LABEL_20;
    case 3:
      v12 = *a2;
      sub_23E536ECC();
      v14 = v12 + v13;
      if (v8 != v14)
        return v8 < v14;
LABEL_20:
      JUMPOUT(0x24264E1E8);
  }
  if (v8 == 0.0)
    goto LABEL_20;
  v14 = 0.0;
  return v8 < v14;
}

unint64_t sub_23E4BCEA4()
{
  unint64_t result;

  result = qword_256D48C00;
  if (!qword_256D48C00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5582A4, &type metadata for StaticTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48C00);
  }
  return result;
}

unint64_t sub_23E4BCEE8()
{
  unint64_t result;

  result = qword_256D48C08;
  if (!qword_256D48C08)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticTimer.State, &type metadata for StaticTimer.State);
    atomic_store(result, (unint64_t *)&qword_256D48C08);
  }
  return result;
}

unint64_t sub_23E4BCF2C()
{
  unint64_t result;

  result = qword_256D48C18;
  if (!qword_256D48C18)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticTimer.State, &type metadata for StaticTimer.State);
    atomic_store(result, (unint64_t *)&qword_256D48C18);
  }
  return result;
}

uint64_t sub_23E4BCF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4BCFB4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4BCFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4BD034()
{
  return sub_23E1EE1C4(&qword_256D48C30, (uint64_t (*)(uint64_t))type metadata accessor for StaticTimer, (uint64_t)&protocol conformance descriptor for StaticTimer);
}

unint64_t sub_23E4BD064()
{
  unint64_t result;

  result = qword_256D48C38;
  if (!qword_256D48C38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticTimer.State, &type metadata for StaticTimer.State);
    atomic_store(result, (unint64_t *)&qword_256D48C38);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E536F20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v12 = (_QWORD *)((char *)v4 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    v16 = a3[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23E536F80();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    v20((char *)v4 + a3[11], (char *)a2 + a3[11], v19);
  }
  return v4;
}

uint64_t destroy for StaticTimer(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[10];
  v7 = sub_23E536F80();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v9(v6, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + a2[11], v7);
}

_QWORD *initializeWithCopy for StaticTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[10];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23E536F80();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v19((char *)a1 + a3[11], (char *)a2 + a3[11], v18);
  return a1;
}

_QWORD *assignWithCopy for StaticTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v13 = a3[10];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23E536F80();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17((char *)a1 + a3[11], (char *)a2 + a3[11], v16);
  return a1;
}

_QWORD *initializeWithTake for StaticTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[10];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23E536F80();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16((char *)a1 + a3[11], (char *)a2 + a3[11], v15);
  return a1;
}

_QWORD *assignWithTake for StaticTimer(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[10];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23E536F80();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20((char *)a1 + a3[11], (char *)a2 + a3[11], v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticTimer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4BD63C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;

  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v8 = sub_23E536F80();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticTimer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4BD6FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_23E536F20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[7] + 8) = a2;
      return result;
    }
    v10 = sub_23E536F80();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[10];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_23E4BD7A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F20();
  if (v1 <= 0x3F)
  {
    result = sub_23E536F80();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E4BD8A0 + 4 * byte_23E557EF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E4BD8D4 + 4 * byte_23E557EF0[v4]))();
}

uint64_t sub_23E4BD8D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4BD8DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4BD8E4);
  return result;
}

uint64_t sub_23E4BD8F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4BD8F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E4BD8FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4BD904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticTimer.State()
{
  return &type metadata for StaticTimer.State;
}

uint64_t storeEnumTagSinglePayload for StaticTimer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E4BD96C + 4 * byte_23E557EFF[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E4BD9A0 + 4 * byte_23E557EFA[v4]))();
}

uint64_t sub_23E4BD9A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4BD9A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4BD9B0);
  return result;
}

uint64_t sub_23E4BD9BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4BD9C4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E4BD9C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4BD9D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticTimer.CodingKeys()
{
  return &type metadata for StaticTimer.CodingKeys;
}

unint64_t sub_23E4BD9F0()
{
  unint64_t result;

  result = qword_256D48CE8;
  if (!qword_256D48CE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55827C, &type metadata for StaticTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48CE8);
  }
  return result;
}

unint64_t sub_23E4BDA38()
{
  unint64_t result;

  result = qword_256D48CF0;
  if (!qword_256D48CF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5581EC, &type metadata for StaticTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48CF0);
  }
  return result;
}

unint64_t sub_23E4BDA80()
{
  unint64_t result;

  result = qword_256D48CF8;
  if (!qword_256D48CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558214, &type metadata for StaticTimer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48CF8);
  }
  return result;
}

uint64_t sub_23E4BDAC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E696E69616D6572 && a2 == 0xED0000656D695467;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC000000656D6954 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697269467369 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56AEF0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_23E4BDE1C()
{
  unint64_t result;

  result = qword_256D48D00;
  if (!qword_256D48D00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticTimer.State, &type metadata for StaticTimer.State);
    atomic_store(result, (unint64_t *)&qword_256D48D00);
  }
  return result;
}

uint64_t sub_23E4BDE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4BDEA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AccessoryDetails.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, a2, type metadata accessor for StaticAccessory);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  v7 = type metadata accessor for AccessoryDetails(0);
  v8 = a2 + *(int *)(v7 + 20);
  sub_23E1E2F50(a1, v8, type metadata accessor for StaticAccessory);
  v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v10 = (_QWORD *)(v8 + v9[5]);
  *v10 = 0;
  v10[1] = 0;
  v11 = v8 + v9[6];
  v12 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)(v8 + v9[7]);
  *v13 = 0;
  v13[1] = 0;
  *(_BYTE *)(v8 + v9[8]) = 2;
  *(_BYTE *)(v8 + v9[9]) = 2;
  *(_BYTE *)(v8 + v9[10]) = 88;
  swift_storeEnumTagMultiPayload();
  v14 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(a1 + *(int *)(v14 + 28), (uint64_t)v6, &qword_2543332A8);
  sub_23E1E2FA0(a1, type metadata accessor for StaticAccessory);
  return sub_23E1E4E3C((uint64_t)v6, a2 + *(int *)(v7 + 24), &qword_2543332A8);
}

{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_23E1E2F50(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  v4 = type metadata accessor for AccessoryDetails(0);
  v5 = a2 + *(int *)(v4 + 20);
  v6 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v7 = (_QWORD *)(v5 + v6[5]);
  *v7 = 0;
  v7[1] = 0;
  v8 = v5 + v6[6];
  v9 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)(v5 + v6[7]);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(v5 + v6[8]) = 2;
  *(_BYTE *)(v5 + v6[9]) = 2;
  *(_BYTE *)(v5 + v6[10]) = 88;
  sub_23E1E2FDC(a1, v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  swift_storeEnumTagMultiPayload();
  v11 = a2 + *(int *)(v4 + 24);
  v12 = type metadata accessor for StaticDeviceMetadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  v7 = type metadata accessor for AccessoryDetails(0);
  v8 = a2 + *(int *)(v7 + 20);
  sub_23E1E2F50(a1, v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v10 = (_QWORD *)(v8 + v9[5]);
  *v10 = 0;
  v10[1] = 0;
  v11 = v8 + v9[6];
  v12 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)(v8 + v9[7]);
  *v13 = 0;
  v13[1] = 0;
  *(_BYTE *)(v8 + v9[8]) = 2;
  *(_BYTE *)(v8 + v9[9]) = 2;
  *(_BYTE *)(v8 + v9[10]) = 88;
  swift_storeEnumTagMultiPayload();
  v14 = type metadata accessor for StaticService();
  sub_23E1E7C20(a1 + *(int *)(v14 + 48), (uint64_t)v6, &qword_2543332A8);
  sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return sub_23E1E4E3C((uint64_t)v6, a2 + *(int *)(v7 + 24), &qword_2543332A8);
}

uint64_t type metadata accessor for AccessoryDetails.Payload(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D48F00);
}

uint64_t type metadata accessor for AccessoryDetails(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D48E50);
}

void AccessoryDetails.Payload.basicInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E4BE404 + 4 * byte_23E558300[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BE404()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;

  v0[3] = type metadata accessor for StaticAccessory(0);
  v0[4] = sub_23E1EE1C4(&qword_256D456E8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0);
  return sub_23E1E2FDC(v1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
}

uint64_t AccessoryDetails.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t AccessoryDetails.payload.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1EA8B4(a1, v1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t (*AccessoryDetails.payload.modify())()
{
  return nullsub_1;
}

uint64_t AccessoryDetails.basicInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccessoryDetails(0);
  return sub_23E1E2F50(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
}

uint64_t AccessoryDetails.basicInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccessoryDetails(0);
  return sub_23E1EA8B4(a1, v1 + *(int *)(v3 + 20), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
}

uint64_t (*AccessoryDetails.basicInfo.modify())(_QWORD)
{
  type metadata accessor for AccessoryDetails(0);
  return nullsub_1;
}

void AccessoryDetails.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v1 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessoryDetails(0);
  sub_23E1E2F50(v0 + *(int *)(v8 + 20), (uint64_t)v7, type metadata accessor for AccessoryDetails.Payload);
  v9 = (char *)sub_23E4BE740 + 4 * byte_23E558304[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BE740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E1E2FDC(v2, v1, type metadata accessor for StaticAccessory);
  v3 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  return sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
}

uint64_t AccessoryDetails.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AccessoryDetails(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 24), a1, &qword_2543332A8);
}

Swift::Void __swiftcall AccessoryDetails.commit()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AccessoryDetails(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_23E1E2F50(v0, (uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryDetails);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  sub_23E1E2FDC((uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for AccessoryDetails);
  sub_23E26D014((uint64_t)v6, (uint64_t)&unk_256D48D18, v9);
  swift_release();
}

uint64_t sub_23E4BE9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23E4BE9E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = v1 + *(int *)(type metadata accessor for AccessoryDetails(0) + 20);
  v3 = swift_task_alloc();
  v0[3] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_23E3B0F80;
  return sub_23E537F04();
}

uint64_t AccessoryDetails.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for StaticDeviceMetadata();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetails.Payload.hash(into:)();
  v10 = type metadata accessor for AccessoryDetails(0);
  AccessoryDetailsBasicInfo.hash(into:)(a1);
  sub_23E1E7C20(v1 + *(int *)(v10 + 24), (uint64_t)v9, &qword_2543332A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    return sub_23E538474();
  sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E538474();
  StaticDeviceMetadata.hash(into:)();
  return sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
}

uint64_t sub_23E4BEBD8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x666E496369736162;
  if (*v0 != 1)
    v1 = 0x654D656369766564;
  if (*v0)
    return v1;
  else
    return 0x64616F6C796170;
}

uint64_t sub_23E4BEC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4E1340(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4BEC68()
{
  sub_23E4CC610();
  return sub_23E538570();
}

uint64_t sub_23E4BEC90()
{
  sub_23E4CC610();
  return sub_23E53857C();
}

uint64_t AccessoryDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4CC610();
  sub_23E5384EC();
  v8[15] = 0;
  type metadata accessor for AccessoryDetails.Payload(0);
  sub_23E1EE1C4(&qword_256D456B8, type metadata accessor for AccessoryDetails.Payload, (uint64_t)&protocol conformance descriptor for AccessoryDetails.Payload);
  sub_23E5382AC();
  if (!v1)
  {
    type metadata accessor for AccessoryDetails(0);
    v8[14] = 1;
    type metadata accessor for AccessoryDetailsBasicInfo();
    sub_23E1EE1C4(&qword_256D48D30, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo, (uint64_t)&protocol conformance descriptor for AccessoryDetailsBasicInfo);
    sub_23E5382AC();
    v8[13] = 2;
    type metadata accessor for StaticDeviceMetadata();
    sub_23E1EE1C4(&qword_256D471F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AccessoryDetails.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE v11[72];

  v1 = type metadata accessor for StaticDeviceMetadata();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E53845C();
  AccessoryDetails.Payload.hash(into:)();
  v8 = type metadata accessor for AccessoryDetails(0);
  AccessoryDetailsBasicInfo.hash(into:)((uint64_t)v11);
  sub_23E1E7C20(v0 + *(int *)(v8 + 24), (uint64_t)v7, &qword_2543332A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    sub_23E538474();
    StaticDeviceMetadata.hash(into:)();
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  return sub_23E5384A4();
}

uint64_t AccessoryDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v21 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AccessoryDetailsBasicInfo();
  MEMORY[0x24BDAC7A8](v23);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D38);
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23E4CC610();
  v25 = v11;
  v16 = v28;
  sub_23E5384E0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  v17 = (uint64_t)v14;
  v31 = 0;
  sub_23E1EE1C4(&qword_256D456C8, type metadata accessor for AccessoryDetails.Payload, (uint64_t)&protocol conformance descriptor for AccessoryDetails.Payload);
  v18 = v24;
  sub_23E538180();
  sub_23E1E2FDC(v26, v17, type metadata accessor for AccessoryDetails.Payload);
  v30 = 1;
  sub_23E1EE1C4(&qword_256D48D40, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo, (uint64_t)&protocol conformance descriptor for AccessoryDetailsBasicInfo);
  sub_23E538180();
  sub_23E1E2FDC((uint64_t)v6, v17 + *(int *)(v12 + 20), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  type metadata accessor for StaticDeviceMetadata();
  v29 = 2;
  sub_23E1EE1C4(&qword_256D47228, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
  v19 = (uint64_t)v22;
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v18);
  sub_23E1E4E3C(v19, v17 + *(int *)(v12 + 24), &qword_2543332A8);
  sub_23E1E2F50(v17, v21, type metadata accessor for AccessoryDetails);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  return sub_23E1E2FA0(v17, type metadata accessor for AccessoryDetails);
}

uint64_t sub_23E4BF3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v5 = type metadata accessor for StaticDeviceMetadata();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetails.Payload.hash(into:)();
  AccessoryDetailsBasicInfo.hash(into:)(a1);
  sub_23E1E7C20(v2 + *(int *)(a2 + 24), (uint64_t)v11, &qword_2543332A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    return sub_23E538474();
  sub_23E1E2FDC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E538474();
  StaticDeviceMetadata.hash(into:)();
  return sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
}

uint64_t sub_23E4BF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE v13[72];

  v4 = type metadata accessor for StaticDeviceMetadata();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E53845C();
  AccessoryDetails.Payload.hash(into:)();
  AccessoryDetailsBasicInfo.hash(into:)((uint64_t)v13);
  sub_23E1E7C20(v2 + *(int *)(a2 + 24), (uint64_t)v10, &qword_2543332A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    sub_23E538474();
    StaticDeviceMetadata.hash(into:)();
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  return sub_23E5384A4();
}

uint64_t sub_23E4BF678@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetails.init(from:)(a1, a2);
}

uint64_t sub_23E4BF68C(_QWORD *a1)
{
  return AccessoryDetails.encode(to:)(a1);
}

unint64_t AccessoryDetails.Payload.description.getter()
{
  uint64_t v0;

  sub_23E4BF6FC(v0);
  sub_23E537628();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

void sub_23E4BF6FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23E1E2F50(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_23E4BF7F0 + 4 * byte_23E558308[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BF7F0()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for AccessoryDetails.Payload);
  return 0x6341636974617473;
}

void AccessoryDetails.Payload.staticMatterDevice.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  char *v12;
  _QWORD v13[10];

  v13[3] = a1;
  v2 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v13[2] = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v13[1] = (char *)v13 - v6;
  v7 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v9);
  sub_23E1E2F50(v1, (uint64_t)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v12 = (char *)sub_23E4BFA64 + 4 * byte_23E55830C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BFA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_23E1E2FDC(v0, v2, type metadata accessor for StaticAccessory);
  v4 = v2 + *(int *)(v1 + 36);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  if (qword_254334098 != -1)
    swift_once();
  v7 = qword_254333F18;
  swift_getKeyPath();
  *(_QWORD *)(v3 - 104) = v7;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v8 = v7 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 16);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_7;
  v10 = sub_23E211288(v5);
  if ((v11 & 1) != 0)
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = type metadata accessor for StaticMatterDevice();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = v13 + *(_QWORD *)(v15 + 72) * v12;
    v17 = *(_QWORD *)(v3 - 136);
    sub_23E1E2F50(v16, v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v14);
  }
  else
  {
LABEL_7:
    v19 = type metadata accessor for StaticMatterDevice();
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(*(_QWORD *)(v3 - 136), 1, 1, v19);
  }
}

void AccessoryDetails.Payload.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_23E1E2F50(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_23E4BFF94 + 4 * byte_23E558310[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4BFF94()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FDC(v2, v1, type metadata accessor for StaticAccessory);
  sub_23E538468();
  StaticAccessory.hash(into:)(v0);
  return sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
}

uint64_t sub_23E4C0088()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4C00C4 + 4 * byte_23E558314[*v0]))(0x6341636974617473, 0xEF79726F73736563);
}

uint64_t sub_23E4C00C4()
{
  return 0x6553636974617473;
}

unint64_t sub_23E4C00E8()
{
  return 0xD000000000000012;
}

uint64_t sub_23E4C0104()
{
  return 0x6E45636974617473;
}

uint64_t sub_23E4C0128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4E14C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4C014C()
{
  sub_23E4CC664();
  return sub_23E538570();
}

uint64_t sub_23E4C0174()
{
  sub_23E4CC664();
  return sub_23E53857C();
}

uint64_t sub_23E4C019C()
{
  sub_23E4CC774();
  return sub_23E538570();
}

uint64_t sub_23E4C01C4()
{
  sub_23E4CC774();
  return sub_23E53857C();
}

uint64_t sub_23E4C01EC()
{
  sub_23E4CC6A8();
  return sub_23E538570();
}

uint64_t sub_23E4C0214()
{
  sub_23E4CC6A8();
  return sub_23E53857C();
}

uint64_t sub_23E4C023C()
{
  sub_23E4CC730();
  return sub_23E538570();
}

uint64_t sub_23E4C0264()
{
  sub_23E4CC730();
  return sub_23E53857C();
}

uint64_t sub_23E4C028C()
{
  sub_23E4CC6EC();
  return sub_23E538570();
}

uint64_t sub_23E4C02B4()
{
  sub_23E4CC6EC();
  return sub_23E53857C();
}

void AccessoryDetails.Payload.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D48);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v29);
  v30 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D50);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D58);
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v21 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D60);
  v18[0] = *(_QWORD *)(v11 - 8);
  v18[1] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v12);
  v13 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D68);
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4CC664();
  sub_23E5384EC();
  sub_23E1E2F50(v36, (uint64_t)v15, type metadata accessor for AccessoryDetails.Payload);
  v17 = (char *)sub_23E4C05D4 + 4 * byte_23E558318[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4C05D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23E1E2FDC(v3, v0, type metadata accessor for StaticAccessory);
  *(_BYTE *)(v4 - 68) = 0;
  sub_23E4CC774();
  v5 = *(_QWORD *)(v4 - 112);
  sub_23E5381E0();
  sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  v6 = *(_QWORD *)(v4 - 248);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 256) + 8))(v2, v6);
  sub_23E1E2FA0(v0, type metadata accessor for StaticAccessory);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v1, v5);
}

uint64_t AccessoryDetails.Payload.hashValue.getter()
{
  sub_23E53845C();
  AccessoryDetails.Payload.hash(into:)();
  return sub_23E5384A4();
}

uint64_t AccessoryDetails.Payload.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  _QWORD v32[8];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v37 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48D98);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v43 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48DA0);
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v40 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48DA8);
  v32[6] = *(_QWORD *)(v5 - 8);
  v32[7] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48DB0);
  v32[4] = *(_QWORD *)(v7 - 8);
  v32[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48DB8);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for AccessoryDetails.Payload(0);
  v11 = MEMORY[0x24BDAC7A8](v41);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v32 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v32 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)v32 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_23E4CC664();
  v44 = v10;
  v24 = v47;
  sub_23E5384E0();
  if (!v24)
  {
    v32[0] = v19;
    v32[1] = v16;
    v32[2] = v22;
    v32[3] = v13;
    v25 = v44;
    v47 = 0;
    v26 = v45;
    v27 = sub_23E5381C8();
    if (*(_QWORD *)(v27 + 16) == 1)
      __asm { BR              X10 }
    v28 = sub_23E537ED4();
    swift_allocError();
    v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v30 = v41;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v26);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
}

uint64_t sub_23E4C1134()
{
  sub_23E53845C();
  AccessoryDetails.Payload.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4C1174()
{
  sub_23E53845C();
  AccessoryDetails.Payload.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4C11AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetails.Payload.init(from:)(a1, a2);
}

void sub_23E4C11C0(_QWORD *a1)
{
  AccessoryDetails.Payload.encode(to:)(a1);
}

unint64_t sub_23E4C11D4()
{
  uint64_t v0;

  sub_23E4BF6FC(v0);
  sub_23E537628();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

void AccessoryDetails.softwareUpdate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23E1E2F50(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23E4C1334 + 4 * byte_23E558320[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4C1334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FA0(v1, type metadata accessor for AccessoryDetails.Payload);
  v2 = type metadata accessor for StaticSoftwareUpdate(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v0, 1, 1, v2);
}

uint64_t AccessoryDetails.performUpdate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[19] = v0;
  v1[20] = type metadata accessor for StateSnapshot(0);
  v1[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v1[22] = swift_task_alloc();
  v1[23] = type metadata accessor for StaticService();
  v1[24] = swift_task_alloc();
  v2 = type metadata accessor for StaticAccessory(0);
  v1[25] = v2;
  v1[26] = *(_QWORD *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E4C14F0()
{
  uint64_t v0;
  int EnumCaseMultiPayload;

  sub_23E1E2F50(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 232), type metadata accessor for AccessoryDetails.Payload);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      *(_QWORD *)(v0 + 296) = sub_23E5378F8();
      *(_QWORD *)(v0 + 304) = sub_23E5378EC();
    }
    else
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216), type metadata accessor for StaticAccessory);
      *(_QWORD *)(v0 + 240) = sub_23E5378F8();
      *(_QWORD *)(v0 + 248) = sub_23E5378EC();
    }
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 232), type metadata accessor for AccessoryDetails.Payload);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E4C1660()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C16C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 256) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C1724()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 264) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C176C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_23E536F44();
  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C17D8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[34];
  v2 = (void *)v0[33];
  swift_release();
  v0[36] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4C183C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 216), type metadata accessor for StaticAccessory);
  v1 = *(void **)(v0 + 288);
  *(_QWORD *)(v0 + 384) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, sel_softwareUpdateController);
    *(_QWORD *)(v0 + 392) = v3;
    v4 = v2;
    if (v3)
    {
      v5 = v3;
      v6 = objc_msgSend(v3, sel_availableUpdate);
      *(_QWORD *)(v0 + 400) = v6;
      if (v6)
      {
        v7 = v6;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_23E4C2084;
        v8 = swift_continuation_init();
        *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
        v9 = (_QWORD *)(v0 + 80);
        v9[1] = 0x40000000;
        v9[2] = sub_23E267484;
        v9[3] = &block_descriptor_38;
        v9[4] = v8;
        objc_msgSend(v5, sel_startUpdate_completionHandler_, v7, v9);
        return swift_continuation_await();
      }

      v4 = v5;
    }

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C1994()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C19F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 312) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C1A58()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 320) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C1AA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C1B00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[40];
  v2 = v0[21];
  swift_release();
  swift_getKeyPath();
  v0[18] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E1E2F50(v3, v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E4C1BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v1 + *(int *)(*(_QWORD *)(v0 + 160) + 32));
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  if (*(_QWORD *)(v2 + 16)
    && (v3 = sub_23E1E3300(*(_QWORD *)(v0 + 192) + *(int *)(*(_QWORD *)(v0 + 184) + 40)), (v4 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(v2 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 208) + 72) * v3, *(_QWORD *)(v0 + 176), type metadata accessor for StaticAccessory);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    v9 = *(_QWORD *)(v0 + 176);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v9, &qword_254333468);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 336) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E4C1D64()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E4C1DA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 344) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C1E00()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 352) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C1E48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 360) = sub_23E536F44();
  *(_QWORD *)(v0 + 368) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C1EB4()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[45];
  v2 = (void *)v0[44];
  swift_release();
  v0[47] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4C1F18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
  v2 = *(void **)(v0 + 376);
  *(_QWORD *)(v0 + 384) = v2;
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, sel_softwareUpdateController);
    *(_QWORD *)(v0 + 392) = v4;
    v5 = v3;
    if (v4)
    {
      v6 = v4;
      v7 = objc_msgSend(v4, sel_availableUpdate);
      *(_QWORD *)(v0 + 400) = v7;
      if (v7)
      {
        v8 = v7;
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_23E4C2084;
        v9 = swift_continuation_init();
        *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
        v10 = (_QWORD *)(v0 + 80);
        v10[1] = 0x40000000;
        v10[2] = sub_23E267484;
        v10[3] = &block_descriptor_38;
        v10[4] = v9;
        objc_msgSend(v6, sel_startUpdate_completionHandler_, v8, v10);
        return swift_continuation_await();
      }

      v5 = v6;
    }

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C2084()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 408) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4C20E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 392);
  v2 = *(void **)(v0 + 400);
  v3 = *(void **)(v0 + 384);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C2160()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 400);
  v2 = *(void **)(v0 + 408);
  v4 = *(void **)(v0 + 384);
  v3 = *(void **)(v0 + 392);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AccessoryDetails.staticUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_254334098 != -1)
    swift_once();
  v2 = qword_254333F18;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v4 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v5 = type metadata accessor for StaticHome();
  return sub_23E1E2F50(v3 + v4 + *(int *)(v5 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
}

BOOL AccessoryDetails.userCanEdit.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  _QWORD v12[4];

  v0 = type metadata accessor for StaticUser();
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v12 - v4;
  if (qword_254334098 != -1)
    swift_once();
  v6 = qword_254333F18;
  swift_getKeyPath();
  v12[1] = v6;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v7 = v6 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v8 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v9 = type metadata accessor for StaticHome();
  sub_23E1E2F50(v7 + v8 + *(int *)(v9 + 28), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  LODWORD(v8) = v5[*(int *)(v0 + 28)];
  sub_23E1E2F50((uint64_t)v5, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  if ((_DWORD)v8)
    v10 = v3[*(int *)(v0 + 28)] == 1;
  else
    v10 = 1;
  sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  return v10;
}

uint64_t AccessoryDetails.shouldShowLogging.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v19;
  _QWORD v21[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333280);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StaticUser();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v21 - v7;
  if (qword_254334098 != -1)
    swift_once();
  v9 = qword_254333F18;
  swift_getKeyPath();
  v21[1] = v9;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v10 = v9 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v11 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v12 = type metadata accessor for StaticHome();
  sub_23E1E2F50(v10 + v11 + *(int *)(v12 + 28), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  LODWORD(v11) = v8[*(int *)(v3 + 28)];
  sub_23E1E2F50((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  if ((_DWORD)v11)
    v13 = v6[*(int *)(v3 + 28)] == 1;
  else
    v13 = 1;
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  AccessoryDetails.Payload.staticMatterDevice.getter((uint64_t)v2);
  v14 = type metadata accessor for StaticMatterDevice();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v2, 1, v14) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, (uint64_t *)&unk_254333280);
LABEL_10:
    v19 = 0;
    return v19 & 1;
  }
  v15 = DataModel.matterDevice(with:inHomeWithID:)();
  v17 = v16;
  sub_23E1E2FA0((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  if (!v15)
    goto LABEL_10;
  ObjectType = swift_getObjectType();
  v19 = MatterDevice.supportsDiagnosticsLogs.getter(ObjectType, v17);
  swift_unknownObjectRelease();
  if (!v13)
    goto LABEL_10;
  return v19 & 1;
}

uint64_t AccessoryDetails.getDoorLockCluster()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AccessoryDetails.Payload(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  v12 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + *(int *)(type metadata accessor for AccessoryDetails(0) + 20);
  sub_23E1E2F50(v15, (uint64_t)v11, type metadata accessor for AccessoryDetails.Payload);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for AccessoryDetails.Payload);
    sub_23E1E2F50(v15, (uint64_t)v9, type metadata accessor for AccessoryDetails.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23E1E2FDC((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E4C2C34((uint64_t)v5, a1);
      return sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      result = sub_23E1E2FA0((uint64_t)v9, type metadata accessor for AccessoryDetails.Payload);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_BYTE *)(a1 + 20) = 0;
      *(_DWORD *)(a1 + 16) = 768;
    }
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v14, type metadata accessor for StaticAccessory);
    sub_23E4C2938(a1);
    return sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticAccessory);
  }
  return result;
}

void sub_23E4C2938(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticAccessory.primaryStaticService.getter((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    if (qword_256D3ED78 != -1)
      swift_once();
    v9 = sub_23E5371A8();
    __swift_project_value_buffer(v9, (uint64_t)qword_256D42C38);
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136315650;
      v14 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v15);
      sub_23E537CF4();
      *(_WORD *)(v12 + 12) = 2080;
      v14 = sub_23E1FD768(0xD000000000000028, 0x800000023E56B390, &v15);
      sub_23E537CF4();
      *(_WORD *)(v12 + 22) = 2080;
      v14 = sub_23E1FD768(0x6341636974617473, 0xEF79726F73736563, &v15);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v10, v11, "%s - %s: Unable to get doorLockCluster for %s because primaryStaticService does NOT exist.", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);
    }

    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 768;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E4C2C34((uint64_t)v8, a1);
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
}

void sub_23E4C2C34(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  int v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  uint64_t v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _BYTE v66[12];
  int v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74[16];
  uint64_t v75[32];

  v72 = type metadata accessor for StaticEndpoint();
  v4 = *(_QWORD *)(v72 - 8);
  v5 = MEMORY[0x24BDAC7A8](v72);
  v7 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v66[-v8];
  v73 = type metadata accessor for StaticMatterDevice();
  v10 = *(_QWORD *)(v73 - 8);
  v11 = MEMORY[0x24BDAC7A8](v73);
  v13 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = &v66[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v66[-v17];
  v19 = a1 + *(int *)(type metadata accessor for StaticService() + 132);
  if ((*(_BYTE *)(v19 + 10) & 1) != 0)
  {
    if (qword_256D3ED78 != -1)
      swift_once();
    v20 = sub_23E5371A8();
    __swift_project_value_buffer(v20, (uint64_t)qword_256D42C38);
    v21 = sub_23E537190();
    v22 = sub_23E537B20();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v75[0] = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)&v74[0] = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v75);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v21, v22, "%s: Returning nil, because matterEndpointPath is nil.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v24, -1, -1);
      MEMORY[0x24264FEBC](v23, -1, -1);
    }

    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 20) = 0;
    *(_DWORD *)(a2 + 16) = 768;
    return;
  }
  v68 = v13;
  v69 = v18;
  v70 = *(_QWORD *)v19;
  v71 = (_QWORD *)a2;
  v67 = *(unsigned __int16 *)(v19 + 8);
  if (qword_254334098 != -1)
    swift_once();
  v25 = qword_254333F18;
  swift_getKeyPath();
  v75[0] = v25;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v26 = v25 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  v27 = *(_QWORD *)(v26 + 16);
  if (!*(_QWORD *)(v27 + 16) || (v28 = sub_23E211288(v70), (v29 & 1) == 0))
  {
    v44 = qword_256D3ED78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 != -1)
      swift_once();
    v45 = sub_23E5371A8();
    __swift_project_value_buffer(v45, (uint64_t)qword_256D42C38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = sub_23E537190();
    v47 = sub_23E537B20();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      LODWORD(v72) = v48;
      v50 = v49;
      v69 = (_BYTE *)swift_slowAlloc();
      v75[0] = (uint64_t)v69;
      *(_DWORD *)v50 = 136315650;
      *(_QWORD *)&v74[0] = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v75);
      sub_23E537CF4();
      *(_WORD *)(v50 + 12) = 2048;
      *(_QWORD *)&v74[0] = v70;
      sub_23E537CF4();
      *(_WORD *)(v50 + 22) = 2080;
      swift_bridgeObjectRetain();
      v51 = sub_23E53746C();
      v53 = v52;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v74[0] = sub_23E1FD768(v51, v53, v75);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v46, (os_log_type_t)v72, "%s: Returning nil, because staticDevice is not found for matterNodeID %llu among staticDevices %s.", (uint8_t *)v50, 0x20u);
      v54 = (uint64_t)v69;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v54, -1, -1);
      MEMORY[0x24264FEBC](v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_30;
  }
  sub_23E1E2F50(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v10 + 72) * v28, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v30 = (uint64_t)v69;
  sub_23E1E2FDC((uint64_t)v16, (uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v31 = *(_QWORD *)(v30 + *(int *)(v73 + 44));
  v32 = (uint64_t)v68;
  if (!*(_QWORD *)(v31 + 16) || (v33 = sub_23E2112B8(v67), (v34 & 1) == 0))
  {
    if (qword_256D3ED78 != -1)
      swift_once();
    v55 = sub_23E5371A8();
    __swift_project_value_buffer(v55, (uint64_t)qword_256D42C38);
    sub_23E1E2F50(v30, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    v56 = sub_23E537190();
    v57 = v30;
    v58 = sub_23E537B20();
    if (os_log_type_enabled(v56, v58))
    {
      v59 = swift_slowAlloc();
      v70 = swift_slowAlloc();
      v75[0] = v70;
      *(_DWORD *)v59 = 136315650;
      *(_QWORD *)&v74[0] = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v75);
      sub_23E537CF4();
      *(_WORD *)(v59 + 12) = 512;
      LOWORD(v74[0]) = v67;
      sub_23E537CF4();
      *(_WORD *)(v59 + 16) = 2080;
      swift_bridgeObjectRetain();
      v60 = sub_23E53746C();
      v62 = v61;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v74[0] = sub_23E1FD768(v60, v62, v75);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      _os_log_impl(&dword_23E1DF000, v56, v58, "%s: Returning nil, because endpoint is not found for endpointID %hu among endpoints %s.", (uint8_t *)v59, 0x1Au);
      v63 = v70;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v63, -1, -1);
      MEMORY[0x24264FEBC](v59, -1, -1);

      v64 = (uint64_t)v69;
    }
    else
    {

      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      v64 = v57;
    }
    sub_23E1E2FA0(v64, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
LABEL_30:
    v65 = v71;
    *v71 = 0;
    v65[1] = 0;
    *((_BYTE *)v65 + 20) = 0;
    *((_DWORD *)v65 + 4) = 768;
    return;
  }
  sub_23E1E2F50(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v4 + 72) * v33, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E2FDC((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  v35 = v71;
  v36 = *(_QWORD *)&v9[*(int *)(v72 + 36)];
  if (*(_QWORD *)(v36 + 16)
    && (v37 = sub_23E2112EC(21), (v38 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v36 + 56) + (v37 << 8)), (uint64_t)v74),
        sub_23E22328C(v74, (uint64_t)v75),
        sub_23E23C5D0((uint64_t)v75) == 2))
  {
    v39 = sub_23E23C5DC((uint64_t)v75);
    v40 = *(unsigned __int16 *)(v39 + 8) | ((unint64_t)*(unsigned __int8 *)(v39 + 10) << 16) | ((unint64_t)*(unsigned int *)(v39 + 12) << 32);
    v41 = 0x1000000;
    if (!*(_BYTE *)(v39 + 19))
      v41 = 0;
    v42 = *(unsigned __int8 *)(v39 + 16) | (*(unsigned __int8 *)(v39 + 17) << 8) | (*(unsigned __int8 *)(v39 + 18) << 16) | v41;
    v43 = *(_BYTE *)(v39 + 20);
    *v35 = *(_QWORD *)v39;
    v35[1] = v40;
    *((_BYTE *)v35 + 20) = v43;
    *((_DWORD *)v35 + 4) = v42;
  }
  else
  {
    *v35 = 0;
    v35[1] = 0;
    *((_BYTE *)v35 + 20) = 0;
    *((_DWORD *)v35 + 4) = 768;
  }
  sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
}

Swift::Bool __swiftcall AccessoryDetails.supportsUWBUnlock()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v68 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v65 - v9;
  v10 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v10);
  v66 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v65 - v19;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)&v65 - v19);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v65(v20, 1, v5) == 1)
  {
    v21 = sub_23E1E7C64((uint64_t)v20, &qword_254332DE8);
    v22 = 0;
  }
  else
  {
    v22 = v20[*(int *)(v5 + 84)];
    v21 = sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  LOBYTE(v70) = v22;
  if (ServiceKind.rawValue.getter(v21) == 0xD000000000000024 && v23 == 0x800000023E55FCC0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      if (qword_256D3ED78 != -1)
        swift_once();
      v38 = sub_23E5371A8();
      __swift_project_value_buffer(v38, (uint64_t)qword_256D42C38);
      sub_23E1E2F50(v1, (uint64_t)v4, type metadata accessor for AccessoryDetails);
      v27 = sub_23E537190();
      v39 = sub_23E537B20();
      if (!os_log_type_enabled(v27, (os_log_type_t)v39))
      {
        sub_23E1E2FA0((uint64_t)v4, type metadata accessor for AccessoryDetails);
LABEL_44:

        LOBYTE(v37) = 0;
        return v37;
      }
      LODWORD(v68) = v39;
      v40 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v70 = v67;
      *(_DWORD *)v40 = 136315650;
      v69 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v70);
      sub_23E537CF4();
      *(_WORD *)(v40 + 12) = 2080;
      v69 = sub_23E1FD768(0xD000000000000013, 0x800000023E56B280, &v70);
      sub_23E537CF4();
      *(_WORD *)(v40 + 22) = 2080;
      AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v18);
      if (v65(v18, 1, v5) == 1)
      {
        sub_23E1E7C64((uint64_t)v18, &qword_254332DE8);
        v41 = 0;
      }
      else
      {
        v41 = v18[*(int *)(v5 + 84)];
        sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      LOBYTE(v69) = v41;
      ServiceKind.localizedDescription.getter();
      v69 = sub_23E1FD768(v61, v62, &v70);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v4, type metadata accessor for AccessoryDetails);
      _os_log_impl(&dword_23E1DF000, v27, (os_log_type_t)v68, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v40, 0x20u);
      v63 = v67;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v63, -1, -1);
      v31 = v40;
LABEL_43:
      MEMORY[0x24264FEBC](v31, -1, -1);
      goto LABEL_44;
    }
  }
  sub_23E1E2F50(v1, (uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_23E1E2FA0((uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
    if (qword_256D3ED78 != -1)
      swift_once();
    v26 = sub_23E5371A8();
    __swift_project_value_buffer(v26, (uint64_t)qword_256D42C38);
    v27 = sub_23E537190();
    v28 = sub_23E537B20();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_44;
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v70 = v30;
    *(_DWORD *)v29 = 136315394;
    v69 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v70);
    sub_23E537CF4();
    *(_WORD *)(v29 + 12) = 2080;
    v69 = sub_23E1FD768(0xD000000000000013, 0x800000023E56B280, &v70);
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v27, v28, "%s - %s: Returning false since payload type is staticServiceGroup / staticEndpoint", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v30, -1, -1);
    v31 = v29;
    goto LABEL_43;
  }
  if (EnumCaseMultiPayload)
  {
    v42 = (uint64_t)v14;
    v43 = v67;
    sub_23E1E2FDC(v42, v67, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (qword_254334098 != -1)
      swift_once();
    v44 = (void *)qword_254333F18;
    v45 = (void *)sub_23E536F44();
    v46 = objc_msgSend(v44, sel_accessoryFor_, v45);

    v47 = (uint64_t)v68;
    if (v46)
    {
      v37 = objc_msgSend(v46, sel_supportsUWBUnlock);

    }
    else
    {
      v37 = 0;
    }
    if (qword_256D3ED78 != -1)
      swift_once();
    v53 = sub_23E5371A8();
    __swift_project_value_buffer(v53, (uint64_t)qword_256D42C38);
    sub_23E1E2F50(v43, v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v54 = sub_23E537190();
    v55 = sub_23E537B20();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v57 = swift_slowAlloc();
      v70 = v57;
      *(_DWORD *)v56 = 136315906;
      v69 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v70);
      sub_23E537CF4();
      *(_WORD *)(v56 + 12) = 2080;
      v69 = sub_23E1FD768(0xD000000000000013, 0x800000023E56B280, &v70);
      sub_23E537CF4();
      *(_WORD *)(v56 + 22) = 1024;
      LODWORD(v69) = v37;
      sub_23E537CF4();
      *(_WORD *)(v56 + 28) = 2080;
      v58 = (uint64_t)v68;
      v59 = StaticService.description.getter();
      v69 = sub_23E1FD768(v59, v60, &v70);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      _os_log_impl(&dword_23E1DF000, v54, v55, "%s - %s: staticServiceSupportsUWBUnlock is %{BOOL}d for static service: %s", (uint8_t *)v56, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v57, -1, -1);
      MEMORY[0x24264FEBC](v56, -1, -1);

    }
    else
    {

      sub_23E1E2FA0(v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v32 = (uint64_t)v14;
    v33 = v66;
    sub_23E1E2FDC(v32, v66, type metadata accessor for StaticAccessory);
    if (qword_254334098 != -1)
      swift_once();
    v34 = (void *)qword_254333F18;
    v35 = (void *)sub_23E536F44();
    v36 = objc_msgSend(v34, sel_accessoryFor_, v35);

    if (v36)
    {
      v37 = objc_msgSend(v36, sel_supportsUWBUnlock);

    }
    else
    {
      v37 = 0;
    }
    if (qword_256D3ED78 != -1)
      swift_once();
    v48 = sub_23E5371A8();
    __swift_project_value_buffer(v48, (uint64_t)qword_256D42C38);
    v49 = sub_23E537190();
    v50 = sub_23E537B20();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = swift_slowAlloc();
      v52 = swift_slowAlloc();
      v70 = v52;
      *(_DWORD *)v51 = 136315906;
      v69 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v70);
      sub_23E537CF4();
      *(_WORD *)(v51 + 12) = 2080;
      v69 = sub_23E1FD768(0xD000000000000013, 0x800000023E56B280, &v70);
      sub_23E537CF4();
      *(_WORD *)(v51 + 22) = 1024;
      LODWORD(v69) = v37;
      sub_23E537CF4();
      *(_WORD *)(v51 + 28) = 2080;
      v69 = sub_23E1FD768(0x6341636974617473, 0xEF79726F73736563, &v70);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v49, v50, "%s - %s: staticAccessorySupportsUWBUnlock is %{BOOL}d for static accessory: %s.", (uint8_t *)v51, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v52, -1, -1);
      MEMORY[0x24264FEBC](v51, -1, -1);
    }

    sub_23E1E2FA0(v33, type metadata accessor for StaticAccessory);
  }
  return v37;
}

Swift::Bool __swiftcall AccessoryDetails.supportsAccessCodes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  unsigned __int8 v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (uint64_t)&v62 - v9;
  v10 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v62 - v19;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)&v62 - v19);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v62(v20, 1, v5) == 1)
  {
    v21 = sub_23E1E7C64((uint64_t)v20, &qword_254332DE8);
    v22 = 0;
  }
  else
  {
    v22 = v20[*(int *)(v5 + 84)];
    v21 = sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  LOBYTE(v67) = v22;
  if (ServiceKind.rawValue.getter(v21) == 0xD000000000000024 && v23 == 0x800000023E55FCC0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      if (qword_256D3ED78 != -1)
        swift_once();
      v37 = sub_23E5371A8();
      __swift_project_value_buffer(v37, (uint64_t)qword_256D42C38);
      sub_23E1E2F50(v1, (uint64_t)v4, type metadata accessor for AccessoryDetails);
      v27 = sub_23E537190();
      v38 = sub_23E537B20();
      if (!os_log_type_enabled(v27, (os_log_type_t)v38))
      {
        sub_23E1E2FA0((uint64_t)v4, type metadata accessor for AccessoryDetails);
LABEL_44:

        return 0;
      }
      LODWORD(v65) = v38;
      v39 = swift_slowAlloc();
      v64 = (char *)swift_slowAlloc();
      v67 = v64;
      *(_DWORD *)v39 = 136315650;
      v66 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v39 + 12) = 2080;
      v66 = sub_23E1FD768(0xD000000000000015, 0x800000023E56B2A0, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v39 + 22) = 2080;
      AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v18);
      if (v62(v18, 1, v5) == 1)
      {
        sub_23E1E7C64((uint64_t)v18, &qword_254332DE8);
        v40 = 0;
      }
      else
      {
        v40 = v18[*(int *)(v5 + 84)];
        sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      LOBYTE(v66) = v40;
      ServiceKind.localizedDescription.getter();
      v66 = sub_23E1FD768(v58, v59, (uint64_t *)&v67);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v4, type metadata accessor for AccessoryDetails);
      _os_log_impl(&dword_23E1DF000, v27, (os_log_type_t)v65, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v39, 0x20u);
      v60 = v64;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v60, -1, -1);
      v31 = v39;
LABEL_43:
      MEMORY[0x24264FEBC](v31, -1, -1);
      goto LABEL_44;
    }
  }
  sub_23E1E2F50(v1, (uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_23E1E2FA0((uint64_t)v14, type metadata accessor for AccessoryDetails.Payload);
    if (qword_256D3ED78 != -1)
      swift_once();
    v26 = sub_23E5371A8();
    __swift_project_value_buffer(v26, (uint64_t)qword_256D42C38);
    v27 = sub_23E537190();
    v28 = sub_23E537B20();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_44;
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v67 = (char *)v30;
    *(_DWORD *)v29 = 136315394;
    v66 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, (uint64_t *)&v67);
    sub_23E537CF4();
    *(_WORD *)(v29 + 12) = 2080;
    v66 = sub_23E1FD768(0xD000000000000015, 0x800000023E56B2A0, (uint64_t *)&v67);
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v27, v28, "%s - %s: Returning false since payload type is staticServiceGroup / staticEndpoint", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v30, -1, -1);
    v31 = v29;
    goto LABEL_43;
  }
  if (EnumCaseMultiPayload)
  {
    v41 = v65;
    sub_23E1E2FDC((uint64_t)v14, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (qword_254334098 != -1)
      swift_once();
    v42 = (void *)qword_254333F18;
    v43 = (void *)sub_23E536F44();
    v44 = objc_msgSend(v42, sel_accessoryFor_, v43);

    v45 = (uint64_t)v64;
    if (v44)
    {
      v36 = objc_msgSend(v44, sel_supportsAccessCodes);

    }
    else
    {
      v36 = 0;
    }
    if (qword_256D3ED78 != -1)
      swift_once();
    v51 = sub_23E5371A8();
    __swift_project_value_buffer(v51, (uint64_t)qword_256D42C38);
    sub_23E1E2F50(v41, v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v52 = sub_23E537190();
    v53 = sub_23E537B20();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v67 = (char *)v55;
      *(_DWORD *)v54 = 136315650;
      v66 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v54 + 12) = 2080;
      v66 = sub_23E1FD768(0xD000000000000015, 0x800000023E56B2A0, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v54 + 22) = 2080;
      v56 = StaticService.description.getter();
      v66 = sub_23E1FD768(v56, v57, (uint64_t *)&v67);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      _os_log_impl(&dword_23E1DF000, v52, v53, "%s - %s: static service: %s", (uint8_t *)v54, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v55, -1, -1);
      MEMORY[0x24264FEBC](v54, -1, -1);

    }
    else
    {

      sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v32 = v63;
    sub_23E1E2FDC((uint64_t)v14, v63, type metadata accessor for StaticAccessory);
    if (qword_254334098 != -1)
      swift_once();
    v33 = (void *)qword_254333F18;
    v34 = (void *)sub_23E536F44();
    v35 = objc_msgSend(v33, sel_accessoryFor_, v34);

    if (v35)
    {
      v36 = objc_msgSend(v35, sel_supportsAccessCodes);

    }
    else
    {
      v36 = 0;
    }
    if (qword_256D3ED78 != -1)
      swift_once();
    v46 = sub_23E5371A8();
    __swift_project_value_buffer(v46, (uint64_t)qword_256D42C38);
    v47 = sub_23E537190();
    v48 = sub_23E537B20();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v67 = (char *)v50;
      *(_DWORD *)v49 = 136315650;
      v66 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v49 + 12) = 2080;
      v66 = sub_23E1FD768(0xD000000000000015, 0x800000023E56B2A0, (uint64_t *)&v67);
      sub_23E537CF4();
      *(_WORD *)(v49 + 22) = 2080;
      v66 = sub_23E1FD768(0x6341636974617473, 0xEF79726F73736563, (uint64_t *)&v67);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v47, v48, "%s - %s: static accessory: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v50, -1, -1);
      MEMORY[0x24264FEBC](v49, -1, -1);
    }

    sub_23E1E2FA0(v32, type metadata accessor for StaticAccessory);
  }
  return v36;
}

Swift::Bool __swiftcall AccessoryDetails.accessorySupportsWalletKey()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD v42[2];
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v42[1] = (char *)v42 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v42 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v42 - v13;
  v14 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v42 - v24;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v42 - v24);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v48(v25, 1, v5) == 1)
  {
    v26 = sub_23E1E7C64((uint64_t)v25, &qword_254332DE8);
    v27 = 0;
  }
  else
  {
    v27 = v25[*(int *)(v5 + 84)];
    v26 = sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  LOBYTE(v52) = v27;
  if (ServiceKind.rawValue.getter(v26) == 0xD000000000000024 && v28 == 0x800000023E55FCC0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v29 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
LABEL_8:
    sub_23E1E2F50(v1, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
    v30 = (char *)&loc_23E4C5030 + dword_23E4C615C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (qword_256D3ED78 != -1)
    swift_once();
  v31 = sub_23E5371A8();
  __swift_project_value_buffer(v31, (uint64_t)qword_256D42C38);
  v32 = v49;
  sub_23E1E2F50(v1, v49, type metadata accessor for AccessoryDetails);
  v33 = sub_23E537190();
  v34 = sub_23E537B20();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v52 = v36;
    *(_DWORD *)v35 = 136315650;
    v51 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v52);
    sub_23E537CF4();
    *(_WORD *)(v35 + 12) = 2080;
    v51 = sub_23E1FD768(0xD00000000000001CLL, 0x800000023E56B2C0, &v52);
    v37 = v49;
    sub_23E537CF4();
    *(_WORD *)(v35 + 22) = 2080;
    AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v22);
    if (v48(v22, 1, v5) == 1)
    {
      sub_23E1E7C64((uint64_t)v22, &qword_254332DE8);
      v38 = 0;
    }
    else
    {
      v38 = v22[*(int *)(v5 + 84)];
      sub_23E1E2FA0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    LOBYTE(v51) = v38;
    ServiceKind.localizedDescription.getter();
    v51 = sub_23E1FD768(v39, v40, &v52);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v37, type metadata accessor for AccessoryDetails);
    _os_log_impl(&dword_23E1DF000, v33, v34, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v36, -1, -1);
    MEMORY[0x24264FEBC](v35, -1, -1);
  }
  else
  {
    sub_23E1E2FA0(v32, type metadata accessor for AccessoryDetails);
  }

  return 0;
}

Swift::Bool __swiftcall AccessoryDetails.hasOnboardedForAccessCode()()
{
  return sub_23E4C669C((SEL *)&selRef_hasOnboardedForAccessCode);
}

void AccessoryDetails.hmHomeFromPayload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  _QWORD v12[2];
  uint64_t v13;
  char *v14;

  v13 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v13);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v14 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v12[1] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23E1E2F50(v0, (uint64_t)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)&loc_23E4C6338 + *((int *)qword_23E4C6680 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

id sub_23E4C6348()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  sub_23E1E2FDC(v0, v1, type metadata accessor for StaticAccessory);
  if (qword_254334098 != -1)
    swift_once();
  v2 = (void *)qword_254333F18;
  v3 = (void *)sub_23E536F44();
  v4 = objc_msgSend(v2, sel_accessoryFor_, v3);

  v5 = objc_msgSend(v4, sel_home);
  sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
  return v5;
}

Swift::Bool __swiftcall AccessoryDetails._hasOnboardedForWalletKey()()
{
  return sub_23E4C669C((SEL *)&selRef_hasOnboardedForWalletKey);
}

id sub_23E4C669C(SEL *a1)
{
  void *v2;
  void *v3;
  id v4;

  AccessoryDetails.hmHomeFromPayload.getter();
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(v2, *a1);

  return v4;
}

BOOL AccessoryDetails.shouldShowManageAccessForLocks.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  NSObject *v27;
  int v28;
  uint64_t v29;
  _BOOL4 v30;
  void *v31;
  void *v32;
  unsigned int v33;
  uint64_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  os_log_t v42;
  uint64_t v43;
  Swift::Bool v44;
  uint64_t v45;
  void *v46;
  void *v47;
  unsigned int v48;
  Swift::Bool v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v56;
  int v57;
  os_log_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67[3];

  v1 = v0;
  v2 = type metadata accessor for StaticUser();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v56 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v62 = (uint64_t)&v56 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v56 - v11;
  v13 = type metadata accessor for AccessoryDetails(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v63 = (char *)&v56 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v56 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v56 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v56 - v24;
  if (qword_256D3ED78 != -1)
    swift_once();
  v26 = sub_23E5371A8();
  __swift_project_value_buffer(v26, (uint64_t)qword_256D42C38);
  sub_23E1E2F50(v0, (uint64_t)v25, type metadata accessor for AccessoryDetails);
  sub_23E1E2F50(v0, (uint64_t)v23, type metadata accessor for AccessoryDetails);
  sub_23E1E2F50(v0, (uint64_t)v20, type metadata accessor for AccessoryDetails);
  v27 = sub_23E537190();
  v28 = sub_23E537B20();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    v57 = v28;
    v58 = v27;
    v59 = v2;
    v60 = v8;
    v61 = v5;
    v29 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v67[0] = v56;
    *(_DWORD *)v29 = 136316418;
    v66 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v67);
    sub_23E537CF4();
    *(_WORD *)(v29 + 12) = 2080;
    v66 = sub_23E1FD768(0xD00000000000001ELL, 0x800000023E56B2E0, v67);
    sub_23E537CF4();
    *(_WORD *)(v29 + 22) = 1024;
    v30 = AccessoryDetails.supportsAccessCodes()();
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for AccessoryDetails);
    LODWORD(v66) = v30;
    sub_23E537CF4();
    *(_WORD *)(v29 + 28) = 1024;
    AccessoryDetails.hmHomeFromPayload.getter();
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, sel_hasOnboardedForAccessCode);

    }
    else
    {
      v33 = 0;
    }
    sub_23E1E2FA0((uint64_t)v23, type metadata accessor for AccessoryDetails);
    LODWORD(v66) = v33;
    sub_23E537CF4();
    *(_WORD *)(v29 + 34) = 1024;
    v35 = AccessoryDetails.accessoryIsReachable()();
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for AccessoryDetails);
    LODWORD(v66) = v35;
    sub_23E537CF4();
    *(_WORD *)(v29 + 40) = 1024;
    if (qword_254334098 != -1)
      swift_once();
    v36 = qword_254333F18;
    swift_getKeyPath();
    v66 = v36;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    v37 = v36 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    v38 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
    v39 = type metadata accessor for StaticHome();
    sub_23E1E2F50(v37 + v38 + *(int *)(v39 + 28), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v2 = v59;
    LODWORD(v38) = v12[*(int *)(v59 + 28)];
    v40 = v62;
    sub_23E1E2F50((uint64_t)v12, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v8 = v60;
    v5 = v61;
    if ((_DWORD)v38)
      v41 = *(unsigned __int8 *)(v40 + *(int *)(v2 + 28)) == 1;
    else
      v41 = 1;
    v34 = (uint64_t)v63;
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v65 = v41;
    sub_23E537CF4();
    v42 = v58;
    _os_log_impl(&dword_23E1DF000, v58, (os_log_type_t)v57, "%s - %s: supportsAccessCodes: %{BOOL}d hasOnboardedForAccessCode: %{BOOL}d, accessoryIsReachable: %{BOOL}d, userCanEdit: %{BOOL}d", (uint8_t *)v29, 0x2Eu);
    v43 = v56;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v43, -1, -1);
    MEMORY[0x24264FEBC](v29, -1, -1);

  }
  else
  {
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for AccessoryDetails);
    sub_23E1E2FA0((uint64_t)v23, type metadata accessor for AccessoryDetails);
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for AccessoryDetails);

    v34 = (uint64_t)v63;
  }
  v44 = AccessoryDetails.supportsAccessCodes()();
  sub_23E1E2F50(v1, v34, type metadata accessor for AccessoryDetails);
  v45 = (uint64_t)v64;
  if (!v44 || (AccessoryDetails.hmHomeFromPayload.getter(), !v46))
  {
    sub_23E1E2FA0(v34, type metadata accessor for AccessoryDetails);
    sub_23E1E2F50(v1, v45, type metadata accessor for AccessoryDetails);
    goto LABEL_23;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, sel_hasOnboardedForAccessCode);

  sub_23E1E2FA0(v34, type metadata accessor for AccessoryDetails);
  sub_23E1E2F50(v1, v45, type metadata accessor for AccessoryDetails);
  if (!v48)
  {
LABEL_23:
    sub_23E1E2FA0(v45, type metadata accessor for AccessoryDetails);
    return 0;
  }
  v49 = AccessoryDetails.accessoryIsReachable()();
  sub_23E1E2FA0(v45, type metadata accessor for AccessoryDetails);
  if (!v49)
    return 0;
  if (qword_254334098 != -1)
    swift_once();
  v50 = qword_254333F18;
  swift_getKeyPath();
  v67[0] = v50;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v51 = v50 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v52 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v53 = type metadata accessor for StaticHome();
  sub_23E1E2F50(v51 + v52 + *(int *)(v53 + 28), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  LODWORD(v52) = v8[*(int *)(v2 + 28)];
  sub_23E1E2F50((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  if ((_DWORD)v52)
    v54 = v5[*(int *)(v2 + 28)] == 1;
  else
    v54 = 1;
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  return v54;
}

Swift::Bool __swiftcall AccessoryDetails.accessoryIsReachable()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  Swift::Bool result;
  _QWORD v13[3];
  uint64_t v14;

  v1 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v3);
  v13[2] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v14);
  v13[1] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23E1E2F50(v0, (uint64_t)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)&loc_23E4C705C + *((int *)qword_23E4C7360 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
  return result;
}

id sub_23E4C706C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;

  sub_23E1E2FDC(v0, v1, type metadata accessor for StaticAccessory);
  if (qword_254334098 != -1)
    swift_once();
  v2 = (void *)qword_254333F18;
  v3 = (void *)sub_23E536F44();
  v4 = objc_msgSend(v2, sel_accessoryFor_, v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, sel_isReachable);

  }
  else
  {
    v5 = 0;
  }
  sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
  return v5;
}

id AccessoryDetails.shouldShowAddHomeKeyToWallet.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _BOOL4 v23;
  void *v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  Swift::Bool v28;
  void *v29;
  void *v30;
  id v31;
  char *v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v33 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v33 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  v14 = (void *)sub_23E537538();
  v15 = (void *)MGGetStringAnswer();

  if (v15)
  {
    v16 = v15;
    if (sub_23E5375B0() == 0x656E6F685069 && v17 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease();
      v18 = 1;
    }
    else
    {
      v18 = sub_23E538354();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v18 = 0;
  }
  if (qword_256D3ED78 != -1)
    swift_once();
  v19 = sub_23E5371A8();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D42C38);
  sub_23E1E2F50(v1, (uint64_t)v13, type metadata accessor for AccessoryDetails);
  sub_23E1E2F50(v1, (uint64_t)v11, type metadata accessor for AccessoryDetails);
  v20 = sub_23E537190();
  v21 = sub_23E537B20();
  if (os_log_type_enabled(v20, v21))
  {
    v36 = v8;
    v33 = v5;
    v22 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v38 = v34;
    *(_DWORD *)v22 = 136316162;
    v37 = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, &v38);
    sub_23E537CF4();
    *(_WORD *)(v22 + 12) = 2080;
    v37 = sub_23E1FD768(0xD00000000000001CLL, 0x800000023E56B300, &v38);
    sub_23E537CF4();
    *(_WORD *)(v22 + 22) = 1024;
    v35 = v18;
    LODWORD(v37) = v18 & 1;
    sub_23E537CF4();
    *(_WORD *)(v22 + 28) = 1024;
    v23 = AccessoryDetails.accessorySupportsWalletKey()();
    sub_23E1E2FA0((uint64_t)v13, type metadata accessor for AccessoryDetails);
    LODWORD(v37) = v23;
    sub_23E537CF4();
    *(_WORD *)(v22 + 34) = 1024;
    AccessoryDetails.hmHomeFromPayload.getter();
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, sel_hasOnboardedForWalletKey);

    }
    else
    {
      v26 = 0;
    }
    v5 = v33;
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for AccessoryDetails);
    LODWORD(v37) = v26;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v20, v21, "%s - %s: isIphone: %{BOOL}d accessorySupportsWalletKey: %{BOOL}d, _hasOnboardedForWalletKey: %{BOOL}d", (uint8_t *)v22, 0x28u);
    v27 = v34;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v27, -1, -1);
    MEMORY[0x24264FEBC](v22, -1, -1);

    v8 = v36;
    LOBYTE(v18) = v35;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for AccessoryDetails);
    sub_23E1E2FA0((uint64_t)v13, type metadata accessor for AccessoryDetails);

  }
  sub_23E1E2F50(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails);
  if ((v18 & 1) == 0)
  {
    sub_23E1E2FA0((uint64_t)v8, type metadata accessor for AccessoryDetails);
    sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails);
LABEL_20:
    v31 = 0;
    goto LABEL_21;
  }
  v28 = AccessoryDetails.accessorySupportsWalletKey()();
  sub_23E1E2FA0((uint64_t)v8, type metadata accessor for AccessoryDetails);
  sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails);
  if (!v28)
    goto LABEL_20;
  AccessoryDetails.hmHomeFromPayload.getter();
  if (!v29)
    goto LABEL_20;
  v30 = v29;
  v31 = objc_msgSend(v29, sel_hasOnboardedForWalletKey);

LABEL_21:
  sub_23E1E2FA0((uint64_t)v5, type metadata accessor for AccessoryDetails);
  return v31;
}

uint64_t AccessoryDetails.turnOnPairingMode()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[17] = v0;
  v2 = type metadata accessor for StaticEndpoint();
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = type metadata accessor for StaticService();
  v1[22] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[23] = swift_task_alloc();
  v1[24] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E4C7938()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[25];
  v2 = v0[17];
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[19] + 56))(v0[27], 1, 1, v0[18]);
  sub_23E1E2F50(v2, v1, type metadata accessor for AccessoryDetails.Payload);
  v3 = (char *)sub_23E4C79B0 + 4 * byte_23E558324[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4C79B0()
{
  uint64_t *v0;

  sub_23E1E2FDC(v0[25], v0[23], type metadata accessor for StaticAccessory);
  v0[28] = sub_23E5378F8();
  v0[29] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C7BDC()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C7C40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C7CA0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 248) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C7CE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 256) = sub_23E536F44();
  *(_QWORD *)(v0 + 264) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C7D54()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[32];
  v2 = (void *)v0[31];
  swift_release();
  v0[34] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4C7DB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 184), type metadata accessor for StaticAccessory);
  v1 = *(void **)(v0 + 272);
  *(_QWORD *)(v0 + 336) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E4C8324;
    v2 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v3 = (_QWORD *)(v0 + 80);
    v3[1] = 0x40000000;
    v3[2] = sub_23E2CAE98;
    v3[3] = &block_descriptor_7;
    v3[4] = v2;
    objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v3);
    return swift_continuation_await();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    sub_23E1E7C20(*(_QWORD *)(v0 + 216), v5, &qword_256D3F450);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      v8 = *(_QWORD *)(v0 + 208);
      sub_23E1E7C64(*(_QWORD *)(v0 + 216), &qword_256D3F450);
      sub_23E1E7C64(v8, &qword_256D3F450);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
    }
    else
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v9;
      *v9 = v0;
      v9[1] = sub_23E4C842C;
      return StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()();
    }
  }
}

uint64_t sub_23E4C7F7C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C7FE0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C8040()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 304) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C8088()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 312) = sub_23E536F44();
  *(_QWORD *)(v0 + 320) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C80FC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[39];
  v2 = (void *)v0[38];
  swift_release();
  v0[41] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4C8160()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 176), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v1 = *(void **)(v0 + 328);
  *(_QWORD *)(v0 + 336) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E4C8324;
    v2 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v3 = (_QWORD *)(v0 + 80);
    v3[1] = 0x40000000;
    v3[2] = sub_23E2CAE98;
    v3[3] = &block_descriptor_7;
    v3[4] = v2;
    objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v3);
    return swift_continuation_await();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    sub_23E1E7C20(*(_QWORD *)(v0 + 216), v5, &qword_256D3F450);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      v8 = *(_QWORD *)(v0 + 208);
      sub_23E1E7C64(*(_QWORD *)(v0 + 216), &qword_256D3F450);
      sub_23E1E7C64(v8, &qword_256D3F450);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
    }
    else
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v9;
      *v9 = v0;
      v9[1] = sub_23E4C842C;
      return StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()();
    }
  }
}

uint64_t sub_23E4C8324()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 344) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4C8384()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 216);

  sub_23E1E7C64(v2, &qword_256D3F450);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v3);
}

uint64_t sub_23E4C842C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 360) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 368) = a2;
    *(_QWORD *)(v6 + 376) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23E4C84A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E7C64(v1, &qword_256D3F450);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_23E4C8550()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 336);
  v1 = *(void **)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 216);
  swift_willThrow();

  sub_23E1E7C64(v3, &qword_256D3F450);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_23E4C85FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 216);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E7C64(v2, &qword_256D3F450);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t AccessoryDetails.removeAccessoryFromAppleHome()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[44] = v0;
  type metadata accessor for StaticServiceGroup();
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for StaticService();
  v1[47] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[48] = swift_task_alloc();
  v1[49] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[50] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E4C8768()
{
  uint64_t v0;
  char *v1;

  sub_23E1E2F50(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 400), type metadata accessor for AccessoryDetails.Payload);
  v1 = (char *)sub_23E4C87C0 + 4 * byte_23E558328[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4C87C0()
{
  uint64_t *v0;

  sub_23E1E2FDC(v0[50], v0[48], type metadata accessor for StaticAccessory);
  v0[51] = sub_23E5378F8();
  v0[52] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C8930()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C8994()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 424) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C89F4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 432) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C8A3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 440) = sub_23E536F44();
  *(_QWORD *)(v0 + 448) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C8AA8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[55];
  v2 = (void *)v0[54];
  swift_release();
  v0[57] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4C8B0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;

  v1 = *(void **)(v0 + 456);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 464) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)(v0 + 456);
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_23E4C8C38;
      v5 = swift_continuation_init();
      *(_QWORD *)(v0 + 208) = MEMORY[0x24BDAC760];
      v6 = (_QWORD *)(v0 + 208);
      v6[1] = 0x40000000;
      v6[2] = sub_23E267484;
      v6[3] = &block_descriptor_10_0;
      v6[4] = v5;
      objc_msgSend(v3, sel_removeAccessory_completionHandler_, v4, v6);
      return swift_continuation_await();
    }
    v8 = *(void **)(v0 + 456);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 384), type metadata accessor for StaticAccessory);

  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 384), type metadata accessor for StaticAccessory);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C8C38()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 472) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_23E4C8C98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 384);

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C8D10()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C8D74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 496) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C8DD4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 504) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C8E1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 512) = sub_23E536F44();
  *(_QWORD *)(v0 + 520) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C8E90()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[63];
  v2 = (void *)v0[64];
  swift_release();
  v0[66] = objc_msgSend(v1, sel_accessoryFor_, v2);

  return swift_task_switch();
}

uint64_t sub_23E4C8EF4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;

  v1 = *(void **)(v0 + 528);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 536) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)(v0 + 528);
      *(_QWORD *)(v0 + 144) = v0;
      *(_QWORD *)(v0 + 152) = sub_23E4C9020;
      v5 = swift_continuation_init();
      *(_QWORD *)(v0 + 248) = MEMORY[0x24BDAC760];
      v6 = (_QWORD *)(v0 + 248);
      v6[1] = 0x40000000;
      v6[2] = sub_23E267484;
      v6[3] = &block_descriptor_9;
      v6[4] = v5;
      objc_msgSend(v3, sel_removeAccessory_completionHandler_, v4, v6);
      return swift_continuation_await();
    }
    v8 = *(void **)(v0 + 528);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);

  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 376), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C9020()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 544) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_23E4C9080()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 536);
  v2 = *(_QWORD *)(v0 + 376);

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C90FC()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4C9160()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 568) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C91C0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 576) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4C9208()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 584) = sub_23E536F44();
  *(_QWORD *)(v0 + 592) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4C9274()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[73];
  v2 = (void *)v0[72];
  swift_release();
  v0[75] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return swift_task_switch();
}

void sub_23E4C92DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 600);
  if (!v1)
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = objc_msgSend(v1, sel_services);
  sub_23E1ED0A8();
  v3 = sub_23E5377F0();

  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v10 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_13:
    v11 = *(void **)(v0 + 600);
    v12 = *(_QWORD *)(v0 + 360);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);

    goto LABEL_14;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24264F148](0, v3);
LABEL_7:
    v5 = v4;
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v5, sel_accessory);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_home);
      *(_QWORD *)(v0 + 608) = v7;

      if (v7)
      {
        v8 = *(_QWORD *)(v0 + 600);
        *(_QWORD *)(v0 + 16) = v0;
        *(_QWORD *)(v0 + 24) = sub_23E4C9510;
        *(_QWORD *)(v0 + 320) = swift_continuation_init();
        *(_QWORD *)(v0 + 288) = MEMORY[0x24BDAC760];
        *(_QWORD *)(v0 + 296) = 0x40000000;
        *(_QWORD *)(v0 + 304) = sub_23E267484;
        *(_QWORD *)(v0 + 312) = &block_descriptor_8;
        objc_msgSend(v7, sel_removeServiceGroup_completionHandler_, v8, v0 + 288);
        swift_continuation_await();
        return;
      }
    }
    v9 = *(void **)(v0 + 600);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 360), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);

    goto LABEL_14;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_23E4C9510()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 616) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4C9570()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 608);
  v2 = *(_QWORD *)(v0 + 360);

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C95EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15[2];

  v1 = *(void **)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 384);
  swift_willThrow();

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  v3 = *(void **)(v0 + 472);

  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = v3;
  v6 = v3;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15[0] = v11;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v0 + 336) = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 328) = sub_23E1FD768(0xD00000000000001ELL, 0x800000023E56B320, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v3;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 344) = v13;
    sub_23E537CF4();
    *v10 = v13;

    _os_log_impl(&dword_23E1DF000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C98CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15[2];

  v1 = *(void **)(v0 + 528);
  v2 = *(_QWORD *)(v0 + 376);
  swift_willThrow();

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v3 = *(void **)(v0 + 544);

  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = v3;
  v6 = v3;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15[0] = v11;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v0 + 336) = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 328) = sub_23E1FD768(0xD00000000000001ELL, 0x800000023E56B320, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v3;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 344) = v13;
    sub_23E537CF4();
    *v10 = v13;

    _os_log_impl(&dword_23E1DF000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4C9BB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15[2];

  v1 = *(void **)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 360);
  swift_willThrow();

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v3 = *(void **)(v0 + 616);

  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = v3;
  v6 = v3;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15[0] = v11;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v0 + 336) = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 328) = sub_23E1FD768(0xD00000000000001ELL, 0x800000023E56B320, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v3;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 344) = v13;
    sub_23E537CF4();
    *v10 = v13;

    _os_log_impl(&dword_23E1DF000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AccessoryDetails.removeAccessoryFromAllEcosystems()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[31] = v0;
  v1[32] = type metadata accessor for StaticService();
  v1[33] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[34] = swift_task_alloc();
  v1[35] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E4C9F34()
{
  uint64_t v0;
  int EnumCaseMultiPayload;

  sub_23E1E2F50(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 288), type metadata accessor for AccessoryDetails.Payload);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      *(_QWORD *)(v0 + 368) = sub_23E5378F8();
      *(_QWORD *)(v0 + 376) = sub_23E5378EC();
    }
    else
    {
      sub_23E1E2FDC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272), type metadata accessor for StaticAccessory);
      *(_QWORD *)(v0 + 296) = sub_23E5378F8();
      *(_QWORD *)(v0 + 304) = sub_23E5378EC();
    }
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 288), type metadata accessor for AccessoryDetails.Payload);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E4CA080()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4CA0E4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 312) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4CA144()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 320) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4CA18C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = sub_23E536F44();
  *(_QWORD *)(v0 + 336) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4CA1F8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[41];
  v2 = (void *)v0[40];
  swift_release();
  v0[43] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4CA25C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;

  v1 = *(void **)(v0 + 344);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 352) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)(v0 + 344);
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_23E4CA37C;
      v5 = swift_continuation_init();
      *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
      v6 = (_QWORD *)(v0 + 144);
      v6[1] = 0x40000000;
      v6[2] = sub_23E267484;
      v6[3] = &block_descriptor_12_3;
      v6[4] = v5;
      objc_msgSend(v3, sel_resetAndRemoveAllCHIPPairingsFromAccessory_completion_, v4, v6);
      return swift_continuation_await();
    }
    v8 = *(void **)(v0 + 344);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 272), type metadata accessor for StaticAccessory);

  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 272), type metadata accessor for StaticAccessory);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4CA37C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 360) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_23E4CA3DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 352);
  v2 = *(_QWORD *)(v0 + 272);

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4CA440()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4CA4A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 384) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4CA504()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 392) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4CA54C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 400) = sub_23E536F44();
  *(_QWORD *)(v0 + 408) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4CA5C0()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[50];
  v2 = (void *)v0[49];
  swift_release();
  v0[52] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4CA624()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;

  v1 = *(void **)(v0 + 416);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 424) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)(v0 + 416);
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23E4CA744;
      v5 = swift_continuation_init();
      *(_QWORD *)(v0 + 184) = MEMORY[0x24BDAC760];
      v6 = (_QWORD *)(v0 + 184);
      v6[1] = 0x40000000;
      v6[2] = sub_23E267484;
      v6[3] = &block_descriptor_11;
      v6[4] = v5;
      objc_msgSend(v3, sel_resetAndRemoveAllCHIPPairingsFromAccessory_completion_, v4, v6);
      return swift_continuation_await();
    }
    v8 = *(void **)(v0 + 416);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);

  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4CA744()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 432) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4CA7A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 264);

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4CA808()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[2];

  v1 = *(void **)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 272);
  swift_willThrow();

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  v3 = *(void **)(v0 + 360);

  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = v3;
  v6 = v3;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15[0] = v14;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v0 + 224) = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 240) = sub_23E1FD768(0xD000000000000022, 0x800000023E56B340, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 22) = 2112;
    v11 = v3;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 232) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v14, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4CAAD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[2];

  v1 = *(void **)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 264);
  swift_willThrow();

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v3 = *(void **)(v0 + 432);

  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = v3;
  v6 = v3;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15[0] = v14;
    *(_DWORD *)v9 = 136315650;
    *(_QWORD *)(v0 + 224) = sub_23E1FD768(0xD000000000000024, 0x800000023E56B250, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 240) = sub_23E1FD768(0xD000000000000022, 0x800000023E56B340, v15);
    sub_23E537CF4();
    *(_WORD *)(v9 + 22) = 2112;
    v11 = v3;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 232) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v14, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL _s13HomeDataModel16AccessoryDetailsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v27;
  char *v28;

  v4 = type metadata accessor for StaticDeviceMetadata();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v27 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  _s13HomeDataModel16AccessoryDetailsV7PayloadO2eeoiySbAE_AEtFZ_0(a1, a2);
  if ((v20 & 1) == 0)
    return 0;
  v28 = v7;
  v21 = type metadata accessor for AccessoryDetails(0);
  if ((_s13HomeDataModel25AccessoryDetailsBasicInfoV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v21 + 20), a2 + *(int *)(v21 + 20)) & 1) == 0)return 0;
  sub_23E1E7C20(a1 + *(int *)(v21 + 24), (uint64_t)v19, &qword_2543332A8);
  sub_23E1E7C20(a2 + *(int *)(v21 + 24), (uint64_t)v17, &qword_2543332A8);
  v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E1E7C20((uint64_t)v19, (uint64_t)v10, &qword_2543332A8);
  sub_23E1E7C20((uint64_t)v17, v22, &qword_2543332A8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v19, &qword_2543332A8);
    if (v23(v22, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v10, &qword_2543332A8);
      return 1;
    }
    goto LABEL_8;
  }
  sub_23E1E7C20((uint64_t)v10, (uint64_t)v14, &qword_2543332A8);
  if (v23(v22, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v19, &qword_2543332A8);
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_8:
    sub_23E1E7C64((uint64_t)v10, &qword_2543332B0);
    return 0;
  }
  v24 = (uint64_t)v28;
  sub_23E1E2FDC(v22, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  v25 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v14, v24);
  sub_23E1E2FA0(v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64((uint64_t)v17, &qword_2543332A8);
  sub_23E1E7C64((uint64_t)v19, &qword_2543332A8);
  sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64((uint64_t)v10, &qword_2543332A8);
  return (v25 & 1) != 0;
}

void _s13HomeDataModel16AccessoryDetailsV7PayloadO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v2 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v2);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v4);
  v17[0] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for AccessoryDetails.Payload(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48FC8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v18, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryDetails.Payload);
  sub_23E1E2F50(v19, (uint64_t)v15, type metadata accessor for AccessoryDetails.Payload);
  v16 = (char *)sub_23E4CB2D0 + 4 * byte_23E55832C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4CB2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_23E1E2F50(v0, v2, type metadata accessor for AccessoryDetails.Payload);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
    sub_23E1E7C64(v0, &qword_256D48FC8);
    v4 = 0;
  }
  else
  {
    sub_23E1E2FDC(v1, v3, type metadata accessor for StaticAccessory);
    v4 = static StaticAccessory.== infix(_:_:)(v2, v3);
    sub_23E1E2FA0(v3, type metadata accessor for StaticAccessory);
    sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
    sub_23E1E2FA0(v0, type metadata accessor for AccessoryDetails.Payload);
  }
  return v4 & 1;
}

uint64_t sub_23E4CB4F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(void);
  unsigned int (*v101)(void);
  uint64_t v102;

  v1 = type metadata accessor for AccessoryDetails(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  type metadata accessor for AccessoryDetails.Payload(0);
  v102 = v1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v6(v0 + v2, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = v3 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = v3 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = v3 + v7[8];
      v35 = sub_23E536F20();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (!v37(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      v6(v3 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v3 + v7[21];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v38, 1, v4))
        v6(v38, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v3 + v7[26];
      v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
      {
        goto LABEL_40;
      }
      v6(v39, v4);
      v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v44 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v37(v44, 1, v35))
          (*(void (**)(unint64_t, uint64_t))(v36 + 8))(v44, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_40;
        v6(v41, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      v1 = v102;
      goto LABEL_41;
    case 1u:
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(v3, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v11(v3 + v12[10], v9);
      v13 = v3 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v11(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v3 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v100 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v100)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v3 + v12[24];
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v11(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
        goto LABEL_34;
      v11(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v98 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v100())
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v98, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v11(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v43 = v3 + v12[31];
      v1 = v102;
      if (!v19(v43, 1, v9))
        v11(v43, v9);
LABEL_41:
      v45 = v3 + *(int *)(v1 + 20);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v46 = sub_23E536F80();
          v47 = *(_QWORD *)(v46 - 8);
          v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
          v48(v45, v46);
          v49 = (int *)type metadata accessor for StaticAccessory(0);
          swift_bridgeObjectRelease();
          v50 = v45 + v49[6];
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          if (swift_getEnumCaseMultiPayload() == 1)
            v48(v50, v46);
          else
            swift_bridgeObjectRelease();
          v74 = v45 + v49[7];
          v75 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75))
          {
            v48(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v76 = v45 + v49[8];
          v77 = sub_23E536F20();
          v78 = *(_QWORD *)(v77 - 8);
          v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
          if (!v79(v76, 1, v77))
            (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
          v48(v45 + v49[11], v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80 = v45 + v49[21];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v80, 1, v46))
            v48(v80, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v81 = v45 + v49[26];
          v82 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82))
            goto LABEL_80;
          v48(v81, v46);
          v83 = v81 + *(int *)(v82 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          v84 = swift_getEnumCaseMultiPayload();
          if (v84 == 2 || v84 == 1)
          {
            swift_bridgeObjectRelease();
            v86 = v83 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v79(v86, 1, v77))
              (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v86, v77);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v84)
              goto LABEL_80;
            v48(v83, v46);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_80:
          swift_bridgeObjectRelease();
          v1 = v102;
          goto LABEL_81;
        case 1u:
          v51 = sub_23E536F80();
          v52 = *(_QWORD *)(v51 - 8);
          v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
          v53(v45, v51);
          v54 = (int *)type metadata accessor for StaticService();
          swift_bridgeObjectRelease();
          v53(v45 + v54[10], v51);
          v55 = v45 + v54[12];
          v56 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
          {
            v53(v55, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v57 = v45 + v54[13];
          v58 = sub_23E536F20();
          v59 = *(_QWORD *)(v58 - 8);
          v101 = *(unsigned int (**)(void))(v59 + 48);
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v101)(v57, 1, v58))
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 = v45 + v54[24];
          v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
          if (!v61(v60, 1, v51))
            v53(v60, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v45 + v54[28];
          v63 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63))
            goto LABEL_74;
          v53(v62, v51);
          v64 = v62 + *(int *)(v63 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          v65 = swift_getEnumCaseMultiPayload();
          if (v65 == 2 || v65 == 1)
          {
            swift_bridgeObjectRelease();
            v99 = v64 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v101())
              (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v99, v58);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v65)
              goto LABEL_74;
            v53(v64, v51);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_74:
          swift_bridgeObjectRelease();
          v85 = v45 + v54[31];
          v1 = v102;
          if (!v61(v85, 1, v51))
            v53(v85, v51);
LABEL_81:
          v87 = type metadata accessor for AccessoryDetailsBasicInfo();
          swift_bridgeObjectRelease();
          v88 = v45 + *(int *)(v87 + 24);
          v89 = type metadata accessor for StaticRoom(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
          {
            v90 = sub_23E536F80();
            v91 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8);
            v91(v88, v90);
            swift_bridgeObjectRelease();
            v92 = v88 + *(int *)(v89 + 28);
            v93 = type metadata accessor for StaticZone();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v92, 1, v93))
            {
              v91(v92, v90);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v91(v88 + *(int *)(v89 + 32), v90);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v1 = v102;
          }
          swift_bridgeObjectRelease();
          v94 = v3 + *(int *)(v1 + 24);
          v95 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95))
          {
            v96 = sub_23E536F80();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v94, v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          return swift_deallocObject();
        case 2u:
          v66 = sub_23E536F80();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v45, v66);
          type metadata accessor for StaticServiceGroup();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_81;
        case 3u:
          v67 = sub_23E536F80();
          v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
          v68(v45, v67);
          v69 = type metadata accessor for StaticEndpoint();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v68(v45 + *(int *)(v69 + 44), v67);
          swift_bridgeObjectRelease();
          v70 = v45 + *(int *)(v69 + 52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v71 = v70 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          v72 = sub_23E536F20();
          v73 = *(_QWORD *)(v72 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
          goto LABEL_81;
        default:
          goto LABEL_81;
      }
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v2, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(v3, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(v3 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = v3 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_41;
    default:
      goto LABEL_41;
  }
}

uint64_t sub_23E4CC598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryDetails(0) - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23E23D584;
  v4[2] = v3;
  return swift_task_switch();
}

unint64_t sub_23E4CC610()
{
  unint64_t result;

  result = qword_256D48D28;
  if (!qword_256D48D28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558CBC, &type metadata for AccessoryDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D28);
  }
  return result;
}

unint64_t sub_23E4CC664()
{
  unint64_t result;

  result = qword_256D48D70;
  if (!qword_256D48D70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558C6C, &type metadata for AccessoryDetails.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D70);
  }
  return result;
}

unint64_t sub_23E4CC6A8()
{
  unint64_t result;

  result = qword_256D48D78;
  if (!qword_256D48D78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558C1C, &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D78);
  }
  return result;
}

unint64_t sub_23E4CC6EC()
{
  unint64_t result;

  result = qword_256D48D80;
  if (!qword_256D48D80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558BCC, &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D80);
  }
  return result;
}

unint64_t sub_23E4CC730()
{
  unint64_t result;

  result = qword_256D48D88;
  if (!qword_256D48D88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558B7C, &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D88);
  }
  return result;
}

unint64_t sub_23E4CC774()
{
  unint64_t result;

  result = qword_256D48D90;
  if (!qword_256D48D90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558B2C, &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48D90);
  }
  return result;
}

uint64_t sub_23E4CC7B8()
{
  return sub_23E1EE1C4(&qword_256D48DE0, type metadata accessor for AccessoryDetails, (uint64_t)&protocol conformance descriptor for AccessoryDetails);
}

uint64_t sub_23E4CC7E4()
{
  return sub_23E1EE1C4(&qword_256D48DE8, type metadata accessor for AccessoryDetails.Payload, (uint64_t)&protocol conformance descriptor for AccessoryDetails.Payload);
}

uint64_t dispatch thunk of Committable.commit()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return v7(a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for AccessoryDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for AccessoryDetails.Payload(0);
    v5 = (char *)&loc_23E4CC8F4 + 4 * byte_23E558338[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for AccessoryDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t result;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(void);
  unsigned int (*v102)(void);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = a1 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      v103 = a2;
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = a1 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = a1 + v7[8];
      v35 = sub_23E536F20();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (!v37(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      v6(a1 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = a1 + v7[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v38, 1, v4))
        v6(v38, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + v7[26];
      v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
        goto LABEL_40;
      v6(v39, v4);
      v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v44 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v37(v44, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v44, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_40;
        v6(v41, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      a2 = v103;
      goto LABEL_41;
    case 1u:
      v104 = a2;
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(a1, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v11(a1 + v12[10], v9);
      v13 = a1 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v11(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = a1 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v101 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v101)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = a1 + v12[24];
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v11(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = a1 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
        goto LABEL_34;
      v11(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v99 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v101())
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v99, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v11(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v43 = a1 + v12[31];
      a2 = v104;
      if (!v19(v43, 1, v9))
        v11(v43, v9);
LABEL_41:
      v45 = a1 + *(int *)(a2 + 20);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v46 = sub_23E536F80();
          v47 = *(_QWORD *)(v46 - 8);
          v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
          v48(v45, v46);
          v49 = (int *)type metadata accessor for StaticAccessory(0);
          swift_bridgeObjectRelease();
          v50 = v45 + v49[6];
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          v105 = a2;
          if (swift_getEnumCaseMultiPayload() == 1)
            v48(v50, v46);
          else
            swift_bridgeObjectRelease();
          v74 = v45 + v49[7];
          v75 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75))
          {
            v48(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v76 = v45 + v49[8];
          v77 = sub_23E536F20();
          v78 = *(_QWORD *)(v77 - 8);
          v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
          if (!v79(v76, 1, v77))
            (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
          v48(v45 + v49[11], v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80 = v45 + v49[21];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v80, 1, v46))
            v48(v80, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v81 = v45 + v49[26];
          v82 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82))
            goto LABEL_80;
          v48(v81, v46);
          v83 = v81 + *(int *)(v82 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          v84 = swift_getEnumCaseMultiPayload();
          if (v84 == 2 || v84 == 1)
          {
            swift_bridgeObjectRelease();
            v86 = v83 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v79(v86, 1, v77))
              (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v86, v77);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v84)
              goto LABEL_80;
            v48(v83, v46);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_80:
          swift_bridgeObjectRelease();
          a2 = v105;
          goto LABEL_81;
        case 1u:
          v106 = a2;
          v51 = sub_23E536F80();
          v52 = *(_QWORD *)(v51 - 8);
          v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
          v53(v45, v51);
          v54 = (int *)type metadata accessor for StaticService();
          swift_bridgeObjectRelease();
          v53(v45 + v54[10], v51);
          v55 = v45 + v54[12];
          v56 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
          {
            v53(v55, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v57 = v45 + v54[13];
          v58 = sub_23E536F20();
          v59 = *(_QWORD *)(v58 - 8);
          v102 = *(unsigned int (**)(void))(v59 + 48);
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v102)(v57, 1, v58))
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 = v45 + v54[24];
          v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
          if (!v61(v60, 1, v51))
            v53(v60, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = v45 + v54[28];
          v63 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63))
            goto LABEL_74;
          v53(v62, v51);
          v64 = v62 + *(int *)(v63 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          v65 = swift_getEnumCaseMultiPayload();
          if (v65 == 2 || v65 == 1)
          {
            swift_bridgeObjectRelease();
            v100 = v64 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v102())
              (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v100, v58);
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v65)
              goto LABEL_74;
            v53(v64, v51);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_74:
          swift_bridgeObjectRelease();
          v85 = v45 + v54[31];
          a2 = v106;
          if (!v61(v85, 1, v51))
            v53(v85, v51);
LABEL_81:
          v87 = type metadata accessor for AccessoryDetailsBasicInfo();
          swift_bridgeObjectRelease();
          v88 = v45 + *(int *)(v87 + 24);
          v89 = type metadata accessor for StaticRoom(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
          {
            v90 = a2;
            v91 = sub_23E536F80();
            v92 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8);
            v92(v88, v91);
            swift_bridgeObjectRelease();
            v93 = v88 + *(int *)(v89 + 28);
            v94 = type metadata accessor for StaticZone();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v93, 1, v94))
            {
              v92(v93, v91);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v92(v88 + *(int *)(v89 + 32), v91);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v90;
          }
          swift_bridgeObjectRelease();
          v95 = a1 + *(int *)(a2 + 24);
          v96 = type metadata accessor for StaticDeviceMetadata();
          result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v95, 1, v96);
          if (!(_DWORD)result)
          {
            v98 = sub_23E536F80();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v95, v98);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          return result;
        case 2u:
          v66 = sub_23E536F80();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v45, v66);
          type metadata accessor for StaticServiceGroup();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_81;
        case 3u:
          v67 = sub_23E536F80();
          v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
          v68(v45, v67);
          v69 = type metadata accessor for StaticEndpoint();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v68(v45 + *(int *)(v69 + 44), v67);
          swift_bridgeObjectRelease();
          v70 = v45 + *(int *)(v69 + 52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v71 = v70 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          v72 = sub_23E536F20();
          v73 = *(_QWORD *)(v72 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
          goto LABEL_81;
        default:
          goto LABEL_81;
      }
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_41;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(a1, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(a1 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = a1 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_41;
    default:
      goto LABEL_41;
  }
}

void initializeWithCopy for AccessoryDetails()
{
  char *v0;

  type metadata accessor for AccessoryDetails.Payload(0);
  v0 = (char *)sub_23E4D0324 + 4 * byte_23E558348[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4D0324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, _QWORD, uint64_t, int *);
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  unsigned int (*v81)(const void *, uint64_t, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  int *updated;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(const void *, uint64_t, uint64_t);
  uint64_t v144;

  v26 = sub_23E536F80();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  v28(v24, v23, v26);
  v29 = (int *)type metadata accessor for StaticAccessory(0);
  v30 = v29[5];
  v31 = (_QWORD *)(v24 + v30);
  v32 = (_QWORD *)(v23 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v29[6];
  v35 = (_QWORD *)(v24 + v34);
  v36 = (_QWORD *)(v23 + v34);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)(v25 - 88) = v27;
  if (EnumCaseMultiPayload == 1)
  {
    v28((uint64_t)v35, (uint64_t)v36, v26);
  }
  else
  {
    v38 = v36[1];
    *v35 = *v36;
    v35[1] = v38;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v39 = v29[7];
  v40 = (char *)(v24 + v39);
  v41 = (char *)(v23 + v39);
  v42 = (int *)type metadata accessor for StaticDeviceMetadata();
  v43 = *((_QWORD *)v42 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v28((uint64_t)v40, (uint64_t)v41, v26);
    v45 = v42[5];
    v46 = &v40[v45];
    v47 = &v41[v45];
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v49 = v42[6];
    v50 = &v40[v49];
    v51 = &v41[v49];
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v53 = v42[7];
    v54 = &v40[v53];
    v55 = &v41[v53];
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    v57 = v42[8];
    v58 = &v40[v57];
    v59 = &v41[v57];
    v60 = *((_QWORD *)v59 + 1);
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *((_QWORD *)v58 + 1) = v60;
    v40[v42[9]] = v41[v42[9]];
    v40[v42[10]] = v41[v42[10]];
    v40[v42[11]] = v41[v42[11]];
    v61 = *(void (**)(char *, _QWORD, uint64_t, int *))(v43 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = *(_QWORD *)(v25 - 96);
    swift_bridgeObjectRetain();
    v61(v40, 0, 1, v42);
  }
  v62 = v29[8];
  v63 = *(_QWORD *)(v25 - 104);
  v64 = (void *)(v63 + v62);
  v65 = (const void *)(v23 + v62);
  v66 = sub_23E536F20();
  v67 = *(_QWORD *)(v66 - 8);
  v143 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48);
  v144 = v66;
  v142 = v67;
  if (v143(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  v69 = v29[9];
  v70 = v63 + v69;
  v71 = *(_QWORD *)(v25 - 96);
  v72 = v71 + v69;
  *(_QWORD *)v70 = *(_QWORD *)v72;
  *(_BYTE *)(v70 + 8) = *(_BYTE *)(v72 + 8);
  *(_BYTE *)(v63 + v29[10]) = *(_BYTE *)(v71 + v29[10]);
  v28(v63 + v29[11], v71 + v29[11], v26);
  *(_QWORD *)(v63 + v29[12]) = *(_QWORD *)(v71 + v29[12]);
  v73 = v29[13];
  v74 = (_QWORD *)(v63 + v73);
  v75 = (_QWORD *)(v71 + v73);
  v76 = v75[1];
  *v74 = *v75;
  v74[1] = v76;
  *(_BYTE *)(v63 + v29[14]) = *(_BYTE *)(v71 + v29[14]);
  *(_BYTE *)(v63 + v29[15]) = *(_BYTE *)(v71 + v29[15]);
  *(_BYTE *)(v63 + v29[16]) = *(_BYTE *)(v71 + v29[16]);
  *(_BYTE *)(v63 + v29[17]) = *(_BYTE *)(v71 + v29[17]);
  *(_BYTE *)(v63 + v29[18]) = *(_BYTE *)(v71 + v29[18]);
  *(_QWORD *)(v63 + v29[19]) = *(_QWORD *)(v71 + v29[19]);
  *(_QWORD *)(v63 + v29[20]) = *(_QWORD *)(v71 + v29[20]);
  v77 = v29[21];
  v78 = (void *)(v63 + v77);
  v79 = (const void *)(v71 + v77);
  v80 = *(_QWORD *)(v25 - 88);
  v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v82 = (void (*)(char *, char *, uint64_t))v28;
  if (v81(v79, 1, v26))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v28((uint64_t)v78, (uint64_t)v79, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v78, 0, 1, v26);
  }
  v84 = *(_QWORD *)(v25 - 104);
  v85 = *(_QWORD *)(v25 - 96);
  *(_WORD *)(v84 + v29[22]) = *(_WORD *)(v85 + v29[22]);
  v86 = v29[23];
  v87 = (_QWORD *)(v84 + v86);
  v88 = (_QWORD *)(v85 + v86);
  v89 = v88[1];
  *v87 = *v88;
  v87[1] = v89;
  *(_QWORD *)(v84 + v29[24]) = *(_QWORD *)(v85 + v29[24]);
  *(_BYTE *)(v84 + v29[25]) = *(_BYTE *)(v85 + v29[25]);
  v90 = v29[26];
  v91 = (char *)(v84 + v90);
  v92 = (char *)(v85 + v90);
  v93 = type metadata accessor for StaticSoftwareUpdate(0);
  v94 = *(_QWORD *)(v93 - 8);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v95(v92, 1, v93))
  {
    v82(v91, v92, v26);
    v99 = *(int *)(v93 + 20);
    v100 = &v91[v99];
    v101 = &v92[v99];
    v102 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v103 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)(v25 - 88) = v91;
    v141 = v94;
    if (v103 == 2)
    {
      v113 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v113;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v115 = updated[5];
      v116 = &v100[v115];
      v117 = &v101[v115];
      swift_bridgeObjectRetain();
      if (v143(v117, 1, v144))
      {
LABEL_22:
        v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
LABEL_26:
        v97 = *(_QWORD *)(v25 - 96);
        v121 = updated[6];
        v122 = &v100[v121];
        v123 = &v101[v121];
        v124 = *((_QWORD *)v123 + 1);
        *(_QWORD *)v122 = *(_QWORD *)v123;
        *((_QWORD *)v122 + 1) = v124;
        v125 = updated[7];
        v126 = &v100[v125];
        v127 = &v101[v125];
        v128 = *((_QWORD *)v127 + 1);
        *(_QWORD *)v126 = *(_QWORD *)v127;
        *((_QWORD *)v126 + 1) = v128;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v100[*(int *)(v129 + 48)] = v101[*(int *)(v129 + 48)];
        swift_storeEnumTagMultiPayload();
        v98 = *(_QWORD *)(v25 - 104);
LABEL_27:
        (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v141 + 56))(*(_QWORD *)(v25 - 88), 0, 1, v93);
        goto LABEL_28;
      }
    }
    else
    {
      if (v103 != 1)
      {
        if (v103)
        {
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v82(v100, v101, v26);
          v104 = (int *)type metadata accessor for StaticHH2Update(0);
          v100[v104[5]] = v101[v104[5]];
          v105 = v104[6];
          v106 = &v100[v105];
          v107 = &v101[v105];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          *(_QWORD *)v106 = v109;
          *((_QWORD *)v106 + 1) = v108;
          v110 = v104[7];
          v111 = &v100[v110];
          v112 = &v101[v110];
          v111[8] = v112[8];
          *(_QWORD *)v111 = *(_QWORD *)v112;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        v98 = *(_QWORD *)(v25 - 104);
        v97 = *(_QWORD *)(v25 - 96);
        goto LABEL_27;
      }
      v118 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v118;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v119 = updated[5];
      v116 = &v100[v119];
      v117 = &v101[v119];
      swift_bridgeObjectRetain();
      if (v143(v117, 1, v144))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v116, v117, v144);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v116, 0, 1, v144);
    goto LABEL_26;
  }
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  v98 = *(_QWORD *)(v25 - 104);
  v97 = *(_QWORD *)(v25 - 96);
LABEL_28:
  *(_BYTE *)(v98 + v29[27]) = *(_BYTE *)(v97 + v29[27]);
  *(_BYTE *)(v98 + v29[28]) = *(_BYTE *)(v97 + v29[28]);
  *(_QWORD *)(v98 + v29[29]) = *(_QWORD *)(v97 + v29[29]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v130 = v97 + *(int *)(a23 + 20);
  v131 = swift_getEnumCaseMultiPayload();
  v132 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23E4D1598 + 4 * byte_23E55834C[v131]);
  *(_QWORD *)(v25 - 88) = v130;
  return v132(v131, v133, v134, v135, v136, v137, v138, v139, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_23E4D1598(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__dst, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, _QWORD, uint64_t, int *);
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const void *v93;
  void (*v94)(char *, char *, uint64_t);
  unsigned int (*v95)(const void *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  int EnumCaseMultiPayload;
  char *v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  int *updated;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  int *v153;
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, int *);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unsigned int (*v167)(char *, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  void (*v173)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  int *v181;
  uint64_t v182;
  unsigned int (*v183)(char *, uint64_t, int *);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  void (*v202)(char *, _QWORD, uint64_t, int *);
  uint64_t v204;
  unsigned int (*v205)(const void *, uint64_t, uint64_t);
  uint64_t v206;
  void (*v207)(char *, char *, uint64_t);
  char *v208;
  uint64_t v209;
  char *v210;
  void (*v211)(char *, char *, uint64_t);
  uint64_t v212;
  void (*v213)(char *, _QWORD, uint64_t, int *);
  uint64_t v214;
  uint64_t v215;

  v41 = sub_23E536F80();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = v38;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16);
  v44(v39, v43, v41);
  v45 = (int *)type metadata accessor for StaticAccessory(0);
  v46 = v45[5];
  v47 = (_QWORD *)(v39 + v46);
  v48 = (_QWORD *)(v43 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v45[6];
  v51 = (_QWORD *)(v39 + v50);
  v52 = (_QWORD *)(v43 + v50);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  v209 = v42;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v44((uint64_t)v51, (uint64_t)v52, v41);
  }
  else
  {
    v53 = v52[1];
    *v51 = *v52;
    v51[1] = v53;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v54 = v45[7];
  v55 = (char *)(v39 + v54);
  v56 = (char *)(*(_QWORD *)(v40 - 88) + v54);
  v57 = (int *)type metadata accessor for StaticDeviceMetadata();
  v58 = *((_QWORD *)v57 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v58 + 48))(v56, 1, v57))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v55, (uint64_t)v56, v41);
    v60 = v57[5];
    v61 = &v55[v60];
    v62 = &v56[v60];
    v63 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v63;
    v64 = v57[6];
    v65 = &v55[v64];
    v66 = &v56[v64];
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v68 = v57[7];
    v69 = &v55[v68];
    v70 = &v56[v68];
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    v72 = v57[8];
    v73 = &v55[v72];
    v74 = &v56[v72];
    v75 = *((_QWORD *)v74 + 1);
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = v75;
    v55[v57[9]] = v56[v57[9]];
    v55[v57[10]] = v56[v57[10]];
    v55[v57[11]] = v56[v57[11]];
    v76 = *(void (**)(char *, _QWORD, uint64_t, int *))(v58 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v55, 0, 1, v57);
  }
  v77 = v45[8];
  v78 = (void *)(v214 + v77);
  v79 = (const void *)(*(_QWORD *)(v40 - 88) + v77);
  v80 = sub_23E536F20();
  v81 = *(_QWORD *)(v80 - 8);
  v205 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v81 + 48);
  v206 = v80;
  v204 = v81;
  if (v205(v79, 1, v80))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v81 + 16))(v78, v79, v80);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  v83 = v45[9];
  v84 = v214 + v83;
  v85 = *(_QWORD *)(v40 - 88);
  v86 = v85 + v83;
  *(_QWORD *)v84 = *(_QWORD *)v86;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v86 + 8);
  *(_BYTE *)(v214 + v45[10]) = *(_BYTE *)(v85 + v45[10]);
  v44(v214 + v45[11], v85 + v45[11], v41);
  *(_QWORD *)(v214 + v45[12]) = *(_QWORD *)(v85 + v45[12]);
  v87 = v45[13];
  v88 = (_QWORD *)(v214 + v87);
  v89 = (_QWORD *)(v85 + v87);
  v90 = v89[1];
  *v88 = *v89;
  v88[1] = v90;
  *(_BYTE *)(v214 + v45[14]) = *(_BYTE *)(v85 + v45[14]);
  *(_BYTE *)(v214 + v45[15]) = *(_BYTE *)(v85 + v45[15]);
  *(_BYTE *)(v214 + v45[16]) = *(_BYTE *)(v85 + v45[16]);
  *(_BYTE *)(v214 + v45[17]) = *(_BYTE *)(v85 + v45[17]);
  *(_BYTE *)(v214 + v45[18]) = *(_BYTE *)(v85 + v45[18]);
  *(_QWORD *)(v214 + v45[19]) = *(_QWORD *)(v85 + v45[19]);
  *(_QWORD *)(v214 + v45[20]) = *(_QWORD *)(v85 + v45[20]);
  v91 = v45[21];
  v92 = (void *)(v214 + v91);
  v93 = (const void *)(v85 + v91);
  v94 = (void (*)(char *, char *, uint64_t))v44;
  v95 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v209 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v207 = (void (*)(char *, char *, uint64_t))v44;
  if (v95(v93, 1, v41))
  {
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v92, (uint64_t)v93, v41);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v209 + 56))(v92, 0, 1, v41);
  }
  v97 = *(_QWORD *)(v40 - 88);
  *(_WORD *)(v214 + v45[22]) = *(_WORD *)(v97 + v45[22]);
  v98 = v45[23];
  v99 = (_QWORD *)(v214 + v98);
  v100 = (_QWORD *)(v97 + v98);
  v101 = v100[1];
  *v99 = *v100;
  v99[1] = v101;
  *(_QWORD *)(v214 + v45[24]) = *(_QWORD *)(v97 + v45[24]);
  *(_BYTE *)(v214 + v45[25]) = *(_BYTE *)(v97 + v45[25]);
  v102 = v45[26];
  v103 = (char *)(v214 + v102);
  v104 = (char *)(v97 + v102);
  v105 = type metadata accessor for StaticSoftwareUpdate(0);
  v106 = *(_QWORD *)(v105 - 8);
  v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v107(v104, 1, v105))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    v109 = *(_QWORD *)(v40 - 104);
    v110 = *(_QWORD *)(v40 - 88);
    goto LABEL_28;
  }
  v94(v103, v104, v41);
  v111 = *(int *)(v105 + 20);
  v112 = &v103[v111];
  v113 = &v104[v111];
  v114 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v116 = v103;
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v117 = v106;
      if (EnumCaseMultiPayload)
      {
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
      }
      else
      {
        v207(v112, v113, v41);
        v118 = (int *)type metadata accessor for StaticHH2Update(0);
        v112[v118[5]] = v113[v118[5]];
        v119 = v118[6];
        v120 = &v112[v119];
        v121 = &v113[v119];
        v123 = *(_QWORD *)v121;
        v122 = *((_QWORD *)v121 + 1);
        *(_QWORD *)v120 = v123;
        *((_QWORD *)v120 + 1) = v122;
        v124 = v118[7];
        v125 = &v112[v124];
        v126 = &v113[v124];
        v125[8] = v126[8];
        *(_QWORD *)v125 = *(_QWORD *)v126;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      v109 = *(_QWORD *)(v40 - 104);
      v110 = *(_QWORD *)(v40 - 88);
      goto LABEL_27;
    }
    v210 = v103;
    v117 = v106;
    v132 = *((_QWORD *)v113 + 1);
    *(_QWORD *)v112 = *(_QWORD *)v113;
    *((_QWORD *)v112 + 1) = v132;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v133 = updated[5];
    v130 = &v112[v133];
    v131 = &v113[v133];
    swift_bridgeObjectRetain();
    if (v205(v131, 1, v206))
      goto LABEL_22;
LABEL_25:
    (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v130, v131, v206);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v204 + 56))(v130, 0, 1, v206);
    goto LABEL_26;
  }
  v210 = v103;
  v117 = v106;
  v127 = *((_QWORD *)v113 + 1);
  *(_QWORD *)v112 = *(_QWORD *)v113;
  *((_QWORD *)v112 + 1) = v127;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v129 = updated[5];
  v130 = &v112[v129];
  v131 = &v113[v129];
  swift_bridgeObjectRetain();
  if (!v205(v131, 1, v206))
    goto LABEL_25;
LABEL_22:
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
LABEL_26:
  v109 = *(_QWORD *)(v40 - 104);
  v110 = *(_QWORD *)(v40 - 88);
  v135 = updated[6];
  v136 = &v112[v135];
  v137 = &v113[v135];
  v138 = *((_QWORD *)v137 + 1);
  *(_QWORD *)v136 = *(_QWORD *)v137;
  *((_QWORD *)v136 + 1) = v138;
  v139 = updated[7];
  v140 = &v112[v139];
  v141 = &v113[v139];
  v142 = *((_QWORD *)v141 + 1);
  *(_QWORD *)v140 = *(_QWORD *)v141;
  *((_QWORD *)v140 + 1) = v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  v112[*(int *)(v143 + 48)] = v113[*(int *)(v143 + 48)];
  swift_storeEnumTagMultiPayload();
  v116 = v210;
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v116, 0, 1, v105);
LABEL_28:
  v144 = v214;
  *(_BYTE *)(v214 + v45[27]) = *(_BYTE *)(v110 + v45[27]);
  *(_BYTE *)(v214 + v45[28]) = *(_BYTE *)(v110 + v45[28]);
  *(_QWORD *)(v214 + v45[29]) = *(_QWORD *)(v110 + v45[29]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v145 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v146 = v145[5];
  v147 = (_QWORD *)(v214 + v146);
  v148 = (_QWORD *)(v110 + v146);
  v149 = v148[1];
  *v147 = *v148;
  v147[1] = v149;
  v150 = v145[6];
  v151 = (char *)(v214 + v150);
  v152 = (char *)(v110 + v150);
  v153 = (int *)type metadata accessor for StaticRoom(0);
  v154 = *((_QWORD *)v153 - 1);
  v155 = *(unsigned int (**)(char *, uint64_t, int *))(v154 + 48);
  swift_bridgeObjectRetain();
  if (v155(v152, 1, v153))
  {
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
    v157 = *(_QWORD *)(v40 - 96);
  }
  else
  {
    v212 = v154;
    v158 = sub_23E536F80();
    v211 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
    v211(v151, v152, v158);
    v159 = v153[5];
    v160 = &v151[v159];
    v161 = &v152[v159];
    v162 = *((_QWORD *)v161 + 1);
    *(_QWORD *)v160 = *(_QWORD *)v161;
    *((_QWORD *)v160 + 1) = v162;
    v151[v153[6]] = v152[v153[6]];
    v163 = v153[7];
    v208 = &v151[v163];
    v164 = &v152[v163];
    v165 = type metadata accessor for StaticZone();
    v166 = *(_QWORD *)(v165 - 8);
    v167 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48);
    swift_bridgeObjectRetain();
    if (v167(v164, 1, v165))
    {
      v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v208, v164, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    }
    else
    {
      v211(v208, v164, v158);
      v169 = *(int *)(v165 + 20);
      v170 = &v208[v169];
      v171 = &v164[v169];
      v172 = *((_QWORD *)v171 + 1);
      *(_QWORD *)v170 = *(_QWORD *)v171;
      *((_QWORD *)v170 + 1) = v172;
      *(_QWORD *)&v208[*(int *)(v165 + 24)] = *(_QWORD *)&v164[*(int *)(v165 + 24)];
      v173 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(v208, 0, 1, v165);
    }
    v211(&v151[v153[8]], &v152[v153[8]], v158);
    *(_QWORD *)&v151[v153[9]] = *(_QWORD *)&v152[v153[9]];
    *(_QWORD *)&v151[v153[10]] = *(_QWORD *)&v152[v153[10]];
    *(_QWORD *)&v151[v153[11]] = *(_QWORD *)&v152[v153[11]];
    *(_QWORD *)&v151[v153[12]] = *(_QWORD *)&v152[v153[12]];
    *(_QWORD *)&v151[v153[13]] = *(_QWORD *)&v152[v153[13]];
    *(_QWORD *)&v151[v153[14]] = *(_QWORD *)&v152[v153[14]];
    *(_QWORD *)&v151[v153[15]] = *(_QWORD *)&v152[v153[15]];
    *(_QWORD *)&v151[v153[16]] = *(_QWORD *)&v152[v153[16]];
    *(_QWORD *)&v151[v153[17]] = *(_QWORD *)&v152[v153[17]];
    v213 = *(void (**)(char *, _QWORD, uint64_t, int *))(v212 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v213(v151, 0, 1, v153);
    v109 = *(_QWORD *)(v40 - 104);
    v157 = *(_QWORD *)(v40 - 96);
    v144 = v214;
    v110 = *(_QWORD *)(v40 - 88);
  }
  v174 = v145[7];
  v175 = (_QWORD *)(v144 + v174);
  v176 = (_QWORD *)(v110 + v174);
  v177 = v176[1];
  *v175 = *v176;
  v175[1] = v177;
  *(_BYTE *)(v144 + v145[8]) = *(_BYTE *)(v110 + v145[8]);
  *(_BYTE *)(v144 + v145[9]) = *(_BYTE *)(v110 + v145[9]);
  *(_BYTE *)(v144 + v145[10]) = *(_BYTE *)(v110 + v145[10]);
  v178 = *(int *)(v215 + 24);
  v179 = (char *)(v109 + v178);
  v180 = (char *)(v157 + v178);
  v181 = (int *)type metadata accessor for StaticDeviceMetadata();
  v182 = *((_QWORD *)v181 - 1);
  v183 = *(unsigned int (**)(char *, uint64_t, int *))(v182 + 48);
  swift_bridgeObjectRetain();
  if (v183(v180, 1, v181))
  {
    v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
  }
  else
  {
    v185 = sub_23E536F80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v179, v180, v185);
    v186 = v181[5];
    v187 = &v179[v186];
    v188 = &v180[v186];
    v189 = *((_QWORD *)v188 + 1);
    *(_QWORD *)v187 = *(_QWORD *)v188;
    *((_QWORD *)v187 + 1) = v189;
    v190 = v181[6];
    v191 = &v179[v190];
    v192 = &v180[v190];
    v193 = *((_QWORD *)v192 + 1);
    *(_QWORD *)v191 = *(_QWORD *)v192;
    *((_QWORD *)v191 + 1) = v193;
    v194 = v181[7];
    v195 = &v179[v194];
    v196 = &v180[v194];
    v197 = *((_QWORD *)v196 + 1);
    *(_QWORD *)v195 = *(_QWORD *)v196;
    *((_QWORD *)v195 + 1) = v197;
    v198 = v181[8];
    v199 = &v179[v198];
    v200 = &v180[v198];
    v201 = *((_QWORD *)v200 + 1);
    *(_QWORD *)v199 = *(_QWORD *)v200;
    *((_QWORD *)v199 + 1) = v201;
    v179[v181[9]] = v180[v181[9]];
    v179[v181[10]] = v180[v181[10]];
    v179[v181[11]] = v180[v181[11]];
    v202 = *(void (**)(char *, _QWORD, uint64_t, int *))(v182 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v202(v179, 0, 1, v181);
  }
  return v109;
}

uint64_t assignWithCopy for AccessoryDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  int *v63;
  uint64_t v64;
  uint64_t (*v65)(_BYTE *, uint64_t, int *);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void (*v81)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(_BYTE *, _QWORD, uint64_t, int *);
  int *v106;
  int *v107;
  uint64_t v109;
  uint64_t v112;

  v3 = a3;
  v4 = a1;
  if (a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    v5 = (char *)&loc_23E4D2CBC + 4 * byte_23E558350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v10 = v9[5];
  v11 = (_QWORD *)(v7 + v10);
  v12 = (_QWORD *)(v8 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v9[6];
  v14 = (_BYTE *)(v7 + v13);
  v112 = v8;
  v15 = (_BYTE *)(v8 + v13);
  v16 = (int *)type metadata accessor for StaticRoom(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticRoom);
      goto LABEL_9;
    }
    v107 = v9;
    v109 = v7;
    v35 = sub_23E536F80();
    v36 = *(_QWORD *)(v35 - 8);
    v102 = v35;
    v104 = *(void (**)(char *, char *, uint64_t))(v36 + 24);
    ((void (*)(_BYTE *, _BYTE *))v104)(v14, v15);
    v37 = v16[5];
    v38 = &v14[v37];
    v39 = &v15[v37];
    *v38 = *v39;
    v38[1] = v39[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[v16[6]] = v15[v16[6]];
    v40 = v16[7];
    v41 = &v14[v40];
    v42 = &v15[v40];
    v43 = type metadata accessor for StaticZone();
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
    v46 = v45(v41, 1, v43);
    v47 = v45(v42, 1, v43);
    if (v46)
    {
      if (!v47)
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v41, v42, v102);
        v48 = *(int *)(v43 + 20);
        v49 = &v41[v48];
        v50 = &v42[v48];
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        *(_QWORD *)&v41[*(int *)(v43 + 24)] = *(_QWORD *)&v42[*(int *)(v43 + 24)];
        v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56);
        swift_bridgeObjectRetain();
        v52 = v102;
        swift_bridgeObjectRetain();
        v51(v41, 0, 1, v43);
LABEL_28:
        v3 = a3;
        v7 = v109;
        v9 = v107;
        goto LABEL_29;
      }
    }
    else
    {
      if (!v47)
      {
        v104(v41, v42, v102);
        v98 = *(int *)(v43 + 20);
        v99 = &v41[v98];
        v100 = &v42[v98];
        *(_QWORD *)v99 = *(_QWORD *)v100;
        *((_QWORD *)v99 + 1) = *((_QWORD *)v100 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v41[*(int *)(v43 + 24)] = *(_QWORD *)&v42[*(int *)(v43 + 24)];
        swift_bridgeObjectRetain();
        v52 = v102;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      sub_23E1E2FA0((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    }
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    v3 = a3;
    v7 = v109;
    v9 = v107;
    v52 = v102;
LABEL_29:
    v104(&v14[v16[8]], &v15[v16[8]], v52);
    *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[10]] = *(_QWORD *)&v15[v16[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[12]] = *(_QWORD *)&v15[v16[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[13]] = *(_QWORD *)&v15[v16[13]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[14]] = *(_QWORD *)&v15[v16[14]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[16]] = *(_QWORD *)&v15[v16[16]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v14[v16[17]] = *(_QWORD *)&v15[v16[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v4 = a1;
    goto LABEL_10;
  }
  if (v20)
  {
LABEL_9:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_10:
    v33 = a2;
    v34 = v112;
    goto LABEL_16;
  }
  v101 = v17;
  v106 = v9;
  v21 = sub_23E536F80();
  v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v103(v14, v15, v21);
  v22 = v16[5];
  v23 = &v14[v22];
  v24 = &v15[v22];
  *v23 = *v24;
  v23[1] = v24[1];
  v14[v16[6]] = v15[v16[6]];
  v25 = v16[7];
  v26 = &v14[v25];
  v27 = &v15[v25];
  v28 = type metadata accessor for StaticZone();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v103(v26, v27, v21);
    v53 = *(int *)(v28 + 20);
    v54 = &v26[v53];
    v55 = &v27[v53];
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
    *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v26, 0, 1, v28);
  }
  v103(&v14[v16[8]], &v15[v16[8]], v21);
  *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
  *(_QWORD *)&v14[v16[10]] = *(_QWORD *)&v15[v16[10]];
  *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
  *(_QWORD *)&v14[v16[12]] = *(_QWORD *)&v15[v16[12]];
  *(_QWORD *)&v14[v16[13]] = *(_QWORD *)&v15[v16[13]];
  *(_QWORD *)&v14[v16[14]] = *(_QWORD *)&v15[v16[14]];
  *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
  *(_QWORD *)&v14[v16[16]] = *(_QWORD *)&v15[v16[16]];
  *(_QWORD *)&v14[v16[17]] = *(_QWORD *)&v15[v16[17]];
  v105 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v101 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v105(v14, 0, 1, v16);
  v4 = a1;
  v33 = a2;
  v34 = v112;
  v9 = v106;
  v3 = a3;
LABEL_16:
  v57 = v9[7];
  v58 = (_QWORD *)(v7 + v57);
  v59 = (_QWORD *)(v34 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v34 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v34 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v34 + v9[10]);
  v60 = *(int *)(v3 + 24);
  v61 = (_BYTE *)(v4 + v60);
  v62 = (_BYTE *)(v33 + v60);
  v63 = (int *)type metadata accessor for StaticDeviceMetadata();
  v64 = *((_QWORD *)v63 - 1);
  v65 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      v84 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v61, v62, v84);
      v85 = v63[5];
      v86 = &v61[v85];
      v87 = &v62[v85];
      *v86 = *v87;
      v86[1] = v87[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v88 = v63[6];
      v89 = &v61[v88];
      v90 = &v62[v88];
      *v89 = *v90;
      v89[1] = v90[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v91 = v63[7];
      v92 = &v61[v91];
      v93 = &v62[v91];
      *v92 = *v93;
      v92[1] = v93[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v94 = v63[8];
      v95 = &v61[v94];
      v96 = &v62[v94];
      *v95 = *v96;
      v95[1] = v96[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v61[v63[9]] = v62[v63[9]];
      v61[v63[10]] = v62[v63[10]];
      v61[v63[11]] = v62[v63[11]];
      return v4;
    }
    sub_23E1E2FA0((uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_21;
  }
  if (v67)
  {
LABEL_21:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    return v4;
  }
  v68 = sub_23E536F80();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v61, v62, v68);
  v69 = v63[5];
  v70 = &v61[v69];
  v71 = &v62[v69];
  *v70 = *v71;
  v70[1] = v71[1];
  v72 = v63[6];
  v73 = &v61[v72];
  v74 = &v62[v72];
  *v73 = *v74;
  v73[1] = v74[1];
  v75 = v63[7];
  v76 = &v61[v75];
  v77 = &v62[v75];
  *v76 = *v77;
  v76[1] = v77[1];
  v78 = v63[8];
  v79 = &v61[v78];
  v80 = &v62[v78];
  *v79 = *v80;
  v79[1] = v80[1];
  v61[v63[9]] = v62[v63[9]];
  v61[v63[10]] = v62[v63[10]];
  v61[v63[11]] = v62[v63[11]];
  v81 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v64 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v81(v61, 0, 1, v63);
  return v4;
}

void initializeWithTake for AccessoryDetails()
{
  char *v0;

  type metadata accessor for AccessoryDetails.Payload(0);
  v0 = (char *)sub_23E4D5D70 + 4 * byte_23E558358[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4D5D70(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__dst, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  int *v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int EnumCaseMultiPayload;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *updated;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *__dsta;
  uint64_t v84;
  unsigned int (*v85)(const void *, uint64_t, uint64_t);

  v24 = sub_23E536F80();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
  v26(v22, v21, v24);
  v27 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(v22 + v27[5]) = *(_OWORD *)(v21 + v27[5]);
  v28 = v27[6];
  v29 = (void *)(v22 + v28);
  v30 = (const void *)(v21 + v28);
  v31 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26((uint64_t)v29, (uint64_t)v30, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  v32 = v27[7];
  v33 = (char *)(v22 + v32);
  v34 = (char *)(v21 + v32);
  v35 = (int *)type metadata accessor for StaticDeviceMetadata();
  v36 = *((_QWORD *)v35 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v33, (uint64_t)v34, v24);
    *(_OWORD *)&v33[v35[5]] = *(_OWORD *)&v34[v35[5]];
    *(_OWORD *)&v33[v35[6]] = *(_OWORD *)&v34[v35[6]];
    *(_OWORD *)&v33[v35[7]] = *(_OWORD *)&v34[v35[7]];
    *(_OWORD *)&v33[v35[8]] = *(_OWORD *)&v34[v35[8]];
    v33[v35[9]] = v34[v35[9]];
    v33[v35[10]] = v34[v35[10]];
    v33[v35[11]] = v34[v35[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = v27[8];
  v39 = (void *)(v22 + v38);
  v40 = *(_QWORD *)(v23 - 88);
  v41 = (const void *)(v40 + v38);
  v42 = sub_23E536F20();
  v43 = *(_QWORD *)(v42 - 8);
  v85 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
  v84 = v43;
  if (v85(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v39, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v39, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
  }
  v45 = v27[9];
  v46 = v22 + v45;
  v47 = v40 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_BYTE *)(v22 + v27[10]) = *(_BYTE *)(v40 + v27[10]);
  v26(v22 + v27[11], v40 + v27[11], v24);
  *(_QWORD *)(v22 + v27[12]) = *(_QWORD *)(v40 + v27[12]);
  *(_OWORD *)(v22 + v27[13]) = *(_OWORD *)(v40 + v27[13]);
  *(_BYTE *)(v22 + v27[14]) = *(_BYTE *)(v40 + v27[14]);
  *(_BYTE *)(v22 + v27[15]) = *(_BYTE *)(v40 + v27[15]);
  *(_BYTE *)(v22 + v27[16]) = *(_BYTE *)(v40 + v27[16]);
  *(_BYTE *)(v22 + v27[17]) = *(_BYTE *)(v40 + v27[17]);
  *(_BYTE *)(v22 + v27[18]) = *(_BYTE *)(v40 + v27[18]);
  *(_QWORD *)(v22 + v27[19]) = *(_QWORD *)(v40 + v27[19]);
  *(_QWORD *)(v22 + v27[20]) = *(_QWORD *)(v40 + v27[20]);
  v48 = v27[21];
  v49 = (void *)(v22 + v48);
  v50 = (const void *)(v40 + v48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v40 + v48, 1, v24))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v49, (uint64_t)v50, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v49, 0, 1, v24);
  }
  *(_WORD *)(v22 + v27[22]) = *(_WORD *)(v40 + v27[22]);
  *(_OWORD *)(v22 + v27[23]) = *(_OWORD *)(v40 + v27[23]);
  *(_QWORD *)(v22 + v27[24]) = *(_QWORD *)(v40 + v27[24]);
  *(_BYTE *)(v22 + v27[25]) = *(_BYTE *)(v40 + v27[25]);
  v52 = v27[26];
  v53 = (char *)(v22 + v52);
  v54 = (char *)(v40 + v52);
  v55 = type metadata accessor for StaticSoftwareUpdate(0);
  v56 = *(_QWORD *)(v55 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v26((uint64_t)v53, (uint64_t)v54, v24);
    v59 = *(int *)(v55 + 20);
    v60 = &v53[v59];
    v61 = &v54[v59];
    v62 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v60 = *(_OWORD *)v61;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v69 = updated[5];
      __dsta = &v60[v69];
      v70 = &v61[v69];
      if (v85(&v61[v69], 1, v42))
      {
LABEL_22:
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dsta, v70, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_25:
        *(_OWORD *)&v60[updated[6]] = *(_OWORD *)&v61[updated[6]];
        *(_OWORD *)&v60[updated[7]] = *(_OWORD *)&v61[updated[7]];
        v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v60[*(int *)(v73 + 48)] = v61[*(int *)(v73 + 48)];
        goto LABEL_26;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
LABEL_27:
          v22 = a20;
          v58 = *(_QWORD *)(v23 - 88);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
          goto LABEL_28;
        }
        v26((uint64_t)v60, (uint64_t)v61, v24);
        v64 = (int *)type metadata accessor for StaticHH2Update(0);
        v60[v64[5]] = v61[v64[5]];
        *(_OWORD *)&v60[v64[6]] = *(_OWORD *)&v61[v64[6]];
        v65 = v64[7];
        v66 = &v60[v65];
        v67 = &v61[v65];
        v66[8] = v67[8];
        *(_QWORD *)v66 = *(_QWORD *)v67;
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *(_OWORD *)v60 = *(_OWORD *)v61;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v71 = updated[5];
      __dsta = &v60[v71];
      v70 = &v61[v71];
      if (v85(&v61[v71], 1, v42))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(__dsta, v70, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dsta, 0, 1, v42);
    goto LABEL_25;
  }
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  v58 = *(_QWORD *)(v23 - 88);
LABEL_28:
  *(_BYTE *)(v22 + v27[27]) = *(_BYTE *)(v58 + v27[27]);
  *(_BYTE *)(v22 + v27[28]) = *(_BYTE *)(v58 + v27[28]);
  *(_QWORD *)(v22 + v27[29]) = *(_QWORD *)(v58 + v27[29]);
  swift_storeEnumTagMultiPayload();
  v74 = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_23E4D6D20 + 4 * byte_23E55835C[v74]))(v74, v75, v76, v77, v78, v79, v80, v81, a9, a10);
}

uint64_t sub_23E4D6D20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *__dst, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  int *v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int EnumCaseMultiPayload;
  int *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *updated;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(const void *, uint64_t, uint64_t);
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  _OWORD *v115;
  void (*v116)(char *, char *);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v37 = sub_23E536F80();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
  v39(v34, v35, v37);
  v40 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(v34 + v40[5]) = *(_OWORD *)(v35 + v40[5]);
  v41 = v40[6];
  v42 = (void *)(v34 + v41);
  v43 = (const void *)(v35 + v41);
  v44 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v114 = (void (*)(char *, char *, uint64_t))v39;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39((uint64_t)v42, (uint64_t)v43, v37);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  v45 = v40[7];
  v46 = (char *)(v34 + v45);
  v47 = (char *)(v35 + v45);
  v48 = (int *)type metadata accessor for StaticDeviceMetadata();
  v49 = *((_QWORD *)v48 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v114(v46, v47, v37);
    *(_OWORD *)&v46[v48[5]] = *(_OWORD *)&v47[v48[5]];
    *(_OWORD *)&v46[v48[6]] = *(_OWORD *)&v47[v48[6]];
    *(_OWORD *)&v46[v48[7]] = *(_OWORD *)&v47[v48[7]];
    *(_OWORD *)&v46[v48[8]] = *(_OWORD *)&v47[v48[8]];
    v46[v48[9]] = v47[v48[9]];
    v46[v48[10]] = v47[v48[10]];
    v46[v48[11]] = v47[v48[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = v40[8];
  v52 = (void *)(v34 + v51);
  v53 = (const void *)(v35 + v51);
  v54 = sub_23E536F20();
  v55 = *(_QWORD *)(v54 - 8);
  v112 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
  v111 = v55;
  if (v112(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  v57 = v40[9];
  v58 = v34 + v57;
  v59 = v35 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  *(_BYTE *)(v58 + 8) = *(_BYTE *)(v59 + 8);
  *(_BYTE *)(v34 + v40[10]) = *(_BYTE *)(v35 + v40[10]);
  v114((char *)(v34 + v40[11]), (char *)(v35 + v40[11]), v37);
  *(_QWORD *)(v34 + v40[12]) = *(_QWORD *)(v35 + v40[12]);
  *(_OWORD *)(v34 + v40[13]) = *(_OWORD *)(v35 + v40[13]);
  *(_BYTE *)(v34 + v40[14]) = *(_BYTE *)(v35 + v40[14]);
  *(_BYTE *)(v34 + v40[15]) = *(_BYTE *)(v35 + v40[15]);
  *(_BYTE *)(v34 + v40[16]) = *(_BYTE *)(v35 + v40[16]);
  *(_BYTE *)(v34 + v40[17]) = *(_BYTE *)(v35 + v40[17]);
  *(_BYTE *)(v34 + v40[18]) = *(_BYTE *)(v35 + v40[18]);
  *(_QWORD *)(v34 + v40[19]) = *(_QWORD *)(v35 + v40[19]);
  *(_QWORD *)(v34 + v40[20]) = *(_QWORD *)(v35 + v40[20]);
  v60 = v40[21];
  v61 = (void *)(v34 + v60);
  v62 = (void *)(v35 + v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v35 + v60, 1, v37))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v114((char *)v61, (char *)v62, v37);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v61, 0, 1, v37);
  }
  *(_WORD *)(v34 + v40[22]) = *(_WORD *)(v35 + v40[22]);
  *(_OWORD *)(v34 + v40[23]) = *(_OWORD *)(v35 + v40[23]);
  *(_QWORD *)(v34 + v40[24]) = *(_QWORD *)(v35 + v40[24]);
  *(_BYTE *)(v34 + v40[25]) = *(_BYTE *)(v35 + v40[25]);
  v64 = v40[26];
  v65 = (char *)(v34 + v64);
  v66 = (char *)(v35 + v64);
  v67 = type metadata accessor for StaticSoftwareUpdate(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    v71 = v118;
    v70 = v119;
    goto LABEL_28;
  }
  v114(v65, v66, v37);
  v72 = *(int *)(v67 + 20);
  v73 = &v65[v72];
  v74 = &v66[v72];
  v110 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        v114(v73, v74, v37);
        v76 = (int *)type metadata accessor for StaticHH2Update(0);
        v73[v76[5]] = v74[v76[5]];
        *(_OWORD *)&v73[v76[6]] = *(_OWORD *)&v74[v76[6]];
        v77 = v76[7];
        v78 = &v73[v77];
        v79 = &v74[v77];
        v78[8] = v79[8];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        swift_storeEnumTagMultiPayload();
      }
      v71 = v118;
      v70 = v119;
      goto LABEL_27;
    }
    *(_OWORD *)v73 = *(_OWORD *)v74;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v83 = updated[5];
    v115 = v73;
    v109 = &v73[v83];
    v82 = &v74[v83];
    if (v112(&v74[v83], 1, v54))
      goto LABEL_22;
LABEL_25:
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v109, v82, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v109, 0, 1, v54);
    goto LABEL_26;
  }
  *(_OWORD *)v73 = *(_OWORD *)v74;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v81 = updated[5];
  v115 = v73;
  v109 = &v73[v81];
  v82 = &v74[v81];
  if (!v112(&v74[v81], 1, v54))
    goto LABEL_25;
LABEL_22:
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v109, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
LABEL_26:
  v70 = v119;
  *(_OWORD *)((char *)v115 + updated[6]) = *(_OWORD *)&v74[updated[6]];
  *(_OWORD *)((char *)v115 + updated[7]) = *(_OWORD *)&v74[updated[7]];
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v115 + *(int *)(v85 + 48)) = v74[*(int *)(v85 + 48)];
  swift_storeEnumTagMultiPayload();
  v71 = v118;
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_28:
  *(_BYTE *)(v34 + v40[27]) = *(_BYTE *)(v35 + v40[27]);
  *(_BYTE *)(v34 + v40[28]) = *(_BYTE *)(v35 + v40[28]);
  *(_QWORD *)(v34 + v40[29]) = *(_QWORD *)(v35 + v40[29]);
  swift_storeEnumTagMultiPayload();
  v86 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  *(_OWORD *)(v34 + v86[5]) = *(_OWORD *)(v35 + v86[5]);
  v87 = v86[6];
  v88 = (char *)(v34 + v87);
  v89 = (char *)(v35 + v87);
  v90 = (int *)type metadata accessor for StaticRoom(0);
  v91 = *((_QWORD *)v90 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v91 + 48))(v89, 1, v90))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v113 = v91;
    v93 = sub_23E536F80();
    v116 = *(void (**)(char *, char *))(*(_QWORD *)(v93 - 8) + 32);
    v117 = v93;
    v116(v88, v89);
    *(_OWORD *)&v88[v90[5]] = *(_OWORD *)&v89[v90[5]];
    v88[v90[6]] = v89[v90[6]];
    v94 = v90[7];
    v95 = &v88[v94];
    v96 = &v89[v94];
    v97 = type metadata accessor for StaticZone();
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v116)(v95, v96, v117);
      *(_OWORD *)&v95[*(int *)(v97 + 20)] = *(_OWORD *)&v96[*(int *)(v97 + 20)];
      *(_QWORD *)&v95[*(int *)(v97 + 24)] = *(_QWORD *)&v96[*(int *)(v97 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    v70 = v119;
    ((void (*)(char *, char *, uint64_t))v116)(&v88[v90[8]], &v89[v90[8]], v117);
    *(_QWORD *)&v88[v90[9]] = *(_QWORD *)&v89[v90[9]];
    *(_QWORD *)&v88[v90[10]] = *(_QWORD *)&v89[v90[10]];
    *(_QWORD *)&v88[v90[11]] = *(_QWORD *)&v89[v90[11]];
    *(_QWORD *)&v88[v90[12]] = *(_QWORD *)&v89[v90[12]];
    *(_QWORD *)&v88[v90[13]] = *(_QWORD *)&v89[v90[13]];
    *(_QWORD *)&v88[v90[14]] = *(_QWORD *)&v89[v90[14]];
    *(_QWORD *)&v88[v90[15]] = *(_QWORD *)&v89[v90[15]];
    *(_QWORD *)&v88[v90[16]] = *(_QWORD *)&v89[v90[16]];
    *(_QWORD *)&v88[v90[17]] = *(_QWORD *)&v89[v90[17]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v113 + 56))(v88, 0, 1, v90);
    v71 = v118;
  }
  v100 = *(_QWORD *)(v36 - 88);
  *(_OWORD *)(v34 + v86[7]) = *(_OWORD *)(v35 + v86[7]);
  *(_BYTE *)(v34 + v86[8]) = *(_BYTE *)(v35 + v86[8]);
  *(_BYTE *)(v34 + v86[9]) = *(_BYTE *)(v35 + v86[9]);
  *(_BYTE *)(v34 + v86[10]) = *(_BYTE *)(v35 + v86[10]);
  v101 = *(int *)(v70 + 24);
  v102 = (char *)(v71 + v101);
  v103 = (char *)(v100 + v101);
  v104 = (int *)type metadata accessor for StaticDeviceMetadata();
  v105 = *((_QWORD *)v104 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v105 + 48))(v103, 1, v104))
  {
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
  }
  else
  {
    v107 = sub_23E536F80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v102, v103, v107);
    *(_OWORD *)&v102[v104[5]] = *(_OWORD *)&v103[v104[5]];
    *(_OWORD *)&v102[v104[6]] = *(_OWORD *)&v103[v104[6]];
    *(_OWORD *)&v102[v104[7]] = *(_OWORD *)&v103[v104[7]];
    *(_OWORD *)&v102[v104[8]] = *(_OWORD *)&v103[v104[8]];
    v102[v104[9]] = v103[v104[9]];
    v102[v104[10]] = v103[v104[10]];
    v102[v104[11]] = v103[v104[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v105 + 56))(v102, 0, 1, v104);
  }
  return v71;
}

uint64_t assignWithTake for AccessoryDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  size_t v44;
  void *v45;
  uint64_t v46;
  void (*v47)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  int *v56;
  uint64_t v57;
  uint64_t (*v58)(_BYTE *, uint64_t, int *);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  void (*v93)(_BYTE *, _BYTE *);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v99;

  v3 = a3;
  v4 = a1;
  if (a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    v5 = (char *)&loc_23E4D8078 + 4 * byte_23E558360[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v10 = v9[5];
  v11 = (_QWORD *)(v7 + v10);
  v12 = (uint64_t *)(v8 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = v9[6];
  v16 = (_BYTE *)(v7 + v15);
  v99 = v8;
  v17 = (_BYTE *)(v8 + v15);
  v18 = (int *)type metadata accessor for StaticRoom(0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      v96 = v4;
      v23 = sub_23E536F80();
      v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v94 = v23;
      ((void (*)(_BYTE *, _BYTE *))v92)(v16, v17);
      *(_OWORD *)&v16[v18[5]] = *(_OWORD *)&v17[v18[5]];
      v16[v18[6]] = v17[v18[6]];
      v24 = v18[7];
      v25 = &v16[v24];
      v26 = &v17[v24];
      v27 = type metadata accessor for StaticZone();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v92(v25, v26, v94);
        *(_OWORD *)&v25[*(int *)(v27 + 20)] = *(_OWORD *)&v26[*(int *)(v27 + 20)];
        *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v3 = a3;
      v92(&v16[v18[8]], &v17[v18[8]], v94);
      *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
      *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
      *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
      *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
      *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
      *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
      *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
      *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
      *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_21;
    }
LABEL_9:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_22;
  }
  if (v22)
  {
    sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticRoom);
    goto LABEL_9;
  }
  v96 = v4;
  v31 = sub_23E536F80();
  v90 = *(_QWORD **)(v31 - 8);
  v93 = (void (*)(_BYTE *, _BYTE *))v90[5];
  v95 = v31;
  v93(v16, v17);
  v32 = v18[5];
  v33 = &v16[v32];
  v34 = (uint64_t *)&v17[v32];
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v16[v18[6]] = v17[v18[6]];
  v37 = v18[7];
  v38 = &v16[v37];
  v39 = &v17[v37];
  v40 = type metadata accessor for StaticZone();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v91 = (uint64_t)v38;
  LODWORD(v38) = v42(v38, 1, v40);
  v43 = v42(v39, 1, v40);
  if ((_DWORD)v38)
  {
    if (!v43)
    {
      v46 = v95;
      ((void (*)(uint64_t, char *, uint64_t))v90[4])(v91, v39, v95);
      *(_OWORD *)(v91 + *(int *)(v40 + 20)) = *(_OWORD *)&v39[*(int *)(v40 + 20)];
      *(_QWORD *)(v91 + *(int *)(v40 + 24)) = *(_QWORD *)&v39[*(int *)(v40 + 24)];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v91, 0, 1, v40);
      v3 = a3;
      goto LABEL_19;
    }
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v45 = (void *)v91;
  }
  else
  {
    if (!v43)
    {
      v47 = (void (*)(_BYTE *, _BYTE *, uint64_t))v93;
      v46 = v95;
      ((void (*)(uint64_t, char *, uint64_t))v93)(v91, v39, v95);
      v85 = *(int *)(v40 + 20);
      v86 = (_QWORD *)(v91 + v85);
      v87 = &v39[v85];
      v89 = *(_QWORD *)v87;
      v88 = *((_QWORD *)v87 + 1);
      *v86 = v89;
      v86[1] = v88;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v91 + *(int *)(v40 + 24)) = *(_QWORD *)&v39[*(int *)(v40 + 24)];
      swift_bridgeObjectRelease();
      v3 = a3;
      goto LABEL_20;
    }
    sub_23E1E2FA0(v91, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v45 = (void *)v91;
  }
  memcpy(v45, v39, v44);
  v3 = a3;
  v46 = v95;
LABEL_19:
  v47 = (void (*)(_BYTE *, _BYTE *, uint64_t))v93;
LABEL_20:
  v47(&v16[v18[8]], &v17[v18[8]], v46);
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  swift_bridgeObjectRelease();
LABEL_21:
  v4 = v96;
LABEL_22:
  v48 = v9[7];
  v49 = (_QWORD *)(v7 + v48);
  v50 = (uint64_t *)(v99 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v99 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v99 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v99 + v9[10]);
  v53 = *(int *)(v3 + 24);
  v54 = (_BYTE *)(v4 + v53);
  v55 = (_BYTE *)(a2 + v53);
  v56 = (int *)type metadata accessor for StaticDeviceMetadata();
  v57 = *((_QWORD *)v56 - 1);
  v58 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      v64 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v54, v55, v64);
      v65 = v56[5];
      v66 = &v54[v65];
      v67 = (uint64_t *)&v55[v65];
      v69 = *v67;
      v68 = v67[1];
      *v66 = v69;
      v66[1] = v68;
      swift_bridgeObjectRelease();
      v70 = v56[6];
      v71 = &v54[v70];
      v72 = (uint64_t *)&v55[v70];
      v74 = *v72;
      v73 = v72[1];
      *v71 = v74;
      v71[1] = v73;
      swift_bridgeObjectRelease();
      v75 = v56[7];
      v76 = &v54[v75];
      v77 = (uint64_t *)&v55[v75];
      v79 = *v77;
      v78 = v77[1];
      *v76 = v79;
      v76[1] = v78;
      swift_bridgeObjectRelease();
      v80 = v56[8];
      v81 = &v54[v80];
      v82 = (uint64_t *)&v55[v80];
      v84 = *v82;
      v83 = v82[1];
      *v81 = v84;
      v81[1] = v83;
      swift_bridgeObjectRelease();
      v54[v56[9]] = v55[v56[9]];
      v54[v56[10]] = v55[v56[10]];
      v54[v56[11]] = v55[v56[11]];
      return v4;
    }
    sub_23E1E2FA0((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_27;
  }
  if (v60)
  {
LABEL_27:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    return v4;
  }
  v61 = sub_23E536F80();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v54, v55, v61);
  *(_OWORD *)&v54[v56[5]] = *(_OWORD *)&v55[v56[5]];
  *(_OWORD *)&v54[v56[6]] = *(_OWORD *)&v55[v56[6]];
  *(_OWORD *)&v54[v56[7]] = *(_OWORD *)&v55[v56[7]];
  *(_OWORD *)&v54[v56[8]] = *(_OWORD *)&v55[v56[8]];
  v54[v56[9]] = v55[v56[9]];
  v54[v56[10]] = v55[v56[10]];
  v54[v56[11]] = v55[v56[11]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
  return v4;
}

uint64_t getEnumTagSinglePayload for AccessoryDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4DA6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for AccessoryDetails.Payload(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for AccessoryDetailsBasicInfo();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for AccessoryDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4DA7A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for AccessoryDetails.Payload(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for AccessoryDetailsBasicInfo();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E4DA844()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for AccessoryDetails.Payload(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessoryDetailsBasicInfo();
    if (v1 <= 0x3F)
    {
      sub_23E4DA8E4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23E4DA8E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254333C30[0])
  {
    type metadata accessor for StaticDeviceMetadata();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, qword_254333C30);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AccessoryDetails.Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23E4DA998 + 4 * byte_23E558368[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for AccessoryDetails.Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_23E536F80();
      v4 = *(_QWORD *)(v3 - 8);
      v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(a1, v3);
      v6 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v7 = a1 + v6[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v5(v7, v3);
      else
        swift_bridgeObjectRelease();
      v34 = a1 + v6[7];
      v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v5(v34, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v36 = a1 + v6[8];
      v37 = sub_23E536F20();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (!v39(v36, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      v5(a1 + v6[11], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = a1 + v6[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v40, 1, v3))
        v5(v40, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = a1 + v6[26];
      v42 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
        return swift_bridgeObjectRelease();
      v5(v41, v3);
      v43 = v41 + *(int *)(v42 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v47 = v43 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v39(v47, 1, v37))
          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v47, v37);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          return swift_bridgeObjectRelease();
        v5(v43, v3);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1:
      v8 = sub_23E536F80();
      v9 = *(_QWORD *)(v8 - 8);
      v48 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v48(a1, v8);
      v10 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v48(a1 + v10[10], v8);
      v11 = a1 + v10[12];
      v12 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        v48(v11, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = a1 + v10[13];
      v14 = sub_23E536F20();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      if (!v16(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = a1 + v10[24];
      v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v18(v17, 1, v8))
        v48(v17, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = a1 + v10[28];
      v20 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
        goto LABEL_34;
      v48(v19, v8);
      v21 = v19 + *(int *)(v20 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v22 = swift_getEnumCaseMultiPayload();
      if (v22 == 2 || v22 == 1)
      {
        swift_bridgeObjectRelease();
        v45 = v21 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v16(v45, 1, v14))
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v45, v14);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v22)
          goto LABEL_34;
        v48(v21, v8);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v46 = a1 + v10[31];
      result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v46, 1, v8);
      if (!(_DWORD)result)
      {
        v32 = v46;
        v33 = v8;
        v31 = (uint64_t (*)(uint64_t, uint64_t))v48;
        return v31(v32, v33);
      }
      return result;
    case 2:
      v23 = sub_23E536F80();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      v24 = sub_23E536F80();
      v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
      v25(a1, v24);
      v26 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25(a1 + *(int *)(v26 + 44), v24);
      swift_bridgeObjectRelease();
      v27 = a1 + *(int *)(v26 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v27 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v29 = sub_23E536F20();
      v30 = *(_QWORD *)(v29 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29);
      if ((_DWORD)result)
        return result;
      v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
      v32 = v28;
      v33 = v29;
      return v31(v32, v33);
    default:
      return result;
  }
}

void initializeWithCopy for AccessoryDetails.Payload()
{
  char *v0;

  v0 = (char *)sub_23E4DC3E0 + 4 * byte_23E558370[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4DC3E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *__dst,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, _QWORD, uint64_t, int *);
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const void *v88;
  unsigned int (*v89)(const void *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  int EnumCaseMultiPayload;
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t updated;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  unsigned int (*v135)(const void *, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  char *v140;
  uint64_t v141;

  *(_QWORD *)(v37 - 88) = v36;
  v38 = sub_23E536F80();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  v40(v34, v35, v38);
  v41 = (int *)type metadata accessor for StaticAccessory(0);
  v42 = v41[5];
  v43 = (_QWORD *)(v34 + v42);
  v44 = (_QWORD *)(v35 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = v41[6];
  v47 = (_QWORD *)(v34 + v46);
  v48 = (_QWORD *)(v35 + v46);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  v137 = v39;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40((uint64_t)v47, (uint64_t)v48, v38);
  }
  else
  {
    v49 = v48[1];
    *v47 = *v48;
    v47[1] = v49;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v50 = v41[7];
  v51 = (char *)(v34 + v50);
  v52 = (char *)(v35 + v50);
  v53 = (int *)type metadata accessor for StaticDeviceMetadata();
  v54 = *((_QWORD *)v53 - 1);
  v139 = v40;
  v141 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v40((uint64_t)v51, (uint64_t)v52, v38);
    v56 = v53[5];
    v57 = &v51[v56];
    v58 = &v52[v56];
    v59 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v59;
    v60 = v53[6];
    v61 = &v51[v60];
    v62 = &v52[v60];
    v63 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v63;
    v64 = v53[7];
    v65 = &v51[v64];
    v66 = &v52[v64];
    v67 = *((_QWORD *)v66 + 1);
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *((_QWORD *)v65 + 1) = v67;
    v68 = v53[8];
    v69 = &v51[v68];
    v70 = &v52[v68];
    v71 = *((_QWORD *)v70 + 1);
    *(_QWORD *)v69 = *(_QWORD *)v70;
    *((_QWORD *)v69 + 1) = v71;
    v51[v53[9]] = v52[v53[9]];
    v51[v53[10]] = v52[v53[10]];
    v51[v53[11]] = v52[v53[11]];
    v72 = *(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = v139;
    swift_bridgeObjectRetain();
    v38 = v141;
    swift_bridgeObjectRetain();
    v72(v51, 0, 1, v53);
  }
  v73 = v41[8];
  v74 = (void *)(v34 + v73);
  v75 = (const void *)(v35 + v73);
  v76 = sub_23E536F20();
  v77 = *(_QWORD *)(v76 - 8);
  v135 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48);
  v136 = v76;
  v134 = v77;
  if (v135(v75, 1, v76))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v77 + 16))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  v79 = v41[9];
  v80 = v34 + v79;
  v81 = v35 + v79;
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *(_BYTE *)(v80 + 8) = *(_BYTE *)(v81 + 8);
  *(_BYTE *)(v34 + v41[10]) = *(_BYTE *)(v35 + v41[10]);
  v40(v34 + v41[11], v35 + v41[11], v38);
  *(_QWORD *)(v34 + v41[12]) = *(_QWORD *)(v35 + v41[12]);
  v82 = v41[13];
  v83 = (_QWORD *)(v34 + v82);
  v84 = (_QWORD *)(v35 + v82);
  v85 = v84[1];
  *v83 = *v84;
  v83[1] = v85;
  *(_BYTE *)(v34 + v41[14]) = *(_BYTE *)(v35 + v41[14]);
  *(_BYTE *)(v34 + v41[15]) = *(_BYTE *)(v35 + v41[15]);
  *(_BYTE *)(v34 + v41[16]) = *(_BYTE *)(v35 + v41[16]);
  *(_BYTE *)(v34 + v41[17]) = *(_BYTE *)(v35 + v41[17]);
  *(_BYTE *)(v34 + v41[18]) = *(_BYTE *)(v35 + v41[18]);
  *(_QWORD *)(v34 + v41[19]) = *(_QWORD *)(v35 + v41[19]);
  *(_QWORD *)(v34 + v41[20]) = *(_QWORD *)(v35 + v41[20]);
  v86 = v41[21];
  v87 = (void *)(v34 + v86);
  v88 = (const void *)(v35 + v86);
  v89 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v89(v88, 1, v141))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    v139((uint64_t)v87, (uint64_t)v88, v141);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v87, 0, 1, v141);
  }
  *(_WORD *)(v34 + v41[22]) = *(_WORD *)(v35 + v41[22]);
  v91 = v41[23];
  v92 = (_QWORD *)(v34 + v91);
  v93 = (_QWORD *)(v35 + v91);
  v94 = v93[1];
  *v92 = *v93;
  v92[1] = v94;
  *(_QWORD *)(v34 + v41[24]) = *(_QWORD *)(v35 + v41[24]);
  *(_BYTE *)(v34 + v41[25]) = *(_BYTE *)(v35 + v41[25]);
  v95 = v41[26];
  v96 = (char *)(v34 + v95);
  v97 = (char *)(v35 + v95);
  v98 = type metadata accessor for StaticSoftwareUpdate(0);
  v99 = *(_QWORD *)(v98 - 8);
  v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v100(v97, 1, v98))
  {
    v139((uint64_t)v96, (uint64_t)v97, v141);
    v102 = *(int *)(v98 + 20);
    v103 = &v96[v102];
    v104 = &v97[v102];
    v105 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v116 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v116;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v118 = *(int *)(updated + 20);
      v138 = updated;
      v140 = &v103[v118];
      v119 = &v104[v118];
      swift_bridgeObjectRetain();
      if (v135(v119, 1, v136))
      {
LABEL_22:
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v140, v119, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
LABEL_25:
        v124 = *(int *)(v138 + 24);
        v125 = &v103[v124];
        v126 = &v104[v124];
        v127 = *((_QWORD *)v126 + 1);
        *(_QWORD *)v125 = *(_QWORD *)v126;
        *((_QWORD *)v125 + 1) = v127;
        v128 = *(int *)(v138 + 28);
        v129 = &v103[v128];
        v130 = &v104[v128];
        v131 = *((_QWORD *)v130 + 1);
        *(_QWORD *)v129 = *(_QWORD *)v130;
        *((_QWORD *)v129 + 1) = v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v103[*(int *)(v132 + 48)] = v104[*(int *)(v132 + 48)];
        swift_storeEnumTagMultiPayload();
LABEL_26:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        goto LABEL_27;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        }
        else
        {
          v139((uint64_t)v103, (uint64_t)v104, v141);
          v107 = (int *)type metadata accessor for StaticHH2Update(0);
          v103[v107[5]] = v104[v107[5]];
          v108 = v107[6];
          v109 = &v103[v108];
          v110 = &v104[v108];
          v112 = *(_QWORD *)v110;
          v111 = *((_QWORD *)v110 + 1);
          *(_QWORD *)v109 = v112;
          *((_QWORD *)v109 + 1) = v111;
          v113 = v107[7];
          v114 = &v103[v113];
          v115 = &v104[v113];
          v114[8] = v115[8];
          *(_QWORD *)v114 = *(_QWORD *)v115;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_26;
      }
      v120 = *((_QWORD *)v104 + 1);
      *(_QWORD *)v103 = *(_QWORD *)v104;
      *((_QWORD *)v103 + 1) = v120;
      v121 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v122 = *(int *)(v121 + 20);
      v138 = v121;
      v140 = &v103[v122];
      v119 = &v104[v122];
      swift_bridgeObjectRetain();
      if (v135(v119, 1, v136))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v140, v119, v136);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v140, 0, 1, v136);
    goto LABEL_25;
  }
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
LABEL_27:
  *(_BYTE *)(v34 + v41[27]) = *(_BYTE *)(v35 + v41[27]);
  *(_BYTE *)(v34 + v41[28]) = *(_BYTE *)(v35 + v41[28]);
  *(_QWORD *)(v34 + v41[29]) = *(_QWORD *)(v35 + v41[29]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v34;
}

uint64_t assignWithCopy for AccessoryDetails.Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E1E2FA0(result, type metadata accessor for AccessoryDetails.Payload);
    v2 = (char *)&loc_23E4DD6B4 + 4 * byte_23E558374[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for AccessoryDetails.Payload()
{
  char *v0;

  v0 = (char *)sub_23E4DEAA4 + 4 * byte_23E558378[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E4DEAA4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__dst, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  int *v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  int EnumCaseMultiPayload;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  _OWORD *v78;
  int *updated;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(const void *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;

  v34 = sub_23E536F80();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  v36(v32, v33, v34);
  v37 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(v32 + v37[5]) = *(_OWORD *)(v33 + v37[5]);
  v38 = v37[6];
  v39 = (void *)(v32 + v38);
  v40 = (const void *)(v33 + v38);
  v41 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v92 = v35;
  v42 = v36;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36((uint64_t)v39, (uint64_t)v40, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  v43 = v37[7];
  v44 = (char *)(v32 + v43);
  v45 = (char *)(v33 + v43);
  v46 = (int *)type metadata accessor for StaticDeviceMetadata();
  v47 = *((_QWORD *)v46 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v36((uint64_t)v44, (uint64_t)v45, v34);
    *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
    *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
    *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
    *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
    v44[v46[9]] = v45[v46[9]];
    v44[v46[10]] = v45[v46[10]];
    v44[v46[11]] = v45[v46[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = v37[8];
  v50 = (void *)(v32 + v49);
  v51 = (const void *)(v33 + v49);
  v52 = sub_23E536F20();
  v53 = *(_QWORD *)(v52 - 8);
  v91 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
  if (v91(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v55 = (void (*)(char *, char *, uint64_t))v42;
  v56 = v37[9];
  v57 = v32 + v56;
  v58 = v33 + v56;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_BYTE *)(v57 + 8) = *(_BYTE *)(v58 + 8);
  *(_BYTE *)(v32 + v37[10]) = *(_BYTE *)(v33 + v37[10]);
  v42(v32 + v37[11], v33 + v37[11], v34);
  *(_QWORD *)(v32 + v37[12]) = *(_QWORD *)(v33 + v37[12]);
  *(_OWORD *)(v32 + v37[13]) = *(_OWORD *)(v33 + v37[13]);
  *(_BYTE *)(v32 + v37[14]) = *(_BYTE *)(v33 + v37[14]);
  *(_BYTE *)(v32 + v37[15]) = *(_BYTE *)(v33 + v37[15]);
  *(_BYTE *)(v32 + v37[16]) = *(_BYTE *)(v33 + v37[16]);
  *(_BYTE *)(v32 + v37[17]) = *(_BYTE *)(v33 + v37[17]);
  *(_BYTE *)(v32 + v37[18]) = *(_BYTE *)(v33 + v37[18]);
  *(_QWORD *)(v32 + v37[19]) = *(_QWORD *)(v33 + v37[19]);
  *(_QWORD *)(v32 + v37[20]) = *(_QWORD *)(v33 + v37[20]);
  v59 = v37[21];
  v60 = (void *)(v32 + v59);
  v61 = (const void *)(v33 + v59);
  v90 = v53;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v33 + v59, 1, v34))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    v42((uint64_t)v60, (uint64_t)v61, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v60, 0, 1, v34);
  }
  *(_WORD *)(v32 + v37[22]) = *(_WORD *)(v33 + v37[22]);
  *(_OWORD *)(v32 + v37[23]) = *(_OWORD *)(v33 + v37[23]);
  *(_QWORD *)(v32 + v37[24]) = *(_QWORD *)(v33 + v37[24]);
  *(_BYTE *)(v32 + v37[25]) = *(_BYTE *)(v33 + v37[25]);
  v63 = v37[26];
  v64 = (char *)(v32 + v63);
  v65 = (char *)(v33 + v63);
  v66 = type metadata accessor for StaticSoftwareUpdate(0);
  v67 = *(_QWORD *)(v66 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v93 = v67;
    v69 = v55;
    v55(v64, v65, v34);
    v70 = *(int *)(v66 + 20);
    v71 = &v64[v70];
    v72 = &v65[v70];
    v89 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v88 = v64;
      v78 = v71;
      *(_OWORD *)v71 = *(_OWORD *)v72;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v80 = updated[5];
      v81 = (char *)v78 + v80;
      v82 = &v72[v80];
      if (v91(&v72[v80], 1, v52))
      {
LABEL_22:
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
LABEL_26:
        *(_OWORD *)((char *)v78 + updated[6]) = *(_OWORD *)&v72[updated[6]];
        *(_OWORD *)((char *)v78 + updated[7]) = *(_OWORD *)&v72[updated[7]];
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v78 + *(int *)(v86 + 48)) = v72[*(int *)(v86 + 48)];
        swift_storeEnumTagMultiPayload();
        v85 = v93;
        v64 = v88;
LABEL_27:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v64, 0, 1, v66);
        goto LABEL_28;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          v69(v71, v72, v34);
          v74 = (int *)type metadata accessor for StaticHH2Update(0);
          v71[v74[5]] = v72[v74[5]];
          *(_OWORD *)&v71[v74[6]] = *(_OWORD *)&v72[v74[6]];
          v75 = v74[7];
          v76 = &v71[v75];
          v77 = &v72[v75];
          v76[8] = v77[8];
          *(_QWORD *)v76 = *(_QWORD *)v77;
          swift_storeEnumTagMultiPayload();
        }
        v85 = v93;
        goto LABEL_27;
      }
      v88 = v64;
      v78 = v71;
      *(_OWORD *)v71 = *(_OWORD *)v72;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v83 = updated[5];
      v81 = (char *)v78 + v83;
      v82 = &v72[v83];
      if (v91(&v72[v83], 1, v52))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v81, v82, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v81, 0, 1, v52);
    goto LABEL_26;
  }
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_28:
  *(_BYTE *)(v32 + v37[27]) = *(_BYTE *)(v33 + v37[27]);
  *(_BYTE *)(v32 + v37[28]) = *(_BYTE *)(v33 + v37[28]);
  *(_QWORD *)(v32 + v37[29]) = *(_QWORD *)(v33 + v37[29]);
  swift_storeEnumTagMultiPayload();
  return v32;
}

uint64_t assignWithTake for AccessoryDetails.Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23E1E2FA0(result, type metadata accessor for AccessoryDetails.Payload);
    v2 = (char *)&loc_23E4DFB0C + 4 * byte_23E55837C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23E4E0AD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for StaticAccessory(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StaticService();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for StaticServiceGroup();
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for StaticEndpoint();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.roomId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.shouldShowInDashboard.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isFavorite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.statusIcon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isActivated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t storeEnumTagSinglePayload for AccessoryDetails.Payload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E4E0C14 + 4 * byte_23E558385[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E4E0C48 + 4 * byte_23E558380[v4]))();
}

uint64_t sub_23E4E0C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E0C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4E0C58);
  return result;
}

uint64_t sub_23E4E0C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4E0C6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E4E0C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E0C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.CodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticAccessoryCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticServiceCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticServiceGroupCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys;
}

uint64_t _s13HomeDataModel16AccessoryDetailsV7PayloadO25StaticAccessoryCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E4E0D08 + 4 * byte_23E55838A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E4E0D28 + 4 * byte_23E55838F[v4]))();
}

_BYTE *sub_23E4E0D08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E4E0D28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4E0D30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4E0D38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E4E0D40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E4E0D48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticEndpointCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccessoryDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E4E0DB0 + 4 * byte_23E558399[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E4E0DE4 + 4 * byte_23E558394[v4]))();
}

uint64_t sub_23E4E0DE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E0DEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4E0DF4);
  return result;
}

uint64_t sub_23E4E0E00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4E0E08);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E4E0E0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E0E14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetails.CodingKeys()
{
  return &type metadata for AccessoryDetails.CodingKeys;
}

unint64_t sub_23E4E0E34()
{
  unint64_t result;

  result = qword_256D48F38;
  if (!qword_256D48F38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55876C, &type metadata for AccessoryDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F38);
  }
  return result;
}

unint64_t sub_23E4E0E7C()
{
  unint64_t result;

  result = qword_256D48F40;
  if (!qword_256D48F40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558824, &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F40);
  }
  return result;
}

unint64_t sub_23E4E0EC4()
{
  unint64_t result;

  result = qword_256D48F48;
  if (!qword_256D48F48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5588DC, &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F48);
  }
  return result;
}

unint64_t sub_23E4E0F0C()
{
  unint64_t result;

  result = qword_256D48F50;
  if (!qword_256D48F50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558994, &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F50);
  }
  return result;
}

unint64_t sub_23E4E0F54()
{
  unint64_t result;

  result = qword_256D48F58;
  if (!qword_256D48F58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558A4C, &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F58);
  }
  return result;
}

unint64_t sub_23E4E0F9C()
{
  unint64_t result;

  result = qword_256D48F60;
  if (!qword_256D48F60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558B04, &type metadata for AccessoryDetails.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F60);
  }
  return result;
}

unint64_t sub_23E4E0FE4()
{
  unint64_t result;

  result = qword_256D48F68;
  if (!qword_256D48F68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5589BC, &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F68);
  }
  return result;
}

unint64_t sub_23E4E102C()
{
  unint64_t result;

  result = qword_256D48F70;
  if (!qword_256D48F70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5589E4, &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F70);
  }
  return result;
}

unint64_t sub_23E4E1074()
{
  unint64_t result;

  result = qword_256D48F78;
  if (!qword_256D48F78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558904, &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F78);
  }
  return result;
}

unint64_t sub_23E4E10BC()
{
  unint64_t result;

  result = qword_256D48F80;
  if (!qword_256D48F80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55892C, &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F80);
  }
  return result;
}

unint64_t sub_23E4E1104()
{
  unint64_t result;

  result = qword_256D48F88;
  if (!qword_256D48F88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55884C, &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F88);
  }
  return result;
}

unint64_t sub_23E4E114C()
{
  unint64_t result;

  result = qword_256D48F90;
  if (!qword_256D48F90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558874, &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F90);
  }
  return result;
}

unint64_t sub_23E4E1194()
{
  unint64_t result;

  result = qword_256D48F98;
  if (!qword_256D48F98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558794, &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48F98);
  }
  return result;
}

unint64_t sub_23E4E11DC()
{
  unint64_t result;

  result = qword_256D48FA0;
  if (!qword_256D48FA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5587BC, &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48FA0);
  }
  return result;
}

unint64_t sub_23E4E1224()
{
  unint64_t result;

  result = qword_256D48FA8;
  if (!qword_256D48FA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558A74, &type metadata for AccessoryDetails.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48FA8);
  }
  return result;
}

unint64_t sub_23E4E126C()
{
  unint64_t result;

  result = qword_256D48FB0;
  if (!qword_256D48FB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558A9C, &type metadata for AccessoryDetails.Payload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48FB0);
  }
  return result;
}

unint64_t sub_23E4E12B4()
{
  unint64_t result;

  result = qword_256D48FB8;
  if (!qword_256D48FB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5586DC, &type metadata for AccessoryDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48FB8);
  }
  return result;
}

unint64_t sub_23E4E12FC()
{
  unint64_t result;

  result = qword_256D48FC0;
  if (!qword_256D48FC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558704, &type metadata for AccessoryDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D48FC0);
  }
  return result;
}

uint64_t sub_23E4E1340(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E496369736162 && a2 == 0xE90000000000006FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E4E14C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6341636974617473 && a2 == 0xEF79726F73736563;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553636974617473 && a2 == 0xED00006563697672 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56B370 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E45636974617473 && a2 == 0xEE00746E696F7064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t TileInfoBearer.serviceKinds.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v43 = type metadata accessor for StaticService();
  v40 = *(_QWORD *)(v43 - 8);
  v3 = MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - v5;
  v7 = type metadata accessor for StaticAccessory(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  v14 = *(char **)(a1 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  v20 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v14 + 2);
  v20((char *)&v36 - v18, v1, a1);
  v42 = v13;
  if (swift_dynamicCast())
  {
    v39 = v19;
    v41 = v14;
    v20(v17, v1, a1);
    v21 = swift_dynamicCast();
    v22 = *(_QWORD *)&v10[*(int *)(v7 + 80)];
    MEMORY[0x24BDAC7A8](v21);
    *(&v36 - 2) = (unint64_t)v10;
    swift_bridgeObjectRetain();
    v23 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)(&v36 - 4), v22);
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 16);
    v38 = v10;
    if (v24)
    {
      v37 = a1;
      v44 = MEMORY[0x24BEE4AF8];
      sub_23E2CB18C(0, v24, 0);
      v25 = *(unsigned __int8 *)(v40 + 80);
      v36 = v23;
      v26 = v23 + ((v25 + 32) & ~v25);
      v27 = *(_QWORD *)(v40 + 72);
      v28 = v43;
      v29 = v44;
      do
      {
        sub_23E2712F4(v26, (uint64_t)v6);
        v30 = v6[*(int *)(v28 + 84)];
        sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E2CB18C(0, *(_QWORD *)(v29 + 16) + 1, 1);
          v28 = v43;
          v29 = v44;
        }
        v32 = *(_QWORD *)(v29 + 16);
        v31 = *(_QWORD *)(v29 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_23E2CB18C(v31 > 1, v32 + 1, 1);
          v28 = v43;
          v29 = v44;
        }
        *(_QWORD *)(v29 + 16) = v32 + 1;
        *(_BYTE *)(v29 + v32 + 32) = v30;
        v26 += v27;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      a1 = v37;
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x24BEE4AF8];
    }
    v19 = v39;
    sub_23E1E2FA0((uint64_t)v38, type metadata accessor for StaticAccessory);
    sub_23E1E2FA0((uint64_t)v42, type metadata accessor for StaticAccessory);
    v14 = v41;
  }
  else
  {
    v33 = (uint64_t)v41;
    v34 = v43;
    if (swift_dynamicCast())
    {
      v20(v17, v1, a1);
      swift_dynamicCast();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDE8);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_23E539650;
      *(_BYTE *)(v29 + 32) = v6[*(int *)(v34 + 84)];
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2FA0(v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      v29 = MEMORY[0x24BEE4AF8];
    }
  }
  (*((void (**)(char *, uint64_t))v14 + 1))(v19, a1);
  return v29;
}

unint64_t TileInfoBearer.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v25 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x24BDAC7A8](v25);
  v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v29);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v31);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticActionSet();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StaticAccessory(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v32, a1);
  if (swift_dynamicCast())
  {
    v20 = 0x6341636974617473;
    sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
  }
  else if (swift_dynamicCast())
  {
    v20 = 0x6341636974617473;
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  }
  else if (swift_dynamicCast())
  {
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    v20 = 0xD000000000000013;
  }
  else if (swift_dynamicCast())
  {
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v20 = 0xD000000000000011;
  }
  else
  {
    v21 = (uint64_t)v30;
    if (swift_dynamicCast())
    {
      sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v20 = 0x6553636974617473;
    }
    else
    {
      v22 = (uint64_t)v28;
      if (swift_dynamicCast())
      {
        v20 = 0xD000000000000012;
        sub_23E1E2FA0(v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      }
      else
      {
        v23 = (uint64_t)v26;
        if (swift_dynamicCast())
        {
          v20 = 0xD000000000000012;
          sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
        }
        else
        {
          v20 = 0;
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a1);
  return v20;
}

uint64_t TileInfoBearer.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  unint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  unint64_t v91;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v63 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - v9;
  v78 = 0;
  v79 = 0xE000000000000000;
  sub_23E537E68();
  v90 = v78;
  v91 = v79;
  sub_23E537628();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537E80();
  sub_23E288764();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v64 = v6;
  v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v62 = v10;
  v65 = v5;
  v61 = v11;
  v11(v10, v5);
  sub_23E537628();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v78 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 176))(a1, a2);
  v79 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 72))(&v78, a1, a2);
  v66 = v78;
  v67 = v79;
  v68 = v80;
  v69 = v81;
  v70 = v82;
  v71 = v83;
  v72 = v84;
  v73 = v85;
  v74 = v86;
  v75 = v87;
  v76 = v88;
  v77 = v89;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 96);
  v58 = v2;
  v57 = a1;
  v14 = v13(a1, a2);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v17 = a2;
    v78 = MEMORY[0x24BEE4AF8];
    sub_23E2058B0(0, v15, 0);
    v18 = 0;
    v19 = v78;
    do
    {
      LOBYTE(v66) = *(_BYTE *)(v14 + v18 + 32);
      ServiceKind.localizedDescription.getter();
      v21 = v20;
      v23 = v22;
      v78 = v19;
      v25 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23E2058B0(v24 > 1, v25 + 1, 1);
        v19 = v78;
      }
      ++v18;
      *(_QWORD *)(v19 + 16) = v25 + 1;
      v26 = v19 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
    }
    while (v15 != v18);
    swift_bridgeObjectRelease();
    a2 = v17;
    v16 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
  v78 = v19;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v28 = sub_23E309770();
  v56 = v27;
  v55 = v28;
  sub_23E5374F0();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136))(v57, a2);
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v54 = a2;
    v78 = v16;
    sub_23E2058B0(0, v30, 0);
    result = sub_23E26B68C(v29);
    v32 = result;
    v34 = v33;
    v36 = v35 & 1;
    v60 = v29 + 56;
    v59 = v29;
    while ((v32 & 0x8000000000000000) == 0 && v32 < 1 << *(_BYTE *)(v29 + 32))
    {
      if (((*(_QWORD *)(v60 + (((unint64_t)v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(v29 + 36) != (_DWORD)v34)
        goto LABEL_24;
      v37 = v64;
      v38 = *(_QWORD *)(v29 + 48) + *(_QWORD *)(v64 + 72) * v32;
      v39 = v62;
      v40 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v62, v38, v65);
      v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v42 = v63;
      v41(v63, v39, v40);
      v43 = sub_23E536F38();
      v45 = v44;
      v61(v42, v40);
      v46 = v78;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v46 + 16) + 1, 1);
        v46 = v78;
      }
      v48 = *(_QWORD *)(v46 + 16);
      v47 = *(_QWORD *)(v46 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_23E2058B0(v47 > 1, v48 + 1, 1);
        v46 = v78;
      }
      *(_QWORD *)(v46 + 16) = v48 + 1;
      v49 = v46 + 16 * v48;
      *(_QWORD *)(v49 + 32) = v43;
      *(_QWORD *)(v49 + 40) = v45;
      v29 = v59;
      result = sub_23E2CD280(v32, v34, v36 & 1, v59);
      v32 = result;
      v34 = v50;
      v36 = v51 & 1;
      if (!--v30)
      {
        sub_23E23D578(result, v50, v51 & 1);
        swift_bridgeObjectRelease();
        a2 = v54;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v46 = MEMORY[0x24BEE4AF8];
LABEL_21:
    v78 = v46;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v52 = v57;
    (*(void (**)(uint64_t, uint64_t))(a2 + 120))(v57, a2);
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    (*(void (**)(uint64_t, uint64_t))(a2 + 128))(v52, a2);
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    (*(void (**)(uint64_t, uint64_t))(a2 + 152))(v52, a2);
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v90;
  }
  return result;
}

uint64_t TileInfoBearer.cameraProfile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v6 = type metadata accessor for StaticCameraProfile();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v3, a1);
  if (swift_dynamicCast())
  {
    sub_23E4E2994((uint64_t)v10, a2);
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v14, 1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a1);
}

uint64_t TileInfoBearer.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_23E537E80();
  v2 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_23E4E2994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of TileInfoBearer.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TileInfoBearer.dateAdded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TileInfoBearer.tileIcon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of TileInfoBearer.foregroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TileInfoBearer.isDoubleHigh.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TileInfoBearer.serviceKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of TileInfoBearer.primaryServiceKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of TileInfoBearer.displayAsServiceKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of TileInfoBearer.isFavorite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of TileInfoBearer.shouldShowInDashboard.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of TileInfoBearer.roomIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of TileInfoBearer.roomName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of TileInfoBearer.isActivated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of TileInfoBearer.canBeToggled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of TileInfoBearer.isReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of TileInfoBearer.statusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of TileInfoBearer.toggle()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 184) + *(_QWORD *)(a3 + 184));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23C694;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.minimumClipDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.initialEventFetchLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.defaultEventFetchLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.fetchTimelineEvents(dateInterval:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 32) + *(_QWORD *)(a5 + 32));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23E23C694;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.generateInitialPosterFrames(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E4E2CF0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.downloadAndUpdateFullAsset(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E4E2CF0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.fetchSignificantEvents(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E2748B4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.purgeExpiredCacheEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t _s17PlatformUtilitiesCMa()
{
  return objc_opt_self();
}

uint64_t TemperatureStringIcon.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TemperatureStringIcon.textColor.getter()
{
  return swift_retain();
}

uint64_t sub_23E4E2D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char v3;
  uint64_t v4;
  char v5;
  double v6;
  double v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  v10 = v1;
  v9 = -94;
  *(double *)&result = COERCE_DOUBLE(sub_23E2B51E4(&v9));
  if ((v3 & 1) != 0)
  {
    v10 = v1;
    v9 = 55;
    v4 = sub_23E2B51E4(&v9);
    if ((v5 & 1) != 0
      || (v6 = *(double *)&v4, v10 = v1, v9 = 29, v7 = COERCE_DOUBLE(sub_23E2B51E4(&v9)), (v8 & 1) != 0))
    {
      *(double *)&result = 0.0;
    }
    else
    {
      *(double *)&result = (v6 + v7) * 0.5;
    }
  }
  return result;
}

uint64_t sub_23E4E2E0C(uint64_t a1)
{
  uint64_t v2;
  Swift::Int value;
  uint64_t result;
  unsigned __int8 v5;
  unsigned __int8 v6;
  uint64_t v7;
  Swift::Int_optional v8;

  v2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  v7 = v2;
  v6 = -105;
  v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v6);
  if (v8.is_nil)
    return 0;
  value = v8.value;
  result = sub_23E4E2EB4(a1);
  if (value == 2)
  {
    v7 = v2;
    v5 = 29;
  }
  else
  {
    if (value != 1)
      return result;
    v7 = v2;
    v5 = 55;
  }
  v6 = v5;
  return sub_23E2B51E4(&v6);
}

uint64_t sub_23E4E2EB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  v27 = v5;
  HIBYTE(v26) = 55;
  v6 = sub_23E2B51E4((unsigned __int8 *)&v26 + 7);
  if ((v7 & 1) != 0 || (v8 = v6, v27 = v5, HIBYTE(v26) = 29, sub_23E2B51E4((unsigned __int8 *)&v26 + 7), (v9 & 1) == 0))
  {
    v27 = v5;
    HIBYTE(v26) = 29;
    v10 = sub_23E2B51E4((unsigned __int8 *)&v26 + 7);
    if ((v11 & 1) != 0
      || (v8 = v10, v27 = v5, HIBYTE(v26) = 55, sub_23E2B51E4((unsigned __int8 *)&v26 + 7), (v12 & 1) == 0))
    {
      if (!*(_QWORD *)(v5 + 16))
      {
        v19 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v4, 1, 1, v19);
LABEL_12:
        sub_23E4E3CD0((uint64_t)v4);
        return 0;
      }
      swift_bridgeObjectRetain();
      v13 = sub_23E1EAF70(55);
      if ((v14 & 1) != 0)
      {
        v15 = v13;
        v16 = *(_QWORD *)(v5 + 56);
        v17 = type metadata accessor for StaticCharacteristic();
        v18 = *(_QWORD *)(v17 - 8);
        sub_23E1E2F50(v16 + *(_QWORD *)(v18 + 72) * v15, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v4, 0, 1, v17);
      }
      else
      {
        v17 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17) == 1)
        goto LABEL_12;
      v21 = (uint64_t *)&v4[*(int *)(v17 + 44)];
      v23 = *v21;
      v22 = v21[1];
      v24 = v21[2];
      v25 = v21[3];
      sub_23E42D110(*v21, v22, v24, v25);
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      if (v25 >> 8 == 0xFFFFFFFF)
        return 0;
      sub_23E23D564(v23, v22, v24, v25);
      if ((v25 & 0xC000000000000000) == 0x4000000000000000)
        return v22;
      else
        return 0;
    }
  }
  return v8;
}

uint64_t static TemperatureStringIcon.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_23E538354() & 1) != 0)
    return sub_23E5372F8() & 1;
  else
    return 0;
}

uint64_t TemperatureStringIcon.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23E537334();
  return swift_release();
}

uint64_t TemperatureStringIcon.hashValue.getter()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23E537334();
  swift_release();
  return sub_23E5384A4();
}

uint64_t sub_23E4E3254(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_23E538354() & 1) != 0)
    return sub_23E5372F8() & 1;
  else
    return 0;
}

uint64_t sub_23E4E32B4()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23E537334();
  swift_release();
  return sub_23E5384A4();
}

uint64_t sub_23E4E3334()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23E537334();
  return swift_release();
}

uint64_t sub_23E4E3398()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_23E537334();
  swift_release();
  return sub_23E5384A4();
}

unint64_t sub_23E4E3418()
{
  unint64_t result;

  result = qword_256D49090;
  if (!qword_256D49090)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for TemperatureStringIcon, &type metadata for TemperatureStringIcon);
    atomic_store(result, (unint64_t *)&qword_256D49090);
  }
  return result;
}

uint64_t destroy for TemperatureStringIcon()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s13HomeDataModel21TemperatureStringIconVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TemperatureStringIcon(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TemperatureStringIcon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TemperatureStringIcon()
{
  return &type metadata for TemperatureStringIcon;
}

void sub_23E4E357C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;

  v2 = type metadata accessor for ActionService();
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v3 == 0x800000023E55FFC0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v4 = sub_23E538354();
  v5 = swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
LABEL_5:
    v6 = sub_23E4E2D48(a1);
    if ((v7 & 1) == 0)
    {
LABEL_6:
      static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v6);
      return;
    }
    goto LABEL_12;
  }
  if (ServiceKind.rawValue.getter(v5) == 0xD000000000000024 && v8 == 0x800000023E55FAE0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return;
  }
  v6 = sub_23E4E2E0C(a1);
  if ((v10 & 1) == 0)
    goto LABEL_6;
LABEL_12:
  static String.hfLocalized(_:)();
}

uint64_t sub_23E4E36E0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  Swift::Int value;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  Swift::Int_optional v15;
  Swift::Int_optional v16;

  v2 = type metadata accessor for ActionService();
  v3 = *(_BYTE *)(a1 + *(int *)(v2 + 44));
  LOBYTE(v14) = v3;
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v4 == 0x800000023E55FFC0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v5 = sub_23E538354();
  v6 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_5:
    v14 = *(_QWORD *)(a1 + *(int *)(v2 + 60));
    v13 = -104;
    v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
    if (!v15.is_nil)
    {
      switch(v15.value)
      {
        case 0:
          return sub_23E537328();
        case 1:
          return sub_23E53737C();
        case 2:
          return sub_23E53731C();
        case 3:
          return sub_23E537358();
        default:
          return 0;
      }
    }
    return 0;
  }
  LOBYTE(v14) = v3;
  if (ServiceKind.rawValue.getter(v6) == 0xD000000000000024 && v8 == 0x800000023E55FAE0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      return 0;
  }
  v10 = *(_QWORD *)(a1 + *(int *)(v2 + 60));
  v14 = v10;
  v13 = -105;
  v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (!v16.is_nil)
  {
    value = v16.value;
    v14 = v10;
    v13 = 3;
    v12 = sub_23E2B4680(&v13);
    if (v12 != 2)
    {
      if ((v12 & 1) == 0)
        return sub_23E537328();
      switch(value)
      {
        case 2:
          return sub_23E53731C();
        case 1:
          return sub_23E53737C();
        case 0:
          return sub_23E537358();
      }
    }
  }
  return 0;
}

void sub_23E4E38CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  char v16;
  char v17;

  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_BYTE *)(a1 + *(int *)(v3 + 84));
  if (ServiceKind.rawValue.getter(v3) == 0xD000000000000024 && v6 == 0x800000023E55FFC0)
  {
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v7 = sub_23E538354();
    swift_bridgeObjectRelease();
    v8 = sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v7 & 1) == 0)
    {
      v16 = v5[*(int *)(v2 + 84)];
      if (ServiceKind.rawValue.getter(v8) != 0xD000000000000024 || v9 != 0x800000023E55FAE0)
      {
        v12 = sub_23E538354();
        swift_bridgeObjectRelease();
        sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((v12 & 1) == 0)
          return;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_9:
  v15 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v14 = 44;
  v10 = sub_23E2B51E4(&v14);
  if ((v11 & 1) != 0)
    static String.hfLocalized(_:)();
  else
    static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v10);
}

uint64_t sub_23E4E3AB8(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  Swift::Int_optional v6;
  uint64_t v7;
  Swift::Int value;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  unsigned __int8 v15;
  uint64_t v16;
  Swift::Int_optional v17;

  v2 = type metadata accessor for StaticService();
  v3 = *(_BYTE *)(a1 + *(int *)(v2 + 84));
  LOBYTE(v16) = v3;
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v4 == 0x800000023E55FFC0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_23E538354();
    v6.value = swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      goto LABEL_12;
  }
  v7 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v16 = v7;
  v15 = -104;
  v6 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v15);
  if (!v6.is_nil)
  {
    value = v6.value;
    v16 = v7;
    v15 = 34;
    v6 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v15);
    if (!v6.is_nil)
    {
      if (v6.value != 2)
      {
        if (v6.value != 1)
        {
          if (!v6.value)
          {
            if (!value)
              return sub_23E537364();
            return sub_23E537358();
          }
          return 0;
        }
        if (value)
          return sub_23E53737C();
        return sub_23E537364();
      }
      if (!value)
        return sub_23E537364();
      return sub_23E53731C();
    }
  }
LABEL_12:
  LOBYTE(v16) = v3;
  if (ServiceKind.rawValue.getter(v6.value) == 0xD000000000000024 && v9 == 0x800000023E55FAE0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      return 0;
  }
  v11 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v16 = v11;
  v15 = 3;
  v12 = sub_23E2B4680(&v15);
  if (v12 == 2)
    return 0;
  v13 = v12;
  v16 = v11;
  v15 = 33;
  v17 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v15);
  if (v17.is_nil)
    return 0;
  if ((v13 & 1) == 0)
    return sub_23E537364();
  if (v17.value < 2uLL)
    return sub_23E537358();
  if (v17.value != 2)
  {
    if (v17.value != 3)
      return 0;
    return sub_23E53731C();
  }
  return sub_23E53737C();
}

uint64_t sub_23E4E3CD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t Color.colorDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  float v5;
  float v6;
  float v7;
  uint64_t v9;

  v0 = sub_23E537298();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53728C();
  sub_23E537394();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E53E0F0;
  *(_QWORD *)(inited + 32) = 114;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  sub_23E5373A0();
  *(double *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = 103;
  *(_QWORD *)(inited + 64) = 0xE100000000000000;
  sub_23E5373B8();
  *(double *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 98;
  *(_QWORD *)(inited + 88) = 0xE100000000000000;
  sub_23E5373AC();
  *(double *)(inited + 96) = v7;
  return sub_23E20E6C0(inited);
}

_QWORD *Color.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD *v7;
  double v8;
  char v9;
  double v10;
  double v11;
  double v12;
  char v13;
  double v14;
  char v15;
  char v16;
  double v17;
  char v18;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE v26[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D490A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4E465C();
  sub_23E5384E0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v26[15] = 0;
    v8 = COERCE_DOUBLE(sub_23E5380F0());
    v10 = 1.0;
    if ((v9 & 1) != 0)
      v11 = 1.0;
    else
      v11 = v8;
    v26[14] = 1;
    v12 = COERCE_DOUBLE(sub_23E5380F0());
    if ((v13 & 1) == 0)
      v10 = v12;
    v26[13] = 2;
    v14 = COERCE_DOUBLE(sub_23E5380F0());
    v16 = v15;
    v26[12] = 3;
    v17 = COERCE_DOUBLE(sub_23E5380F0());
    if ((v16 & 1) != 0)
      v20 = 1.0;
    else
      v20 = v14;
    if ((v18 & 1) != 0)
      v21 = 1.0;
    else
      v21 = v17;
    v22 = sub_23E5372EC();
    MEMORY[0x24BDAC7A8](v22);
    v24 = &v26[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *, _QWORD))(v25 + 104))(v24, *MEMORY[0x24BDF3C20]);
    v7 = (_QWORD *)MEMORY[0x24264E65C](v24, v11, v10, v20, v21);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t Color.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D490B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4E465C();
  sub_23E5384EC();
  v7 = sub_23E537298();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E53728C();
  sub_23E537394();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  sub_23E5373A0();
  v12[15] = 0;
  v12[12] = 0;
  sub_23E538210();
  if (!v1)
  {
    sub_23E5373B8();
    v12[11] = 1;
    v12[8] = 0;
    sub_23E538210();
    sub_23E5373AC();
    v12[7] = 2;
    v12[4] = 0;
    sub_23E538210();
    v12[3] = 3;
    v12[0] = 0;
    sub_23E538210();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23E4E42EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4E4314 + 4 * byte_23E558DF8[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_23E4E4314()
{
  return 0x6E65657267;
}

uint64_t sub_23E4E4328()
{
  return 1702194274;
}

uint64_t sub_23E4E4338()
{
  return 0x7974696361706FLL;
}

uint64_t sub_23E4E4350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4E4844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4E4374()
{
  sub_23E4E465C();
  return sub_23E538570();
}

uint64_t sub_23E4E439C()
{
  sub_23E4E465C();
  return sub_23E53857C();
}

_QWORD *sub_23E4E43C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = Color.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23E4E43EC(_QWORD *a1)
{
  return Color.encode(to:)(a1);
}

uint64_t sub_23E4E4404()
{
  uint64_t result;

  result = sub_23E53737C();
  qword_256D49098 = result;
  return result;
}

uint64_t static Color.homeAccentColor.getter()
{
  if (qword_256D3EEF0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Color.homeAccentColor.setter(uint64_t a1)
{
  if (qword_256D3EEF0 != -1)
    swift_once();
  swift_beginAccess();
  qword_256D49098 = a1;
  return swift_release();
}

uint64_t (*static Color.homeAccentColor.modify())()
{
  if (qword_256D3EEF0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Color.resolve(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_23E537298();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53728C();
  v6 = sub_23E537274();
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_23E537280();
  sub_23E537394();
  v9 = sub_23E5373D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

unint64_t sub_23E4E465C()
{
  unint64_t result;

  result = qword_256D490A8;
  if (!qword_256D490A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558F28, &_s9ColorKeysON);
    atomic_store(result, (unint64_t *)&qword_256D490A8);
  }
  return result;
}

uint64_t _s9ColorKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E4E46EC + 4 * byte_23E558E01[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E4E4720 + 4 * byte_23E558DFC[v4]))();
}

uint64_t sub_23E4E4720(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E4728(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4E4730);
  return result;
}

uint64_t sub_23E4E473C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4E4744);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E4E4748(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E4750(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9ColorKeysOMa()
{
  return &_s9ColorKeysON;
}

unint64_t sub_23E4E4770()
{
  unint64_t result;

  result = qword_256D490B8;
  if (!qword_256D490B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558F00, &_s9ColorKeysON);
    atomic_store(result, (unint64_t *)&qword_256D490B8);
  }
  return result;
}

unint64_t sub_23E4E47B8()
{
  unint64_t result;

  result = qword_256D490C0;
  if (!qword_256D490C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558E70, &_s9ColorKeysON);
    atomic_store(result, (unint64_t *)&qword_256D490C0);
  }
  return result;
}

unint64_t sub_23E4E4800()
{
  unint64_t result;

  result = qword_256D490C8;
  if (!qword_256D490C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E558E98, &_s9ColorKeysON);
    atomic_store(result, (unint64_t *)&qword_256D490C8);
  }
  return result;
}

uint64_t sub_23E4E4844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_23E4E49D4(char a1)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4A24()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4AB0(char a1)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4AFC()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4B64(char a1)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4BB0()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4E4C3C()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4CC0(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4D0C()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4D98(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4DE0()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4E48(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4E94()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E4F54(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E4F9C()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E5028(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E5074()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4E5150()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4E51D0(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E4E5224()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void HMApplicationData.isDoubleHigh.setter(char a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  if (a1 != 2)
  {
    v2 = objc_msgSend(v1, sel_applicationData);
    v3 = (void *)sub_23E537538();
    v4 = (void *)sub_23E537538();
    objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v1, sel_applicationData);
    v7[4] = _s13HomeDataModel0bC0C11homeManager_9didUpdateySo06HMHomeE0C_So0hE19AuthorizationStatusVtF_0;
    v7[5] = 0;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_23E50B358;
    v7[3] = &block_descriptor_39;
    v6 = _Block_copy(v7);
    objc_msgSend(v1, sel_updateApplicationData_completionHandler_, v5, v6);
    _Block_release(v6);

  }
}

unint64_t TileSize.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000018;
}

uint64_t HMApplicationData.isDoubleHigh.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unsigned int v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    swift_dynamicCast();
  }
  v4 = sub_23E5380A8();
  swift_bridgeObjectRelease();
  if (v4 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (v4)
    return v5;
  else
    return 0;
}

uint64_t static HMApplicationData.tileSizeKey.getter()
{
  return 0x6953656C69544648;
}

unint64_t static HMApplicationData.dateAddedData.getter()
{
  return 0xD00000000000001ELL;
}

HomeDataModel::TileSize_optional __swiftcall TileSize.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeDataModel::TileSize_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

HomeDataModel::TileSize_optional sub_23E4E55F8(Swift::String *a1)
{
  return TileSize.init(rawValue:)(*a1);
}

void sub_23E4E5604(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000019;
  else
    v2 = 0xD000000000000018;
  v3 = 0x800000023E560110;
  if (*v1)
    v3 = 0x800000023E560130;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23E4E5648()
{
  return sub_23E4E4C3C();
}

uint64_t sub_23E4E5650()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4E56B0()
{
  return sub_23E4E5150();
}

uint64_t sub_23E4E56B8(char *a1, char *a2)
{
  return sub_23E523B0C(*a1, *a2);
}

uint64_t sub_23E4E56C4()
{
  sub_23E4E593C();
  return sub_23E53779C();
}

uint64_t sub_23E4E5720()
{
  sub_23E4E593C();
  return sub_23E537760();
}

void (*HMApplicationData.isDoubleHigh.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = HMApplicationData.isDoubleHigh.getter();
  return sub_23E4E57A0;
}

void sub_23E4E57A0(uint64_t a1)
{
  HMApplicationData.isDoubleHigh.setter(*(_BYTE *)(a1 + 16));
}

unint64_t sub_23E4E57C8()
{
  unint64_t result;

  result = qword_256D490D0;
  if (!qword_256D490D0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for TileSize, &type metadata for TileSize);
    atomic_store(result, (unint64_t *)&qword_256D490D0);
  }
  return result;
}

uint64_t sub_23E4E580C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMApplicationData.isDoubleHigh.getter();
  *a1 = result;
  return result;
}

void sub_23E4E5834(char *a1)
{
  HMApplicationData.isDoubleHigh.setter(*a1);
}

uint64_t sub_23E4E5858()
{
  return 8;
}

_QWORD *sub_23E4E5864(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t storeEnumTagSinglePayload for TileSize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E4E58BC + 4 * byte_23E558FB3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E4E58F0 + 4 * byte_23E558FAE[v4]))();
}

uint64_t sub_23E4E58F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E58F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4E5900);
  return result;
}

uint64_t sub_23E4E590C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4E5914);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E4E5918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4E5920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TileSize()
{
  return &type metadata for TileSize;
}

unint64_t sub_23E4E593C()
{
  unint64_t result;

  result = qword_256D490D8;
  if (!qword_256D490D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for TileSize, &type metadata for TileSize);
    atomic_store(result, (unint64_t *)&qword_256D490D8);
  }
  return result;
}

unint64_t sub_23E4E5980(uint64_t a1, _BYTE *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[2];
  char *v50;
  char *v51;
  id v52;
  uint64_t *v53;
  _BYTE *v54;
  uint64_t v55;
  void (*v56)(uint64_t, unint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t updated;

  v53 = a3;
  v54 = a2;
  v64 = sub_23E536F80();
  v60 = *(_QWORD **)(v64 - 8);
  v5 = MEMORY[0x24BDAC7A8](v64);
  v50 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v59 = (uint64_t)v49 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v49 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v14 = *(_QWORD *)(updated - 8);
  v15 = MEMORY[0x24BDAC7A8](updated);
  v69 = (uint64_t)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v67 = (id *)((char *)v49 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v63 = (uint64_t)v49 - v19;
  v68 = *(_QWORD *)(a1 + 16);
  if (!v68)
    return MEMORY[0x24BEE4AF8];
  v49[1] = v3;
  v62 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v65 = a1 + v62;
  v70 = *(_QWORD *)(v14 + 72);
  v49[0] = a1;
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = MEMORY[0x24BEE4AF8];
  v61 = v10;
  v51 = v13;
  v22 = v67;
  v66 = v14;
  do
  {
    v23 = v65 + v70 * v20;
    sub_23E1E2F50(v23, (uint64_t)v22, type metadata accessor for StateSnapshot.UpdateType);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StateSnapshot.UpdateType);
LABEL_5:
      sub_23E1E2F50(v23, (uint64_t)v13, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v13, 0, 1, updated);
      goto LABEL_6;
    }
    v27 = *v22;
    if (!*v22)
      goto LABEL_5;
    if ((*v54 & 1) == 0)
    {
      v30 = *v53;
      swift_bridgeObjectRetain();
      v52 = v27;
      v31 = objc_msgSend(v27, sel_uniqueIdentifier);
      sub_23E536F68();

      if (!*(_QWORD *)(v30 + 16)
        || (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
            v32 = sub_23E5374CC(),
            v33 = -1 << *(_BYTE *)(v30 + 32),
            v34 = v32 & ~v33,
            v58 = v30 + 56,
            ((*(_QWORD *)(v30 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0))
      {
        swift_bridgeObjectRelease();
        v41 = (void (*)(char *, uint64_t))v60[1];
LABEL_24:
        v42 = v64;
        v41(v10, v64);
        v43 = v52;
        v44 = objc_msgSend(v52, sel_uniqueIdentifier);
        v45 = v50;
        sub_23E536F68();

        v46 = v59;
        sub_23E1FFF40(v59, v45);

        v47 = v46;
        v10 = v61;
        v41((char *)v47, v42);
        v13 = v51;
        goto LABEL_5;
      }
      v55 = ~v33;
      v35 = v60[9];
      v56 = (void (*)(uint64_t, unint64_t, uint64_t))v60[2];
      v57 = v35;
      while (1)
      {
        v36 = v30;
        v37 = *(_QWORD *)(v30 + 48) + v57 * v34;
        v38 = v59;
        v39 = v64;
        v56(v59, v37, v64);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v40 = sub_23E537514();
        v41 = (void (*)(char *, uint64_t))v60[1];
        v41((char *)v38, v39);
        if ((v40 & 1) != 0)
          break;
        v34 = (v34 + 1) & v55;
        v30 = v36;
        if (((*(_QWORD *)(v58 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v10 = v61;
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      v10 = v61;
      v41(v61, v64);
      v13 = v51;
      v27 = v52;
      v22 = v67;
    }
    v28 = v66;
    v29 = updated;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v13, 1, 1, updated);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v29) == 1)
    {
      sub_23E1E7C64((uint64_t)v13, &qword_254334250);
      goto LABEL_11;
    }
LABEL_6:
    v24 = v63;
    sub_23E1E2FDC((uint64_t)v13, v63, type metadata accessor for StateSnapshot.UpdateType);
    sub_23E1E2FDC(v24, v69, type metadata accessor for StateSnapshot.UpdateType);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_23E51FB8C(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    v26 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    if (v26 >= v25 >> 1)
      v21 = sub_23E51FB8C(v25 > 1, v26 + 1, 1, v21);
    *(_QWORD *)(v21 + 16) = v26 + 1;
    sub_23E1E2FDC(v69, v21 + v62 + v26 * v70, type metadata accessor for StateSnapshot.UpdateType);
    v22 = v67;
LABEL_11:
    ++v20;
  }
  while (v20 != v68);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_23E4E5F34(uint64_t a1, void (*a2)(_QWORD *a1@<X8>), uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t updated;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t isUniquelyReferenced_nonNull_native;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  id *v65;
  id v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  _QWORD **v80;
  _QWORD *v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t result;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  uint64_t v90;
  id *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void (*v104)(_QWORD *@<X8>);
  char *v105;
  _QWORD v106[6];
  uint64_t v107;

  v104 = a2;
  v97 = a5;
  v92 = a4;
  v95 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D490E0);
  MEMORY[0x24BDAC7A8](v6);
  v103 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s7MergeIdVMa();
  v100 = *(_QWORD *)(v8 - 8);
  v101 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v90 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)&v87 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v87 - v13;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v94 = *(_QWORD *)(updated - 8);
  v16 = MEMORY[0x24BDAC7A8](updated);
  v98 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v91 = (id *)((char *)&v87 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v96 = (uint64_t)&v87 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (id *)((char *)&v87 - v23);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (__int128 *)((char *)&v87 - v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23E536F80();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v89 = (char *)&v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v93 = (char *)&v87 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v87 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v102 = (char *)&v87 - v39;
  v107 = a1;
  sub_23E1E2F50(a1, (uint64_t)v26, type metadata accessor for StateSnapshot.UpdateType);
  v99 = updated;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9)
  {
    v41 = (uint64_t)v14;
    v42 = (char *)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
    (*(void (**)(char *, __int128 *, uint64_t))(v31 + 32))(v29, v26, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
    v43 = (uint64_t)v42;
    isUniquelyReferenced_nonNull_native = (uint64_t)v105;
    __swift_destroy_boxed_opaque_existential_0(v43);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23E1E6C84(v26, (uint64_t)v106);
      sub_23E4E86E0(v106, (uint64_t)v29);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v106);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
      sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StateSnapshot.UpdateType);
    }
    v41 = (uint64_t)v14;
    isUniquelyReferenced_nonNull_native = (uint64_t)v105;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_23E1E7C64((uint64_t)v29, &qword_254333F50);
    v104 = 0;
  }
  else
  {
    v88 = v41;
    v45 = v102;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v102, v29, v30);
    v87 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v87(v38, v45, v30);
    v46 = (uint64_t)v104;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v106[0] = *(_QWORD *)v46;
    v47 = (_QWORD *)v106[0];
    *(_QWORD *)v46 = 0x8000000000000000;
    v49 = sub_23E1E3300((uint64_t)v38);
    v50 = v47[2];
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v41 = v48;
    if (v47[3] >= v52)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E21DA18();
        v47 = (_QWORD *)v106[0];
      }
    }
    else
    {
      sub_23E20517C(v52, isUniquelyReferenced_nonNull_native);
      v47 = (_QWORD *)v106[0];
      v53 = sub_23E1E3300((uint64_t)v38);
      if ((v41 & 1) != (v54 & 1))
      {
        sub_23E5383C0();
        __break(1u);
        goto LABEL_49;
      }
      v49 = v53;
    }
    v46 = (uint64_t)v104;
    *(_QWORD *)v104 = v47;
    swift_bridgeObjectRelease();
    v47 = *(_QWORD **)v46;
    swift_bridgeObjectRetain();
    if ((v41 & 1) == 0)
    {
      v46 = (uint64_t)v93;
      v87(v93, v38, v30);
      sub_23E20485C(v49, v46, 0, v47);
    }
    isUniquelyReferenced_nonNull_native = v47[7];
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v49);
    v56 = __OFADD__(v55, 1);
    v57 = v55 + 1;
    if (v56)
    {
LABEL_46:
      __break(1u);
LABEL_47:
      v47 = (_QWORD *)sub_23E51FB8C(0, v47[2] + 1, 1, (unint64_t)v47);
      *(_QWORD *)(v31 + 8 * v46) = v47;
LABEL_40:
      v85 = v47[2];
      v84 = v47[3];
      if (v85 >= v84 >> 1)
      {
        v47 = (_QWORD *)sub_23E51FB8C(v84 > 1, v85 + 1, 1, (unint64_t)v47);
        *(_QWORD *)(v31 + 8 * v46) = v47;
      }
      v71 = (uint64_t)v104;
      v47[2] = v85 + 1;
      sub_23E1E2FDC(v98, (uint64_t)v47+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(_QWORD *)(v94 + 72) * v85, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FA0(isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      return sub_23E22D1F8(v71);
    }
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v49) = v57;
    v58 = *(void (**)(char *, uint64_t))(v31 + 8);
    v58(v38, v30);
    v58(v102, v30);
    v104 = sub_23E2E0A20;
    isUniquelyReferenced_nonNull_native = (uint64_t)v105;
    v41 = v88;
  }
  sub_23E1E2F50(v107, (uint64_t)v24, type metadata accessor for StateSnapshot.UpdateType);
  v59 = swift_getEnumCaseMultiPayload();
  v60 = v101;
  if (v59)
  {
    sub_23E1E2FA0((uint64_t)v24, type metadata accessor for StateSnapshot.UpdateType);
  }
  else
  {
    v66 = *v24;
    if (*v24)
    {
      v67 = objc_msgSend(*v24, sel_uniqueIdentifier);
      v68 = v89;
      sub_23E536F68();

      v69 = (uint64_t)v93;
      isUniquelyReferenced_nonNull_native = (uint64_t)v105;
      sub_23E1FFF40((uint64_t)v93, v68);

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v69, v30);
      v61 = v107;
      v64 = (uint64_t)v103;
      goto LABEL_29;
    }
  }
  v61 = v107;
  v62 = v96;
  sub_23E1E2F50(v107, v96, type metadata accessor for StateSnapshot.UpdateType);
  v63 = swift_getEnumCaseMultiPayload();
  v64 = (uint64_t)v103;
  if (v63 != 12)
  {
    if (v63)
    {
LABEL_25:
      sub_23E1E2FA0(v62, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_29;
    }
    v65 = v91;
    sub_23E1E2F50(v62, (uint64_t)v91, type metadata accessor for StateSnapshot.UpdateType);
    if (*v65)
    {

      goto LABEL_25;
    }
  }
  sub_23E1E2FA0(v62, type metadata accessor for StateSnapshot.UpdateType);
  v70 = swift_bridgeObjectRetain();
  sub_23E2691A4(v70);
LABEL_29:
  sub_23E4E6818(v64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v64, 1, v60) == 1)
  {
    sub_23E1E7C64(v64, &qword_256D490E0);
    v71 = (uint64_t)v104;
    return sub_23E22D1F8(v71);
  }
  sub_23E1E2FDC(v64, v41, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  sub_23E1E2F50(v41, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  sub_23E1E2F50(v61, v98, type metadata accessor for StateSnapshot.UpdateType);
  v72 = v97;
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v106[0] = *v72;
  v47 = (_QWORD *)v106[0];
  *v72 = 0x8000000000000000;
  v46 = sub_23E2114C8(isUniquelyReferenced_nonNull_native);
  v74 = v47[2];
  v75 = (v73 & 1) == 0;
  v76 = v74 + v75;
  if (__OFADD__(v74, v75))
    goto LABEL_45;
  v77 = v73;
  if (v47[3] >= v76)
  {
    if ((v31 & 1) == 0)
    {
      sub_23E2219F4();
      v47 = (_QWORD *)v106[0];
    }
LABEL_37:
    v80 = (_QWORD **)v97;
    *v97 = v47;
    swift_bridgeObjectRelease();
    v81 = *v80;
    swift_bridgeObjectRetain();
    if ((v77 & 1) == 0)
    {
      v82 = v90;
      sub_23E1E2F50(isUniquelyReferenced_nonNull_native, v90, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      sub_23E21D1C8(v46, v82, MEMORY[0x24BEE4AF8], v81);
    }
    v31 = v81[7];
    swift_bridgeObjectRelease();
    v47 = *(_QWORD **)(v31 + 8 * v46);
    v83 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v31 + 8 * v46) = v47;
    if ((v83 & 1) != 0)
      goto LABEL_40;
    goto LABEL_47;
  }
  sub_23E219D44(v76, v31);
  v47 = (_QWORD *)v106[0];
  v78 = sub_23E2114C8(isUniquelyReferenced_nonNull_native);
  if ((v77 & 1) == (v79 & 1))
  {
    v46 = v78;
    goto LABEL_37;
  }
LABEL_49:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E4E6818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t updated;
  uint64_t v26;
  __int128 *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t (*v57)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v82 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v78 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v78 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v78 - v11;
  v13 = sub_23E536F80();
  v80 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v78 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v78 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v78 - v23;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v27 = (__int128 *)((char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E2F50(v1, (uint64_t)v27, v28);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_23E1E6C84(v27, (uint64_t)&v83);
      sub_23E4E86E0(&v83, (uint64_t)v12);
      v30 = v80;
      v29 = v81;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v12, 1, v81) == 1)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v83);
        v31 = (uint64_t)v12;
        goto LABEL_6;
      }
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v24, v12, v29);
      v68 = v79;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v79, v24, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v68, 0, 1, v29);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v29);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v83);
      v69 = (uint64_t)v68;
      v42 = v82;
      sub_23E1E4E3C(v69, v82, &qword_254333F50);
      v70 = _s7MergeIdVMa();
      v55 = v70;
      v71 = (unint64_t *)(v42 + *(int *)(v70 + 20));
      v72 = 0x6574636172616863;
      v73 = 0xEF73636974736972;
      goto LABEL_16;
    case 2u:
      v38 = *(_QWORD *)v27;
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FF0);
      v86 = sub_23E1F9710(&qword_256D40FF8, &qword_256D40FF0, MEMORY[0x24BEE0310]);
      v83 = v38;
      sub_23E4E86E0(&v83, (uint64_t)v8);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v83);
      v40 = v80;
      v39 = v81;
      v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48))(v8, 1, v81);
      v42 = v82;
      if (v41 == 1)
      {
        sub_23E1E7C64((uint64_t)v8, &qword_254333F50);
        v43 = _s7MergeIdVMa();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
      }
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v22, v8, v39);
      v77 = (uint64_t)v79;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v79, v22, v39);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v77, 0, 1, v39);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v39);
      sub_23E1E4E3C(v77, v42, &qword_254333F50);
      v70 = _s7MergeIdVMa();
      v55 = v70;
      v71 = (unint64_t *)(v42 + *(int *)(v70 + 20));
      v72 = 0xD000000000000020;
      v76 = "characteristicsAndOverrideValues";
      goto LABEL_15;
    case 3u:
      v32 = *(_QWORD *)v27;
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FF0);
      v86 = sub_23E1F9710(&qword_256D40FF8, &qword_256D40FF0, MEMORY[0x24BEE0310]);
      v83 = v32;
      sub_23E4E86E0(&v83, (uint64_t)v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v83);
      v34 = v80;
      v33 = v81;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v5, 1, v81) == 1)
      {
        v31 = (uint64_t)v5;
LABEL_6:
        sub_23E1E7C64(v31, &qword_254333F50);
        v35 = _s7MergeIdVMa();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v82, 1, 1, v35);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v19, v5, v33);
        v74 = v79;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v79, v19, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v74, 0, 1, v33);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v33);
        v75 = (uint64_t)v74;
        v42 = v82;
        sub_23E1E4E3C(v75, v82, &qword_254333F50);
        v70 = _s7MergeIdVMa();
        v55 = v70;
        v71 = (unint64_t *)(v42 + *(int *)(v70 + 20));
        v72 = 0xD000000000000025;
        v76 = "characteristicsAndLocalOverrideValues";
LABEL_15:
        v73 = (unint64_t)(v76 - 32) | 0x8000000000000000;
LABEL_16:
        *v71 = v72;
        v71[1] = v73;
        v57 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
        v58 = v42;
        return v57(v58, 0, 1, v55);
      }
    case 7u:
      v44 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
      v45 = *(void **)((char *)v27 + v44[12]);
      v46 = *(void **)((char *)v27 + v44[16]);
      v47 = *(void **)((char *)v27 + v44[20]);
      v49 = v80;
      v48 = v81;
      (*(void (**)(char *, __int128 *, uint64_t))(v80 + 32))(v16, v27, v81);
      v50 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v79, 1, 1, v48);
      v83 = 0;
      v84 = 0xE000000000000000;
      sub_23E537E68();
      swift_bridgeObjectRelease();
      v83 = 0x6572617774666F73;
      v84 = 0xEF2D657461647055;
      sub_23E536F38();
      sub_23E537628();
      swift_bridgeObjectRelease();

      v51 = v83;
      v52 = v84;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v48);
      v53 = (uint64_t)v50;
      v54 = v82;
      sub_23E1E4E3C(v53, v82, &qword_254333F50);
      v55 = _s7MergeIdVMa();
      v56 = (uint64_t *)(v54 + *(int *)(v55 + 20));
      *v56 = v51;
      v56[1] = v52;
      v57 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
      v58 = v54;
      return v57(v58, 0, 1, v55);
    case 9u:
      v59 = (uint64_t)v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
      v60 = v80;
      v61 = v27;
      v62 = v81;
      (*(void (**)(char *, __int128 *, uint64_t))(v80 + 32))(v16, v61, v81);
      v63 = v79;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v79, v16, v62);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v63, 0, 1, v62);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v62);
      v64 = (uint64_t)v63;
      v65 = v82;
      sub_23E1E4E3C(v64, v82, &qword_254333F50);
      v66 = _s7MergeIdVMa();
      v67 = (_QWORD *)(v65 + *(int *)(v66 + 20));
      *v67 = 0x73656C69666F7270;
      v67[1] = 0xE800000000000000;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 0, 1, v66);
      return __swift_destroy_boxed_opaque_existential_0(v59);
    default:
      v37 = _s7MergeIdVMa();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v82, 1, 1, v37);
      return sub_23E1E2FA0((uint64_t)v27, type metadata accessor for StateSnapshot.UpdateType);
  }
}

uint64_t sub_23E4E6F9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t updated;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t (*v56)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[6];
  uint64_t v105;

  v101 = a7;
  v93 = a6;
  v94 = a3;
  v95 = a5;
  v96 = a2;
  v91 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  MEMORY[0x24BDAC7A8](v8);
  v89 = (uint64_t *)((char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D490E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s7MergeIdVMa();
  v97 = *(_QWORD *)(v13 - 8);
  v98 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v88 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v87 = (uint64_t)&v85 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v99 = (uint64_t)&v85 - v18;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v103 = *(_QWORD *)(updated - 8);
  v20 = MEMORY[0x24BDAC7A8](updated);
  v86 = (uint64_t)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v92 = (uint64_t)&v85 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (__int128 *)((char *)&v85 - v24);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23E536F80();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v90 = (char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v85 - v33;
  v100 = a1;
  sub_23E1E2F50(a1, (uint64_t)v25, type metadata accessor for StateSnapshot.UpdateType);
  v102 = updated;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9)
  {
    v36 = (uint64_t)v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
    (*(void (**)(char *, __int128 *, uint64_t))(v30 + 32))(v28, v25, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v29);
    __swift_destroy_boxed_opaque_existential_0(v36);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    sub_23E1E6C84(v25, (uint64_t)v104);
    sub_23E4E86E0(v104, (uint64_t)v28);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v104);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StateSnapshot.UpdateType);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_23E1E7C64((uint64_t)v28, &qword_254333F50);
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v34, v28, v29);
  v37 = *v96;
  swift_bridgeObjectRetain();
  v38 = sub_23E20FAB0((uint64_t)v34, v37);
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v29);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v101, 1, 1, v102);
  }
  if ((sub_23E20FAB0((uint64_t)v34, v94) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v29);
LABEL_15:
    v48 = v100;
    sub_23E4E6818((uint64_t)v12);
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48))(v12, 1, v98);
    v50 = v99;
    if (v49 == 1)
    {
      sub_23E1E7C64((uint64_t)v12, &qword_256D490E0);
      v51 = v101;
      v52 = v102;
      v53 = v103;
LABEL_27:
      sub_23E1E2F50(v48, (uint64_t)v51, type metadata accessor for StateSnapshot.UpdateType);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v51, 0, 1, v52);
    }
    sub_23E1E2FDC((uint64_t)v12, v99, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
    v54 = *v95;
    swift_bridgeObjectRetain();
    v55 = sub_23E21027C(v50, v54);
    swift_bridgeObjectRelease();
    v52 = v102;
    if ((v55 & 1) != 0)
    {
      sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      v56 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v103 + 56);
      v57 = v101;
      v58 = 1;
      return v56(v57, v58, 1, v52);
    }
    v59 = *v93;
    v53 = v103;
    if (*(_QWORD *)(*v93 + 16)
      && (v60 = sub_23E2114C8(v50), (v61 & 1) != 0)
      && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v60) + 16) > 1uLL)
    {
      v62 = swift_bridgeObjectRetain();
      v63 = v89;
      sub_23E4E7884(v62, v89);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v63, 1, v52) != 1)
      {
        v81 = v86;
        sub_23E1E2FDC((uint64_t)v63, v86, type metadata accessor for StateSnapshot.UpdateType);
        v82 = v88;
        sub_23E1E2F50(v50, v88, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        v83 = v87;
        sub_23E381E38(v87, v82);
        sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        v84 = v101;
        sub_23E1E2FDC(v81, (uint64_t)v101, type metadata accessor for StateSnapshot.UpdateType);
        v56 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v53 + 56);
        v57 = v84;
        v58 = 0;
        return v56(v57, v58, 1, v52);
      }
      sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      sub_23E1E7C64((uint64_t)v63, &qword_254334250);
    }
    else
    {
      sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
    }
    v51 = v101;
    goto LABEL_27;
  }
  v40 = v91;
  if (*(_QWORD *)(v91 + 16) && (v41 = sub_23E1E3300((uint64_t)v34), (v42 & 1) != 0))
  {
    v43 = *(void **)(*(_QWORD *)(v40 + 56) + 8 * v41);
    v44 = *(void (**)(char *, uint64_t))(v30 + 8);
    v45 = v43;
    v44(v34, v29);
    v46 = v101;
    *v101 = v45;
    v47 = v102;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v46, 0, 1, v47);
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v64 = sub_23E5371A8();
    __swift_project_value_buffer(v64, (uint64_t)qword_254333D88);
    v65 = v90;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v90, v34, v29);
    v66 = v92;
    sub_23E1E2F50(v100, v92, type metadata accessor for StateSnapshot.UpdateType);
    v67 = sub_23E537190();
    v68 = sub_23E537B08();
    v69 = v68;
    if (os_log_type_enabled(v67, v68))
    {
      v70 = swift_slowAlloc();
      v99 = swift_slowAlloc();
      v104[0] = v99;
      *(_DWORD *)v70 = 136315394;
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      LODWORD(v98) = v69;
      v71 = sub_23E538318();
      v105 = sub_23E1FD768(v71, v72, v104);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v73 = *(void (**)(char *, uint64_t))(v30 + 8);
      v73(v65, v29);
      *(_WORD *)(v70 + 12) = 2080;
      v74 = v92;
      StateSnapshot.UpdateType.description.getter();
      v105 = sub_23E1FD768(v75, v76, v104);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v74, type metadata accessor for StateSnapshot.UpdateType);
      _os_log_impl(&dword_23E1DF000, v67, (os_log_type_t)v98, "Failed to find home for homeID (%s) from update: %s", (uint8_t *)v70, 0x16u);
      v77 = v99;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v77, -1, -1);
      MEMORY[0x24264FEBC](v70, -1, -1);

      v73(v34, v29);
    }
    else
    {

      sub_23E1E2FA0(v66, type metadata accessor for StateSnapshot.UpdateType);
      v78 = *(void (**)(char *, uint64_t))(v30 + 8);
      v78(v65, v29);
      v78(v34, v29);
    }
    v79 = v101;
    v80 = v103;
    sub_23E1E2F50(v100, (uint64_t)v101, type metadata accessor for StateSnapshot.UpdateType);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v79, 0, 1, v102);
  }
}

uint64_t sub_23E4E7884@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *);
  char *v59;
  __int128 *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  _QWORD *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  uint64_t v86;
  uint64_t v87;

  v4 = sub_23E536F80();
  v83 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v81 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v82 = (char *)&v73 - v7;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v9 = MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t *)((char *)&v73 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (uint64_t *)((char *)&v73 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (__int128 *)((char *)&v73 - v19);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v73 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v27 = (char *)&v73 - v24;
  v28 = *(_QWORD *)(a1 + 16);
  if (!v28)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v25 + 56))(a2, 1, 1, updated);
  v79 = v25;
  v80 = v4;
  v76 = a2;
  v29 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v78 = v26;
  v30 = v26 + v29;
  sub_23E1E2F50(v26 + v29, (uint64_t)&v73 - v24, type metadata accessor for StateSnapshot.UpdateType);
  v75 = v27;
  sub_23E1E2F50((uint64_t)v27, (uint64_t)v23, type metadata accessor for StateSnapshot.UpdateType);
  v77 = (uint64_t)v23;
  v84 = updated;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v87 = MEMORY[0x24BEE4B08];
      v31 = *(_QWORD *)(v79 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_23E1E2F50(v30, (uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
        v32 = v84;
        if (swift_getEnumCaseMultiPayload() != 1)
          break;
        sub_23E1E6C84(v20, (uint64_t)v85);
        v33 = __swift_project_boxed_opaque_existential_1(v85, v86);
        MEMORY[0x24BDAC7A8](v33);
        (*(void (**)(char *))(v35 + 16))((char *)&v73 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44E08);
        sub_23E537A48();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
        v30 += v31;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          v37 = v87;
          v38 = v76;
          v76[3] = v36;
          v38[4] = sub_23E1F9710((unint64_t *)&unk_256D44E10, &qword_256D44E08, MEMORY[0x24BEE1718]);
          *v38 = v37;
          sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
          v39 = v84;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v38, 0, 1, v39);
          return sub_23E1E2FA0(v77, type metadata accessor for StateSnapshot.UpdateType);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v76, 1, 1, v32);
      return sub_23E1E2FA0(v77, type metadata accessor for StateSnapshot.UpdateType);
    case 2u:
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v79 + 72);
      swift_bridgeObjectRetain();
      v42 = MEMORY[0x24BEE4B00];
      v43 = v84;
      while (1)
      {
        sub_23E1E2F50(v30, (uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
        if (swift_getEnumCaseMultiPayload() != 2)
          break;
        v44 = *v17;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v85[0] = v42;
        sub_23E4E88B8(v44, (uint64_t)sub_23E4E8FE4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)v85);
        v42 = v85[0];
        swift_bridgeObjectRelease();
        v30 += v41;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
          v46 = v76;
          *v76 = v42;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      v71 = (uint64_t)v17;
      goto LABEL_28;
    case 3u:
      swift_bridgeObjectRelease();
      v47 = *(_QWORD *)(v79 + 72);
      swift_bridgeObjectRetain();
      v48 = MEMORY[0x24BEE4B00];
      v43 = v84;
      while (1)
      {
        sub_23E1E2F50(v30, (uint64_t)v14, type metadata accessor for StateSnapshot.UpdateType);
        if (swift_getEnumCaseMultiPayload() != 3)
          break;
        v49 = *v14;
        v50 = swift_isUniquelyReferenced_nonNull_native();
        v85[0] = v48;
        sub_23E4E88B8(v49, (uint64_t)sub_23E4E8FE4, 0, v50, (uint64_t)v85);
        v48 = v85[0];
        swift_bridgeObjectRelease();
        v30 += v47;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
          v46 = v76;
          *v76 = v48;
LABEL_16:
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v46, 0, 1, v43);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      v71 = (uint64_t)v14;
LABEL_28:
      sub_23E1E2FA0(v71, type metadata accessor for StateSnapshot.UpdateType);
      return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v76, 1, 1, v43);
    case 7u:
      v51 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
      v52 = v77;

      v53 = v79;
      v54 = v30 + *(_QWORD *)(v79 + 72) * (v28 - 1);
      v55 = v76;
      sub_23E1E2F50(v54, (uint64_t)v76, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v84);
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v52, v80);
    case 9u:
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8);
      v73 = v77 + *(int *)(v56 + 48);
      v74 = v56;
      v57 = v80;
      v58 = *(void (**)(char *))(v83 + 32);
      v58(v82);
      v87 = MEMORY[0x24BEE4B08];
      v77 = *(_QWORD *)(v79 + 72);
      swift_bridgeObjectRetain();
      v59 = v81;
      break;
    default:
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v76, 1, 1, v84);
      return sub_23E1E2FA0(v77, type metadata accessor for StateSnapshot.UpdateType);
  }
  while (1)
  {
    sub_23E1E2F50(v30, (uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
    if (swift_getEnumCaseMultiPayload() != 9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v57);
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_32;
    }
    v60 = (__int128 *)&v11[*(int *)(v74 + 48)];
    ((void (*)(char *, char *, uint64_t))v58)(v59, v11, v57);
    sub_23E1E6C84(v60, (uint64_t)v85);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      break;
    v61 = __swift_project_boxed_opaque_existential_1(v85, v86);
    MEMORY[0x24BDAC7A8](v61);
    (*(void (**)(char *))(v63 + 16))((char *)&v73 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    v57 = v80;
    v59 = v81;
    sub_23E537A48();
    v65 = *(void (**)(char *, uint64_t))(v83 + 8);
    v65(v59, v57);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
    v30 += v77;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      v66 = v76;
      v67 = (_QWORD *)((char *)v76 + *(int *)(v74 + 48));
      v68 = v82;
      (*(void (**)(_QWORD *, char *, uint64_t))(v83 + 16))(v76, v82, v57);
      v69 = v87;
      v67[3] = v64;
      v67[4] = sub_23E1F9710(&qword_256D3F778, &qword_256D3F718, MEMORY[0x24BEE1718]);
      *v67 = v69;
      v65(v68, v57);
      sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
      v70 = v84;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v66, 0, 1, v70);
      return __swift_destroy_boxed_opaque_existential_0(v73);
    }
  }
  v72 = *(void (**)(char *, uint64_t))(v83 + 8);
  v72(v59, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72(v82, v57);
  sub_23E1E2FA0((uint64_t)v75, type metadata accessor for StateSnapshot.UpdateType);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
LABEL_32:
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v76, 1, 1, v84);
  return __swift_destroy_boxed_opaque_existential_0(v73);
}

uint64_t sub_23E4E8234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(v1, (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s7MergeIdVMa();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4E83B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E7C20(v1, (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s7MergeIdVMa();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4E8548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E7C20(v1, (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4E86E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  id v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5376F4();
  if (v11)
  {
    v3 = objc_msgSend(v11, sel_service);
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, sel_accessory);

      if (v5)
      {
        v6 = objc_msgSend(v5, sel_home);

        if (v6)
        {
          v7 = objc_msgSend(v6, sel_uniqueIdentifier);

          sub_23E536F68();
          v8 = sub_23E536F80();
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 0, 1, v8);
        }
      }
    }

  }
  v10 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 1, 1, v10);
}

BOOL sub_23E4E8828(id *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(*a1, sel_service);
  v2 = objc_msgSend(v1, sel_accessory);

  v3 = objc_msgSend(v2, sel_home);
  if (v3)

  return v3 != 0;
}

uint64_t sub_23E4E88B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *i;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  _BYTE v40[32];
  _BYTE v41[32];
  void *v42;
  _QWORD v43[12];

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v43[4] = a1;
  v43[5] = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v43[6] = v8;
  v43[7] = 0;
  v43[8] = v11 & v9;
  v43[9] = a2;
  v43[10] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23E288024((uint64_t)&v42);
  v12 = v42;
  if (!v42)
    goto LABEL_27;
  sub_23E1E4E3C((uint64_t)v43, (uint64_t)v41, &qword_254332260);
  v13 = *(_QWORD **)a5;
  v15 = sub_23E1EE554((uint64_t)v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_23E21DC50();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v22 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v22[6] + 8 * v15) = v12;
    sub_23E1E4E3C((uint64_t)v41, v22[7] + 32 * v15, &qword_254332260);
    v23 = v22[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v22[2] = v25;
LABEL_16:
    sub_23E288024((uint64_t)&v42);
    for (i = v42; v42; i = v42)
    {
      sub_23E1E4E3C((uint64_t)v43, (uint64_t)v41, &qword_254332260);
      v27 = *(_QWORD **)a5;
      v29 = sub_23E1EE554((uint64_t)i);
      v30 = v27[2];
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
        goto LABEL_28;
      v33 = v28;
      if (v27[3] < v32)
      {
        sub_23E1EFD84(v32, 1);
        v34 = sub_23E1EE554((uint64_t)i);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_30;
        v29 = v34;
      }
      if ((v33 & 1) != 0)
      {
        sub_23E1E7C20((uint64_t)v41, (uint64_t)v40, &qword_254332260);
        sub_23E1E7C64((uint64_t)v41, &qword_254332260);

        sub_23E266094((uint64_t)v40, *(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v29);
      }
      else
      {
        v36 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
        *(_QWORD *)(v36[6] + 8 * v29) = i;
        sub_23E1E4E3C((uint64_t)v41, v36[7] + 32 * v29, &qword_254332260);
        v37 = v36[2];
        v24 = __OFADD__(v37, 1);
        v38 = v37 + 1;
        if (v24)
          goto LABEL_29;
        v36[2] = v38;
      }
      sub_23E288024((uint64_t)&v42);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  sub_23E1EFD84(v18, a4 & 1);
  v20 = sub_23E1EE554((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_23E1E7C20((uint64_t)v41, (uint64_t)v40, &qword_254332260);
    sub_23E1E7C64((uint64_t)v41, &qword_254332260);

    sub_23E266094((uint64_t)v40, *(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    goto LABEL_16;
  }
LABEL_30:
  sub_23E1E99C8();
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E4E8C04(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23E4E8D54((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_23E4E8D54((unint64_t *)v7, v4, v2);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_23E4E8D54(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void (*v19)(char *, unint64_t, uint64_t);
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v26 = a2;
  v27 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D490E8);
  MEMORY[0x24BDAC7A8](v31);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v32 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v30 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_5;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 >= v30)
      return sub_23E361B48(v27, v26, v28, v32);
    v22 = *(_QWORD *)(v29 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v30)
        return sub_23E361B48(v27, v26, v28, v32);
      v22 = *(_QWORD *)(v29 + 8 * v11);
      if (!v22)
      {
        v11 = v21 + 2;
        if (v21 + 2 >= v30)
          return sub_23E361B48(v27, v26, v28, v32);
        v22 = *(_QWORD *)(v29 + 8 * v11);
        if (!v22)
          break;
      }
    }
LABEL_20:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_5:
    v18 = v32;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v19(v10, v32[6] + *(_QWORD *)(v7 + 72) * v17, v6);
    v20 = *(_QWORD *)(v18[7] + 8 * v17);
    v19(v5, (unint64_t)v10, v6);
    *(_QWORD *)&v5[*(int *)(v31 + 48)] = v20;
    sub_23E1E7C64((uint64_t)v5, &qword_256D490E8);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if (v20 >= 6)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v28++, 1))
      {
        __break(1u);
        return sub_23E361B48(v27, v26, v28, v32);
      }
    }
  }
  v23 = v21 + 3;
  if (v23 >= v30)
    return sub_23E361B48(v27, v26, v28, v32);
  v22 = *(_QWORD *)(v29 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v30)
      return sub_23E361B48(v27, v26, v28, v32);
    v22 = *(_QWORD *)(v29 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

id sub_23E4E8FE4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = *a1;
  sub_23E1E7C20((uint64_t)(a1 + 1), (uint64_t)(a2 + 1), &qword_254332260);
  *a2 = v4;
  return v4;
}

uint64_t sub_23E4E9028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v32 = a1;
  sub_23E1E7C20(a1, (uint64_t)&v30 - v17, &qword_254333F50);
  v33 = a2;
  sub_23E1E7C20(a2, (uint64_t)v16, &qword_254333F50);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_23E1E7C20((uint64_t)v18, (uint64_t)v9, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v16, v19, &qword_254333F50);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v9, 1, v4) != 1)
  {
    sub_23E1E7C20((uint64_t)v9, (uint64_t)v13, &qword_254333F50);
    if (v20(v19, 1, v4) != 1)
    {
      v21 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v19, v4);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v22 = sub_23E537514();
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v21, v4);
      sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
      v23(v13, v4);
      sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      v28 = 0;
      return v28 & 1;
    }
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_23E1E7C64((uint64_t)v9, &qword_254332798);
    goto LABEL_11;
  }
  sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
  if (v20(v19, 1, v4) != 1)
    goto LABEL_6;
  sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
LABEL_8:
  v24 = *(int *)(_s7MergeIdVMa() + 20);
  v25 = (_QWORD *)(v32 + v24);
  v26 = *(_QWORD *)(v32 + v24 + 8);
  v27 = (_QWORD *)(v33 + v24);
  if (*v25 == *v27 && v26 == v27[1])
    v28 = 1;
  else
    v28 = sub_23E538354();
  return v28 & 1;
}

unint64_t sub_23E4E936C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t updated;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;

  v34 = a5;
  v32 = a3;
  v33 = a4;
  v31 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_QWORD *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v12 = *(_QWORD *)(updated - 8);
  v13 = MEMORY[0x24BDAC7A8](updated);
  v29 = (uint64_t)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v28 = (uint64_t)v25 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return MEMORY[0x24BEE4AF8];
  v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v25[1] = a1;
  v26 = v17;
  v18 = a1 + v17;
  v19 = *(_QWORD *)(v12 + 72);
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x24BEE4AF8];
  v27 = a6;
  do
  {
    sub_23E4E6F9C(v18, v31, v32, v33, v34, a6, v11);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v11, 1, updated) == 1)
    {
      sub_23E1E7C64((uint64_t)v11, &qword_254334250);
    }
    else
    {
      v21 = v28;
      sub_23E1E2FDC((uint64_t)v11, v28, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FDC(v21, v29, type metadata accessor for StateSnapshot.UpdateType);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_23E51FB8C(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      if (v23 >= v22 >> 1)
        v20 = sub_23E51FB8C(v22 > 1, v23 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v23 + 1;
      sub_23E1E2FDC(v29, v20 + v26 + v23 * v19, type metadata accessor for StateSnapshot.UpdateType);
      a6 = v27;
    }
    v18 += v19;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t _s13HomeDataModel13StateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  id *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  id *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t updated;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[9];
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v57 = a1;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v56 = *(_QWORD *)(updated - 8);
  v3 = MEMORY[0x24BDAC7A8](updated);
  v64 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v58 = (id *)((char *)&v56 - v6);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t)&v56 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v65 = (uint64_t)&v56 - v10;
  v11 = sub_23E536F80();
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
    goto LABEL_25;
  v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v59 = v9;
  if (!v13)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_27;
  }
LABEL_3:
  v60 = a2 & 0xC000000000000001;
  v14 = (_QWORD *)MEMORY[0x24BEE4B00];
  v15 = 4;
  while (1)
  {
    if (v60)
      v17 = (id)MEMORY[0x24264F148](v15 - 4, a2);
    else
      v17 = *(id *)(a2 + 8 * v15);
    v18 = v17;
    v19 = v15 - 3;
    if (__OFADD__(v15 - 4, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      v13 = sub_23E53803C();
      v59 = v9;
      if (!v13)
        goto LABEL_26;
      goto LABEL_3;
    }
    v20 = objc_msgSend(v17, sel_uniqueIdentifier);
    v9 = v66;
    sub_23E536F68();

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72 = v14;
    v23 = sub_23E1E3300(v9);
    v24 = v14[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_23;
    v9 = v22;
    if (v14[3] < v26)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v14 = v72;
      if ((v22 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      sub_23E220C20();
      v14 = v72;
      if ((v9 & 1) == 0)
      {
LABEL_17:
        v14[(v23 >> 6) + 8] |= 1 << v23;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 16))(v14[6] + *(_QWORD *)(v62 + 72) * v23, v66, v63);
        *(_QWORD *)(v14[7] + 8 * v23) = v18;
        v29 = v14[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_24;
        v14[2] = v31;
        goto LABEL_5;
      }
    }
LABEL_4:
    v16 = v14[7];
    v9 = 8 * v23;

    *(_QWORD *)(v16 + 8 * v23) = v18;
LABEL_5:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v63);
    ++v15;
    if (v19 == v13)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      v32 = MEMORY[0x24BEE4B08];
      v71 = MEMORY[0x24BEE4B00];
      v72 = (_QWORD *)MEMORY[0x24BEE4B08];
      v33 = MEMORY[0x24BEE4AF8];
      v70 = sub_23E20E1EC(MEMORY[0x24BEE4AF8]);
      v34 = v57;
      v35 = *(_QWORD *)(v57 + 16);
      if (v35)
      {
        v36 = v57 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
        v37 = *(_QWORD *)(v56 + 72);
        swift_bridgeObjectRetain();
        v38 = v35;
        do
        {
          sub_23E4E5F34(v36, (void (*)(_QWORD *@<X8>))&v71, (uint64_t)&v72, (uint64_t)v14, &v70);
          v36 += v37;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      v39 = swift_bridgeObjectRetain();
      v40 = sub_23E4E8C04(v39);
      swift_bridgeObjectRelease();
      v41 = sub_23E4FC3F4(v40);
      v69[0] = 0;
      v68 = v33;
      swift_bridgeObjectRetain();
      if (!v35)
      {
LABEL_48:
        swift_bridgeObjectRelease();
        v68 = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53 = sub_23E4E936C(v33, (uint64_t *)&v72, v41, (uint64_t)v14, &v68, (uint64_t *)&v70);
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v67 = v32;
        v54 = sub_23E4E5980(v53, v69, &v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v54;
      }
      v63 = 0;
      v66 = v41;
      v42 = 0;
      v43 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v44 = *(_QWORD *)(v56 + 72);
      v45 = v34 + v43;
      v46 = MEMORY[0x24BEE4AF8];
      v47 = v59;
      while (1)
      {
        v48 = v65;
        sub_23E1E2F50(v45, v65, type metadata accessor for StateSnapshot.UpdateType);
        sub_23E1E2F50(v48, v47, type metadata accessor for StateSnapshot.UpdateType);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 12)
        {
          if (EnumCaseMultiPayload)
            goto LABEL_39;
          v50 = v58;
          sub_23E1E2F50(v47, (uint64_t)v58, type metadata accessor for StateSnapshot.UpdateType);
          if (*v50)
            break;
        }
        sub_23E1E2FA0(v47, type metadata accessor for StateSnapshot.UpdateType);
        if ((v42 & 1) == 0)
        {
          v42 = 1;
          v69[0] = 1;
          goto LABEL_42;
        }
        sub_23E1E2FA0(v65, type metadata accessor for StateSnapshot.UpdateType);
        v42 = 1;
LABEL_34:
        v45 += v44;
        if (!--v35)
        {
          v33 = v68;
          v32 = MEMORY[0x24BEE4B08];
          v41 = v66;
          goto LABEL_48;
        }
      }

LABEL_39:
      sub_23E1E2FA0(v47, type metadata accessor for StateSnapshot.UpdateType);
LABEL_42:
      sub_23E1E2FDC(v65, v64, type metadata accessor for StateSnapshot.UpdateType);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2CB3AC(0, *(_QWORD *)(v46 + 16) + 1, 1);
      v46 = v68;
      v52 = *(_QWORD *)(v68 + 16);
      v51 = *(_QWORD *)(v68 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_23E2CB3AC(v51 > 1, v52 + 1, 1);
        v46 = v68;
      }
      *(_QWORD *)(v46 + 16) = v52 + 1;
      sub_23E1E2FDC(v64, v46 + v43 + v52 * v44, type metadata accessor for StateSnapshot.UpdateType);
      v47 = v59;
      goto LABEL_34;
    }
  }
  sub_23E217F68(v26, isUniquelyReferenced_nonNull_native);
  v27 = sub_23E1E3300(v66);
  if ((v9 & 1) == (v28 & 1))
  {
    v23 = v27;
    v14 = v72;
    if ((v9 & 1) == 0)
      goto LABEL_17;
    goto LABEL_4;
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t _s7MergeIdVMa()
{
  uint64_t result;

  result = qword_256D49148;
  if (!qword_256D49148)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_23E4E9C30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23E4E9D24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

char *sub_23E4E9D90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_23E4E9E58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_23E4E9F80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_23E4EA03C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E4EA154()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4EA160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E4EA1E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4EA1F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_23E4EA270()
{
  unint64_t v0;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E4EA2E0()
{
  return sub_23E1EE1C4(&qword_256D49180, (uint64_t (*)(uint64_t))_s7MergeIdVMa, (uint64_t)&unk_23E559108);
}

uint64_t static UmbrellaCategoryInformation.categoryStaticAccessories(for:from:)(unsigned __int8 *a1, uint64_t a2)
{
  int v3;

  v3 = *a1;
  swift_bridgeObjectRetain();
  return sub_23E25C61C(a2, v3);
}

uint64_t UmbrellaCategoryInformation.activeServiceCount.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  uint64_t v10;

  v5 = (*(uint64_t (**)(void))(a2 + 48))();
  v6 = sub_23E25C4C0(v5);
  v9[2] = a1;
  v9[3] = a2;
  v10 = v2;
  v7 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E4EAC40, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t UmbrellaCategoryInformation.categoryStaticAccessoriesSkippingNonContributingToHomeStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(void))(a2 + 48))();
  return sub_23E25C4C0(v2);
}

uint64_t UmbrellaCategoryInformation.statusItems.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t UmbrellaCategoryInformation.umbrellaCategory.getter()
{
  return sub_23E537E80();
}

uint64_t UmbrellaCategoryInformation.name.getter()
{
  sub_23E537E80();
  return UmbrellaCategory.localizedDescription.getter();
}

void UmbrellaCategoryInformation.foregroundColor.getter()
{
  sub_23E537E80();
  __asm { BR              X10 }
}

uint64_t sub_23E4EA488()
{
  return sub_23E53731C();
}

void UmbrellaCategoryInformation.iconSymbol.getter()
{
  sub_23E537E80();
  __asm { BR              X10 }
}

uint64_t sub_23E4EA520()
{
  return 0x6C7562746867696CLL;
}

uint64_t sub_23E4EA5B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[6];
  _BYTE v15[16];
  uint64_t v16;

  v10 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v16 = a2;
  swift_bridgeObjectRetain();
  v11 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a3;
  v12 = *(_QWORD *)(sub_23E337604((uint64_t (*)(char *))sub_23E4EAC94, (uint64_t)v14, v11) + 16);
  result = swift_bridgeObjectRelease();
  if (__OFADD__(*a1, v12))
    __break(1u);
  else
    *a1 += v12;
  return result;
}

BOOL sub_23E4EA68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int v12;
  char v13;
  char v14;
  char v15;
  int v16;
  BOOL v17;
  _BYTE v19[31];
  char v20;

  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = &v19[-v7];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v19[-v10];
  v12 = *(unsigned __int8 *)(a1 + *(int *)(v9 + 92));
  sub_23E2712F4(a1, (uint64_t)&v19[-v10]);
  if (v12 == 53)
    LOBYTE(v12) = v11[*(int *)(v2 + 84)];
  sub_23E4273C0((uint64_t)v11);
  v19[30] = v12;
  ServiceKind.umbrellaCategory.getter(&v20);
  v13 = v20;
  sub_23E537E80();
  sub_23E5225C0(v13);
  v15 = v14;
  sub_23E2712F4(a1, (uint64_t)v8);
  if ((v15 & 1) != 0)
  {
    v16 = v8[*(int *)(v2 + 76)];
    sub_23E4273C0((uint64_t)v8);
    sub_23E2712F4(a1, (uint64_t)v5);
    v17 = v16 == 1 && StaticService.isActivated.getter();
  }
  else
  {
    sub_23E4273C0((uint64_t)v8);
    sub_23E2712F4(a1, (uint64_t)v5);
    v17 = 0;
  }
  sub_23E4273C0((uint64_t)v5);
  return v17;
}

BOOL sub_23E4EA830(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;

  v22 = type metadata accessor for StaticService();
  v20 = *(_QWORD *)(v22 - 8);
  v5 = MEMORY[0x24BDAC7A8](v22);
  v21 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v18 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - v10;
  v12 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v25 = a1;
  swift_bridgeObjectRetain();
  v13 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v24, v12);
  swift_bridgeObjectRelease();
  v14 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v13 + 16))
  {
    v18[1] = v2;
    v18[2] = a2;
    if (*(_QWORD *)(v13 + 16))
    {
      v23 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      sub_23E2712F4(v13 + v23, (uint64_t)v11);
      v15 = v11[*(int *)(v22 + 92)];
      sub_23E2712F4((uint64_t)v11, (uint64_t)v9);
      if (v15 == 53)
        LOBYTE(v15) = v9[*(int *)(v22 + 84)];
      sub_23E4273C0((uint64_t)v9);
      v26 = v15;
      ServiceKind.umbrellaCategory.getter(&v27);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x23E4EAC10);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v14 + 16);
  swift_release();
  return v16 != 0;
}

uint64_t sub_23E4EAC40(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23E4EA5B4(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.stateSnapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.shortSummary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.categoryStaticAccessories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.statusItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.contextMenuLabelsAndActions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

BOOL sub_23E4EAC94(uint64_t a1)
{
  return sub_23E4EA68C(a1);
}

HomeDataModel::HFCAPackageIconIdentifier_optional __swiftcall HFCAPackageIconIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeDataModel::HFCAPackageIconIdentifier_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_23E538384();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 40;
  switch(v3)
  {
    case 0:
      goto LABEL_42;
    case 1:
      v5 = 1;
      goto LABEL_42;
    case 2:
      v5 = 2;
      goto LABEL_42;
    case 3:
      v5 = 3;
      goto LABEL_42;
    case 4:
      v5 = 4;
      goto LABEL_42;
    case 5:
      v5 = 5;
      goto LABEL_42;
    case 6:
      v5 = 6;
      goto LABEL_42;
    case 7:
      v5 = 7;
      goto LABEL_42;
    case 8:
      v5 = 8;
      goto LABEL_42;
    case 9:
      v5 = 9;
      goto LABEL_42;
    case 10:
      v5 = 10;
      goto LABEL_42;
    case 11:
      v5 = 11;
      goto LABEL_42;
    case 12:
      v5 = 12;
      goto LABEL_42;
    case 13:
      v5 = 13;
      goto LABEL_42;
    case 14:
      v5 = 14;
      goto LABEL_42;
    case 15:
      v5 = 15;
      goto LABEL_42;
    case 16:
      v5 = 16;
      goto LABEL_42;
    case 17:
      v5 = 17;
      goto LABEL_42;
    case 18:
      v5 = 18;
      goto LABEL_42;
    case 19:
      v5 = 19;
      goto LABEL_42;
    case 20:
      v5 = 20;
      goto LABEL_42;
    case 21:
      v5 = 21;
      goto LABEL_42;
    case 22:
      v5 = 22;
      goto LABEL_42;
    case 23:
      v5 = 23;
      goto LABEL_42;
    case 24:
      v5 = 24;
      goto LABEL_42;
    case 25:
      v5 = 25;
      goto LABEL_42;
    case 26:
      v5 = 26;
      goto LABEL_42;
    case 27:
      v5 = 27;
      goto LABEL_42;
    case 28:
      v5 = 28;
      goto LABEL_42;
    case 29:
      v5 = 29;
      goto LABEL_42;
    case 30:
      v5 = 30;
      goto LABEL_42;
    case 31:
      v5 = 31;
      goto LABEL_42;
    case 32:
      v5 = 32;
      goto LABEL_42;
    case 33:
      v5 = 33;
      goto LABEL_42;
    case 34:
      v5 = 34;
      goto LABEL_42;
    case 35:
      v5 = 35;
      goto LABEL_42;
    case 36:
      v5 = 36;
      goto LABEL_42;
    case 37:
      v5 = 37;
      goto LABEL_42;
    case 38:
      v5 = 38;
      goto LABEL_42;
    case 39:
      v5 = 39;
LABEL_42:
      v6 = v5;
      break;
    case 40:
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    case 46:
      v6 = 46;
      break;
    case 47:
      v6 = 47;
      break;
    case 48:
      v6 = 48;
      break;
    case 49:
      v6 = 49;
      break;
    case 50:
      v6 = 50;
      break;
    case 51:
      v6 = 51;
      break;
    case 52:
      v6 = 52;
      break;
    case 53:
      v6 = 53;
      break;
    case 54:
      v6 = 54;
      break;
    case 55:
      v6 = 55;
      break;
    case 56:
      v6 = 56;
      break;
    case 57:
      v6 = 57;
      break;
    default:
      v6 = 58;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t HFCAPackageIconIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E4EAF2C + 4 * byte_23E5591DA[*v0]))(0xD000000000000024, 0x800000023E561E50);
}

uint64_t sub_23E4EAF2C(uint64_t a1)
{
  return a1 - 1;
}

uint64_t HFCAPackageIconIdentifier.offStateSymbolName.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E4EB2D4 + 4 * word_23E559214[*v0]))(0xD000000000000011, 0x800000023E560170);
}

uint64_t sub_23E4EB2D4@<X0>(uint64_t a1@<X8>)
{
  return a1 - 3;
}

uint64_t sub_23E4EB6D8()
{
  return 30324;
}

uint64_t HFCAPackageIconIdentifier.onStateSymbolName.getter()
{
  _BYTE *v0;
  uint64_t result;

  result = 0xD000000000000010;
  switch(*v0)
  {
    case 6:
    case 0xD:
    case 0x35:
      return result;
    case 7:
      result = 0xD00000000000001BLL;
      break;
    case 8:
    case 0xC:
    case 0x2C:
    case 0x32:
      result = 0xD000000000000014;
      break;
    case 9:
      result = 0xD000000000000013;
      break;
    case 0xA:
      result = 0xD00000000000001BLL;
      break;
    case 0xB:
      result = 0xD00000000000001CLL;
      break;
    case 0xE:
      result = 0x65706F2E6B636F6CLL;
      break;
    case 0x17:
      result = 0xD000000000000013;
      break;
    case 0x18:
      result = 0xD00000000000001ALL;
      break;
    case 0x2D:
      result = 0xD000000000000011;
      break;
    case 0x2E:
    case 0x2F:
      result = 0x632E776F646E6977;
      break;
    case 0x30:
    case 0x37:
      result = 0x612E776F646E6977;
      break;
    case 0x31:
      result = 0xD000000000000011;
      break;
    case 0x33:
      result = 0xD000000000000016;
      break;
    case 0x34:
      result = 0xD000000000000011;
      break;
    case 0x36:
      result = 0x736E696174727563;
      break;
    case 0x38:
      result = 0xD00000000000001BLL;
      break;
    default:
      result = HFCAPackageIconIdentifier.offStateSymbolName.getter();
      break;
  }
  return result;
}

unint64_t HFCAPackageIconIdentifier.slashOffSymbolName.getter()
{
  _BYTE *v0;

  if (*v0 == 29)
    return 0xD000000000000014;
  else
    return 0;
}

void HFCAPackageIconIdentifier.onStateSymbolRenderingMode.getter(char *a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned int v2;
  BOOL v3;
  uint64_t v4;
  char v6;

  v2 = *v1;
  v3 = v2 > 0x20;
  v4 = (1 << v2) & 0x180001000;
  if (v3 || v4 == 0)
    v6 = 2;
  else
    v6 = 0;
  *a1 = v6;
}

void HFCAPackageIconIdentifier.offStateSymbolRenderingMode.getter(char *a1@<X8>)
{
  unsigned __int8 *v1;
  int v2;
  char v4;

  v2 = *v1;
  if ((v2 - 16) < 7 || v2 == 1)
    v4 = 2;
  else
    v4 = 0;
  *a1 = v4;
}

HomeDataModel::HFCAPackageIconIdentifier_optional sub_23E4EB980(Swift::String *a1)
{
  return HFCAPackageIconIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_23E4EB98C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HFCAPackageIconIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E4EB9B0()
{
  sub_23E4EBD1C();
  return sub_23E53779C();
}

uint64_t sub_23E4EBA0C()
{
  sub_23E4EBD1C();
  return sub_23E537760();
}

uint64_t sub_23E4EBA58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E52290C(*a1, *a2);
}

unint64_t sub_23E4EBA68()
{
  unint64_t result;

  result = qword_256D49188;
  if (!qword_256D49188)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HFCAPackageIconIdentifier, &type metadata for HFCAPackageIconIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D49188);
  }
  return result;
}

uint64_t sub_23E4EBAAC()
{
  sub_23E53845C();
  HFCAPackageIconIdentifier.rawValue.getter();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E4EBB10()
{
  HFCAPackageIconIdentifier.rawValue.getter();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4EBB60()
{
  sub_23E53845C();
  HFCAPackageIconIdentifier.rawValue.getter();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t getEnumTagSinglePayload for HFCAPackageIconIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC7)
    goto LABEL_17;
  if (a2 + 57 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 57) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 57;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 57;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 57;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3A;
  v8 = v6 - 58;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HFCAPackageIconIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 57 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 57) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC6)
    return ((uint64_t (*)(void))((char *)&loc_23E4EBC9C + 4 * byte_23E5592C0[v4]))();
  *a1 = a2 + 57;
  return ((uint64_t (*)(void))((char *)sub_23E4EBCD0 + 4 * byte_23E5592BB[v4]))();
}

uint64_t sub_23E4EBCD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4EBCD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4EBCE0);
  return result;
}

uint64_t sub_23E4EBCEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4EBCF4);
  *(_BYTE *)result = a2 + 57;
  return result;
}

uint64_t sub_23E4EBCF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4EBD00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HFCAPackageIconIdentifier()
{
  return &type metadata for HFCAPackageIconIdentifier;
}

unint64_t sub_23E4EBD1C()
{
  unint64_t result;

  result = qword_256D49190;
  if (!qword_256D49190)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HFCAPackageIconIdentifier, &type metadata for HFCAPackageIconIdentifier);
    atomic_store(result, (unint64_t *)&qword_256D49190);
  }
  return result;
}

uint64_t StaticOnOffCluster.on()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)v0;
  *(_WORD *)(v1 + 64) = *(_WORD *)(v0 + 8);
  *(_BYTE *)(v1 + 66) = *(_BYTE *)(v0 + 10);
  *(_BYTE *)(v1 + 67) = *(_BYTE *)(v0 + 11);
  return swift_task_switch();
}

uint64_t sub_23E4EBD94()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = sub_23E22288C((uint64_t)&unk_250EDD080);
  sub_23E235698(v1);
  *(_QWORD *)(v0 + 24) = v2;
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4EBE58()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v5;
  __int16 v6;
  char v7;

  v1 = *(_BYTE *)(v0 + 66);
  v2 = *(_WORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_23E4ED494();
  v5 = v3;
  v6 = v2;
  v7 = v1;
  *(_QWORD *)(v0 + 40) = sub_23E34F1E8((uint64_t)&v5);
  return swift_task_switch();
}

uint64_t sub_23E4EBED4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 67);
  v3 = *(unsigned __int8 *)(v0 + 66);
  v4 = *(unsigned __int16 *)(v0 + 64);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))((char *)&dword_256D3F940
                                                                                         + dword_256D3F940);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_23E4EBF90;
  if (v2)
    v7 = 0x1000000;
  else
    v7 = 0;
  return v9(28271, 0xE200000000000000, *(_QWORD *)(v0 + 40), (uint64_t)&unk_256D3F948, v5, *(_QWORD *)(v0 + 16), v7 | v4 | (v3 << 16));
}

uint64_t sub_23E4EBF90()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 40);
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t StaticOnOffCluster.off()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)v0;
  *(_WORD *)(v1 + 64) = *(_WORD *)(v0 + 8);
  *(_BYTE *)(v1 + 66) = *(_BYTE *)(v0 + 10);
  *(_BYTE *)(v1 + 67) = *(_BYTE *)(v0 + 11);
  return swift_task_switch();
}

uint64_t sub_23E4EC030()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = sub_23E22288C((uint64_t)&unk_250EDD0B8);
  sub_23E235698(v1);
  *(_QWORD *)(v0 + 24) = v2;
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4EC0F4()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v5;
  __int16 v6;
  char v7;

  v1 = *(_BYTE *)(v0 + 66);
  v2 = *(_WORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_23E4ED494();
  v5 = v3;
  v6 = v2;
  v7 = v1;
  *(_QWORD *)(v0 + 40) = sub_23E34F1E8((uint64_t)&v5);
  return swift_task_switch();
}

uint64_t sub_23E4EC170()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 67);
  v3 = *(unsigned __int8 *)(v0 + 66);
  v4 = *(unsigned __int16 *)(v0 + 64);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))((char *)&dword_256D3F940
                                                                                         + dword_256D3F940);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_23E4ED8E4;
  if (v2)
    v7 = 0x1000000;
  else
    v7 = 0;
  return v9(6710895, 0xE300000000000000, *(_QWORD *)(v0 + 40), (uint64_t)&unk_256D3F938, v5, *(_QWORD *)(v0 + 16), v7 | v4 | (v3 << 16));
}

uint64_t StaticOnOffCluster.toggleKnownState()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = *(_QWORD *)v0;
  *(_WORD *)(v1 + 44) = *(_WORD *)(v0 + 8);
  *(_BYTE *)(v1 + 46) = *(_BYTE *)(v0 + 10);
  *(_BYTE *)(v1 + 47) = *(_BYTE *)(v0 + 11);
  return swift_task_switch();
}

uint64_t sub_23E4EC264()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16[4];
  __int16 v17;
  char v18;

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 56);
    v15 = *(unsigned __int8 *)(v0 + 47);
    v5 = *(_BYTE *)(v0 + 46);
    v6 = *(_WORD *)(v0 + 44);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315394;
    v16[0] = v8;
    v16[1] = 0xD000000000000013;
    v16[2] = 0x800000023E563160;
    v16[3] = v4;
    v17 = v6;
    v18 = v5;
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 48) = sub_23E1FD768(0xD000000000000013, 0x800000023E563160, v16);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    *(_DWORD *)(v0 + 28) = v15;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v2, v3, "%s: toggling known state, currently %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }

  v9 = *(_BYTE *)(v0 + 46);
  v10 = *(_WORD *)(v0 + 44);
  v11 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v0 + 47) & 1) != 0)
  {
    *(_QWORD *)(v0 + 32) = v11;
    *(_WORD *)(v0 + 40) = v10;
    *(_BYTE *)(v0 + 42) = v9;
    *(_BYTE *)(v0 + 43) = 1;
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v12;
    *(_QWORD *)v12 = v0;
    *(_QWORD *)(v12 + 8) = sub_23E446E18;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v0 + 32);
    *(_WORD *)(v12 + 64) = *(_WORD *)(v0 + 40);
    *(_BYTE *)(v12 + 66) = *(_BYTE *)(v0 + 42);
    *(_BYTE *)(v12 + 67) = *(_BYTE *)(v0 + 43);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v11;
    *(_WORD *)(v0 + 24) = v10;
    *(_BYTE *)(v0 + 26) = v9;
    *(_BYTE *)(v0 + 27) = 0;
    v13 = swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v13;
    *(_QWORD *)v13 = v0;
    *(_QWORD *)(v13 + 8) = sub_23E4EC52C;
    *(_QWORD *)(v13 + 16) = *(_QWORD *)(v0 + 16);
    *(_WORD *)(v13 + 64) = *(_WORD *)(v0 + 24);
    *(_BYTE *)(v13 + 66) = *(_BYTE *)(v0 + 26);
    *(_BYTE *)(v13 + 67) = *(_BYTE *)(v0 + 27);
  }
  return swift_task_switch();
}

uint64_t sub_23E4EC52C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t static StaticOnOffCluster.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8);
  if (v2 && dword_23E55971C[*(char *)(a1 + 10)] == dword_23E55971C[*(char *)(a2 + 10)])
    return *(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11) ^ 1u;
  else
    return 0;
}

uint64_t StaticOnOffCluster.init(path:device:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t ObjectType;
  uint64_t result;
  int v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  char v14;
  _QWORD v15[4];

  v5 = *a1;
  v6 = *((unsigned __int16 *)a1 + 4);
  v7 = *((unsigned __int8 *)a1 + 10);
  ObjectType = swift_getObjectType();
  v12 = v5;
  v13 = v6;
  v14 = v7;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, _QWORD, uint64_t, uint64_t))(a2 + 48))(v15, &v12, 0, ObjectType, a2);
  swift_unknownObjectRelease();
  if (!v15[3])
  {
    result = sub_23E1E9988((uint64_t)v15);
    goto LABEL_8;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    v5 = 0;
    v11 = 0x2000000;
    goto LABEL_9;
  }
  if ((_BYTE)v12)
    v10 = 0x1000000;
  else
    v10 = 0;
  v11 = v6 | (v7 << 16) | v10;
LABEL_9:
  *(_QWORD *)a3 = v5;
  *(_DWORD *)(a3 + 8) = v11;
  return result;
}

uint64_t StaticOnOffCluster.init(id:value:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __int16 v3;
  char v4;

  v3 = *(_WORD *)(result + 8);
  v4 = *(_BYTE *)(result + 10);
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_WORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 10) = v4;
  *(_BYTE *)(a3 + 11) = a2;
  return result;
}

void StaticOnOffCluster.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t StaticOnOffCluster.value.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticOnOffCluster.hash(into:)()
{
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  return sub_23E538474();
}

uint64_t sub_23E4EC758()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 25705;
}

uint64_t sub_23E4EC784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4ED80C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4EC7A8()
{
  sub_23E4ED4D0();
  return sub_23E538570();
}

uint64_t sub_23E4EC7D0()
{
  sub_23E4ED4D0();
  return sub_23E53857C();
}

uint64_t StaticOnOffCluster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char v15;
  int v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D491C0);
  v12 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v16 = *((unsigned __int8 *)v1 + 11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4ED4D0();
  sub_23E5384EC();
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v18 = 0;
  sub_23E248D7C();
  v9 = v11;
  sub_23E5382AC();
  if (!v9)
  {
    v17 = 1;
    sub_23E53827C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v3);
}

uint64_t StaticOnOffCluster.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t StaticOnOffCluster.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v13;
  __int16 v14;
  unsigned __int8 v15;
  int v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D491D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4ED4D0();
  sub_23E5384E0();
  if (!v2)
  {
    v18 = 0;
    sub_23E248DC0();
    sub_23E538180();
    v9 = v13;
    v10 = v14;
    v16 = v15;
    v17 = 1;
    v11 = sub_23E538150();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 10) = v16;
    *(_BYTE *)(a2 + 11) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E4ECB58(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8);
  if (v2 && dword_23E55971C[*(char *)(a1 + 10)] == dword_23E55971C[*(char *)(a2 + 10)])
    return *(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11) ^ 1u;
  else
    return 0;
}

uint64_t sub_23E4ECBB0()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E4ECC3C()
{
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  return sub_23E538474();
}

uint64_t sub_23E4ECCA0()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E4ECD28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticOnOffCluster.init(from:)(a1, a2);
}

uint64_t sub_23E4ECD3C(_QWORD *a1)
{
  return StaticOnOffCluster.encode(to:)(a1);
}

uint64_t StaticOnOffCluster.cluster.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v5;
  __int16 v6;
  char v7;

  v1 = *v0;
  v2 = *((_WORD *)v0 + 4);
  v3 = *((_BYTE *)v0 + 10);
  sub_23E4ED494();
  v5 = v1;
  v6 = v2;
  v7 = v3;
  return sub_23E34F1E8((uint64_t)&v5);
}

uint64_t sub_23E4ECDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch();
}

uint64_t sub_23E4ECDBC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v1 = sub_23E5377E4();
  }
  v0[17] = v1;
  v2 = (void *)v0[15];
  v3 = sub_23E537A60();
  v0[18] = v3;
  v0[2] = v0;
  v0[3] = sub_23E4ECE94;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_10_1;
  v5[4] = v4;
  objc_msgSend(v2, sel_onWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23E4ECE94()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4ECEF4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4ECF2C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 144);
  v2 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4ECF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch();
}

uint64_t sub_23E4ECF8C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v1 = sub_23E5377E4();
  }
  v0[17] = v1;
  v2 = (void *)v0[15];
  v3 = sub_23E537A60();
  v0[18] = v3;
  v0[2] = v0;
  v0[3] = sub_23E4ED064;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_12_4;
  v5[4] = v4;
  objc_msgSend(v2, sel_offWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23E4ED064()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t StaticOnOffCluster.toggle()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = *(_QWORD *)v0;
  *(_WORD *)(v1 + 120) = *(_WORD *)(v0 + 8);
  *(_BYTE *)(v1 + 122) = *(_BYTE *)(v0 + 10);
  *(_BYTE *)(v1 + 123) = *(_BYTE *)(v0 + 11);
  return swift_task_switch();
}

uint64_t sub_23E4ED0F8()
{
  uint64_t v0;
  int v1;
  uint64_t inited;
  unint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 123);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_DWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v1 ^ 1u;
  *(_BYTE *)(inited + 48) = 0;
  v3 = sub_23E22288C(inited);
  swift_setDeallocating();
  sub_23E235698(v3);
  *(_QWORD *)(v0 + 80) = v4;
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4ED1F8()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v5;
  __int16 v6;
  char v7;

  v1 = *(_BYTE *)(v0 + 122);
  v2 = *(_WORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release();
  sub_23E4ED494();
  v5 = v3;
  v6 = v2;
  v7 = v1;
  *(_QWORD *)(v0 + 96) = sub_23E34F1E8((uint64_t)&v5);
  return swift_task_switch();
}

uint64_t sub_23E4ED274()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(unsigned __int8 *)(v0 + 123);
  v3 = *(unsigned __int8 *)(v0 + 122);
  v4 = *(unsigned __int16 *)(v0 + 120);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))((char *)&dword_256D3F940
                                                                                         + dword_256D3F940);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v6;
  *v6 = v0;
  v6[1] = sub_23E4ED338;
  if (v2)
    v7 = 0x1000000;
  else
    v7 = 0;
  return v9(0x656C67676F74, 0xE600000000000000, *(_QWORD *)(v0 + 96), (uint64_t)&unk_256D491E8, v5, *(_QWORD *)(v0 + 72), v7 | v4 | (v3 << 16));
}

uint64_t sub_23E4ED338()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 96);
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E4ED3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch();
}

uint64_t sub_23E4ED3BC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[16];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v1 = sub_23E5377E4();
  }
  v0[17] = v1;
  v2 = (void *)v0[15];
  v3 = sub_23E537A60();
  v0[18] = v3;
  v0[2] = v0;
  v0[3] = sub_23E4ED064;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_40;
  v5[4] = v4;
  objc_msgSend(v2, sel_toggleWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v3, v5);
  return swift_continuation_await();
}

unint64_t sub_23E4ED494()
{
  unint64_t result;

  result = qword_256D3F930;
  if (!qword_256D3F930)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D3F930);
  }
  return result;
}

unint64_t sub_23E4ED4D0()
{
  unint64_t result;

  result = qword_256D491C8;
  if (!qword_256D491C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5596C8, &type metadata for StaticOnOffCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D491C8);
  }
  return result;
}

uint64_t sub_23E4ED514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch();
}

unint64_t sub_23E4ED57C()
{
  unint64_t result;

  result = qword_256D491F0;
  if (!qword_256D491F0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticOnOffCluster, &type metadata for StaticOnOffCluster);
    atomic_store(result, (unint64_t *)&qword_256D491F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticOnOffCluster(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 11);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticOnOffCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 0;
    if (a2)
      *(_BYTE *)(result + 11) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticOnOffCluster()
{
  return &type metadata for StaticOnOffCluster;
}

uint64_t storeEnumTagSinglePayload for StaticOnOffCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E4ED6B4 + 4 * byte_23E5594D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E4ED6E8 + 4 * byte_23E5594D0[v4]))();
}

uint64_t sub_23E4ED6E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4ED6F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4ED6F8);
  return result;
}

uint64_t sub_23E4ED704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4ED70CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E4ED710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4ED718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticOnOffCluster.CodingKeys()
{
  return &type metadata for StaticOnOffCluster.CodingKeys;
}

unint64_t sub_23E4ED738()
{
  unint64_t result;

  result = qword_256D491F8;
  if (!qword_256D491F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5596A0, &type metadata for StaticOnOffCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D491F8);
  }
  return result;
}

unint64_t sub_23E4ED780()
{
  unint64_t result;

  result = qword_256D49200;
  if (!qword_256D49200)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559610, &type metadata for StaticOnOffCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49200);
  }
  return result;
}

unint64_t sub_23E4ED7C8()
{
  unint64_t result;

  result = qword_256D49208;
  if (!qword_256D49208)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559638, &type metadata for StaticOnOffCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49208);
  }
  return result;
}

uint64_t sub_23E4ED80C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t StaticCameraProfile.clipPlaybackManager(contentProvider:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticCameraProfile();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v17 - v12;
  sub_23E1E2F50(v1, (uint64_t)&v17 - v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  sub_23E1E2F50((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  sub_23E536F74();
  v14 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  type metadata accessor for CameraClipPlaybackManager();
  v15 = swift_allocObject();
  sub_23E4F15FC((uint64_t)v11, (uint64_t)v7, (uint64_t)v4);
  sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  return v15;
}

uint64_t type metadata accessor for CameraClipPlaybackManager()
{
  uint64_t result;

  result = qword_256D492E8;
  if (!qword_256D492E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E4EDAA0()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D49210);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D49210);
  return sub_23E53719C();
}

uint64_t static Logger.cameraClipPlaybackManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EEF8 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D49210);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t CameraClipPlaybackManager.cameraProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t CameraClipPlaybackManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CameraClipPlaybackManager.elements.getter()
{
  return sub_23E4EDE60();
}

uint64_t sub_23E4EDC14@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E4EDEE8(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__elements, a2);
}

uint64_t sub_23E4EDC28()
{
  swift_getKeyPath();
  sub_23E4F1850();
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CameraClipPlaybackManager.elements.setter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

void (*CameraClipPlaybackManager.elements.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  return sub_23E4EDE40;
}

void sub_23E4EDE40(_QWORD **a1)
{
  sub_23E4F0CFC(a1);
}

uint64_t sub_23E4EDE4C()
{
  return sub_23E4EDE60();
}

uint64_t sub_23E4EDE60()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4EDEE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4EDF84()
{
  swift_getKeyPath();
  sub_23E4F1850();
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

id CameraClipPlaybackManager.avPlayer.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager)
                           + 56));
}

uint64_t CameraClipPlaybackManager.readyForPlayback.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback);
}

uint64_t sub_23E4EE0AC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback);
  return result;
}

uint64_t sub_23E4EE128()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

void sub_23E4EE1B8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v3 = type metadata accessor for ScrubberPositionData();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  MEMORY[0x24BDAC7A8](v9);
  v28 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  swift_getKeyPath();
  v29[0] = v1;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v12 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState;
  sub_23E52277C(v11);
  if ((v13 & 1) == 0)
  {
    v26 = v3;
    if (qword_256D3EEF8 != -1)
      swift_once();
    v14 = sub_23E5371A8();
    __swift_project_value_buffer(v14, (uint64_t)qword_256D49210);
    swift_retain_n();
    v15 = sub_23E537190();
    v16 = sub_23E537AFC();
    if (os_log_type_enabled(v15, v16))
    {
      v25 = v5;
      v17 = (_DWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v29[0] = v24;
      *v17 = 136315394;
      __asm { BR              X9 }
    }

    swift_release_n();
    swift_getKeyPath();
    v29[0] = v1;
    sub_23E537070();
    swift_release();
    LOBYTE(v29[0]) = *(_BYTE *)(v1 + v12);
    sub_23E4EE7CC((uint64_t)v29);
    swift_getKeyPath();
    v29[0] = v1;
    sub_23E537070();
    swift_release();
    v18 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_23E1E7C20(v18, (uint64_t)v8, &qword_256D49228);
    v19 = v26;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26))
    {
      sub_23E1E7C64((uint64_t)v8, &qword_256D49228);
      v20 = type metadata accessor for ScrubberElement(0);
      v21 = v28;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v28, 1, 1, v20);
    }
    else
    {
      sub_23E1E2F50((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
      sub_23E1E7C64((uint64_t)v8, &qword_256D49228);
      v22 = (uint64_t)&v5[*(int *)(v19 + 32)];
      v21 = v28;
      sub_23E1E7C20(v22, v28, &qword_256D40260);
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    }
    sub_23E1E7C64(v21, &qword_256D40260);
  }
}

uint64_t CameraClipPlaybackManager.currentState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  result = swift_release();
  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  return result;
}

void sub_23E4EE7CC(uint64_t a1)
{
  __asm { BR              X10 }
}

id sub_23E4EE7F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager);
  sub_23E265DE0();
  return objc_msgSend(*(id *)(v1 + 56), sel_pause);
}

uint64_t CameraClipPlaybackManager.currentElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for ScrubberPositionData();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v14 = v1;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v10 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v10, (uint64_t)v9, &qword_256D49228);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_23E1E7C64((uint64_t)v9, &qword_256D49228);
    v11 = type metadata accessor for ScrubberElement(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_23E1E2F50((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    sub_23E1E7C64((uint64_t)v9, &qword_256D49228);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v3 + 32)], a1, &qword_256D40260);
    return sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  }
}

uint64_t sub_23E4EEA00@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  return result;
}

uint64_t sub_23E4EEA7C()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E4EEB0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  BOOL v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v84 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v77 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ScrubberElement.ID(0);
  MEMORY[0x24BDAC7A8](v4);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A50);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberPositionData();
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v88 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v83 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v73 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v78 = (uint64_t)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v79 = (uint64_t)&v73 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v87 = (char *)&v73 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v82 = (uint64_t)&v73 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v73 - v23;
  v89 = type metadata accessor for ScrubberElement(0);
  v92 = *(_QWORD *)(v89 - 8);
  v25 = *(_QWORD *)(v92 + 64);
  v26 = MEMORY[0x24BDAC7A8](v89);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v73 - v27;
  swift_getKeyPath();
  v29 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  v95 = v1;
  v30 = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v86 = v1;
  v31 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v31, (uint64_t)v13, &qword_256D49228);
  v32 = *(unsigned int (**)(char *, uint64_t))(v90 + 48);
  v33 = v91;
  if (v32(v13, 1))
  {
    sub_23E1E7C64((uint64_t)v13, &qword_256D49228);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v24, 1, 1, v89);
    return sub_23E1E7C64((uint64_t)v24, &qword_256D40260);
  }
  v90 = v30;
  v76 = v29;
  v34 = (uint64_t)v87;
  v75 = v25;
  v74 = (uint64_t)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v88;
  sub_23E1E2F50((uint64_t)v13, v88, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  sub_23E1E7C64((uint64_t)v13, &qword_256D49228);
  sub_23E1E7C20(v35 + *(int *)(v33 + 32), (uint64_t)v24, &qword_256D40260);
  sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  v36 = v92;
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
  v38 = v89;
  if (v37(v24, 1, v89) == 1)
    return sub_23E1E7C64((uint64_t)v24, &qword_256D40260);
  v40 = (uint64_t)v24;
  v41 = (uint64_t)v28;
  sub_23E1E2FDC(v40, (uint64_t)v28, type metadata accessor for ScrubberElement);
  v42 = v83;
  sub_23E1E7C20(v84, v83, &qword_256D49228);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v42, 1, v33) == 1)
  {
    sub_23E1E7C64(v42, &qword_256D49228);
    v43 = v82;
    v44 = v38;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v82, 1, 1, v38);
  }
  else
  {
    v43 = v82;
    sub_23E1E7C20(v42 + *(int *)(v33 + 32), v82, &qword_256D40260);
    sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    v44 = v38;
  }
  sub_23E1E7C64(v43, &qword_256D40260);
  v45 = v86;
  sub_23E4EF440();
  v91 = v41;
  v46 = v34;
  sub_23E1E2F50(v41, v34, type metadata accessor for ScrubberElement);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v48 = 1;
  v47(v46, 0, 1, v44);
  swift_getKeyPath();
  v94 = v45;
  sub_23E537070();
  swift_release();
  v49 = v45 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__elements;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v49 + 16))
  {
    v50 = v79;
    sub_23E1E2F50(*(_QWORD *)v49 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)), v79, type metadata accessor for ScrubberElement);
    v48 = 0;
    v51 = (uint64_t)v81;
    v52 = v80;
  }
  else
  {
    v51 = (uint64_t)v81;
    v52 = v80;
    v50 = v79;
  }
  v47(v50, v48, 1, v38);
  v53 = v51 + *(int *)(v52 + 48);
  sub_23E1E7C20(v46, v51, &qword_256D40260);
  sub_23E1E7C20(v50, v53, &qword_256D40260);
  if (v37((char *)v51, 1, v38) == 1)
  {
    sub_23E1E7C64(v50, &qword_256D40260);
    sub_23E1E7C64(v46, &qword_256D40260);
    v54 = v37((char *)v53, 1, v38);
    v55 = (uint64_t)v85;
    v56 = v91;
    if (v54 == 1)
    {
      sub_23E1E7C64(v51, &qword_256D40260);
      v57 = v74;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  v58 = v78;
  sub_23E1E7C20(v51, v78, &qword_256D40260);
  v59 = v37((char *)v53, 1, v38);
  v55 = (uint64_t)v85;
  if (v59 == 1)
  {
    sub_23E1E7C64(v50, &qword_256D40260);
    sub_23E1E7C64(v46, &qword_256D40260);
    sub_23E1E2FA0(v58, type metadata accessor for ScrubberElement);
    v56 = v91;
LABEL_16:
    sub_23E1E7C64(v51, &qword_256D42A50);
    return sub_23E1E2FA0(v56, type metadata accessor for ScrubberElement);
  }
  v57 = v74;
  sub_23E1E2FDC(v53, v74, type metadata accessor for ScrubberElement);
  v60 = _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0(v58, v57);
  sub_23E1E2FA0(v57, type metadata accessor for ScrubberElement);
  sub_23E1E7C64(v50, &qword_256D40260);
  sub_23E1E7C64(v46, &qword_256D40260);
  sub_23E1E2FA0(v58, type metadata accessor for ScrubberElement);
  sub_23E1E7C64(v51, &qword_256D40260);
  v56 = v91;
  if (!v60)
    return sub_23E1E2FA0(v56, type metadata accessor for ScrubberElement);
LABEL_18:
  swift_getKeyPath();
  v61 = v86;
  v93 = v86;
  sub_23E537070();
  swift_release();
  v62 = (uint64_t *)(v61 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
  swift_beginAccess();
  v63 = *v62;
  swift_bridgeObjectRetain();
  ScrubberElement.id.getter(v55);
  v64 = sub_23E20FAB0(v55, v63);
  swift_bridgeObjectRelease();
  v65 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v55, v65);
  if ((v64 & 1) != 0)
    return sub_23E1E2FA0(v56, type metadata accessor for ScrubberElement);
  v66 = sub_23E537934();
  v67 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v77, 1, 1, v66);
  sub_23E1E2F50(v56, v57, type metadata accessor for ScrubberElement);
  sub_23E5378F8();
  v68 = v86;
  swift_retain();
  v69 = sub_23E5378EC();
  v70 = (*(unsigned __int8 *)(v92 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  v71 = (_QWORD *)swift_allocObject();
  v72 = MEMORY[0x24BEE6930];
  v71[2] = v69;
  v71[3] = v72;
  v71[4] = v68;
  sub_23E1E2FDC(v57, (uint64_t)v71 + v70, type metadata accessor for ScrubberElement);
  sub_23E26D014(v67, (uint64_t)&unk_256D493E0, (uint64_t)v71);
  swift_release();
  return sub_23E1E2FA0(v56, type metadata accessor for ScrubberElement);
}

uint64_t CameraClipPlaybackManager.currentPosition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E4F08B0(&OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_256D49228, a1);
}

void sub_23E4EF440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  uint64_t v10;
  _QWORD v11[4];

  v1 = type metadata accessor for ScrubberPositionData();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  CameraClipPlaybackManager.isPlaying.getter();
  if ((v8 & 1) == 0 || (CameraClipPlaybackManager.isScrubbing.getter(), (v9 & 1) != 0))
  {
    swift_getKeyPath();
    v11[1] = v0;
    sub_23E4F1850();
    sub_23E537070();
    swift_release();
    v10 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_23E1E7C20(v10, (uint64_t)v7, &qword_256D49228);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_23E1E7C64((uint64_t)v7, &qword_256D49228);
    }
    else
    {
      sub_23E1E2F50((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
      sub_23E1E7C64((uint64_t)v7, &qword_256D49228);
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
      sub_23E26532C();
    }
  }
}

uint64_t sub_23E4EF5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a4;
  v5[9] = a5;
  type metadata accessor for ScrubberElement.ID(0);
  v5[10] = swift_task_alloc();
  v6 = sub_23E536F80();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = sub_23E5378F8();
  v5[16] = sub_23E5378EC();
  v5[17] = sub_23E5378B0();
  v5[18] = v7;
  return swift_task_switch();
}

uint64_t sub_23E4EF6B8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = (char *)v0[13];
  v7 = v0[14];
  v3 = v0[11];
  v2 = v0[12];
  v4 = v0[10];
  v5 = v0[8];
  ScrubberElement.id.getter(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  swift_getKeyPath();
  v0[5] = v5;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v0[6] = v5;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  sub_23E1FFF40(v7, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v3);
  swift_endAccess();
  v0[7] = v5;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  v0[19] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4EF870()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E4EF8A8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CameraClipPlaybackManager.fetchAndLoadMoreEvents()()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4EF968@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E4F096C(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_256D49228, a2);
}

uint64_t sub_23E4EF984(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E7C20(a1, (uint64_t)v6, &qword_256D49228);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  return sub_23E1E7C64((uint64_t)v6, &qword_256D49228);
}

uint64_t CameraClipPlaybackManager.currentPosition.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  return sub_23E1E7C64(a1, &qword_256D49228);
}

uint64_t sub_23E4EFB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v12[-v8];
  sub_23E1E7C20(a2, (uint64_t)&v12[-v8], &qword_256D49228);
  v10 = a1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v10, (uint64_t)v7, &qword_256D49228);
  swift_beginAccess();
  sub_23E4F35E4((uint64_t)v9, v10, &qword_256D49228);
  swift_endAccess();
  sub_23E4EEB0C((uint64_t)v7);
  sub_23E1E7C64((uint64_t)v9, &qword_256D49228);
  return sub_23E1E7C64((uint64_t)v7, &qword_256D49228);
}

void (*CameraClipPlaybackManager.currentPosition.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v4 = malloc(0xA0uLL);
  *a1 = v4;
  v4[13] = v2;
  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D49228) - 8) + 64);
  v4[14] = malloc(v5);
  v4[15] = malloc(v5);
  v6 = malloc(v5);
  v4[16] = v6;
  swift_getKeyPath();
  v4[17] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  v4[9] = v2;
  v4[18] = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v4[11] = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v7 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  v4[19] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  v8 = v2 + v7;
  swift_beginAccess();
  sub_23E1E7C20(v8, (uint64_t)v6, &qword_256D49228);
  return sub_23E4EFD84;
}

void sub_23E4EFD84(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 128);
  v4 = *(void **)(*(_QWORD *)a1 + 112);
  v5 = *(void **)(*(_QWORD *)a1 + 120);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  if ((a2 & 1) != 0)
  {
    v7 = v6 + v2[19];
    sub_23E1E7C20(v2[16], v2[15], &qword_256D49228);
    sub_23E1E7C20(v7, (uint64_t)v4, &qword_256D49228);
    swift_beginAccess();
    sub_23E4F35E4((uint64_t)v5, v7, &qword_256D49228);
    swift_endAccess();
    sub_23E4EEB0C((uint64_t)v4);
    sub_23E1E7C64((uint64_t)v5, &qword_256D49228);
    sub_23E1E7C64((uint64_t)v4, &qword_256D49228);
    sub_23E1E7C64((uint64_t)v3, &qword_256D49228);
    v2[10] = v6;
  }
  else
  {
    v8 = v6 + v2[19];
    sub_23E1E7C20(v8, v2[15], &qword_256D49228);
    swift_beginAccess();
    sub_23E4F35E4((uint64_t)v3, v8, &qword_256D49228);
    swift_endAccess();
    sub_23E4EEB0C((uint64_t)v5);
    sub_23E1E7C64((uint64_t)v3, &qword_256D49228);
    sub_23E1E7C64((uint64_t)v5, &qword_256D49228);
    v2[12] = v6;
  }
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t CameraClipPlaybackManager.targetOffset.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23E4EFFC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  result = swift_beginAccess();
  v6 = *(_BYTE *)(v4 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v4;
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_23E4F0060()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

uint64_t CameraClipPlaybackManager.targetOffset.setter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

void (*CameraClipPlaybackManager.targetOffset.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  return sub_23E4F0270;
}

void sub_23E4F0270(_QWORD **a1)
{
  sub_23E4F0CFC(a1);
}

id sub_23E4F027C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unsigned __int8 *v6;

  if (qword_256D3EEF8 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256D49210);
  swift_retain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537AFC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67109120;
    swift_getKeyPath();
    sub_23E4F1850();
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    swift_release();
    sub_23E537CF4();
    swift_release();
    _os_log_impl(&dword_23E1DF000, v2, v3, "Clip playback prefers audio muted: %{BOOL}d", v4, 8u);
    MEMORY[0x24264FEBC](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager);
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v6 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  return objc_msgSend(*(id *)(v5 + 56), sel_setMuted_, *v6);
}

uint64_t CameraClipPlaybackManager.prefersAudioMuted.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  return *v1;
}

id (*sub_23E4F0528(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23E4F0570;
}

id sub_23E4F0570(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_23E4F027C();
  return result;
}

uint64_t sub_23E4F05A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v4 = (_BYTE *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_23E4F0634()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

uint64_t CameraClipPlaybackManager.prefersAudioMuted.setter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  return swift_release();
}

void (*CameraClipPlaybackManager.prefersAudioMuted.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E4F0528((uint64_t)v4);
  return sub_23E4F0824;
}

void sub_23E4F0824(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  free(v1);
}

uint64_t CameraClipPlaybackManager.expandedElement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E4F08B0(&OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_256D40260, a1);
}

uint64_t sub_23E4F08B0@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v7 = v3 + *a1;
  swift_beginAccess();
  return sub_23E1E7C20(v7, a3, a2);
}

uint64_t sub_23E4F0950@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E4F096C(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_256D40260, a2);
}

uint64_t sub_23E4F096C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v8 = v7 + *a2;
  swift_beginAccess();
  return sub_23E1E7C20(v8, a4, a3);
}

uint64_t sub_23E4F0A10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E7C20(a1, (uint64_t)v6, &qword_256D40260);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  return sub_23E1E7C64((uint64_t)v6, &qword_256D40260);
}

uint64_t CameraClipPlaybackManager.expandedElement.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  return sub_23E1E7C64(a1, &qword_256D40260);
}

uint64_t sub_23E4F0B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement;
  swift_beginAccess();
  sub_23E4F35E4(a2, v3, &qword_256D40260);
  return swift_endAccess();
}

void (*CameraClipPlaybackManager.expandedElement.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23E4F1850();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  return sub_23E4F0CF0;
}

void sub_23E4F0CF0(_QWORD **a1)
{
  sub_23E4F0CFC(a1);
}

void sub_23E4F0CFC(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  free(v1);
}

void CameraClipPlaybackManager.isScrubbing.getter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  __asm { BR              X11 }
}

uint64_t sub_23E4F0E0C()
{
  char v2;

  v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    __asm { BR              X11 }
  }
  return 1;
}

void CameraClipPlaybackManager.isPlaying.getter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_23E4F100C()
{
  char v2;

  v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    __asm { BR              X11 }
  }
  return 1;
}

void CameraClipPlaybackManager.isLive.getter()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  __asm { BR              X11 }
}

uint64_t sub_23E4F1218()
{
  char v0;

  v0 = sub_23E538354();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t CameraClipPlaybackManager.currentTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for ScrubberPositionData();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v14 = v1;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v10 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v10, (uint64_t)v9, &qword_256D49228);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_23E1E7C64((uint64_t)v9, &qword_256D49228);
    v11 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_23E1E2F50((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    sub_23E1E7C64((uint64_t)v9, &qword_256D49228);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v3 + 36)], a1, &qword_2543330E0);
    return sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  }
}

double CameraClipPlaybackManager.currentOffset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for ScrubberPositionData();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (double *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v12 = v0;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v8 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v8, (uint64_t)v7, &qword_256D49228);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_23E1E7C64((uint64_t)v7, &qword_256D49228);
    return 0.0;
  }
  else
  {
    sub_23E1E2F50((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    sub_23E1E7C64((uint64_t)v7, &qword_256D49228);
    v9 = *v4;
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  }
  return v9;
}

uint64_t sub_23E4F15FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState) = 4;
  v11 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  v12 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted) = 0;
  v14 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement;
  v15 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_23E537094();
  sub_23E1E2F50(a1, v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  v16 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  v17 = sub_23E536F80();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  sub_23E1E7C20(a3, (uint64_t)v10, &qword_256D49228);
  sub_23E1E7C64(v11, &qword_256D49228);
  sub_23E4F3ADC((uint64_t)v10, v11);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__elements) = MEMORY[0x24BEE4AF8];
  type metadata accessor for CameraClipAssetPlaybackManager();
  swift_allocObject();
  v19 = sub_23E265268();
  sub_23E1E7C64(a3, &qword_256D49228);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager) = v19;
  *(_QWORD *)(v19 + 48) = &off_250EF3C30;
  swift_unknownObjectWeakAssign();
  return v4;
}

unint64_t sub_23E4F1850()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D49238;
  if (!qword_256D49238)
  {
    v1 = type metadata accessor for CameraClipPlaybackManager();
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraClipPlaybackManager, v1);
    atomic_store(result, (unint64_t *)&qword_256D49238);
  }
  return result;
}

uint64_t sub_23E4F1898()
{
  uint64_t v0;

  return sub_23E2D48C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__elements);
}

uint64_t sub_23E4F18D0()
{
  uint64_t v0;

  return sub_23E4EFB10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E4F18F0()
{
  return sub_23E4F368C();
}

id sub_23E4F190C()
{
  return sub_23E4F3628();
}

uint64_t sub_23E4F1928()
{
  uint64_t v0;

  return sub_23E4F0B9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

Swift::Void __swiftcall CameraClipPlaybackManager.resetToInitialPlayState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v5[16];
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_getKeyPath();
  v8 = v0;
  v9 = v3;
  v10 = v0;
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  sub_23E1E7C64((uint64_t)v3, &qword_256D49228);
  swift_getKeyPath();
  v6 = v0;
  v7 = 4;
  v10 = v0;
  sub_23E537064();
  swift_release();
}

void sub_23E4F1A94()
{
  sub_23E4F3A74();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateState(enablingScrubbing:)(Swift::Bool enablingScrubbing)
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_23E4F1B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(_QWORD *)(v1 - 56) = v0;
  sub_23E537064();
  return swift_release();
}

unint64_t sub_23E4F1CBC()
{
  unint64_t result;

  result = qword_256D49288;
  if (!qword_256D49288)
  {
    result = MEMORY[0x24264FDE4](&unk_23E556FA4, &type metadata for CameraClipPlaybackViewState.StateError);
    atomic_store(result, (unint64_t *)&qword_256D49288);
  }
  return result;
}

Swift::Void __swiftcall CameraClipPlaybackManager.togglePlayState()()
{
  uint64_t KeyPath;

  CameraClipPlaybackManager.isPlaying.getter();
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_23E537064();
  swift_release();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToPaused()()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  swift_getKeyPath();
  sub_23E537064();
  swift_release();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToPlaying()()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  swift_getKeyPath();
  sub_23E537064();
  swift_release();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToLive()()
{
  swift_getKeyPath();
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  swift_getKeyPath();
  sub_23E537064();
  swift_release();
}

uint64_t CameraClipPlaybackManager.fetchAndUpdateEvents(in:limit:)()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F2184()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t CameraClipPlaybackManager.prefetchAndLoadInitialEvents()()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t CameraClipPlaybackManager.fetchAndLoadMoreEvents(limit:)()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t CameraClipPlaybackManager.fetchNewEvents()()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F22F0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CameraClipPlaybackManager.elementDidAppear(_:)()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 16) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F238C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 24) = a6;
  sub_23E5378F8();
  *(_QWORD *)(v6 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F23FC()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v2 = *(double *)(v0 + 32);
  v1 = *(double *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  v4 = sub_23E4F24E0(v2, v1);
  v6 = v5;
  swift_getKeyPath();
  v7 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v3;
  *(_QWORD *)(v7 + 24) = v4;
  *(_BYTE *)(v7 + 32) = v6 & 1;
  *(_QWORD *)(v0 + 16) = v3;
  sub_23E4F1850();
  sub_23E537064();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4F24E0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  double v18;
  uint64_t result;
  double v20;
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for ScrubberPositionData();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (double *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  swift_getKeyPath();
  v22 = v2;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v15 = v2 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v15, (uint64_t)v14, &qword_256D49228);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v16(v14, 1, v5))
  {
    v17 = (uint64_t)v14;
LABEL_5:
    sub_23E1E7C64(v17, &qword_256D49228);
LABEL_6:
    *(double *)&result = 0.0;
    return result;
  }
  sub_23E1E2F50((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  sub_23E1E7C64((uint64_t)v14, &qword_256D49228);
  v18 = v8[3];
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  swift_getKeyPath();
  v21 = v2;
  sub_23E537070();
  swift_release();
  sub_23E1E7C20(v15, (uint64_t)v12, &qword_256D49228);
  if (v16(v12, 1, v5))
  {
    v17 = (uint64_t)v12;
    goto LABEL_5;
  }
  sub_23E1E2F50((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  sub_23E1E7C64((uint64_t)v12, &qword_256D49228);
  v20 = v8[1];
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  if (a2 <= 0.0 || (~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0 && (*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) != 0)
    goto LABEL_6;
  *(double *)&result = v20 - a1 / a2 * v18;
  return result;
}

Swift::Bool __swiftcall CameraClipPlaybackManager.shouldAdvanceToNextElement()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t *v24;
  uint64_t v25;
  double v26;
  _BOOL4 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  _BOOL4 v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49[4];

  v1 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ScrubberElement(0);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ScrubberPositionData();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (double *)((char *)&v41 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v41 - v19;
  CameraClipPlaybackManager.isPlaying.getter();
  if ((v21 & 1) == 0)
    goto LABEL_8;
  v42 = v3;
  v43 = v1;
  swift_getKeyPath();
  v49[1] = v0;
  sub_23E4F1850();
  sub_23E537070();
  swift_release();
  v22 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_23E1E7C20(v22, (uint64_t)v20, &qword_256D49228);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v23(v20, 1, v8))
  {
    v24 = &qword_256D49228;
LABEL_4:
    v25 = (uint64_t)v20;
LABEL_7:
    sub_23E1E7C64(v25, v24);
LABEL_8:
    LOBYTE(v27) = 0;
    return v27;
  }
  sub_23E1E2F50((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  sub_23E1E7C64((uint64_t)v20, &qword_256D49228);
  v26 = v14[2];
  sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  swift_getKeyPath();
  v49[0] = v0;
  sub_23E537070();
  swift_release();
  sub_23E1E7C20(v22, (uint64_t)v18, &qword_256D49228);
  if (v23(v18, 1, v8))
  {
    v24 = &qword_256D49228;
    v25 = (uint64_t)v18;
    goto LABEL_7;
  }
  sub_23E1E2F50((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  sub_23E1E7C64((uint64_t)v18, &qword_256D49228);
  v20 = v47;
  sub_23E1E7C20((uint64_t)&v12[*(int *)(v8 + 32)], (uint64_t)v47, &qword_256D40260);
  sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v46) == 1)
  {
    v24 = &qword_256D40260;
    goto LABEL_4;
  }
  v29 = v44;
  sub_23E1E2F50((uint64_t)v20, v44, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0(v29, type metadata accessor for ScrubberElement);
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for ScrubberElement);
    goto LABEL_8;
  }
  v30 = v29;
  v31 = (uint64_t)v42;
  sub_23E1E2FDC(v30, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  v32 = *(double *)(v31 + *(int *)(v43 + 36));
  sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  sub_23E1E2FA0((uint64_t)v20, type metadata accessor for ScrubberElement);
  v33 = vabdd_f64(v26, v32) < 0.001;
  v27 = v32 <= v26 || v33;
  if (qword_256D3EEF8 != -1)
    swift_once();
  v34 = sub_23E5371A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_256D49210);
  v35 = sub_23E537190();
  v36 = sub_23E537AFC();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v49[0] = v38;
    *(_DWORD *)v37 = 136315650;
    if (v27)
      v39 = 5457241;
    else
      v39 = 20302;
    if (v27)
      v40 = 0xE300000000000000;
    else
      v40 = 0xE200000000000000;
    v48 = sub_23E1FD768(v39, v40, v49);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    v48 = *(_QWORD *)&v26;
    sub_23E537CF4();
    *(_WORD *)(v37 + 22) = 2048;
    v48 = *(_QWORD *)&v32;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v35, v36, "Should advance to next clip: %s | timeElapsed: %f vs duration: %f", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v38, -1, -1);
    MEMORY[0x24264FEBC](v37, -1, -1);
  }

  return v27;
}

Swift::Void __swiftcall CameraClipPlaybackManager.advanceToNextElementIfNeeded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  double v20;
  double v21;
  uint64_t KeyPath;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  _QWORD v33[3];
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  double v36;
  uint64_t v37;
  uint64_t v38[5];

  v1 = v0;
  v2 = type metadata accessor for ScrubberPositionData();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (double *)((char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v33 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v33 - v13;
  if (CameraClipPlaybackManager.shouldAdvanceToNextElement()())
  {
    v35 = v9;
    swift_getKeyPath();
    v15 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
    v38[2] = v0;
    v16 = sub_23E4F1850();
    sub_23E537070();
    swift_release();
    v17 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_23E1E7C20(v17, (uint64_t)v14, &qword_256D49228);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
    if (v18(v14, 1, v2))
    {
      v19 = (uint64_t)v14;
LABEL_6:
      sub_23E1E7C64(v19, &qword_256D49228);
      return;
    }
    v34 = v18;
    sub_23E1E2F50((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    sub_23E1E7C64((uint64_t)v14, &qword_256D49228);
    v20 = v5[3];
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    swift_getKeyPath();
    v37 = v1;
    sub_23E537070();
    swift_release();
    sub_23E1E7C20(v17, (uint64_t)v12, &qword_256D49228);
    if (v34(v12, 1, v2))
    {
      v19 = (uint64_t)v12;
      goto LABEL_6;
    }
    sub_23E1E2F50((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    sub_23E1E7C64((uint64_t)v12, &qword_256D49228);
    v21 = v5[1];
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v33[-4] = v1;
    *(double *)&v33[-3] = v21 - v20 + -1.0;
    LOBYTE(v33[-2]) = 0;
    v37 = v1;
    v33[1] = v16;
    v33[2] = v15;
    sub_23E537064();
    swift_release();
    if (qword_256D3EEF8 != -1)
      swift_once();
    v23 = sub_23E5371A8();
    __swift_project_value_buffer(v23, (uint64_t)qword_256D49210);
    swift_retain_n();
    v24 = sub_23E537190();
    v25 = sub_23E537AFC();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      v38[0] = v33[0];
      *(_DWORD *)v26 = 136315394;
      swift_getKeyPath();
      v37 = v1;
      sub_23E537070();
      swift_release();
      v27 = (uint64_t)v35;
      sub_23E1E7C20(v17, (uint64_t)v35, &qword_256D49228);
      if (v34((char *)v27, 1, v2))
      {
        sub_23E1E7C64(v27, &qword_256D49228);
      }
      else
      {
        sub_23E1E2F50(v27, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
        sub_23E1E7C64(v27, &qword_256D49228);
        sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScrubberPositionData);
      }
      v28 = sub_23E5379B8();
      v37 = sub_23E1FD768(v28, v29, v38);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      swift_getKeyPath();
      v37 = v1;
      sub_23E537070();
      swift_release();
      v30 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
      swift_beginAccess();
      v31 = *(double *)v30;
      if (*(_BYTE *)(v30 + 8))
        v31 = 0.0;
      v36 = v31;
      sub_23E537CF4();
      swift_release_n();
      _os_log_impl(&dword_23E1DF000, v24, v25, "Advancing to next clip, from %s to %f", (uint8_t *)v26, 0x16u);
      v32 = v33[0];
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v32, -1, -1);
      MEMORY[0x24264FEBC](v26, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t CameraClipPlaybackManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23E1E2FA0(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_256D49228);
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_256D40260);
  v3 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  v4 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CameraClipPlaybackManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23E1E2FA0(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_256D49228);
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_256D40260);
  v3 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  v4 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_23E4F349C()
{
  return type metadata accessor for CameraClipPlaybackManager();
}

void sub_23E4F34A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  type metadata accessor for StaticCameraProfile();
  if (v0 <= 0x3F)
  {
    sub_23E536F80();
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, qword_256D492F8, (void (*)(uint64_t))type metadata accessor for ScrubberPositionData);
      if (v2 <= 0x3F)
      {
        sub_23E1F1C1C(319, (unint64_t *)&qword_256D40030, (void (*)(uint64_t))type metadata accessor for ScrubberElement);
        if (v3 <= 0x3F)
        {
          sub_23E5370A0();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for CameraClipPlaybackManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E4F35E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

id sub_23E4F3628()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = (_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  *v2 = v1;
  return sub_23E4F027C();
}

uint64_t sub_23E4F368C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  result = swift_beginAccess();
  *(_QWORD *)v3 = v1;
  *(_BYTE *)(v3 + 8) = v2;
  return result;
}

uint64_t sub_23E4F36EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E4EDEE8(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID, a2);
}

uint64_t sub_23E4F3714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v2 = v0 + ((v1 + 40) & ~v1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v2, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = type metadata accessor for ReachabilityEvent();
    v8 = v2 + *(int *)(v7 + 24);
    v9 = sub_23E536F20();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v10(v2 + *(int *)(v7 + 28), v9);
  }
  else
  {
    v24 = v6;
    v11 = (int *)type metadata accessor for CameraClip();
    v12 = v2 + v11[5];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
    if (!v25(v12, 1, v13) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
      v24(v12, v4);
    v14 = v2 + v11[6];
    v15 = sub_23E536F20();
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(v14, v15);
    v16(v2 + v11[7], v15);
    swift_bridgeObjectRelease();
    v17 = v2 + v11[11];
    v18 = sub_23E536DE8();
    v26 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (!v19(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v17, v18);
    v20 = v2 + v11[12];
    if (!v25(v20, 1, v13) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4))
      v24(v20, v4);
    v21 = v2 + v11[14];
    if (!v19(v21, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v18);
    v22 = v2 + v11[15];
    if (!v19(v22, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v18);
  }
  return swift_deallocObject();
}

uint64_t sub_23E4F39C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23C694;
  return sub_23E4EF5F0(a1, v5, v6, v7, v8);
}

uint64_t sub_23E4F3A54()
{
  uint64_t v0;

  return sub_23E2D48C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
}

void sub_23E4F3A74()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState) = *(_BYTE *)(v0 + 24);
  v3 = v2;
  sub_23E4EE1B8(&v3);
}

void sub_23E4F3AC4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_23E4F3ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4F3B28()
{
  return sub_23E4F18D0();
}

uint64_t sub_23E4F3B3C()
{
  return sub_23E4F1928();
}

uint64_t sub_23E4F3B50()
{
  return sub_23E4F1898();
}

uint64_t StaticTelevisionProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticTelevisionProfile.mediaSourceDisplayOrder.getter()
{
  type metadata accessor for StaticTelevisionProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticTelevisionProfile.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 24);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static StaticTelevisionProfile.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && (v4 = type metadata accessor for StaticTelevisionProfile(),
        sub_23E2626DC(*(_QWORD **)(a1 + *(int *)(v4 + 20)), *(_QWORD **)(a2 + *(int *)(v4 + 20)))))
  {
    return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  else
  {
    return 0;
  }
}

uint64_t StaticTelevisionProfile.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 20));
  sub_23E538468();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_23E538468();
      --v2;
    }
    while (v2);
  }
  return sub_23E5374D8();
}

uint64_t sub_23E4F3D40()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0x726F737365636361;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_23E4F3D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4F4B9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4F3DC0()
{
  sub_23E4F3FE0();
  return sub_23E538570();
}

uint64_t sub_23E4F3DE8()
{
  sub_23E4F3FE0();
  return sub_23E53857C();
}

uint64_t StaticTelevisionProfile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D493E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4F3FE0();
  sub_23E5384EC();
  v13 = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v10[1] = *(_QWORD *)(v3 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 20));
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41150);
    sub_23E4F4488(&qword_256D41158, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v11 = 2;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23E4F3FE0()
{
  unint64_t result;

  result = qword_256D493F0;
  if (!qword_256D493F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559BBC, &type metadata for StaticTelevisionProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D493F0);
  }
  return result;
}

uint64_t StaticTelevisionProfile.hashValue.getter()
{
  sub_23E53845C();
  StaticTelevisionProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticTelevisionProfile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  v29 = a2;
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v31 = v4;
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)v26 - v8;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D493F8);
  v9 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticTelevisionProfile();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4F3FE0();
  v33 = v11;
  v15 = v35;
  sub_23E5384E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v28 = v12;
  v35 = a1;
  v16 = v14;
  v17 = v31;
  v39 = 0;
  v18 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v19 = v30;
  sub_23E538180();
  v26[1] = v18;
  v27 = (uint64_t)v16;
  v20 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v20(v16, v32, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41150);
  v38 = 1;
  sub_23E4F4488(&qword_256D41168, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
  sub_23E538180();
  v21 = v28;
  *(_QWORD *)(v27 + *(int *)(v28 + 20)) = v36;
  v37 = 2;
  v22 = v7;
  sub_23E538180();
  v23 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v34);
  v24 = v27;
  v20((char *)(v27 + *(int *)(v21 + 24)), v22, v19);
  sub_23E4F44E8(v24, v29);
  __swift_destroy_boxed_opaque_existential_0(v23);
  return sub_23E4F452C(v24);
}

uint64_t sub_23E4F43A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && sub_23E2626DC(*(_QWORD **)(a1 + *(int *)(a3 + 20)), *(_QWORD **)(a2 + *(int *)(a3 + 20))))
  {
    return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E4F4410()
{
  sub_23E53845C();
  StaticTelevisionProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4F4450()
{
  sub_23E53845C();
  StaticTelevisionProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E4F4488(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41150);
    v8 = a2;
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E4F44E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4F452C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E4F4568()
{
  return sub_23E1EE1C4(&qword_256D49400, (uint64_t (*)(uint64_t))type metadata accessor for StaticTelevisionProfile, (uint64_t)&protocol conformance descriptor for StaticTelevisionProfile);
}

uint64_t sub_23E4F4594@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticTelevisionProfile.init(from:)(a1, a2);
}

uint64_t sub_23E4F45A8(_QWORD *a1)
{
  return StaticTelevisionProfile.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for StaticTelevisionProfile(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 24);
    *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    v8(v10, v11, v7);
  }
  return a1;
}

uint64_t destroy for StaticTelevisionProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t initializeWithCopy for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v9 = a1 + v8;
  v10 = a2 + v8;
  swift_bridgeObjectRetain();
  v7(v9, v10, v6);
  return a1;
}

uint64_t assignWithCopy for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t initializeWithTake for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v7(a1 + v8, a2 + v8, v6);
  return a1;
}

uint64_t assignWithTake for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticTelevisionProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4F48F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticTelevisionProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4F4980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticTelevisionProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E4F4A44 + 4 * byte_23E5599C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E4F4A78 + 4 * byte_23E5599C0[v4]))();
}

uint64_t sub_23E4F4A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4F4A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E4F4A88);
  return result;
}

uint64_t sub_23E4F4A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E4F4A9CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E4F4AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4F4AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticTelevisionProfile.CodingKeys()
{
  return &type metadata for StaticTelevisionProfile.CodingKeys;
}

unint64_t sub_23E4F4AC8()
{
  unint64_t result;

  result = qword_256D49408;
  if (!qword_256D49408)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559B94, &type metadata for StaticTelevisionProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49408);
  }
  return result;
}

unint64_t sub_23E4F4B10()
{
  unint64_t result;

  result = qword_256D49410;
  if (!qword_256D49410)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559B04, &type metadata for StaticTelevisionProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49410);
  }
  return result;
}

unint64_t sub_23E4F4B58()
{
  unint64_t result;

  result = qword_256D49418;
  if (!qword_256D49418)
  {
    result = MEMORY[0x24264FDE4](&unk_23E559B2C, &type metadata for StaticTelevisionProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49418);
  }
  return result;
}

uint64_t sub_23E4F4B9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E56B570 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void RoomSectionByUmbrellaCategory.id.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t RoomSectionByUmbrellaCategory.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RoomSectionByUmbrellaCategory.tileInfoBearers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static RoomSectionByUmbrellaCategory.sections(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_23E20E8F0(MEMORY[0x24BEE4AF8]);
  v8 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E4F4E20(&v8, v4);
      v4 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    v5 = v8;
  }
  else
  {
    v5 = v2;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23E4F7B78(MEMORY[0x24BEE4AF8], v5);
  swift_bridgeObjectRelease_n();
  v8 = v6;
  swift_bridgeObjectRetain();
  sub_23E4F696C(&v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23E4F4E20(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *@<X8>);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  void (*v43)(_QWORD *@<X8>);
  void (*v44)(_QWORD *@<X8>);
  int v45;
  char v46;
  _QWORD *v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  _QWORD *v60;
  char v61;
  _QWORD *v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  _BOOL8 v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  _QWORD *v86;
  char v87;
  unint64_t v88;
  unint64_t v89;
  void (*v90)(_QWORD *@<X8>);
  void (*v91)(_QWORD *@<X8>);
  uint64_t v92;
  uint64_t v93;
  char v94;
  _QWORD *v95;
  char v96;
  unint64_t v97;
  uint64_t v98;
  _BOOL8 v99;
  uint64_t v100;
  char v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  char v107;
  unint64_t v108;
  uint64_t v109;
  _BOOL8 v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  char v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  char v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  char v122;
  unint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  char v128;
  unint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  char v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t result;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  char v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  _QWORD *v154;
  _QWORD *v155;
  __int128 v156[2];
  _BYTE v157[48];
  unsigned __int8 v158;

  v154 = a1;
  v145 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v145);
  v148 = (char *)&v144 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = type metadata accessor for StaticService();
  v4 = MEMORY[0x24BDAC7A8](v149);
  v146 = (uint64_t)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v147 = (char *)&v144 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v150 = (char *)&v144 - v8;
  v9 = (_QWORD *)type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v9);
  v152 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (void (*)(_QWORD *@<X8>))((char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for StaticAccessory(0);
  v18 = *(_QWORD **)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v151 = (uint64_t)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v144 - v21;
  sub_23E1FF9C8((uint64_t)a2, (uint64_t)v157);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  v153 = v22;
  if (!swift_dynamicCast())
  {
    v32 = a2;
    if (swift_dynamicCast())
    {
      sub_23E1FF9C8((uint64_t)a2, (uint64_t)v156);
      v18 = v154;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v155 = (_QWORD *)*v18;
      v34 = v155;
      *v18 = 0x8000000000000000;
      sub_23E2117D4(3);
      v23 = v36;
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
      {
        __break(1u);
LABEL_92:
        v34 = sub_23E51FE20(0, v34[2] + 1, 1, v34);
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v34;
LABEL_34:
        v89 = v34[2];
        v88 = v34[3];
        if (v89 >= v88 >> 1)
        {
          v34 = sub_23E51FE20((_QWORD *)(v88 > 1), v89 + 1, 1, v34);
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v34;
        }
        v34[2] = v89 + 1;
        sub_23E1E6C84(v156, (uint64_t)&v34[5 * v89 + 4]);
        sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        v43 = 0;
        v44 = 0;
        v90 = 0;
        v83 = 0;
        v91 = 0;
        v13 = sub_23E229964;
        goto LABEL_81;
      }
      LOBYTE(v40) = v35;
      if (v34[3] < v39)
      {
        sub_23E219D60(v39, isUniquelyReferenced_nonNull_native);
        v34 = v155;
        sub_23E2117D4(3);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_102;
        v23 = v41;
LABEL_31:
        *v18 = v34;
        swift_bridgeObjectRelease();
        v86 = (_QWORD *)*v18;
        swift_bridgeObjectRetain();
        if ((v40 & 1) == 0)
          sub_23E21D1C4(v23, 3, MEMORY[0x24BEE4AF8], v86);
        isUniquelyReferenced_nonNull_native = v86[7];
        swift_bridgeObjectRelease();
        v34 = *(_QWORD **)(isUniquelyReferenced_nonNull_native + 8 * v23);
        v87 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v34;
        if ((v87 & 1) != 0)
          goto LABEL_34;
        goto LABEL_92;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_31;
LABEL_94:
      sub_23E221C38();
      v34 = v155;
      goto LABEL_31;
    }
    v13 = (void (*)(_QWORD *@<X8>))v152;
    v45 = swift_dynamicCast();
    v9 = v154;
    if (v45)
    {
      sub_23E1FF9C8((uint64_t)a2, (uint64_t)v156);
      v46 = swift_isUniquelyReferenced_nonNull_native();
      v155 = (_QWORD *)*v9;
      v47 = v155;
      *v9 = 0x8000000000000000;
      sub_23E2117D4(3);
      v40 = v49;
      v50 = v47[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (!__OFADD__(v50, v51))
      {
        LOBYTE(v53) = v48;
        if (v47[3] >= v52)
        {
          if ((v46 & 1) == 0)
          {
LABEL_99:
            sub_23E221C38();
            v47 = v155;
          }
        }
        else
        {
          sub_23E219D60(v52, v46);
          v47 = v155;
          sub_23E2117D4(3);
          if ((v53 & 1) != (v55 & 1))
            goto LABEL_102;
          v40 = v54;
        }
        *v9 = v47;
        swift_bridgeObjectRelease();
        v115 = (_QWORD *)*v9;
        swift_bridgeObjectRetain();
        if ((v53 & 1) == 0)
          sub_23E21D1C4(v40, 3, MEMORY[0x24BEE4AF8], v115);
        v116 = v115[7];
        swift_bridgeObjectRelease();
        v117 = *(_QWORD **)(v116 + 8 * v40);
        v118 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v116 + 8 * v40) = v117;
        if ((v118 & 1) == 0)
        {
          v117 = sub_23E51FE20(0, v117[2] + 1, 1, v117);
          *(_QWORD *)(v116 + 8 * v40) = v117;
        }
        v120 = v117[2];
        v119 = v117[3];
        if (v120 >= v119 >> 1)
        {
          v117 = sub_23E51FE20((_QWORD *)(v119 > 1), v120 + 1, 1, v117);
          *(_QWORD *)(v116 + 8 * v40) = v117;
        }
        v117[2] = v120 + 1;
        sub_23E1E6C84(v156, (uint64_t)&v117[5 * v120 + 4]);
        sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
        v43 = 0;
        v44 = 0;
        v13 = 0;
        v83 = 0;
        v91 = 0;
        v90 = sub_23E229964;
        goto LABEL_81;
      }
      __break(1u);
      goto LABEL_94;
    }
    v72 = v149;
    v73 = (uint64_t)v150;
    if (swift_dynamicCast())
    {
      sub_23E1FF9C8((uint64_t)v32, (uint64_t)v156);
      v13 = (void (*)(_QWORD *@<X8>))v147;
      swift_dynamicCast();
      v74 = *((unsigned __int8 *)v13 + *(int *)(v72 + 92));
      v75 = v146;
      sub_23E1E2F50((uint64_t)v13, v146, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v74 == 53)
        LOBYTE(v74) = *(_BYTE *)(v75 + *(int *)(v72 + 84));
      sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v156[0]) = v74;
      ServiceKind.umbrellaCategory.getter(&v158);
      v40 = v158;
      sub_23E1FF9C8((uint64_t)v32, (uint64_t)v156);
      v76 = swift_isUniquelyReferenced_nonNull_native();
      v155 = (_QWORD *)*v9;
      v77 = v155;
      *v9 = 0x8000000000000000;
      sub_23E2117D4(v40);
      v53 = v79;
      v80 = v77[2];
      v81 = (v78 & 1) == 0;
      v82 = v80 + v81;
      if (__OFADD__(v80, v81))
      {
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      LOBYTE(v83) = v78;
      if (v77[3] < v82)
      {
        sub_23E219D60(v82, v76);
        v77 = v155;
        sub_23E2117D4(v40);
        if ((v83 & 1) != (v85 & 1))
          goto LABEL_102;
        v53 = v84;
LABEL_64:
        *v9 = v77;
        swift_bridgeObjectRelease();
        v125 = (_QWORD *)*v9;
        swift_bridgeObjectRetain();
        if ((v83 & 1) == 0)
          sub_23E21D1C4(v53, v40, MEMORY[0x24BEE4AF8], v125);
        v126 = v125[7];
        swift_bridgeObjectRelease();
        v127 = *(_QWORD **)(v126 + 8 * v53);
        v128 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v126 + 8 * v53) = v127;
        if ((v128 & 1) == 0)
        {
          v127 = sub_23E51FE20(0, v127[2] + 1, 1, v127);
          *(_QWORD *)(v126 + 8 * v53) = v127;
        }
        v130 = v127[2];
        v129 = v127[3];
        if (v130 >= v129 >> 1)
        {
          v127 = sub_23E51FE20((_QWORD *)(v129 > 1), v130 + 1, 1, v127);
          *(_QWORD *)(v126 + 8 * v53) = v127;
        }
        v127[2] = v130 + 1;
        sub_23E1E6C84(v156, (uint64_t)&v127[5 * v130 + 4]);
        sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v43 = 0;
        v44 = 0;
        v13 = 0;
        v90 = 0;
        v91 = 0;
        v83 = (uint64_t)sub_23E229964;
        goto LABEL_81;
      }
      if ((v76 & 1) != 0)
        goto LABEL_64;
    }
    else
    {
      v73 = (uint64_t)v148;
      v43 = 0;
      v44 = 0;
      v13 = 0;
      v90 = 0;
      v83 = 0;
      v91 = 0;
      if (!swift_dynamicCast())
      {
LABEL_81:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v157);
        sub_23E22D1F8((uint64_t)v43);
        sub_23E22D1F8((uint64_t)v44);
        sub_23E22D1F8((uint64_t)v13);
        sub_23E22D1F8((uint64_t)v90);
        sub_23E22D1F8(v83);
        return sub_23E22D1F8((uint64_t)v91);
      }
      v104 = v32[3];
      v40 = v32[4];
      __swift_project_boxed_opaque_existential_1(v32, v104);
      (*(void (**)(__int128 *__return_ptr, uint64_t, unint64_t))(v40 + 112))(v156, v104, v40);
      ServiceKind.umbrellaCategory.getter(&v158);
      LOBYTE(v40) = v158;
      sub_23E1FF9C8((uint64_t)v32, (uint64_t)v156);
      v105 = swift_isUniquelyReferenced_nonNull_native();
      v155 = (_QWORD *)*v9;
      v106 = v155;
      *v9 = 0x8000000000000000;
      sub_23E2117D4(v40);
      v53 = v108;
      v109 = v106[2];
      v110 = (v107 & 1) == 0;
      v111 = v109 + v110;
      if (!__OFADD__(v109, v110))
      {
        v112 = v107;
        if (v106[3] >= v111)
        {
          if ((v105 & 1) == 0)
          {
            sub_23E221C38();
            v106 = v155;
          }
        }
        else
        {
          sub_23E219D60(v111, v105);
          v106 = v155;
          sub_23E2117D4(v40);
          if ((v112 & 1) != (v114 & 1))
            goto LABEL_102;
          v53 = v113;
        }
        *v9 = v106;
        swift_bridgeObjectRelease();
        v138 = (_QWORD *)*v9;
        swift_bridgeObjectRetain();
        if ((v112 & 1) == 0)
          sub_23E21D1C4(v53, v40, MEMORY[0x24BEE4AF8], v138);
        v139 = v138[7];
        swift_bridgeObjectRelease();
        v140 = *(_QWORD **)(v139 + 8 * v53);
        v141 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v139 + 8 * v53) = v140;
        if ((v141 & 1) == 0)
        {
          v140 = sub_23E51FE20(0, v140[2] + 1, 1, v140);
          *(_QWORD *)(v139 + 8 * v53) = v140;
        }
        v143 = v140[2];
        v142 = v140[3];
        if (v143 >= v142 >> 1)
        {
          v140 = sub_23E51FE20((_QWORD *)(v142 > 1), v143 + 1, 1, v140);
          *(_QWORD *)(v139 + 8 * v53) = v140;
        }
        v140[2] = v143 + 1;
        sub_23E1E6C84(v156, (uint64_t)&v140[5 * v143 + 4]);
        sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
        v43 = 0;
        v44 = 0;
        v13 = 0;
        v90 = 0;
        v83 = 0;
        v91 = sub_23E229964;
        goto LABEL_81;
      }
      __break(1u);
    }
    sub_23E221C38();
    v77 = v155;
    goto LABEL_64;
  }
  sub_23E1FF9C8((uint64_t)a2, (uint64_t)v156);
  v24 = swift_dynamicCast();
  v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v17);
    sub_23E1E7C64((uint64_t)v16, &qword_254333468);
    v43 = 0;
    v44 = 0;
LABEL_80:
    sub_23E1E2FA0((uint64_t)v153, type metadata accessor for StaticAccessory);
    v13 = 0;
    v90 = 0;
    v83 = 0;
    v91 = 0;
    goto LABEL_81;
  }
  v26 = a2;
  v25(v16, 0, 1, v17);
  v27 = v151;
  sub_23E1E2FDC((uint64_t)v16, v151, type metadata accessor for StaticAccessory);
  v28 = a2[3];
  v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  v30 = (*(_QWORD *(**)(__int128 *__return_ptr, uint64_t, uint64_t))(v29 + 112))(v156, v28, v29);
  if (ServiceKind.rawValue.getter((uint64_t)v30) == 0xD000000000000024 && v31 == 0x800000023E55D6B0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v56 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v56 & 1) == 0)
  {
    v92 = v26[3];
    v93 = v26[4];
    __swift_project_boxed_opaque_existential_1(v26, v92);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v93 + 112))(v156, v92, v93);
    ServiceKind.umbrellaCategory.getter(&v158);
    v40 = v158;
    sub_23E1FF9C8((uint64_t)v26, (uint64_t)v156);
    v13 = (void (*)(_QWORD *@<X8>))v154;
    v94 = swift_isUniquelyReferenced_nonNull_native();
    v155 = *(_QWORD **)v13;
    v95 = v155;
    *(_QWORD *)v13 = 0x8000000000000000;
    sub_23E2117D4(v40);
    v53 = v97;
    v98 = v95[2];
    v99 = (v96 & 1) == 0;
    v100 = v98 + v99;
    if (!__OFADD__(v98, v99))
    {
      v101 = v96;
      if (v95[3] >= v100)
      {
        if ((v94 & 1) == 0)
        {
          sub_23E221C38();
          v95 = v155;
        }
      }
      else
      {
        sub_23E219D60(v100, v94);
        v95 = v155;
        sub_23E2117D4(v40);
        if ((v101 & 1) != (v103 & 1))
          goto LABEL_102;
        v53 = v102;
      }
      *(_QWORD *)v13 = v95;
      swift_bridgeObjectRelease();
      v131 = *(_QWORD **)v13;
      swift_bridgeObjectRetain();
      if ((v101 & 1) == 0)
        sub_23E21D1C4(v53, v40, MEMORY[0x24BEE4AF8], v131);
      v132 = v131[7];
      swift_bridgeObjectRelease();
      v133 = *(_QWORD **)(v132 + 8 * v53);
      v134 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v132 + 8 * v53) = v133;
      if ((v134 & 1) == 0)
      {
        v133 = sub_23E51FE20(0, v133[2] + 1, 1, v133);
        *(_QWORD *)(v132 + 8 * v53) = v133;
      }
      v136 = v133[2];
      v135 = v133[3];
      if (v136 >= v135 >> 1)
      {
        v133 = sub_23E51FE20((_QWORD *)(v135 > 1), v136 + 1, 1, v133);
        *(_QWORD *)(v132 + 8 * v53) = v133;
      }
      v133[2] = v136 + 1;
      sub_23E1E6C84(v156, (uint64_t)&v133[5 * v136 + 4]);
      sub_23E1E2FA0(v27, type metadata accessor for StaticAccessory);
      v44 = 0;
      v43 = sub_23E229964;
      goto LABEL_80;
    }
    goto LABEL_98;
  }
LABEL_18:
  v57 = (uint64_t *)(v27 + *(int *)(v17 + 92));
  v44 = (void (*)(_QWORD *@<X8>))v57[1];
  if (!v44)
  {
    sub_23E1E2FA0(v27, type metadata accessor for StaticAccessory);
    v43 = 0;
    goto LABEL_80;
  }
  v58 = *v57;
  swift_bridgeObjectRetain();
  static RoomSectionByUmbrellaCategory.umbrellaCategory(for:)(v58, (uint64_t)v44, (char *)&v158);
  swift_bridgeObjectRelease();
  v59 = v158;
  sub_23E1FF9C8((uint64_t)v26, (uint64_t)v156);
  v60 = v154;
  v61 = swift_isUniquelyReferenced_nonNull_native();
  v155 = (_QWORD *)*v60;
  v62 = v155;
  *v60 = 0x8000000000000000;
  sub_23E2117D4(v59);
  v65 = v64;
  v66 = v62[2];
  v67 = (v63 & 1) == 0;
  v68 = v66 + v67;
  if (__OFADD__(v66, v67))
  {
    __break(1u);
LABEL_96:
    v62 = sub_23E51FE20(0, v62[2] + 1, 1, v62);
    *(_QWORD *)&v16[8 * v65] = v62;
LABEL_60:
    v124 = v62[2];
    v123 = v62[3];
    if (v124 >= v123 >> 1)
    {
      v62 = sub_23E51FE20((_QWORD *)(v123 > 1), v124 + 1, 1, v62);
      *(_QWORD *)&v16[8 * v65] = v62;
    }
    v62[2] = v124 + 1;
    sub_23E1E6C84(v156, (uint64_t)&v62[5 * v124 + 4]);
    sub_23E1E2FA0(v27, type metadata accessor for StaticAccessory);
    v43 = 0;
    v44 = sub_23E229964;
    goto LABEL_80;
  }
  v69 = v63;
  if (v62[3] >= v68)
  {
    if ((v61 & 1) == 0)
    {
      sub_23E221C38();
      v62 = v155;
    }
LABEL_57:
    *v60 = v62;
    swift_bridgeObjectRelease();
    v121 = (_QWORD *)*v60;
    swift_bridgeObjectRetain();
    if ((v69 & 1) == 0)
      sub_23E21D1C4(v65, v59, MEMORY[0x24BEE4AF8], v121);
    v16 = (char *)v121[7];
    swift_bridgeObjectRelease();
    v62 = *(_QWORD **)&v16[8 * v65];
    v122 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v16[8 * v65] = v62;
    if ((v122 & 1) != 0)
      goto LABEL_60;
    goto LABEL_96;
  }
  sub_23E219D60(v68, v61);
  v62 = v155;
  sub_23E2117D4(v59);
  if ((v69 & 1) == (v71 & 1))
  {
    v65 = v70;
    goto LABEL_57;
  }
LABEL_102:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t static RoomSectionByUmbrellaCategory.umbrellaCategory(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v8;
  uint64_t result;
  char v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;

  if (sub_23E53755C() == a1 && v6 == a2)
    goto LABEL_18;
  v8 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v8 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v11 == a2)
    goto LABEL_18;
  v13 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v13 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v14 == a2)
    goto LABEL_18;
  v16 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v16 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v17 == a2)
    goto LABEL_18;
  v18 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v18 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v19 == a2)
  {
LABEL_23:
    result = swift_bridgeObjectRelease();
    v10 = 5;
    goto LABEL_19;
  }
  v20 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_25:
    v10 = 5;
    goto LABEL_19;
  }
  if (sub_23E53755C() == a1 && v21 == a2)
  {
LABEL_18:
    result = swift_bridgeObjectRelease();
    v10 = 0;
    goto LABEL_19;
  }
  v22 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v22 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v23 == a2)
    goto LABEL_31;
  v24 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v25 == a2)
    goto LABEL_31;
  v26 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v27 == a2)
    goto LABEL_23;
  v28 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v29 == a2)
    goto LABEL_42;
  v30 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v31 == a2)
    goto LABEL_42;
  v32 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v33 == a2)
    goto LABEL_18;
  v34 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v34 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v35 == a2)
    goto LABEL_53;
  v36 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_55;
  if (sub_23E53755C() == a1 && v37 == a2)
    goto LABEL_42;
  v38 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v39 == a2)
    goto LABEL_31;
  v40 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v41 == a2)
    goto LABEL_42;
  v42 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v42 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v43 == a2)
  {
    result = swift_bridgeObjectRelease();
    v10 = 1;
    goto LABEL_19;
  }
  v44 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v44 & 1) != 0)
  {
    v10 = 1;
    goto LABEL_19;
  }
  if (sub_23E53755C() == a1 && v45 == a2)
    goto LABEL_23;
  v46 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v47 == a2)
    goto LABEL_23;
  v48 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v49 == a2)
    goto LABEL_23;
  v50 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v50 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v51 == a2)
    goto LABEL_23;
  v52 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v53 == a2)
    goto LABEL_42;
  v54 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v54 & 1) != 0)
  {
LABEL_44:
    v10 = 2;
    goto LABEL_19;
  }
  if (sub_23E53755C() == a1 && v55 == a2)
    goto LABEL_23;
  v56 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v57 == a2)
  {
LABEL_53:
    result = swift_bridgeObjectRelease();
    v10 = 4;
    goto LABEL_19;
  }
  v58 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v58 & 1) != 0)
  {
LABEL_55:
    v10 = 4;
    goto LABEL_19;
  }
  if (sub_23E53755C() == a1 && v59 == a2)
    goto LABEL_31;
  v60 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v61 == a2)
    goto LABEL_53;
  v62 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
    goto LABEL_55;
  if (sub_23E53755C() == a1 && v63 == a2)
    goto LABEL_23;
  v64 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v64 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v65 == a2)
    goto LABEL_23;
  v66 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v66 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v67 == a2)
  {
LABEL_31:
    result = swift_bridgeObjectRelease();
    v10 = 3;
    goto LABEL_19;
  }
  v68 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v69 == a2)
    goto LABEL_31;
  v70 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v70 & 1) != 0)
    goto LABEL_33;
  if (sub_23E53755C() == a1 && v71 == a2)
    goto LABEL_31;
  v72 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v72 & 1) != 0)
  {
LABEL_33:
    v10 = 3;
    goto LABEL_19;
  }
  if (sub_23E53755C() == a1 && v73 == a2)
    goto LABEL_18;
  v74 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  if ((v74 & 1) != 0)
    goto LABEL_19;
  if (sub_23E53755C() == a1 && v75 == a2)
    goto LABEL_42;
  v76 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v77 == a2)
    goto LABEL_23;
  v78 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v78 & 1) != 0)
    goto LABEL_25;
  if (sub_23E53755C() == a1 && v79 == a2)
  {
LABEL_42:
    result = swift_bridgeObjectRelease();
    v10 = 2;
    goto LABEL_19;
  }
  v80 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v80 & 1) != 0)
    goto LABEL_44;
  if (sub_23E53755C() == a1 && v81 == a2)
    goto LABEL_42;
  v82 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v82 & 1) != 0)
    v10 = 2;
  else
    v10 = 5;
LABEL_19:
  *a3 = v10;
  return result;
}

uint64_t static RoomSectionByUmbrellaCategory.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 0;
  else
    return sub_23E538354();
}

uint64_t sub_23E4F688C(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 0;
  else
    return sub_23E538354();
}

uint64_t sub_23E4F68BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_23E538354() ^ 1;
  return v7 & 1;
}

uint64_t sub_23E4F68F8(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    v3 = 1;
  else
    v3 = sub_23E538354() ^ 1;
  return v3 & 1;
}

uint64_t sub_23E4F6940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_23E538354();
}

uint64_t sub_23E4F696C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E530DE0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23E4F69D4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23E4F69D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;

  v3 = a1[1];
  result = sub_23E53830C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_23E4F70C8(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v109 = result;
  v106 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v98 = v11;
      v108 = v8;
      if (v12 >= 2)
      {
        v99 = *v106;
        do
        {
          v100 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v99)
            goto LABEL_159;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v12 + 24];
          sub_23E4F71A4((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(_QWORD *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_23E530CC8((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_149;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v12 > v105)
            goto LABEL_150;
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v108 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23E537844();
    *(_QWORD *)(v7 + 16) = v6;
    v108 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v107 = *a1 + 16;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v110 = v3;
  v111 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = v10 + 32 * v9;
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 16);
    v17 = v10 + 32 * v13;
    if (v15 == *(_QWORD *)(v17 + 8) && v16 == *(_QWORD *)(v17 + 16))
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_23E538354();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v107 + 32 * v20);
    do
    {
      v23 = v10 + 32 * v9;
      if (*(v21 - 1) == *(_QWORD *)(v23 + 8) && *v21 == *(_QWORD *)(v23 + 16))
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_23E538354()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 = v20 + 1;
      v21 += 4;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 32 * v20;
        v26 = 32 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = (_OWORD *)(v10 + v26);
            v30 = v10 + v25;
            v31 = *(_BYTE *)(v10 + v26);
            v32 = *(_QWORD *)(v10 + v26 + 8);
            v33 = *(_OWORD *)(v10 + v26 + 16);
            v34 = *(_OWORD *)(v10 + v25 - 16);
            *v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(_BYTE *)(v30 - 32) = v31;
            *(_QWORD *)(v30 - 24) = v32;
            *(_OWORD *)(v30 - 16) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v109)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23E530794(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v49 = *((_QWORD *)v11 + 2);
    v48 = *((_QWORD *)v11 + 3);
    v12 = v49 + 1;
    if (v49 >= v48 >> 1)
      v11 = sub_23E530794((char *)(v48 > 1), v49 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v50 = v11 + 32;
    v51 = &v11[16 * v49 + 32];
    *(_QWORD *)v51 = v13;
    *((_QWORD *)v51 + 1) = v9;
    if (v49)
    {
      v10 = v111;
      while (1)
      {
        v52 = v12 - 1;
        if (v12 >= 4)
        {
          v57 = &v50[16 * v12];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_135;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_136;
          v64 = v12 - 2;
          v65 = &v50[16 * v12 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_138;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_141;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_145;
            v80 = v55 < v90;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v81 = *((_QWORD *)v11 + 4);
            v82 = *((_QWORD *)v11 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_99;
          }
          v54 = *((_QWORD *)v11 + 4);
          v53 = *((_QWORD *)v11 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_137;
        v64 = v12 - 2;
        v70 = &v50[16 * v12 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_140;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_143;
        if (__OFADD__(v74, v79))
          goto LABEL_144;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_105:
          if (v80)
            v52 = v64;
          goto LABEL_107;
        }
LABEL_99:
        if ((v75 & 1) != 0)
          goto LABEL_139;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_142;
        if (v86 < v74)
          goto LABEL_15;
LABEL_107:
        v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10)
          goto LABEL_157;
        v92 = v10;
        v93 = &v50[16 * v91];
        v94 = *(_QWORD *)v93;
        v95 = &v50[16 * v52];
        v96 = *((_QWORD *)v95 + 1);
        sub_23E4F71A4((char *)(v92 + 32 * *(_QWORD *)v93), (char *)(v92 + 32 * *(_QWORD *)v95), v92 + 32 * v96, __dst);
        if (v1)
          goto LABEL_115;
        if (v96 < v94)
          goto LABEL_132;
        if (v52 > *((_QWORD *)v11 + 2))
          goto LABEL_133;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v50[16 * v91 + 8] = v96;
        v97 = *((_QWORD *)v11 + 2);
        if (v52 >= v97)
          goto LABEL_134;
        v12 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((_QWORD *)v11 + 2) = v97 - 1;
        v80 = v97 > 2;
        v10 = v111;
        if (!v80)
          goto LABEL_15;
      }
    }
    v12 = 1;
    v10 = v111;
LABEL_15:
    v3 = v110;
    if (v9 >= v110)
    {
      v8 = v108;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v109))
    goto LABEL_153;
  if (v13 + v109 >= v3)
    v35 = v3;
  else
    v35 = v13 + v109;
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      v36 = v107 + 32 * v9;
      do
      {
        v37 = v10 + 32 * v9;
        v38 = *(_QWORD *)(v37 + 8);
        v39 = *(_QWORD *)(v37 + 16);
        v40 = v13;
        v41 = v36;
        do
        {
          v42 = v38 == *(_QWORD *)(v41 - 40) && v39 == *(_QWORD *)(v41 - 32);
          if (v42 || (sub_23E538354() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v43 = (_OWORD *)(v41 - 16);
          v44 = *(_OWORD *)v41;
          v46 = *(_OWORD *)(v41 - 48);
          v45 = *(_OWORD *)(v41 - 32);
          *(_OWORD *)(v41 - 32) = *(_OWORD *)v41;
          v41 -= 32;
          v47 = *(_BYTE *)(v41 + 16);
          v38 = *(_QWORD *)(v41 + 24);
          *v43 = v46;
          v43[1] = v45;
          *(_BYTE *)(v41 - 16) = v47;
          *(_QWORD *)(v41 - 8) = v38;
          v39 = v44;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 32;
      }
      while (v9 != v35);
      v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E4F70C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 32 * a3 + 16;
LABEL_5:
    v9 = v7 + 32 * v4;
    result = *(_QWORD *)(v9 + 8);
    v10 = *(_QWORD *)(v9 + 16);
    v11 = v6;
    v12 = v8;
    while (1)
    {
      v13 = result == *(_QWORD *)(v12 - 40) && v10 == *(_QWORD *)(v12 - 32);
      if (v13 || (result = sub_23E538354(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v14 = (_OWORD *)(v12 - 16);
      v15 = *(_OWORD *)v12;
      v17 = *(_OWORD *)(v12 - 48);
      v16 = *(_OWORD *)(v12 - 32);
      *(_OWORD *)(v12 - 32) = *(_OWORD *)v12;
      v12 -= 32;
      v18 = *(_BYTE *)(v12 + 16);
      result = *(_QWORD *)(v12 + 24);
      *v14 = v17;
      v14[1] = v16;
      *(_BYTE *)(v12 - 16) = v18;
      *(_QWORD *)(v12 - 8) = result;
      v10 = v15;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E4F71A4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  BOOL v16;
  char *v17;
  char *v18;
  __int128 v19;
  char *v20;
  char *v21;
  char *v22;
  BOOL v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t result;
  char *v28;
  const void *v29;
  char *v30;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v30 = __src;
  v29 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v20 = &v4[32 * v13];
      v28 = v20;
      v30 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v21 = (char *)(a3 - 32);
        do
        {
          v22 = v21 + 32;
          v23 = *((_QWORD *)v20 - 3) == *((_QWORD *)v6 - 3) && *((_QWORD *)v20 - 2) == *((_QWORD *)v6 - 2);
          if (v23 || (sub_23E538354() & 1) == 0)
          {
            v28 = v20 - 32;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
            {
              v26 = *((_OWORD *)v20 - 1);
              *(_OWORD *)v21 = *((_OWORD *)v20 - 2);
              *((_OWORD *)v21 + 1) = v26;
            }
            v24 = v6;
            v20 -= 32;
            if (v6 <= v7)
              break;
          }
          else
          {
            v24 = v6 - 32;
            if (v22 != v6 || v21 >= v6)
            {
              v25 = *((_OWORD *)v6 - 1);
              *(_OWORD *)v21 = *(_OWORD *)v24;
              *((_OWORD *)v21 + 1) = v25;
            }
            v30 = v6 - 32;
            if (v24 <= v7)
              break;
          }
          v21 -= 32;
          v6 = v24;
        }
        while (v20 > v4);
      }
LABEL_52:
      sub_23E530AFC((void **)&v30, &v29, &v28);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v28 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      v15 = v4;
      while (1)
      {
        v16 = *((_QWORD *)v6 + 1) == *((_QWORD *)v15 + 1) && *((_QWORD *)v6 + 2) == *((_QWORD *)v15 + 2);
        if (v16 || (sub_23E538354() & 1) == 0)
        {
          v4 = v15 + 32;
          v18 = v15;
          v17 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4)
              goto LABEL_26;
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          v17 = v6 + 32;
          v18 = v6;
          if (v7 == v6 && v7 < v17)
            goto LABEL_26;
        }
        v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_26:
        v7 += 32;
        if (v15 < v14)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v29 = v4;
        v30 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel29RoomSectionByUmbrellaCategoryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  int v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  _BYTE v87[40];
  uint64_t v88;
  __int128 v89[2];
  _OWORD v90[3];
  _OWORD v91[2];
  _OWORD v92[3];

  v4 = type metadata accessor for StaticAccessory(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v69 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v79 = (uint64_t)&v69 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v78 = (uint64_t)&v69 - v13;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49428);
  MEMORY[0x24BDAC7A8](v77);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StaticServiceGroup();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v76 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v69 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v85 = (uint64_t)&v69 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v84 = (uint64_t)&v69 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49430);
  MEMORY[0x24BDAC7A8](v25);
  v80 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a1 + 24);
  v28 = *(_QWORD *)(a2 + 24);
  v29 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v83 = v29;
  if (!v29)
  {
    v86 = 1;
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v86 & 1;
  }
  v69 = (int *)v16;
  v74 = v15;
  v71 = v10;
  v72 = v7;
  v31 = 0;
  v32 = (char *)v92 + 8;
  v82 = (uint64_t)v90 + 8;
  v81 = &v88;
  v86 = 1;
  v33 = 32;
  v34 = v80;
  v73 = (char *)v92 + 8;
  v70 = v25;
  v75 = v21;
  while (v31 < *(_QWORD *)(v27 + 16))
  {
    result = sub_23E1FF9C8(v27 + v33, (uint64_t)v89);
    v35 = *(_QWORD *)(v28 + 16);
    if (v31 == v35)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v89);
      goto LABEL_37;
    }
    if (v31 >= v35)
      goto LABEL_39;
    sub_23E1E6C84(v89, (uint64_t)v91);
    sub_23E1FF9C8(v28 + v33, (uint64_t)v32);
    v90[0] = v92[0];
    v90[1] = v92[1];
    v90[2] = v92[2];
    v89[0] = v91[0];
    v89[1] = v91[1];
    sub_23E1FF9C8((uint64_t)v89, (uint64_t)v87);
    sub_23E1FF9C8(v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D49438);
    if (!swift_dynamicCast())
    {
      v58 = (uint64_t)v74;
      v59 = v77;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v60 = v58 + *(int *)(v59 + 48);
        v61 = v58;
        v62 = v78;
        sub_23E1E2FDC(v61, v78, type metadata accessor for StaticAccessory);
        v63 = v60;
        v64 = v79;
        sub_23E1E2FDC(v63, v79, type metadata accessor for StaticAccessory);
        v65 = v62;
        v66 = (uint64_t)v71;
        sub_23E1E2F50(v65, (uint64_t)v71, type metadata accessor for StaticAccessory);
        v67 = v64;
        v68 = (uint64_t)v72;
        sub_23E1E2F50(v67, (uint64_t)v72, type metadata accessor for StaticAccessory);
        if ((v86 & 1) != 0)
          v86 = static StaticAccessory.== infix(_:_:)(v66, v68);
        else
          v86 = 0;
        sub_23E1E2FA0(v68, type metadata accessor for StaticAccessory);
        sub_23E1E2FA0(v66, type metadata accessor for StaticAccessory);
        sub_23E1E2FA0(v79, type metadata accessor for StaticAccessory);
        sub_23E1E2FA0(v78, type metadata accessor for StaticAccessory);
        v25 = v70;
      }
      else
      {
        v86 = 0;
      }
      goto LABEL_4;
    }
    v36 = v27;
    v37 = v28;
    v38 = v25;
    v39 = (uint64_t)&v34[*(int *)(v25 + 48)];
    v40 = (uint64_t)v34;
    v41 = v84;
    sub_23E1E2FDC(v40, v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v42 = v85;
    sub_23E1E2FDC(v39, v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v43 = (uint64_t)v75;
    sub_23E1E2F50(v41, (uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v44 = v76;
    sub_23E1E2F50(v42, v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    if ((v86 & 1) != 0 && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    {
      v45 = v69[5];
      v46 = *(_QWORD *)(v43 + v45);
      v47 = *(_QWORD *)(v43 + v45 + 8);
      v48 = (_QWORD *)(v44 + v45);
      v25 = v38;
      v28 = v37;
      v27 = v36;
      v34 = v80;
      if (v46 != *v48 || v47 != v48[1])
      {
        v49 = sub_23E538354();
        v50 = 0;
        if ((v49 & 1) == 0)
          goto LABEL_27;
      }
      v51 = v69;
      if (*(unsigned __int8 *)(v43 + v69[6]) == *(unsigned __int8 *)(v44 + v69[6])
        && *(unsigned __int8 *)(v43 + v69[7]) == *(unsigned __int8 *)(v44 + v69[7])
        && (sub_23E1F8470(*(_QWORD *)(v43 + v69[8]), *(_QWORD *)(v44 + v69[8])) & 1) != 0)
      {
        v52 = v51[9];
        v53 = (_QWORD *)(v43 + v52);
        v54 = *(_QWORD *)(v43 + v52 + 8);
        v55 = (_QWORD *)(v44 + v52);
        v56 = v55[1];
        if (v54)
        {
          if (!v56)
          {
            v50 = 0;
            v43 = (uint64_t)v75;
            goto LABEL_27;
          }
          v43 = (uint64_t)v75;
          if (*v53 != *v55 || v54 != v56)
          {
            v57 = sub_23E538354();
            v50 = 0;
            if ((v57 & 1) == 0)
              goto LABEL_27;
          }
LABEL_31:
          if (*(unsigned __int8 *)(v43 + v69[10]) == *(unsigned __int8 *)(v44 + v69[10]))
          {
            v50 = sub_23E1F8844(*(_QWORD *)(v43 + v69[11]), *(_QWORD *)(v44 + v69[11]));
            goto LABEL_27;
          }
        }
        else
        {
          v43 = (uint64_t)v75;
          if (!v56)
            goto LABEL_31;
        }
      }
      v50 = 0;
      goto LABEL_27;
    }
    v50 = 0;
    v25 = v38;
    v28 = v37;
    v27 = v36;
    v34 = v80;
LABEL_27:
    v86 = v50;
    sub_23E1E2FA0(v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FA0(v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v32 = v73;
LABEL_4:
    ++v31;
    sub_23E1E7C64((uint64_t)v87, &qword_256D49438);
    result = sub_23E1E7C64((uint64_t)v89, &qword_256D49438);
    v33 += 40;
    if (v83 == v31)
      goto LABEL_37;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23E4F7B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  int64_t v12;

  v11 = (_QWORD *)(a2 + 64);
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 > 1)
  {
    v7 = v11[1];
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v12 <= 2)
      goto LABEL_21;
    v7 = v11[2];
    if (v7)
      goto LABEL_19;
    v8 = 3;
    if (v12 <= 3)
      goto LABEL_21;
    v7 = v11[3];
    if (v7)
      goto LABEL_19;
    v8 = 4;
    if (v12 <= 4)
      goto LABEL_21;
    v7 = v11[4];
    if (v7)
    {
LABEL_19:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
      __asm { BR              X8 }
    }
    v9 = 5;
    if (v12 > 5)
    {
      v7 = v11[5];
      if (v7)
      {
        v8 = 5;
        goto LABEL_19;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x23E4F7ED0);
        }
        if (v8 >= v12)
          break;
        v7 = v11[v8];
        ++v9;
        if (v7)
          goto LABEL_19;
      }
    }
  }
LABEL_21:
  swift_release();
  return a1;
}

unint64_t sub_23E4F7EEC()
{
  unint64_t result;

  result = qword_256D49420;
  if (!qword_256D49420)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for RoomSectionByUmbrellaCategory, &type metadata for RoomSectionByUmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D49420);
  }
  return result;
}

uint64_t destroy for RoomSectionByUmbrellaCategory()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomSectionByUmbrellaCategory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomSectionByUmbrellaCategory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RoomSectionByUmbrellaCategory()
{
  return &type metadata for RoomSectionByUmbrellaCategory;
}

uint64_t sub_23E4F80EC(void *a1)
{
  char v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  char **v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char v37[24];
  ValueMetadata *v38;
  unint64_t v39;

  v38 = &type metadata for HomeAppFeatures;
  v39 = sub_23E20B720();
  v37[0] = 1;
  v2 = sub_23E5370AC();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  if ((v2 & 1) == 0)
    return result;
  result = swift_beginAccess();
  if (qword_254333510 != 1)
    return result;
  sub_23E428A78();
  v5 = v4;
  v6 = a1;
  v7 = sub_23E4F93BC(v5);

  swift_bridgeObjectRelease();
  if (qword_254332E00 != -1)
LABEL_24:
    swift_once();
  v8 = sub_23E5371A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v9 = sub_23E537190();
  v10 = sub_23E537B20();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v36 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543331B8);
    v14 = MEMORY[0x24264EA94](v7, v13);
    v16 = v15;
    swift_bridgeObjectRelease();
    sub_23E1FD768(v14, v16, &v36);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v9, v10, "Setting up delegates for devices %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v12, -1, -1);
    MEMORY[0x24264FEBC](v11, -1, -1);

    v17 = *(_QWORD *)(v7 + 16);
    if (v17)
      goto LABEL_10;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v17 = *(_QWORD *)(v7 + 16);
    if (v17)
      goto LABEL_10;
  }
  v18 = v6;
  v19 = sub_23E537190();
  v20 = sub_23E537AFC();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v36 = v22;
    *(_DWORD *)v21 = 136315394;
    sub_23E1FD768(0xD00000000000001CLL, 0x800000023E56B5B0, &v36);
    sub_23E537CF4();
    *(_WORD *)(v21 + 12) = 2080;
    sub_23E428A78();
    v24 = v23;
    v25 = sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v26 = MEMORY[0x24264EA94](v24, v25);
    v28 = v27;
    swift_bridgeObjectRelease();
    sub_23E1FD768(v26, v28, &v36);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v19, v20, "%s No eligible devices found: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v21, -1, -1);

    v17 = *(_QWORD *)(v7 + 16);
    if (v17)
      goto LABEL_10;
    return swift_bridgeObjectRelease();
  }

  v17 = *(_QWORD *)(v7 + 16);
  if (!v17)
    return swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRetain();
  v29 = 32;
  v30 = 1;
  v6 = &selRef_homeManager_didAddHome_;
  while (1)
  {
    if (*(_QWORD *)(v7 + v29))
    {
      objc_opt_self();
      v31 = swift_dynamicCastObjCClass();
      if (v31)
      {
        v32 = (void *)v31;
        v33 = qword_256D3EF10;
        swift_unknownObjectRetain();
        if (v33 != -1)
          swift_once();
        objc_msgSend(v32, sel_setDelegate_queue_, v35, qword_256D89898);
        swift_unknownObjectRelease();
      }
    }
    if (v17 == v30)
      return swift_bridgeObjectRelease_n();
    v29 += 16;
    if (__OFADD__(v30++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
  }
}

void sub_23E4F85E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];
  ValueMetadata *v21;
  unint64_t v22;

  v2 = v1;
  v21 = &type metadata for HomeAppFeatures;
  v22 = sub_23E20B720();
  v20[0] = 1;
  v4 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    if (qword_254333510 == 1)
    {
      v5 = sub_23E42881C(a1);
      if (qword_254332E00 != -1)
        swift_once();
      v6 = sub_23E5371A8();
      __swift_project_value_buffer(v6, (uint64_t)qword_254333308);
      swift_unknownObjectRetain_n();
      v7 = a1;
      v8 = sub_23E537190();
      v9 = sub_23E537B20();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v17 = (_QWORD *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v19 = v18;
        *(_DWORD *)v10 = 136315394;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543331B8);
        v11 = sub_23E5375D4();
        sub_23E1FD768(v11, v12, &v19);
        sub_23E537CF4();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2112;
        v13 = v7;
        sub_23E537CF4();
        *v17 = v7;

        _os_log_impl(&dword_23E1DF000, v8, v9, "Setting up delegate for device (%s) accessory: %@", (uint8_t *)v10, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v17, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v18, -1, -1);
        MEMORY[0x24264FEBC](v10, -1, -1);

        if (!v5)
          return;
      }
      else
      {

        swift_unknownObjectRelease_n();
        if (!v5)
          return;
      }
      objc_opt_self();
      v14 = swift_dynamicCastObjCClass();
      if (v14)
      {
        v15 = (void *)v14;
        v16 = qword_256D3EF10;
        swift_unknownObjectRetain();
        if (v16 != -1)
          swift_once();
        objc_msgSend(v15, sel_setDelegate_queue_, v2, qword_256D89898, v17);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_23E4F8984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = a5;
  return swift_task_switch();
}

uint64_t sub_23E4F899C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = sub_23E5378F8();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F8A08()
{
  swift_release();
  if (qword_254332458 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4F8A6C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4F8ACC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 88) = qword_254332248;
  return swift_task_switch();
}

uint64_t sub_23E4F8B14()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 96) = objc_msgSend(v1, sel_path);
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  *(_QWORD *)(v0 + 104) = objc_msgSend(*(id *)(v0 + 48), sel_error);
  return swift_task_switch();
}

uint64_t sub_23E4F8BC8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 96);
  v1 = *(void **)(v0 + 104);
  MatterSnapshotModerator.receivedAttributeReport(for:device:value:error:)(v2, *(id *)(v0 + 56), v0 + 16, v1);

  sub_23E1E7C64(v0 + 16, &qword_254332260);
  return swift_task_switch();
}

uint64_t sub_23E4F8C3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_254332E00 != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = *(void **)(v0 + 56);
  v3 = sub_23E5371A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_254333308);
  v4 = v1;
  v5 = v2;
  v6 = v4;
  v7 = v5;
  v8 = sub_23E537190();
  v9 = sub_23E537B20();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(void **)(v0 + 48);
  v12 = *(void **)(v0 + 56);
  if (v10)
  {
    v13 = swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v13 = 136315394;
    v14 = sub_23E4F8E78();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v14, v15, &v20);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    v16 = objc_msgSend(v12, sel_hdm_nodeID);
    *(_QWORD *)(v0 + 16) = v16;
    sub_23E537CF4();
    *v18 = v16;

    _os_log_impl(&dword_23E1DF000, v8, v9, "Updating for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v19, -1, -1);
    MEMORY[0x24264FEBC](v13, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4F8E78()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  __int128 v19;
  _OWORD v20[2];

  v1 = v0;
  v2 = objc_msgSend(v0, sel_path);
  v3 = objc_msgSend(v2, sel_endpoint);

  objc_msgSend(v3, sel_unsignedIntValue);
  v4 = objc_msgSend(v1, sel_path);
  v5 = objc_msgSend(v4, sel_cluster);

  LODWORD(v4) = objc_msgSend(v5, sel_unsignedIntValue);
  ClusterKind.init(rawValue:)((Swift::UInt32)v4);
  v6 = objc_msgSend(v1, sel_path);
  v7 = objc_msgSend(v6, sel_attribute);

  v8 = objc_msgSend(v7, sel_unsignedIntValue);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D494E0);
  v9 = sub_23E537CB8();
  v11 = v10;
  if (LOBYTE(v20[0]) == 28 || (sub_23E2F8228(v8, v20), !v12))
  {
    *(_QWORD *)&v20[0] = 0x2D6E776F6E6B6E75;
    *((_QWORD *)&v20[0] + 1) = 0xE800000000000000;
    v13 = objc_msgSend(v1, sel_path);
    v14 = objc_msgSend(v13, sel_attribute);

    LODWORD(v13) = objc_msgSend(v14, sel_unsignedIntValue);
    LODWORD(v19) = (_DWORD)v13;
    sub_23E538318();
    sub_23E537628();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v1, sel_value, (_QWORD)v19))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
    sub_23E1EA76C(&v19, v20);
    *(_QWORD *)&v19 = 0;
    *((_QWORD *)&v19 + 1) = 0xE000000000000000;
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537FDC();
    v15 = v19;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    v16 = objc_msgSend(v1, sel_error);
    if (v16)
    {
      v17 = v16;
      *(_QWORD *)&v20[0] = 0;
      *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      *(_QWORD *)&v19 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
      sub_23E537FDC();

    }
    else
    {
      *(_QWORD *)&v20[0] = v9;
      *((_QWORD *)&v20[0] + 1) = v11;
      sub_23E537628();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
    }
    return *(_QWORD *)&v20[0];
  }
  return v15;
}

uint64_t sub_23E4F9278(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v8;
  id v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
  v8 = sub_23E5377F0();
  v9 = a3;
  v10 = a1;
  a5(v9, v8);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DataModel.deviceBecameActive(_:)(MTRDevice a1)
{
  sub_23E4FB120(a1.super.isa, "Received MTRDevice delegate deviceBecameActive for device:%@");
}

Swift::Void __swiftcall DataModel.deviceCachePrimed(_:)(MTRDevice a1)
{
  sub_23E4FB120(a1.super.isa, "Received MTRDevice delegate deviceCachePrimed for device:%@");
}

uint64_t sub_23E4F93BC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v16 = MEMORY[0x24BEE4AF8];
    result = sub_23E2CB390(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v16;
    v15 = v1 & 0xC000000000000001;
    v6 = v1;
    while (v2 != v5)
    {
      if (v15)
        v7 = (id)MEMORY[0x24264F148](v5, v1);
      else
        v7 = *(id *)(v1 + 8 * v5 + 32);
      v8 = v7;
      v9 = sub_23E42881C(v7);
      v11 = v10;

      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_23E2CB390(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v1 = v6;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel0bC0C6device_12stateChangedySo9MTRDeviceC_So0G5StateVtF_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  ValueMetadata *v38;
  unint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254332E00 != -1)
    swift_once();
  v8 = sub_23E5371A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_254333308);
  v9 = a1;
  v10 = sub_23E537190();
  v11 = sub_23E537B20();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v32 = v5;
    v14 = (_QWORD *)v13;
    v15 = swift_slowAlloc();
    v33 = v4;
    v34 = v15;
    v16 = v15;
    *(_DWORD *)v12 = 136315650;
    v35 = a2;
    type metadata accessor for MTRDeviceState(0);
    v17 = sub_23E5375D4();
    v35 = sub_23E1FD768(v17, v18, &v34);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    v19 = objc_msgSend(v9, sel_hdm_nodeID);
    v35 = (uint64_t)v19;
    sub_23E537CF4();
    *v14 = v19;

    *(_WORD *)(v12 + 22) = 1024;
    v38 = &type metadata for HomeAppFeatures;
    v39 = sub_23E20B720();
    LOBYTE(v35) = 2;
    v20 = sub_23E5370AC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v35);
    LODWORD(v35) = v20 & 1;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v10, v11, "Received MTRDevice delegate stateChanged (%s) for device: %@. Will trigger snapshot:%{BOOL}d", (uint8_t *)v12, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    v21 = v14;
    v5 = v32;
    MEMORY[0x24264FEBC](v21, -1, -1);
    swift_arrayDestroy();
    v22 = v16;
    v4 = v33;
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v12, -1, -1);

  }
  else
  {

  }
  v38 = &type metadata for HomeAppFeatures;
  v39 = sub_23E20B720();
  LOBYTE(v35) = 2;
  v23 = sub_23E5370AC();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v35);
  if ((v23 & 1) != 0)
  {
    v25 = objc_msgSend(v9, sel_hdm_containingHome);
    if (v25)
    {
      v26 = (uint64_t)v25;
      v27 = objc_msgSend(v9, sel_hdm_nodeID);
      v28 = objc_msgSend(v27, sel_unsignedLongLongValue);

      if (v28)
      {
        if (qword_254333BB0 != -1)
          swift_once();
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
        __swift_project_value_buffer(v29, (uint64_t)qword_254333B20);
        v35 = (uint64_t)v28;
        v36 = v26;
        v37 = 1;
      }
      else
      {
        if (qword_254333BB0 != -1)
          swift_once();
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
        __swift_project_value_buffer(v31, (uint64_t)qword_254333B20);
        v35 = v26;
        v36 = 0;
        v37 = 0;
      }
    }
    else
    {
      if (qword_254333BB0 != -1)
        swift_once();
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
      __swift_project_value_buffer(v30, (uint64_t)qword_254333B20);
      v35 = 0;
      v36 = 0;
      v37 = 3;
    }
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void _s13HomeDataModel0bC0C6device_23receivedAttributeReportySo9MTRDeviceC_SaySDySSypGGtF_0(os_log_t a1, os_log_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *isa;
  __int128 v9;
  os_log_t v10;
  Class v11;
  NSObject *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  NSObject *v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  id v47;
  NSObject *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  os_log_t v81;
  int v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_t v88;
  uint64_t v89;
  NSObject *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  id v100;
  uint64_t v101;
  NSObject *v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  id v112;
  id v113;
  unint64_t v114;
  id v115;
  id v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  _QWORD v122[2];
  NSObject *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  int v130;
  os_log_t v131;
  char *v132;
  __int128 v133;
  uint64_t v134;
  NSObject *v135;
  uint64_t v136;
  os_log_t v137;
  uint64_t v138;
  os_log_t v139;
  uint64_t v140;
  os_log_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146[2];
  __int128 v147;
  __int128 v148;
  uint64_t v149;

  v149 = *MEMORY[0x24BDAC8D0];
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v125 = (char *)v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = a2[2].isa;
  if (!isa)
  {
LABEL_59:
    if (qword_254332E00 == -1)
      goto LABEL_60;
    goto LABEL_77;
  }
  v124 = v7;
  v131 = a1;
  v139 = a2 + 4;
  v134 = *MEMORY[0x24BDDB460];
  v136 = *MEMORY[0x24BDDB498];
  v132 = (char *)&v147 + 8;
  v122[0] = a2;
  swift_bridgeObjectRetain();
  v130 = 0;
  a1 = 0;
  v123 = ((char *)isa - 1);
  v138 = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v9 = 138412802;
  v133 = v9;
  *(_QWORD *)&v9 = 136315394;
  v129 = v9;
  v122[1] = MEMORY[0x24BEE4AE0] + 8;
  v135 = isa;
LABEL_3:
  if (a1 <= isa)
    v10 = isa;
  else
    v10 = a1;
  v141 = v10;
  a2 = a1;
  do
  {
    if (v141 == a2)
    {
      __break(1u);
LABEL_77:
      swift_once();
LABEL_60:
      v101 = sub_23E5371A8();
      __swift_project_value_buffer(v101, (uint64_t)qword_254333308);
      swift_bridgeObjectRetain_n();
      v102 = a1;
      v103 = sub_23E537190();
      v104 = sub_23E537B20();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = swift_slowAlloc();
        v106 = (_QWORD *)swift_slowAlloc();
        v107 = swift_slowAlloc();
        *(_QWORD *)&v147 = v107;
        *(_DWORD *)v105 = 136315394;
        swift_bridgeObjectRetain();
        v108 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
        v109 = MEMORY[0x24264EA94](a2, v108);
        v111 = v110;
        swift_bridgeObjectRelease();
        v146[0] = sub_23E1FD768(v109, v111, (uint64_t *)&v147);
        sub_23E537CF4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v105 + 12) = 2112;
        v112 = -[NSObject hdm_nodeID](v102, sel_hdm_nodeID);
        v146[0] = (uint64_t)v112;
        sub_23E537CF4();
        *v106 = v112;

        _os_log_impl(&dword_23E1DF000, v103, v104, "Skipping update for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v105, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v106, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v107, -1, -1);
        MEMORY[0x24264FEBC](v105, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return;
    }
    v11 = v139[(_QWORD)a2].isa;
    v12 = ((char *)&a2->isa + 1);
    v13 = objc_allocWithZone(MEMORY[0x24BDDB540]);
    swift_bridgeObjectRetain_n();
    v14 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v147 = 0;
    v15 = objc_msgSend(v13, sel_initWithResponseValue_error_, v14, &v147);

    if (v15)
    {
      v137 = (os_log_t)((char *)&a2->isa + 1);
      v60 = (id)v147;
      swift_bridgeObjectRelease();
      v61 = objc_msgSend(v15, sel_error);
      if (v61)
      {
        v62 = v61;
        if (qword_254332E00 != -1)
          swift_once();
        v63 = sub_23E5371A8();
        __swift_project_value_buffer(v63, (uint64_t)qword_254333308);
        v64 = v15;
        v65 = v62;
        v66 = v64;
        v67 = v65;
        v68 = sub_23E537190();
        v69 = sub_23E537B08();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v71 = swift_slowAlloc();
          *(_QWORD *)&v147 = v71;
          *(_DWORD *)v70 = v129;
          v146[0] = (uint64_t)objc_msgSend(v66, sel_path);
          sub_23E1E335C(0, (unint64_t *)&qword_256D494D0);
          v72 = sub_23E5375D4();
          *(_QWORD *)(v70 + 4) = sub_23E1FD768(v72, v73, (uint64_t *)&v147);

          swift_bridgeObjectRelease();
          *(_WORD *)(v70 + 12) = 2080;
          v146[0] = (uint64_t)v67;
          v74 = v67;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
          v75 = sub_23E5375D4();
          *(_QWORD *)(v70 + 14) = sub_23E1FD768(v75, v76, (uint64_t *)&v147);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23E1DF000, v68, v69, "AttributeReport: path (%s) has error: %s", (uint8_t *)v70, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v71, -1, -1);
          MEMORY[0x24264FEBC](v70, -1, -1);

        }
        else
        {

        }
      }
      v77 = sub_23E537934();
      v78 = *(_QWORD *)(v77 - 8);
      v79 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v124, 1, 1, v77);
      v80 = (_QWORD *)swift_allocObject();
      v80[2] = 0;
      v80[3] = 0;
      v80[4] = v15;
      v81 = v131;
      v80[5] = v131;
      v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77);
      v141 = (os_log_t)v15;
      v83 = v81;
      if (v82 == 1)
      {
        sub_23E1E7C64(v79, &qword_254334B40);
      }
      else
      {
        sub_23E537928();
        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v79, v77);
      }
      isa = v135;
      if (v80[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v84 = sub_23E5378B0();
        v86 = v85;
        swift_unknownObjectRelease();
      }
      else
      {
        v84 = 0;
        v86 = 0;
      }
      v87 = swift_allocObject();
      *(_QWORD *)(v87 + 16) = &unk_256D494C0;
      *(_QWORD *)(v87 + 24) = v80;
      if (v86 | v84)
      {
        v142 = 0;
        v143 = 0;
        v144 = v84;
        v145 = v86;
      }
      a1 = v137;
      v88 = v141;
      swift_task_create();

      swift_release();
      v130 = 1;
      if (v123 == a2)
      {
        a2 = (os_log_t)v122[0];
        swift_bridgeObjectRelease();
        a1 = v131;
        goto LABEL_55;
      }
      goto LABEL_3;
    }
    v16 = (id)v147;
    v17 = (void *)sub_23E536D10();

    swift_willThrow();
    if (qword_254332E00 != -1)
      swift_once();
    v18 = sub_23E5371A8();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_254333308);
    swift_bridgeObjectRetain_n();
    v20 = v17;
    swift_bridgeObjectRetain();
    v21 = v17;
    v140 = v19;
    v22 = sub_23E537190();
    v23 = sub_23E537B08();
    if (os_log_type_enabled(v22, v23))
    {
      v137 = v12;
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v146[0] = v26;
      *(_DWORD *)v24 = v133;
      v27 = v17;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v24 + 4) = v28;
      *v25 = v28;

      *(_WORD *)(v24 + 12) = 2080;
      v29 = sub_23E53755C();
      if (*((_QWORD *)v11 + 2) && (v31 = sub_23E211350(v29, v30), (v32 & 1) != 0))
      {
        sub_23E1EA57C(*((_QWORD *)v11 + 7) + 32 * v31, (uint64_t)&v147);
      }
      else
      {
        v147 = 0u;
        v148 = 0u;
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
      v33 = sub_23E5375D4();
      *(_QWORD *)(v24 + 14) = sub_23E1FD768(v33, v34, v146);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2080;
      swift_bridgeObjectRetain();
      v35 = sub_23E53746C();
      v37 = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v24 + 24) = sub_23E1FD768(v35, v37, v146);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v22, v23, "Failed to decode attribute report with error: %@, path: (%s), report: %s", (uint8_t *)v24, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v26, -1, -1);
      MEMORY[0x24264FEBC](v24, -1, -1);

      isa = v135;
      v12 = v137;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v38 = sub_23E53755C();
    a1 = (os_log_t)v39;
    if (*((_QWORD *)v11 + 2) && (v40 = sub_23E211350(v38, v39), (v41 & 1) != 0))
    {
      sub_23E1EA57C(*((_QWORD *)v11 + 7) + 32 * v40, (uint64_t)&v147);
    }
    else
    {
      v147 = 0u;
      v148 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v148 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v42 = v12;
        v43 = v146[0];
        v44 = v146[1];
        sub_23E1E335C(0, &qword_256D47458);
        a1 = (os_log_t)sub_23E1E335C(0, &qword_256D494B0);
        v45 = (void *)sub_23E537B2C();
        if (v45)
        {
          v46 = v45;
          swift_bridgeObjectRetain();
          v47 = v46;
          v48 = sub_23E537190();
          LODWORD(v140) = sub_23E537B08();
          if (os_log_type_enabled(v48, (os_log_type_t)v140))
          {
            v137 = v48;
            v49 = swift_slowAlloc();
            v128 = swift_slowAlloc();
            v146[0] = v128;
            *(_DWORD *)v49 = v129;
            *(_QWORD *)&v147 = v47;
            v50 = v47;
            v51 = sub_23E5375D4();
            *(_QWORD *)&v147 = sub_23E1FD768(v51, v52, v146);
            sub_23E537CF4();

            swift_bridgeObjectRelease();
            *(_WORD *)(v49 + 12) = 2080;
            v53 = sub_23E53755C();
            if (*((_QWORD *)v11 + 2) && (v55 = sub_23E211350(v53, v54), (v56 & 1) != 0))
            {
              sub_23E1EA57C(*((_QWORD *)v11 + 7) + 32 * v55, (uint64_t)&v147);
            }
            else
            {
              v147 = 0u;
              v148 = 0u;
            }
            swift_bridgeObjectRelease();
            __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
            v57 = sub_23E5375D4();
            *(_QWORD *)&v147 = sub_23E1FD768(v57, v58, v146);
            sub_23E537CF4();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            a1 = v137;
            _os_log_impl(&dword_23E1DF000, v137, (os_log_type_t)v140, "Manually decoded error: (%s), path: (%s)", (uint8_t *)v49, 0x16u);
            v59 = v128;
            swift_arrayDestroy();
            MEMORY[0x24264FEBC](v59, -1, -1);
            MEMORY[0x24264FEBC](v49, -1, -1);
            sub_23E22C908(v43, v44);

            isa = v135;
          }
          else
          {

            sub_23E22C908(v43, v44);
            swift_bridgeObjectRelease_n();

          }
        }
        else
        {
          sub_23E22C908(v43, v44);

          swift_bridgeObjectRelease();
        }
        v12 = v42;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {

      swift_bridgeObjectRelease();
      sub_23E1E7C64((uint64_t)&v147, &qword_254332260);
    }
    a2 = v12;
  }
  while (isa != v12);
  a2 = (os_log_t)v122[0];
  swift_bridgeObjectRelease();
  a1 = v131;
  if ((v130 & 1) == 0)
    goto LABEL_59;
LABEL_55:
  if (qword_254332E00 != -1)
    swift_once();
  v89 = sub_23E5371A8();
  __swift_project_value_buffer(v89, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v90 = a1;
  v91 = sub_23E537190();
  v92 = sub_23E537B20();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = swift_slowAlloc();
    v94 = (_QWORD *)swift_slowAlloc();
    v95 = swift_slowAlloc();
    *(_QWORD *)&v147 = v95;
    *(_DWORD *)v93 = v129;
    swift_bridgeObjectRetain();
    v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v97 = MEMORY[0x24264EA94](a2, v96);
    v99 = v98;
    swift_bridgeObjectRelease();
    v146[0] = sub_23E1FD768(v97, v99, (uint64_t *)&v147);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 12) = 2112;
    v100 = -[NSObject hdm_nodeID](v90, sel_hdm_nodeID);
    v146[0] = (uint64_t)v100;
    sub_23E537CF4();
    *v94 = v100;

    _os_log_impl(&dword_23E1DF000, v91, v92, "Updating for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v93, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v94, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v95, -1, -1);
    MEMORY[0x24264FEBC](v93, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v113 = -[NSObject hdm_containingHome](v90, sel_hdm_containingHome);
  if (!v113)
  {
    if (qword_254333BB0 != -1)
      swift_once();
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v119, (uint64_t)qword_254333B20);
    v147 = 0uLL;
    LOBYTE(v148) = 3;
    v120 = v125;
    goto LABEL_75;
  }
  v114 = (unint64_t)v113;
  v115 = -[NSObject hdm_nodeID](v90, sel_hdm_nodeID);
  v116 = objc_msgSend(v115, sel_unsignedLongLongValue);

  if (!v116)
  {
    if (qword_254333BB0 != -1)
      swift_once();
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v121, (uint64_t)qword_254333B20);
    v147 = v114;
    LOBYTE(v148) = 0;
    v120 = v125;
LABEL_75:
    sub_23E537940();
    (*(void (**)(char *, uint64_t))(v126 + 8))(v120, v127);
    return;
  }
  if (qword_254333BB0 != -1)
    swift_once();
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
  __swift_project_value_buffer(v117, (uint64_t)qword_254333B20);
  *(_QWORD *)&v147 = v116;
  *((_QWORD *)&v147 + 1) = v114;
  LOBYTE(v148) = 1;
  v118 = v125;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v118, v127);
}

uint64_t _s13HomeDataModel0bC0C6device_19receivedEventReportySo9MTRDeviceC_SaySDySSypGGtF_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t result;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  ValueMetadata *v41;
  unint64_t v42;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254332E00 != -1)
    swift_once();
  v8 = sub_23E5371A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v9 = a1;
  v10 = sub_23E537190();
  v11 = sub_23E537B20();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v34 = v7;
    v14 = (_QWORD *)v13;
    v15 = swift_slowAlloc();
    v35 = v5;
    v16 = v15;
    v37 = v15;
    *(_DWORD *)v12 = 136315650;
    swift_bridgeObjectRetain();
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v18 = MEMORY[0x24264EA94](a2, v17);
    v36 = v4;
    v20 = v19;
    swift_bridgeObjectRelease();
    v38 = sub_23E1FD768(v18, v20, &v37);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    v21 = objc_msgSend(v9, sel_hdm_nodeID);
    v38 = (uint64_t)v21;
    sub_23E537CF4();
    *v14 = v21;

    *(_WORD *)(v12 + 22) = 1024;
    v41 = &type metadata for HomeAppFeatures;
    v42 = sub_23E20B720();
    LOBYTE(v38) = 2;
    LOBYTE(v18) = sub_23E5370AC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v38);
    LODWORD(v38) = v18 & 1;
    v4 = v36;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v10, v11, "Received MTRDevice delegate receivedEventReport (%s) for device: %@. Will trigger snapshot:%{BOOL}d", (uint8_t *)v12, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    v22 = v14;
    v7 = v34;
    MEMORY[0x24264FEBC](v22, -1, -1);
    swift_arrayDestroy();
    v23 = v16;
    v5 = v35;
    MEMORY[0x24264FEBC](v23, -1, -1);
    MEMORY[0x24264FEBC](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v41 = &type metadata for HomeAppFeatures;
  v42 = sub_23E20B720();
  LOBYTE(v38) = 2;
  v24 = sub_23E5370AC();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v38);
  if ((v24 & 1) != 0)
  {
    v26 = objc_msgSend(v9, sel_hdm_containingHome);
    if (v26)
    {
      v27 = (uint64_t)v26;
      v28 = objc_msgSend(v9, sel_hdm_nodeID);
      v29 = objc_msgSend(v28, sel_unsignedLongLongValue);

      if (v29)
      {
        if (qword_254333BB0 != -1)
          swift_once();
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
        __swift_project_value_buffer(v30, (uint64_t)qword_254333B20);
        v38 = (uint64_t)v29;
        v39 = v27;
        v40 = 1;
      }
      else
      {
        if (qword_254333BB0 != -1)
          swift_once();
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
        __swift_project_value_buffer(v32, (uint64_t)qword_254333B20);
        v38 = v27;
        v39 = 0;
        v40 = 0;
      }
    }
    else
    {
      if (qword_254333BB0 != -1)
        swift_once();
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
      __swift_project_value_buffer(v31, (uint64_t)qword_254333B20);
      v38 = 0;
      v39 = 0;
      v40 = 3;
    }
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_23E4FB120(void *a1, const char *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  id v10;

  if (qword_254332E00 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_254333308);
  v9 = a1;
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v10 = objc_msgSend(v9, sel_hdm_nodeID);
    sub_23E537CF4();
    *v8 = v10;

    _os_log_impl(&dword_23E1DF000, v5, v6, a2, v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23E4FB2CC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E4FB300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23E23C694;
  *(_OWORD *)(v2 + 48) = v3;
  return swift_task_switch();
}

uint64_t sub_23E4FB360()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E4FB384(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  unsigned __int16 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(_BYTE *, _QWORD);
  unint64_t v22;
  _BYTE v23[32];
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  v22 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v2 = sub_23E537DB4();
  else
    v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v27 = MEMORY[0x24BEE4AF8];
    sub_23E2CB0E0(0, v2 & ~(v2 >> 63), 0);
    if (v22)
    {
      result = sub_23E537D6C();
      v5 = 1;
    }
    else
    {
      result = sub_23E2CD7AC(a1);
      v5 = v6 & 1;
    }
    v24 = result;
    v25 = v4;
    v26 = v5;
    if (v2 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          v13 = v24;
          v12 = v25;
          v14 = v26;
          sub_23E2CD368(v24, v25, v26, a1);
          v16 = v15;
          v17 = (unsigned __int16)objc_msgSend(v15, sel_unsignedShortValue);

          v18 = v27;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_23E2CB0E0(0, *(_QWORD *)(v18 + 16) + 1, 1);
            v18 = v27;
          }
          v20 = *(_QWORD *)(v18 + 16);
          v19 = *(_QWORD *)(v18 + 24);
          if (v20 >= v19 >> 1)
          {
            result = sub_23E2CB0E0(v19 > 1, v20 + 1, 1);
            v18 = v27;
          }
          *(_QWORD *)(v18 + 16) = v20 + 1;
          *(_WORD *)(v18 + 2 * v20 + 32) = v17;
          if (v22)
            break;
          v7 = sub_23E2CD280(v13, v12, v14, a1);
          v9 = v8;
          v11 = v10;
          sub_23E23D578(v13, v12, v14);
          v24 = v7;
          v25 = v9;
          v26 = v11 & 1;
          if (!--v2)
            goto LABEL_20;
        }
        if ((v14 & 1) == 0)
          goto LABEL_23;
        if (sub_23E537D84())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D41B70);
        v21 = (void (*)(_BYTE *, _QWORD))sub_23E537A30();
        sub_23E537DFC();
        v21(v23, 0);
        --v2;
      }
      while (v2);
LABEL_20:
      sub_23E23D578(v24, v25, v26);
      return v27;
    }
  }
  return result;
}

Swift::Void __swiftcall MatterDevice.prefetch()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if ((*(uint64_t (**)(_QWORD))(v0 + 24))(0))
  {
    v2 = v1;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t MatterDescriptorCluster.availableClusterKinds.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (*(uint64_t (**)(void))(a2 + 24))();
  v3 = sub_23E4FCD64(v2);
  swift_bridgeObjectRelease();
  v4 = sub_23E4FDBE0(v3, (void (*)(void))sub_23E23168C, (uint64_t)&type metadata for ClusterKind, (void (*)(char *, _QWORD))sub_23E37EDA0);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t MatterDevice.allEndpointIDs.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;

  if (!(*(uint64_t (**)(_QWORD, uint64_t))(a2 + 24))(0, a1))
    return MEMORY[0x24BEE4AF8];
  v3 = v2;
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  swift_unknownObjectRelease();
  v6 = sub_23E4FB384(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23E4FB740(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, &qword_256D46558, (uint64_t)&protocol conformance descriptor for StaticMediaProfile, (void (*)(char *, char *))sub_23E37E804);
}

uint64_t sub_23E4FB764(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, &qword_256D476C0, (uint64_t)&protocol conformance descriptor for StaticMediaSystem, (void (*)(char *, char *))sub_23E37E828);
}

uint64_t sub_23E4FB788(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, &qword_256D47278, (uint64_t)&protocol conformance descriptor for StaticService, (void (*)(char *, char *))sub_23E37EA4C);
}

void sub_23E4FB7AC(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  sub_23E1E6118((unint64_t *)&qword_256D44E20, (unint64_t *)&qword_254333358);
  v2 = 0;
  v13[1] = (id)sub_23E537A24();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_23E37EC68(v13, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_23E4FB960(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (uint64_t)&v41 - v6;
  v44 = type metadata accessor for StaticService();
  v52 = *(_QWORD *)(v44 - 8);
  v7 = MEMORY[0x24BDAC7A8](v44);
  v42 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (uint64_t)&v41 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF30);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v41 - v19;
  v21 = *a1;
  v50 = (uint64_t (*)(char *))a1[1];
  v47 = a1[2];
  v41 = (void (*)(uint64_t *__return_ptr, uint64_t))a1[3];
  v45 = a1[4];
  v56 = v21;
  sub_23E1EE1C4(&qword_256D494F0, (uint64_t (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, (uint64_t)&protocol conformance descriptor for StaticAccessoryServiceCharacteristicTriplet);
  v51 = v2;
  result = sub_23E537A24();
  v53 = 0;
  v55 = result;
  while (1)
  {
    do
    {
      v28 = v56;
      v29 = *(_QWORD *)(v56 + 16);
      v30 = v53;
      if (v53 != v29)
      {
        v33 = v53;
        while (1)
        {
          if ((v30 & 0x8000000000000000) != 0)
            goto LABEL_25;
          if (v33 >= *(_QWORD *)(v28 + 16))
            goto LABEL_26;
          v34 = v33 + 1;
          sub_23E1E2F50(v28+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v33, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v50(v10) & 1) != 0)
            break;
          result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v33 = v34;
          v30 = v53;
          if (v29 == v34)
          {
            v31 = 1;
            v53 = v29;
LABEL_17:
            v32 = (uint64_t)v43;
            goto LABEL_18;
          }
        }
        sub_23E1E2FDC((uint64_t)v10, v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v31 = 0;
        v53 = v34;
        goto LABEL_17;
      }
      v31 = 1;
      v32 = (uint64_t)v43;
LABEL_18:
      v35 = v52;
      v36 = v46;
      v37 = v44;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v46, v31, 1, v44);
      sub_23E1E4E3C(v36, v32, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v37) == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v20, 1, 1, v51);
        sub_23E3A9AAC((uint64_t)&v56);
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return v55;
      }
      v38 = v32;
      v39 = v42;
      sub_23E1E2FDC(v38, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v41(&v54, v39);
      v40 = v54;
      sub_23E1E2FA0(v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      result = swift_bridgeObjectRelease();
    }
    while (!v40);
    v23 = *(_QWORD *)(v40 + 16);
    if (v23)
      break;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v18, 1, 1, v51);
    result = sub_23E4FE010((uint64_t)v18);
  }
  v24 = 0;
  while (v24 < v23)
  {
    sub_23E1E2F50(v40+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v24, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v25 = v51;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v18, 0, 1, v51);
    sub_23E1E4E3C((uint64_t)v18, (uint64_t)v20, &qword_256D3FF30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v20, 1, v25) == 1)
    {
      sub_23E3A9AAC((uint64_t)&v56);
      goto LABEL_22;
    }
    ++v24;
    v26 = v49;
    sub_23E1E2FDC((uint64_t)v20, v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v27 = v48;
    sub_23E37F2D8(v48, v26);
    result = sub_23E1E2FA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v23 = *(_QWORD *)(v40 + 16);
    if (v24 == v23)
      goto LABEL_7;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E4FBE2C(uint64_t a1)
{
  return sub_23E4FC980(a1, type metadata accessor for StaticAccessory, &qword_256D479F8, (uint64_t)&protocol conformance descriptor for StaticAccessory, (void (*)(char *, char *))sub_23E37F560);
}

uint64_t sub_23E4FBE50(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent, &qword_256D49500, (uint64_t)&protocol conformance descriptor for StaticMediaSystemComponent, (void (*)(char *, char *))sub_23E37F584);
}

uint64_t sub_23E4FBE74(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, &qword_256D49540, (uint64_t)&protocol conformance descriptor for StaticZone, (void (*)(char *, char *))sub_23E37FADC);
}

uint64_t sub_23E4FBE98(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, &qword_256D48990, (uint64_t)&protocol conformance descriptor for StaticActionSet, (void (*)(char *, char *))sub_23E37FF78);
}

uint64_t sub_23E4FBEBC(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, &qword_256D466A0, (uint64_t)&protocol conformance descriptor for StaticCameraProfile, (void (*)(char *, char *))sub_23E38036C);
}

uint64_t sub_23E4FBEE0(uint64_t a1)
{
  return sub_23E4FC980(a1, type metadata accessor for StaticRoom, &qword_256D49538, (uint64_t)&protocol conformance descriptor for StaticRoom, (void (*)(char *, char *))sub_23E380390);
}

uint64_t sub_23E4FBF04(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, &qword_256D47318, (uint64_t)&protocol conformance descriptor for StaticServiceGroup, (void (*)(char *, char *))sub_23E3803B4);
}

uint64_t sub_23E4FBF28(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = type metadata accessor for StaticUser();
  v3 = type metadata accessor for StaticUser;
  v44 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)&v39 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v39 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v39 - v12;
  sub_23E1EE1C4(&qword_256D49530, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
  v49 = v2;
  result = sub_23E537A24();
  v50 = result;
  v14 = 0;
  v45 = a1;
  v15 = *(_QWORD *)(a1 + 64);
  v40 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v41 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v46 = (v18 - 1) & v18;
      v47 = v14;
      v22 = __clz(__rbit64(v18)) | (v14 << 6);
      goto LABEL_26;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v41)
      goto LABEL_38;
    v24 = *(_QWORD *)(v40 + 8 * v23);
    v25 = v14 + 1;
    if (!v24)
    {
      v25 = v14 + 2;
      if (v14 + 2 >= v41)
        goto LABEL_38;
      v24 = *(_QWORD *)(v40 + 8 * v25);
      if (!v24)
      {
        v25 = v14 + 3;
        if (v14 + 3 >= v41)
          goto LABEL_38;
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          v25 = v14 + 4;
          if (v14 + 4 >= v41)
            goto LABEL_38;
          v24 = *(_QWORD *)(v40 + 8 * v25);
          if (!v24)
            break;
        }
      }
    }
LABEL_25:
    v46 = (v24 - 1) & v24;
    v47 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_26:
    v27 = *(_QWORD *)(v44 + 72);
    v28 = v43;
    sub_23E1E2F50(*(_QWORD *)(v45 + 56) + v27 * v22, v43, (uint64_t (*)(_QWORD))v3);
    v29 = v3;
    sub_23E1E2FDC(v28, (uint64_t)v11, (uint64_t (*)(_QWORD))v3);
    sub_23E53845C();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    sub_23E5374D8();
    v30 = v49;
    v31 = &v11[*(int *)(v49 + 20)];
    sub_23E5375EC();
    sub_23E5374D8();
    v48 = *(int *)(v30 + 28);
    sub_23E538468();
    v32 = sub_23E5384A4();
    v33 = -1 << *(_BYTE *)(v50 + 32);
    v34 = v32 & ~v33;
    v35 = v50 + 56;
    if (((*(_QWORD *)(v50 + 56 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) != 0)
    {
      v36 = ~v33;
      v3 = v29;
      while (1)
      {
        sub_23E1E2F50(*(_QWORD *)(v50 + 48) + v34 * v27, (uint64_t)v6, (uint64_t (*)(_QWORD))v3);
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          v37 = &v6[*(int *)(v49 + 20)];
          v38 = *(_QWORD *)v37 == *(_QWORD *)v31 && *((_QWORD *)v37 + 1) == *((_QWORD *)v31 + 1);
          if ((v38 || (sub_23E538354() & 1) != 0)
            && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
            && v6[*(int *)(v49 + 28)] == v11[v48])
          {
            break;
          }
        }
        v3 = v29;
        sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))v29);
        v34 = (v34 + 1) & v36;
        if (((*(_QWORD *)(v35 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
          goto LABEL_6;
      }
      v3 = v29;
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))v29);
    }
    else
    {
      v3 = v29;
LABEL_6:
      v19 = v50;
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = v42;
      sub_23E1E2F50((uint64_t)v11, v42, (uint64_t (*)(_QWORD))v3);
      v51 = v19;
      sub_23E388D10(v21, v34, isUniquelyReferenced_nonNull_native);
      v50 = v51;
    }
    swift_bridgeObjectRelease();
    v18 = v46;
    v14 = v47;
    result = sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))v3);
  }
  v26 = v14 + 5;
  if (v14 + 5 >= v41)
  {
LABEL_38:
    swift_release();
    return v50;
  }
  v24 = *(_QWORD *)(v40 + 8 * v26);
  if (v24)
  {
    v25 = v14 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v41)
      goto LABEL_38;
    v24 = *(_QWORD *)(v40 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_25;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23E4FC3D0(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, &qword_256D49528, (uint64_t)&protocol conformance descriptor for StaticResident, (void (*)(char *, char *))sub_23E3806B8);
}

uint64_t sub_23E4FC3F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;

  v2 = sub_23E536F80();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1EE1C4(&qword_254333DA0, v3, MEMORY[0x24BDCEA88]);
  result = sub_23E537A24();
  v14 = 0;
  v15 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v16 + 63) >> 6;
  v25 = result;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v19 | (v14 << 6); ; i = __clz(__rbit64(v22)) + (v14 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
    sub_23E1FFF40((uint64_t)v9, v7);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v2);
    if (v18)
      goto LABEL_4;
LABEL_5:
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v21);
    ++v14;
    if (!v22)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v24)
        goto LABEL_24;
      v22 = *(_QWORD *)(v15 + 8 * v14);
      if (!v22)
      {
        v14 = v21 + 2;
        if (v21 + 2 >= v24)
          goto LABEL_24;
        v22 = *(_QWORD *)(v15 + 8 * v14);
        if (!v22)
        {
          v14 = v21 + 3;
          if (v21 + 3 >= v24)
            goto LABEL_24;
          v22 = *(_QWORD *)(v15 + 8 * v14);
          if (!v22)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v2);
LABEL_25:
    swift_release();
    return v25;
  }
  v22 = *(_QWORD *)(v15 + 8 * v23);
  if (v22)
  {
    v14 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v22 = *(_QWORD *)(v15 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E4FC6C0(uint64_t a1)
{
  return sub_23E4FC980(a1, (uint64_t (*)(uint64_t))type metadata accessor for ActionService, &qword_256D494E8, (uint64_t)&protocol conformance descriptor for ActionService, (void (*)(char *, char *))sub_23E3816C0);
}

void sub_23E4FC6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(id *);
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20[2];
  _QWORD v21[6];

  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  sub_23E1E6118((unint64_t *)&qword_256D44E20, (unint64_t *)&qword_254333358);
  v20[1] = (id)sub_23E537A24();
  sub_23E4FD710(a1, a2, a3, (uint64_t)v21);
  v6 = v21[0];
  v7 = v21[3];
  v9 = v21[4];
  v8 = (uint64_t (*)(id *))v21[5];
  v18 = v21[1];
  v10 = (unint64_t)(v21[2] + 64) >> 6;
  while (v6 < 0)
  {
    if (!sub_23E537DD8())
      goto LABEL_31;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v19;
    swift_unknownObjectRelease();
    v13 = v7;
    v11 = v9;
    if (!v19)
      goto LABEL_31;
LABEL_29:
    v20[0] = v14;
    if ((v8(v20) & 1) != 0)
    {
      sub_23E37EC68(v20, v14);

    }
    else
    {

    }
    v7 = v13;
    v9 = v11;
  }
  if (v9)
  {
    v11 = (v9 - 1) & v9;
    v12 = __clz(__rbit64(v9)) | (v7 << 6);
    v13 = v7;
LABEL_28:
    v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_31;
    goto LABEL_29;
  }
  v15 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v15 >= v10)
      goto LABEL_31;
    v16 = *(_QWORD *)(v18 + 8 * v15);
    v13 = v7 + 1;
    if (!v16)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v10)
        goto LABEL_31;
      v16 = *(_QWORD *)(v18 + 8 * v13);
      if (!v16)
      {
        v13 = v7 + 3;
        if (v7 + 3 >= v10)
          goto LABEL_31;
        v16 = *(_QWORD *)(v18 + 8 * v13);
        if (!v16)
        {
          v13 = v7 + 4;
          if (v7 + 4 >= v10)
            goto LABEL_31;
          v16 = *(_QWORD *)(v18 + 8 * v13);
          if (!v16)
          {
            v13 = v7 + 5;
            if (v7 + 5 >= v10)
              goto LABEL_31;
            v16 = *(_QWORD *)(v18 + 8 * v13);
            if (!v16)
            {
              v13 = v7 + 6;
              if (v7 + 6 >= v10)
                goto LABEL_31;
              v16 = *(_QWORD *)(v18 + 8 * v13);
              if (!v16)
              {
                v17 = v7 + 7;
                while (v10 != v17)
                {
                  v16 = *(_QWORD *)(v18 + 8 * v17++);
                  if (v16)
                  {
                    v13 = v17 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_23E2261B0();
                swift_release();
                return;
              }
            }
          }
        }
      }
    }
LABEL_27:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_23E4FC980(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  sub_23E1EE1C4(a3, a2, v32);
  result = sub_23E537A24();
  v20 = 0;
  v21 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v32 = (unint64_t)(v22 + 63) >> 6;
  v33 = result;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v25 | (v20 << 6);
      goto LABEL_5;
    }
    v27 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v27 >= v32)
      goto LABEL_23;
    v28 = *(_QWORD *)(v31 + 8 * v27);
    ++v20;
    if (!v28)
    {
      v20 = v27 + 1;
      if (v27 + 1 >= v32)
        goto LABEL_23;
      v28 = *(_QWORD *)(v31 + 8 * v20);
      if (!v28)
      {
        v20 = v27 + 2;
        if (v27 + 2 >= v32)
          goto LABEL_23;
        v28 = *(_QWORD *)(v31 + 8 * v20);
        if (!v28)
        {
          v20 = v27 + 3;
          if (v27 + 3 >= v32)
            goto LABEL_23;
          v28 = *(_QWORD *)(v31 + 8 * v20);
          if (!v28)
            break;
        }
      }
    }
LABEL_22:
    v24 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v10 + 72) * v26, (uint64_t)v18, a2);
    sub_23E1E2FDC((uint64_t)v18, (uint64_t)v13, a2);
    a5(v16, v13);
    result = sub_23E1E2FA0((uint64_t)v16, a2);
  }
  v29 = v27 + 4;
  if (v29 >= v32)
  {
LABEL_23:
    swift_release();
    return v33;
  }
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    v20 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    v20 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v20 >= v32)
      goto LABEL_23;
    v28 = *(_QWORD *)(v31 + 8 * v20);
    ++v29;
    if (v28)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E4FCBF0(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  sub_23E2887AC();
  result = sub_23E537A24();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_23E1EAF90(&v14, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E4FCD64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = (_QWORD *)(a1 + 56);
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v8 = __clz(__rbit64(v5));
    goto LABEL_17;
  }
  v9 = 1;
  if (v6 > 1)
  {
    v10 = v2[1];
    if (v10)
    {
LABEL_16:
      v8 = __clz(__rbit64(v10)) + (v9 << 6);
LABEL_17:
      ClusterKind.init(rawValue:)(*(_DWORD *)(*(_QWORD *)(a1 + 48) + 4 * v8));
      __asm { BR              X9 }
    }
    v11 = 2;
    if (v6 > 2)
    {
      v10 = v2[2];
      if (v10)
        goto LABEL_15;
      v11 = 3;
      if (v6 <= 3)
        goto LABEL_22;
      v10 = v2[3];
      if (v10)
        goto LABEL_15;
      v11 = 4;
      if (v6 <= 4)
        goto LABEL_22;
      v10 = v2[4];
      if (v10)
      {
LABEL_15:
        v9 = v11;
        goto LABEL_16;
      }
      v11 = 5;
      if (v6 > 5)
      {
        v10 = v2[5];
        if (v10)
          goto LABEL_15;
        while (1)
        {
          v9 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
            __break(1u);
            JUMPOUT(0x23E4FD08CLL);
          }
          if (v9 >= v6)
            break;
          v10 = v2[v9];
          ++v11;
          if (v10)
            goto LABEL_16;
        }
      }
    }
  }
LABEL_22:
  swift_release();
  return v7;
}

void sub_23E4FD100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  Swift::UInt32 v16;
  char v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, &qword_256D41DC8);
    sub_23E1E6118(&qword_256D49518, &qword_256D41DC8);
    sub_23E537A3C();
    v1 = v34;
    v33 = v35;
    v2 = v36;
    v3 = v37;
    v4 = v38;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v30 = v2;
  v32 = (unint64_t)(v2 + 64) >> 6;
  v31 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_23E537DD8())
      goto LABEL_42;
    sub_23E1E335C(0, &qword_256D41DC8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v39;
    swift_unknownObjectRelease();
    if (!v11)
      goto LABEL_42;
LABEL_32:
    v15 = objc_msgSend(v11, sel_deviceType, v30);
    v16 = objc_msgSend(v15, sel_unsignedIntValue);

    MatterDeviceType.init(rawValue:)(v16);
    v17 = (char)v39;
    if (v39 == 26)
    {
      if (qword_254332E00 != -1)
        swift_once();
      v18 = sub_23E5371A8();
      __swift_project_value_buffer(v18, (uint64_t)qword_254333308);
      v19 = v11;
      v20 = sub_23E537190();
      v21 = sub_23E537B08();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v39 = (void *)v23;
        *(_DWORD *)v22 = 136315138;
        sub_23E1E335C(0, &qword_256D41DC8);
        v24 = v19;
        v25 = sub_23E5375D4();
        *(_QWORD *)(v22 + 4) = sub_23E1FD768(v25, v26, (uint64_t *)&v39);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23E1DF000, v20, v21, "(MatterDescriptorCluster): deviceType is nil. Are we missing a definition? (%s)", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v23, -1, -1);
        MEMORY[0x24264FEBC](v22, -1, -1);

      }
      else
      {

      }
    }
    else
    {

      v27 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_23E51EE84(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
      v29 = *((_QWORD *)v27 + 2);
      v28 = *((_QWORD *)v27 + 3);
      if (v29 >= v28 >> 1)
        v27 = sub_23E51EE84((char *)(v28 > 1), v29 + 1, 1, v27);
      *((_QWORD *)v27 + 2) = v29 + 1;
      v31 = v27;
      v27[v29 + 32] = v17;
    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_31:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_42;
    goto LABEL_32;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v32)
      goto LABEL_42;
    v13 = *(_QWORD *)(v33 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v32)
        goto LABEL_42;
      v13 = *(_QWORD *)(v33 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v32)
          goto LABEL_42;
        v13 = *(_QWORD *)(v33 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v32)
            goto LABEL_42;
          v13 = *(_QWORD *)(v33 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v32)
              goto LABEL_42;
            v13 = *(_QWORD *)(v33 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v32 != v14)
              {
                v13 = *(_QWORD *)(v33 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_42:
              sub_23E2261B0();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t MatterDescriptorCluster.deviceTypes.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (*(uint64_t (**)(void))(a2 + 8))();
  sub_23E4FD100(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  v5 = sub_23E4FDBE0(v4, (void (*)(void))sub_23E4FE110, (uint64_t)&type metadata for MatterDeviceType, (void (*)(char *, _QWORD))sub_23E37EEF8);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MatterDevice.rootDescriptorCluster.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t))(a2 + 24))(0, a1);
}

uint64_t MatterDevice.supportsDiagnosticsLogs.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  BOOL v7;

  result = (*(uint64_t (**)(_QWORD, uint64_t))(a2 + 24))(0, a1);
  if (result)
  {
    v4 = v3;
    ObjectType = swift_getObjectType();
    v6 = MatterDescriptorCluster.availableClusterKinds.getter(ObjectType, v4);
    swift_unknownObjectRelease();
    v7 = sub_23E20F6AC(4, v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_23E4FD710@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if ((result & 0xC000000000000001) != 0)
  {
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    sub_23E1E6118((unint64_t *)&qword_256D44E20, (unint64_t *)&qword_254333358);
    sub_23E537A3C();
    result = v14;
    v7 = v15;
    v8 = v16;
    v9 = v17;
  }
  else
  {
    v10 = -1;
    v11 = -1 << *(_BYTE *)(result + 32);
    v12 = ~v11;
    v7 = result + 56;
    v13 = -v11;
    if (v13 < 64)
      v10 = ~(-1 << v13);
    v9 = v10 & *(_QWORD *)(result + 56);
    v8 = (unint64_t)v12;
  }
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v7;
  *(_OWORD *)(a4 + 16) = v8;
  *(_QWORD *)(a4 + 32) = v9;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_23E4FD810(unint64_t a1)
{
  return sub_23E4FDD4C(a1, &qword_254332C28, 0x24BDD7948, &qword_256D49520, (void (*)(id *, uint64_t))sub_23E3816E4);
}

uint64_t sub_23E4FD834(uint64_t a1)
{
  return sub_23E4FDBE0(a1, (void (*)(void))sub_23E4FE154, (uint64_t)&type metadata for SymptomError, (void (*)(char *, _QWORD))sub_23E380A68);
}

uint64_t sub_23E4FD850(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23E536F80();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_23E1EE1C4(&qword_254333DA0, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_23E537A24();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_23E1FFF40((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_23E4FDA20(unint64_t a1)
{
  return sub_23E4FDD4C(a1, (unint64_t *)&qword_256D3FD20, 0x24BDD16E0, &qword_256D49548, (void (*)(id *, uint64_t))sub_23E37EC84);
}

uint64_t sub_23E4FDA44(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int16 *v4;
  unsigned int v5;
  __int16 v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23E537A24();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int16 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_23E37F034(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_23E4FDAB4(unint64_t a1)
{
  return sub_23E4FDD4C(a1, &qword_256D41DC8, 0x24BDDB670, &qword_256D49518, (void (*)(id *, uint64_t))sub_23E37EEDC);
}

uint64_t sub_23E4FDAD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_23E537A24();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_23E37ECA0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_23E4FDB48(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  _BYTE v8[16];
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  sub_23E4FE198();
  result = sub_23E537A24();
  v9 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 42);
    do
    {
      v5 = *(_QWORD *)(v4 - 10);
      v6 = *((unsigned __int16 *)v4 - 1);
      v7 = *v4;
      v4 += 16;
      sub_23E37F134((uint64_t)v8, v5, v6 | (v7 << 16));
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_23E4FDBC4(uint64_t a1)
{
  return sub_23E4FDBE0(a1, (void (*)(void))sub_23E4FE050, (uint64_t)&type metadata for ServiceKind, (void (*)(char *, _QWORD))sub_23E37F2BC);
}

uint64_t sub_23E4FDBE0(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_23E537A24();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_23E4FDC54(uint64_t a1)
{
  return sub_23E4FDEEC(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, &qword_256D494F0, (uint64_t)&protocol conformance descriptor for StaticAccessoryServiceCharacteristicTriplet, (void (*)(char *, char *))sub_23E37F2D8);
}

uint64_t sub_23E4FDC78(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A28);
  sub_23E4FE094();
  result = sub_23E537A24();
  v8 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      v6 = v5;
      sub_23E381318(&v7, v5);

      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_23E4FDD04(unint64_t a1)
{
  return sub_23E4FDD4C(a1, (unint64_t *)&qword_254333DD0, 0x24BDD76B0, &qword_256D42908, (void (*)(id *, uint64_t))sub_23E3814F8);
}

uint64_t sub_23E4FDD28(unint64_t a1)
{
  return sub_23E4FDD4C(a1, (unint64_t *)&qword_254333358, 0x24BDD75B8, (unint64_t *)&qword_256D44E20, (void (*)(id *, uint64_t))sub_23E37EC68);
}

uint64_t sub_23E4FDD4C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  sub_23E1E335C(0, a2);
  sub_23E1E6118(a4, a2);
  result = sub_23E537A24();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_23E53803C();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x24264F148](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E4FDEC8(uint64_t a1)
{
  return sub_23E4FDEEC(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, &qword_256D47278, (uint64_t)&protocol conformance descriptor for StaticService, (void (*)(char *, char *))sub_23E37EA4C);
}

uint64_t sub_23E4FDEEC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v21 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_23E1EE1C4(a3, a2, a4);
  result = sub_23E537A24();
  v22 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_23E1E2F50(v19, (uint64_t)v14, a2);
      a5(v16, v14);
      sub_23E1E2FA0((uint64_t)v16, a2);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v22;
  }
  return result;
}

uint64_t sub_23E4FE010(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E4FE050()
{
  unint64_t result;

  result = qword_256D494F8;
  if (!qword_256D494F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceKind, &type metadata for ServiceKind);
    atomic_store(result, (unint64_t *)&qword_256D494F8);
  }
  return result;
}

unint64_t sub_23E4FE094()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D49508;
  if (!qword_256D49508)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D44A28);
    v2 = sub_23E1E6118(&qword_256D42908, (unint64_t *)&qword_254333DD0);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D49508);
  }
  return result;
}

unint64_t sub_23E4FE110()
{
  unint64_t result;

  result = qword_256D49510;
  if (!qword_256D49510)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterDeviceType, &type metadata for MatterDeviceType);
    atomic_store(result, (unint64_t *)&qword_256D49510);
  }
  return result;
}

unint64_t sub_23E4FE154()
{
  unint64_t result;

  result = qword_2543331C0;
  if (!qword_2543331C0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SymptomError, &type metadata for SymptomError);
    atomic_store(result, (unint64_t *)&qword_2543331C0);
  }
  return result;
}

unint64_t sub_23E4FE198()
{
  unint64_t result;

  result = qword_256D49550;
  if (!qword_256D49550)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterTilePath, &type metadata for MatterTilePath);
    atomic_store(result, (unint64_t *)&qword_256D49550);
  }
  return result;
}

uint64_t StaticBasicInfoCluster.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _OWORD *a3@<X8>)
{
  void *v5;
  __int16 v6;
  char v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, id *, uint64_t, uint64_t, uint64_t);
  id v10;
  id v11;
  __int16 v12;
  id v13;
  id v14;
  int v15;
  id v16;
  id v17;
  int v19;
  int v20;
  int v21;
  int v22;
  id v23;
  id v24;
  int v25;
  id v26;
  id v27;
  int v28;
  id v29;
  id v30;
  int v31;
  id v32;
  id v33;
  int v34;
  char v35;
  int v36;
  char v37;
  int v38;
  id v39;
  id v40;
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  int v50;
  id v51;
  void *v52;
  unsigned __int8 v53;
  int v54;
  char v55;
  id v56;
  id v57;
  char v58;
  char v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  unsigned int v71;
  id v72;
  int v73;
  id v74;
  id v75;
  __int16 v76;
  __int128 v77;
  id v78;
  __int16 v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85[2];
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[28];
  _QWORD v100[4];
  __int128 v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  __int16 v107;
  id v108;
  id v109;
  __int128 v110;
  __int16 v111;
  id v112;
  id v113;
  int v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  char v127;
  char v128;
  id v129;
  id v130;
  __int16 v131;
  char v132;
  char v133;

  v5 = *(void **)a1;
  v6 = *(_WORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 10);
  ObjectType = swift_getObjectType();
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9 = *(void (**)(__int128 *__return_ptr, id *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v101, v85, 1, ObjectType, a2);
  if (!v103)
  {
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
LABEL_34:
    sub_23E36646C(&v101);
    return sub_23E366498((uint64_t)&v101, (uint64_t)a3);
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  v10 = v85[1];
  v84 = v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 2, ObjectType, a2);
  if (!v103)
    goto LABEL_31;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_33;
  }
  v83 = v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 3, ObjectType, a2);
  if (!v103)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_32;
  v82 = v10;
  v11 = v85[1];
  v80 = v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 4, ObjectType, a2);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
    v19 = 0;
    v20 = 0;
    v21 = 0;
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        goto LABEL_41;
    }
    else if (!v20)
    {
LABEL_41:
      if (!v21)
        goto LABEL_34;
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_34;
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  v81 = v11;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_35;
  v12 = (__int16)v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 5, ObjectType, a2);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
    goto LABEL_38;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_38:
    v19 = 0;
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  v79 = v12;
  v13 = v85[1];
  v78 = v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 6, ObjectType, a2);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
    v20 = 0;
    v21 = 0;
    v19 = 1;
    goto LABEL_39;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    v20 = 0;
    v21 = 0;
    v19 = 1;
    goto LABEL_39;
  }
  v77 = *(_OWORD *)v85;
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 7, ObjectType, a2);
  if (!v103)
    goto LABEL_48;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_50;
  }
  v76 = (__int16)v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 8, ObjectType, a2);
  if (!v103)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
LABEL_50:
    v21 = 0;
    v19 = 1;
    v20 = 1;
    goto LABEL_39;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_49;
  v74 = v85[0];
  v75 = v85[1];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 9, ObjectType, a2);
  if (!v103)
    goto LABEL_51;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_53;
  }
  v73 = (int)v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 10, ObjectType, a2);
  if (!v103)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
LABEL_53:
    v19 = 1;
    v20 = 1;
    v21 = 1;
    goto LABEL_39;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_52;
  v14 = v85[1];
  v70 = v85[0];
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v72 = v14;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 11, ObjectType, a2);
  if (v103)
  {
    v15 = swift_dynamicCast();
    if (v15)
      v16 = v85[0];
    else
      v16 = 0;
    if (v15)
      v17 = v85[1];
    else
      v17 = 0;
    v68 = v17;
    v69 = v16;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v68 = 0;
    v69 = 0;
  }
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 12, ObjectType, a2);
  if (v103)
  {
    v22 = swift_dynamicCast();
    if (v22)
      v23 = v85[0];
    else
      v23 = 0;
    if (v22)
      v24 = v85[1];
    else
      v24 = 0;
    v66 = v24;
    v67 = v23;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v66 = 0;
    v67 = 0;
  }
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 13, ObjectType, a2);
  if (v103)
  {
    v25 = swift_dynamicCast();
    if (v25)
      v26 = v85[0];
    else
      v26 = 0;
    if (v25)
      v27 = v85[1];
    else
      v27 = 0;
    v64 = v27;
    v65 = v26;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v64 = 0;
    v65 = 0;
  }
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 14, ObjectType, a2);
  if (v103)
  {
    v28 = swift_dynamicCast();
    if (v28)
      v29 = v85[0];
    else
      v29 = 0;
    if (v28)
      v30 = v85[1];
    else
      v30 = 0;
    v62 = v30;
    v63 = v29;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v62 = 0;
    v63 = 0;
  }
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 15, ObjectType, a2);
  if (v103)
  {
    v31 = swift_dynamicCast();
    if (v31)
      v32 = v85[0];
    else
      v32 = 0;
    if (v31)
      v33 = v85[1];
    else
      v33 = 0;
    v60 = v33;
    v61 = v32;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v60 = 0;
    v61 = 0;
  }
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  swift_bridgeObjectRetain();
  v9(&v101, v85, 16, ObjectType, a2);
  if (v103)
  {
    v34 = swift_dynamicCast();
    v35 = (char)v85[0];
    if (!v34)
      v35 = 2;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v35 = 2;
  }
  v59 = v35;
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 17, ObjectType, a2);
  if (v103)
  {
    v36 = swift_dynamicCast();
    v37 = (char)v85[0];
    if (!v36)
      v37 = 2;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v37 = 2;
  }
  v58 = v37;
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  v9(&v101, v85, 18, ObjectType, a2);
  if (v103)
  {
    v38 = swift_dynamicCast();
    if (v38)
      v39 = v85[0];
    else
      v39 = 0;
    if (v38)
      v40 = v85[1];
    else
      v40 = 0;
    v56 = v40;
    v57 = v39;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v101);
    v56 = 0;
    v57 = 0;
  }
  *(_QWORD *)&v101 = v5;
  WORD4(v101) = v6;
  BYTE10(v101) = v7;
  swift_bridgeObjectRetain();
  v9((__int128 *)v100, (id *)&v101, 20, ObjectType, a2);
  sub_23E1EA5B8((uint64_t)v100, (uint64_t)&v101);
  if (v103)
  {
    sub_23E501FA4();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v41 = v85[0];
      v42 = objc_msgSend(v85[0], sel_finish);
      LOWORD(v101) = 256;
      sub_23E53842C();

      if (BYTE1(v101) != 1)
      {
        v50 = v101;
        v51 = objc_msgSend(v41, sel_primaryColor);
        if (v51)
        {
          v52 = v51;
          LOWORD(v101) = 256;
          sub_23E53842C();
          swift_unknownObjectRelease();

          v53 = v101;
          if (BYTE1(v101))
          {
            v53 = 0;
            v54 = 0x10000;
          }
          else
          {
            v54 = 0;
          }
        }
        else
        {
          swift_unknownObjectRelease();

          v53 = 0;
          v54 = 0x10000;
        }
        v55 = 0;
        v71 = v50 & 0xFFFF00FF | (v53 << 8) | v54;
        goto LABEL_115;
      }
      swift_unknownObjectRelease();

    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    sub_23E1E9988((uint64_t)&v101);
  }
  v71 = 0;
  v55 = 1;
LABEL_115:
  sub_23E1E9988((uint64_t)v100);
  v85[0] = v5;
  LOWORD(v85[1]) = v6;
  BYTE2(v85[1]) = v7;
  *(_QWORD *)&v86 = v84;
  *((_QWORD *)&v86 + 1) = v82;
  *(_QWORD *)&v87 = v83;
  *((_QWORD *)&v87 + 1) = v80;
  *(_QWORD *)&v88 = v81;
  WORD4(v88) = v79;
  *(_QWORD *)&v89 = v78;
  *((_QWORD *)&v89 + 1) = v13;
  v90 = v77;
  LOWORD(v91) = v76;
  *((_QWORD *)&v91 + 1) = v74;
  *(_QWORD *)&v92 = v75;
  DWORD2(v92) = v73;
  *(_QWORD *)&v93 = v70;
  *((_QWORD *)&v93 + 1) = v72;
  *(_QWORD *)&v94 = v69;
  *((_QWORD *)&v94 + 1) = v68;
  *(_QWORD *)&v95 = v67;
  *((_QWORD *)&v95 + 1) = v66;
  *(_QWORD *)&v96 = v65;
  *((_QWORD *)&v96 + 1) = v64;
  *(_QWORD *)&v97 = v63;
  *((_QWORD *)&v97 + 1) = v62;
  *(_QWORD *)&v98 = v61;
  *((_QWORD *)&v98 + 1) = v60;
  v99[0] = v59;
  v99[1] = v58;
  *(_QWORD *)&v99[8] = v57;
  *(_QWORD *)&v99[16] = v56;
  v99[26] = BYTE2(v71);
  *(_WORD *)&v99[24] = v71;
  v99[27] = v55;
  sub_23E2F8560((uint64_t)v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v98;
  a3[12] = v97;
  a3[13] = v43;
  a3[14] = *(_OWORD *)v99;
  *(_OWORD *)((char *)a3 + 236) = *(_OWORD *)&v99[12];
  v44 = v94;
  a3[8] = v93;
  a3[9] = v44;
  v45 = v96;
  a3[10] = v95;
  a3[11] = v45;
  v46 = v90;
  a3[4] = v89;
  a3[5] = v46;
  v47 = v92;
  a3[6] = v91;
  a3[7] = v47;
  v48 = v86;
  *a3 = *(_OWORD *)v85;
  a3[1] = v48;
  v49 = v88;
  a3[2] = v87;
  a3[3] = v49;
  nullsub_1(a3);
  *(_QWORD *)&v101 = v5;
  WORD4(v101) = v6;
  BYTE10(v101) = v7;
  v102 = v84;
  v103 = v82;
  v104 = v83;
  v105 = v80;
  v106 = v81;
  v107 = v79;
  v108 = v78;
  v109 = v13;
  v110 = v77;
  v111 = v76;
  v112 = v74;
  v113 = v75;
  v114 = v73;
  v115 = v70;
  v116 = v72;
  v117 = v69;
  v118 = v68;
  v119 = v67;
  v120 = v66;
  v121 = v65;
  v122 = v64;
  v123 = v63;
  v124 = v62;
  v125 = v61;
  v126 = v60;
  v127 = v59;
  v128 = v58;
  v129 = v57;
  v130 = v56;
  v132 = BYTE2(v71);
  v131 = v71;
  v133 = v55;
  return sub_23E501ECC((uint64_t)&v101);
}

uint64_t sub_23E4FF088()
{
  sub_23E1EE1C4(qword_256D49608, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationProductFinish, (uint64_t)&unk_23E539E48);
  return sub_23E5377C0();
}

uint64_t sub_23E4FF0FC()
{
  sub_23E1EE1C4(qword_256D49608, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationProductFinish, (uint64_t)&unk_23E539E48);
  return sub_23E537784();
}

uint64_t sub_23E4FF160()
{
  sub_23E1EE1C4(&qword_256D49600, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationColor, (uint64_t)&unk_23E539EE8);
  return sub_23E5377C0();
}

uint64_t sub_23E4FF1D4()
{
  sub_23E1EE1C4(&qword_256D49600, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationColor, (uint64_t)&unk_23E539EE8);
  return sub_23E537784();
}

uint64_t StaticBasicInfoCluster.ProductAppearance.finish.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t StaticBasicInfoCluster.ProductAppearance.primaryColor.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1) | (*(unsigned __int8 *)(v0 + 2) << 8);
}

uint64_t static StaticBasicInfoCluster.ProductAppearance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 != *a2)
    return 0;
  v2 = a2[2];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) == 0)
      return 0;
  }
  else
  {
    if (a1[1] != a2[1])
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t StaticBasicInfoCluster.ProductAppearance.hash(into:)()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 2);
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E4FF2F0()
{
  _BYTE *v0;

  if (*v0)
    return 0x437972616D697270;
  else
    return 0x6873696E6966;
}

uint64_t sub_23E4FF330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E502E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4FF354()
{
  sub_23E501FE0();
  return sub_23E538570();
}

uint64_t sub_23E4FF37C()
{
  sub_23E501FE0();
  return sub_23E53857C();
}

uint64_t StaticBasicInfoCluster.ProductAppearance.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  int v9;
  uint64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49560);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v12 = v1[2];
  v13 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E501FE0();
  sub_23E5384EC();
  v18 = v8;
  v17 = 0;
  type metadata accessor for MTRBasicInformationProductFinish(0);
  sub_23E1EE1C4(&qword_256D49570, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationProductFinish, (uint64_t)&protocol conformance descriptor for MTRBasicInformationProductFinish);
  sub_23E5382AC();
  if (!v2)
  {
    v15 = v13;
    v16 = v12;
    v14 = 1;
    type metadata accessor for MTRBasicInformationColor(0);
    sub_23E1EE1C4(&qword_256D49578, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationColor, (uint64_t)&protocol conformance descriptor for MTRBasicInformationColor);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticBasicInfoCluster.ProductAppearance.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 2);
  sub_23E53845C();
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t StaticBasicInfoCluster.ProductAppearance.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E501FE0();
  sub_23E5384E0();
  if (!v2)
  {
    type metadata accessor for MTRBasicInformationProductFinish(0);
    v17 = 0;
    sub_23E1EE1C4(&qword_256D49588, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationProductFinish, (uint64_t)&protocol conformance descriptor for MTRBasicInformationProductFinish);
    sub_23E538180();
    v9 = v18;
    type metadata accessor for MTRBasicInformationColor(0);
    v14 = 1;
    sub_23E1EE1C4(&qword_256D49590, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationColor, (uint64_t)&protocol conformance descriptor for MTRBasicInformationColor);
    sub_23E538108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v15;
    v11 = v16;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E4FF77C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 == *a2)
  {
    v2 = a2[2];
    if ((a1[2] & 1) != 0)
    {
      if (a2[2])
        return 1;
    }
    else
    {
      if (a1[1] != a2[1])
        v2 = 1;
      if ((v2 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_23E4FF7C0()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 2);
  sub_23E53845C();
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E4FF838()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 2);
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E4FF88C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 2);
  sub_23E53845C();
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E4FF900@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticBasicInfoCluster.ProductAppearance.init(from:)(a1, a2);
}

uint64_t sub_23E4FF914(_QWORD *a1)
{
  return StaticBasicInfoCluster.ProductAppearance.encode(to:)(a1);
}

void StaticBasicInfoCluster.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t StaticBasicInfoCluster.vendorName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.vendorID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t StaticBasicInfoCluster.productName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productID.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 56);
}

uint64_t StaticBasicInfoCluster.nodeLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.hardwareVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 96);
}

uint64_t StaticBasicInfoCluster.hardwareVersionString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.softwareVersion.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 120);
}

uint64_t StaticBasicInfoCluster.softwareVersionString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.manufacturingDate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.partNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.productLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.serialNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticBasicInfoCluster.localConfigDisabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 224);
}

uint64_t StaticBasicInfoCluster.reachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 225);
}

uint64_t StaticBasicInfoCluster.uniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRetain();
  return v1;
}

void StaticBasicInfoCluster.productAppearance.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 248);
  v3 = *(_BYTE *)(v1 + 251);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(v1 + 250);
  *(_WORD *)a1 = v2;
  *(_BYTE *)(a1 + 3) = v3;
}

uint64_t StaticBasicInfoCluster.init(id:vendorName:vendorID:productName:productID:nodeLabel:location:hardwareVersion:hardwareVersionString:softwareVersion:softwareVersionString:manufacturingDate:partNumber:productURL:productLabel:serialNumber:localConfigDisabled:reachable:uniqueID:productAppearance:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int16 a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, int a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, __int128 a20,uint64_t a21,uint64_t a22,__int16 a23,uint64_t a24,uint64_t a25,__int16 *a26)
{
  uint64_t v26;
  __int16 v27;
  uint64_t result;
  __int16 v29;
  char v30;
  char v31;

  v26 = *a1;
  v27 = *((_WORD *)a1 + 4);
  result = *((unsigned __int8 *)a1 + 10);
  v29 = *a26;
  v30 = *((_BYTE *)a26 + 2);
  v31 = *((_BYTE *)a26 + 3);
  *(_QWORD *)a9 = v26;
  *(_WORD *)(a9 + 8) = v27;
  *(_BYTE *)(a9 + 10) = result;
  *(_QWORD *)(a9 + 16) = a2;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_WORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(_QWORD *)(a9 + 88) = a11;
  *(_WORD *)(a9 + 96) = a12;
  *(_QWORD *)(a9 + 104) = a13;
  *(_QWORD *)(a9 + 112) = a14;
  *(_DWORD *)(a9 + 120) = a15;
  *(_OWORD *)(a9 + 128) = a16;
  *(_OWORD *)(a9 + 144) = a17;
  *(_OWORD *)(a9 + 160) = a18;
  *(_OWORD *)(a9 + 176) = a19;
  *(_OWORD *)(a9 + 192) = a20;
  *(_QWORD *)(a9 + 208) = a21;
  *(_QWORD *)(a9 + 216) = a22;
  *(_WORD *)(a9 + 224) = a23;
  *(_QWORD *)(a9 + 232) = a24;
  *(_QWORD *)(a9 + 240) = a25;
  *(_BYTE *)(a9 + 250) = v30;
  *(_WORD *)(a9 + 248) = v29;
  *(_BYTE *)(a9 + 251) = v31;
  return result;
}

uint64_t StaticBasicInfoCluster.hash(into:)()
{
  uint64_t v0;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(unsigned __int8 *)(v0 + 224);
  v10 = *(unsigned __int8 *)(v0 + 225);
  v11 = *(_QWORD *)(v0 + 240);
  v2 = *(unsigned __int16 *)(v0 + 248);
  v3 = *(unsigned __int8 *)(v0 + 250);
  v12 = *(_BYTE *)(v0 + 251);
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538480();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538480();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E53848C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
  }
  else
  {
    sub_23E538474();
    if (v6)
    {
LABEL_5:
      sub_23E538474();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_6;
LABEL_10:
      sub_23E538474();
      if (v8)
        goto LABEL_7;
      goto LABEL_11;
    }
  }
  sub_23E538474();
  if (!v7)
    goto LABEL_10;
LABEL_6:
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  sub_23E538474();
LABEL_12:
  if (v9 != 2)
    sub_23E538474();
  sub_23E538474();
  if (v10 != 2)
    sub_23E538474();
  sub_23E538474();
  if (v11)
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return sub_23E538474();
  }
  else
  {
    sub_23E538474();
    if ((v12 & 1) != 0)
      return sub_23E538474();
  }
  sub_23E538474();
  sub_23E538474();
  if (((v2 | (v3 << 16)) & 0x10000) == 0)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E500078(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E5000A0 + 4 * byte_23E559D70[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E5000A0()
{
  return 0x614E726F646E6576;
}

uint64_t sub_23E5000BC()
{
  return 0x4449726F646E6576;
}

uint64_t sub_23E5000D4()
{
  return 0x4E746375646F7270;
}

uint64_t sub_23E5000F4()
{
  return 0x49746375646F7270;
}

uint64_t sub_23E500110()
{
  return 0x6562614C65646F6ELL;
}

uint64_t sub_23E500134()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_23E50014C()
{
  return 0x6572617764726168;
}

unint64_t sub_23E500194()
{
  return 0xD000000000000015;
}

unint64_t sub_23E5001AC()
{
  return 0xD000000000000011;
}

uint64_t sub_23E5001B8()
{
  return 0x626D754E74726170;
}

uint64_t sub_23E5001D8()
{
  return 0x55746375646F7270;
}

uint64_t sub_23E5001F4()
{
  return 0x4C746375646F7270;
}

uint64_t sub_23E500214()
{
  return 0x754E6C6169726573;
}

void sub_23E500234()
{
  JUMPOUT(0x23E500248);
}

uint64_t sub_23E500254()
{
  return 0x6C62616863616572;
}

uint64_t sub_23E500278()
{
  return 0x4449657571696E75;
}

uint64_t sub_23E5002AC()
{
  unsigned __int8 *v0;

  return sub_23E500078(*v0);
}

uint64_t sub_23E5002B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E502F34(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E5002D8(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_23E5002E4()
{
  sub_23E502024();
  return sub_23E538570();
}

uint64_t sub_23E50030C()
{
  sub_23E502024();
  return sub_23E53857C();
}

uint64_t StaticBasicInfoCluster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  _DWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  char v56;
  int v57;
  char v58;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49598);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v9 = v1[2];
  v51 = v1[3];
  v52 = v9;
  v10 = v1[4];
  v49 = v1[5];
  v50 = v10;
  v11 = v1[6];
  v57 = *((unsigned __int16 *)v1 + 28);
  v12 = v1[8];
  v47 = v1[9];
  v48 = v11;
  v44 = v1[10];
  v45 = v1[11];
  v46 = v12;
  v43 = *((unsigned __int16 *)v1 + 48);
  v13 = v1[13];
  v41 = v1[14];
  v42 = v13;
  v40 = *((_DWORD *)v1 + 30);
  v14 = v1[17];
  v38 = v1[16];
  v39 = v14;
  v15 = v1[19];
  v36 = v1[18];
  v37 = v15;
  v34 = v1[20];
  v35 = v1[21];
  v32 = v1[22];
  v33 = v1[23];
  v30 = v1[24];
  v31 = v1[25];
  v28 = v1[26];
  v29 = v1[27];
  v27 = *((unsigned __int8 *)v1 + 224);
  v21[1] = *((unsigned __int8 *)v1 + 225);
  v22 = v1[29];
  v23 = v1[30];
  v24 = *((unsigned __int8 *)v1 + 250);
  v25 = *((unsigned __int16 *)v1 + 124);
  v26 = *((unsigned __int8 *)v1 + 251);
  v16 = a1[3];
  v17 = a1;
  v18 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_23E502024();
  sub_23E5384EC();
  v54 = v6;
  v55 = v7;
  v56 = v8;
  v58 = 0;
  sub_23E248D7C();
  v19 = v53;
  sub_23E5382AC();
  if (!v19)
  {
    LOBYTE(v54) = 1;
    sub_23E538270();
    LOBYTE(v54) = 2;
    sub_23E538294();
    v53 = v4;
    LOBYTE(v54) = 3;
    sub_23E538270();
    LOBYTE(v54) = 4;
    sub_23E5382D0();
    LOBYTE(v54) = 5;
    sub_23E538270();
    LOBYTE(v54) = 6;
    sub_23E538270();
    LOBYTE(v54) = 7;
    sub_23E5382D0();
    LOBYTE(v54) = 8;
    sub_23E538270();
    LOBYTE(v54) = 9;
    sub_23E5382DC();
    LOBYTE(v54) = 10;
    sub_23E538270();
    LOBYTE(v54) = 11;
    sub_23E5381EC();
    LOBYTE(v54) = 12;
    sub_23E5381EC();
    LOBYTE(v54) = 13;
    sub_23E5381EC();
    LOBYTE(v54) = 14;
    sub_23E5381EC();
    LOBYTE(v54) = 15;
    sub_23E5381EC();
    LOBYTE(v54) = 16;
    sub_23E5381F8();
    LOBYTE(v54) = 17;
    sub_23E5381F8();
    LOBYTE(v54) = 18;
    sub_23E5381EC();
    BYTE2(v54) = (v25 | (v24 << 16)) >> 16;
    LOWORD(v54) = v25;
    BYTE3(v54) = v26;
    v58 = 19;
    sub_23E502068();
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v18, v3);
}

uint64_t StaticBasicInfoCluster.hashValue.getter()
{
  sub_23E53845C();
  StaticBasicInfoCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticBasicInfoCluster.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  _OWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _BYTE v100[28];
  uint64_t v101;
  unsigned __int16 v102;
  unsigned __int8 v103;
  int v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int16 v111;
  int v112;
  __int16 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int16 v118;
  int v119;
  __int16 v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  int v137;
  __int16 v138;
  uint64_t v139;
  uint64_t v140;
  __int16 v141;
  char v142;
  char v143;
  char v144;
  int v145;
  char v146;
  int v147;
  __int16 v148;
  int v149;
  __int16 v150;
  int v151;
  __int16 v152;
  int v153;
  char v154;
  _QWORD *v155;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D495B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v155 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23E502024();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  v78 = a2;
  LOBYTE(v86) = 0;
  sub_23E248DC0();
  sub_23E538180();
  v10 = v101;
  v11 = v102;
  v12 = v103;
  LOBYTE(v101) = 1;
  v75 = sub_23E538144();
  v76 = v12;
  v77 = v11;
  LOBYTE(v101) = 2;
  v14 = v13;
  swift_bridgeObjectRetain();
  v74 = sub_23E538168();
  v15 = v14;
  LOBYTE(v101) = 3;
  v16 = sub_23E538144();
  v73 = v10;
  LOBYTE(v101) = 4;
  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = sub_23E5381A4();
  v85 = v18;
  v72 = v19;
  LOBYTE(v101) = 5;
  v71 = sub_23E538144();
  LOBYTE(v101) = 6;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_23E538144();
  v84 = v21;
  v70 = v22;
  LOBYTE(v101) = 7;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_23E5381A4();
  v83 = v24;
  v69 = v25;
  LOBYTE(v101) = 8;
  v26 = sub_23E538144();
  v67 = v16;
  v68 = v26;
  LOBYTE(v101) = 9;
  v82 = v27;
  swift_bridgeObjectRetain();
  LODWORD(v16) = sub_23E5381B0();
  LOBYTE(v101) = 10;
  *(_QWORD *)&v66 = sub_23E538144();
  *((_QWORD *)&v66 + 1) = v28;
  LOBYTE(v101) = 11;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v65 = sub_23E5380D8();
  *((_QWORD *)&v65 + 1) = v29;
  LOBYTE(v101) = 12;
  swift_bridgeObjectRetain();
  v64 = sub_23E5380D8();
  v81 = v30;
  LOBYTE(v101) = 13;
  swift_bridgeObjectRetain();
  v63 = sub_23E5380D8();
  v80 = v31;
  LOBYTE(v101) = 14;
  swift_bridgeObjectRetain();
  v62 = sub_23E5380D8();
  v79 = v32;
  LOBYTE(v101) = 15;
  swift_bridgeObjectRetain();
  v61 = sub_23E5380D8();
  v34 = v33;
  LOBYTE(v101) = 16;
  swift_bridgeObjectRetain();
  v60 = sub_23E5380E4();
  LOBYTE(v101) = 17;
  v59 = sub_23E5380E4();
  LOBYTE(v101) = 18;
  v57 = sub_23E5380D8();
  v58 = v35;
  v144 = 19;
  sub_23E5020AC();
  swift_bridgeObjectRetain();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v146 = HIBYTE(v145);
  v54 = BYTE2(v145);
  v55 = (unsigned __int16)v145;
  *(_QWORD *)&v86 = v73;
  WORD4(v86) = v77;
  BYTE10(v86) = v76;
  *(_QWORD *)&v87 = v75;
  *((_QWORD *)&v87 + 1) = v15;
  v56 = v15;
  *(_QWORD *)&v88 = v74;
  *((_QWORD *)&v88 + 1) = v67;
  *(_QWORD *)&v89 = v85;
  WORD4(v89) = v72;
  *(_QWORD *)&v90 = v71;
  *((_QWORD *)&v90 + 1) = v84;
  v36 = v82;
  *(_QWORD *)&v91 = v70;
  *((_QWORD *)&v91 + 1) = v83;
  LOWORD(v92) = v69;
  *((_QWORD *)&v92 + 1) = v68;
  *(_QWORD *)&v93 = v82;
  v53 = v16;
  DWORD2(v93) = v16;
  v37 = *((_QWORD *)&v66 + 1);
  v94 = v66;
  v95 = v65;
  v39 = v80;
  v38 = v81;
  *(_QWORD *)&v96 = v64;
  *((_QWORD *)&v96 + 1) = v81;
  *(_QWORD *)&v97 = v63;
  *((_QWORD *)&v97 + 1) = v80;
  v40 = v79;
  *(_QWORD *)&v98 = v62;
  *((_QWORD *)&v98 + 1) = v79;
  *(_QWORD *)&v99 = v61;
  *((_QWORD *)&v99 + 1) = v34;
  v52 = v34;
  v100[0] = v60;
  v100[1] = v59;
  v41 = v58;
  *(_QWORD *)&v100[8] = v57;
  *(_QWORD *)&v100[16] = v58;
  *(_DWORD *)&v100[24] = v145;
  sub_23E2F8560((uint64_t)&v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v99;
  v44 = v78;
  v78[12] = v98;
  v44[13] = v43;
  v44[14] = *(_OWORD *)v100;
  *(_OWORD *)((char *)v44 + 236) = *(_OWORD *)&v100[12];
  v45 = v95;
  v44[8] = v94;
  v44[9] = v45;
  v46 = v97;
  v44[10] = v96;
  v44[11] = v46;
  v47 = v91;
  v44[4] = v90;
  v44[5] = v47;
  v48 = v93;
  v44[6] = v92;
  v44[7] = v48;
  v49 = v87;
  *v44 = v86;
  v44[1] = v49;
  v50 = v89;
  v44[2] = v88;
  v44[3] = v50;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  v101 = v73;
  v102 = v77;
  v103 = v76;
  v106 = v75;
  v107 = v56;
  v108 = v74;
  v109 = v67;
  v104 = v153;
  v105 = v154;
  v110 = v85;
  v111 = v72;
  v112 = v151;
  v113 = v152;
  v114 = v71;
  v115 = v84;
  v116 = v70;
  v117 = v83;
  v118 = v69;
  v119 = v149;
  v120 = v150;
  v121 = v68;
  v122 = v36;
  v123 = v53;
  v124 = v66;
  v125 = v37;
  v126 = v65;
  v127 = v64;
  v128 = v38;
  v129 = v63;
  v130 = v39;
  v131 = v62;
  v132 = v40;
  v133 = v61;
  v134 = v42;
  v135 = v60;
  v136 = v59;
  v137 = v147;
  v138 = v148;
  v139 = v57;
  v140 = v41;
  v142 = v54;
  v141 = v55;
  v143 = v146;
  return sub_23E501ECC((uint64_t)&v101);
}

uint64_t sub_23E501738()
{
  sub_23E53845C();
  StaticBasicInfoCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E501778()
{
  sub_23E53845C();
  StaticBasicInfoCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E5017B0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return StaticBasicInfoCluster.init(from:)(a1, a2);
}

uint64_t sub_23E5017C4(_QWORD *a1)
{
  return StaticBasicInfoCluster.encode(to:)(a1);
}

uint64_t _s13HomeDataModel22StaticBasicInfoClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char v45;
  int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;

  result = 0;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8))
    return result;
  if (dword_23E55A2B4[*(char *)(a1 + 10)] != dword_23E55A2B4[*(char *)(a2 + 10)])
    return 0;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(unsigned __int16 *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v92 = *(_QWORD *)(a1 + 80);
  v91 = *(_QWORD *)(a1 + 88);
  v90 = *(unsigned __int16 *)(a1 + 96);
  v88 = *(_QWORD *)(a1 + 104);
  v87 = *(_QWORD *)(a1 + 112);
  v84 = *(_DWORD *)(a1 + 120);
  v82 = *(_QWORD *)(a1 + 128);
  v80 = *(_QWORD *)(a1 + 136);
  v74 = *(_QWORD *)(a1 + 144);
  v78 = *(_QWORD *)(a1 + 152);
  v70 = *(_QWORD *)(a1 + 160);
  v76 = *(_QWORD *)(a1 + 168);
  v66 = *(_QWORD *)(a1 + 176);
  v72 = *(_QWORD *)(a1 + 184);
  v62 = *(_QWORD *)(a1 + 192);
  v68 = *(_QWORD *)(a1 + 200);
  v59 = *(_QWORD *)(a1 + 208);
  v64 = *(_QWORD *)(a1 + 216);
  v57 = *(unsigned __int8 *)(a1 + 224);
  v56 = *(unsigned __int8 *)(a1 + 225);
  v50 = *(_QWORD *)(a1 + 232);
  v54 = *(_QWORD *)(a1 + 240);
  v48 = *(unsigned __int16 *)(a1 + 248);
  v45 = *(_BYTE *)(a1 + 250);
  v51 = *(_BYTE *)(a1 + 251);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(unsigned __int16 *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v89 = *(unsigned __int16 *)(a2 + 96);
  v86 = *(_QWORD *)(a2 + 104);
  v85 = *(_QWORD *)(a2 + 112);
  v83 = *(_DWORD *)(a2 + 120);
  v81 = *(_QWORD *)(a2 + 128);
  v79 = *(_QWORD *)(a2 + 136);
  v73 = *(_QWORD *)(a2 + 144);
  v77 = *(_QWORD *)(a2 + 152);
  v69 = *(_QWORD *)(a2 + 160);
  v75 = *(_QWORD *)(a2 + 168);
  v65 = *(_QWORD *)(a2 + 176);
  v71 = *(_QWORD *)(a2 + 184);
  v61 = *(_QWORD *)(a2 + 192);
  v67 = *(_QWORD *)(a2 + 200);
  v58 = *(_QWORD *)(a2 + 208);
  v63 = *(_QWORD *)(a2 + 216);
  v60 = *(unsigned __int8 *)(a2 + 224);
  v55 = *(unsigned __int8 *)(a2 + 225);
  v49 = *(_QWORD *)(a2 + 232);
  v53 = *(_QWORD *)(a2 + 240);
  v47 = *(unsigned __int8 *)(a2 + 250);
  v46 = *(unsigned __int16 *)(a2 + 248);
  v52 = *(unsigned __int8 *)(a2 + 251);
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
  {
    if (*(_QWORD *)(a1 + 32) != v10)
      return 0;
  }
  else
  {
    v41 = *(_QWORD *)(a2 + 48);
    v42 = *(_QWORD *)(a2 + 40);
    v43 = *(unsigned __int16 *)(a2 + 56);
    v17 = *(_QWORD *)(a1 + 32);
    v44 = *(_QWORD *)(a2 + 72);
    v18 = *(_QWORD *)(a2 + 64);
    v19 = *(_QWORD *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 48);
    v21 = *(_QWORD *)(a2 + 88);
    v22 = *(_QWORD *)(a2 + 80);
    v23 = *(_QWORD *)(a1 + 72);
    v24 = *(_QWORD *)(a1 + 64);
    v25 = sub_23E538354();
    result = 0;
    if ((v25 & 1) == 0)
      return result;
    v26 = v17 == v10;
    v7 = v24;
    v8 = v23;
    v16 = v22;
    v15 = v21;
    v5 = v20;
    v4 = v19;
    v13 = v18;
    v14 = v44;
    v12 = v43;
    v11 = v41;
    v9 = v42;
    if (!v26)
      return result;
  }
  if (v4 == v9 && v5 == v11)
  {
    if (v6 != v12)
      return 0;
  }
  else
  {
    v27 = v7;
    v28 = sub_23E538354();
    result = 0;
    if ((v28 & 1) == 0)
      return result;
    v7 = v27;
    if (v6 != v12)
      return result;
  }
  if (v7 == v13 && v8 == v14 || (v29 = sub_23E538354(), result = 0, (v29 & 1) != 0))
  {
    if (v92 == v16 && v91 == v15)
    {
      if (v90 != v89)
        return 0;
    }
    else
    {
      v30 = sub_23E538354();
      result = 0;
      if ((v30 & 1) == 0 || v90 != v89)
        return result;
    }
    if (v88 == v86 && v87 == v85)
    {
      if (v84 != v83)
        return 0;
    }
    else
    {
      v31 = sub_23E538354();
      result = 0;
      if ((v31 & 1) == 0 || v84 != v83)
        return result;
    }
    if (v82 == v81 && v80 == v79 || (v32 = sub_23E538354(), result = 0, (v32 & 1) != 0))
    {
      if (v78)
      {
        if (!v77)
          return 0;
        if (v74 != v73 || v78 != v77)
        {
          v33 = sub_23E538354();
          result = 0;
          if ((v33 & 1) == 0)
            return result;
        }
      }
      else if (v77)
      {
        return 0;
      }
      if (v76)
      {
        if (!v75)
          return 0;
        if (v70 != v69 || v76 != v75)
        {
          v34 = sub_23E538354();
          result = 0;
          if ((v34 & 1) == 0)
            return result;
        }
      }
      else if (v75)
      {
        return 0;
      }
      if (v72)
      {
        if (!v71)
          return 0;
        if (v66 != v65 || v72 != v71)
        {
          v35 = sub_23E538354();
          result = 0;
          if ((v35 & 1) == 0)
            return result;
        }
      }
      else if (v71)
      {
        return 0;
      }
      if (v68)
      {
        if (!v67)
          return 0;
        if (v62 != v61 || v68 != v67)
        {
          v36 = sub_23E538354();
          result = 0;
          if ((v36 & 1) == 0)
            return result;
        }
      }
      else if (v67)
      {
        return 0;
      }
      if (v64)
      {
        if (!v63)
          return 0;
        if (v59 != v58 || v64 != v63)
        {
          v37 = sub_23E538354();
          result = 0;
          if ((v37 & 1) == 0)
            return result;
        }
      }
      else if (v63)
      {
        return 0;
      }
      if (v57 == 2)
      {
        if (v60 != 2)
          return 0;
      }
      else
      {
        result = 0;
        if (v60 == 2 || ((((v57 & 1) == 0) ^ v60) & 1) == 0)
          return result;
      }
      if (v56 == 2)
      {
        if (v55 != 2)
          return 0;
      }
      else
      {
        result = 0;
        if (v55 == 2 || ((((v56 & 1) == 0) ^ v55) & 1) == 0)
          return result;
      }
      if (v54)
      {
        if (!v53)
          return 0;
        if (v50 == v49 && v54 == v53)
        {
          if ((v51 & 1) != 0)
            return v52;
        }
        else
        {
          v39 = sub_23E538354();
          if (v51 & 1 | ((v39 & 1) == 0))
            return v39 & v52;
        }
      }
      else
      {
        v38 = v51;
        if (v53)
        {
          v38 = 1;
          result = 0;
        }
        else
        {
          result = v52;
        }
        if ((v38 & 1) != 0)
          return result;
      }
      if ((v52 & 1) != 0)
        return 0;
      v40 = v46 | (v47 << 16);
      if (v48 != v46)
        return 0;
      if ((v45 & 1) == 0)
        return (v40 & 0x10000) == 0 && v48 >> 8 == BYTE1(v46);
      return (v40 & 0x10000) != 0;
    }
  }
  return result;
}

uint64_t sub_23E501ECC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E501FA4()
{
  unint64_t result;

  result = qword_256D49558;
  if (!qword_256D49558)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D49558);
  }
  return result;
}

unint64_t sub_23E501FE0()
{
  unint64_t result;

  result = qword_256D49568;
  if (!qword_256D49568)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A260, &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49568);
  }
  return result;
}

unint64_t sub_23E502024()
{
  unint64_t result;

  result = qword_256D495A0;
  if (!qword_256D495A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A210, &type metadata for StaticBasicInfoCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495A0);
  }
  return result;
}

unint64_t sub_23E502068()
{
  unint64_t result;

  result = qword_256D495A8;
  if (!qword_256D495A8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster.ProductAppearance, &type metadata for StaticBasicInfoCluster.ProductAppearance);
    atomic_store(result, (unint64_t *)&qword_256D495A8);
  }
  return result;
}

unint64_t sub_23E5020AC()
{
  unint64_t result;

  result = qword_256D495B8;
  if (!qword_256D495B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster.ProductAppearance, &type metadata for StaticBasicInfoCluster.ProductAppearance);
    atomic_store(result, (unint64_t *)&qword_256D495B8);
  }
  return result;
}

unint64_t sub_23E5020F4()
{
  unint64_t result;

  result = qword_256D495C0;
  if (!qword_256D495C0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster.ProductAppearance, &type metadata for StaticBasicInfoCluster.ProductAppearance);
    atomic_store(result, (unint64_t *)&qword_256D495C0);
  }
  return result;
}

unint64_t sub_23E50213C()
{
  unint64_t result;

  result = qword_256D495C8;
  if (!qword_256D495C8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster, &type metadata for StaticBasicInfoCluster);
    atomic_store(result, (unint64_t *)&qword_256D495C8);
  }
  return result;
}

uint64_t destroy for StaticBasicInfoCluster()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v6;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  v8 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v8;
  v9 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v9;
  v10 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v10;
  v11 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v11;
  v12 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v12;
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  v13 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v13;
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 225) = *(_BYTE *)(a2 + 225);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  return a1;
}

uint64_t assignWithTake for StaticBasicInfoCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  v14 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 252))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 248) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 252) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 252) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster()
{
  return &type metadata for StaticBasicInfoCluster;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance(unsigned __int16 *a1, int a2)
{
  int v2;

  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance(uint64_t result, int a2, int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 0x1FFFFFF) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (!a3)
    v3 = 0;
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else if (v3)
  {
    if (v3 == 2)
      *(_WORD *)(result + 3) = 0;
    else
      *(_BYTE *)(result + 3) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.ProductAppearance()
{
  return &type metadata for StaticBasicInfoCluster.ProductAppearance;
}

uint64_t getEnumTagSinglePayload for StaticBasicInfoCluster.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_23E5028F4 + 4 * byte_23E559D89[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_23E502928 + 4 * byte_23E559D84[v4]))();
}

uint64_t sub_23E502928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E502930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E502938);
  return result;
}

uint64_t sub_23E502944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E50294CLL);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_23E502950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E502958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.CodingKeys()
{
  return &type metadata for StaticBasicInfoCluster.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticBasicInfoCluster.ProductAppearance.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E5029C0 + 4 * byte_23E559D93[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E5029F4 + 4 * byte_23E559D8E[v4]))();
}

uint64_t sub_23E5029F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5029FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E502A04);
  return result;
}

uint64_t sub_23E502A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E502A18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E502A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E502A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticBasicInfoCluster.ProductAppearance.CodingKeys()
{
  return &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys;
}

unint64_t sub_23E502A44()
{
  unint64_t result;

  result = qword_256D495D0;
  if (!qword_256D495D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A130, &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495D0);
  }
  return result;
}

unint64_t sub_23E502A8C()
{
  unint64_t result;

  result = qword_256D495D8;
  if (!qword_256D495D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A1E8, &type metadata for StaticBasicInfoCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495D8);
  }
  return result;
}

unint64_t sub_23E502AD4()
{
  unint64_t result;

  result = qword_256D495E0;
  if (!qword_256D495E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A158, &type metadata for StaticBasicInfoCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495E0);
  }
  return result;
}

unint64_t sub_23E502B1C()
{
  unint64_t result;

  result = qword_256D495E8;
  if (!qword_256D495E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A180, &type metadata for StaticBasicInfoCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495E8);
  }
  return result;
}

unint64_t sub_23E502B64()
{
  unint64_t result;

  result = qword_256D495F0;
  if (!qword_256D495F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A0A0, &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495F0);
  }
  return result;
}

unint64_t sub_23E502BAC()
{
  unint64_t result;

  result = qword_256D495F8;
  if (!qword_256D495F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55A0C8, &type metadata for StaticBasicInfoCluster.ProductAppearance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D495F8);
  }
  return result;
}

uint64_t sub_23E502BF0(int a1)
{
  uint64_t result;
  unsigned int v3;

  result = 0;
  switch(a1)
  {
    case 1:
      result = 0x614E726F646E6576;
      break;
    case 2:
      result = 0x4449726F646E6576;
      break;
    case 3:
      result = 0x4E746375646F7270;
      break;
    case 4:
      result = 0x49746375646F7270;
      break;
    case 5:
      result = 0x6562614C65646F6ELL;
      break;
    case 6:
      result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      v3 = 1685217640;
      goto LABEL_11;
    case 8:
      result = 0xD000000000000015;
      break;
    case 9:
      v3 = 1952870259;
LABEL_11:
      result = v3 | 0x6572617700000000;
      break;
    case 10:
      result = 0xD000000000000015;
      break;
    case 11:
    case 20:
      result = 0xD000000000000011;
      break;
    case 12:
      result = 0x626D754E74726170;
      break;
    case 13:
      result = 0x55746375646F7270;
      break;
    case 14:
      result = 0x4C746375646F7270;
      break;
    case 15:
      result = 0x754E6C6169726573;
      break;
    case 16:
      result = 0xD000000000000013;
      break;
    case 17:
      result = 0x6C62616863616572;
      break;
    case 18:
      result = 0x4449657571696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23E502E34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6873696E6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEC000000726F6C6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E502F34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E726F646E6576 && a2 == 0xEA0000000000656DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449726F646E6576 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E746375646F7270 && a2 == 0xEB00000000656D61 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6562614C65646F6ELL && a2 == 0xE90000000000006CLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6572617764726168 && a2 == 0xEF6E6F6973726556 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56B5D0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEF6E6F6973726556 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56B5F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56B610 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x626D754E74726170 && a2 == 0xEA00000000007265 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x55746375646F7270 && a2 == 0xEA00000000004C52 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x4C746375646F7270 && a2 == 0xEC0000006C656261 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E56B630 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6C62616863616572 && a2 == 0xE900000000000065 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4449657571696E75 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56B650)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

uint64_t sub_23E5037A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E5037B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for LeakAlarmStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49668);
}

uint64_t sub_23E5037E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 24);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EF4740[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E5038EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E5038FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for SecuritySystemStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D496F8);
}

uint64_t sub_23E503924()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503934()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DoorLockStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49790);
}

uint64_t sub_23E503958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EF4740[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E503A50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503A60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for GarageDoorStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49828);
}

uint64_t sub_23E503A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503A94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DoorStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D498B8);
}

uint64_t sub_23E503AB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503AC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for WindowStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49948);
}

uint64_t sub_23E503AEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503AFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for SmokeAlarmStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D499D8);
}

uint64_t sub_23E503B20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E503B30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for CarbonDioxideAlarmStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49A68);
}

_QWORD *sub_23E503B54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = v8[6];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v8[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      v26 = *(_QWORD *)v24;
      v27 = *((_QWORD *)v24 + 1);
      v28 = *((_QWORD *)v24 + 2);
      sub_23E2238EC(v26, v27, v28, v25);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v27;
      *((_QWORD *)v23 + 2) = v28;
      v23[24] = v25;
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_23E503C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;

  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(v3 + 32);
  v6 = *(unsigned __int8 *)(v5 + 24);
  if (v6 != 255)
    return sub_23E2239F8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), v6);
  return result;
}

uint64_t sub_23E503D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v7[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    v25 = *(_QWORD *)v23;
    v26 = *(_QWORD *)(v23 + 8);
    v27 = *(_QWORD *)(v23 + 16);
    sub_23E2238EC(v25, v26, v27, v24);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v26;
    *(_QWORD *)(v22 + 16) = v27;
    *(_BYTE *)(v22 + 24) = v24;
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E503E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v7[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = (__int128 *)(a2 + v17);
  v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(__int128 *)((char *)v19 + 9);
      *(_OWORD *)v18 = v32;
    }
    else
    {
      v28 = *(_QWORD *)v19;
      v29 = *((_QWORD *)v19 + 1);
      v30 = *((_QWORD *)v19 + 2);
      sub_23E2238EC(v28, v29, v30, v20);
      *(_QWORD *)v18 = v28;
      *(_QWORD *)(v18 + 8) = v29;
      *(_QWORD *)(v18 + 16) = v30;
      *(_BYTE *)(v18 + 24) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_23E223A14(v18);
    v31 = *(__int128 *)((char *)v19 + 9);
    *(_OWORD *)v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
  }
  else
  {
    v21 = *(_QWORD *)v19;
    v22 = *((_QWORD *)v19 + 1);
    v23 = *((_QWORD *)v19 + 2);
    sub_23E2238EC(v21, v22, v23, v20);
    v24 = *(_QWORD *)v18;
    v25 = *(_QWORD *)(v18 + 8);
    v26 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v22;
    *(_QWORD *)(v18 + 16) = v23;
    v27 = *(_BYTE *)(v18 + 24);
    *(_BYTE *)(v18 + 24) = v20;
    sub_23E2239F8(v24, v25, v26, v27);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E504010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E5040B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v7[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
    goto LABEL_5;
  v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_23E223A14(v24);
LABEL_5:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    goto LABEL_6;
  }
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_QWORD *)v24;
  v30 = *(_QWORD *)(v24 + 8);
  v31 = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_QWORD *)(v24 + 16) = v28;
  *(_BYTE *)(v24 + 24) = v27;
  sub_23E2239F8(v29, v30, v31, v26);
LABEL_6:
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E5041D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t sub_23E504260()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for IconTextValueStringDataHolder();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t type metadata accessor for CarbonMonoxideAlarmStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49AF8);
}

uint64_t sub_23E5042FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E50436C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E50437C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ContactSensorStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49B88);
}

uint64_t sub_23E5043A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E5043B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for MotionSensorStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49C20);
}

_QWORD *sub_23E5043D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    v9 = v8[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = v8[6];
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v8[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      v26 = *(_QWORD *)v24;
      v27 = *((_QWORD *)v24 + 1);
      v28 = *((_QWORD *)v24 + 2);
      sub_23E2238EC(v26, v27, v28, v25);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v27;
      *((_QWORD *)v23 + 2) = v28;
      v23[24] = v25;
    }
    v30 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for TilesFilter();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v31, v32, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v31, v32, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v31, v32, v35);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23E504610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v7[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    v25 = *(_QWORD *)v23;
    v26 = *(_QWORD *)(v23 + 8);
    v27 = *(_QWORD *)(v23 + 16);
    sub_23E2238EC(v25, v26, v27, v24);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v26;
    *(_QWORD *)(v22 + 16) = v27;
    *(_BYTE *)(v22 + 24) = v24;
  }
  v28 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v29, v30, v34);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v29, v30, v33);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E504820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v7[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = (__int128 *)(a2 + v17);
  v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(__int128 *)((char *)v19 + 9);
      *(_OWORD *)v18 = v32;
    }
    else
    {
      v28 = *(_QWORD *)v19;
      v29 = *((_QWORD *)v19 + 1);
      v30 = *((_QWORD *)v19 + 2);
      sub_23E2238EC(v28, v29, v30, v20);
      *(_QWORD *)v18 = v28;
      *(_QWORD *)(v18 + 8) = v29;
      *(_QWORD *)(v18 + 16) = v30;
      *(_BYTE *)(v18 + 24) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_23E223A14(v18);
    v31 = *(__int128 *)((char *)v19 + 9);
    *(_OWORD *)v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
  }
  else
  {
    v21 = *(_QWORD *)v19;
    v22 = *((_QWORD *)v19 + 1);
    v23 = *((_QWORD *)v19 + 2);
    sub_23E2238EC(v21, v22, v23, v20);
    v24 = *(_QWORD *)v18;
    v25 = *(_QWORD *)(v18 + 8);
    v26 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v22;
    *(_QWORD *)(v18 + 16) = v23;
    v27 = *(_BYTE *)(v18 + 24);
    *(_BYTE *)(v18 + 24) = v20;
    sub_23E2239F8(v24, v25, v26, v27);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    v33 = *(int *)(a3 + 24);
    v34 = (void *)(a1 + v33);
    v35 = (const void *)(a2 + v33);
    sub_23E1E2FA0(a1 + v33, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    v36 = type metadata accessor for TilesFilter();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v39 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v34, v35, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v34, v35, v40);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v34, v35, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23E504AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  v11 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E504C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v7[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 != 255)
  {
    v27 = *(unsigned __int8 *)(v25 + 24);
    if (v27 != 255)
    {
      v28 = *(_QWORD *)(v25 + 16);
      v29 = *(_QWORD *)v24;
      v30 = *(_QWORD *)(v24 + 8);
      v31 = *(_QWORD *)(v24 + 16);
      *(_OWORD *)v24 = *(_OWORD *)v25;
      *(_QWORD *)(v24 + 16) = v28;
      *(_BYTE *)(v24 + 24) = v27;
      sub_23E2239F8(v29, v30, v31, v26);
      goto LABEL_6;
    }
    sub_23E223A14(v24);
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
LABEL_6:
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    v32 = *(int *)(a3 + 24);
    v33 = (void *)(a1 + v32);
    v34 = (const void *)(a2 + v32);
    sub_23E1E2FA0(a1 + v32, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    v35 = type metadata accessor for TilesFilter();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v38 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v33, v34, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v33, v34, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v33, v34, v37);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23E504EB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 252)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 4)
      return v9 - 3;
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for TilesFilter();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_23E504F68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for IconTextValueStringDataHolder();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 252)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
      return result;
    }
    v10 = type metadata accessor for TilesFilter();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for OccupancySensorStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D49CB8);
}

uint64_t sub_23E50502C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E5050B8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD *__return_ptr, _QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(_QWORD);
  uint64_t v80;
  void (*v81)(_QWORD *__return_ptr, _QWORD);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD *__return_ptr, _QWORD);
  int64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  unint64_t v99;
  void (*v100)(_QWORD *__return_ptr, _QWORD);
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t (*v104)(uint64_t);
  uint64_t v105;
  void (*v106)(_QWORD *__return_ptr, _QWORD);
  uint64_t v107;
  uint64_t (*v108)(_QWORD);
  uint64_t v109;
  void (*v110)(_QWORD *__return_ptr, _QWORD);
  uint64_t v111;
  uint64_t v112;
  char v113;
  _QWORD *v114;
  uint64_t v115;

  v82 = type metadata accessor for StaticAccessory(0);
  v83 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v75 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v94 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v66 - v8;
  v87 = type metadata accessor for StaticService();
  v9 = *(_QWORD *)(v87 - 8);
  v10 = MEMORY[0x24BDAC7A8](v87);
  v73 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v66 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v77 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v92 = (uint64_t)&v66 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v66 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v76 = (uint64_t)&v66 - v22;
  v114 = a1;
  v23 = *a2;
  v85 = (void (*)(_QWORD *__return_ptr, _QWORD))a2[1];
  v24 = a2[2];
  v91 = (uint64_t (*)(uint64_t))a2[3];
  v25 = a2[4];
  v81 = (void (*)(_QWORD *__return_ptr, _QWORD))a2[5];
  v26 = a2[6];
  v79 = (uint64_t (*)(_QWORD))a2[7];
  v115 = v23;
  v27 = *(_QWORD *)(v23 + 56);
  v68 = v23 + 56;
  v72 = v23;
  v28 = -1 << *(_BYTE *)(v23 + 32);
  v67 = ~v28;
  if (-v28 < 64)
    v29 = ~(-1 << -(char)v28);
  else
    v29 = -1;
  v88 = v29 & v27;
  v30 = a2[8];
  v71 = (void (*)(_QWORD *__return_ptr, _QWORD))a2[9];
  v31 = a2[10];
  sub_23E226188((uint64_t)&v115);
  v69 = (unint64_t)(63 - v28) >> 6;
  v66 = v69 - 1;
  v84 = v24;
  swift_retain();
  v90 = v25;
  swift_retain();
  v80 = v26;
  swift_retain();
  v78 = v30;
  swift_retain();
  v70 = v31;
  result = swift_retain();
  v33 = 0;
  v34 = 0;
  v86 = 0;
  v89 = v13;
  while (1)
  {
    v35 = (uint64_t)v94;
    v36 = (uint64_t)v93;
    v37 = v87;
    if (v33)
    {
      while (1)
      {
        v38 = *(_QWORD *)(v33 + 16);
        if (v34 == v38)
        {
          v44 = v92;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v92, 1, 1, v37);
          result = sub_23E1E7C64(v44, &qword_254332DE8);
          goto LABEL_13;
        }
        if ((v34 & 0x8000000000000000) != 0)
          break;
        if (v34 >= v38)
          goto LABEL_58;
        v39 = v92;
        sub_23E1E2F50(v33+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v34, v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v40(v39, 0, 1, v37);
        sub_23E1E4E3C(v39, (uint64_t)v21, &qword_254332DE8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v21, 1, v37) == 1)
        {
          ++v34;
          goto LABEL_17;
        }
        v41 = v21;
        v42 = (uint64_t)v21;
        v43 = (uint64_t)v89;
        sub_23E1E2FDC(v42, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((v91(v43) & 1) != 0)
        {
          v50 = v76;
          sub_23E1E2FDC(v43, v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v40(v50, 0, 1, v37);
          ++v34;
          v21 = v41;
          goto LABEL_19;
        }
        result = sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        ++v34;
        v35 = (uint64_t)v94;
        v36 = (uint64_t)v93;
        v21 = v41;
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
LABEL_13:
    v45 = v83;
    if (!v88)
      break;
    v46 = (v88 - 1) & v88;
    v47 = v86;
    v48 = __clz(__rbit64(v88)) | (v86 << 6);
LABEL_15:
    v86 = v47;
    v88 = v46;
    sub_23E1E2F50(*(_QWORD *)(v72 + 48) + *(_QWORD *)(v83 + 72) * v48, v36, type metadata accessor for StaticAccessory);
    v49 = 0;
LABEL_37:
    v61 = v36;
    v62 = v36;
    v63 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v61, v49, 1, v82);
    sub_23E1E4E3C(v62, v35, &qword_254333468);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v35, 1, v63) == 1)
    {
      v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v37 = v87;
      v40((uint64_t)v21, 1, 1, v87);
LABEL_17:
      sub_23E1E7C64((uint64_t)v21, &qword_254332DE8);
      v50 = v76;
      v40(v76, 1, 1, v37);
LABEL_19:
      v51 = v77;
      sub_23E1E4E3C(v50, v77, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v51, 1, v37) == 1)
      {
        v95 = v72;
        v96 = v68;
        v97 = v67;
        v98 = v86;
        v99 = v88;
        v100 = v85;
        v101 = v84;
        v102 = v33;
        v103 = v34;
        v104 = v91;
        v105 = v90;
        v106 = v81;
        v107 = v80;
        v108 = v79;
        v109 = v78;
        v110 = v71;
        v111 = v70;
        sub_23E509FDC((uint64_t)&v95);
        return (uint64_t)v114;
      }
      v52 = v51;
      v53 = v73;
      sub_23E1E2FDC(v52, v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v81(&v95, v53);
      v54 = v95;
      v55 = v96;
      sub_23E1E2FA0(v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v112 = v54;
      v113 = v55;
      result = v79(&v112);
      if ((result & 1) != 0)
      {
        v95 = v54;
        LOBYTE(v96) = v55;
        v71(&v112, &v95);
        v56 = v74;
        result = sub_23E508CE8(&v114, &v112);
        if (v56)
        {
          swift_bridgeObjectRelease();
          v95 = v72;
          v96 = v68;
          v97 = v67;
          v98 = v86;
          v99 = v88;
          v100 = v85;
          v101 = v84;
          v102 = v33;
          v103 = v34;
          v104 = v91;
          v105 = v90;
          v106 = v81;
          v107 = v80;
          v108 = v79;
          v109 = v78;
          v110 = v71;
          v111 = v70;
          return sub_23E509FDC((uint64_t)&v95);
        }
        v74 = 0;
      }
    }
    else
    {
      v64 = v75;
      sub_23E1E2FDC(v35, v75, type metadata accessor for StaticAccessory);
      v85(&v95, v64);
      v65 = v95;
      sub_23E1E2FA0(v64, type metadata accessor for StaticAccessory);
      result = swift_bridgeObjectRelease();
      v34 = 0;
      v33 = v65;
    }
  }
  v57 = v86 + 1;
  if (__OFADD__(v86, 1))
    goto LABEL_59;
  if (v57 >= v69)
    goto LABEL_36;
  v58 = *(_QWORD *)(v68 + 8 * v57);
  if (v58)
  {
LABEL_26:
    v46 = (v58 - 1) & v58;
    v48 = __clz(__rbit64(v58)) + (v57 << 6);
    v47 = v57;
    goto LABEL_15;
  }
  v59 = v86 + 2;
  if (v86 + 2 >= v69)
  {
    v88 = 0;
    v49 = 1;
LABEL_31:
    v86 = v57;
    goto LABEL_37;
  }
  v58 = *(_QWORD *)(v68 + 8 * v59);
  if (v58)
  {
LABEL_29:
    v57 = v59;
    goto LABEL_26;
  }
  v60 = v86 + 3;
  if (v86 + 3 >= v69)
  {
    v86 += 2;
LABEL_36:
    v88 = 0;
    v49 = 1;
    goto LABEL_37;
  }
  v58 = *(_QWORD *)(v68 + 8 * v60);
  if (v58)
    goto LABEL_34;
  if (v86 + 4 >= v69)
  {
    v88 = 0;
    v49 = 1;
    v86 += 3;
    goto LABEL_37;
  }
  v58 = *(_QWORD *)(v68 + 8 * (v86 + 4));
  if (v58)
  {
    v57 = v86 + 4;
    goto LABEL_26;
  }
  v59 = v86 + 5;
  if (v86 + 5 >= v69)
  {
    v86 += 4;
    goto LABEL_36;
  }
  v58 = *(_QWORD *)(v68 + 8 * v59);
  if (v58)
    goto LABEL_29;
  v60 = v86 + 6;
  if (v86 + 6 >= v69)
  {
    v88 = 0;
    v49 = 1;
    v86 += 5;
    goto LABEL_37;
  }
  v58 = *(_QWORD *)(v68 + 8 * v60);
  if (v58)
  {
LABEL_34:
    v57 = v60;
    goto LABEL_26;
  }
  while (1)
  {
    v57 = v60 + 1;
    if (__OFADD__(v60, 1))
      break;
    if (v57 >= v69)
    {
      v88 = 0;
      v49 = 1;
      v57 = v66;
      goto LABEL_31;
    }
    v58 = *(_QWORD *)(v68 + 8 * v57);
    ++v60;
    if (v58)
      goto LABEL_26;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_23E505B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65[12];

  v60 = sub_23E536F80();
  v4 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v59);
  v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v53 - v11;
  v13 = type metadata accessor for SecuritySystemStatusItem(0);
  v61 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 24)];
  v63 = 35;
  v64 = type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  v65[0] = a1;
  v65[1] = (uint64_t)sub_23E508B5C;
  v65[2] = 0;
  v65[3] = (uint64_t)sub_23E508BD0;
  v65[4] = 0;
  v65[5] = (uint64_t)sub_23E508C80;
  v65[6] = 0;
  v65[7] = (uint64_t)sub_23E509C74;
  v65[8] = 0;
  v65[9] = (uint64_t)sub_23E509C84;
  v65[10] = 0;
  v18 = (_QWORD *)sub_23E222E14(MEMORY[0x24BEE4AF8]);
  v19 = sub_23E5050B8(v18, v65);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  v62 = a2;
  if (v20)
  {
    v21 = sub_23E211708(4);
    if ((v22 & 1) != 0)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
      if (!*(_QWORD *)(v19 + 16))
        goto LABEL_9;
    }
    else
    {
      v23 = 0;
      if (!*(_QWORD *)(v19 + 16))
        goto LABEL_9;
    }
    v24 = sub_23E211708(3);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v24);
      goto LABEL_10;
    }
  }
  else
  {
    v23 = 0;
  }
LABEL_9:
  v26 = 0;
LABEL_10:
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v23, v26))
  {
    __break(1u);
  }
  else if (v23 + v26 < 1)
  {
    sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v62, 1, 1, v13);
  }
  else
  {
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v28 = swift_allocObject();
    v29 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v28 + 16) = xmmword_23E539650;
    v30 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v28 + 56) = v29;
    *(_QWORD *)(v28 + 64) = v30;
    if (v23 < 1)
    {
      *(_QWORD *)(v28 + 32) = v26;
      v54 = sub_23E537574();
      v56 = v33;
      v32 = 1;
    }
    else
    {
      *(_QWORD *)(v28 + 32) = v23;
      v54 = sub_23E537574();
      v56 = v31;
      v32 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = *(int *)(v13 + 20);
    v55 = v16;
    v16[v34] = v32;
    v35 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v60);
    static String.hfLocalized(_:)();
    v37 = v36;
    v39 = v38;
    sub_23E1FC2F8((uint64_t)v12, (uint64_t)v10);
    v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v35);
    v41 = v62;
    v42 = v10;
    if (v40 == 1)
    {
      v43 = v58;
      sub_23E536F74();
      sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
      v44 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
      v44 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v43 = v58;
      v44(v58, v42, v35);
    }
    v45 = (uint64_t)v57;
    v44(v57, v43, v35);
    v46 = (int *)v59;
    v47 = (_QWORD *)(v45 + *(int *)(v59 + 20));
    *v47 = 0;
    v47[1] = 0xE000000000000000;
    v48 = (_QWORD *)(v45 + v46[6]);
    *v48 = v37;
    v48[1] = v39;
    v49 = (uint64_t *)(v45 + v46[7]);
    v50 = v56;
    *v49 = v54;
    v49[1] = v50;
    v51 = v45 + v46[8];
    *(_QWORD *)v51 = 0;
    *(_QWORD *)(v51 + 8) = 0;
    *(_QWORD *)(v51 + 16) = 0;
    *(_BYTE *)(v51 + 24) = -1;
    v52 = (uint64_t)v55;
    sub_23E1E2FDC(v45, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2F50(v52, v41, type metadata accessor for SecuritySystemStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v41, 0, 1, v13);
    return sub_23E1E2FA0(v52, type metadata accessor for SecuritySystemStatusItem);
  }
  return result;
}

uint64_t sub_23E506098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  Swift::Int value;
  Swift::Int v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  int *v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int16 v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  Swift::Int_optional v112;
  Swift::Int_optional v113;

  v96 = a2;
  v3 = sub_23E536F80();
  v94 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v93);
  v92 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v97 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v90 - v10;
  v11 = type metadata accessor for StaticService();
  v105 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v106 = (uint64_t)&v90 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v90 - v17;
  v19 = type metadata accessor for DoorLockStatusItem(0);
  v95 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(int *)(v20 + 24);
  v101 = v22;
  v24 = (uint64_t)&v22[v23];
  v108 = 2846;
  v107 = v11;
  v111 = v11;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  v90 = v24;
  swift_storeEnumTagMultiPayload();
  v25 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2605F4);
  result = swift_bridgeObjectRelease();
  v27 = MEMORY[0x24BEE4AF8];
  v110 = MEMORY[0x24BEE4AF8];
  v104 = *(_QWORD *)(v25 + 16);
  v99 = v5;
  v100 = v3;
  v98 = v19;
  if (v104)
  {
    v28 = 0;
    v103 = "00-8000-0026BB765291";
    v102 = 0x800000023E55FCC0;
    while (1)
    {
      if (v28 >= *(_QWORD *)(v25 + 16))
      {
        __break(1u);
        goto LABEL_49;
      }
      v29 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
      v30 = *(_QWORD *)(v105 + 72);
      v31 = sub_23E1E2F50(v25 + v29 + v30 * v28, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v109 = v18[*(int *)(v107 + 84)];
      if (ServiceKind.rawValue.getter(v31) == 0xD000000000000024 && v32 == v102)
        break;
      v33 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        goto LABEL_10;
      result = sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      if (v104 == ++v28)
      {
        v27 = v110;
        v5 = v99;
        v3 = v100;
        v19 = v98;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v18, v106, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v34 = v110;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v34 + 16) + 1, 1);
      v34 = v110;
    }
    v36 = *(_QWORD *)(v34 + 16);
    v35 = *(_QWORD *)(v34 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_23E2CB160(v35 > 1, v36 + 1, 1);
      v34 = v110;
    }
    *(_QWORD *)(v34 + 16) = v36 + 1;
    result = sub_23E1E2FDC(v106, v34 + v29 + v36 * v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(v27 + 16);
  if (v37)
  {
    v38 = *(unsigned __int8 *)(v105 + 80);
    v106 = v27;
    v39 = v27 + ((v38 + 32) & ~v38);
    v40 = *(_QWORD *)(v105 + 72);
    v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_23E1E2F50(v39, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v43 = *(_QWORD *)&v14[*(int *)(v107 + 104)];
      v110 = v43;
      v109 = 38;
      v112 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v109);
      if (!v112.is_nil)
      {
        value = v112.value;
        v110 = v43;
        v109 = -100;
        v113 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v109);
        if (!v113.is_nil)
        {
          v45 = v113.value;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v41 = sub_23E51FCE0(0, v41[2] + 1, 1, v41);
          v47 = v41[2];
          v46 = v41[3];
          if (v47 >= v46 >> 1)
            v41 = sub_23E51FCE0((_QWORD *)(v46 > 1), v47 + 1, 1, v41);
          v41[2] = v47 + 1;
          v42 = &v41[2 * v47];
          v42[4] = value;
          v42[5] = v45;
        }
      }
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v39 += v40;
      --v37;
    }
    while (v37);
    swift_release();
    v5 = v99;
    v3 = v100;
    v19 = v98;
  }
  else
  {
    swift_release();
    v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v48 = sub_23E52F408((uint64_t)v41);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  result = swift_bridgeObjectRelease();
  v55 = v48 + v52;
  v56 = (uint64_t)v97;
  if (__OFADD__(v48, v52))
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v57 = __OFADD__(v55, v50);
  v58 = v55 + v50;
  if (v57)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v59 = v58 + v54;
  if (__OFADD__(v58, v54))
  {
LABEL_51:
    __break(1u);
    return result;
  }
  if (v59 <= 0)
  {
    sub_23E1E2FA0(v90, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v95 + 56))(v96, 1, 1, v19);
  }
  if (v48 < 1)
  {
    if (v52 < 1 || v52 != v59)
    {
      v68 = v94;
      if (v50 >= 1 && v50 == v59)
      {
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v83 = swift_allocObject();
        v84 = MEMORY[0x24BEE1768];
        *(_OWORD *)(v83 + 16) = xmmword_23E539650;
        v85 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v83 + 56) = v84;
        *(_QWORD *)(v83 + 64) = v85;
        *(_QWORD *)(v83 + 32) = v50;
      }
      else
      {
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v86 = swift_allocObject();
        v87 = MEMORY[0x24BEE1768];
        *(_OWORD *)(v86 + 16) = xmmword_23E539650;
        v88 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v86 + 56) = v87;
        *(_QWORD *)(v86 + 64) = v88;
        *(_QWORD *)(v86 + 32) = v59;
      }
      v107 = sub_23E537574();
      v67 = v89;
      goto LABEL_39;
    }
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v63 = swift_allocObject();
    v64 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v63 + 16) = xmmword_23E539650;
    v65 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v63 + 56) = v64;
    *(_QWORD *)(v63 + 64) = v65;
    *(_QWORD *)(v63 + 32) = v52;
  }
  else
  {
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v60 = swift_allocObject();
    v61 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v60 + 16) = xmmword_23E539650;
    v62 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v60 + 56) = v61;
    *(_QWORD *)(v60 + 64) = v62;
    *(_QWORD *)(v60 + 32) = v48;
  }
  v107 = sub_23E537574();
  v67 = v66;
  v68 = v94;
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v101[*(int *)(v19 + 20)] = 1;
  v69 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v91, 1, 1, v3);
  static String.hfLocalized(_:)();
  v71 = v70;
  v73 = v72;
  sub_23E1FC2F8(v69, v56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v56, 1, v3) == 1)
  {
    sub_23E536F74();
    sub_23E1E7C64(v69, &qword_254333F50);
    sub_23E1E7C64(v56, &qword_254333F50);
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
  }
  else
  {
    sub_23E1E7C64(v69, &qword_254333F50);
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
    v74(v5, v56, v3);
  }
  v75 = (uint64_t)v92;
  v74(v92, (uint64_t)v5, v3);
  v76 = (int *)v93;
  v77 = (_QWORD *)(v75 + *(int *)(v93 + 20));
  *v77 = 0;
  v77[1] = 0xE000000000000000;
  v78 = (_QWORD *)(v75 + v76[6]);
  *v78 = v71;
  v78[1] = v73;
  v79 = (uint64_t *)(v75 + v76[7]);
  *v79 = v107;
  v79[1] = v67;
  v80 = v75 + v76[8];
  *(_QWORD *)v80 = 0;
  *(_QWORD *)(v80 + 8) = 0;
  *(_QWORD *)(v80 + 16) = 0;
  *(_BYTE *)(v80 + 24) = -1;
  v81 = (uint64_t)v101;
  sub_23E1E2FDC(v75, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  v82 = v96;
  sub_23E1E2F50(v81, v96, type metadata accessor for DoorLockStatusItem);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v82, 0, 1, v19);
  return sub_23E1E2FA0(v81, type metadata accessor for DoorLockStatusItem);
}

uint64_t sub_23E506A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  Swift::Int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD *@<X8>);
  uint64_t v68;
  _QWORD *v69;
  uint64_t (*v70)();
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  Swift::Int value;
  unint64_t v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)();
  uint64_t v82;
  void (*v83)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  char v89;
  unint64_t v90;
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(_QWORD *@<X8>);
  uint64_t v108;
  uint64_t v109;
  _BOOL8 v110;
  char v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  void (*v144)(char *, uint64_t, uint64_t);
  uint64_t v145;
  int *v146;
  _QWORD *v147;
  _QWORD *v148;
  int **v149;
  int *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char *v174;
  char *v175;
  Swift::Int v176;
  void (*v177)(_QWORD *@<X8>);
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  __int16 v183;
  char v184;
  _QWORD *v185;
  uint64_t v186;
  Swift::Int_optional v187;
  Swift::Int_optional v188;
  Swift::Int_optional v189;

  v165 = a2;
  v166 = sub_23E536F80();
  v159 = *(_QWORD *)(v166 - 8);
  MEMORY[0x24BDAC7A8](v166);
  v160 = (char *)&v155 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v162);
  v161 = (char *)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v158 = (uint64_t)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v178 = (char *)&v155 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v170 = (uint64_t)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v171 = (uint64_t)&v155 - v12;
  v13 = type metadata accessor for StaticService();
  v181 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v180 = (uint64_t)&v155 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v172 = (uint64_t)&v155 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v177 = (void (*)(_QWORD *@<X8>))((char *)&v155 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v155 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v155 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v155 - v29;
  v31 = type metadata accessor for GarageDoorStatusItem(0);
  v163 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v155 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = v32;
  v35 = *(int *)(v32 + 20);
  v157 = v34;
  v36 = (uint64_t)&v34[v35];
  v183 = 2835;
  v182 = (int *)v13;
  v186 = v13;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  v156 = v36;
  swift_storeEnumTagMultiPayload();
  v168 = a1;
  v37 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2605F4);
  v167 = 0;
  v38 = MEMORY[0x24BEE4AF8];
  v185 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v39 = *(_QWORD *)(v37 + 16);
  v179 = v16;
  v176 = v39;
  if (v39)
  {
    v40 = 0;
    v174 = v28;
    v175 = "00-8000-0026BB765291";
    v173 = 0x800000023E55FAB0;
    while (1)
    {
      if (v40 >= *(_QWORD *)(v37 + 16))
      {
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        sub_23E5383C0();
        __break(1u);
        JUMPOUT(0x23E507B0CLL);
      }
      v41 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
      v42 = *(_QWORD *)(v181 + 72);
      v43 = sub_23E1E2F50(v37 + v41 + v42 * v40, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v184 = v30[v182[21]];
      if (ServiceKind.rawValue.getter(v43) == 0xD000000000000024 && v44 == v173)
        break;
      v45 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      if (v176 == ++v40)
      {
        v50 = v185;
        v16 = v179;
        v38 = MEMORY[0x24BEE4AF8];
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v46 = v185;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, v46[2] + 1, 1);
      v46 = v185;
    }
    v48 = v46[2];
    v47 = v46[3];
    if (v48 >= v47 >> 1)
    {
      sub_23E2CB160(v47 > 1, v48 + 1, 1);
      v46 = v185;
    }
    v46[2] = v48 + 1;
    v49 = (uint64_t)v46 + v41 + v48 * v42;
    v28 = v174;
    sub_23E1E2FDC((uint64_t)v174, v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
  v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_17:
  swift_bridgeObjectRelease();
  v51 = sub_23E33781C(v168, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v185 = (_QWORD *)v38;
  v176 = *(_QWORD *)(v51 + 16);
  v169 = v50;
  if (!v176)
    goto LABEL_38;
  v52 = 0;
  v174 = "00-8000-0026BB765291";
  v175 = (char *)0x800000023E55F930;
  v173 = 0x800000023E55FAB0;
  do
  {
    if (v52 >= *(_QWORD *)(v51 + 16))
      goto LABEL_120;
    v53 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
    v54 = *(_QWORD *)(v181 + 72);
    v55 = sub_23E1E2F50(v51 + v53 + v54 * v52, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v184 = v25[v182[21]];
    if (ServiceKind.rawValue.getter(v55) == 0xD000000000000024 && v56 == v175)
    {
      swift_bridgeObjectRelease();
      v57 = (uint64_t)v177;
      v58 = sub_23E1E2F50((uint64_t)v25, (uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      v59 = sub_23E538354();
      swift_bridgeObjectRelease();
      v57 = (uint64_t)v177;
      v58 = sub_23E1E2F50((uint64_t)v25, (uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v59 & 1) == 0)
        goto LABEL_19;
    }
    if (*(_BYTE *)(v57 + v182[23]) == 53)
    {
LABEL_19:
      sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_20:
      sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      goto LABEL_21;
    }
    v184 = *(_BYTE *)(v57 + v182[23]);
    if (ServiceKind.rawValue.getter(v58) == 0xD000000000000024 && v60 == v173)
    {
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      v61 = sub_23E538354();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v177, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v61 & 1) == 0)
        goto LABEL_20;
    }
    sub_23E1E2FDC((uint64_t)v25, v172, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v62 = v185;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, v62[2] + 1, 1);
      v62 = v185;
    }
    v64 = v62[2];
    v63 = v62[3];
    if (v64 >= v63 >> 1)
    {
      sub_23E2CB160(v63 > 1, v64 + 1, 1);
      v62 = v185;
    }
    v62[2] = v64 + 1;
    sub_23E1E2FDC(v172, (uint64_t)v62 + v53 + v64 * v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_21:
    ++v52;
  }
  while (v176 != v52);
  v38 = (unint64_t)v185;
  v16 = v179;
  v50 = v169;
LABEL_38:
  swift_bridgeObjectRelease();
  v65 = v50[2];
  v66 = (uint64_t)v178;
  v173 = v38;
  if (!v65)
  {
    swift_release();
    v177 = 0;
    v174 = 0;
    v69 = (_QWORD *)MEMORY[0x24BEE4B00];
    v105 = *(_QWORD *)(v38 + 16);
    if (v105)
      goto LABEL_90;
    goto LABEL_110;
  }
  v67 = 0;
  v174 = 0;
  v68 = (uint64_t)v50 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
  v69 = (_QWORD *)MEMORY[0x24BEE4B00];
  v70 = type metadata accessor for StaticService;
  v71 = *(char **)(v181 + 72);
  v72 = v171;
  v175 = v71;
  while (2)
  {
    v73 = v180;
    sub_23E1E2F50(v68, v180, (uint64_t (*)(_QWORD))v70);
    v74 = *(_QWORD **)(v73 + v182[26]);
    v185 = v74;
    v184 = 31;
    v187 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v184);
    if (v187.is_nil
      || (value = v187.value,
          v185 = v74,
          v184 = -107,
          v188 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v184),
          v188.is_nil))
    {
      v66 = (uint64_t)v178;
      v16 = v179;
      goto LABEL_87;
    }
    v176 = v188.value;
    v177 = v67;
    if (v74[2] && (v76 = sub_23E1EAF70(88), (v77 & 1) != 0))
    {
      v78 = v76;
      v79 = v74[7];
      v80 = type metadata accessor for StaticCharacteristic();
      v81 = v70;
      v82 = *(_QWORD *)(v80 - 8);
      v72 = v171;
      sub_23E1E2F50(v79 + *(_QWORD *)(v82 + 72) * v78, v171, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v83 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56);
      v70 = v81;
      v83(v72, 0, 1, v80);
    }
    else
    {
      v80 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v72, 1, 1, v80);
    }
    v16 = v179;
    v84 = v170;
    sub_23E1E4E3C(v72, v170, &qword_2543332A0);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v84, 1, v80) == 1)
    {
      sub_23E1E7C64(v84, &qword_2543332A0);
      v67 = v177;
LABEL_65:
      v71 = v175;
      if (value == 1)
      {
        if (v176 == 1)
          v87 = 1;
        else
          v87 = 2;
      }
      else if (v176 == 1)
      {
        v87 = 3;
      }
      else
      {
        v87 = 2 * (value == 2);
      }
      sub_23E22D1F8((uint64_t)v67);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v185 = v69;
      v90 = sub_23E211708(v87);
      v91 = v69[2];
      v92 = (v89 & 1) == 0;
      v93 = v91 + v92;
      if (__OFADD__(v91, v92))
        goto LABEL_124;
      v94 = v89;
      if (v69[3] >= v93)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23E22105C();
      }
      else
      {
        sub_23E2188EC(v93, isUniquelyReferenced_nonNull_native);
        type metadata accessor for HMCharacteristicValueDoorState(0);
        v95 = sub_23E211708(v87);
        if ((v94 & 1) != (v96 & 1))
          goto LABEL_129;
        v90 = v95;
      }
      v16 = v179;
      v69 = v185;
      swift_bridgeObjectRelease();
      if ((v94 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v69[(v90 >> 6) + 8] |= 1 << v90;
        v97 = 8 * v90;
        *(_QWORD *)(v69[6] + v97) = v87;
        *(_QWORD *)(v69[7] + v97) = 0;
        v98 = v69[2];
        v99 = v98 + 1;
        v100 = __OFADD__(v98, 1);
        swift_bridgeObjectRetain();
        if (v100)
          goto LABEL_126;
        v69[2] = v99;
        v71 = v175;
      }
      v101 = v69[7];
      swift_bridgeObjectRelease();
      v102 = *(_QWORD *)(v101 + 8 * v90);
      v103 = __OFADD__(v102, 1);
      v104 = v102 + 1;
      v66 = (uint64_t)v178;
      v72 = v171;
      if (v103)
        goto LABEL_125;
      *(_QWORD *)(v101 + 8 * v90) = v104;
      v67 = sub_23E2E0A20;
LABEL_87:
      sub_23E1E2FA0(v180, (uint64_t (*)(_QWORD))v70);
    }
    else
    {
      v85 = v84 + *(int *)(v80 + 24);
      v67 = v177;
      v86 = *(_QWORD *)v85;
      switch(*(_BYTE *)(v85 + 16))
      {
        case 0:
          sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          if ((v86 & 1) == 0)
            goto LABEL_65;
          goto LABEL_61;
        case 1:
          v86 = *(_QWORD *)v85;
          goto LABEL_59;
        case 2:
          v86 = (unsigned __int16)*(_QWORD *)v85;
          if (v86 > 1)
            goto LABEL_64;
          goto LABEL_60;
        case 3:
          v86 = *(_QWORD *)v85;
          if (v86 > 1)
            goto LABEL_64;
          goto LABEL_60;
        case 4:
          if ((v86 & 0x8000000000000000) != 0)
            goto LABEL_128;
LABEL_59:
          if (v86 <= 1)
            goto LABEL_60;
          goto LABEL_64;
        case 5:
        case 6:
          v86 = (int)v86;
          if ((unint64_t)(int)v86 > 1)
            goto LABEL_64;
LABEL_60:
          sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          if (v86 != 1)
            goto LABEL_65;
LABEL_61:
          sub_23E1E2FA0(v180, (uint64_t (*)(_QWORD))v70);
          v71 = v175;
          if (__OFADD__(v174, 1))
            goto LABEL_127;
          ++v174;
          v66 = (uint64_t)v178;
          break;
        default:
LABEL_64:
          sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          goto LABEL_65;
      }
    }
    v68 += (uint64_t)v71;
    if (--v65)
      continue;
    break;
  }
  v177 = v67;
  swift_release();
  v38 = v173;
  v105 = *(_QWORD *)(v173 + 16);
  if (!v105)
  {
LABEL_110:
    swift_release();
    v107 = 0;
    goto LABEL_111;
  }
LABEL_90:
  v106 = v38;
  v107 = 0;
  v108 = v106 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
  v109 = *(_QWORD *)(v181 + 72);
  do
  {
    sub_23E1E2F50(v108, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v185 = *(_QWORD **)&v16[v182[26]];
    v184 = 28;
    v189 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v184);
    if (!v189.is_nil)
    {
      v110 = v189.value == 0;
      sub_23E22D1F8((uint64_t)v107);
      v111 = swift_isUniquelyReferenced_nonNull_native();
      v185 = v69;
      v113 = sub_23E211708(v110);
      v114 = v69[2];
      v115 = (v112 & 1) == 0;
      v116 = v114 + v115;
      if (__OFADD__(v114, v115))
        goto LABEL_121;
      v117 = v112;
      if (v69[3] >= v116)
      {
        if ((v111 & 1) == 0)
          sub_23E22105C();
      }
      else
      {
        sub_23E2188EC(v116, v111);
        type metadata accessor for HMCharacteristicValueDoorState(0);
        v118 = sub_23E211708(v110);
        if ((v117 & 1) != (v119 & 1))
          goto LABEL_129;
        v113 = v118;
      }
      v16 = v179;
      v69 = v185;
      swift_bridgeObjectRelease();
      if ((v117 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v69[(v113 >> 6) + 8] |= 1 << v113;
        v120 = 8 * v113;
        *(_QWORD *)(v69[6] + v120) = v110;
        *(_QWORD *)(v69[7] + v120) = 0;
        v121 = v69[2];
        v122 = v121 + 1;
        v123 = __OFADD__(v121, 1);
        swift_bridgeObjectRetain();
        if (v123)
          goto LABEL_123;
        v69[2] = v122;
      }
      v124 = v69[7];
      swift_bridgeObjectRelease();
      v125 = *(_QWORD *)(v124 + 8 * v113);
      v103 = __OFADD__(v125, 1);
      v126 = v125 + 1;
      v66 = (uint64_t)v178;
      if (v103)
        goto LABEL_122;
      *(_QWORD *)(v124 + 8 * v113) = v126;
      v107 = sub_23E2E0A20;
    }
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v108 += v109;
    --v105;
  }
  while (v105);
  swift_release();
LABEL_111:
  v127 = sub_23E52F4B0((uint64_t)v69);
  v129 = v128;
  swift_bridgeObjectRelease();
  v130 = v166;
  if ((uint64_t)v174 <= 0)
  {
    switch(v127)
    {
      case 0:
      case 2:
      case 3:
      case 4:
        goto LABEL_112;
      default:
        sub_23E1E2FA0(v156, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56))(v165, 1, 1, v164);
        break;
    }
  }
  else
  {
LABEL_112:
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v131 = swift_allocObject();
    v132 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v131 + 16) = xmmword_23E539650;
    v133 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v131 + 56) = v132;
    *(_QWORD *)(v131 + 64) = v133;
    *(_QWORD *)(v131 + 32) = v129;
    v134 = sub_23E537574();
    v181 = v135;
    v182 = (int *)v134;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v136 = v159;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v159 + 56))(v66, 1, 1, v130);
    static String.hfLocalized(_:)();
    v138 = v137;
    v140 = v139;
    v141 = v158;
    sub_23E1FC2F8(v66, v158);
    v142 = v130;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v141, 1, v130) == 1)
    {
      v143 = v160;
      sub_23E536F74();
      sub_23E1E7C64(v66, &qword_254333F50);
      sub_23E1E7C64(v141, &qword_254333F50);
      v144 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 32);
    }
    else
    {
      sub_23E1E7C64(v66, &qword_254333F50);
      v144 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 32);
      v143 = v160;
      v144(v160, v141, v142);
    }
    v145 = (uint64_t)v161;
    v144(v161, (uint64_t)v143, v142);
    v146 = (int *)v162;
    v147 = (_QWORD *)(v145 + *(int *)(v162 + 20));
    *v147 = 0;
    v147[1] = 0xE000000000000000;
    v148 = (_QWORD *)(v145 + v146[6]);
    *v148 = v138;
    v148[1] = v140;
    v149 = (int **)(v145 + v146[7]);
    v150 = (int *)v181;
    *v149 = v182;
    v149[1] = v150;
    v151 = v145 + v146[8];
    *(_QWORD *)v151 = 0;
    *(_QWORD *)(v151 + 8) = 0;
    *(_QWORD *)(v151 + 16) = 0;
    *(_BYTE *)(v151 + 24) = -1;
    v152 = (uint64_t)v157;
    sub_23E1E2FDC(v145, (uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v153 = v165;
    sub_23E1E2F50(v152, v165, type metadata accessor for GarageDoorStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v163 + 56))(v153, 0, 1, v164);
    sub_23E1E2FA0(v152, type metadata accessor for GarageDoorStatusItem);
  }
  sub_23E22D1F8((uint64_t)v177);
  return sub_23E22D1F8((uint64_t)v107);
}

BOOL sub_23E507B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  Swift::Int value;
  Swift::Int v10;
  Swift::Int v12;
  _BYTE v13[7];
  char v14;
  uint64_t v15;
  Swift::Int_optional v16;
  Swift::Int_optional v17;
  Swift::Int_optional v18;

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = &v13[-v7];
  v15 = *(_QWORD *)(v0 + *(int *)(v6 + 104));
  v14 = 38;
  v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
  if (v16.is_nil)
  {
    sub_23E1E2F50(v0, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_7:
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_8;
  }
  value = v16.value;
  sub_23E1E2F50(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (value != 1)
    goto LABEL_7;
  v15 = *(_QWORD *)&v8[*(int *)(v2 + 104)];
  v14 = -100;
  v17 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
  if (v17.is_nil)
    goto LABEL_7;
  v10 = v17.value;
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v10 == 1)
  {
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return 0;
  }
LABEL_8:
  v15 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
  v14 = 38;
  v18 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
  if (v18.is_nil)
  {
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return 1;
  }
  else
  {
    v12 = v18.value;
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return v12 != 3;
  }
}

BOOL sub_23E507D04()
{
  uint64_t v0;
  char v3;
  uint64_t v4;
  Swift::Int_optional v5;

  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v3 = 28;
  v5 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
  return !v5.is_nil && v5.value == 1;
}

Swift::Int sub_23E507D58@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  BOOL v4;
  char v6;
  uint64_t v7;
  Swift::Int_optional v8;

  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticService() + 104));
  v6 = 28;
  v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v6);
  v4 = !v8.is_nil && v8.value == 1;
  *a2 = v4;
  return v8.value;
}

uint64_t sub_23E507DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E1E2F50(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
}

uint64_t sub_23E507DEC@<X0>(uint64_t *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  char v102;
  char v103;
  char v104;
  char v105;

  v69 = a4;
  v73 = a3;
  LODWORD(v100) = a2;
  v95 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41680);
  v7 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  v94 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v90 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D78);
  v82 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v76 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D00);
  v80 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v72 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D80);
  v12 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  v84 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D88);
  v15 = *(_QWORD *)(v14 - 8);
  v88 = v14;
  v89 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v77 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D90);
  v18 = *(_QWORD *)(v17 - 8);
  v91 = v17;
  v92 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v86 = (char *)v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v87 = *(_QWORD *)(v85 - 8);
  v20 = MEMORY[0x24BDAC7A8](v85);
  v78 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v101 = (char *)v66 - v22;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v68 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v24 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v67 = *(_QWORD *)(v29 - 8);
  v30 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v71 = *(_QWORD *)(v70 - 8);
  v33 = MEMORY[0x24BDAC7A8](v70);
  v99 = (char *)v66 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v74 = (char *)v66 - v35;
  v96 = *a1;
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v97 = *(void (**)(char *, uint64_t))(v26 + 8);
  v97(v28, v25);
  v105 = (char)v100;
  sub_23E536C98();
  v66[2] = sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  v66[1] = sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  v66[0] = sub_23E1F21F8();
  v36 = v30;
  v37 = v98;
  sub_23E536C2C();
  v68 = *(_QWORD *)(v68 + 8);
  ((void (*)(char *, uint64_t))v68)(v24, v37);
  v67 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v67)(v32, v36);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v38 = v97;
  v97(v28, v25);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v38(v28, v25);
  v104 = v73;
  sub_23E536C98();
  v39 = v98;
  sub_23E536C2C();
  ((void (*)(char *, uint64_t))v68)(v24, v39);
  ((void (*)(char *, uint64_t))v67)(v32, v36);
  sub_23E536CA4();
  swift_getKeyPath();
  v40 = v72;
  sub_23E536C38();
  swift_release();
  v38(v28, v25);
  v103 = (char)v100;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D30);
  v41 = v76;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D49D18, &qword_256D49D00, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D49D98, &qword_256D49D78, MEMORY[0x24BDCD130]);
  sub_23E509AA8(&qword_256D49D28, (uint64_t (*)(void))sub_23E1F21F8, MEMORY[0x24BEE4AB8]);
  v42 = v75;
  v43 = v41;
  v44 = v79;
  v45 = v81;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v40, v44);
  v46 = MEMORY[0x24BDCD0F0];
  v98 = sub_23E1F9710(&qword_256D41808, &qword_256D417B0, MEMORY[0x24BDCD0F0]);
  sub_23E1F9710(&qword_256D49DA0, &qword_256D49D80, v46);
  v47 = v77;
  v48 = v99;
  v49 = v70;
  v50 = v83;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v42, v50);
  v100 = *(void (**)(char *, uint64_t))(v71 + 8);
  v100(v48, v49);
  sub_23E536CA4();
  swift_getKeyPath();
  v51 = v78;
  sub_23E536C38();
  swift_release();
  v97(v28, v25);
  v102 = 0;
  v52 = v90;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D49DA8, &qword_256D49D88, MEMORY[0x24BDCCDB8]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D416F8, &qword_256D41680, MEMORY[0x24BDCD130]);
  v53 = v85;
  v54 = v86;
  v55 = v47;
  v56 = v52;
  v57 = v88;
  v58 = v93;
  sub_23E536C74();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v56, v58);
  v59 = *(void (**)(char *, uint64_t))(v87 + 8);
  v59(v51, v53);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v57);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49DB0);
  v61 = v95;
  v95[3] = v60;
  v61[4] = sub_23E509CC8();
  __swift_allocate_boxed_opaque_existential_1(v61);
  sub_23E1F9710(&qword_256D49DF0, &qword_256D49D90, MEMORY[0x24BDCCD80]);
  v62 = v74;
  v63 = v101;
  v64 = v91;
  sub_23E536C74();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v54, v64);
  v59(v63, v53);
  return ((uint64_t (*)(char *, uint64_t))v100)(v62, v49);
}

BOOL sub_23E508808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::Int value;
  Swift::Bool is_nil;
  _BOOL8 v8;
  uint64_t v11;
  uint64_t v12;
  Swift::Int_optional v13;
  Swift::Int_optional v14;

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v0 + *(int *)(v3 + 104));
  HIBYTE(v11) = 31;
  v13 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v11 + 7));
  value = v13.value;
  is_nil = v13.is_nil;
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (is_nil || value == 1)
  {
    v12 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
    HIBYTE(v11) = -107;
    v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v11 + 7));
    v8 = !v14.is_nil && v14.value != 1;
  }
  else
  {
    v8 = 1;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v8;
}

uint64_t sub_23E50890C@<X0>(int a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[4];
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v15 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v15;
  sub_23E536C98();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  a2[4] = sub_23E2BE714();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  sub_23E536C2C();
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v12, v10);
}

uint64_t sub_23E508B5C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  v4 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v7[2] = a1;
  swift_bridgeObjectRetain();
  v5 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v7, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_23E508BD0()
{
  uint64_t v0;
  uint64_t v1;
  char v3;

  v0 = type metadata accessor for StaticService();
  if (ServiceKind.rawValue.getter(v0) == 0xD000000000000024 && v1 == 0x800000023E55FDB0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v3 = sub_23E538354();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

Swift::Int sub_23E508C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::Int value;
  char v5;
  uint64_t v6;
  Swift::Int_optional v7;

  v6 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticService() + 104));
  v5 = 42;
  v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v5);
  if (v7.is_nil)
    value = 0;
  else
    value = v7.value;
  *(_QWORD *)a2 = value;
  *(_BYTE *)(a2 + 8) = v7.is_nil;
  return v7.value;
}

unint64_t sub_23E508CE8(_QWORD **a1, uint64_t *a2)
{
  char v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;

  v4 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *a1;
  v20 = *a1;
  *a1 = (_QWORD *)0x8000000000000000;
  v8 = sub_23E211708(v4);
  v9 = v6[2];
  v10 = (v7 & 1) == 0;
  v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = v7;
  if (v6[3] >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_23E219F40(v11, isUniquelyReferenced_nonNull_native);
    v6 = v20;
    v12 = sub_23E211708(v4);
    if ((v2 & 1) != (v13 & 1))
    {
      type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState(0);
      result = sub_23E5383C0();
      __break(1u);
      return result;
    }
    v8 = v12;
  }
  while (1)
  {
    *a1 = v6;
    result = swift_bridgeObjectRelease();
    v15 = *a1;
    if ((v2 & 1) == 0)
      result = sub_23E21D218(v8, v4, 0, *a1);
    v16 = v15[7];
    v17 = *(_QWORD *)(v16 + 8 * v8);
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (!v18)
      break;
LABEL_11:
    __break(1u);
LABEL_12:
    sub_23E221DDC();
    v6 = v20;
  }
  *(_QWORD *)(v16 + 8 * v8) = v19;
  return result;
}

uint64_t sub_23E508E10@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;

  v62 = a2;
  v77 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41680);
  v5 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  v81 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v76 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v8 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  v79 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v75 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49CF8);
  v11 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  v70 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D00);
  v14 = *(_QWORD *)(v13 - 8);
  v67 = v13;
  v68 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v61 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D08);
  v17 = *(_QWORD *)(v16 - 8);
  v71 = v16;
  v72 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v65 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v57 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v29 = *(_QWORD *)(v28 - 8);
  v63 = v28;
  v64 = v29;
  MEMORY[0x24BDAC7A8](v28);
  v56 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D10);
  v32 = *(_QWORD *)(v31 - 8);
  v73 = v31;
  v74 = v32;
  MEMORY[0x24BDAC7A8](v31);
  v60 = (char *)&v55 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *a1;
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v34 = *(void (**)(char *, uint64_t))(v22 + 8);
  v34(v24, v21);
  v55 = v34;
  v84 = v62;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  v35 = v58;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v35);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v25);
  sub_23E536CA4();
  swift_getKeyPath();
  v36 = v61;
  sub_23E536C38();
  swift_release();
  v34(v24, v21);
  v37 = v66;
  sub_23E536C68();
  sub_23E1F9710(&qword_256D49D18, &qword_256D49D00, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D49D20, &qword_256D49CF8, MEMORY[0x24BDCCCF8]);
  sub_23E509AA8(&qword_256D49D28, (uint64_t (*)(void))sub_23E1F21F8, MEMORY[0x24BEE4AB8]);
  v38 = v65;
  v39 = v37;
  v40 = v67;
  v41 = v69;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v41);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v36, v40);
  v42 = MEMORY[0x24BDCD0F0];
  sub_23E1F9710(&qword_256D41808, &qword_256D417B0, MEMORY[0x24BDCD0F0]);
  sub_23E1F9710(&qword_256D49D38, &qword_256D49D08, v42);
  v43 = v60;
  v44 = v56;
  v45 = v63;
  v46 = v71;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v46);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v44, v45);
  sub_23E536CA4();
  swift_getKeyPath();
  v47 = v75;
  sub_23E536C38();
  swift_release();
  v55(v24, v21);
  v83 = 0;
  v48 = v76;
  sub_23E536C98();
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D40);
  v50 = v77;
  v77[3] = v49;
  v50[4] = sub_23E509B14();
  __swift_allocate_boxed_opaque_existential_1(v50);
  sub_23E1F9710(&qword_256D49D70, &qword_256D49D10, MEMORY[0x24BDCCDB8]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D416F8, &qword_256D41680, MEMORY[0x24BDCD130]);
  v51 = v73;
  v52 = v78;
  v53 = v80;
  sub_23E536C74();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v53);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v43, v51);
}

uint64_t sub_23E50956C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  return sub_23E509640(a1, a2, (uint64_t)&unk_23E55A620, a3);
}

BOOL sub_23E509578()
{
  uint64_t v0;
  char v3;
  uint64_t v4;
  Swift::Int_optional v5;

  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v3 = 89;
  v5 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
  return !v5.is_nil && v5.value == 1;
}

Swift::Int sub_23E5095CC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  BOOL v4;
  char v6;
  uint64_t v7;
  Swift::Int_optional v8;

  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticService() + 104));
  v6 = 89;
  v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v6);
  v4 = !v8.is_nil && v8.value == 1;
  *a2 = v4;
  return v8.value;
}

uint64_t sub_23E509634@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  return sub_23E509640(a1, a2, (uint64_t)&unk_23E55A648, a3);
}

uint64_t sub_23E509640@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v38 = a3;
  v39 = a4;
  v32 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v6 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  v41 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v36 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v9 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  v34 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v31 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v29 = *a1;
  v30 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v42 = v32;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  v21 = v33;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v16);
  sub_23E536CA4();
  swift_getKeyPath();
  v22 = v36;
  sub_23E536C38();
  swift_release();
  v20(v15, v12);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417C8);
  v24 = v39;
  v39[3] = v23;
  v24[4] = sub_23E2BE6A8();
  __swift_allocate_boxed_opaque_existential_1(v24);
  sub_23E1F9710(&qword_256D41808, &qword_256D417B0, MEMORY[0x24BDCD0F0]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  v25 = v30;
  v26 = v35;
  v27 = v40;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v25, v26);
}

uint64_t sub_23E5099F8()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 83;
  return sub_23E2B4680(&v2) & 1;
}

uint64_t sub_23E509A48@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = 83;
  result = sub_23E2B4680(&v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_23E509AA8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D30);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E509B14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256D49D48;
  if (!qword_256D49D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D40);
    v2[0] = sub_23E509E00(&qword_256D49D50, &qword_256D49D10, (uint64_t (*)(void))sub_23E509BBC);
    v2[1] = sub_23E497FDC((unint64_t *)&qword_256D41800, &qword_256D41798);
    v2[2] = sub_23E2BE5A8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCD78], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49D48);
  }
  return result;
}

unint64_t sub_23E509BBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D49D58;
  if (!qword_256D49D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D08);
    v2[0] = sub_23E497FDC(&qword_256D49D60, &qword_256D49D00);
    v2[1] = sub_23E1F9710(&qword_256D49D68, &qword_256D49CF8, MEMORY[0x24BDCCCF0]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49D58);
  }
  return result;
}

uint64_t sub_23E509C50@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E507DEC(a1, *(unsigned __int8 *)(v2 + 16), *(unsigned __int8 *)(v2 + 17), (uint64_t)&unk_23E55A6B8, a2);
}

BOOL sub_23E509C74(uint64_t a1)
{
  return (*(_BYTE *)(a1 + 8) & 1) == 0;
}

uint64_t sub_23E509C84@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 8) & 1) != 0)
    __break(1u);
  else
    *a2 = *(_QWORD *)result;
  return result;
}

BOOL sub_23E509C9C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23E508808();
  *a1 = result;
  return result;
}

unint64_t sub_23E509CC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256D49DB8;
  if (!qword_256D49DB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49DB0);
    v2[0] = sub_23E2BE714();
    v2[1] = sub_23E497FDC((unint64_t *)&qword_256D41800, &qword_256D41798);
    v2[2] = sub_23E509D58();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCD78], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49DB8);
  }
  return result;
}

unint64_t sub_23E509D58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256D49DC0;
  if (!qword_256D49DC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D90);
    v2[0] = sub_23E509E00(&qword_256D49DC8, &qword_256D49D88, (uint64_t (*)(void))sub_23E509E6C);
    v2[1] = sub_23E497FDC((unint64_t *)&qword_256D41800, &qword_256D41798);
    v2[2] = sub_23E2BE5A8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCD78], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49DC0);
  }
  return result;
}

uint64_t sub_23E509E00(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_23E2BE714();
    v7[1] = a3();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDB0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E509E6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D49DD0;
  if (!qword_256D49DD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D80);
    v2[0] = sub_23E497FDC(&qword_256D49D60, &qword_256D49D00);
    v2[1] = sub_23E509EE8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49DD0);
  }
  return result;
}

unint64_t sub_23E509EE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D49DD8;
  if (!qword_256D49DD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D49D78);
    v2[0] = sub_23E509AA8(&qword_256D49DE0, (uint64_t (*)(void))sub_23E2BE868, MEMORY[0x24BEE4AC0]);
    v2[1] = sub_23E509AA8(&qword_256D49DE8, (uint64_t (*)(void))sub_23E2BE8AC, MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D49DD8);
  }
  return result;
}

uint64_t sub_23E509F84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E507DEC(a1, *(unsigned __int8 *)(v2 + 16), *(unsigned __int8 *)(v2 + 17), (uint64_t)&unk_23E55A6E0, a2);
}

BOOL sub_23E509FA8@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23E507B3C();
  *a1 = result;
  return result;
}

uint64_t sub_23E509FD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E50890C(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_23E509FDC(uint64_t a1)
{
  sub_23E2261B0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t LegacyHFImageIdentifiers.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E50A0AC + 4 * word_23E55A710[a1]))(0xD000000000000025, 0x800000023E560D70);
}

uint64_t sub_23E50A0AC(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_23E50A51C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23E50A548@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = LegacyHFImageIdentifiers.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23E50A570()
{
  sub_23E50A990();
  return sub_23E53779C();
}

uint64_t sub_23E50A5CC()
{
  sub_23E50A990();
  return sub_23E537760();
}

uint64_t sub_23E50A618(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = LegacyHFImageIdentifiers.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == LegacyHFImageIdentifiers.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23E50A6A0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23E53845C();
  LegacyHFImageIdentifiers.rawValue.getter(v1);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E50A700()
{
  unsigned __int8 *v0;

  LegacyHFImageIdentifiers.rawValue.getter(*v0);
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E50A740()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23E53845C();
  LegacyHFImageIdentifiers.rawValue.getter(v1);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23E538384();
  swift_bridgeObjectRelease();
  if (v0 >= 0x49)
    return 73;
  else
    return v0;
}

unint64_t sub_23E50A7F0()
{
  unint64_t result;

  result = qword_256D49DF8;
  if (!qword_256D49DF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for LegacyHFImageIdentifiers, &type metadata for LegacyHFImageIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256D49DF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LegacyHFImageIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xB8)
    goto LABEL_17;
  if (a2 + 72 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 72) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 72;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 72;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 72;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x49;
  v8 = v6 - 73;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyHFImageIdentifiers(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 72 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 72) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xB8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xB7)
    return ((uint64_t (*)(void))((char *)&loc_23E50A910 + 4 * byte_23E55A7A7[v4]))();
  *a1 = a2 + 72;
  return ((uint64_t (*)(void))((char *)sub_23E50A944 + 4 * byte_23E55A7A2[v4]))();
}

uint64_t sub_23E50A944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E50A94C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E50A954);
  return result;
}

uint64_t sub_23E50A960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E50A968);
  *(_BYTE *)result = a2 + 72;
  return result;
}

uint64_t sub_23E50A96C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E50A974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyHFImageIdentifiers()
{
  return &type metadata for LegacyHFImageIdentifiers;
}

unint64_t sub_23E50A990()
{
  unint64_t result;

  result = qword_256D49E00;
  if (!qword_256D49E00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for LegacyHFImageIdentifiers, &type metadata for LegacyHFImageIdentifiers);
    atomic_store(result, (unint64_t *)&qword_256D49E00);
  }
  return result;
}

uint64_t sub_23E50A9E8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F708);
  v9 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  v19 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F710);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  sub_23E536C98();
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F728);
  a2[4] = sub_23E225F3C();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D3F768, &qword_256D3F710, MEMORY[0x24BDCD130]);
  sub_23E1F9710(&qword_256D3F770, &qword_256D3F708, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D3F778, &qword_256D3F718, MEMORY[0x24BEE1718]);
  sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
  v15 = v18;
  sub_23E536C50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v12);
}

uint64_t sub_23E50AC70(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;
  _QWORD v33[2];
  char *v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v39 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v33[0] = (char *)v33 - v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = sub_23E537FE8();
    v38 = 0;
    v10 = 0;
    v11 = 0;
    v12 = v9 | 0x8000000000000000;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(a1 + 32);
    v10 = ~v13;
    v14 = *(_QWORD *)(a1 + 64);
    v38 = a1 + 64;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v11 = v16 & v14;
    v12 = a1;
  }
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v33[1] = v10;
  v35 = MEMORY[0x24BEE4AF8];
  v37 = (unint64_t)(v10 + 64) >> 6;
  v36 = MEMORY[0x24BEE4AD0] + 8;
  while (1)
  {
    v19 = v18;
    if ((v12 & 0x8000000000000000) == 0)
      break;
    v22 = sub_23E537FF4();
    if (!v22)
      goto LABEL_38;
    v40 = v22;
    sub_23E1E335C(0, &qword_256D42BF8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v23 = v41;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_38;
LABEL_31:
    sub_23E53755C();
    sub_23E536F2C();

    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v4, 1, v5) == 1)
    {
      result = sub_23E1E7C64((uint64_t)v4, &qword_254333F50);
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v28 = (char *)v33[0];
      v27((char *)v33[0], v4, v5);
      v27(v34, v28, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_23E51E540(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
      v30 = *(_QWORD *)(v35 + 16);
      v29 = *(_QWORD *)(v35 + 24);
      if (v30 >= v29 >> 1)
        v35 = sub_23E51E540(v29 > 1, v30 + 1, 1, v35);
      v31 = v34;
      v32 = v35;
      *(_QWORD *)(v35 + 16) = v30 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v32+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v30, v31, v5);
    }
  }
  if (v11)
  {
    v20 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v21 = v20 | (v18 << 6);
LABEL_30:
    v23 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * v21);
    if (!v23)
      goto LABEL_38;
    goto LABEL_31;
  }
  v24 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v24 >= v37)
      goto LABEL_38;
    v25 = *(_QWORD *)(v38 + 8 * v24);
    ++v18;
    if (!v25)
    {
      v18 = v19 + 2;
      if (v19 + 2 >= v37)
        goto LABEL_38;
      v25 = *(_QWORD *)(v38 + 8 * v18);
      if (!v25)
      {
        v18 = v19 + 3;
        if (v19 + 3 >= v37)
          goto LABEL_38;
        v25 = *(_QWORD *)(v38 + 8 * v18);
        if (!v25)
        {
          v18 = v19 + 4;
          if (v19 + 4 >= v37)
            goto LABEL_38;
          v25 = *(_QWORD *)(v38 + 8 * v18);
          if (!v25)
          {
            v18 = v19 + 5;
            if (v19 + 5 >= v37)
              goto LABEL_38;
            v25 = *(_QWORD *)(v38 + 8 * v18);
            if (!v25)
            {
              v26 = v19 + 6;
              while (v37 != v26)
              {
                v25 = *(_QWORD *)(v38 + 8 * v26++);
                if (v25)
                {
                  v18 = v26 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_23E2261B0();
              return v35;
            }
          }
        }
      }
    }
LABEL_29:
    v11 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v18 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

void HMAccessory.isFavorite.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_41;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void HMAccessory.shouldShowInDashboard.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_6_6;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void sub_23E50B358(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t HMAccessory.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = (void *)sub_23E537538();
  v8 = objc_msgSend(v6, sel_objectForKeyedSubscript_, v7);

  if (!v8)
    goto LABEL_5;
  v20[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  v10 = v20[1];
  v9 = v20[2];
  sub_23E1E335C(0, &qword_256D47458);
  sub_23E1E335C(0, &qword_256D47460);
  v11 = sub_23E537B2C();
  v14 = (void *)v11;
  if (!v11)
  {
    sub_23E22C908(v10, v9);
LABEL_5:
    v12 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  v15 = sub_23E536F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v5, 1, 1, v15);
  sub_23E45E8F4();
  sub_23E53809C();
  sub_23E22C908(v10, v9);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    v18 = a1;
    v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v5, v15);
    v18 = a1;
    v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMAccessory.customNearbyAccessoryIdentifiers.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  id v43;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v33 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v0, sel_applicationData);
  v14 = (void *)sub_23E537538();
  v15 = objc_msgSend(v13, sel_objectForKeyedSubscript_, v14);

  if (!v15)
    return 0;
  v43 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v17 = v41;
  v16 = v42;
  sub_23E1E335C(0, &qword_256D47458);
  sub_23E1E335C(0, &qword_256D42BF8);
  v18 = sub_23E537B38();
  if (!v18)
  {
    sub_23E22C908(v17, v16);
    return 0;
  }
  v20 = sub_23E50AC70(v18);
  swift_bridgeObjectRelease();
  v21 = v20;
  v41 = MEMORY[0x24BEE4B08];
  v22 = *(_QWORD *)(v20 + 16);
  v34 = v17;
  v35 = v16;
  v33 = v21;
  if (v22)
  {
    v38 = v8;
    v39 = v5;
    v23 = v21 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v37 = *(_QWORD *)(v2 + 72);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    swift_bridgeObjectRetain();
    v25 = v39;
    v26 = v40;
    v27 = (uint64_t)v38;
    while (1)
    {
      v24(v12, v23, v1);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v28(v12, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) == 1)
        break;
      v36 = v28;
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v26, v12, v1);
      v24(v25, (unint64_t)v26, v1);
      v29 = v12;
      v30 = v24;
      sub_23E1FFF40(v27, v25);
      v31 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
      v31(v27, v1);
      v31((uint64_t)v26, v1);
      v24 = v30;
      v12 = v29;
      v23 += v37;
      if (!--v22)
      {
        v36(v29, 1, 1, v1);
        break;
      }
    }
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain();
    v32(v12, 1, 1, v1);
  }
  swift_bridgeObjectRelease();
  sub_23E22C908(v34, v35);
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_23E50B948()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  unsigned __int8 v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v5;
  return result;
}

void HMAccessory.contributesToHomeStatus.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393580;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_12_5;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

unint64_t static HMAccessory.accessoryIsFavoriteKey.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static HMAccessory.accessoryContributesToHomeStatusKey.getter()
{
  return 0xD000000000000032;
}

unint64_t static HMAccessory.accessoryNearbyAccessoriesKey.getter()
{
  return 0xD000000000000022;
}

unint64_t static HMAccessory.accessoryShowAsIndividualTilesKey.getter()
{
  return 0xD000000000000026;
}

unint64_t static HMAccessory.accessoryShouldShowInHomeDashboardKey.getter()
{
  return 0xD00000000000002DLL;
}

void (*HMAccessory.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMAccessory.shouldShowInDashboard.getter() & 1;
  return sub_23E50BC30;
}

void sub_23E50BC30(uint64_t a1)
{
  HMAccessory.shouldShowInDashboard.setter(*(_BYTE *)(a1 + 8));
}

uint64_t sub_23E50BC54()
{
  uint64_t v0;

  return swift_deallocObject();
}

void (*HMAccessory.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMAccessory.isFavorite.getter() & 1;
  return sub_23E50BCB0;
}

void sub_23E50BCB0(uint64_t a1)
{
  HMAccessory.isFavorite.setter(*(_BYTE *)(a1 + 8));
}

void (*HMAccessory.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMAccessory.contributesToHomeStatus.getter() & 1;
  return sub_23E50BD0C;
}

void sub_23E50BD0C(uint64_t a1)
{
  HMAccessory.contributesToHomeStatus.setter(*(_BYTE *)(a1 + 8));
}

void HMAccessory.showAsIndividualTiles.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_18_1;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void (*HMAccessory.showAsIndividualTiles.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMAccessory.showAsIndividualTiles.getter() & 1;
  return sub_23E50BEC8;
}

void sub_23E50BEC8(uint64_t a1)
{
  HMAccessory.showAsIndividualTiles.setter(*(_BYTE *)(a1 + 8));
}

uint64_t sub_23E50BEEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v4);
  return HMAccessory.dateAdded.setter((uint64_t)v4);
}

uint64_t HMAccessory.dateAdded.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t *boxed_opaque_existential_1;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v27;
  __int128 aBlock;
  void (*v29)(uint64_t, void *);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v5);
  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_2543330E0);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
    v30 = (void *)sub_23E1E335C(0, &qword_256D47460);
    *(_QWORD *)&aBlock = v8;
  }
  else
  {
    v34 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v5, v6);
    sub_23E1EA76C(v33, &aBlock);
  }
  v10 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v30);
  v11 = sub_23E538348();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  *(_QWORD *)&aBlock = 0;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &aBlock);
  swift_unknownObjectRelease();
  v13 = (id)aBlock;
  if (v12)
  {
    v14 = sub_23E536E6C();
    v16 = v15;

    v17 = objc_msgSend(v1, sel_applicationData);
    v18 = (void *)sub_23E536E48();
    v19 = (void *)sub_23E537538();
    objc_msgSend(v17, sel_setObject_forKeyedSubscript_, v18, v19);

    v20 = objc_msgSend(v1, sel_applicationData);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v1;
    v31 = sub_23E393800;
    v32 = v21;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v29 = sub_23E50B358;
    v30 = &block_descriptor_24_0;
    v22 = _Block_copy(&aBlock);
    v23 = v1;
    swift_release();
    objc_msgSend(v23, sel_updateApplicationData_completionHandler_, v20, v22);
    _Block_release(v22);

    sub_23E22C908(v14, v16);
  }
  else
  {
    v24 = v13;
    v25 = (void *)sub_23E536D10();

    swift_willThrow();
  }
  return sub_23E1E7C64(a1, &qword_2543330E0);
}

void (*HMAccessory.dateAdded.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  HMAccessory.dateAdded.getter((uint64_t)v4);
  return sub_23E50C308;
}

void sub_23E50C308(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_23E2DAD9C((uint64_t)v3, (uint64_t)v2);
    HMAccessory.dateAdded.setter((uint64_t)v2);
    sub_23E1E7C64((uint64_t)v3, &qword_2543330E0);
  }
  else
  {
    HMAccessory.dateAdded.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

void HMAccessory.customNearbyAccessoryIdentifiers.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t i;
  _OWORD *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  _QWORD *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  _QWORD *v65;
  _OWORD v66[2];
  __int128 v67;
  uint64_t v68;
  id aBlock[8];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v9 = a1;
  else
    v9 = MEMORY[0x24BEE4B08];
  v10 = (_QWORD *)sub_23E20E9F0(MEMORY[0x24BEE4AF8]);
  v11 = *(_QWORD *)(v9 + 56);
  v61 = v9 + 56;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v62 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v64)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v18 = (v14 - 1) & v14;
      v19 = v17 | (i << 6);
      goto LABEL_29;
    }
    v20 = i + 1;
    if (__OFADD__(i, 1))
      goto LABEL_48;
    if (v20 >= v62)
      break;
    v21 = *(_QWORD *)(v61 + 8 * v20);
    ++i;
    if (!v21)
    {
      i = v20 + 1;
      if (v20 + 1 >= v62)
        break;
      v21 = *(_QWORD *)(v61 + 8 * i);
      if (!v21)
      {
        i = v20 + 2;
        if (v20 + 2 >= v62)
          break;
        v21 = *(_QWORD *)(v61 + 8 * i);
        if (!v21)
        {
          i = v20 + 3;
          if (v20 + 3 >= v62)
            break;
          v21 = *(_QWORD *)(v61 + 8 * i);
          if (!v21)
          {
            i = v20 + 4;
            if (v20 + 4 >= v62)
              break;
            v21 = *(_QWORD *)(v61 + 8 * i);
            if (!v21)
            {
              v22 = v20 + 5;
              if (v22 >= v62)
                break;
              v21 = *(_QWORD *)(v61 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  i = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_49;
                  if (i >= v62)
                    goto LABEL_41;
                  v21 = *(_QWORD *)(v61 + 8 * i);
                  ++v22;
                  if (v21)
                    goto LABEL_28;
                }
              }
              i = v22;
            }
          }
        }
      }
    }
LABEL_28:
    v18 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (i << 6);
LABEL_29:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(_QWORD *)(v9 + 48) + *(_QWORD *)(v3 + 72) * v19, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
      goto LABEL_42;
    v63 = v18;
    v64 = i;
    v23 = v3;
    v24 = v8;
    v25 = v2;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v26 = v5;
    sub_23E536F38();
    v27 = (void *)sub_23E537538();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v67 = v27;
    v28 = sub_23E1E335C(0, &qword_256D42BF8);
    sub_23E50CA94();
    v29 = v27;
    sub_23E537E20();
    v68 = v28;
    *(_QWORD *)&v67 = v29;
    sub_23E1EA76C(&v67, v66);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = v10;
    v32 = sub_23E211498((uint64_t)aBlock);
    v33 = v10[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
    }
    v36 = v31;
    if (v10[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v10 = v65;
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E221F6C();
        v10 = v65;
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E21A214(v35, isUniquelyReferenced_nonNull_native);
      v37 = sub_23E211498((uint64_t)aBlock);
      if ((v36 & 1) != (v38 & 1))
      {
        sub_23E5383C0();
        __break(1u);
        return;
      }
      v32 = v37;
      v10 = v65;
      if ((v36 & 1) != 0)
      {
LABEL_7:
        v16 = (_OWORD *)(v10[7] + 32 * v32);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
        sub_23E1EA76C(v66, v16);
        goto LABEL_8;
      }
    }
    v10[(v32 >> 6) + 8] |= 1 << v32;
    sub_23E222FFC((uint64_t)aBlock, v10[6] + 40 * v32);
    sub_23E1EA76C(v66, (_OWORD *)(v10[7] + 32 * v32));
    v39 = v10[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_47;
    v10[2] = v41;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_23E1FFD40((uint64_t)aBlock);
    v3 = v23;
    v5 = v26;
    v2 = v25;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
    v8 = v24;
    v14 = v63;
  }
LABEL_41:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
LABEL_42:
  swift_release();
  swift_bridgeObjectRelease();
  v42 = (void *)objc_opt_self();
  v43 = (void *)sub_23E537454();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  v44 = objc_msgSend(v42, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v43, 1, aBlock);

  v45 = aBlock[0];
  if (v44)
  {
    v46 = sub_23E536E6C();
    v48 = v47;

    v49 = v60;
    v50 = objc_msgSend(v60, sel_applicationData);
    v51 = (void *)sub_23E536E48();
    v52 = (void *)sub_23E537538();
    objc_msgSend(v50, sel_setObject_forKeyedSubscript_, v51, v52);

    v53 = objc_msgSend(v49, sel_applicationData);
    v54 = (_QWORD *)swift_allocObject();
    v54[2] = v49;
    aBlock[4] = sub_23E393800;
    aBlock[5] = v54;
    aBlock[0] = (id)MEMORY[0x24BDAC760];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_23E50B358;
    aBlock[3] = &block_descriptor_30;
    v55 = _Block_copy(aBlock);
    v56 = v49;
    swift_release();
    objc_msgSend(v56, sel_updateApplicationData_completionHandler_, v53, v55);
    _Block_release(v55);

    sub_23E22C908(v46, v48);
  }
  else
  {
    v57 = v45;
    v58 = (void *)sub_23E536D10();

    swift_willThrow();
  }
}

void (*HMAccessory.customNearbyAccessoryIdentifiers.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  return sub_23E50CA50;
}

void sub_23E50CA50(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    HMAccessory.customNearbyAccessoryIdentifiers.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    HMAccessory.customNearbyAccessoryIdentifiers.setter(*a1);
  }
}

unint64_t sub_23E50CA94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D49E08;
  if (!qword_256D49E08)
  {
    v1 = sub_23E1E335C(255, &qword_256D42BF8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256D49E08);
  }
  return result;
}

uint64_t sub_23E50CAEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMAccessory.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E50CB18(char *a1)
{
  HMAccessory.shouldShowInDashboard.setter(*a1);
}

uint64_t sub_23E50CB3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMAccessory.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E50CB68(char *a1)
{
  HMAccessory.isFavorite.setter(*a1);
}

uint64_t sub_23E50CB8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMAccessory.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E50CBB8(char *a1)
{
  HMAccessory.contributesToHomeStatus.setter(*a1);
}

uint64_t sub_23E50CBDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMAccessory.showAsIndividualTiles.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E50CC08(char *a1)
{
  HMAccessory.showAsIndividualTiles.setter(*a1);
}

uint64_t sub_23E50CC2C@<X0>(uint64_t a1@<X8>)
{
  return HMAccessory.dateAdded.getter(a1);
}

uint64_t sub_23E50CC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  *a1 = result;
  return result;
}

void sub_23E50CC78()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  HMAccessory.customNearbyAccessoryIdentifiers.setter(v0);
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Bool _, Swift::String forKey)
{
  void *v2;
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, _);
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::OpaquePointer _, Swift::String forKey)
{
  void *v2;
  void *v3;
  id v4;

  v3 = (void *)sub_23E537454();
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

{
  void *v2;
  void *v3;
  id v4;

  v3 = (void *)sub_23E5377E4();
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

{
  void *v2;
  void *v3;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  v3 = (void *)sub_23E5377E4();
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

Swift::String_optional __swiftcall HMApplicationData.string(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  int v4;
  BOOL v5;
  uint64_t v6;
  void *v7;
  Swift::String_optional result;
  uint64_t v9;
  void *v10;

  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    v4 = swift_dynamicCast();
    v5 = v4 == 0;
    if (v4)
      v6 = v9;
    else
      v6 = 0;
    if (v5)
      v7 = 0;
    else
      v7 = v10;
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  result.value._object = v7;
  result.value._countAndFlagsBits = v6;
  return result;
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::String _, Swift::String forKey)
{
  sub_23E50CF48(_._countAndFlagsBits, (uint64_t)_._object, forKey._countAndFlagsBits, (uint64_t)forKey._object, MEMORY[0x24BDCF9E0]);
}

Swift::Void __swiftcall HMApplicationData.clear(forKey:)(Swift::String forKey)
{
  void *v1;
  id v2;

  v2 = (id)sub_23E537538();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, 0, v2);

}

void HMApplicationData.set(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E50CF48(a1, a2, a3, a4, MEMORY[0x24BDCDCA0]);
}

void sub_23E50CF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  void *v5;
  void *v6;
  id v7;

  v6 = (void *)a5();
  v7 = (id)sub_23E537538();
  objc_msgSend(v5, sel_setObject_forKeyedSubscript_, v6, v7);

}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.array(forKey:)(Swift::String forKey)
{
  void *v1;
  Swift::Bool v2;
  Swift::OpaquePointer_optional result;

  v1 = (void *)sub_23E50D664(forKey._countAndFlagsBits, (uint64_t)forKey._object, &qword_254332BB0);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.stringArray(forKey:)(Swift::String forKey)
{
  void *v1;
  Swift::Bool v2;
  Swift::OpaquePointer_optional result;

  v1 = (void *)sub_23E50D664(forKey._countAndFlagsBits, (uint64_t)forKey._object, &qword_254332B98);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

Swift::Bool_optional __swiftcall HMApplicationData.BOOL(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  Swift::Bool_optional v4;
  Swift::Bool_optional v6;

  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  v4.value = 2;
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    if (swift_dynamicCast())
      return v6;
    else
      return (Swift::Bool_optional)2;
  }
  return v4;
}

uint64_t HMApplicationData.data(forKey:)()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;

  v1 = (void *)sub_23E537538();
  v2 = objc_msgSend(v0, sel_objectForKeyedSubscript_, v1);

  if (!v2)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if (swift_dynamicCast())
    return v4;
  else
    return 0;
}

uint64_t HMApplicationData.date(forKey:)@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;

  v3 = (void *)sub_23E537538();
  v4 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    v5 = sub_23E536F20();
    v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    v8 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

void HMApplicationData.set(_:forKey:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = v0;
  v2 = (void *)sub_23E536EA8();
  v3 = (id)sub_23E537538();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v2, v3);

}

Swift::Double_optional __swiftcall HMApplicationData.double(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  double v4;
  Swift::Bool v5;
  Swift::Bool v6;
  Swift::Double_optional result;

  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    if (swift_dynamicCast())
      v5 = v6;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  result.value = v4;
  result.is_nil = v5;
  return result;
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Double _, Swift::String forKey)
{
  void *v2;
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, _);
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

void __swiftcall HMApplicationData.float(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
  void *v2;
  void *v3;
  id v4;

  v3 = (void *)sub_23E537538();
  v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    swift_dynamicCast();
  }
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Float _, Swift::String forKey)
{
  void *v2;
  id v4;
  double v5;
  id v6;
  id v7;

  v4 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
  *(Swift::Float *)&v5 = _;
  v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  v7 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v6, v7);

}

Swift::Int_optional __swiftcall HMApplicationData.int(forKey:)(Swift::String forKey)
{
  void *v1;
  void *v2;
  id v3;
  int v4;
  Swift::Int v5;
  char v6;
  Swift::Int v7;
  Swift::Int_optional result;

  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    v4 = swift_dynamicCast();
    if (v4)
      v5 = v7;
    else
      v5 = 0;
    v6 = v4 ^ 1;
  }
  else
  {
    v5 = 0;
    v6 = 1;
  }
  result.value = v5;
  result.is_nil = v6;
  return result;
}

Swift::Void __swiftcall HMApplicationData.set(_:forKey:)(Swift::Int _, Swift::String forKey)
{
  void *v2;
  id v3;
  id v4;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, _);
  v4 = (id)sub_23E537538();
  objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

}

Swift::OpaquePointer_optional __swiftcall HMApplicationData.dictionary(forKey:)(Swift::String forKey)
{
  void *v1;
  Swift::Bool v2;
  Swift::OpaquePointer_optional result;

  v1 = (void *)sub_23E50D664(forKey._countAndFlagsBits, (uint64_t)forKey._object, (uint64_t *)&unk_256D494A0);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

uint64_t sub_23E50D664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  void *v3;
  void *v5;
  id v6;
  uint64_t v8;

  v5 = (void *)sub_23E537538();
  v6 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v5);

  if (!v6)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if (swift_dynamicCast())
    return v8;
  else
    return 0;
}

uint64_t static MatterTileMetadata.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EF00 != -1)
    swift_once();
  v2 = type metadata accessor for MatterTileMetadata();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D49E10);
  return sub_23E50EF14(v3, a1);
}

uint64_t MatterTileMetadata.init(displayName:iconIdentifier:associatedType:tileSize:favorite:showOnDashboard:includeInStatus:dateAdded:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __int16 a10, uint64_t a11)
{
  char v11;
  uint64_t v12;

  v11 = *a7;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = v11;
  *(_BYTE *)(a9 + 49) = a8;
  *(_WORD *)(a9 + 50) = a10;
  v12 = a9 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  return sub_23E2DC3AC(a11, v12);
}

uint64_t MatterTileMetadata.init(device:endpointId:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *__return_ptr, uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  LOBYTE(v44) = 6;
  v9 = *(void (**)(_QWORD *__return_ptr, uint64_t *, _QWORD, uint64_t, uint64_t))(a1 + 104);
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (!v47)
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v11 = 2;
    goto LABEL_11;
  }
  v10 = sub_23E5380A8();
  swift_bridgeObjectRelease();
  if (v10 == 1)
    v11 = 1;
  else
    v11 = 2;
  if (!v10)
    v11 = 0;
LABEL_11:
  v42 = v11;
  LOBYTE(v44) = 0;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    v12 = swift_dynamicCast();
    if (v12)
      v13 = v44;
    else
      v13 = 0;
    if (v12)
      v14 = v45;
    else
      v14 = 0;
    v40 = v14;
    v41 = v13;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v40 = 0;
    v41 = 0;
  }
  LOBYTE(v44) = 2;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    v15 = swift_dynamicCast();
    if (v15)
      v16 = v44;
    else
      v16 = 0;
    if (v15)
      v17 = v45;
    else
      v17 = 0;
    v38 = v17;
    v39 = v16;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v38 = 0;
    v39 = 0;
  }
  LOBYTE(v44) = 7;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    v18 = swift_dynamicCast();
    if (v18)
      v19 = v44;
    else
      v19 = 0;
    if (v18)
      v20 = v45;
    else
      v20 = 0;
    v36 = v20;
    v37 = v19;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v36 = 0;
    v37 = 0;
  }
  LOBYTE(v44) = 3;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    v21 = swift_dynamicCast();
    v22 = v44;
    if (!v21)
      v22 = 2;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v22 = 2;
  }
  v35 = v22;
  LOBYTE(v44) = 4;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    if (swift_dynamicCast())
      v23 = v44;
    else
      v23 = 2;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v23 = 2;
  }
  LOBYTE(v44) = 8;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  if (v47)
  {
    if (swift_dynamicCast())
      v24 = v44;
    else
      v24 = 2;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v24 = 2;
  }
  LOBYTE(v44) = 9;
  v9(v46, &v44, a2 & 0x1FFFF, ObjectType, a1);
  swift_unknownObjectRelease();
  if (v47)
  {
    v25 = sub_23E536F20();
    v26 = (uint64_t)v43;
    v27 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v26, v27 ^ 1u, 1, v25);
  }
  else
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254332260);
    v28 = sub_23E536F20();
    v26 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v43, 1, 1, v28);
  }
  v29 = v40;
  *(_QWORD *)a3 = v41;
  *(_QWORD *)(a3 + 8) = v29;
  v30 = v38;
  *(_QWORD *)(a3 + 16) = v39;
  *(_QWORD *)(a3 + 24) = v30;
  v31 = v36;
  *(_QWORD *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 40) = v31;
  *(_BYTE *)(a3 + 48) = v42;
  *(_BYTE *)(a3 + 49) = v35;
  *(_BYTE *)(a3 + 50) = v23;
  *(_BYTE *)(a3 + 51) = v24;
  v32 = type metadata accessor for MatterTileMetadata();
  return sub_23E2DC3AC(v26, a3 + *(int *)(v32 + 44));
}

uint64_t MatterTileMetadata.displayName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterTileMetadata.iconIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterTileMetadata.associatedType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void MatterTileMetadata.tileSize.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t MatterTileMetadata.favorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t MatterTileMetadata.showOnDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t MatterTileMetadata.includeInStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t MatterTileMetadata.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  return sub_23E2DAD9C(v3, a1);
}

uint64_t MatterTileMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E536F20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 24))
      goto LABEL_3;
LABEL_6:
    sub_23E538474();
    if (*(_QWORD *)(v0 + 40))
      goto LABEL_4;
    goto LABEL_7;
  }
  sub_23E538474();
  if (!*(_QWORD *)(v0 + 24))
    goto LABEL_6;
LABEL_3:
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 40))
  {
LABEL_4:
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_23E538474();
LABEL_8:
  if (*(_BYTE *)(v0 + 48) == 2)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  if (*(_BYTE *)(v0 + 49) != 2)
    sub_23E538474();
  sub_23E538474();
  if (*(_BYTE *)(v0 + 50) != 2)
    sub_23E538474();
  sub_23E538474();
  if (*(_BYTE *)(v0 + 51) != 2)
    sub_23E538474();
  sub_23E538474();
  v8 = type metadata accessor for MatterTileMetadata();
  sub_23E2DAD9C(v0 + *(int *)(v8 + 44), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_23E538474();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_23E50E078()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E50E0B0 + 4 * byte_23E55A8E0[*v0]))(0x4E79616C70736964, 0xEB00000000656D61);
}

uint64_t sub_23E50E0B0()
{
  return 0x6E6564496E6F6369;
}

uint64_t sub_23E50E0D4()
{
  return 0x746169636F737361;
}

uint64_t sub_23E50E0F8()
{
  return 0x657A6953656C6974;
}

uint64_t sub_23E50E110()
{
  return 0x657469726F766166;
}

uint64_t sub_23E50E128()
{
  return 0x61446E4F776F6873;
}

uint64_t sub_23E50E14C()
{
  return 0x496564756C636E69;
}

uint64_t sub_23E50E170()
{
  return 0x6564644165746164;
}

uint64_t sub_23E50E18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E50FA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E50E1B0()
{
  sub_23E50EF58();
  return sub_23E538570();
}

uint64_t sub_23E50E1D8()
{
  sub_23E50EF58();
  return sub_23E53857C();
}

uint64_t MatterTileMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E50EF58();
  sub_23E5384EC();
  v10[15] = 0;
  sub_23E5381EC();
  if (!v2)
  {
    v10[14] = 1;
    sub_23E5381EC();
    v10[13] = 2;
    sub_23E5381EC();
    v10[12] = *(_BYTE *)(v3 + 48);
    v10[11] = 3;
    sub_23E50EF9C();
    sub_23E538234();
    v10[10] = 4;
    sub_23E5381F8();
    v10[9] = 5;
    sub_23E5381F8();
    v10[8] = 6;
    sub_23E5381F8();
    type metadata accessor for MatterTileMetadata();
    v10[7] = 7;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MatterTileMetadata.hashValue.getter()
{
  sub_23E53845C();
  MatterTileMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t MatterTileMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v21 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E40);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23E50EF58();
  v13 = v24;
  sub_23E5384E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  v24 = v5;
  v33 = 0;
  v14 = v22;
  *(_QWORD *)v11 = sub_23E5380D8();
  *((_QWORD *)v11 + 1) = v15;
  v32 = 1;
  *((_QWORD *)v11 + 2) = sub_23E5380D8();
  *((_QWORD *)v11 + 3) = v16;
  v31 = 2;
  *((_QWORD *)v11 + 4) = sub_23E5380D8();
  *((_QWORD *)v11 + 5) = v17;
  v29 = 3;
  sub_23E50EFE0();
  sub_23E538108();
  v11[48] = v30;
  v28 = 4;
  v11[49] = sub_23E5380E4();
  v27 = 5;
  v11[50] = sub_23E5380E4();
  v26 = 6;
  v11[51] = sub_23E5380E4();
  sub_23E536F20();
  v25 = 7;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v18 = (uint64_t)v24;
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  sub_23E2DC3AC(v18, (uint64_t)&v11[*(int *)(v9 + 44)]);
  sub_23E50EF14((uint64_t)v11, v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
  return sub_23E50F024((uint64_t)v11);
}

uint64_t sub_23E50E894()
{
  sub_23E53845C();
  MatterTileMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E50E8D4()
{
  sub_23E53845C();
  MatterTileMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E50E910@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterTileMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E50E924(_QWORD *a1)
{
  return MatterTileMetadata.encode(to:)(a1);
}

double sub_23E50E938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v0 = type metadata accessor for MatterTileMetadata();
  __swift_allocate_value_buffer(v0, qword_256D49E10);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256D49E10);
  v2 = v1 + *(int *)(v0 + 44);
  v3 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)v1 = 0u;
  *(_DWORD *)(v1 + 48) = 33686018;
  return result;
}

BOOL _s13HomeDataModel18MatterTileMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  int v37;
  _BOOL4 v38;
  int v39;
  int v40;
  _BOOL4 v41;
  int v42;
  int v43;
  _BOOL4 v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char v47;
  void (*v48)(char *, uint64_t);
  _QWORD v49[3];
  uint64_t v50;

  v4 = sub_23E536F20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v49 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v49 - v18;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a2 + 8);
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_8;
  }
  if (!v21)
    return 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v20 == v21 || (v22 = sub_23E538354(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a2 + 24);
    if (v24)
    {
      if (!v25)
        return 0;
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v24 != v25)
      {
        v26 = sub_23E538354();
        result = 0;
        if ((v26 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    v27 = *(_QWORD *)(a1 + 40);
    v28 = *(_QWORD *)(a2 + 40);
    if (v27)
    {
      if (!v28)
        return 0;
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v27 != v28)
      {
        v29 = sub_23E538354();
        result = 0;
        if ((v29 & 1) == 0)
          return result;
      }
    }
    else if (v28)
    {
      return 0;
    }
    v30 = *(unsigned __int8 *)(a1 + 48);
    v31 = *(unsigned __int8 *)(a2 + 48);
    if (v30 == 2)
    {
      if (v31 != 2)
        return 0;
    }
    else
    {
      if (v31 == 2)
        return 0;
      if ((v30 & 1) != 0)
        v32 = 0xD000000000000019;
      else
        v32 = 0xD000000000000018;
      if ((v30 & 1) != 0)
        v33 = 0x800000023E560130;
      else
        v33 = 0x800000023E560110;
      if ((v31 & 1) != 0)
        v34 = 0xD000000000000019;
      else
        v34 = 0xD000000000000018;
      if ((v31 & 1) != 0)
        v35 = 0x800000023E560130;
      else
        v35 = 0x800000023E560110;
      if (v32 == v34 && v33 == v35)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v49[1] = v33;
        v49[2] = v35;
        LODWORD(v50) = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = 0;
        if ((v50 & 1) == 0)
          return result;
      }
    }
    v36 = *(unsigned __int8 *)(a1 + 49);
    v37 = *(unsigned __int8 *)(a2 + 49);
    if (v36 == 2)
    {
      if (v37 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v38 = (v36 & 1) == 0;
      if (v37 == 2 || ((v38 ^ v37) & 1) == 0)
        return result;
    }
    v39 = *(unsigned __int8 *)(a1 + 50);
    v40 = *(unsigned __int8 *)(a2 + 50);
    if (v39 == 2)
    {
      if (v40 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v41 = (v39 & 1) == 0;
      if (v40 == 2 || ((v41 ^ v40) & 1) == 0)
        return result;
    }
    v42 = *(unsigned __int8 *)(a1 + 51);
    v43 = *(unsigned __int8 *)(a2 + 51);
    if (v42 == 2)
    {
      if (v43 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v44 = (v42 & 1) == 0;
      if (v43 == 2 || ((v44 ^ v43) & 1) == 0)
        return result;
    }
    v50 = type metadata accessor for MatterTileMetadata();
    sub_23E2DAD9C(a1 + *(int *)(v50 + 44), (uint64_t)v19);
    sub_23E2DAD9C(a2 + *(int *)(v50 + 44), (uint64_t)v17);
    v45 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E2DAD9C((uint64_t)v19, (uint64_t)v10);
    sub_23E2DAD9C((uint64_t)v17, v45);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v46((uint64_t)v10, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
      sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
      if (v46(v45, 1, v4) == 1)
      {
        sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
        return 1;
      }
      goto LABEL_62;
    }
    sub_23E2DAD9C((uint64_t)v10, (uint64_t)v14);
    if (v46(v45, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
      sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_62:
      sub_23E1E7C64((uint64_t)v10, &qword_2543330E8);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v45, v4);
    sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v47 = sub_23E537514();
    v48 = *(void (**)(char *, uint64_t))(v5 + 8);
    v48(v7, v4);
    sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
    v48(v14, v4);
    sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
    return (v47 & 1) != 0;
  }
  return result;
}

uint64_t type metadata accessor for MatterTileMetadata()
{
  uint64_t result;

  result = qword_254333C00;
  if (!qword_254333C00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E50EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E50EF58()
{
  unint64_t result;

  result = qword_256D49E30;
  if (!qword_256D49E30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AAEC, &type metadata for MatterTileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49E30);
  }
  return result;
}

unint64_t sub_23E50EF9C()
{
  unint64_t result;

  result = qword_256D49E38;
  if (!qword_256D49E38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for TileSize, &type metadata for TileSize);
    atomic_store(result, (unint64_t *)&qword_256D49E38);
  }
  return result;
}

unint64_t sub_23E50EFE0()
{
  unint64_t result;

  result = qword_256D49E48;
  if (!qword_256D49E48)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for TileSize, &type metadata for TileSize);
    atomic_store(result, (unint64_t *)&qword_256D49E48);
  }
  return result;
}

uint64_t sub_23E50F024(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E50F060()
{
  return sub_23E1EE1C4(&qword_256D49E50, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
}

_QWORD *initializeBufferWithCopyOfBuffer for MatterTileMetadata(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    v8 = *(int *)(a3 + 44);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for MatterTileMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_23E536F20();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 44);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  v6 = *(int *)(a3 + 44);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23E536F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 44);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for MatterTileMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v9 = *(int *)(a3 + 44);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_23E536F20();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterTileMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E50F6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for MatterTileMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E50F774(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_23E50F7EC()
{
  unint64_t v0;

  sub_23E2DCB54();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for MatterTileMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E50F8C0 + 4 * byte_23E55A8ED[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E50F8F4 + 4 * byte_23E55A8E8[v4]))();
}

uint64_t sub_23E50F8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E50F8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E50F904);
  return result;
}

uint64_t sub_23E50F910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E50F918);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E50F91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E50F924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterTileMetadata.CodingKeys()
{
  return &type metadata for MatterTileMetadata.CodingKeys;
}

unint64_t sub_23E50F944()
{
  unint64_t result;

  result = qword_256D49E58;
  if (!qword_256D49E58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AAC4, &type metadata for MatterTileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49E58);
  }
  return result;
}

unint64_t sub_23E50F98C()
{
  unint64_t result;

  result = qword_256D49E60;
  if (!qword_256D49E60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AA34, &type metadata for MatterTileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49E60);
  }
  return result;
}

unint64_t sub_23E50F9D4()
{
  unint64_t result;

  result = qword_256D49E68;
  if (!qword_256D49E68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AA5C, &type metadata for MatterTileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49E68);
  }
  return result;
}

uint64_t sub_23E50FA18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496E6F6369 && a2 == 0xEE00726569666974 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEE00657079546465 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A6953656C6974 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61446E4F776F6873 && a2 == 0xEF6472616F626873 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x496564756C636E69 && a2 == 0xEF7375746174536ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t PredictionKind.hash(into:)()
{
  return sub_23E538468();
}

BOOL static PredictionKind.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23E50FE48()
{
  sub_23E510520();
  return sub_23E538570();
}

uint64_t sub_23E50FE70()
{
  sub_23E510520();
  return sub_23E53857C();
}

uint64_t sub_23E50FE98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E50FEC8 + 4 * byte_23E55AB40[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_23E50FEC8()
{
  return 0x656E656373;
}

uint64_t sub_23E50FEDC()
{
  return 0x726F737365636361;
}

uint64_t sub_23E50FEF8()
{
  return 0x4765636976726573;
}

uint64_t sub_23E50FF18()
{
  return 0x737953616964656DLL;
}

uint64_t sub_23E50FF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E511318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E50FF5C()
{
  sub_23E510454();
  return sub_23E538570();
}

uint64_t sub_23E50FF84()
{
  sub_23E510454();
  return sub_23E53857C();
}

uint64_t sub_23E50FFAC()
{
  sub_23E510498();
  return sub_23E538570();
}

uint64_t sub_23E50FFD4()
{
  sub_23E510498();
  return sub_23E53857C();
}

uint64_t sub_23E50FFFC()
{
  sub_23E510564();
  return sub_23E538570();
}

uint64_t sub_23E510024()
{
  sub_23E510564();
  return sub_23E53857C();
}

uint64_t sub_23E51004C()
{
  sub_23E5104DC();
  return sub_23E538570();
}

uint64_t sub_23E510074()
{
  sub_23E5104DC();
  return sub_23E53857C();
}

uint64_t sub_23E51009C()
{
  sub_23E5105A8();
  return sub_23E538570();
}

uint64_t sub_23E5100C4()
{
  sub_23E5105A8();
  return sub_23E53857C();
}

void PredictionKind.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[11];
  uint64_t v13;
  uint64_t v14;

  v13 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E70);
  v12[9] = *(_QWORD *)(v3 - 8);
  v12[10] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v12[8] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E78);
  v12[6] = *(_QWORD *)(v5 - 8);
  v12[7] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v12[5] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E80);
  v12[3] = *(_QWORD *)(v7 - 8);
  v12[4] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v12[2] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E88);
  v12[0] = *(_QWORD *)(v9 - 8);
  v12[1] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E90);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49E98);
  v14 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E510454();
  sub_23E5384EC();
  __asm { BR              X10 }
}

uint64_t sub_23E5102E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 69) = 0;
  sub_23E5105A8();
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 8))(v2, v1);
}

unint64_t sub_23E510454()
{
  unint64_t result;

  result = qword_256D49EA0;
  if (!qword_256D49EA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B318, &type metadata for PredictionKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EA0);
  }
  return result;
}

unint64_t sub_23E510498()
{
  unint64_t result;

  result = qword_256D49EA8;
  if (!qword_256D49EA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B2C8, &type metadata for PredictionKind.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EA8);
  }
  return result;
}

unint64_t sub_23E5104DC()
{
  unint64_t result;

  result = qword_256D49EB0;
  if (!qword_256D49EB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B278, &type metadata for PredictionKind.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EB0);
  }
  return result;
}

unint64_t sub_23E510520()
{
  unint64_t result;

  result = qword_256D49EB8;
  if (!qword_256D49EB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B228, &type metadata for PredictionKind.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EB8);
  }
  return result;
}

unint64_t sub_23E510564()
{
  unint64_t result;

  result = qword_256D49EC0;
  if (!qword_256D49EC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B1D8, &type metadata for PredictionKind.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EC0);
  }
  return result;
}

unint64_t sub_23E5105A8()
{
  unint64_t result;

  result = qword_256D49EC8;
  if (!qword_256D49EC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B188, &type metadata for PredictionKind.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49EC8);
  }
  return result;
}

uint64_t PredictionKind.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

char *PredictionKind.init(from:)(_QWORD *a1)
{
  return sub_23E511568(a1);
}

char *sub_23E510644@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_23E511568(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

void sub_23E51066C(_QWORD *a1)
{
  unsigned __int8 *v1;

  PredictionKind.encode(to:)(a1, *v1);
}

uint64_t StaticUserActionPrediction.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

double StaticUserActionPrediction.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 20));
}

uint64_t StaticUserActionPrediction.serviceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 24);
  return sub_23E1FC2F8(v3, a1);
}

uint64_t StaticUserActionPrediction.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticUserActionPrediction() + 28));
}

uint64_t StaticUserActionPrediction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1EE1C4(&qword_254333DA0, v3, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v10 = type metadata accessor for StaticUserActionPrediction();
  sub_23E538498();
  sub_23E1FC2F8(v1 + *(int *)(v10 + 24), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v2);
    sub_23E538474();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  }
  return sub_23E538468();
}

uint64_t sub_23E5108D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E5108F4 + 4 * byte_23E55AB4A[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23E5108F4()
{
  return 0x65726F6373;
}

uint64_t sub_23E510908()
{
  return 0x4965636976726573;
}

uint64_t sub_23E510924()
{
  return 1684957547;
}

uint64_t sub_23E510934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E512AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E510958()
{
  sub_23E511A84();
  return sub_23E538570();
}

uint64_t sub_23E510980()
{
  sub_23E511A84();
  return sub_23E53857C();
}

uint64_t StaticUserActionPrediction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49ED0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E511A84();
  sub_23E5384EC();
  v16 = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticUserActionPrediction();
    v15 = 1;
    sub_23E538288();
    v14 = 2;
    sub_23E538234();
    v13 = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    sub_23E511AC8();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticUserActionPrediction.hashValue.getter()
{
  sub_23E53845C();
  StaticUserActionPrediction.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticUserActionPrediction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23E536F80();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49EE8);
  v7 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticUserActionPrediction();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E511A84();
  v29 = v9;
  v13 = (uint64_t)v30;
  sub_23E5384E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = a1;
  v14 = v12;
  v35 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v27;
  v16 = v26;
  sub_23E538180();
  v23 = v5;
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v18 = (uint64_t)v14;
  v17(v14, v28, v16);
  v34 = 1;
  sub_23E53815C();
  v19 = v10;
  *(_QWORD *)(v18 + *(int *)(v10 + 20)) = v20;
  v33 = 2;
  v21 = (uint64_t)v25;
  sub_23E538108();
  sub_23E201080(v21, v18 + *(int *)(v19 + 24));
  v31 = 3;
  sub_23E511B0C();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v15);
  *(_BYTE *)(v18 + *(int *)(v19 + 28)) = v32;
  sub_23E511B50(v18, v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return sub_23E511B94(v18);
}

uint64_t sub_23E510F4C()
{
  sub_23E53845C();
  StaticUserActionPrediction.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E510F8C()
{
  sub_23E53845C();
  StaticUserActionPrediction.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E510FC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticUserActionPrediction.init(from:)(a1, a2);
}

uint64_t sub_23E510FD8(_QWORD *a1)
{
  return StaticUserActionPrediction.encode(to:)(a1);
}

BOOL _s13HomeDataModel26StaticUserActionPredictionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v29 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v29 - v18;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v20 = type metadata accessor for StaticUserActionPrediction();
  if (*(double *)(a1 + *(int *)(v20 + 20)) != *(double *)(a2 + *(int *)(v20 + 20)))
    return 0;
  v21 = *(int *)(v20 + 24);
  v22 = a1;
  v23 = v20;
  v30 = v22;
  sub_23E1FC2F8(v22 + v21, (uint64_t)v19);
  v31 = v23;
  v32 = a2;
  sub_23E1FC2F8(a2 + *(int *)(v23 + 24), (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E1FC2F8((uint64_t)v19, (uint64_t)v10);
  sub_23E1FC2F8((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    if (v25(v24, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
      return *(unsigned __int8 *)(v30 + *(int *)(v31 + 28)) == *(unsigned __int8 *)(v32 + *(int *)(v31 + 28));
    }
    goto LABEL_8;
  }
  sub_23E1FC2F8((uint64_t)v10, (uint64_t)v14);
  if (v25(v24, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_23E1E7C64((uint64_t)v10, &qword_254332798);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v27 = sub_23E537514();
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v7, v4);
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
  v28(v14, v4);
  sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
  if ((v27 & 1) != 0)
    return *(unsigned __int8 *)(v30 + *(int *)(v31 + 28)) == *(unsigned __int8 *)(v32 + *(int *)(v31 + 28));
  return 0;
}

uint64_t sub_23E511318(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E656373 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xEC00000070756F72 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737953616964656DLL && a2 == 0xEB000000006D6574)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

char *sub_23E511568(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[11];
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49FB8);
  v26[9] = *(_QWORD *)(v2 - 8);
  v26[10] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49FC0);
  v26[6] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49FC8);
  v26[7] = *(_QWORD *)(v5 - 8);
  v26[8] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49FD0);
  v26[4] = *(_QWORD *)(v7 - 8);
  v26[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49FD8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D49FE0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23E510454();
  v18 = v33;
  sub_23E5384E0();
  if (!v18)
  {
    v26[2] = v9;
    v26[3] = v12;
    v26[1] = v10;
    v33 = 0;
    v19 = v14;
    v20 = sub_23E5381C8();
    v21 = v13;
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v22 = sub_23E537ED4();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v24 = &type metadata for PredictionKind;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v21);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v16;
}

void sub_23E5118DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 68) = 1;
  sub_23E510564();
  v4 = *(_QWORD *)(v3 - 88);
  sub_23E5380C0();
  if (v4)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
    JUMPOUT(0x23E5118B0);
  }
  JUMPOUT(0x23E511A1CLL);
}

void sub_23E511920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 67) = 2;
  sub_23E510520();
  v4 = *(_QWORD *)(v3 - 88);
  sub_23E5380C0();
  if (!v4)
    JUMPOUT(0x23E51195CLL);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  JUMPOUT(0x23E5118B0);
}

void sub_23E511968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 66) = 3;
  sub_23E5104DC();
  v5 = *(_QWORD *)(v4 - 88);
  sub_23E5380C0();
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 176) + 8))(v2, *(_QWORD *)(v4 - 136));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
    __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v4 - 96));
    JUMPOUT(0x23E5118B4);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  JUMPOUT(0x23E5118B0);
}

void sub_23E5119B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 - 65) = 4;
  sub_23E510498();
  v1 = *(_QWORD *)(v0 - 88);
  sub_23E5380C0();
  if (v1)
    JUMPOUT(0x23E5119ECLL);
  JUMPOUT(0x23E511A1CLL);
}

uint64_t type metadata accessor for StaticUserActionPrediction()
{
  uint64_t result;

  result = qword_254332B18;
  if (!qword_254332B18)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23E511A84()
{
  unint64_t result;

  result = qword_256D49ED8;
  if (!qword_256D49ED8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B138, &type metadata for StaticUserActionPrediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49ED8);
  }
  return result;
}

unint64_t sub_23E511AC8()
{
  unint64_t result;

  result = qword_256D49EE0;
  if (!qword_256D49EE0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for PredictionKind, &type metadata for PredictionKind);
    atomic_store(result, (unint64_t *)&qword_256D49EE0);
  }
  return result;
}

unint64_t sub_23E511B0C()
{
  unint64_t result;

  result = qword_256D49EF0;
  if (!qword_256D49EF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for PredictionKind, &type metadata for PredictionKind);
    atomic_store(result, (unint64_t *)&qword_256D49EF0);
  }
  return result;
}

uint64_t sub_23E511B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticUserActionPrediction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E511B94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticUserActionPrediction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E511BD4()
{
  unint64_t result;

  result = qword_256D49EF8;
  if (!qword_256D49EF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for PredictionKind, &type metadata for PredictionKind);
    atomic_store(result, (unint64_t *)&qword_256D49EF8);
  }
  return result;
}

uint64_t sub_23E511C18()
{
  return sub_23E1EE1C4(qword_256D49F00, (uint64_t (*)(uint64_t))type metadata accessor for StaticUserActionPrediction, (uint64_t)&protocol conformance descriptor for StaticUserActionPrediction);
}

ValueMetadata *type metadata accessor for PredictionKind()
{
  return &type metadata for PredictionKind;
}

char *initializeBufferWithCopyOfBuffer for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t destroy for StaticUserActionPrediction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithCopy for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v9 = a3[6];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *assignWithTake for StaticUserActionPrediction(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticUserActionPrediction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E512248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 5)
    return v14 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StaticUserActionPrediction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E5122FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 4;
  return result;
}

void sub_23E5123A4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E20BB5C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for StaticUserActionPrediction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E512488 + 4 * byte_23E55AB58[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E5124BC + 4 * byte_23E55AB53[v4]))();
}

uint64_t sub_23E5124BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5124C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E5124CCLL);
  return result;
}

uint64_t sub_23E5124D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E5124E0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E5124E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5124EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticUserActionPrediction.CodingKeys()
{
  return &type metadata for StaticUserActionPrediction.CodingKeys;
}

uint64_t _s13HomeDataModel14PredictionKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E512554 + 4 * byte_23E55AB62[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E512588 + 4 * byte_23E55AB5D[v4]))();
}

uint64_t sub_23E512588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E512590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E512598);
  return result;
}

uint64_t sub_23E5125A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E5125ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E5125B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5125B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PredictionKind.CodingKeys()
{
  return &type metadata for PredictionKind.CodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.UnknownCodingKeys()
{
  return &type metadata for PredictionKind.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.SceneCodingKeys()
{
  return &type metadata for PredictionKind.SceneCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.AccessoryCodingKeys()
{
  return &type metadata for PredictionKind.AccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.ServiceGroupCodingKeys()
{
  return &type metadata for PredictionKind.ServiceGroupCodingKeys;
}

ValueMetadata *type metadata accessor for PredictionKind.MediaSystemCodingKeys()
{
  return &type metadata for PredictionKind.MediaSystemCodingKeys;
}

unint64_t sub_23E512628()
{
  unint64_t result;

  result = qword_256D49F38;
  if (!qword_256D49F38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B058, &type metadata for PredictionKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F38);
  }
  return result;
}

unint64_t sub_23E512670()
{
  unint64_t result;

  result = qword_256D49F40;
  if (!qword_256D49F40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B110, &type metadata for StaticUserActionPrediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F40);
  }
  return result;
}

unint64_t sub_23E5126B8()
{
  unint64_t result;

  result = qword_256D49F48;
  if (!qword_256D49F48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B080, &type metadata for StaticUserActionPrediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F48);
  }
  return result;
}

unint64_t sub_23E512700()
{
  unint64_t result;

  result = qword_256D49F50;
  if (!qword_256D49F50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B0A8, &type metadata for StaticUserActionPrediction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F50);
  }
  return result;
}

unint64_t sub_23E512748()
{
  unint64_t result;

  result = qword_256D49F58;
  if (!qword_256D49F58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AF78, &type metadata for PredictionKind.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F58);
  }
  return result;
}

unint64_t sub_23E512790()
{
  unint64_t result;

  result = qword_256D49F60;
  if (!qword_256D49F60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AFA0, &type metadata for PredictionKind.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F60);
  }
  return result;
}

unint64_t sub_23E5127D8()
{
  unint64_t result;

  result = qword_256D49F68;
  if (!qword_256D49F68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AF28, &type metadata for PredictionKind.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F68);
  }
  return result;
}

unint64_t sub_23E512820()
{
  unint64_t result;

  result = qword_256D49F70;
  if (!qword_256D49F70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AF50, &type metadata for PredictionKind.SceneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F70);
  }
  return result;
}

unint64_t sub_23E512868()
{
  unint64_t result;

  result = qword_256D49F78;
  if (!qword_256D49F78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AED8, &type metadata for PredictionKind.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F78);
  }
  return result;
}

unint64_t sub_23E5128B0()
{
  unint64_t result;

  result = qword_256D49F80;
  if (!qword_256D49F80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AF00, &type metadata for PredictionKind.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F80);
  }
  return result;
}

unint64_t sub_23E5128F8()
{
  unint64_t result;

  result = qword_256D49F88;
  if (!qword_256D49F88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AE88, &type metadata for PredictionKind.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F88);
  }
  return result;
}

unint64_t sub_23E512940()
{
  unint64_t result;

  result = qword_256D49F90;
  if (!qword_256D49F90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AEB0, &type metadata for PredictionKind.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F90);
  }
  return result;
}

unint64_t sub_23E512988()
{
  unint64_t result;

  result = qword_256D49F98;
  if (!qword_256D49F98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AE38, &type metadata for PredictionKind.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49F98);
  }
  return result;
}

unint64_t sub_23E5129D0()
{
  unint64_t result;

  result = qword_256D49FA0;
  if (!qword_256D49FA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AE60, &type metadata for PredictionKind.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49FA0);
  }
  return result;
}

unint64_t sub_23E512A18()
{
  unint64_t result;

  result = qword_256D49FA8;
  if (!qword_256D49FA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AFC8, &type metadata for PredictionKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49FA8);
  }
  return result;
}

unint64_t sub_23E512A60()
{
  unint64_t result;

  result = qword_256D49FB0;
  if (!qword_256D49FB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55AFF0, &type metadata for PredictionKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D49FB0);
  }
  return result;
}

uint64_t sub_23E512AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000044 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E512C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EF4F48[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E512D30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E512D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for TilesFilter();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23E512DB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E512DBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for TilesFilter();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for LightsStatusItem()
{
  uint64_t result;

  result = qword_256D4A040;
  if (!qword_256D4A040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E512E74@<X0>(_BOOL8 a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v50;
  int *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  _QWORD v74[3];

  v68 = a2;
  v67 = sub_23E536F80();
  v70 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v61 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v65 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v60 - v9;
  v10 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LightsStatusItem();
  v69 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v15;
  v18 = *(int *)(v15 + 20);
  v66 = v17;
  v19 = (uint64_t)&v17[v18];
  v20 = sub_23E4FDBC4((uint64_t)&unk_250EDD190);
  v72 = 28;
  v73 = v20;
  v74[1] = type metadata accessor for StaticService();
  LOWORD(v21) = 1;
  sub_23E53704C();
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  v60 = v19;
  v22 = swift_storeEnumTagMultiPayload();
  if (qword_256D3ED88 != -1)
    goto LABEL_22;
  while (1)
  {
    v74[0] = qword_256D42E48;
    MEMORY[0x24BDAC7A8](v22);
    LOWORD(v58) = v21;
    v59 = v74;
    swift_bridgeObjectRetain();
    v21 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E31057C, (uint64_t)(&v60 - 4), a1);
    v23 = sub_23E4FDC54(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = sub_23E26B68C(v23);
    if ((v26 & 1) != 0)
      break;
    v2 = v24;
    v21 = v25;
    while (1)
    {
      v27 = *(_DWORD *)(v23 + 36);
      if (v27 != (_DWORD)v21)
        break;
      v28 = 1 << *(_BYTE *)(v23 + 32);
      if (v2 == v28)
        goto LABEL_13;
      if (v2 < 0 || v2 >= v28)
        goto LABEL_20;
      if (((*(_QWORD *)(v23 + 56 + (((unint64_t)v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) == 0)
        goto LABEL_21;
      sub_23E1E2F50(*(_QWORD *)(v23 + 48) + *(_QWORD *)(v11 + 72) * v2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      a1 = StaticService.isActivated.getter();
      sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if (a1)
        goto LABEL_12;
      v2 = sub_23E2CD280(v2, v21, 0, v23);
      v21 = v29;
      if ((v30 & 1) != 0)
        goto LABEL_11;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    v22 = swift_once();
  }
LABEL_11:
  __break(1u);
LABEL_12:
  v27 = *(_DWORD *)(v23 + 36);
  v28 = 1 << *(_BYTE *)(v23 + 32);
LABEL_13:
  v58 = 0;
  v31 = sub_23E5140BC(v2, v21, 0, v28, v27, 0, v23, (uint64_t (*)(char *))sub_23E513F98);
  swift_bridgeObjectRelease();
  v32 = v70;
  if (v31 <= 0)
  {
    sub_23E1E2FA0(v60, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v68, 1, 1, v71);
  }
  else
  {
    v33 = (uint64_t)v64;
    v34 = v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v64, 1, 1, v67);
    static String.hfLocalized(_:)();
    v36 = v35;
    v38 = v37;
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v39 = swift_allocObject();
    v40 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v39 + 16) = xmmword_23E539650;
    v41 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v39 + 56) = v40;
    *(_QWORD *)(v39 + 64) = v41;
    *(_QWORD *)(v39 + 32) = v31;
    v42 = sub_23E537574();
    v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = v65;
    sub_23E1FC2F8(v33, v65);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v45, 1, v34) == 1)
    {
      v46 = v33;
      v47 = v61;
      sub_23E536F74();
      sub_23E273104(v46);
      sub_23E273104(v45);
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
    }
    else
    {
      sub_23E273104(v33);
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
      v47 = v61;
      v48(v61, v45, v34);
    }
    v50 = v68;
    v52 = (uint64_t)v62;
    v51 = (int *)v63;
    v48(v62, (uint64_t)v47, v34);
    v53 = (_QWORD *)(v52 + v51[5]);
    *v53 = 0;
    v53[1] = 0xE000000000000000;
    v54 = (_QWORD *)(v52 + v51[6]);
    *v54 = v36;
    v54[1] = v38;
    v55 = (uint64_t *)(v52 + v51[7]);
    *v55 = v42;
    v55[1] = v44;
    v56 = v52 + v51[8];
    *(_QWORD *)v56 = 0;
    *(_QWORD *)(v56 + 8) = 0;
    *(_QWORD *)(v56 + 16) = 0;
    *(_BYTE *)(v56 + 24) = -1;
    v57 = (uint64_t)v66;
    sub_23E514390(v52, (uint64_t)v66);
    sub_23E1E2F50(v57, v50, (uint64_t (*)(_QWORD))type metadata accessor for LightsStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v50, 0, 1, v71);
    return sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for LightsStatusItem);
  }
}

uint64_t sub_23E513460@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  char *v102;
  int v103;
  char *v104;
  char v105;
  char v106;
  uint64_t v107;
  char v108;

  v72 = a3;
  v103 = a2;
  v99 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41680);
  v6 = *(_QWORD *)(v5 - 8);
  v97 = v5;
  v98 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v94 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D78);
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v78 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D00);
  v82 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v73 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D80);
  v88 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v77 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D48298);
  v71 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v69 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A0);
  v81 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v102 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A078);
  v14 = *(_QWORD *)(v13 - 8);
  v92 = v13;
  v93 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v76 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A080);
  v17 = *(_QWORD *)(v16 - 8);
  v95 = v16;
  v96 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v89 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v90 = *(_QWORD *)(v87 - 8);
  v19 = MEMORY[0x24BDAC7A8](v87);
  v75 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v104 = (char *)v66 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v68 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v67 = *(_QWORD *)(v29 - 8);
  v30 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v91 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v74 = (char *)v66 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = *a1;
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v100 = *(void (**)(char *, uint64_t))(v26 + 8);
  v100(v28, v25);
  v108 = v103;
  sub_23E536C98();
  v66[1] = sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  v66[0] = sub_23E1F21F8();
  v34 = v30;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v22);
  v68 = *(_QWORD *)(v67 + 8);
  ((void (*)(char *, uint64_t))v68)(v32, v30);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v35 = v100;
  v100(v28, v25);
  v107 = v72;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D482A8);
  v36 = v69;
  sub_23E536C98();
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v35(v28, v25);
  sub_23E1F9710(&qword_256D482B0, &qword_256D48298, MEMORY[0x24BDCD130]);
  sub_23E1F9710(&qword_256D482B8, &qword_256D482A8, MEMORY[0x24BEE1718]);
  v37 = v70;
  sub_23E536C50();
  ((void (*)(char *, uint64_t))v68)(v32, v34);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v36, v37);
  sub_23E536CA4();
  swift_getKeyPath();
  v38 = v73;
  sub_23E536C38();
  swift_release();
  v35(v28, v25);
  v106 = v103;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D49D30);
  v39 = v78;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D49D18, &qword_256D49D00, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D49D98, &qword_256D49D78, MEMORY[0x24BDCD130]);
  sub_23E3901B4(&qword_256D49D28, &qword_256D49D30, (uint64_t (*)(void))sub_23E1F21F8, MEMORY[0x24BEE4AB8]);
  v40 = v77;
  v41 = v80;
  v42 = v83;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v39, v42);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v38, v41);
  sub_23E1F9710(&qword_256D482F0, &qword_256D482A0, MEMORY[0x24BDCCEF8]);
  v43 = MEMORY[0x24BDCD0F0];
  sub_23E1F9710(&qword_256D49DA0, &qword_256D49D80, MEMORY[0x24BDCD0F0]);
  v44 = v76;
  v45 = v102;
  v46 = v40;
  v47 = v79;
  v48 = v85;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v45, v47);
  sub_23E536CA4();
  swift_getKeyPath();
  v49 = v75;
  sub_23E536C38();
  swift_release();
  v100(v28, v25);
  v105 = 0;
  v50 = v94;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D4A088, &qword_256D4A078, MEMORY[0x24BDCCDB8]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D416F8, &qword_256D41680, MEMORY[0x24BDCD130]);
  v51 = v89;
  v52 = v44;
  v53 = v50;
  v54 = v92;
  v55 = v87;
  v56 = v97;
  sub_23E536C74();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v56);
  v57 = *(void (**)(char *, uint64_t))(v90 + 8);
  v57(v49, v55);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v52, v54);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A090);
  v59 = v99;
  v99[3] = v58;
  v59[4] = sub_23E5143FC(&qword_256D4A098, &qword_256D4A090, (uint64_t (*)(void))sub_23E2BE714, sub_23E5143D8);
  __swift_allocate_boxed_opaque_existential_1(v59);
  sub_23E1F9710(&qword_256D41808, &qword_256D417B0, v43);
  sub_23E1F9710((unint64_t *)&unk_256D4A0B0, &qword_256D4A080, MEMORY[0x24BDCCD80]);
  v60 = v74;
  v61 = v104;
  v62 = v51;
  v63 = v86;
  v64 = v95;
  sub_23E536C74();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v62, v64);
  v57(v61, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v60, v63);
}

BOOL sub_23E513F98()
{
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  return StaticService.isActivated.getter();
}

uint64_t sub_23E513FD0(uint64_t result, uint64_t a2, char a3, uint64_t a4, int a5, char a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  if ((a6 & 1) != 0 || (a3 & 1) != 0)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v8 = result;
  if (a4 < result)
    goto LABEL_15;
  v10 = a2;
  if (a5 != (_DWORD)a2)
    goto LABEL_16;
  if (result != a4)
  {
    v13 = 0;
    while (1)
    {
      v11 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      v14 = sub_23E2CD280(v8, v10, 0, a7);
      v16 = v15;
      v18 = v17;
      result = sub_23E23D578(v8, v10, 0);
      if ((v18 & 1) != 0)
        goto LABEL_17;
      if ((_DWORD)v16 != a5)
        goto LABEL_14;
      ++v13;
      v8 = v14;
      v10 = v16;
      if (v14 == a4)
        return v11;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return 0;
}

uint64_t sub_23E5140BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t (*a8)(char *))
{
  uint64_t v11;
  int v14;
  int v15;
  int v16;
  uint64_t result;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v11 = a4;
  v14 = a3 & 1;
  v15 = a6 & 1;
  v16 = v15 | v14;
  result = sub_23E513FD0(a1, a2, v14, a4, a5, v15, a7);
  if (v16)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  if ((_DWORD)a5 != (_DWORD)a2)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v18 = v11 < a1;
  if (v11 >= a1)
    v19 = a1;
  else
    v19 = v11;
  if (v11 >= a1)
    v20 = a2;
  else
    v20 = a5;
  if (v11 >= a1)
  {
    v21 = 1;
  }
  else
  {
    v11 = a1;
    v21 = -1;
  }
  if (v18)
    v22 = a2;
  else
    v22 = a5;
  v25 = v19;
  v26 = v20;
  v27 = 0;
  if (v19 != v11)
  {
    v24 = 0;
    while (1)
    {
      v23 = v24 + v21;
      if (__OFADD__(v24, v21))
        break;
      result = sub_23E5141CC((uint64_t)&v25, a7, a8);
      if ((v27 & 1) != 0)
        goto LABEL_26;
      if ((_DWORD)v26 != v22)
        goto LABEL_24;
      v24 += v21;
      if (v25 == v11)
        return v23;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_23E23D578(v11, v20, 0);
  return 0;
}

uint64_t sub_23E5141CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(char *);

  v22 = a3;
  v5 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v21 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    goto LABEL_19;
  v9 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(a2 + 36) == (_DWORD)v9)
  {
    v10 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 != 1 << *(_BYTE *)(a2 + 32))
    {
      v20 = (uint64_t *)a1;
      while (1)
      {
        v11 = v9;
        v12 = v10;
        v10 = sub_23E2CD280(v10, v9, 0, a2);
        v9 = v13;
        v15 = v14;
        result = sub_23E23D578(v12, v11, 0);
        if ((v15 & 1) != 0)
          goto LABEL_18;
        if (*(_DWORD *)(a2 + 36) != (_DWORD)v9)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
        v16 = 1 << *(_BYTE *)(a2 + 32);
        if (v10 == v16)
          goto LABEL_12;
        if (v10 < 0 || v10 >= v16)
          goto LABEL_14;
        if (((*(_QWORD *)(a2 + 56 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_15;
        sub_23E1E2F50(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v21 + 72) * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        swift_retain();
        v17 = v22(v8);
        swift_release();
        result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        if ((v17 & 1) != 0)
        {
LABEL_12:
          v18 = v20;
          *v20 = v10;
          v18[1] = v9;
          *((_BYTE *)v18 + 16) = 0;
          return result;
        }
      }
    }
  }
  else
  {
LABEL_16:
    __break(1u);
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23E514384@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E513460(a1, *(unsigned __int8 *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23E514390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E5143D8()
{
  return sub_23E5143FC(&qword_256D4A0A0, &qword_256D4A080, (uint64_t (*)(void))sub_23E514490, (uint64_t (*)(void))sub_23E2BE5A8);
}

uint64_t sub_23E5143FC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[3];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = sub_23E497FDC((unint64_t *)&qword_256D41800, &qword_256D41798);
    v9[2] = a4();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCD78], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E514490()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D4A0A8;
  if (!qword_256D4A0A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D4A078);
    v2[0] = sub_23E4980FC();
    v2[1] = sub_23E509E6C();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDB0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D4A0A8);
  }
  return result;
}

uint64_t Sequence<>.sortedFromUUIDs<A>(uuidBlock:fallbackBlock:uuids:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t AssociatedTypeWitness;
  uint64_t v58;
  uint64_t v59;

  v51 = a3;
  v52 = a4;
  v53 = a2;
  v56 = a9;
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v10, v18);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = sub_23E537898();
  v59 = v19;
  v20 = *(_QWORD *)(a5 + 16);
  v54 = a7;
  v55 = a6;
  v50 = a1;
  if (v20)
  {
    v49 = &v45;
    v58 = v19;
    MEMORY[0x24BDAC7A8](v19);
    *(&v45 - 8) = a6;
    *(&v45 - 7) = a7;
    v21 = v56;
    *(&v45 - 6) = a8;
    *(&v45 - 5) = v21;
    *(&v45 - 4) = a10;
    *(&v45 - 3) = a5;
    v22 = v53;
    *(&v45 - 2) = a1;
    *(&v45 - 1) = v22;
    v23 = sub_23E53788C();
    swift_bridgeObjectRetain();
    MEMORY[0x24264FDE4](MEMORY[0x24BEE12F0], v23);
    v24 = sub_23E537F10();
    v49 = &v45;
    v58 = v24;
    MEMORY[0x24BDAC7A8](v24);
    v25 = v54;
    *(&v45 - 8) = v55;
    *(&v45 - 7) = v25;
    *(&v45 - 6) = a8;
    *(&v45 - 5) = v21;
    *(&v45 - 4) = a10;
    *(&v45 - 3) = a5;
    *(&v45 - 2) = a1;
    *(&v45 - 1) = v22;
    a7 = v54;
    a6 = v55;
    MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v23);
    v26 = sub_23E537724();
    v27 = swift_bridgeObjectRelease();
  }
  else
  {
    v27 = sub_23E537838();
    v26 = v27;
  }
  v49 = (_QWORD *)v26;
  v46 = &v45;
  MEMORY[0x24BDAC7A8](v27);
  *(&v45 - 6) = a6;
  *(&v45 - 5) = a7;
  v28 = v56;
  *(&v45 - 4) = a8;
  *(&v45 - 3) = v28;
  *(&v45 - 2) = a10;
  *(&v45 - 1) = v26;
  v29 = sub_23E53788C();
  v45 = a10;
  v30 = a8;
  v31 = v29;
  v48 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12B8], v29);
  v47 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E8], v31);
  sub_23E537ACC();
  v46 = &v45;
  v58 = v59;
  MEMORY[0x24BDAC7A8](v59);
  *(&v45 - 8) = a6;
  *(&v45 - 7) = a7;
  *(&v45 - 6) = v30;
  *(&v45 - 5) = v28;
  v32 = v51;
  v33 = v52;
  *(&v45 - 4) = a10;
  *(&v45 - 3) = (uint64_t)v32;
  *(&v45 - 2) = v33;
  swift_bridgeObjectRetain();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12F0], v31);
  v34 = sub_23E537F10();
  v46 = &v45;
  v58 = v34;
  MEMORY[0x24BDAC7A8](v34);
  v35 = v55;
  *(&v45 - 8) = v55;
  *(&v45 - 7) = v36;
  *(&v45 - 6) = v30;
  *(&v45 - 5) = v28;
  v37 = v45;
  *(&v45 - 4) = v45;
  *(&v45 - 3) = (uint64_t)v32;
  *(&v45 - 2) = v33;
  v52 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v31);
  v38 = sub_23E537724();
  v39 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v39);
  v40 = v54;
  *(&v45 - 6) = v35;
  *(&v45 - 5) = v40;
  v41 = v56;
  *(&v45 - 4) = v30;
  *(&v45 - 3) = v41;
  *(&v45 - 2) = v37;
  *(&v45 - 1) = v38;
  sub_23E537ACC();
  v51 = &v45;
  v58 = v59;
  MEMORY[0x24BDAC7A8](v59);
  *(&v45 - 8) = v35;
  *(&v45 - 7) = v40;
  *(&v45 - 6) = v30;
  *(&v45 - 5) = v41;
  v42 = v50;
  *(&v45 - 4) = v37;
  *(&v45 - 3) = v42;
  *(&v45 - 2) = v53;
  swift_bridgeObjectRetain();
  sub_23E537724();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v43;
}

_QWORD *Sequence<>.sortedFromUUIDs(uuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v29;
  uint64_t v30;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D4A0C0);
  v8 = sub_23E5162BC((void (*)(char *, char *))sub_23E516240, 0, a2, v6, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v7);
  if (*(_QWORD *)(v8 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F250);
    v9 = sub_23E53806C();
  }
  else
  {
    v9 = MEMORY[0x24BEE4B00];
  }
  v30 = v9;
  sub_23E51766C(v8, 1, &v30);
  swift_bridgeObjectRelease();
  v10 = v30;
  v11 = sub_23E536F80();
  v13 = sub_23E5162BC((void (*)(char *, char *))sub_23E5167C8, 0, a2, v11, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v12);
  v14 = sub_23E4FD850(v13);
  swift_bridgeObjectRelease();
  v30 = v14;
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    sub_23E51971C(v15, a1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E517918);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v16 = swift_retain();
    v17 = (_QWORD *)sub_23E24A8B4(v16);
    swift_release();
    v29 = v17;
    sub_23E51C2B0(&v29, a1, (void (*)(_QWORD *, uint64_t))sub_23E5185F4);
    swift_release();
    swift_bridgeObjectRelease();
    v18 = v29;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23E25B888((uint64_t)v18);
  swift_retain();
  v19 = swift_bridgeObjectRetain();
  sub_23E51971C(v19, v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E51936C);
  swift_release();
  swift_retain();
  v20 = swift_retain();
  v21 = (_QWORD *)sub_23E24A8B4(v20);
  swift_release();
  v29 = v21;
  sub_23E51C2B0(&v29, v10, (void (*)(_QWORD *, uint64_t))sub_23E519E10);
  swift_release();
  swift_release();
  v22 = v29;
  sub_23E25B888((uint64_t)v29);
  v23 = v30;
  swift_bridgeObjectRetain_n();
  swift_retain();
  v24 = (_QWORD *)sub_23E24A8B4(v23);
  swift_bridgeObjectRelease();
  v29 = v24;
  sub_23E51C2B0(&v29, v10, (void (*)(_QWORD *, uint64_t))sub_23E51B328);
  swift_bridgeObjectRelease();
  swift_release();
  v25 = v29;
  v29 = v18;
  sub_23E259F3C((uint64_t)v22);
  sub_23E259F3C((uint64_t)v25);
  v26 = v29;
  swift_retain();
  v27 = sub_23E5173B4((uint64_t)v26, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v27;
}

uint64_t Sequence<>.sortedFromUUIDs<A>(uuidBlock:fallbackBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v26 = a3;
  v27 = a4;
  v29 = a1;
  v30 = a2;
  v31 = a9;
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v16, v9, v19);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v60 = sub_23E537898();
  v18(v16, v9, a5);
  v52 = a5;
  v53 = a6;
  v54 = a7;
  v55 = a8;
  v20 = v31;
  v56 = v31;
  v57 = a3;
  v21 = v27;
  v58 = v27;
  v59 = sub_23E537700();
  v45 = a5;
  v46 = a6;
  v47 = a7;
  v48 = a8;
  v49 = v20;
  v50 = v26;
  v51 = v21;
  v22 = sub_23E53788C();
  v27 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v22);
  v23 = sub_23E537724();
  swift_bridgeObjectRelease();
  v39 = a5;
  v40 = a6;
  v41 = a7;
  v42 = a8;
  v43 = v20;
  v44 = v23;
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12B8], v22);
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12E8], v22);
  sub_23E537ACC();
  v59 = v60;
  v32 = a5;
  v33 = a6;
  v34 = a7;
  v35 = a8;
  v36 = v31;
  v37 = v29;
  v38 = v30;
  swift_bridgeObjectRetain();
  sub_23E537724();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

BOOL sub_23E514F80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  BOOL v10;
  _BYTE v12[16];
  _BYTE *v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3(a1);
  v13 = v9;
  v10 = sub_23E35ECB4((uint64_t (*)(char *))sub_23E4B1E14, (_BOOL8)v12, a2);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

BOOL sub_23E51504C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E514F80(a1, *(_QWORD *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

uint64_t sub_23E515080(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v8 = 0;
    v9 = *(_QWORD *)(sub_23E536F80() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    v12 = v10;
    while ((sub_23E5151EC(v12, a4, a5, a1) & 1) == 0)
    {
      ++v8;
      v12 += v11;
      if (v5 == v8)
      {
        v8 = 1000;
        break;
      }
    }
    v13 = 0;
    while (1)
    {
      result = sub_23E5151EC(v10, a4, a5, a2);
      if ((result & 1) != 0)
        break;
      v15 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        return result;
      }
      ++v13;
      v10 += v11;
      if (v15 == v5)
      {
        v13 = 1000;
        return v8 < v13;
      }
    }
  }
  else
  {
    v13 = 1000;
    v8 = 1000;
  }
  return v8 < v13;
}

uint64_t sub_23E5151B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E515080(a1, a2, *(_QWORD *)(v2 + 56), *(void (**)(uint64_t))(v2 + 64), *(_QWORD *)(v2 + 72)) & 1;
}

uint64_t sub_23E5151EC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a4);
  LOBYTE(a4) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a4 & 1;
}

uint64_t sub_23E5152A4()
{
  return sub_23E515594() & 1;
}

BOOL sub_23E5152BC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BOOL8 v12;
  uint64_t v14;

  v8 = sub_23E537CC4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - v10;
  a2(a1);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 48))(v11, 1, a5) != 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

BOOL sub_23E515380(uint64_t a1)
{
  return sub_23E51C374(a1);
}

uint64_t sub_23E515398(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v10 = sub_23E537CC4();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  a3(a1);
  v16 = *(_QWORD *)(a6 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  result = v17(v15, 1, a6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    result = v17(v13, 1, a6);
    if ((_DWORD)result != 1)
    {
      v19 = sub_23E5374FC();
      v20 = *(void (**)(char *, uint64_t))(v16 + 8);
      v20(v13, a6);
      v20(v15, a6);
      return v19 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E5154DC(uint64_t a1, uint64_t a2)
{
  return sub_23E5156C8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E515398) & 1;
}

uint64_t sub_23E5154FC()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  v0 = sub_23E53788C();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v0);
  return sub_23E537754() & 1;
}

uint64_t sub_23E515594()
{
  return sub_23E5154FC() & 1;
}

uint64_t sub_23E5155B8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v16 - v11;
  a3(a1);
  a3(a2);
  v13 = MEMORY[0x24264E1E8](v12, v10);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  return v13 & 1;
}

uint64_t sub_23E5156A8(uint64_t a1, uint64_t a2)
{
  return sub_23E5156C8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E5155B8) & 1;
}

uint64_t sub_23E5156C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6]) & 1;
}

uint64_t Sequence<>.sortedFromUUIDs<A, B>(uuidBlock:fallbackBlock:secondFallbackBlock:uuids:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t AssociatedTypeWitness;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;

  v68 = a8;
  v66 = a7;
  v55 = a6;
  v63 = a1;
  v64 = a5;
  v60 = a4;
  v54[0] = a3;
  v62 = a2;
  v69 = a14;
  v71 = a13;
  v57 = a10;
  v72 = a9;
  v70 = a12;
  v67 = a11;
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v19);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v162 = sub_23E537898();
  v163 = v162;
  v152 = a8;
  v153 = a9;
  v154 = a10;
  v155 = a11;
  v156 = a12;
  v157 = a13;
  v20 = v69;
  v158 = v69;
  v159 = v66;
  v21 = v63;
  v160 = v63;
  v161 = a2;
  v22 = sub_23E53788C();
  swift_bridgeObjectRetain();
  v61 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12F0], v22);
  v162 = sub_23E537F10();
  v23 = v67;
  v24 = v68;
  v142 = v68;
  v25 = v72;
  v143 = v72;
  v26 = v57;
  v144 = v57;
  v145 = v67;
  v146 = v70;
  v147 = v71;
  v148 = v20;
  v149 = v66;
  v150 = v21;
  v151 = v62;
  v66 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v22);
  v27 = sub_23E537724();
  v54[1] = v27;
  swift_bridgeObjectRelease();
  v134 = v24;
  v135 = v25;
  v28 = v26;
  v136 = v26;
  v137 = v23;
  v29 = v70;
  v30 = v71;
  v138 = v70;
  v139 = v71;
  v140 = v20;
  v141 = v27;
  v59 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12B8], v22);
  v58 = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E8], v22);
  v65 = v22;
  sub_23E537ACC();
  v162 = v163;
  v31 = v67;
  v32 = v68;
  v125 = v68;
  v126 = v72;
  v127 = v28;
  v128 = v67;
  v129 = v29;
  v130 = v30;
  v131 = v20;
  v33 = v54[0];
  v132 = v54[0];
  v133 = v60;
  swift_bridgeObjectRetain();
  v162 = sub_23E537F10();
  v34 = v32;
  v116 = v32;
  v35 = v72;
  v117 = v72;
  v36 = v57;
  v118 = v57;
  v119 = v31;
  v120 = v29;
  v121 = v71;
  v122 = v69;
  v123 = v33;
  v124 = v60;
  v37 = sub_23E537724();
  v60 = v37;
  swift_bridgeObjectRelease();
  v38 = v34;
  v108 = v34;
  v109 = v35;
  v39 = v36;
  v110 = v36;
  v111 = v31;
  v40 = v70;
  v41 = v71;
  v112 = v70;
  v113 = v71;
  v42 = v69;
  v114 = v69;
  v115 = v37;
  sub_23E537ACC();
  v162 = v163;
  v99 = v38;
  v100 = v35;
  v101 = v39;
  v102 = v67;
  v103 = v40;
  v104 = v41;
  v43 = v42;
  v105 = v42;
  v106 = v64;
  v44 = v55;
  v107 = v55;
  swift_bridgeObjectRetain();
  v162 = sub_23E537F10();
  v45 = v67;
  v90 = v68;
  v91 = v72;
  v92 = v39;
  v93 = v67;
  v46 = v70;
  v94 = v70;
  v95 = v41;
  v96 = v43;
  v97 = v64;
  v98 = v44;
  v47 = sub_23E537724();
  v64 = v47;
  swift_bridgeObjectRelease();
  v48 = v68;
  v49 = v72;
  v82 = v68;
  v83 = v72;
  v84 = v39;
  v85 = v45;
  v86 = v46;
  v87 = v41;
  v50 = v41;
  v51 = v69;
  v88 = v69;
  v89 = v47;
  sub_23E537ACC();
  v162 = v163;
  v73 = v48;
  v74 = v49;
  v75 = v39;
  v76 = v45;
  v77 = v46;
  v78 = v50;
  v79 = v51;
  v80 = v63;
  v81 = v62;
  swift_bridgeObjectRetain();
  sub_23E537724();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = sub_23E53782C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v52;
}

BOOL sub_23E515C4C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  BOOL v10;
  _BYTE v12[16];
  _BYTE *v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a3(a1);
  v13 = v9;
  v10 = sub_23E35ECB4((uint64_t (*)(char *))sub_23E4B1D98, (_BOOL8)v12, a2);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_23E515D18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = 0;
    v8 = *(_QWORD *)(sub_23E536F80() - 8);
    v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11 = v9;
    while ((sub_23E5151EC(v11, a4, a5, a1) & 1) == 0)
    {
      ++v7;
      v11 += v10;
      if (v5 == v7)
      {
        v7 = 1000;
        break;
      }
    }
    v12 = 0;
    while (1)
    {
      result = sub_23E5151EC(v9, a4, a5, a2);
      if ((result & 1) != 0)
        break;
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        return result;
      }
      ++v12;
      v9 += v10;
      if (v14 == v5)
      {
        v12 = 1000;
        return v7 < v12;
      }
    }
  }
  else
  {
    v12 = 1000;
    v7 = 1000;
  }
  return v7 < v12;
}

uint64_t sub_23E515E68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t result;
  char v19;
  void (*v20)(char *, uint64_t);
  _QWORD v21[2];

  v10 = sub_23E537CC4();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v21 - v14;
  a3(a1);
  v16 = *(_QWORD *)(a6 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  result = v17(v15, 1, a6);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    result = v17(v13, 1, a6);
    if ((_DWORD)result != 1)
    {
      v19 = sub_23E5374FC();
      v20 = *(void (**)(char *, uint64_t))(v16 + 8);
      v20(v13, a6);
      v20(v15, a6);
      return v19 & 1;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_23E515FA8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BOOL8 v13;
  uint64_t v15;

  v9 = sub_23E537CC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - v11;
  a2(a1);
  v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 48))(v12, 1, a6) != 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t sub_23E51606C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  char v20;
  void (*v21)(char *, uint64_t);
  _QWORD v22[2];

  v11 = sub_23E537CC4();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v22 - v15;
  a3(a1);
  v17 = *(_QWORD *)(a7 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  result = v18(v16, 1, a7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    a3(a2);
    result = v18(v14, 1, a7);
    if ((_DWORD)result != 1)
    {
      v20 = sub_23E5374FC();
      v21 = *(void (**)(char *, uint64_t))(v17 + 8);
      v21(v14, a7);
      v21(v16, a7);
      return v20 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E5161AC()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  v0 = sub_23E53788C();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v0);
  return sub_23E537754() & 1;
}

uint64_t sub_23E516240@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D4A0C0) + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E537E80();
  return sub_23E1FF9C8((uint64_t)a1, v3);
}

uint64_t sub_23E5162BC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_23E537CC4();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_23E5376D0();
  v57 = sub_23E537F70();
  v53 = sub_23E537F7C();
  sub_23E537F34();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_23E5376C4();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_23E537CDC();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_23E537F64();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_23E537CDC();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_23E537F64();
      sub_23E537CDC();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_23E5167C8(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_23E537E80();
}

uint64_t sub_23E516814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v33 - v10;
  v12 = sub_23E536F20();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  if (*(_QWORD *)(a3 + 16) && (v19 = sub_23E1E3300(a1), (v20 & 1) != 0))
  {
    sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v19, (uint64_t)v36);
    v34 = v9;
    v35 = v3;
    v21 = v37;
    v22 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    v23 = v21;
    v9 = v34;
    (*(void (**)(uint64_t, uint64_t))(v22 + 64))(v23, v22);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_11;
      goto LABEL_8;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  sub_23E536ED8();
  sub_23E1E7C64((uint64_t)v11, &qword_2543330E0);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
    goto LABEL_12;
  }
LABEL_8:
  v24 = sub_23E1E3300(v39);
  if ((v25 & 1) == 0)
    goto LABEL_11;
  sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v24, (uint64_t)v36);
  v26 = v9;
  v27 = v37;
  v28 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v29 = v27;
  v9 = v26;
  (*(void (**)(uint64_t, uint64_t))(v28 + 64))(v29, v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v26, 1, v12) == 1)
  {
LABEL_12:
    sub_23E536ED8();
    sub_23E1E7C64((uint64_t)v9, &qword_2543330E0);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v26, v12);
LABEL_13:
  v30 = sub_23E536EC0();
  v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  v31(v16, v12);
  v31(v18, v12);
  return v30 & 1;
}

uint64_t sub_23E516AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_29;
  v6 = sub_23E1E3300(a1);
  if ((v7 & 1) != 0)
  {
    sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v6, (uint64_t)v37);
    v8 = v38;
    v9 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 56))(v8, v9);
    v12 = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_10;
  }
  else
  {
    v10 = 0;
    v12 = 0;
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_10;
  }
  v13 = sub_23E1E3300(a2);
  if ((v14 & 1) != 0)
  {
    sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v13, (uint64_t)v37);
    v15 = v38;
    v16 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
    v19 = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (v12)
      goto LABEL_11;
LABEL_8:
    if (!v19)
    {
LABEL_29:
      v34 = MEMORY[0x24264E1E8](a1, a2);
      return v34 & 1;
    }
    goto LABEL_15;
  }
LABEL_10:
  v17 = 0;
  v19 = 0;
  if (!v12)
    goto LABEL_8;
LABEL_11:
  if (!v19)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v10 == v17 && v12 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v35 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
    goto LABEL_29;
LABEL_16:
  if (*(_QWORD *)(a3 + 16) && (v20 = sub_23E1E3300(a1), (v21 & 1) != 0))
  {
    sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v20, (uint64_t)v37);
    v22 = v38;
    v23 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
    v26 = v25;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_24;
  }
  else
  {
    v24 = 0;
    v26 = 0xE000000000000000;
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_24;
  }
  v27 = sub_23E1E3300(a2);
  if ((v28 & 1) != 0)
  {
    sub_23E1FF9C8(*(_QWORD *)(a3 + 56) + 40 * v27, (uint64_t)v37);
    v29 = v38;
    v30 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
    v33 = v32;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    if (v24 != v31)
      goto LABEL_27;
    goto LABEL_25;
  }
LABEL_24:
  v33 = 0xE000000000000000;
  if (v24)
  {
LABEL_27:
    v34 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v34 & 1;
  }
LABEL_25:
  if (v26 != v33)
    goto LABEL_27;
  swift_bridgeObjectRelease_n();
  v34 = 0;
  return v34 & 1;
}

uint64_t sub_23E516DD4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  void (*v41)(unint64_t, unint64_t, uint64_t);
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  void (*v50)(unint64_t, uint64_t);
  BOOL v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(unint64_t, uint64_t);
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  void (*v63)(unint64_t, unint64_t, uint64_t);
  unint64_t v64;
  uint64_t (*v65)(uint64_t, unint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;

  v65 = a6;
  v67 = a5;
  v10 = sub_23E536F80();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v58 - v18;
  v66 = v20;
  v68 = *(_QWORD *)(v20 + 72);
  if (!v68)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v68 == -1)
    goto LABEL_70;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v68 == -1)
    goto LABEL_71;
  v22 = (uint64_t)(a2 - a1) / v68;
  v72 = a1;
  v71 = a4;
  v23 = v21 / v68;
  if (v22 >= v21 / v68)
  {
    if (v23 < 0)
      goto LABEL_72;
    v25 = v23 * v68;
    v26 = v17;
    v64 = v16;
    if (a4 < a2 || a2 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v37 = a4 + v25;
    v70 = a4 + v25;
    v72 = a2;
    if (v25 < 1 || a1 >= a2)
    {
LABEL_68:
      sub_23E530AF0(&v72, &v71, (uint64_t *)&v70);
      swift_bridgeObjectRelease();
      return 1;
    }
    v39 = -v68;
    v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 16);
    v62 = v10;
    v63 = v40;
    v59 = -v68;
    v60 = a4;
    v61 = a1;
    while (1)
    {
      v41 = v63;
      v63(v26, v37 + v39, v10);
      v42 = a2;
      v43 = a2 + v39;
      v44 = v26;
      v45 = v64;
      v41(v64, v43, v10);
      v46 = v69;
      v47 = v65(v44, v45, v67);
      v69 = v46;
      if (v46)
      {
        v56 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
        v56(v45, v10);
        v56(v44, v10);
        goto LABEL_68;
      }
      v48 = v47;
      v68 = a3 + v39;
      v49 = a3;
      v50 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
      v50(v45, v10);
      v50(v44, v10);
      v26 = v44;
      if ((v48 & 1) != 0)
        break;
      v53 = v70;
      v70 += v39;
      v43 = v42;
      a3 = v68;
      if (v49 < v53 || v68 >= v53)
      {
        v10 = v62;
        swift_arrayInitWithTakeFrontToBack();
        v39 = v59;
        v54 = v60;
        v52 = v61;
      }
      else
      {
        v52 = v61;
        if (v49 != v53)
        {
          v10 = v62;
          swift_arrayInitWithTakeBackToFront();
          v39 = v59;
LABEL_59:
          v54 = v60;
          goto LABEL_62;
        }
        v54 = v60;
        v10 = v62;
      }
LABEL_62:
      v37 = v70;
      if (v70 > v54)
      {
        a2 = v43;
        if (v43 > v52)
          continue;
      }
      goto LABEL_68;
    }
    a3 = v68;
    if (v49 < v42 || v68 >= v42)
    {
      v10 = v62;
      swift_arrayInitWithTakeFrontToBack();
      v52 = v61;
    }
    else
    {
      v51 = v49 == v42;
      v52 = v61;
      v10 = v62;
      if (!v51)
        swift_arrayInitWithTakeBackToFront();
    }
    v39 = v59;
    v72 += v59;
    goto LABEL_59;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22 * v68;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v64 = a4 + v24;
    v70 = a4 + v24;
    v27 = v24 < 1 || a2 >= a3;
    if (!v27)
    {
      v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 16);
      while (1)
      {
        v28 = (void (*)(char *, unint64_t, uint64_t))v63;
        v63((unint64_t)v19, a2, v10);
        v28(v15, a4, v10);
        v29 = v69;
        v30 = v65((uint64_t)v19, (unint64_t)v15, v67);
        v69 = v29;
        if (v29)
          break;
        v31 = v30;
        v32 = a3;
        v33 = *(void (**)(char *, uint64_t))(v66 + 8);
        v33(v15, v10);
        v33(v19, v10);
        v34 = v72;
        if ((v31 & 1) != 0)
        {
          v35 = a2 + v68;
          if (v72 < a2 || v72 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v72 == a2)
          {
            v34 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v36 = v71 + v68;
          if (v72 < v71 || v72 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v72 != v71)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v71 = v36;
          v35 = a2;
        }
        v72 = v34 + v68;
        a4 = v71;
        if (v71 < v64)
        {
          a2 = v35;
          v27 = v35 >= v32;
          a3 = v32;
          if (!v27)
            continue;
        }
        goto LABEL_68;
      }
      v55 = *(void (**)(char *, uint64_t))(v66 + 8);
      v55(v15, v10);
      v55(v19, v10);
    }
    goto LABEL_68;
  }
LABEL_72:
  swift_bridgeObjectRelease();
  result = sub_23E538078();
  __break(1u);
  return result;
}

_QWORD *sub_23E5173B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v23[3];
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];
  _QWORD *v31;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v23[1] = a1;
    v23[2] = v2;
    v12 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25 = *(_QWORD *)(v6 + 72);
    v26 = v13;
    swift_bridgeObjectRetain();
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v14 = (uint64_t)v24;
    while (1)
    {
      v26(v10, v12, v5);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v10, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v10, v5);
      if (*(_QWORD *)(a2 + 16) && (v16 = sub_23E1E3300(v14), (v17 & 1) != 0))
      {
        sub_23E1FF9C8(*(_QWORD *)(a2 + 56) + 40 * v16, (uint64_t)&v27);
      }
      else
      {
        v29 = 0;
        v27 = 0u;
        v28 = 0u;
      }
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
      if (*((_QWORD *)&v28 + 1))
      {
        sub_23E1E6C84(&v27, (uint64_t)v30);
        sub_23E1E6C84(v30, (uint64_t)&v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_23E51FE20(0, v31[2] + 1, 1, v31);
        v19 = v31[2];
        v18 = v31[3];
        if (v19 >= v18 >> 1)
          v31 = sub_23E51FE20((_QWORD *)(v18 > 1), v19 + 1, 1, v31);
        v20 = v31;
        v31[2] = v19 + 1;
        sub_23E1E6C84(&v27, (uint64_t)&v20[5 * v19 + 4]);
        v14 = (uint64_t)v24;
      }
      else
      {
        sub_23E1E7C64((uint64_t)&v27, &qword_256D45A48);
      }
      v12 += v25;
      if (!--v11)
      {
        v15(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v31 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v21(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_23E51766C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, char *, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  __int128 *v37;
  uint64_t v38;
  char *v39;
  __int128 v40[2];
  __int128 v41[2];
  uint64_t *v42;

  v42 = a3;
  v6 = sub_23E536F80();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D4A0C0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return result;
  v37 = (__int128 *)&v12[*(int *)(result + 48)];
  v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v15 = *(_QWORD *)(v10 + 72);
  v35[1] = v3;
  v36 = v15;
  v35[0] = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23E51C580(v14, (uint64_t)v12);
    v17 = (uint64_t)v39;
    v18 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
    v19 = v12;
    v20 = v12;
    v21 = v6;
    v18((uint64_t)v39, v20, v6);
    sub_23E1E6C84(v37, (uint64_t)v41);
    v22 = *v42;
    v24 = sub_23E1E3300(v17);
    v25 = *(_QWORD *)(v22 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (*(_QWORD *)(v22 + 24) >= v27)
    {
      if ((a2 & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E2213C0();
        if ((v28 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E218F0C(v27, a2 & 1);
      v29 = sub_23E1E3300((uint64_t)v39);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_20;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_3:
        sub_23E1E6C84(v41, (uint64_t)v40);
        v6 = v21;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v21);
        v16 = *(_QWORD *)(*v42 + 56) + 40 * v24;
        __swift_destroy_boxed_opaque_existential_0(v16);
        sub_23E1E6C84(v40, v16);
        goto LABEL_4;
      }
    }
    v31 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v6 = v21;
    v18(v31[6] + *(_QWORD *)(v38 + 72) * v24, v39, v21);
    sub_23E1E6C84(v41, v31[7] + 40 * v24);
    v32 = v31[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_19;
    v31[2] = v34;
LABEL_4:
    v14 += v36;
    a2 = 1;
    --v13;
    v12 = v19;
    if (!v13)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E517918(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;

  v35 = a2;
  v36 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v35 - v14;
  v15 = 0;
  v41 = a4;
  v42 = a3;
  v16 = *(_QWORD *)(a3 + 56);
  v37 = 0;
  v38 = a3 + 56;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v39 = (unint64_t)(v17 + 63) >> 6;
  v20 = v45;
  while (1)
  {
LABEL_7:
    if (v19)
    {
      v43 = (v19 - 1) & v19;
      v44 = v15;
      v22 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_23;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v23 >= v39)
      goto LABEL_32;
    v24 = *(_QWORD *)(v38 + 8 * v23);
    v25 = v15 + 1;
    if (!v24)
    {
      v25 = v15 + 2;
      if (v15 + 2 >= v39)
        goto LABEL_32;
      v24 = *(_QWORD *)(v38 + 8 * v25);
      if (!v24)
      {
        v25 = v15 + 3;
        if (v15 + 3 >= v39)
          goto LABEL_32;
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
          break;
      }
    }
LABEL_22:
    v43 = (v24 - 1) & v24;
    v44 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_23:
    v27 = *(_QWORD *)(v42 + 48) + *(_QWORD *)(v10 + 72) * v22;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v46 = *(_QWORD *)(v10 + 72);
    v47 = v28;
    v28(v48, v27, v9);
    v29 = *(_QWORD *)(a4 + 16);
    if (v29)
    {
      v40 = v22;
      v30 = a4 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      swift_bridgeObjectRetain();
      while (1)
      {
        v47(v8, v30, v9);
        v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
        v21(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v20, v8, v9);
        sub_23E20BBB0();
        v31 = sub_23E537514();
        v32 = *(void (**)(char *, uint64_t))(v10 + 8);
        v32(v20, v9);
        if ((v31 & 1) != 0)
        {
          a4 = v41;
          swift_bridgeObjectRelease();
          result = ((uint64_t (*)(char *, uint64_t))v32)(v48, v9);
          *(unint64_t *)((char *)v36 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
          v33 = __OFADD__(v37++, 1);
          v19 = v43;
          v15 = v44;
          if (!v33)
            goto LABEL_7;
          __break(1u);
          goto LABEL_32;
        }
        v30 += v46;
        if (!--v29)
          goto LABEL_5;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_5:
      v21(v8, 1, 1, v9);
    }
    a4 = v41;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v48, v9);
    v19 = v43;
    v15 = v44;
  }
  v26 = v15 + 4;
  if (v15 + 4 >= v39)
  {
LABEL_32:
    v34 = v42;
    swift_retain();
    return sub_23E525710(v36, v35, v37, v34);
  }
  v24 = *(_QWORD *)(v38 + 8 * v26);
  if (v24)
  {
    v25 = v15 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v39)
      goto LABEL_32;
    v24 = *(_QWORD *)(v38 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E517CC0(uint64_t a1, uint64_t a2)
{
  return sub_23E51971C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E517918);
}

uint64_t sub_23E517D10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *);
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void (*v60)(unint64_t, uint64_t);
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t result;
  uint64_t v65;
  void (*v66)(char *);
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;

  v69 = a5;
  v76 = sub_23E536F80();
  v9 = MEMORY[0x24BDAC7A8](v76);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v65 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v65 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v65 - v18;
  v75 = v20;
  v21 = *(_QWORD *)(v20 + 72);
  if (!v21)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  v22 = a1;
  if (a2 - a1 == 0x8000000000000000 && v21 == -1)
    goto LABEL_87;
  v23 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v21 == -1)
    goto LABEL_88;
  v24 = (uint64_t)(a2 - a1) / v21;
  v79 = a1;
  v78 = a4;
  v25 = v23 / v21;
  if (v24 >= v23 / v21)
  {
    if ((v25 & 0x8000000000000000) == 0)
    {
      v68 = a1;
      v27 = v25 * v21;
      if (a4 < a2 || a2 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v67 = a4;
      v46 = a4 + v27;
      v77 = a4 + v27;
      v79 = a2;
      if (v27 >= 1 && v68 < a2)
      {
        v48 = *(_QWORD *)(v69 + 16);
        v49 = -v21;
        v66 = *(void (**)(char *))(v75 + 16);
        v73 = v14;
        v74 = (unint64_t)v11;
        v71 = -v21;
        do
        {
          v50 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v66)(v14, v46 + v49, v76);
          v70 = a2 + v49;
          v50(v11);
          v72 = a2;
          if (v48)
          {
            v51 = a3;
            v52 = 0;
            v53 = v69 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
            v54 = v53;
            while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
            {
              ++v52;
              v54 += v21;
              if (v48 == v52)
              {
                v52 = 1000;
                break;
              }
            }
            v55 = 0;
            while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
            {
              v56 = v55 + 1;
              if (__OFADD__(v55, 1))
                goto LABEL_85;
              ++v55;
              v53 += v21;
              if (v56 == v48)
              {
                v55 = 1000;
                break;
              }
            }
            a3 = v51;
          }
          else
          {
            v55 = 1000;
            v52 = 1000;
          }
          v57 = v71;
          v58 = a3 + v71;
          v59 = a3;
          v60 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
          v61 = v76;
          v60(v74, v76);
          v60((unint64_t)v73, v61);
          if (v52 >= v55)
          {
            v63 = v77;
            v77 += v57;
            v62 = v72;
            v49 = v57;
            a3 = v58;
            if (v59 < v63 || v58 >= v63)
            {
              swift_arrayInitWithTakeFrontToBack();
              v14 = v73;
              v11 = (char *)v74;
            }
            else
            {
              v14 = v73;
              v11 = (char *)v74;
              if (v59 != v63)
                swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            a3 = v58;
            if (v59 < v72 || v58 >= v72)
            {
              v62 = v70;
              swift_arrayInitWithTakeFrontToBack();
              v49 = v71;
              v14 = v73;
              v11 = (char *)v74;
            }
            else
            {
              v62 = v70;
              v49 = v71;
              v14 = v73;
              v11 = (char *)v74;
              if (v59 != v72)
                swift_arrayInitWithTakeBackToFront();
            }
            v79 += v49;
          }
          v46 = v77;
          if (v77 <= v67)
            break;
          a2 = v62;
        }
        while (v62 > v68);
      }
      goto LABEL_83;
    }
  }
  else if ((v24 & 0x8000000000000000) == 0)
  {
    v26 = v24 * v21;
    if (a4 < v22 || v22 + v26 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v22)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v74 = a4 + v26;
    v77 = a4 + v26;
    if (v26 >= 1 && a2 < a3)
    {
      v29 = a4;
      v30 = *(_QWORD *)(v69 + 16);
      v31 = *(char **)(v75 + 16);
      v72 = a3;
      v73 = v31;
      while (1)
      {
        v32 = v76;
        v33 = (void (*)(char *, unint64_t, uint64_t))v73;
        ((void (*)(char *, unint64_t, uint64_t))v73)(v19, a2, v76);
        v33(v17, v29, v32);
        if (v30)
          break;
        v39 = a2;
        v37 = 1000;
        v34 = 1000;
LABEL_35:
        v40 = v76;
        v41 = *(void (**)(char *, uint64_t))(v75 + 8);
        v41(v17, v76);
        v41(v19, v40);
        v42 = v79;
        if (v34 >= v37)
        {
          v45 = v78 + v21;
          v44 = v72;
          if (v79 < v78 || v79 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v79 != v78)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v78 = v45;
          v43 = v39;
        }
        else
        {
          v43 = v39 + v21;
          v44 = v72;
          if (v79 < v39 || v79 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v79 == v39)
          {
            v42 = v39;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v79 = v42 + v21;
        if (v78 < v74)
        {
          v29 = v78;
          a2 = v43;
          if (v43 < v44)
            continue;
        }
        goto LABEL_83;
      }
      v34 = 0;
      v35 = v69 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
      v36 = v35;
      while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      {
        ++v34;
        v36 += v21;
        if (v30 == v34)
        {
          v34 = 1000;
          break;
        }
      }
      v37 = 0;
      while (1)
      {
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          v39 = a2;
          goto LABEL_35;
        }
        v38 = v37 + 1;
        if (__OFADD__(v37, 1))
          break;
        ++v37;
        v35 += v21;
        if (v38 == v30)
        {
          v39 = a2;
          v37 = 1000;
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
LABEL_83:
    sub_23E530AF0(&v79, &v78, (uint64_t *)&v77);
    return 1;
  }
LABEL_89:
  swift_bridgeObjectRelease();
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E518368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;

  v37 = a5;
  v38 = a1;
  v44 = a4;
  v7 = sub_23E536F80();
  v45 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v34 - v14;
  v35 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v37 + 16);
    v17 = *(_QWORD *)(v45 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
LABEL_5:
    v36 = a3;
    v18 = a3;
    while (1)
    {
      v19 = v18 - 1;
      v20 = *v44;
      v42 = v17 * v18;
      v21 = v39;
      v39(v15, v20 + v17 * v18, v7);
      v43 = v19;
      v22 = v17 * v19;
      v21(v12, v20 + v17 * v19, v7);
      if (v16)
      {
        v23 = 0;
        v24 = v37 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
        v25 = v24;
        while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        {
          ++v23;
          v25 += v17;
          if (v16 == v23)
          {
            v23 = 1000;
            break;
          }
        }
        v26 = 0;
        while (1)
        {
          result = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
          if ((result & 1) != 0)
            break;
          v27 = v26 + 1;
          if (__OFADD__(v26, 1))
          {
            __break(1u);
            goto LABEL_25;
          }
          ++v26;
          v24 += v17;
          if (v27 == v16)
          {
            v26 = 1000;
            break;
          }
        }
      }
      else
      {
        v26 = 1000;
        v23 = 1000;
      }
      v28 = *(void (**)(char *, uint64_t))(v45 + 8);
      v28(v12, v7);
      result = ((uint64_t (*)(char *, uint64_t))v28)(v15, v7);
      if (v23 >= v26)
      {
LABEL_4:
        a3 = v36 + 1;
        if (v36 + 1 == v35)
          return result;
        goto LABEL_5;
      }
      v29 = *v44;
      if (!*v44)
        break;
      v30 = v22;
      v31 = v42;
      v32 = v29 + v42;
      v33 = v29 + v30;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
      v40(v41, v29 + v42, v7);
      if (v31 < v30 || v32 >= v33 + v17)
        swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v33, v41, v7);
      v18 = v43;
      if (v43 == v38)
        goto LABEL_4;
    }
LABEL_25:
    __break(1u);
  }
  return result;
}

uint64_t sub_23E5185F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL4 v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  char v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  unint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  char *v171;
  unint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t);
  void (*v180)(char *, uint64_t, uint64_t);
  char *v181;
  uint64_t v182;
  char *v183;
  unint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t, uint64_t);
  uint64_t v192;
  char *v193;
  unint64_t v194;
  char *v195;
  uint64_t *v196;
  _QWORD *v197;
  char *v198;
  uint64_t v199;

  v199 = sub_23E536F80();
  v5 = *(_QWORD *)(v199 - 8);
  v6 = MEMORY[0x24BDAC7A8](v199);
  v181 = (char *)&v174 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v195 = (char *)&v174 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v174 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v174 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v174 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v185 = (char *)&v174 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v183 = (char *)&v174 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v176 = (char *)&v174 - v23;
  v196 = a1;
  v24 = a1[1];
  swift_bridgeObjectRetain_n();
  v25 = sub_23E53830C();
  if (v25 >= v24)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      if (v24)
      {
        swift_bridgeObjectRetain();
        sub_23E518368(0, v24, 1, v196, a2);
      }
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_183;
  }
  v175 = v25;
  if (v24 >= 0)
    v26 = v24;
  else
    v26 = v24 + 1;
  if (v24 < -1)
    goto LABEL_192;
  v187 = a2;
  v197 = (_QWORD *)v5;
  v27 = v176;
  v190 = v2;
  if (v24 < 2)
  {
    v30 = (_QWORD *)v5;
    v31 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v33 = MEMORY[0x24BEE4AF8];
    v184 = MEMORY[0x24BEE4AF8] + v31;
    if (v24 != 1)
    {
      v98 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v173 = (char *)MEMORY[0x24BEE4AF8];
      goto LABEL_147;
    }
    v174 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v28 = v26 >> 1;
    v29 = sub_23E537844();
    v30 = (_QWORD *)v5;
    *(_QWORD *)(v29 + 16) = v28;
    v31 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v174 = v29;
    v184 = v29 + v31;
  }
  v34 = 0;
  v194 = a2 + v31;
  v188 = v18;
  v189 = (char *)MEMORY[0x24BEE4AF8];
  v193 = v12;
  v198 = v15;
  while (1)
  {
    v35 = v34++;
    if (v34 >= v24)
      goto LABEL_60;
    v186 = (char *)v24;
    v36 = *v196;
    v37 = v30[9];
    v38 = (void (*)(char *, uint64_t, uint64_t))v30[2];
    v39 = v27;
    v40 = v199;
    v38(v39, *v196 + v37 * v34, v199);
    v192 = v35;
    v182 = v36;
    v180 = v38;
    v38(v183, v36 + v37 * v35, v40);
    v41 = *(_QWORD *)(v187 + 16);
    if (v41)
    {
      v42 = 0;
      v43 = v194;
      while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      {
        ++v42;
        v43 += v37;
        if (v41 == v42)
        {
          v42 = 1000;
          break;
        }
      }
      v44 = 0;
      v45 = v194;
      while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      {
        v46 = v44 + 1;
        if (__OFADD__(v44, 1))
          goto LABEL_166;
        ++v44;
        v45 += v37;
        if (v46 == v41)
        {
          v44 = 1000;
          break;
        }
      }
    }
    else
    {
      v44 = 1000;
      v42 = 1000;
    }
    v47 = (void (*)(char *, uint64_t))v197[1];
    v47(v183, v199);
    v179 = v47;
    v47(v176, v199);
    v48 = v192 + 2;
    if (v192 + 2 >= (uint64_t)v186)
      goto LABEL_44;
    v178 = v42;
    v177 = v44;
    while (1)
    {
      v49 = v18;
      v50 = v182;
      v191 = (void (*)(char *, uint64_t, uint64_t))v48;
      v51 = v199;
      v52 = v180;
      v180(v185, v182 + v48 * v37, v199);
      v53 = v50 + v34 * v37;
      v54 = v49;
      v52(v49, v53, v51);
      if (v41)
      {
        v55 = 0;
        v56 = v194;
        v42 = v178;
        v44 = v177;
        while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        {
          ++v55;
          v56 += v37;
          if (v41 == v55)
          {
            v55 = 1000;
            break;
          }
        }
        v57 = 0;
        v58 = v194;
        while (1)
        {
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
            goto LABEL_40;
          v59 = v57 + 1;
          if (__OFADD__(v57, 1))
            break;
          ++v57;
          v58 += v37;
          if (v59 == v41)
          {
            v57 = 1000;
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
        goto LABEL_178;
      }
      v57 = 1000;
      v55 = 1000;
      v42 = v178;
      v44 = v177;
LABEL_40:
      v60 = v55 >= v57;
      v61 = v54;
      v62 = v199;
      v63 = v179;
      v179(v61, v199);
      v63(v185, v62);
      if ((((v42 < v44) ^ v60) & 1) == 0)
        break;
      v34 = (uint64_t)v191;
      v48 = (uint64_t)v191 + 1;
      v15 = v198;
      v18 = v188;
      if ((char *)v191 + 1 == v186)
      {
        v48 = (uint64_t)v186;
        goto LABEL_44;
      }
    }
    v15 = v198;
    v18 = v188;
    v48 = (uint64_t)v191;
LABEL_44:
    v30 = v197;
    v35 = v192;
    if (v42 >= v44)
    {
      v34 = v48;
      v24 = (uint64_t)v186;
      a2 = v187;
      if (v48 >= (uint64_t)v186)
        goto LABEL_91;
      goto LABEL_61;
    }
    v24 = (uint64_t)v186;
    if (v48 < v192)
      goto LABEL_187;
    if (v192 >= v48)
    {
      v34 = v48;
      a2 = v187;
LABEL_60:
      if (v34 >= v24)
        goto LABEL_91;
      goto LABEL_61;
    }
    v64 = 0;
    v65 = v37 * (v48 - 1);
    v66 = v48 * v37;
    v67 = v192;
    v68 = v192 * v37;
    v191 = (void (*)(char *, uint64_t, uint64_t))v48;
    do
    {
      if (v67 != v48 + v64 - 1)
      {
        v70 = v182;
        if (!v182)
          goto LABEL_190;
        v71 = v182 + v68;
        v72 = v182 + v65;
        v180 = (void (*)(char *, uint64_t, uint64_t))v30[4];
        v180(v181, v182 + v68, v199);
        if (v68 < v65 || v71 >= v70 + v66)
        {
          v69 = v199;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v69 = v199;
          if (v68 != v65)
            swift_arrayInitWithTakeBackToFront();
        }
        v180((char *)v72, (uint64_t)v181, v69);
        v12 = v193;
        v30 = v197;
        v15 = v198;
        v24 = (uint64_t)v186;
        v48 = (uint64_t)v191;
      }
      ++v67;
      --v64;
      v65 -= v37;
      v66 -= v37;
      v68 += v37;
    }
    while (v67 < v48 + v64);
    v34 = v48;
    a2 = v187;
    v18 = v188;
    v35 = v192;
    if (v48 >= v24)
    {
LABEL_91:
      if (v34 < v35)
        goto LABEL_182;
      goto LABEL_92;
    }
LABEL_61:
    if (__OFSUB__(v34, v35))
      goto LABEL_184;
    if (v34 - v35 >= v175)
      goto LABEL_91;
    v73 = v35 + v175;
    if (__OFADD__(v35, v175))
      goto LABEL_185;
    if (v73 >= v24)
      v73 = v24;
    if (v73 < v35)
      goto LABEL_186;
    if (v34 == v73)
      goto LABEL_91;
    v192 = v35;
    v74 = *(_QWORD *)(a2 + 16);
    v75 = v30[9];
    v191 = (void (*)(char *, uint64_t, uint64_t))v30[2];
    v76 = v199;
    v182 = v73;
LABEL_71:
    v186 = (char *)v34;
LABEL_74:
    v77 = v34 - 1;
    v78 = *v196;
    v79 = v75 * v34;
    v80 = v191;
    v191(v15, *v196 + v79, v76);
    v81 = v76;
    v82 = v75 * v77;
    v80(v12, v78 + v75 * v77, v81);
    if (v74)
      break;
    v85 = 1000;
    v83 = 1000;
LABEL_85:
    v88 = (void (*)(char *, uint64_t))v197[1];
    v89 = v12;
    v90 = v199;
    v88(v89, v199);
    v88(v198, v90);
    if (v83 < v85)
    {
      v91 = *v196;
      if (!*v196)
        goto LABEL_188;
      v92 = v91 + v79;
      v93 = (char *)(v91 + v82);
      v94 = (void (*)(char *, uint64_t, uint64_t))v197[4];
      v95 = v199;
      v94(v195, v91 + v79, v199);
      v130 = v79 < v82;
      v76 = v95;
      if (v130 || v92 >= (unint64_t)&v93[v75])
        swift_arrayInitWithTakeFrontToBack();
      v94(v93, (uint64_t)v195, v95);
      v34 = v77;
      v12 = v193;
      v15 = v198;
      if (v77 == v192)
        goto LABEL_70;
      goto LABEL_74;
    }
    v76 = v199;
    v12 = v193;
    v15 = v198;
LABEL_70:
    v34 = (uint64_t)(v186 + 1);
    if (v186 + 1 != (char *)v182)
      goto LABEL_71;
    v34 = v182;
    a2 = v187;
    v18 = v188;
    v35 = v192;
    if (v182 < v192)
      goto LABEL_182;
LABEL_92:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v189 = sub_23E530794(0, *((_QWORD *)v189 + 2) + 1, 1, v189);
    v97 = *((_QWORD *)v189 + 2);
    v96 = *((_QWORD *)v189 + 3);
    v98 = v97 + 1;
    v30 = v197;
    if (v97 >= v96 >> 1)
    {
      v157 = sub_23E530794((char *)(v96 > 1), v97 + 1, 1, v189);
      v30 = v197;
      v189 = v157;
    }
    v99 = v189;
    *((_QWORD *)v189 + 2) = v98;
    v192 = (uint64_t)(v99 + 32);
    v100 = &v99[16 * v97 + 32];
    *(_QWORD *)v100 = v35;
    *((_QWORD *)v100 + 1) = v34;
    if (v97)
    {
      v101 = v192;
      v186 = (char *)v34;
      while (1)
      {
        v102 = v98 - 1;
        if (v98 >= 4)
        {
          v107 = v101 + 16 * v98;
          v108 = *(_QWORD *)(v107 - 64);
          v109 = *(_QWORD *)(v107 - 56);
          v113 = __OFSUB__(v109, v108);
          v110 = v109 - v108;
          if (v113)
            goto LABEL_167;
          v112 = *(_QWORD *)(v107 - 48);
          v111 = *(_QWORD *)(v107 - 40);
          v113 = __OFSUB__(v111, v112);
          v105 = v111 - v112;
          v106 = v113;
          if (v113)
            goto LABEL_168;
          v114 = v98 - 2;
          v115 = (uint64_t *)(v101 + 16 * (v98 - 2));
          v117 = *v115;
          v116 = v115[1];
          v113 = __OFSUB__(v116, v117);
          v118 = v116 - v117;
          if (v113)
            goto LABEL_170;
          v113 = __OFADD__(v105, v118);
          v119 = v105 + v118;
          if (v113)
            goto LABEL_173;
          if (v119 >= v110)
          {
            v137 = (uint64_t *)(v101 + 16 * v102);
            v139 = *v137;
            v138 = v137[1];
            v113 = __OFSUB__(v138, v139);
            v140 = v138 - v139;
            if (v113)
              goto LABEL_177;
            v130 = v105 < v140;
            goto LABEL_129;
          }
        }
        else
        {
          if (v98 != 3)
          {
            v131 = *((_QWORD *)v189 + 4);
            v132 = *((_QWORD *)v189 + 5);
            v113 = __OFSUB__(v132, v131);
            v124 = v132 - v131;
            v125 = v113;
            goto LABEL_123;
          }
          v104 = *((_QWORD *)v189 + 4);
          v103 = *((_QWORD *)v189 + 5);
          v113 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          v106 = v113;
        }
        if ((v106 & 1) != 0)
          goto LABEL_169;
        v114 = v98 - 2;
        v120 = (uint64_t *)(v101 + 16 * (v98 - 2));
        v122 = *v120;
        v121 = v120[1];
        v123 = __OFSUB__(v121, v122);
        v124 = v121 - v122;
        v125 = v123;
        if (v123)
          goto LABEL_172;
        v126 = (uint64_t *)(v101 + 16 * v102);
        v128 = *v126;
        v127 = v126[1];
        v113 = __OFSUB__(v127, v128);
        v129 = v127 - v128;
        if (v113)
          goto LABEL_175;
        if (__OFADD__(v124, v129))
          goto LABEL_176;
        if (v124 + v129 >= v105)
        {
          v130 = v105 < v129;
LABEL_129:
          if (v130)
            v102 = v114;
          goto LABEL_131;
        }
LABEL_123:
        if ((v125 & 1) != 0)
          goto LABEL_171;
        v133 = (uint64_t *)(v101 + 16 * v102);
        v135 = *v133;
        v134 = v133[1];
        v113 = __OFSUB__(v134, v135);
        v136 = v134 - v135;
        if (v113)
          goto LABEL_174;
        if (v136 < v124)
          goto LABEL_140;
LABEL_131:
        v141 = v102 - 1;
        if (v102 - 1 >= v98)
          goto LABEL_162;
        v142 = *v196;
        if (!*v196)
          goto LABEL_189;
        v143 = v101;
        v144 = (uint64_t *)(v101 + 16 * v141);
        v145 = *v144;
        v146 = v102;
        v147 = (_QWORD *)(v143 + 16 * v102);
        v148 = v147[1];
        v149 = v30[9];
        v150 = v142 + v149 * *v144;
        v151 = v142 + v149 * *v147;
        v152 = v142 + v149 * v148;
        a2 = v187;
        swift_bridgeObjectRetain();
        v153 = v150;
        v154 = v190;
        sub_23E517D10(v153, v151, v152, v184, a2);
        if (v154)
          goto LABEL_144;
        swift_bridgeObjectRelease();
        v155 = v189;
        if (v148 < v145)
          goto LABEL_163;
        if (v146 > *((_QWORD *)v189 + 2))
          goto LABEL_164;
        *v144 = v145;
        v101 = v192;
        *(_QWORD *)(v192 + 16 * v141 + 8) = v148;
        v156 = *((_QWORD *)v155 + 2);
        if (v146 >= v156)
          goto LABEL_165;
        v190 = 0;
        v98 = v156 - 1;
        memmove(v147, v147 + 2, 16 * (v156 - 1 - v146));
        *((_QWORD *)v155 + 2) = v156 - 1;
        v130 = v156 > 2;
        v30 = v197;
        v15 = v198;
        v12 = v193;
        v18 = v188;
        v34 = (uint64_t)v186;
        if (!v130)
          goto LABEL_140;
      }
    }
    v98 = 1;
LABEL_140:
    v24 = v196[1];
    v27 = v176;
    if (v34 >= v24)
    {
      v33 = v174;
      v173 = v189;
LABEL_147:
      v174 = v33;
      if (v98 < 2)
      {
LABEL_158:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v174 + 16) = 0;
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      v158 = *v196;
      v199 = *v196;
      v159 = v187;
      while (1)
      {
        v160 = v98 - 2;
        if (v98 < 2)
          break;
        if (!v158)
          goto LABEL_191;
        v161 = v173;
        v162 = v173 + 32;
        v163 = *(_QWORD *)&v173[16 * v160 + 32];
        v164 = *(_QWORD *)&v162[16 * v98 - 8];
        v165 = v197[9];
        v166 = v158 + v165 * v163;
        v167 = v158 + v165 * *(_QWORD *)&v162[16 * v98 - 16];
        v168 = v158 + v165 * v164;
        swift_bridgeObjectRetain();
        v169 = v166;
        v170 = v190;
        sub_23E517D10(v169, v167, v168, v184, v159);
        v190 = v170;
        if (v170)
          goto LABEL_144;
        swift_bridgeObjectRelease();
        if (v164 < v163)
          goto LABEL_179;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v161 = sub_23E530CC8((uint64_t)v161);
        if (v160 >= *((_QWORD *)v161 + 2))
          goto LABEL_180;
        v171 = &v161[16 * v160 + 32];
        *(_QWORD *)v171 = v163;
        *((_QWORD *)v171 + 1) = v164;
        v172 = *((_QWORD *)v161 + 2);
        if (v98 > v172)
          goto LABEL_181;
        v173 = v161;
        memmove(&v161[16 * v98 + 16], &v161[16 * v98 + 32], 16 * (v172 - v98));
        *((_QWORD *)v161 + 2) = v172 - 1;
        v98 = v172 - 1;
        v158 = v199;
        if (v172 <= 2)
          goto LABEL_158;
      }
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_189:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_190:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_191:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_192:
      swift_bridgeObjectRelease_n();
      result = sub_23E538000();
      __break(1u);
      return result;
    }
  }
  v83 = 0;
  v84 = v194;
  while ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
  {
    ++v83;
    v84 += v75;
    if (v74 == v83)
    {
      v83 = 1000;
      break;
    }
  }
  v85 = 0;
  v86 = v194;
  while (1)
  {
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      goto LABEL_85;
    v87 = v85 + 1;
    if (__OFADD__(v85, 1))
      break;
    ++v85;
    v86 += v75;
    if (v87 == v74)
    {
      v85 = 1000;
      goto LABEL_85;
    }
  }
  __break(1u);
LABEL_144:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v174 + 16) = 0;
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E519350(_QWORD **a1, uint64_t a2)
{
  return sub_23E51C2B0(a1, a2, (void (*)(_QWORD *, uint64_t))sub_23E5185F4);
}

uint64_t sub_23E51936C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v39 = a2;
  v40 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = 0;
  v42 = v13;
  v14 = 0;
  v49 = a3;
  v15 = *(_QWORD *)(a3 + 56);
  v43 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v44 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v21 = v20 | (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v49 + 48);
    v26 = *(_QWORD *)(v10 + 72);
    v45 = v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, v25 + v26 * v21, v9);
    if (!*(_QWORD *)(a4 + 16) || (v27 = sub_23E1E3300((uint64_t)v13), (v28 & 1) == 0))
    {
      v19 = sub_23E536F20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
      goto LABEL_5;
    }
    sub_23E1FF9C8(*(_QWORD *)(a4 + 56) + 40 * v27, (uint64_t)v46);
    v29 = a4;
    v31 = v47;
    v30 = v48;
    __swift_project_boxed_opaque_existential_1(v46, v47);
    v32 = *(void (**)(uint64_t, uint64_t))(v30 + 64);
    v33 = v31;
    a4 = v29;
    v34 = v30;
    v13 = v42;
    v32(v33, v34);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
    v35 = sub_23E536F20();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v8, 1, v35) == 1)
    {
LABEL_5:
      sub_23E1E7C64((uint64_t)v8, &qword_2543330E0);
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v8, &qword_2543330E0);
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      *(unint64_t *)((char *)v40 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
      if (__OFADD__(v41++, 1))
      {
        __break(1u);
LABEL_28:
        v37 = v49;
        swift_retain();
        return sub_23E525710(v40, v39, v41, v37);
      }
    }
  }
  v22 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v22 >= v44)
    goto LABEL_28;
  v23 = *(_QWORD *)(v43 + 8 * v22);
  ++v14;
  if (v23)
    goto LABEL_21;
  v14 = v22 + 1;
  if (v22 + 1 >= v44)
    goto LABEL_28;
  v23 = *(_QWORD *)(v43 + 8 * v14);
  if (v23)
    goto LABEL_21;
  v14 = v22 + 2;
  if (v22 + 2 >= v44)
    goto LABEL_28;
  v23 = *(_QWORD *)(v43 + 8 * v14);
  if (v23)
  {
LABEL_21:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
    goto LABEL_22;
  }
  v24 = v22 + 3;
  if (v24 >= v44)
    goto LABEL_28;
  v23 = *(_QWORD *)(v43 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v44)
      goto LABEL_28;
    v23 = *(_QWORD *)(v43 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E5196CC(uint64_t a1, uint64_t a2)
{
  return sub_23E51971C(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E51936C);
}

uint64_t sub_23E51971C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = a3((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = a3((char *)v13, v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x24264FEBC](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_23E5198E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v71 = a4;
  v61 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v59 - v11;
  v12 = sub_23E536F20();
  v78 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v73 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v59 - v15;
  v82 = sub_23E536F80();
  v72 = *(_QWORD **)(v82 - 8);
  v16 = MEMORY[0x24BDAC7A8](v82);
  v68 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v77 = (uint64_t)&v59 - v19;
  result = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v59 - v21;
  v65 = a3;
  v60 = a2;
  if (a3 != a2)
  {
    v22 = v72[9];
    v62 = (void (*)(uint64_t, uint64_t, uint64_t))v72[2];
    v76 = v22 * (v65 - 1);
    v64 = v22;
    v23 = v22 * v65;
    v66 = a5;
LABEL_5:
    v24 = 0;
    v25 = v61;
    v26 = v82;
    while (1)
    {
      v27 = *v71;
      v28 = v23;
      v70 = v23 + v24;
      v29 = v23 + v24 + v27;
      v30 = (uint64_t)v74;
      v31 = v62;
      v62((uint64_t)v74, v29, v26);
      v69 = v76 + v24;
      v31(v77, v76 + v24 + v27, v26);
      if (!*(_QWORD *)(a5 + 16))
        break;
      v32 = sub_23E1E3300(v30);
      if ((v33 & 1) == 0)
        break;
      sub_23E1FF9C8(*(_QWORD *)(a5 + 56) + 40 * v32, (uint64_t)v79);
      v34 = v80;
      v35 = v81;
      __swift_project_boxed_opaque_existential_1(v79, v80);
      v36 = *(void (**)(uint64_t, uint64_t))(v35 + 64);
      v37 = v12;
      v38 = v63;
      v39 = v35;
      a5 = v66;
      v36(v34, v39);
      v40 = (uint64_t)v38;
      v12 = v37;
      v41 = v78;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v40, 1, v37) == 1)
        goto LABEL_12;
      (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v75, v40, v37);
LABEL_13:
      v42 = (uint64_t)v67;
      v23 = v28;
      if (*(_QWORD *)(a5 + 16) && (v43 = sub_23E1E3300(v77), (v44 & 1) != 0))
      {
        sub_23E1FF9C8(*(_QWORD *)(a5 + 56) + 40 * v43, (uint64_t)v79);
        v46 = v80;
        v45 = v81;
        __swift_project_boxed_opaque_existential_1(v79, v80);
        v47 = *(void (**)(uint64_t, uint64_t))(v45 + 64);
        v48 = v46;
        a5 = v66;
        v49 = v45;
        v42 = (uint64_t)v67;
        v47(v48, v49);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v42, 1, v12) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v73, v42, v12);
          goto LABEL_19;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v42, 1, 1, v12);
      }
      sub_23E536ED8();
      sub_23E1E7C64(v42, &qword_2543330E0);
LABEL_19:
      v50 = v75;
      v51 = v73;
      v52 = sub_23E536EC0();
      v53 = *(void (**)(char *, uint64_t))(v78 + 8);
      v53(v51, v12);
      v53(v50, v12);
      v54 = (void (*)(uint64_t, uint64_t))v72[1];
      v55 = v82;
      v54(v77, v82);
      result = ((uint64_t (*)(char *, uint64_t))v54)(v74, v55);
      if ((v52 & 1) == 0)
        goto LABEL_4;
      v56 = *v71;
      if (!*v71)
      {
        __break(1u);
        return result;
      }
      v57 = v56 + v76 + v24;
      v58 = (void (*)(char *, uint64_t, uint64_t))v72[4];
      v58(v68, v56 + v23 + v24, v82);
      swift_arrayInitWithTakeFrontToBack();
      v26 = v82;
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v58)(v57, v68, v82);
      v24 -= v64;
      ++v25;
      a5 = v66;
      if (v65 == v25)
      {
LABEL_4:
        v76 += v64;
        v23 += v64;
        if (++v65 == v60)
          return result;
        goto LABEL_5;
      }
    }
    v40 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v63, 1, 1, v12);
LABEL_12:
    sub_23E536ED8();
    sub_23E1E7C64(v40, &qword_2543330E0);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_23E519E10(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  char *v124;
  char v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  char *v131;
  void (*v132)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  BOOL v151;
  unint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  char v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  BOOL v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  unint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  char *v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  char *v208;
  unint64_t v209;
  void (*v210)(uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  unint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  void (*v236)(char *, char *, uint64_t);
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v211 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v211 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v219 = (char *)&v211 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v211 - v15;
  v248 = sub_23E536F20();
  v244 = *(_QWORD *)(v248 - 8);
  v17 = MEMORY[0x24BDAC7A8](v248);
  v19 = (char *)&v211 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v237 = (char *)&v211 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v218 = (char *)&v211 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v213 = (char *)&v211 - v24;
  v233 = sub_23E536F80();
  v25 = *(_QWORD **)(v233 - 8);
  v26 = MEMORY[0x24BDAC7A8](v233);
  v217 = (char *)&v211 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v234 = (char *)&v211 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v243 = (uint64_t)&v211 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v232 = (char *)&v211 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v225 = (uint64_t)&v211 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v221 = (char *)&v211 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v215 = (char *)&v211 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v214 = (char *)&v211 - v40;
  v241 = a1;
  v41 = a1[1];
  swift_bridgeObjectRetain_n();
  v42 = sub_23E53830C();
  if (v42 >= v41)
  {
    if (v41 < 0)
      goto LABEL_172;
    if (v41)
    {
      swift_bridgeObjectRetain();
      sub_23E5198E4(0, v41, 1, v241, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  v212 = v42;
  if (v41 >= 0)
    v43 = v41;
  else
    v43 = v41 + 1;
  if (v41 < -1)
    goto LABEL_180;
  v235 = a2;
  v242 = v25;
  if (v41 < 2)
  {
    v48 = MEMORY[0x24BEE4AF8];
    v222 = MEMORY[0x24BEE4AF8]
         + ((*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80));
    if (v41 != 1)
    {
      v136 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v224 = (char *)MEMORY[0x24BEE4AF8];
LABEL_136:
      v211 = v48;
      v226 = v3;
      if (v136 >= 2)
      {
        v195 = *v241;
        v196 = v224;
        v248 = *v241;
        do
        {
          v197 = v136 - 2;
          if (v136 < 2)
            goto LABEL_166;
          if (!v195)
            goto LABEL_179;
          v198 = (uint64_t)v196;
          v199 = *(_QWORD *)&v196[16 * v197 + 32];
          v200 = *(_QWORD *)&v196[16 * v136 + 24];
          v201 = v242[9];
          v202 = v195 + v201 * v199;
          v203 = v195 + v201 * *(_QWORD *)&v196[16 * v136 + 16];
          v204 = v195 + v201 * v200;
          v205 = v235;
          swift_bridgeObjectRetain();
          v206 = v202;
          v207 = v226;
          sub_23E516DD4(v206, v203, v204, v222, v205, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23E516814);
          v226 = v207;
          if (v207)
            goto LABEL_132;
          if (v200 < v199)
            goto LABEL_168;
          v196 = (char *)v198;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v196 = sub_23E530CC8(v198);
          if (v197 >= *((_QWORD *)v196 + 2))
            goto LABEL_169;
          v208 = &v196[16 * v197 + 32];
          *(_QWORD *)v208 = v199;
          *((_QWORD *)v208 + 1) = v200;
          v209 = *((_QWORD *)v196 + 2);
          if (v136 > v209)
            goto LABEL_170;
          memmove(&v196[16 * v136 + 16], &v196[16 * v136 + 32], 16 * (v209 - v136));
          *((_QWORD *)v196 + 2) = v209 - 1;
          v136 = v209 - 1;
          v195 = v248;
        }
        while (v209 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v211 + 16) = 0;
LABEL_148:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    v211 = MEMORY[0x24BEE4AF8];
    v226 = v2;
  }
  else
  {
    v226 = v2;
    v44 = v43 >> 1;
    v45 = sub_23E537844();
    *(_QWORD *)(v45 + 16) = v44;
    v46 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    v211 = v45;
    v222 = v45 + v46;
  }
  v49 = 0;
  v224 = (char *)MEMORY[0x24BEE4AF8];
  v238 = v9;
  v229 = v12;
  v223 = v16;
  v228 = v19;
  while (2)
  {
    v50 = v49;
    v51 = v49 + 1;
    v220 = v50;
    if (v51 >= v41)
    {
      v64 = v51;
      v89 = v224;
      goto LABEL_81;
    }
    v239 = v41;
    v52 = *v241;
    v53 = v25;
    v54 = v25[9];
    v231 = v51;
    v55 = (void (*)(void))v53[2];
    v56 = (uint64_t)v214;
    v57 = v233;
    ((void (*)(char *, uint64_t, uint64_t))v55)(v214, v52 + v54 * v51, v233);
    v227 = (char *)v52;
    v240 = v54;
    v58 = v52 + v54 * v50;
    v59 = v55;
    v60 = (uint64_t)v215;
    ((void (*)(char *, uint64_t, uint64_t))v55)(v215, v58, v57);
    v61 = v226;
    LODWORD(v236) = sub_23E516814(v56, v60, a2);
    v226 = v61;
    if (v61)
    {
      v210 = (void (*)(uint64_t, uint64_t))v53[1];
      v210(v60, v57);
      v210(v56, v57);
      swift_bridgeObjectRelease();
LABEL_133:
      *(_QWORD *)(v211 + 16) = 0;
      goto LABEL_148;
    }
    v62 = v50;
    v63 = (void (*)(uint64_t, uint64_t))v53[1];
    v63(v60, v57);
    v63(v56, v57);
    v64 = v62 + 2;
    v65 = v239;
    if (v62 + 2 >= v239)
      goto LABEL_36;
    v231 *= v240;
    v66 = v227;
    v230 = v240 * v64;
    v67 = v213;
    v68 = v221;
    while (1)
    {
      v69 = v64;
      v70 = v233;
      v71 = (uint64_t)v68;
      v59();
      ((void (*)(uint64_t, char *, uint64_t))v59)(v225, &v66[v231], v70);
      v72 = v218;
      if (*(_QWORD *)(a2 + 16) && (v73 = sub_23E1E3300(v71), (v74 & 1) != 0))
      {
        sub_23E1FF9C8(*(_QWORD *)(a2 + 56) + 40 * v73, (uint64_t)&v245);
        v76 = v246;
        v75 = v247;
        __swift_project_boxed_opaque_existential_1(&v245, v246);
        v77 = v76;
        a2 = v235;
        (*(void (**)(uint64_t, uint64_t))(v75 + 64))(v77, v75);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v245);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v244 + 48))(v16, 1, v248) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v244 + 32))(v67, v16, v248);
          if (!*(_QWORD *)(a2 + 16))
            goto LABEL_29;
          goto LABEL_26;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v244 + 56))(v16, 1, 1, v248);
      }
      sub_23E536ED8();
      sub_23E1E7C64((uint64_t)v16, &qword_2543330E0);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_29;
LABEL_26:
      v78 = sub_23E1E3300(v225);
      if ((v79 & 1) == 0)
      {
LABEL_29:
        v83 = (uint64_t)v219;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v244 + 56))(v219, 1, 1, v248);
        goto LABEL_30;
      }
      sub_23E1FF9C8(*(_QWORD *)(a2 + 56) + 40 * v78, (uint64_t)&v245);
      v81 = v246;
      v80 = v247;
      __swift_project_boxed_opaque_existential_1(&v245, v246);
      v82 = v81;
      v83 = (uint64_t)v219;
      (*(void (**)(uint64_t, uint64_t))(v80 + 64))(v82, v80);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v245);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48))(v83, 1, v248) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v244 + 32))(v72, v83, v248);
        goto LABEL_31;
      }
LABEL_30:
      sub_23E536ED8();
      sub_23E1E7C64(v83, &qword_2543330E0);
LABEL_31:
      v84 = sub_23E536EC0();
      v85 = *(void (**)(char *, uint64_t))(v244 + 8);
      v86 = v72;
      v87 = v248;
      v85(v86, v248);
      v85(v67, v87);
      v88 = v233;
      v63(v225, v233);
      v63((uint64_t)v221, v88);
      if (((v236 ^ v84) & 1) != 0)
        break;
      v64 = v69 + 1;
      v65 = v239;
      v66 += v240;
      a2 = v235;
      v68 = v221;
      if (v239 == v64)
      {
        v64 = v239;
        goto LABEL_36;
      }
    }
    a2 = v235;
    v64 = v69;
    v65 = v239;
LABEL_36:
    v90 = v242;
    v89 = v224;
    v91 = (uint64_t)v232;
    v50 = v220;
    if ((v236 & 1) == 0)
      goto LABEL_49;
    v92 = v227;
    if (v64 < v220)
      goto LABEL_175;
    if (v220 >= v64)
    {
LABEL_49:
      v100 = (uint64_t)v238;
      if (v64 >= v65)
        goto LABEL_81;
      goto LABEL_52;
    }
    v93 = 0;
    v94 = v240 * (v64 - 1);
    v95 = v64 * v240;
    v96 = v220;
    v97 = v220 * v240;
    do
    {
      if (v96 != v64 + v93 - 1)
      {
        if (!v92)
          goto LABEL_178;
        v99 = &v92[v94];
        v236 = (void (*)(char *, char *, uint64_t))v242[4];
        v236(v217, &v92[v97], v233);
        if (v97 < v94 || &v92[v97] >= &v92[v95])
        {
          v98 = v233;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v98 = v233;
          if (v97 != v94)
            swift_arrayInitWithTakeBackToFront();
        }
        v236(v99, v217, v98);
        a2 = v235;
        v16 = v223;
        v92 = v227;
      }
      ++v96;
      --v93;
      v94 -= v240;
      v95 -= v240;
      v97 += v240;
    }
    while (v96 < v64 + v93);
    v90 = v242;
    v100 = (uint64_t)v238;
    v65 = v239;
    v89 = v224;
    v91 = (uint64_t)v232;
    v50 = v220;
    if (v64 >= v239)
      goto LABEL_81;
LABEL_52:
    if (__OFSUB__(v64, v50))
      goto LABEL_171;
    if (v64 - v50 >= v212)
      goto LABEL_81;
    if (__OFADD__(v50, v212))
      goto LABEL_173;
    if (v50 + v212 >= v65)
      v101 = v65;
    else
      v101 = v50 + v212;
    if (v101 >= v50)
    {
      if (v64 == v101)
        goto LABEL_81;
      v102 = v90[9];
      v227 = (char *)v90[2];
      v230 = v102;
      v239 = v64 * v102;
      v240 = v102 * (v64 - 1);
      v103 = v233;
      v216 = v101;
      while (2)
      {
        v105 = 0;
        v231 = v64;
        while (2)
        {
          v106 = v100;
          v107 = *v241;
          v236 = (void (*)(char *, char *, uint64_t))(v239 + v105);
          v108 = a2;
          v109 = v227;
          ((void (*)(uint64_t, uint64_t, uint64_t))v227)(v91, v239 + v105 + v107, v103);
          ((void (*)(uint64_t, uint64_t, uint64_t))v109)(v243, v240 + v105 + v107, v103);
          a2 = v108;
          if (!*(_QWORD *)(v108 + 16) || (v110 = sub_23E1E3300(v91), (v111 & 1) == 0))
          {
            v115 = (uint64_t)v229;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v244 + 56))(v229, 1, 1, v248);
LABEL_70:
            sub_23E536ED8();
            sub_23E1E7C64(v115, &qword_2543330E0);
            goto LABEL_71;
          }
          sub_23E1FF9C8(*(_QWORD *)(v108 + 56) + 40 * v110, (uint64_t)&v245);
          v112 = v246;
          v113 = v247;
          __swift_project_boxed_opaque_existential_1(&v245, v246);
          v114 = *(void (**)(uint64_t, uint64_t))(v113 + 64);
          v115 = (uint64_t)v229;
          v106 = (uint64_t)v238;
          v116 = v113;
          a2 = v235;
          v114(v112, v116);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v245);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48))(v115, 1, v248) == 1)
            goto LABEL_70;
          (*(void (**)(char *, uint64_t, uint64_t))(v244 + 32))(v237, v115, v248);
LABEL_71:
          v117 = v228;
          if (*(_QWORD *)(a2 + 16) && (v118 = sub_23E1E3300(v243), (v119 & 1) != 0))
          {
            sub_23E1FF9C8(*(_QWORD *)(a2 + 56) + 40 * v118, (uint64_t)&v245);
            v120 = v246;
            v121 = v247;
            __swift_project_boxed_opaque_existential_1(&v245, v246);
            v122 = *(void (**)(uint64_t, uint64_t))(v121 + 64);
            v106 = (uint64_t)v238;
            v123 = v121;
            a2 = v235;
            v122(v120, v123);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v245);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48))(v106, 1, v248) != 1)
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v244 + 32))(v117, v106, v248);
              goto LABEL_77;
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v244 + 56))(v106, 1, 1, v248);
          }
          sub_23E536ED8();
          sub_23E1E7C64(v106, &qword_2543330E0);
LABEL_77:
          v124 = v237;
          v125 = sub_23E536EC0();
          v126 = *(void (**)(char *, uint64_t))(v244 + 8);
          v127 = v117;
          v128 = v248;
          v126(v127, v248);
          v126(v124, v128);
          v129 = (void (*)(uint64_t, uint64_t))v242[1];
          v103 = v233;
          v129(v243, v233);
          v91 = (uint64_t)v232;
          v129((uint64_t)v232, v103);
          if ((v125 & 1) != 0)
          {
            v130 = *v241;
            if (!*v241)
              goto LABEL_176;
            v131 = (char *)(v130 + v240 + v105);
            v132 = (void (*)(char *, uint64_t, uint64_t))v242[4];
            v132(v234, v130 + v239 + v105, v103);
            swift_arrayInitWithTakeFrontToBack();
            v132(v131, (uint64_t)v234, v103);
            v104 = v231;
            v105 -= v230;
            ++v50;
            a2 = v235;
            v100 = (uint64_t)v238;
            if (v231 == v50)
              goto LABEL_62;
            continue;
          }
          break;
        }
        v100 = (uint64_t)v238;
        v104 = v231;
LABEL_62:
        v64 = v104 + 1;
        v240 += v230;
        v239 += v230;
        v50 = v220;
        if (v64 != v216)
          continue;
        break;
      }
      v64 = v216;
      v16 = v223;
      v89 = v224;
LABEL_81:
      if (v64 < v50)
        goto LABEL_167;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v231 = v64;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v89 = sub_23E530794(0, *((_QWORD *)v89 + 2) + 1, 1, v89);
      v135 = *((_QWORD *)v89 + 2);
      v134 = *((_QWORD *)v89 + 3);
      v136 = v135 + 1;
      if (v135 >= v134 >> 1)
        v89 = sub_23E530794((char *)(v134 > 1), v135 + 1, 1, v89);
      *((_QWORD *)v89 + 2) = v136;
      v137 = v89 + 32;
      v138 = &v89[16 * v135 + 32];
      v139 = v231;
      *(_QWORD *)v138 = v50;
      *((_QWORD *)v138 + 1) = v139;
      v224 = v89;
      if (v135)
      {
        v240 = (uint64_t)(v89 + 32);
        while (1)
        {
          v140 = v136 - 1;
          if (v136 >= 4)
          {
            v145 = &v137[16 * v136];
            v146 = *((_QWORD *)v145 - 8);
            v147 = *((_QWORD *)v145 - 7);
            v151 = __OFSUB__(v147, v146);
            v148 = v147 - v146;
            if (v151)
              goto LABEL_155;
            v150 = *((_QWORD *)v145 - 6);
            v149 = *((_QWORD *)v145 - 5);
            v151 = __OFSUB__(v149, v150);
            v143 = v149 - v150;
            v144 = v151;
            if (v151)
              goto LABEL_156;
            v152 = v136 - 2;
            v153 = &v137[16 * v136 - 32];
            v155 = *(_QWORD *)v153;
            v154 = *((_QWORD *)v153 + 1);
            v151 = __OFSUB__(v154, v155);
            v156 = v154 - v155;
            if (v151)
              goto LABEL_158;
            v151 = __OFADD__(v143, v156);
            v157 = v143 + v156;
            if (v151)
              goto LABEL_161;
            if (v157 >= v148)
            {
              v175 = &v137[16 * v140];
              v177 = *(_QWORD *)v175;
              v176 = *((_QWORD *)v175 + 1);
              v151 = __OFSUB__(v176, v177);
              v178 = v176 - v177;
              if (v151)
                goto LABEL_165;
              v168 = v143 < v178;
              goto LABEL_119;
            }
          }
          else
          {
            if (v136 != 3)
            {
              v169 = *((_QWORD *)v89 + 4);
              v170 = *((_QWORD *)v89 + 5);
              v151 = __OFSUB__(v170, v169);
              v162 = v170 - v169;
              v163 = v151;
              goto LABEL_113;
            }
            v142 = *((_QWORD *)v89 + 4);
            v141 = *((_QWORD *)v89 + 5);
            v151 = __OFSUB__(v141, v142);
            v143 = v141 - v142;
            v144 = v151;
          }
          if ((v144 & 1) != 0)
            goto LABEL_157;
          v152 = v136 - 2;
          v158 = &v137[16 * v136 - 32];
          v160 = *(_QWORD *)v158;
          v159 = *((_QWORD *)v158 + 1);
          v161 = __OFSUB__(v159, v160);
          v162 = v159 - v160;
          v163 = v161;
          if (v161)
            goto LABEL_160;
          v164 = &v137[16 * v140];
          v166 = *(_QWORD *)v164;
          v165 = *((_QWORD *)v164 + 1);
          v151 = __OFSUB__(v165, v166);
          v167 = v165 - v166;
          if (v151)
            goto LABEL_163;
          if (__OFADD__(v162, v167))
            goto LABEL_164;
          if (v162 + v167 >= v143)
          {
            v168 = v143 < v167;
LABEL_119:
            if (v168)
              v140 = v152;
            goto LABEL_121;
          }
LABEL_113:
          if ((v163 & 1) != 0)
            goto LABEL_159;
          v171 = &v137[16 * v140];
          v173 = *(_QWORD *)v171;
          v172 = *((_QWORD *)v171 + 1);
          v151 = __OFSUB__(v172, v173);
          v174 = v172 - v173;
          if (v151)
            goto LABEL_162;
          if (v174 < v162)
            goto LABEL_130;
LABEL_121:
          v179 = v140 - 1;
          if (v140 - 1 >= v136)
          {
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          v180 = *v241;
          if (!*v241)
            goto LABEL_177;
          v181 = &v137[16 * v179];
          v182 = v137;
          v183 = *(_QWORD *)v181;
          v184 = v140;
          v185 = &v182[16 * v140];
          v186 = *((_QWORD *)v185 + 1);
          v187 = v242[9];
          v188 = v180 + v187 * *(_QWORD *)v181;
          v189 = v180 + v187 * *(_QWORD *)v185;
          v190 = v180 + v187 * v186;
          v191 = v235;
          swift_bridgeObjectRetain();
          v192 = v188;
          v193 = v226;
          sub_23E516DD4(v192, v189, v190, v222, v191, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23E516814);
          v226 = v193;
          if (v193)
          {
LABEL_132:
            swift_bridgeObjectRelease();
            goto LABEL_133;
          }
          v89 = v224;
          if (v186 < v183)
            goto LABEL_152;
          if (v184 > *((_QWORD *)v224 + 2))
            goto LABEL_153;
          *(_QWORD *)v181 = v183;
          v137 = (char *)v240;
          *(_QWORD *)(v240 + 16 * v179 + 8) = v186;
          v194 = *((_QWORD *)v89 + 2);
          if (v184 >= v194)
            goto LABEL_154;
          v136 = v194 - 1;
          memmove(v185, v185 + 16, 16 * (v194 - 1 - v184));
          *((_QWORD *)v89 + 2) = v194 - 1;
          a2 = v235;
          v16 = v223;
          if (v194 <= 2)
            goto LABEL_130;
        }
      }
      v136 = 1;
LABEL_130:
      v25 = v242;
      v41 = v241[1];
      v49 = v231;
      if (v231 >= v41)
      {
        v3 = v226;
        v48 = v211;
        goto LABEL_136;
      }
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_177:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_178:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_179:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_180:
  swift_bridgeObjectRelease_n();
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E51B070(_QWORD **a1, uint64_t a2)
{
  return sub_23E51C2B0(a1, a2, (void (*)(_QWORD *, uint64_t))sub_23E519E10);
}

uint64_t sub_23E51B08C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char v28;
  char v29;
  void (*v30)(char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = v5;
  v45 = a5;
  v11 = sub_23E536F80();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v37 - v16;
  result = MEMORY[0x24BDAC7A8](v15);
  v38 = a2;
  if (a3 != a2)
  {
    v43 = (char *)&v37 - v19;
    v20 = (void (*)(char *, uint64_t, uint64_t))v12[2];
    v41 = v12[9];
    v42 = v20;
    v49 = v41 * a3;
    v50 = v41 * (a3 - 1);
    v37 = a1;
    v39 = v17;
    v40 = a4;
    v47 = v12;
    while (2)
    {
      v21 = 0;
      v44 = a3;
      while (1)
      {
        v51 = v6;
        v46 = a1;
        v24 = *a4;
        v26 = v42;
        v25 = (uint64_t)v43;
        v42(v43, v49 + v21 + *a4, v11);
        v26(v17, v50 + v21 + v24, v11);
        v27 = v51;
        v28 = sub_23E516AE0(v25, (uint64_t)v17, v45);
        v6 = v27;
        if (v27)
        {
          v36 = (void (*)(char *, uint64_t))v12[1];
          v36(v17, v11);
          return ((uint64_t (*)(uint64_t, uint64_t))v36)(v25, v11);
        }
        v29 = v28;
        v30 = (void (*)(char *, uint64_t))v12[1];
        v30(v17, v11);
        result = ((uint64_t (*)(uint64_t, uint64_t))v30)(v25, v11);
        if ((v29 & 1) == 0)
          break;
        v51 = 0;
        v31 = v40;
        v32 = *v40;
        if (!*v40)
        {
          __break(1u);
          return result;
        }
        v33 = v11;
        v34 = v32 + v50 + v21;
        v35 = (void (*)(char *, uint64_t, uint64_t))v47[4];
        v35(v48, v32 + v49 + v21, v33);
        swift_arrayInitWithTakeFrontToBack();
        v22 = v34;
        v11 = v33;
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v35)(v22, v48, v33);
        v21 -= v41;
        a1 = v46 + 1;
        v23 = v44;
        a4 = v31;
        v6 = v51;
        v12 = v47;
        v17 = v39;
        if (v44 == v46 + 1)
          goto LABEL_10;
      }
      v23 = v44;
      v12 = v47;
      v17 = v39;
      a4 = v40;
LABEL_10:
      a3 = v23 + 1;
      v50 += v41;
      v49 += v41;
      a1 = v37;
      if (a3 != v38)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23E51B328(char **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  unint64_t v40;
  void (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  void (*v120)(char *, uint64_t);
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, uint64_t);
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  BOOL v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  char v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  unint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  char *v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  unint64_t v202;
  void (*v203)(uint64_t, uint64_t);
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  unint64_t v214;
  uint64_t v215;
  char *v216;
  unint64_t v217;
  _QWORD *v218;
  unint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  char **v225;
  char *v226;
  char *v227;
  _QWORD v228[3];
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;

  v3 = v2;
  v231 = sub_23E536F80();
  v6 = *(_QWORD *)(v231 - 8);
  v7 = MEMORY[0x24BDAC7A8](v231);
  v211 = (char *)&v204 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v221 = (char *)&v204 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v204 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v204 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v204 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v210 = (char *)&v204 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v207 = (char *)&v204 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v206 = (char *)&v204 - v24;
  v225 = a1;
  v25 = (uint64_t)a1[1];
  v220 = a2;
  swift_bridgeObjectRetain_n();
  v26 = sub_23E53830C();
  if (v26 >= v25)
  {
    if (v25 < 0)
      goto LABEL_177;
    if (v25)
    {
      v31 = v220;
      swift_bridgeObjectRetain();
      sub_23E51B08C(0, v25, 1, v225, v31);
    }
    return swift_bridgeObjectRelease_n();
  }
  v204 = v26;
  if (v25 >= 0)
    v27 = v25;
  else
    v27 = v25 + 1;
  if (v25 < -1)
    goto LABEL_186;
  v218 = (_QWORD *)v6;
  v226 = v16;
  if (v25 < 2)
  {
    v33 = *(unsigned __int8 *)(v6 + 80);
    v34 = (char *)MEMORY[0x24BEE4AF8];
    v214 = MEMORY[0x24BEE4AF8] + ((v33 + 32) & ~v33);
    v205 = MEMORY[0x24BEE4AF8];
    if (v25 != 1)
    {
      v129 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_143:
      v213 = v34;
      v215 = v3;
      if (v129 >= 2)
      {
        v188 = *v225;
        while (1)
        {
          v189 = v129 - 2;
          if (v129 < 2)
            goto LABEL_172;
          if (!v188)
            goto LABEL_185;
          v190 = *(_QWORD *)&v213[16 * v189 + 32];
          v191 = *(_QWORD *)&v213[16 * v129 + 24];
          v192 = v218[9];
          v193 = (unint64_t)&v188[v192 * v190];
          v194 = (unint64_t)&v188[v192 * *(_QWORD *)&v213[16 * v129 + 16]];
          v195 = (unint64_t)&v188[v192 * v191];
          v196 = v220;
          swift_bridgeObjectRetain();
          v197 = v193;
          v198 = v215;
          sub_23E516DD4(v197, v194, v195, v214, v196, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23E516AE0);
          v215 = v198;
          if (v198)
            goto LABEL_154;
          if (v191 < v190)
            goto LABEL_173;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v213 = sub_23E530CC8((uint64_t)v213);
          v199 = v213;
          if (v189 >= *((_QWORD *)v213 + 2))
            goto LABEL_174;
          v200 = v213 + 32;
          v201 = &v213[16 * v189 + 32];
          *(_QWORD *)v201 = v190;
          *((_QWORD *)v201 + 1) = v191;
          v202 = *((_QWORD *)v199 + 2);
          if (v129 > v202)
            goto LABEL_175;
          memmove(&v200[16 * v129 - 16], &v200[16 * v129], 16 * (v202 - v129));
          *((_QWORD *)v199 + 2) = v202 - 1;
          v129 = v202 - 1;
          if (v202 <= 2)
            goto LABEL_154;
        }
      }
      goto LABEL_154;
    }
    v208 = v19;
  }
  else
  {
    v208 = v19;
    v28 = v27 >> 1;
    v29 = sub_23E537844();
    *(_QWORD *)(v29 + 16) = v28;
    v30 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v205 = v29;
    v214 = v29 + v30;
  }
  v35 = 0;
  v34 = (char *)MEMORY[0x24BEE4AF8];
  v227 = v13;
  while (1)
  {
    v36 = v35;
    v37 = v35 + 1;
    v212 = v35;
    if (v35 + 1 >= v25)
    {
      ++v35;
LABEL_38:
      v67 = v218;
      if (v35 >= v25)
        goto LABEL_89;
      goto LABEL_39;
    }
    v223 = (char *)v25;
    v213 = v34;
    v38 = *v225;
    v39 = v218;
    v40 = v218[9];
    v41 = (void (*)(void))v218[2];
    v42 = (uint64_t)v206;
    v43 = v36;
    v44 = v231;
    ((void (*)(char *, char *, uint64_t))v41)(v206, &(*v225)[v40 * v37], v231);
    v216 = v38;
    v224 = v40;
    v45 = &v38[v40 * v43];
    v46 = (uint64_t)v207;
    ((void (*)(char *, char *, uint64_t))v41)(v207, v45, v44);
    LODWORD(v222) = sub_23E516AE0(v42, v46, v220);
    if (v3)
    {
      v203 = (void (*)(uint64_t, uint64_t))v39[1];
      v203(v46, v44);
      v203(v42, v44);
LABEL_154:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v205 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    v47 = (void (*)(uint64_t, uint64_t))v39[1];
    v47(v46, v44);
    v47(v42, v44);
    v35 = v43 + 2;
    v25 = (uint64_t)v223;
    if (v43 + 2 >= (uint64_t)v223)
    {
      v36 = v43;
      v34 = v213;
    }
    else
    {
      v219 = v224 * v37;
      v48 = v216;
      v217 = v224 * v35;
      v49 = v210;
      while (1)
      {
        v50 = v35;
        v51 = v231;
        v52 = (uint64_t)v49;
        v41();
        v53 = (uint64_t)v208;
        ((void (*)(char *, char *, uint64_t))v41)(v208, &v48[v219], v51);
        v54 = sub_23E516AE0(v52, v53, v220);
        v47(v53, v51);
        v47(v52, v51);
        if (((v222 ^ v54) & 1) != 0)
          break;
        v35 = v50 + 1;
        v25 = (uint64_t)v223;
        v48 += v224;
        v49 = v210;
        if (v223 == (char *)(v50 + 1))
        {
          v35 = (uint64_t)v223;
          v36 = v212;
          v34 = v213;
          goto LABEL_25;
        }
      }
      v36 = v212;
      v34 = v213;
      v35 = v50;
      v25 = (uint64_t)v223;
    }
LABEL_25:
    v13 = v227;
    if ((v222 & 1) == 0)
      goto LABEL_38;
    if (v35 < v36)
      goto LABEL_181;
    if (v36 >= v35)
      goto LABEL_38;
    v215 = 0;
    v55 = 0;
    v56 = v224 * (v35 - 1);
    v57 = v36;
    v58 = v35 * v224;
    v59 = v57;
    v60 = v57 * v224;
    v61 = v216;
    v219 = v35;
    do
    {
      if (v59 != v35 + v55 - 1)
      {
        if (!v61)
          goto LABEL_184;
        v63 = &v61[v60];
        v64 = &v61[v56];
        v65 = v61;
        v66 = (void (*)(char *, char *, uint64_t))v218[4];
        v66(v211, &v61[v60], v231);
        if (v60 < v56 || v63 >= &v65[v58])
        {
          v62 = v231;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v62 = v231;
          if (v60 != v56)
            swift_arrayInitWithTakeBackToFront();
        }
        v66(v64, v211, v62);
        v13 = v227;
        v35 = v219;
        v61 = v216;
      }
      ++v59;
      --v55;
      v56 -= v224;
      v58 -= v224;
      v60 += v224;
    }
    while (v59 < v35 + v55);
    v3 = v215;
    v67 = v218;
    v36 = v212;
    v34 = v213;
    v25 = (uint64_t)v223;
    if (v35 >= (uint64_t)v223)
      goto LABEL_89;
LABEL_39:
    if (__OFSUB__(v35, v36))
      goto LABEL_178;
    if (v35 - v36 >= v204)
      goto LABEL_89;
    if (__OFADD__(v36, v204))
      goto LABEL_179;
    v68 = v36 + v204 >= v25 ? v25 : v36 + v204;
    if (v68 < v36)
      break;
    if (v35 == v68)
      goto LABEL_89;
    v213 = v34;
    v69 = v67[9];
    v70 = (char *)v67[2];
    v215 = v3;
    v216 = v70;
    v224 = v69 * (v35 - 1);
    v217 = v69;
    v71 = v35 * v69;
    v72 = v231;
    v209 = v68;
    while (2)
    {
      v74 = 0;
      v75 = v36;
      v219 = v35;
      while (1)
      {
        v76 = (uint64_t)v226;
        v77 = *v225;
        v78 = v71;
        v223 = (char *)(v71 + v74);
        v79 = &v77[v71 + v74];
        v80 = v216;
        ((void (*)(char *, char *, uint64_t))v216)(v226, v79, v72);
        v222 = v224 + v74;
        ((void (*)(char *, char *, uint64_t))v80)(v13, &v77[v224 + v74], v72);
        v81 = v220;
        if (!*(_QWORD *)(v220 + 16))
        {
          v71 = v78;
          goto LABEL_82;
        }
        v82 = sub_23E1E3300(v76);
        v83 = v81;
        if ((v84 & 1) != 0)
        {
          sub_23E1FF9C8(*(_QWORD *)(v81 + 56) + 40 * v82, (uint64_t)v228);
          v85 = v229;
          v86 = v230;
          __swift_project_boxed_opaque_existential_1(v228, v229);
          v87 = *(uint64_t (**)(uint64_t, uint64_t))(v86 + 56);
          v88 = v86;
          v13 = v227;
          v89 = v87(v85, v88);
          v91 = v90;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v228);
        }
        else
        {
          v89 = 0;
          v91 = 0;
        }
        v71 = v78;
        if (!*(_QWORD *)(v81 + 16))
          break;
        v92 = sub_23E1E3300((uint64_t)v13);
        if ((v93 & 1) == 0)
          break;
        sub_23E1FF9C8(*(_QWORD *)(v81 + 56) + 40 * v92, (uint64_t)v228);
        v94 = v229;
        v95 = v230;
        __swift_project_boxed_opaque_existential_1(v228, v229);
        v96 = *(uint64_t (**)(uint64_t, uint64_t))(v95 + 56);
        v97 = v95;
        v83 = v220;
        v98 = v96(v94, v97);
        v100 = v99;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v228);
        if (v91)
          goto LABEL_64;
LABEL_61:
        v67 = v218;
        v13 = v227;
        if (v100)
          goto LABEL_69;
LABEL_82:
        v118 = (uint64_t)v226;
        v117 = MEMORY[0x24264E1E8](v226, v13);
LABEL_83:
        v120 = (void (*)(char *, uint64_t))v67[1];
        v121 = v13;
        v122 = v231;
        v120(v121, v231);
        v120((char *)v118, v122);
        if ((v117 & 1) == 0)
        {
          v72 = v231;
          v13 = v227;
          goto LABEL_49;
        }
        v123 = *v225;
        v73 = v219;
        if (!*v225)
          goto LABEL_182;
        v124 = &v123[v224 + v74];
        v125 = (void (*)(char *, char *, uint64_t))v67[4];
        v125(v221, &v123[v71 + v74], v231);
        swift_arrayInitWithTakeFrontToBack();
        v72 = v231;
        v125(v124, v221, v231);
        v74 -= v217;
        ++v75;
        v13 = v227;
        if (v73 == v75)
          goto LABEL_50;
      }
      v98 = 0;
      v100 = 0;
      if (!v91)
        goto LABEL_61;
LABEL_64:
      if (v100)
      {
        if (v89 == v98 && v91 == v100)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = v218;
          v13 = v227;
        }
        else
        {
          v119 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = v218;
          v13 = v227;
          if ((v119 & 1) == 0)
            goto LABEL_70;
        }
        goto LABEL_82;
      }
      v13 = v227;
LABEL_69:
      swift_bridgeObjectRelease();
LABEL_70:
      if (*(_QWORD *)(v83 + 16) && (v101 = sub_23E1E3300((uint64_t)v226), (v102 & 1) != 0))
      {
        sub_23E1FF9C8(*(_QWORD *)(v83 + 56) + 40 * v101, (uint64_t)v228);
        v103 = v229;
        v104 = v230;
        __swift_project_boxed_opaque_existential_1(v228, v229);
        v105 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 56);
        v106 = v104;
        v13 = v227;
        v107 = v105(v103, v106);
        v109 = v108;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v228);
        if (!*(_QWORD *)(v83 + 16))
        {
LABEL_78:
          v116 = 0xE000000000000000;
          if (!v107)
            goto LABEL_79;
LABEL_80:
          v117 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = v218;
          v118 = (uint64_t)v226;
          v13 = v227;
          goto LABEL_83;
        }
      }
      else
      {
        v107 = 0;
        v109 = 0xE000000000000000;
        if (!*(_QWORD *)(v83 + 16))
          goto LABEL_78;
      }
      v110 = sub_23E1E3300((uint64_t)v13);
      if ((v111 & 1) == 0)
        goto LABEL_78;
      sub_23E1FF9C8(*(_QWORD *)(v83 + 56) + 40 * v110, (uint64_t)v228);
      v112 = v229;
      v113 = v230;
      __swift_project_boxed_opaque_existential_1(v228, v229);
      v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 56))(v112, v113);
      v116 = v115;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v228);
      if (v107 != v114)
        goto LABEL_80;
LABEL_79:
      if (v109 != v116)
        goto LABEL_80;
      swift_bridgeObjectRelease_n();
      v67 = v218;
      v126 = (void (*)(char *, uint64_t))v218[1];
      v13 = v227;
      v72 = v231;
      v126(v227, v231);
      v126(v226, v72);
LABEL_49:
      v73 = v219;
LABEL_50:
      v35 = v73 + 1;
      v224 += v217;
      v71 += v217;
      v36 = v212;
      if (v35 != v209)
        continue;
      break;
    }
    v35 = v209;
    v3 = v215;
    v34 = v213;
LABEL_89:
    if (v35 < v36)
      goto LABEL_176;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v34 = sub_23E530794(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
    v128 = *((_QWORD *)v34 + 2);
    v127 = *((_QWORD *)v34 + 3);
    v129 = v128 + 1;
    v215 = v3;
    if (v128 >= v127 >> 1)
      v34 = sub_23E530794((char *)(v127 > 1), v128 + 1, 1, v34);
    *((_QWORD *)v34 + 2) = v129;
    v223 = v34 + 32;
    v130 = &v34[16 * v128 + 32];
    *(_QWORD *)v130 = v36;
    *((_QWORD *)v130 + 1) = v35;
    if (v128)
    {
      v131 = v223;
      v219 = v35;
      while (1)
      {
        v132 = v129 - 1;
        if (v129 >= 4)
        {
          v137 = &v131[16 * v129];
          v138 = *((_QWORD *)v137 - 8);
          v139 = *((_QWORD *)v137 - 7);
          v143 = __OFSUB__(v139, v138);
          v140 = v139 - v138;
          if (v143)
            goto LABEL_161;
          v142 = *((_QWORD *)v137 - 6);
          v141 = *((_QWORD *)v137 - 5);
          v143 = __OFSUB__(v141, v142);
          v135 = v141 - v142;
          v136 = v143;
          if (v143)
            goto LABEL_162;
          v144 = v129 - 2;
          v145 = &v131[16 * v129 - 32];
          v147 = *(_QWORD *)v145;
          v146 = *((_QWORD *)v145 + 1);
          v143 = __OFSUB__(v146, v147);
          v148 = v146 - v147;
          if (v143)
            goto LABEL_164;
          v143 = __OFADD__(v135, v148);
          v149 = v135 + v148;
          if (v143)
            goto LABEL_167;
          if (v149 >= v140)
          {
            v167 = &v131[16 * v132];
            v169 = *(_QWORD *)v167;
            v168 = *((_QWORD *)v167 + 1);
            v143 = __OFSUB__(v168, v169);
            v170 = v168 - v169;
            if (v143)
              goto LABEL_171;
            v160 = v135 < v170;
            goto LABEL_127;
          }
        }
        else
        {
          if (v129 != 3)
          {
            v161 = *((_QWORD *)v34 + 4);
            v162 = *((_QWORD *)v34 + 5);
            v143 = __OFSUB__(v162, v161);
            v154 = v162 - v161;
            v155 = v143;
            goto LABEL_121;
          }
          v134 = *((_QWORD *)v34 + 4);
          v133 = *((_QWORD *)v34 + 5);
          v143 = __OFSUB__(v133, v134);
          v135 = v133 - v134;
          v136 = v143;
        }
        if ((v136 & 1) != 0)
          goto LABEL_163;
        v144 = v129 - 2;
        v150 = &v131[16 * v129 - 32];
        v152 = *(_QWORD *)v150;
        v151 = *((_QWORD *)v150 + 1);
        v153 = __OFSUB__(v151, v152);
        v154 = v151 - v152;
        v155 = v153;
        if (v153)
          goto LABEL_166;
        v156 = &v131[16 * v132];
        v158 = *(_QWORD *)v156;
        v157 = *((_QWORD *)v156 + 1);
        v143 = __OFSUB__(v157, v158);
        v159 = v157 - v158;
        if (v143)
          goto LABEL_169;
        if (__OFADD__(v154, v159))
          goto LABEL_170;
        if (v154 + v159 >= v135)
        {
          v160 = v135 < v159;
LABEL_127:
          if (v160)
            v132 = v144;
          goto LABEL_129;
        }
LABEL_121:
        if ((v155 & 1) != 0)
          goto LABEL_165;
        v163 = &v131[16 * v132];
        v165 = *(_QWORD *)v163;
        v164 = *((_QWORD *)v163 + 1);
        v143 = __OFSUB__(v164, v165);
        v166 = v164 - v165;
        if (v143)
          goto LABEL_168;
        if (v166 < v154)
          goto LABEL_138;
LABEL_129:
        v171 = v132 - 1;
        if (v132 - 1 >= v129)
        {
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        v172 = *v225;
        if (!*v225)
          goto LABEL_183;
        v173 = v34;
        v174 = &v131[16 * v171];
        v175 = v131;
        v176 = *(_QWORD *)v174;
        v177 = v132;
        v178 = &v175[16 * v132];
        v179 = *((_QWORD *)v178 + 1);
        v180 = v218[9];
        v181 = (unint64_t)&v172[v180 * *(_QWORD *)v174];
        v224 = (uint64_t)&v172[v180 * *(_QWORD *)v178];
        v182 = (unint64_t)&v172[v180 * v179];
        v183 = v220;
        swift_bridgeObjectRetain();
        v184 = v181;
        v185 = v215;
        sub_23E516DD4(v184, v224, v182, v214, v183, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_23E516AE0);
        v215 = v185;
        if (v185)
          goto LABEL_154;
        v13 = v227;
        if (v179 < v176)
          goto LABEL_158;
        v34 = v173;
        if (v177 > *((_QWORD *)v173 + 2))
          goto LABEL_159;
        v186 = v177;
        *(_QWORD *)v174 = v176;
        v131 = v223;
        *(_QWORD *)&v223[16 * v171 + 8] = v179;
        v187 = *((_QWORD *)v173 + 2);
        if (v186 >= v187)
          goto LABEL_160;
        v129 = v187 - 1;
        memmove(v178, v178 + 16, 16 * (v187 - 1 - v186));
        *((_QWORD *)v173 + 2) = v187 - 1;
        v35 = v219;
        if (v187 <= 2)
          goto LABEL_138;
      }
    }
    v129 = 1;
LABEL_138:
    v25 = (uint64_t)v225[1];
    v3 = v215;
    if (v35 >= v25)
      goto LABEL_143;
  }
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E51C294(_QWORD **a1, uint64_t a2)
{
  return sub_23E51C2B0(a1, a2, (void (*)(_QWORD *, uint64_t))sub_23E51B328);
}

uint64_t sub_23E51C2B0(_QWORD **a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[2];

  v6 = *(_QWORD *)(sub_23E536F80() - 8);
  v7 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = (_QWORD *)sub_23E530DCC(v7);
  v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  swift_bridgeObjectRetain();
  a3(v10, a2);
  swift_bridgeObjectRelease();
  *a1 = v7;
  return swift_bridgeObjectRelease_n();
}

BOOL sub_23E51C374(uint64_t a1)
{
  uint64_t v1;

  return sub_23E5152BC(a1, *(void (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

BOOL sub_23E51C39C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E515C4C(a1, *(_QWORD *)(v1 + 72), *(void (**)(uint64_t))(v1 + 80));
}

uint64_t sub_23E51C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E515D18(a1, a2, *(_QWORD *)(v2 + 72), *(void (**)(uint64_t))(v2 + 80), *(_QWORD *)(v2 + 88)) & 1;
}

uint64_t sub_23E51C418()
{
  return sub_23E51C470() & 1;
}

uint64_t sub_23E51C430(uint64_t a1)
{
  return sub_23E51C4C4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E5152BC) & 1;
}

uint64_t sub_23E51C450(uint64_t a1, uint64_t a2)
{
  return sub_23E51C540(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E515E68) & 1;
}

uint64_t sub_23E51C470()
{
  return sub_23E5161AC() & 1;
}

uint64_t sub_23E51C4A4(uint64_t a1)
{
  return sub_23E51C4C4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E515FA8) & 1;
}

uint64_t sub_23E51C4C4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[9], v2[10], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]) & 1;
}

uint64_t sub_23E51C500(uint64_t a1, uint64_t a2)
{
  return sub_23E51C540(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E51606C) & 1;
}

uint64_t sub_23E51C520(uint64_t a1, uint64_t a2)
{
  return sub_23E51C540(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E5155B8) & 1;
}

uint64_t sub_23E51C540(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[9], v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8]) & 1;
}

uint64_t sub_23E51C580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D4A0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23E51C5C8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_23E537538();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_256D4A130 = (uint64_t)v2;
}

id static CameraClipsInternalPreferences.shared.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_256D3EF08 != -1)
    swift_once();
  v2 = (void *)qword_256D4A130;
  *a1 = qword_256D4A130;
  return v2;
}

id CameraClipsInternalPreferences.showDebugUI.getter()
{
  id *v0;
  id v1;
  void *v2;

  v1 = *v0;
  if (*v0)
  {
    v2 = (void *)sub_23E537538();
    v1 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  }
  return v1;
}

void **initializeBufferWithCopyOfBuffer for CameraClipsInternalPreferences(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for CameraClipsInternalPreferences(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for CameraClipsInternalPreferences(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CameraClipsInternalPreferences(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraClipsInternalPreferences(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipsInternalPreferences()
{
  return &type metadata for CameraClipsInternalPreferences;
}

uint64_t ClusterPath.endpointID.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t ClusterPath.init(nodeID:endpointID:clusterKind:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_WORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 10) = v4;
  return result;
}

uint64_t MatterTilePath.init(endpointPath:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)a2 = *(_QWORD *)result;
  *(_WORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 10) = 0;
  return result;
}

uint64_t MatterTilePath.uuid.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  _WORD v22[4];
  uint64_t v23;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *((_WORD *)v0 + 4);
  v7 = *((_BYTE *)v0 + 10);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_hmf_zeroUUID);
  sub_23E536F68();

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E539650;
  v23 = v5;
  *(_QWORD *)(v10 + 32) = sub_23E538318();
  *(_QWORD *)(v10 + 40) = v11;
  if ((v7 & 1) == 0)
  {
    v22[3] = v6;
    v12 = sub_23E538318();
    v14 = v13;
    v16 = *(_QWORD *)(v10 + 16);
    v15 = *(_QWORD *)(v10 + 24);
    if (v16 >= v15 >> 1)
      v10 = (uint64_t)sub_23E51E6C4((_QWORD *)(v15 > 1), v16 + 1, 1, (_QWORD *)v10);
    *(_QWORD *)(v10 + 16) = v16 + 1;
    v17 = v10 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v12;
    *(_QWORD *)(v17 + 40) = v14;
  }
  v18 = (void *)sub_23E536F44();
  v19 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v8, sel_hmf_UUIDWithNamespace_data_salts_, v18, 0, v19);

  sub_23E536F68();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t MatterTilePath.init(nodeID:endpointID:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_WORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 10) = BYTE2(a2) & 1;
  return result;
}

BOOL static ClusterPath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8)
      && dword_23E55BA74[*(char *)(a1 + 10)] == dword_23E55BA74[*(char *)(a2 + 10)];
}

uint64_t EndpointPath.init(nodeID:endpointID:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_WORD *)(a3 + 8) = a2;
  return result;
}

uint64_t ClusterPath.init(endpointPath:clusterKind:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v3;
  char v4;

  v3 = *(_WORD *)(result + 8);
  v4 = *a2;
  *(_QWORD *)a3 = *(_QWORD *)result;
  *(_WORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 10) = v4;
  return result;
}

BOOL static EndpointPath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(unsigned __int16 *)(a1 + 8) == (unint64_t)*(unsigned __int16 *)(a2 + 8);
}

char *EndpointPath.clusterPath(with:)@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __int16 v4;

  v3 = *result;
  v4 = *(_WORD *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_WORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 10) = v3;
  return result;
}

uint64_t EndpointPath.nodeID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EndpointPath.nodeID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*EndpointPath.nodeID.modify())()
{
  return nullsub_1;
}

uint64_t EndpointPath.endpointID.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t EndpointPath.endpointID.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*EndpointPath.endpointID.modify())()
{
  return nullsub_1;
}

uint64_t EndpointPath.description.getter()
{
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return 3829371;
}

uint64_t EndpointPath.hash(into:)()
{
  sub_23E538498();
  return sub_23E538480();
}

uint64_t sub_23E51CC58()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E696F70646E65;
  else
    return 0x444965646F6ELL;
}

uint64_t sub_23E51CC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E521578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E51CCB8()
{
  sub_23E51E7D0();
  return sub_23E538570();
}

uint64_t sub_23E51CCE0()
{
  sub_23E51E7D0();
  return sub_23E53857C();
}

uint64_t EndpointPath.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A138);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int16 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E7D0();
  sub_23E5384EC();
  v12 = 0;
  sub_23E5382E8();
  if (!v2)
  {
    v11 = 1;
    sub_23E5382D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t EndpointPath.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  return sub_23E5384A4();
}

uint64_t EndpointPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A148);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E7D0();
  sub_23E5384E0();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_23E5381BC();
    v13 = 1;
    v10 = sub_23E5381A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_23E51CFD0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(unsigned __int16 *)(a1 + 8) == (unint64_t)*(unsigned __int16 *)(a2 + 8);
}

uint64_t sub_23E51CFF0()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  return sub_23E5384A4();
}

uint64_t sub_23E51D04C()
{
  sub_23E538498();
  return sub_23E538480();
}

uint64_t sub_23E51D088()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  return sub_23E5384A4();
}

uint64_t sub_23E51D0E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EndpointPath.init(from:)(a1, a2);
}

uint64_t sub_23E51D0F4(_QWORD *a1)
{
  return EndpointPath.encode(to:)(a1);
}

void ClusterPath.endpointPath.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
}

uint64_t ClusterPath.endpointPath.setter(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*ClusterPath.endpointPath.modify())()
{
  return nullsub_1;
}

void ClusterPath.clusterKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 10);
}

_BYTE *ClusterPath.clusterKind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 10) = *result;
  return result;
}

uint64_t (*ClusterPath.clusterKind.modify())()
{
  return nullsub_1;
}

uint64_t ClusterPath.uuid.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  int v18;
  __int16 v19;
  uint64_t v20;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *((_WORD *)v0 + 4);
  v7 = *((char *)v0 + 10);
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_hmf_zeroUUID);
  sub_23E536F68();

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E53E0F0;
  v20 = v5;
  *(_QWORD *)(v10 + 32) = sub_23E538318();
  *(_QWORD *)(v10 + 40) = v11;
  v19 = v6;
  *(_QWORD *)(v10 + 48) = sub_23E538318();
  *(_QWORD *)(v10 + 56) = v12;
  v18 = dword_23E55BA74[v7];
  *(_QWORD *)(v10 + 64) = sub_23E538318();
  *(_QWORD *)(v10 + 72) = v13;
  v14 = (void *)sub_23E536F44();
  v15 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v8, sel_hmf_UUIDWithNamespace_data_salts_, v14, 0, v15);

  sub_23E536F68();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t ClusterPath.description.getter()
{
  sub_23E537E68();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  return 0;
}

void ClusterPath.init(clusterPath:nodeID:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  Swift::UInt32 v7;
  int v8;
  id v9;
  unsigned int v10;
  unsigned __int8 v11;

  v6 = objc_msgSend(a1, sel_cluster);
  v7 = objc_msgSend(v6, sel_unsignedIntValue);

  ClusterKind.init(rawValue:)(v7);
  if (v11 == 28)
  {

    a2 = 0;
    v8 = 1835008;
  }
  else
  {
    v9 = objc_msgSend(a1, sel_endpoint);
    v10 = objc_msgSend(v9, sel_unsignedShortValue);

    v8 = v10 | (v11 << 16);
  }
  *(_QWORD *)a3 = a2;
  *(_WORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 10) = BYTE2(v8);
}

uint64_t ClusterPath.hash(into:)()
{
  sub_23E538498();
  sub_23E538480();
  return sub_23E53848C();
}

uint64_t sub_23E51D58C()
{
  _BYTE *v0;

  if (*v0)
    return 0x4B72657473756C63;
  else
    return 0x746E696F70646E65;
}

uint64_t sub_23E51D5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E521458(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E51D5FC()
{
  sub_23E51E814();
  return sub_23E538570();
}

uint64_t sub_23E51D624()
{
  sub_23E51E814();
  return sub_23E53857C();
}

uint64_t ClusterPath.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  _QWORD v11[3];
  __int16 v12;
  int v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A150);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_WORD *)v1 + 4);
  v13 = *((unsigned __int8 *)v1 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E814();
  sub_23E5384EC();
  v11[2] = v7;
  v12 = v8;
  v16 = 0;
  sub_23E2CE674();
  v9 = v11[1];
  sub_23E5382AC();
  if (!v9)
  {
    v15 = v13;
    v14 = 1;
    sub_23E2CE6B8();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ClusterPath.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t ClusterPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v13;
  __int16 v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A160);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E814();
  sub_23E5384E0();
  if (!v2)
  {
    v17 = 0;
    sub_23E2CE784();
    sub_23E538180();
    v9 = v13;
    v10 = v14;
    v15 = 1;
    sub_23E2CE844();
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v16;
    *(_QWORD *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
    *(_BYTE *)(a2 + 10) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_23E51D9A0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8)
      && dword_23E55BA74[*(char *)(a1 + 10)] == dword_23E55BA74[*(char *)(a2 + 10)];
}

uint64_t sub_23E51D9E8()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E51DA5C()
{
  sub_23E538498();
  sub_23E538480();
  return sub_23E53848C();
}

uint64_t sub_23E51DAAC()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E51DB1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusterPath.init(from:)(a1, a2);
}

uint64_t sub_23E51DB30(_QWORD *a1)
{
  return ClusterPath.encode(to:)(a1);
}

uint64_t MatterTilePath.nodeID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MatterTilePath.nodeID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MatterTilePath.nodeID.modify())()
{
  return nullsub_1;
}

uint64_t MatterTilePath.endpointID.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 8) | (*(unsigned __int8 *)(v0 + 10) << 16);
}

uint64_t MatterTilePath.endpointID.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 10) = BYTE2(result) & 1;
  return result;
}

uint64_t (*MatterTilePath.endpointID.modify())()
{
  return nullsub_1;
}

uint64_t MatterTilePath.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  uint64_t v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = *((_WORD *)v0 + 4);
  v7 = *((_BYTE *)v0 + 10);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23E537E68();
  swift_bridgeObjectRelease();
  v12 = 3829371;
  v13 = 0xE300000000000000;
  v9 = v5;
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  LOWORD(v9) = v6;
  BYTE2(v9) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A168);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v9 = v5;
  v10 = v6;
  v11 = v7;
  MatterTilePath.uuid.getter();
  sub_23E288764();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23E537628();
  return v12;
}

uint64_t MatterTilePath.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 10);
  sub_23E538498();
  if (v1 == 1)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538480();
}

uint64_t static MatterTilePath.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(_BYTE *)(a2 + 10);
  if ((*(_BYTE *)(a1 + 10) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 10) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_23E51DDD0()
{
  sub_23E51E858();
  return sub_23E538570();
}

uint64_t sub_23E51DDF8()
{
  sub_23E51E858();
  return sub_23E53857C();
}

uint64_t MatterTilePath.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _DWORD v9[7];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A170);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[6] = *(unsigned __int16 *)(v1 + 8);
  v9[3] = *(unsigned __int8 *)(v1 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E858();
  sub_23E5384EC();
  v11 = 0;
  sub_23E5382E8();
  if (!v2)
  {
    v10 = 1;
    sub_23E53824C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MatterTilePath.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 10);
  sub_23E53845C();
  sub_23E538498();
  sub_23E538474();
  if (v1 != 1)
    sub_23E538480();
  return sub_23E5384A4();
}

uint64_t MatterTilePath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v11;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E51E858();
  sub_23E5384E0();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_23E5381BC();
    v13 = 1;
    v11 = sub_23E538120();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_WORD *)(a2 + 8) = v11;
    *(_BYTE *)(a2 + 10) = BYTE2(v11) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E51E128()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 10);
  sub_23E53845C();
  sub_23E538498();
  sub_23E538474();
  if (v1 != 1)
    sub_23E538480();
  return sub_23E5384A4();
}

uint64_t sub_23E51E1A8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 10);
  sub_23E538498();
  if (v1 == 1)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538480();
}

uint64_t sub_23E51E204()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 10);
  sub_23E53845C();
  sub_23E538498();
  sub_23E538474();
  if (v1 != 1)
    sub_23E538480();
  return sub_23E5384A4();
}

uint64_t sub_23E51E280(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v2 = *(_BYTE *)(a2 + 10);
    if ((*(_BYTE *)(a1 + 10) & 1) != 0)
    {
      if (*(_BYTE *)(a2 + 10))
        return 1;
    }
    else
    {
      if (*(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8))
        v2 = 1;
      if ((v2 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_23E51E2C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MatterTilePath.init(from:)(a1, a2);
}

uint64_t sub_23E51E2D8(_QWORD *a1)
{
  return MatterTilePath.encode(to:)(a1);
}

uint64_t ClusterPath.nodeID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23E51E2F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D3FE10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E51E30C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23E538000();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23E520B7C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23E51E518(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A278, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
}

uint64_t sub_23E51E52C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A298, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
}

uint64_t sub_23E51E540(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254332C78, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23E51E554(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, qword_254333478, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
}

uint64_t sub_23E51E568(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A290, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
}

uint64_t sub_23E51E57C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A288, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_23E51E590(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254333448, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_23E51E5A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254333428, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

_QWORD *sub_23E51E5B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A1F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E5203A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51E6C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E5204AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E51E7D0()
{
  unint64_t result;

  result = qword_256D4A140;
  if (!qword_256D4A140)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55BA1C, &type metadata for EndpointPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A140);
  }
  return result;
}

unint64_t sub_23E51E814()
{
  unint64_t result;

  result = qword_256D4A158;
  if (!qword_256D4A158)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B9CC, &type metadata for ClusterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A158);
  }
  return result;
}

unint64_t sub_23E51E858()
{
  unint64_t result;

  result = qword_256D4A178;
  if (!qword_256D4A178)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B97C, &type metadata for MatterTilePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A178);
  }
  return result;
}

unint64_t sub_23E51E8A0()
{
  unint64_t result;

  result = qword_256D4A188;
  if (!qword_256D4A188)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for EndpointPath, &type metadata for EndpointPath);
    atomic_store(result, (unint64_t *)&qword_256D4A188);
  }
  return result;
}

unint64_t sub_23E51E8E8()
{
  unint64_t result;

  result = qword_256D4A190;
  if (!qword_256D4A190)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterPath, &type metadata for ClusterPath);
    atomic_store(result, (unint64_t *)&qword_256D4A190);
  }
  return result;
}

unint64_t sub_23E51E930()
{
  unint64_t result;

  result = qword_256D4A198;
  if (!qword_256D4A198)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterTilePath, &type metadata for MatterTilePath);
    atomic_store(result, (unint64_t *)&qword_256D4A198);
  }
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EndpointPath(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EndpointPath(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EndpointPath()
{
  return &type metadata for EndpointPath;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClusterPath(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xE5 && *(_BYTE *)(a1 + 11))
    return (*(_DWORD *)a1 + 229);
  v3 = *(unsigned __int8 *)(a1 + 10);
  v4 = v3 >= 0x1C;
  v5 = v3 - 28;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusterPath(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 229;
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 11) = 1;
  }
  else
  {
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 11) = 0;
    if (a2)
      *(_BYTE *)(result + 10) = a2 + 27;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterPath()
{
  return &type metadata for ClusterPath;
}

uint64_t getEnumTagSinglePayload for MatterTilePath(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 11))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MatterTilePath(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 11) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MatterTilePath()
{
  return &type metadata for MatterTilePath;
}

ValueMetadata *type metadata accessor for MatterTilePath.CodingKeys()
{
  return &type metadata for MatterTilePath.CodingKeys;
}

ValueMetadata *type metadata accessor for ClusterPath.CodingKeys()
{
  return &type metadata for ClusterPath.CodingKeys;
}

uint64_t _s13HomeDataModel14MatterTilePathV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E51EB64 + 4 * byte_23E55B455[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E51EB98 + 4 * asc_23E55B450[v4]))();
}

uint64_t sub_23E51EB98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E51EBA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E51EBA8);
  return result;
}

uint64_t sub_23E51EBB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E51EBBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E51EBC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E51EBC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndpointPath.CodingKeys()
{
  return &type metadata for EndpointPath.CodingKeys;
}

unint64_t sub_23E51EBE8()
{
  unint64_t result;

  result = qword_256D4A1A0;
  if (!qword_256D4A1A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B7E4, &type metadata for EndpointPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1A0);
  }
  return result;
}

unint64_t sub_23E51EC30()
{
  unint64_t result;

  result = qword_256D4A1A8;
  if (!qword_256D4A1A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B89C, &type metadata for ClusterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1A8);
  }
  return result;
}

unint64_t sub_23E51EC78()
{
  unint64_t result;

  result = qword_256D4A1B0;
  if (!qword_256D4A1B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B954, &type metadata for MatterTilePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1B0);
  }
  return result;
}

unint64_t sub_23E51ECC0()
{
  unint64_t result;

  result = qword_256D4A1B8;
  if (!qword_256D4A1B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B8C4, &type metadata for MatterTilePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1B8);
  }
  return result;
}

unint64_t sub_23E51ED08()
{
  unint64_t result;

  result = qword_256D4A1C0;
  if (!qword_256D4A1C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B8EC, &type metadata for MatterTilePath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1C0);
  }
  return result;
}

unint64_t sub_23E51ED50()
{
  unint64_t result;

  result = qword_256D4A1C8;
  if (!qword_256D4A1C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B80C, &type metadata for ClusterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1C8);
  }
  return result;
}

unint64_t sub_23E51ED98()
{
  unint64_t result;

  result = qword_256D4A1D0;
  if (!qword_256D4A1D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B834, &type metadata for ClusterPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1D0);
  }
  return result;
}

unint64_t sub_23E51EDE0()
{
  unint64_t result;

  result = qword_256D4A1D8;
  if (!qword_256D4A1D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B754, &type metadata for EndpointPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1D8);
  }
  return result;
}

unint64_t sub_23E51EE28()
{
  unint64_t result;

  result = qword_256D4A1E0;
  if (!qword_256D4A1E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55B77C, &type metadata for EndpointPath.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A1E0);
  }
  return result;
}

_QWORD *sub_23E51EE6C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F978(a1, a2, a3, a4, &qword_256D4A1E8);
}

char *sub_23E51EE78(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E51EE90(a1, a2, a3, a4, &qword_256D4A2C8);
}

char *sub_23E51EE84(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E51EE90(a1, a2, a3, a4, &qword_256D4A270);
}

char *sub_23E51EE90(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E521078(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51EF84(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F0E0(a1, a2, a3, a4, &qword_256D4A2C0, &qword_254333328);
}

_QWORD *sub_23E51EF98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E52068C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51F0A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F858(a1, a2, a3, a4, &qword_256D3F8A0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_23E52068C);
}

uint64_t sub_23E51F0B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A280, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
}

_QWORD *sub_23E51F0CC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F0E0(a1, a2, a3, a4, &qword_256D4A2B0, &qword_256D4A2B8);
}

_QWORD *sub_23E51F0E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E52115C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51F1F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDA0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E520980(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51F318(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A230, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

_QWORD *sub_23E51F32C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51FE34(a1, a2, a3, a4, &qword_256D41CC8, &qword_256D41CD0);
}

_QWORD *sub_23E51F340(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E520A74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51F44C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A2A0, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

_QWORD *sub_23E51F460(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F4E4(a1, a2, a3, a4, &qword_256D4A2A8);
}

uint64_t sub_23E51F474(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D3FE18, type metadata accessor for ScrubberElement);
}

uint64_t sub_23E51F488(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D41D08, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
}

uint64_t sub_23E51F49C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254332C90, type metadata accessor for StaticRoom);
}

uint64_t sub_23E51F4B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D40F60, type metadata accessor for RoomType);
}

char *sub_23E51F4C4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E51EE90(a1, a2, a3, a4, &qword_256D3FDC8);
}

_QWORD *sub_23E51F4D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F4E4(a1, a2, a3, a4, &qword_256D4A268);
}

_QWORD *sub_23E51F4E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E520C94(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51F5FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_2543326E8, _s8IntervalV11AggregationVMa);
}

uint64_t sub_23E51F610(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51F624(a1, a2, a3, a4, &qword_256D4A250, &qword_256D42670);
}

uint64_t sub_23E51F624(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23E538000();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23E520774(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23E51F830(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D3FE08, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
}

_QWORD *sub_23E51F844(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F858(a1, a2, a3, a4, &qword_256D4A258, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_23E520D80);
}

_QWORD *sub_23E51F858(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51F96C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F978(a1, a2, a3, a4, &qword_256D4A248);
}

_QWORD *sub_23E51F978(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E520E88(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E51FA80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A240);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E520F70(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51FB8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D41D60, type metadata accessor for StateSnapshot.UpdateType);
}

_QWORD *sub_23E51FBA0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D58);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E52088C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51FCC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A238, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
}

char *sub_23E51FCD4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E51EE90(a1, a2, a3, a4, &qword_256D4A228);
}

_QWORD *sub_23E51FCE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A220);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E520E88(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23E51FDEC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_23E51EE90(a1, a2, a3, a4, &qword_256D4A200);
}

uint64_t sub_23E51FDF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D41D10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
}

_QWORD *sub_23E51FE0C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51F0E0(a1, a2, a3, a4, &qword_256D4A218, &qword_256D44BA0);
}

_QWORD *sub_23E51FE20(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51FE34(a1, a2, a3, a4, &qword_256D41D38, &qword_256D3FF20);
}

_QWORD *sub_23E51FE34(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_23E521350(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E51FF60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_256D4A210, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

_QWORD *sub_23E51FF74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A208);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E521260(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23E520080(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333430);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 31;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32])
          memmove(v13, a4 + 32, 2 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_23E5202BC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_23E520188(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51FE34(a1, a2, a3, a4, &qword_256D41CB8, &qword_256D40C08);
}

_QWORD *sub_23E52019C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E51FE34(a1, a2, a3, a4, &qword_256D41CB0, &qword_256D40BF8);
}

_QWORD *sub_23E5201B0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CD8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23E52059C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_23E5202BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = 2 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E5203A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A1F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E5204AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E52059C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

char *sub_23E52068C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520774(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E52088C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520980(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520A74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520D80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A260);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

char *sub_23E520E88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E520F70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254332268);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

char *sub_23E521078(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E52115C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E521260(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E521350(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E521458(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4B72657473756C63 && a2 == 0xEB00000000646E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E521578(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x444965646F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t StaticCameraRecordingEventManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticCameraRecordingEventManager.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23E5374D8();
}

uint64_t sub_23E521708()
{
  return 25705;
}

uint64_t sub_23E521714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E521790()
{
  sub_23E5218F0();
  return sub_23E538570();
}

uint64_t sub_23E5217B8()
{
  sub_23E5218F0();
  return sub_23E53857C();
}

uint64_t StaticCameraRecordingEventManager.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A2D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5218F0();
  sub_23E5384EC();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_23E5218F0()
{
  unint64_t result;

  result = qword_256D4A2D8;
  if (!qword_256D4A2D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55BCE8, &type metadata for StaticCameraRecordingEventManager.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A2D8);
  }
  return result;
}

uint64_t StaticCameraRecordingEventManager.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t StaticCameraRecordingEventManager.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_23E536F80();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A2E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticCameraRecordingEventManager();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5218F0();
  sub_23E5384E0();
  if (!v2)
  {
    sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_23E521BA4((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t type metadata accessor for StaticCameraRecordingEventManager()
{
  uint64_t result;

  result = qword_254332DF0;
  if (!qword_254332DF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E521BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraRecordingEventManager();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E521BE8()
{
  return sub_23E1EE1C4(qword_256D4A2E8, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager, (uint64_t)&protocol conformance descriptor for StaticCameraRecordingEventManager);
}

uint64_t sub_23E521C14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraRecordingEventManager.init(from:)(a1, a2);
}

uint64_t sub_23E521C28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A2D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5218F0();
  sub_23E5384EC();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t getEnumTagSinglePayload for StaticCameraRecordingEventManager()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E521D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StaticCameraRecordingEventManager()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E521D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StaticCameraRecordingEventManager.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E521E0C + 4 * byte_23E55BAF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E521E2C + 4 * byte_23E55BAF5[v4]))();
}

_BYTE *sub_23E521E0C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E521E2C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E521E34(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E521E3C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E521E44(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E521E4C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraRecordingEventManager.CodingKeys()
{
  return &type metadata for StaticCameraRecordingEventManager.CodingKeys;
}

unint64_t sub_23E521E6C()
{
  unint64_t result;

  result = qword_256D4A318;
  if (!qword_256D4A318)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55BCC0, &type metadata for StaticCameraRecordingEventManager.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A318);
  }
  return result;
}

unint64_t sub_23E521EB4()
{
  unint64_t result;

  result = qword_256D4A320;
  if (!qword_256D4A320)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55BC30, &type metadata for StaticCameraRecordingEventManager.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A320);
  }
  return result;
}

unint64_t sub_23E521EFC()
{
  unint64_t result;

  result = qword_256D4A328;
  if (!qword_256D4A328)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55BC58, &type metadata for StaticCameraRecordingEventManager.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A328);
  }
  return result;
}

uint64_t sub_23E521F4C()
{
  type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E521FBC()
{
  type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E52202C()
{
  type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E52209C()
{
  type metadata accessor for StaticService();
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E52210C@<X0>(int a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[4];
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v15 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v15;
  sub_23E536C98();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  a2[4] = sub_23E2BE714();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  sub_23E536C2C();
  (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v5, v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v16 + 8))(v12, v10);
}

uint64_t sub_23E52235C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E52210C(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t sub_23E522368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_23E537B5C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E537BC8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23E537418();
  MEMORY[0x24BDAC7A8](v5);
  sub_23E5224F0();
  sub_23E53740C();
  v7[1] = MEMORY[0x24BEE4AF8];
  sub_23E52252C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A340);
  sub_23E522574();
  sub_23E537D3C();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5758], v0);
  result = sub_23E537BD4();
  qword_256D89898 = result;
  return result;
}

unint64_t sub_23E5224F0()
{
  unint64_t result;

  result = qword_256D4A330;
  if (!qword_256D4A330)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D4A330);
  }
  return result;
}

unint64_t sub_23E52252C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D4A338;
  if (!qword_256D4A338)
  {
    v1 = sub_23E537BC8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5940], v1);
    atomic_store(result, (unint64_t *)&qword_256D4A338);
  }
  return result;
}

unint64_t sub_23E522574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D4A348;
  if (!qword_256D4A348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D4A340);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256D4A348);
  }
  return result;
}

void sub_23E5225C0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E522610(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E522690 + 4 * byte_23E55BD5E[a2]))(0x73746867694CLL);
}

uint64_t sub_23E522690(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73746867694CLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E522764(uint64_t a1, uint64_t a2)
{
  return sub_23E5238F4(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_23E522770(uint64_t a1, uint64_t a2)
{
  return sub_23E5238F4(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

void sub_23E52277C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E5227C4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E522844 + 4 * byte_23E55BD69[a2]))(0x676E6979616C70);
}

uint64_t sub_23E522844(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E6979616C70 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E52290C(uint64_t a1, uint64_t a2)
{
  return sub_23E5238F4(a1, a2, HFCAPackageIconIdentifier.rawValue.getter);
}

uint64_t sub_23E522918(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7265746C69665F31;
  else
    v3 = 0x746E756F635F30;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000006465;
  if ((a2 & 1) != 0)
    v5 = 0x7265746C69665F31;
  else
    v5 = 0x746E756F635F30;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006465;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23E5229C0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x73746E756F635F31;
  else
    v3 = 0x4D6F697461725F30;
  if (v2)
    v4 = 0xEE00736369727465;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x73746E756F635F31;
  else
    v5 = 0x4D6F697461725F30;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEE00736369727465;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_23E522A70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E522AC0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E522B90 + 4 * byte_23E55BD76[a2]))(0x65686E6572686166);
}

uint64_t sub_23E522B90(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65686E6572686166 && v1 == 0xEA00000000007469)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23E522CC0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23E522D18(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E522D78 + 4 * byte_23E55BD82[a2]))(0x79726F6765746163);
}

uint64_t sub_23E522D78(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x79726F6765746163 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23E522E1C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E522E6C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E522EE4 + 4 * byte_23E55BD8B[a2]))(0x6C6F72746E6F63);
}

uint64_t sub_23E522EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x6C6F72746E6F63 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23E522FA4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 6449010;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0x800000023E561BC0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 6449010;
  if ((a2 & 1) != 0)
    v6 = 0x800000023E561BC0;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_23E523044(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E523084(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E523154 + 4 * byte_23E55BD9B[a2]))(0x38746E6975);
}

uint64_t sub_23E523154(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x38746E6975 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23E52329C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E5232EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E5233A0 + 4 * byte_23E55BDAD[a2]))(0x65686E6572686166);
}

uint64_t sub_23E5233A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65686E6572686166 && v1 == 0xEA00000000007469)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_23E5234AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E523510(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E523634 + 4 * byte_23E55BDBE[a2]))(0x44496D6F6F52);
}

uint64_t sub_23E523634(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x44496D6F6F52 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E5237C0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x676E696D6F636E69;
    else
      v3 = 0x7463657269646962;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xED00006C616E6F69;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x676E696D6F636E69;
      else
        v6 = 0x7463657269646962;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xED00006C616E6F69;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x646574756DLL;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x646574756DLL)
  {
LABEL_21:
    v8 = sub_23E538354();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23E5238E8(uint64_t a1, uint64_t a2)
{
  return sub_23E5238F4(a1, a2, IconSymbol.rawValue.getter);
}

uint64_t sub_23E5238F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_23E52398C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23E5239D8(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E523A58 + 4 * byte_23E55BDCF[a2]))(a3 + 2);
}

uint64_t sub_23E523A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 + 2 && v3 == 0x800000023E560B60)
    v4 = 1;
  else
    v4 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_23E523B0C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000019;
  else
    v3 = 0xD000000000000018;
  if (v2)
    v4 = 0x800000023E560110;
  else
    v4 = 0x800000023E560130;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000019;
  else
    v5 = 0xD000000000000018;
  if ((a2 & 1) != 0)
    v6 = 0x800000023E560130;
  else
    v6 = 0x800000023E560110;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t HMAccessory.categoryType.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_category);
  v2 = objc_msgSend(v1, sel_categoryType);

  v3 = sub_23E53755C();
  return v3;
}

void *HMAccessory.subscript.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = objc_msgSend(v0, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v2 = sub_23E5377F0();

  if (v2 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E53803C())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_serviceType);
      v9 = sub_23E53755C();
      v11 = v10;

      v12._countAndFlagsBits = v9;
      v12._object = v11;
      LOBYTE(v13) = ServiceKind.init(rawValue:)(v12);
      v14 = ServiceKind.rawValue.getter(v13);
      v16 = v15;
      if (v14 == ServiceKind.rawValue.getter(v14) && v16 == v17)
      {
        swift_bridgeObjectRelease_n();
LABEL_14:
        swift_bridgeObjectRelease_n();
        return v6;
      }
      v18 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_14;

      ++v4;
      if (v7 == v3)
        goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 0;
}

{
  void *v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  void *v17;

  v0 = HMAccessory.subscript.getter();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_characteristics);
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v3 = sub_23E5377F0();

  if (v3 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_23E53803C())
  {
    v17 = v1;
    v5 = 4;
    while (1)
    {
      v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
      v7 = v6;
      v1 = (void *)(v5 - 3);
      if (__OFADD__(v5 - 4, 1))
        break;
      v8 = objc_msgSend(v6, sel_characteristicType);
      v9 = sub_23E53755C();
      v11 = v10;

      if (v9 == CharacteristicKind.rawValue.getter(v12) && v11 == v13)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      v15 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
      {

        goto LABEL_19;
      }

      ++v5;
      if (v1 == (void *)v4)
      {

        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }

LABEL_23:
  swift_bridgeObjectRelease();
  v7 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t HMAccessory.supportsAlarmsAndTimers.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_category);
  v2 = objc_msgSend(v1, sel_categoryType);

  v3 = sub_23E53755C();
  v5 = v4;

  if (v3 == sub_23E53755C() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      result = (uint64_t)objc_msgSend(v0, sel_siriEndpointProfile);
      if (!result)
        return result;

    }
  }
  return 1;
}

uint64_t sub_23E524114()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel10CacheEntry_expirationDate, &qword_2543330E0);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC13HomeDataModel10CacheEntry_value);
  return swift_deallocClassInstance();
}

uint64_t sub_23E524164()
{
  return type metadata accessor for CacheEntry(0);
}

uint64_t type metadata accessor for CacheEntry(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D4A378);
}

void sub_23E524180()
{
  unint64_t v0;

  sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_23E52421C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_release();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel20CameraClipAssetCache_cacheDirectory, &qword_256D40610);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23E52428C()
{
  return type metadata accessor for CameraClipAssetCache(0);
}

uint64_t type metadata accessor for CameraClipAssetCache(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D4A458);
}

void sub_23E5242A8()
{
  unint64_t v0;

  sub_23E1F1C1C(319, (unint64_t *)&qword_256D458E0, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t DataModel.favoritedTileInfoBearersInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t result;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v1 = v0;
  v2 = type metadata accessor for StaticAccessory(0);
  v86 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v80 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v79 = (uint64_t)&v72 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v85 = (uint64_t)&v72 - v7;
  v8 = type metadata accessor for StaticService();
  v87 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v84 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v83 = (uint64_t)&v72 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v72 - v13;
  v15 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v18 = v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  v89 = v1;
  v76 = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  v77 = v18;
  sub_23E537070();
  swift_release();
  v19 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v75 = v19;
  sub_23E1E2F50(v19, (uint64_t)v17, type metadata accessor for StateSnapshot);
  v78 = v15;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_23E4FB788(v20);
  sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StateSnapshot);
  v22 = sub_23E33BEA8(v21, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E526854);
  v23 = sub_23E33BEA8(v22, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E526610);
  v24 = *(_QWORD *)(v23 + 16);
  v74 = v1;
  if (v24)
  {
    v73 = v17;
    v88 = MEMORY[0x24BEE4AF8];
    sub_23E2CB160(0, v24, 0);
    v25 = sub_23E26B68C(v23);
    v27 = v26;
    v29 = v28 & 1;
    v81 = v14;
    v82 = v23 + 56;
    while ((v25 & 0x8000000000000000) == 0 && v25 < 1 << *(_BYTE *)(v23 + 32))
    {
      if (((*(_QWORD *)(v82 + (((unint64_t)v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v23 + 36) != (_DWORD)v27)
        goto LABEL_30;
      v30 = v23;
      v31 = *(_QWORD *)(v87 + 72);
      v32 = *(_QWORD *)(v23 + 48) + v31 * v25;
      v33 = v83;
      sub_23E1E2F50(v32, v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 = v33;
      v35 = v84;
      sub_23E1E2FDC(v34, v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E524ADC(v35, (uint64_t)v14);
      sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v36 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB160(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v88;
      }
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_23E2CB160(v37 > 1, v38 + 1, 1);
        v36 = v88;
      }
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = v36
          + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))
          + v38 * v31;
      v14 = v81;
      sub_23E1E2FDC((uint64_t)v81, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v23 = v30;
      v40 = sub_23E2CD280(v25, v27, v29 & 1, v30);
      v25 = v40;
      v27 = v41;
      v29 = v42 & 1;
      if (!--v24)
      {
        sub_23E23D578(v40, v41, v42 & 1);
        swift_release();
        v17 = v73;
        v1 = v74;
        v43 = v36;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_release();
  v43 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_getKeyPath();
  v88 = v1;
  sub_23E537070();
  swift_release();
  sub_23E1E2F50(v75, (uint64_t)v17, type metadata accessor for StateSnapshot);
  v44 = swift_bridgeObjectRetain();
  v45 = sub_23E4FBE2C(v44);
  sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StateSnapshot);
  swift_bridgeObjectRetain();
  v46 = sub_23E527304(v45, v43);
  v84 = v43;
  swift_bridgeObjectRelease();
  v47 = sub_23E33BEA8(v46, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E5263CC);
  v48 = *(_QWORD *)(v47 + 16);
  if (v48)
  {
    v88 = MEMORY[0x24BEE4AF8];
    sub_23E2058CC(0, v48, 0);
    v49 = sub_23E26B68C(v47);
    v51 = v50;
    v53 = v52 & 1;
    v87 = v47 + 56;
    v54 = v47;
    while ((v49 & 0x8000000000000000) == 0 && v49 < 1 << *(_BYTE *)(v47 + 32))
    {
      if (((*(_QWORD *)(v87 + (((unint64_t)v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        goto LABEL_32;
      if (*(_DWORD *)(v47 + 36) != (_DWORD)v51)
        goto LABEL_33;
      v55 = *(_QWORD *)(v86 + 72);
      v56 = *(_QWORD *)(v47 + 48) + v55 * v49;
      v57 = v79;
      sub_23E1E2F50(v56, v79, type metadata accessor for StaticAccessory);
      v58 = v57;
      v59 = v80;
      sub_23E1E2FDC(v58, v80, type metadata accessor for StaticAccessory);
      sub_23E524DEC(v59, v85);
      sub_23E1E2FA0(v59, type metadata accessor for StaticAccessory);
      v60 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058CC(0, *(_QWORD *)(v60 + 16) + 1, 1);
        v60 = v88;
      }
      v62 = *(_QWORD *)(v60 + 16);
      v61 = *(_QWORD *)(v60 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_23E2058CC(v61 > 1, v62 + 1, 1);
        v60 = v88;
      }
      *(_QWORD *)(v60 + 16) = v62 + 1;
      sub_23E1E2FDC(v85, v60 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80)) + v62 * v55, type metadata accessor for StaticAccessory);
      v47 = v54;
      v63 = sub_23E2CD280(v49, v51, v53 & 1, v54);
      v49 = v63;
      v51 = v64;
      v53 = v65 & 1;
      if (!--v48)
      {
        sub_23E23D578(v63, v64, v65 & 1);
        swift_release();
        v1 = v74;
        goto LABEL_27;
      }
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_release();
  v60 = MEMORY[0x24BEE4AF8];
LABEL_27:
  v66 = sub_23E3CF650(v60);
  swift_bridgeObjectRelease();
  v67 = sub_23E3CF66C(v84);
  swift_bridgeObjectRelease();
  v88 = v66;
  sub_23E25A0DC(v67);
  v68 = v88;
  swift_getKeyPath();
  v88 = v1;
  sub_23E537070();
  swift_release();
  type metadata accessor for StaticHome();
  v69 = swift_bridgeObjectRetain();
  v70 = sub_23E3D1F78(v69, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v70;
}

uint64_t sub_23E524ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25[2];
  __int128 v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v25[1] = a1;
  v25[0] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v25 - v13);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v25 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v25 - v18);
  v20 = sub_23E536F80();
  v21 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v21(v17, 1, 1, v20);
  v22 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  WORD1(v28) = 13573;
  v21(v14, 1, 1, v20);
  BYTE1(v28) = 53;
  v27 = 0;
  v23 = type metadata accessor for StaticSoftwareUpdate(0);
  v26 = 0u;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 1, 1, v23);
  LOBYTE(v28) = 2;
  v21(v11, 1, 1, v20);
  StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)(v19, 0, 0, 2, 0, 2, 2, (uint64_t)v17, v25[0], 0, 1, (uint64_t)v7, 0, 0, 0, 0, 2, 2, 2,
    2,
    0,
    0,
    0,
    (unsigned __int8 *)&v28 + 3,
    (unsigned __int8 *)&v28 + 2,
    (uint64_t)v14,
    0,
    (unsigned __int8 *)&v28 + 1,
    0,
    &v27,
    (uint64_t **)&v26,
    (uint64_t)v4,
    &v28,
    0,
    (uint64_t)v11,
    0x10000);
  sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v4, &qword_2543332B8);
  sub_23E1E7C64((uint64_t)v14, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v7, &qword_2543332A8);
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  return sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
}

uint64_t sub_23E524DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);

  v32 = a1;
  v31 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v30 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v30 - v21;
  v23 = sub_23E536F80();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  v25 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 1, 1, v25);
  v26 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 1, 1, v26);
  v27 = sub_23E536F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 1, 1, v27);
  v24(v20, 1, 1, v23);
  v24(v17, 1, 1, v23);
  LOWORD(v34) = -260;
  v28 = type metadata accessor for StaticSoftwareUpdate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v4, 1, 1, v28);
  v33 = 2;
  StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)((uint64_t)v22, 0, 0, (uint64_t)v13, (uint64_t)v10, (uint64_t)v7, 0, 1, v31, 0, (uint64_t)v20, 0, 0, 0, 2, 2, 2, 2, 2,
    0,
    0,
    (uint64_t)v17,
    &v34,
    0,
    0,
    0,
    2,
    0,
    (uint64_t)v4,
    2,
    (uint64_t (*)(char *, uint64_t, uint64_t))&v33);
  sub_23E1E7C64((uint64_t)v4, &qword_2543332B8);
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v7, &qword_2543330E0);
  sub_23E1E7C64((uint64_t)v10, &qword_2543332A8);
  sub_23E1E7C64((uint64_t)v13, &qword_254333218);
  return sub_23E1E7C64((uint64_t)v22, &qword_254333F50);
}

uint64_t sub_23E52515C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E5254A4(a1, a2, a3, a4, type metadata accessor for StaticAccessory, &qword_256D44AA8, (void (*)(char *))StaticAccessory.hash(into:));
}

uint64_t sub_23E525178(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E5251B0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_256D41D40, (void (*)(char *))StaticService.hash(into:));
}

uint64_t sub_23E525194(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E5251B0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_256D44A88, (void (*)(char *))StaticActionSet.hash(into:));
}

uint64_t sub_23E5251B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(char *))
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  char v41[72];

  v40 = a7;
  v13 = a5(0);
  v39 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - v14;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23E537E5C();
  v16 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v38)
      {
LABEL_37:
        swift_release();
        return v16;
      }
      v24 = v37[v23];
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v38)
          goto LABEL_37;
        v24 = v37[v19];
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v38)
            goto LABEL_37;
          v24 = v37[v19];
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v38)
              goto LABEL_37;
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v19 >= v38)
                  goto LABEL_37;
                v24 = v37[v19];
                ++v25;
                if (v24)
                  goto LABEL_24;
              }
            }
            v19 = v25;
          }
        }
      }
LABEL_24:
      v18 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = *(_QWORD *)(v39 + 72);
    sub_23E1E2F50(*(_QWORD *)(a4 + 48) + v26 * v22, (uint64_t)v15, a5);
    sub_23E53845C();
    v40(v41);
    result = sub_23E5384A4();
    v27 = -1 << *(_BYTE *)(v16 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v20 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v20 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v20 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v20 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = sub_23E1E2FDC((uint64_t)v15, *(_QWORD *)(v16 + 48) + v30 * v26, a5);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E525488(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E5254A4(a1, a2, a3, a4, type metadata accessor for StaticRoom, &qword_256D44A50, (void (*)(char *))StaticRoom.hash(into:));
}

uint64_t sub_23E5254A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(char *))
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *);
  char v36[72];

  v35 = a7;
  v13 = a5(0);
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - v14;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23E537E5C();
  v16 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_30;
      if (v23 >= v33)
      {
LABEL_27:
        swift_release();
        return v16;
      }
      v24 = v32[v23];
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v33)
          goto LABEL_27;
        v24 = v32[v19];
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v33)
            goto LABEL_27;
          v24 = v32[v19];
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v33)
              goto LABEL_27;
            v24 = v32[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_31;
                if (v19 >= v33)
                  goto LABEL_27;
                v24 = v32[v19];
                ++v25;
                if (v24)
                  goto LABEL_24;
              }
            }
            v19 = v25;
          }
        }
      }
LABEL_24:
      v18 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = a4;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = *(_QWORD *)(v34 + 72);
    sub_23E1E2F50(v27 + v28 * v22, (uint64_t)v15, a5);
    sub_23E53845C();
    v35(v36);
    sub_23E5384A4();
    v29 = sub_23E537D60();
    *(_QWORD *)(v20 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = sub_23E1E2FDC((uint64_t)v15, *(_QWORD *)(v16 + 48) + v29 * v28, a5);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v26;
    if (!a3)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E525710(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332258);
  result = sub_23E537E5C();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E525A10(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E5254A4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_256D44A70, (void (*)(char *))StaticMediaProfile.hash(into:));
}

uint64_t sub_23E525A2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58[5];

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticMediaSystemComponent();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v51 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v53 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A18);
  result = sub_23E537E5C();
  v17 = result;
  v47 = a1;
  v48 = a2;
  v54 = v8;
  if (a2 < 1)
    v19 = 0;
  else
    v19 = *a1;
  v20 = (uint64_t)v51;
  v21 = 0;
  v22 = result + 56;
  v52 = a4;
  v49 = v15;
  while (1)
  {
    if (v19)
    {
      v55 = (v19 - 1) & v19;
      v56 = v21;
      v23 = __clz(__rbit64(v19)) | (v21 << 6);
    }
    else
    {
      v24 = v21 + 1;
      if (__OFADD__(v21, 1))
        goto LABEL_43;
      if (v24 >= v48)
      {
LABEL_40:
        swift_release();
        return v17;
      }
      v25 = v47[v24];
      v26 = v21 + 1;
      if (!v25)
      {
        v26 = v21 + 2;
        if (v21 + 2 >= v48)
          goto LABEL_40;
        v25 = v47[v26];
        if (!v25)
        {
          v26 = v21 + 3;
          if (v21 + 3 >= v48)
            goto LABEL_40;
          v25 = v47[v26];
          if (!v25)
          {
            v27 = v21 + 4;
            if (v21 + 4 >= v48)
              goto LABEL_40;
            v25 = v47[v27];
            if (!v25)
            {
              while (1)
              {
                v26 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_44;
                if (v26 >= v48)
                  goto LABEL_40;
                v25 = v47[v26];
                ++v27;
                if (v25)
                  goto LABEL_24;
              }
            }
            v26 = v21 + 4;
          }
        }
      }
LABEL_24:
      v55 = (v25 - 1) & v25;
      v56 = v26;
      v23 = __clz(__rbit64(v25)) + (v26 << 6);
    }
    v28 = *(_QWORD *)(a4 + 48);
    v57 = *(_QWORD *)(v15 + 72);
    sub_23E1E2F50(v28 + v57 * v23, v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E53845C();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v29 = v54;
    sub_23E5374D8();
    StaticMediaProfile.hash(into:)(v58);
    sub_23E538468();
    v30 = *(_QWORD *)(v20 + *(int *)(v14 + 28));
    swift_bridgeObjectRetain();
    sub_23E240740(v58, v30);
    swift_bridgeObjectRelease();
    sub_23E1FC2F8(v20 + *(int *)(v14 + 32), (uint64_t)v13);
    v31 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v13, 1, v29) == 1)
    {
      sub_23E538474();
    }
    else
    {
      v32 = a3;
      v33 = v14;
      v34 = v17;
      v35 = v50;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v50, v13, v29);
      sub_23E538474();
      sub_23E5374D8();
      v20 = (uint64_t)v51;
      v36 = v35;
      v17 = v34;
      v14 = v33;
      a3 = v32;
      v15 = v49;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v29);
    }
    result = sub_23E5384A4();
    v37 = -1 << *(_BYTE *)(v17 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6))) != 0)
    {
      v40 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v22 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v39 == v42;
        if (v39 == v42)
          v39 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v22 + 8 * v39);
      }
      while (v44 == -1);
      v40 = __clz(__rbit64(~v44)) + (v39 << 6);
    }
    *(_QWORD *)(v22 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
    result = sub_23E1E2FDC(v20, *(_QWORD *)(v17 + 48) + v40 * v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    ++*(_QWORD *)(v17 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v52;
    v19 = v55;
    v21 = v56;
    if (!a3)
      goto LABEL_40;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E525ED0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333B0);
  result = sub_23E537E5C();
  v9 = result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    v19 = sub_23E53845C();
    CharacteristicKind.rawValue.getter(v19);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v23) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23E526158(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D50);
  result = sub_23E537E5C();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_23E53845C();
    sub_23E53848C();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23E5263CC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticAccessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, type metadata accessor for StaticAccessory);
    v16 = v8[*(int *)(v4 + 60)];
    result = sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory);
    if (v16 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E5254A4(v23, v22, v24, a3, type metadata accessor for StaticAccessory, &qword_256D44AA8, (void (*)(char *))StaticAccessory.hash(into:));
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E526610(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticService();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v16 = v8[*(int *)(v4 + 72)];
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v16 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E5251B0(v23, v22, v24, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_256D41D40, (void (*)(char *))StaticService.hash(into:));
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E526854(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticService();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = 0;
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_24;
      v19 = *(_QWORD *)(v25 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v14)
          goto LABEL_24;
        v19 = *(_QWORD *)(v25 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v16, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v17 = StaticService.isVisibleService.getter();
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E5251B0(v23, v22, v24, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_256D41D40, (void (*)(char *))StaticService.hash(into:));
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v14)
    goto LABEL_24;
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v14)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E526A7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  void (*v100)(char *, uint64_t, uint64_t);
  char *v101;
  uint64_t v102;

  v73 = a2;
  v74 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticService();
  v98 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v92 = (uint64_t)&v72 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v88 = (uint64_t)&v72 - v15;
  v91 = sub_23E536F80();
  v16 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v99 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for StaticAccessory(0);
  v80 = *(_QWORD *)(v95 - 8);
  result = MEMORY[0x24BDAC7A8](v95);
  v96 = (uint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = 0;
  v23 = 0;
  v81 = a3;
  v24 = a3;
  v25 = v16;
  v26 = *(_QWORD *)(v24 + 56);
  v76 = v24 + 56;
  v27 = 1 << *(_BYTE *)(v24 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v26;
  v77 = (unint64_t)(v27 + 63) >> 6;
  v102 = v16;
  v94 = v20;
  v79 = v8;
  v78 = v9;
  v101 = v12;
  v87 = a4;
  while (1)
  {
LABEL_5:
    if (v29)
    {
      v83 = (v29 - 1) & v29;
      v84 = v23;
      v30 = __clz(__rbit64(v29)) | (v23 << 6);
    }
    else
    {
      v31 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_62;
      if (v31 >= v77)
        goto LABEL_60;
      v32 = *(_QWORD *)(v76 + 8 * v31);
      v33 = v23 + 1;
      if (!v32)
      {
        v33 = v23 + 2;
        if (v23 + 2 >= v77)
          goto LABEL_60;
        v32 = *(_QWORD *)(v76 + 8 * v33);
        if (!v32)
        {
          v33 = v23 + 3;
          if (v23 + 3 >= v77)
            goto LABEL_60;
          v32 = *(_QWORD *)(v76 + 8 * v33);
          if (!v32)
          {
            v34 = v23 + 4;
            if (v23 + 4 >= v77)
              goto LABEL_60;
            v32 = *(_QWORD *)(v76 + 8 * v34);
            if (!v32)
            {
              while (1)
              {
                v33 = v34 + 1;
                if (__OFADD__(v34, 1))
                  goto LABEL_64;
                if (v33 >= v77)
                  break;
                v32 = *(_QWORD *)(v76 + 8 * v33);
                ++v34;
                if (v32)
                  goto LABEL_20;
              }
LABEL_60:
              v71 = v81;
              swift_retain();
              return sub_23E5254A4(v74, v73, v75, v71, type metadata accessor for StaticAccessory, &qword_256D44AA8, (void (*)(char *))StaticAccessory.hash(into:));
            }
            v33 = v23 + 4;
          }
        }
      }
LABEL_20:
      v83 = (v32 - 1) & v32;
      v84 = v33;
      v30 = __clz(__rbit64(v32)) + (v33 << 6);
    }
    v35 = *(_QWORD *)(v81 + 48);
    v36 = *(_QWORD *)(v80 + 72);
    v82 = v30;
    v37 = v96;
    sub_23E1E2F50(v35 + v36 * v30, v96, type metadata accessor for StaticAccessory);
    v38 = *(_QWORD *)(v37 + *(int *)(v95 + 80));
    v39 = *(_QWORD *)(v38 + 16);
    if (v39)
    {
      v40 = v38 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      v90 = *(_QWORD *)(v37 + *(int *)(v95 + 80));
      swift_bridgeObjectRetain();
      v93 = *(_QWORD *)(v25 + 72);
      v100 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      v97 = MEMORY[0x24BEE4AF8];
      v41 = v91;
      v100(v20, v40, v91);
      while (1)
      {
        v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
        v42(v20, 0, 1, v41);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v41) == 1)
          break;
        v43 = v20;
        v44 = (uint64_t)v99;
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v99, v43, v41);
        v45 = *(_QWORD *)(v96 + *(int *)(v95 + 76));
        if (*(_QWORD *)(v45 + 16) && (v46 = sub_23E1E3300(v44), (v47 & 1) != 0))
        {
          sub_23E1E2F50(*(_QWORD *)(v45 + 56) + *(_QWORD *)(v98 + 72) * v46, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v48 = 0;
        }
        else
        {
          v48 = 1;
        }
        v20 = v94;
        v49 = v98;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v8, v48, 1, v9);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v99, v41);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v8, 1, v9) == 1)
        {
          sub_23E1E7C64((uint64_t)v8, &qword_254332DE8);
        }
        else
        {
          v50 = v88;
          sub_23E1E2FDC((uint64_t)v8, v88, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FDC(v50, v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v51 = v97;
          else
            v51 = sub_23E1E3348(0, *(_QWORD *)(v97 + 16) + 1, 1, v97);
          v53 = *(_QWORD *)(v51 + 16);
          v52 = *(_QWORD *)(v51 + 24);
          if (v53 >= v52 >> 1)
            v51 = sub_23E1E3348(v52 > 1, v53 + 1, 1, v51);
          *(_QWORD *)(v51 + 16) = v53 + 1;
          v54 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
          v97 = v51;
          sub_23E1E2FDC(v92, v51 + v54 + *(_QWORD *)(v98 + 72) * v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v41 = v91;
        }
        v40 += v93;
        --v39;
        v25 = v102;
        if (!v39)
        {
          v42(v20, 1, 1, v41);
          break;
        }
        v100(v20, v40, v41);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v97 = MEMORY[0x24BEE4AF8];
      v55(v20, 1, 1, v91);
    }
    swift_bridgeObjectRelease();
    v93 = *(_QWORD *)(v97 + 16);
    if (v93)
      break;
    swift_bridgeObjectRelease();
LABEL_56:
    result = sub_23E1E2FA0(v96, type metadata accessor for StaticAccessory);
    *(unint64_t *)((char *)v74 + ((v82 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v82;
    v70 = __OFADD__(v75++, 1);
    v29 = v83;
    v23 = v84;
    if (v70)
      goto LABEL_63;
  }
  v56 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  v89 = v97 + v56;
  v57 = *(_QWORD *)(a4 + 16);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 72);
  v90 = a4 + v56;
  v86 = (uint64_t)v58 + a4 + v56;
  swift_bridgeObjectRetain();
  v59 = 0;
  v100 = v58;
  v85 = a4 + v56 + 2 * (_QWORD)v58;
  while (1)
  {
    if (!v57)
      goto LABEL_44;
    v60 = (uint64_t)v101;
    v61 = v89 + (_QWORD)v100 * v59;
    sub_23E1E2F50(v90, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_bridgeObjectRetain();
    v62 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v60, v61);
    sub_23E1E2FA0(v60, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v62 & 1) != 0)
      goto LABEL_4;
    if (v57 != 1)
    {
      v63 = (uint64_t)v101;
      sub_23E1E2F50(v86, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v64 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v63, v61);
      sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v64 & 1) != 0)
      {
LABEL_4:
        a4 = v87;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        result = sub_23E1E2FA0(v96, type metadata accessor for StaticAccessory);
        v8 = v79;
        v9 = v78;
        v25 = v102;
        v20 = v94;
        v29 = v83;
        v23 = v84;
        goto LABEL_5;
      }
      if (v57 != 2)
        break;
    }
LABEL_43:
    a4 = v87;
    swift_bridgeObjectRelease();
    v25 = v102;
LABEL_44:
    if (++v59 == v93)
    {
      swift_bridgeObjectRelease_n();
      v20 = v94;
      v8 = v79;
      v9 = v78;
      goto LABEL_56;
    }
  }
  v65 = v85;
  v66 = 2;
  while (1)
  {
    v67 = (uint64_t)v101;
    result = sub_23E1E2F50(v65, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v68 = v66 + 1;
    if (__OFADD__(v66, 1))
      break;
    v69 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v67, v61);
    sub_23E1E2FA0(v67, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v69 & 1) != 0)
      goto LABEL_4;
    ++v66;
    v65 += (uint64_t)v100;
    if (v68 == v57)
      goto LABEL_43;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_23E527304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E526A7C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E526A7C((unint64_t *)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x24264FEBC](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_23E5274C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  char *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int64_t v33;

  v2 = type metadata accessor for IconTextValueStringDataHolder();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v32 = (char *)MEMORY[0x24BEE4AF8];
  v30 = a1 + 64;
  if (!v12)
    goto LABEL_7;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * i, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FDC((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v17 = &v6[*(int *)(v2 + 32)];
    if (v17[24])
    {
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      if (v12)
        goto LABEL_4;
    }
    else
    {
      v21 = *((_QWORD *)v17 + 1);
      v22 = *((_QWORD *)v17 + 2);
      v31 = *(_QWORD *)v17;
      sub_23E2238EC(v31, v21, v22, 0);
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23E51FCD4(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v32 = (char *)result;
      }
      v24 = *((_QWORD *)v32 + 2);
      v23 = *((_QWORD *)v32 + 3);
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v29 = v24 + 1;
        result = (uint64_t)sub_23E51FCD4((char *)(v23 > 1), v24 + 1, 1, v32);
        v25 = v29;
        v32 = (char *)result;
      }
      v26 = v32;
      *((_QWORD *)v32 + 2) = v25;
      v27 = &v26[v24];
      v9 = v30;
      v27[32] = v31;
      if (v12)
        goto LABEL_4;
    }
LABEL_7:
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v33)
      goto LABEL_29;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_29;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_29;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
        {
          v14 = v18 + 3;
          if (v18 + 3 >= v33)
            goto LABEL_29;
          v19 = *(_QWORD *)(v9 + 8 * v14);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v12 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v33)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v32;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v33)
      goto LABEL_29;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

BOOL static SecurityIssue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t static SecuritySummarizer.garageDoorIcon(_:)(uint64_t a1, char a2)
{
  unint64_t result;

  result = 0xD000000000000010;
  if ((a2 & 1) != 0)
    return 0xD00000000000002ELL;
  switch(a1)
  {
    case 0:
    case 2:
    case 3:
      return result;
    case 1:
      result = 0xD000000000000012;
      break;
    default:
      return 0xD00000000000002ELL;
  }
  return result;
}

void static SecuritySummarizer.garageDoorString(_:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

unint64_t static SecuritySummarizer.doorIcon(isSecure:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000013;
}

uint64_t static SecuritySummarizer.doorString(isSecure:)()
{
  return sub_23E5279B0();
}

unint64_t static SecuritySummarizer.windowIcon(isSecure:)(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000014;
}

uint64_t static SecuritySummarizer.windowString(isSecure:)()
{
  return sub_23E5279B0();
}

uint64_t sub_23E5279B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23E53752C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23E537520();
  sub_23E536FA4();
  return sub_23E5375A4();
}

BOOL static SecuritySummarizer.doorIsSecure(intValue:)(uint64_t a1)
{
  return a1 == 0;
}

unint64_t static SecuritySummarizer.lockIcon(_:)(uint64_t a1, char a2)
{
  unint64_t result;

  if ((a2 & 1) != 0)
    return 0xD000000000000022;
  result = 0x65706F2E6B636F6CLL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6C69662E6B636F6CLL;
      break;
    case 2:
      result = 0xD000000000000027;
      break;
    default:
      return 0xD000000000000022;
  }
  return result;
}

unint64_t static SecuritySummarizer.securitySystemIcon(_:)()
{
  return 0xD000000000000015;
}

BOOL static SecurityIssue.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t SecurityIssue.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E527BE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E527C24 + 4 * byte_23E55BF7E[a1]))(0xD000000000000017, 0x800000023E56BC00);
}

uint64_t sub_23E527C24()
{
  return 0x617261476E65706FLL;
}

uint64_t sub_23E527C48()
{
  return 0x726F6F446E65706FLL;
}

uint64_t sub_23E527C60()
{
  return 0x64656B636F6C6E75;
}

uint64_t sub_23E527C80()
{
  return 0x646E69576E65706FLL;
}

unint64_t sub_23E527C9C()
{
  return 0xD000000000000016;
}

uint64_t sub_23E527CB8()
{
  return 0x6F707365726E6F6ELL;
}

uint64_t sub_23E527CDC()
{
  return 1701736302;
}

uint64_t sub_23E527CEC()
{
  unsigned __int8 *v0;

  return sub_23E527BE8(*v0);
}

uint64_t sub_23E527CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E52F6E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E527D18()
{
  sub_23E52E1C8();
  return sub_23E538570();
}

uint64_t sub_23E527D40()
{
  sub_23E52E1C8();
  return sub_23E53857C();
}

uint64_t sub_23E527D68()
{
  sub_23E52E294();
  return sub_23E538570();
}

uint64_t sub_23E527D90()
{
  sub_23E52E294();
  return sub_23E53857C();
}

uint64_t sub_23E527DB8()
{
  sub_23E52E20C();
  return sub_23E538570();
}

uint64_t sub_23E527DE0()
{
  sub_23E52E20C();
  return sub_23E53857C();
}

uint64_t sub_23E527E08()
{
  sub_23E52E250();
  return sub_23E538570();
}

uint64_t sub_23E527E30()
{
  sub_23E52E250();
  return sub_23E53857C();
}

uint64_t sub_23E527E58()
{
  sub_23E52E360();
  return sub_23E538570();
}

uint64_t sub_23E527E80()
{
  sub_23E52E360();
  return sub_23E53857C();
}

uint64_t sub_23E527EA8()
{
  sub_23E52E3A4();
  return sub_23E538570();
}

uint64_t sub_23E527ED0()
{
  sub_23E52E3A4();
  return sub_23E53857C();
}

uint64_t sub_23E527EF8()
{
  sub_23E52E2D8();
  return sub_23E538570();
}

uint64_t sub_23E527F20()
{
  sub_23E52E2D8();
  return sub_23E53857C();
}

uint64_t sub_23E527F48()
{
  sub_23E52E3E8();
  return sub_23E538570();
}

uint64_t sub_23E527F70()
{
  sub_23E52E3E8();
  return sub_23E53857C();
}

uint64_t sub_23E527F98()
{
  sub_23E52E31C();
  return sub_23E538570();
}

uint64_t sub_23E527FC0()
{
  sub_23E52E31C();
  return sub_23E53857C();
}

void *static SecurityIssue.allCases.getter()
{
  return &unk_250EDFF38;
}

void SecurityIssue.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6A8);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6B0);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6B8);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6C0);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v26 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6C8);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v23 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6D0);
  v21 = *(_QWORD *)(v13 - 8);
  v22 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v20 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6D8);
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6E0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A6E8);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v17 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E52E1C8();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E5282B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_23E52E3E8();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t SecurityIssue.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t SecurityIssue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  char *v57;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A738);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A740);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v54 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A748);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A750);
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v50 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A758);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A760);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A768);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v48 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A770);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A778);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23E52E1C8();
  v23 = v57;
  sub_23E5384E0();
  if (!v23)
  {
    v31[2] = v17;
    v31[0] = v15;
    v31[1] = v14;
    v32 = v19;
    v33 = v18;
    v57 = v21;
    v24 = sub_23E5381C8();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_23E537ED4();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v27 = &type metadata for SecurityIssue;
    v28 = v33;
    v29 = v57;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
}

void sub_23E528CA0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDFF38;
}

uint64_t sub_23E528CB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SecurityIssue.init(from:)(a1, a2);
}

void sub_23E528CC4(_QWORD *a1)
{
  SecurityIssue.encode(to:)(a1);
}

uint64_t sub_23E528CD8()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_23E222D08((uint64_t)&unk_250EDFF60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A838);
  result = swift_arrayDestroy();
  qword_256D4A5B0 = v0;
  return result;
}

uint64_t static SecurityIssue.iconName.getter()
{
  return sub_23E3AC410(&qword_256D3EF18);
}

uint64_t sub_23E528D44()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A830);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E55C850;
  *(_BYTE *)(inited + 32) = 0;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v2;
  *(_BYTE *)(inited + 56) = 1;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  *(_BYTE *)(inited + 80) = 2;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = v6;
  *(_BYTE *)(inited + 104) = 3;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = v8;
  *(_BYTE *)(inited + 128) = 4;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = v10;
  *(_BYTE *)(inited + 152) = 5;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 160) = v11;
  *(_QWORD *)(inited + 168) = v12;
  *(_BYTE *)(inited + 176) = 6;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v14;
  v15 = sub_23E222D08(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A838);
  result = swift_arrayDestroy();
  qword_256D4A5B8 = v15;
  return result;
}

uint64_t static SecurityIssue.localizedSingularTitle.getter()
{
  return sub_23E3AC410(&qword_256D3EF20);
}

uint64_t sub_23E528EF4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A830);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E55C850;
  *(_BYTE *)(inited + 32) = 0;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v2;
  *(_BYTE *)(inited + 56) = 1;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  *(_BYTE *)(inited + 80) = 2;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = v6;
  *(_BYTE *)(inited + 104) = 3;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = v8;
  *(_BYTE *)(inited + 128) = 4;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = v10;
  *(_BYTE *)(inited + 152) = 5;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 160) = v11;
  *(_QWORD *)(inited + 168) = v12;
  *(_BYTE *)(inited + 176) = 6;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v14;
  v15 = sub_23E222D08(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A838);
  result = swift_arrayDestroy();
  qword_256D4A5C0 = v15;
  return result;
}

uint64_t static SecurityIssue.localizedPluralTitle.getter()
{
  return sub_23E3AC410(&qword_256D3EF28);
}

uint64_t sub_23E5290A8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A830);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E55C850;
  *(_BYTE *)(inited + 32) = 0;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v2;
  *(_BYTE *)(inited + 56) = 1;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  *(_BYTE *)(inited + 80) = 2;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = v6;
  *(_BYTE *)(inited + 104) = 3;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = v8;
  *(_BYTE *)(inited + 128) = 4;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = v10;
  *(_BYTE *)(inited + 152) = 5;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 160) = v11;
  *(_QWORD *)(inited + 168) = v12;
  *(_BYTE *)(inited + 176) = 6;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v14;
  v15 = (void *)sub_23E222D08(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A838);
  result = swift_arrayDestroy();
  off_256D4A5C8 = v15;
  return result;
}

uint64_t static SecurityIssue.localizedSingularValue.getter()
{
  return sub_23E3AC410(&qword_256D3EF30);
}

uint64_t sub_23E529250()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A830);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E55C850;
  *(_BYTE *)(inited + 32) = 0;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v2;
  *(_BYTE *)(inited + 56) = 1;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 64) = v3;
  *(_QWORD *)(inited + 72) = v4;
  *(_BYTE *)(inited + 80) = 2;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = v6;
  *(_BYTE *)(inited + 104) = 3;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 112) = v7;
  *(_QWORD *)(inited + 120) = v8;
  *(_BYTE *)(inited + 128) = 4;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = v10;
  *(_BYTE *)(inited + 152) = 5;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 160) = v11;
  *(_QWORD *)(inited + 168) = v12;
  *(_BYTE *)(inited + 176) = 6;
  static String.hfLocalized(_:)();
  *(_QWORD *)(inited + 184) = v13;
  *(_QWORD *)(inited + 192) = v14;
  v15 = (void *)sub_23E222D08(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A838);
  result = swift_arrayDestroy();
  off_256D4A5D0 = v15;
  return result;
}

uint64_t static SecurityIssue.localizedMultipleValueFormat.getter()
{
  return sub_23E3AC410(&qword_256D3EF38);
}

void static SecuritySummarizer.lockString(_:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

BOOL static SecuritySummarizer.lockIsSecure(_:)(uint64_t a1, char a2)
{
  return (a2 & 1) == 0 && a1 == 1;
}

void static SecuritySummarizer.securitySystemString(_:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

uint64_t static SecuritySummarizer.securitySystemIsSecure(_:)(uint64_t a1, char a2)
{
  return sub_23E41F2A8(a1, a2 & 1, (uint64_t)&unk_250EE0028);
}

uint64_t sub_23E52958C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E540F20;
  if (qword_256D3EF48 != -1)
    swift_once();
  v1 = *(_QWORD *)algn_256D4A5E8;
  v2 = qword_256D4A5F0;
  v3 = unk_256D4A5F8;
  v4 = qword_256D4A600;
  *(_QWORD *)(v0 + 32) = qword_256D4A5E0;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  v5 = qword_256D3EF50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = unk_256D4A610;
  v7 = qword_256D4A618;
  v8 = unk_256D4A620;
  v9 = qword_256D4A628;
  *(_QWORD *)(v0 + 72) = qword_256D4A608;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v9;
  v10 = qword_256D3EF58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  v11 = *(_QWORD *)algn_256D4A638;
  v12 = qword_256D4A640;
  v13 = unk_256D4A648;
  v14 = qword_256D4A650;
  *(_QWORD *)(v0 + 112) = qword_256D4A630;
  *(_QWORD *)(v0 + 120) = v11;
  *(_QWORD *)(v0 + 128) = v12;
  *(_QWORD *)(v0 + 136) = v13;
  *(_QWORD *)(v0 + 144) = v14;
  v15 = qword_256D3EF60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = unk_256D4A660;
  v17 = qword_256D4A668;
  v18 = unk_256D4A670;
  v19 = qword_256D4A678;
  *(_QWORD *)(v0 + 152) = qword_256D4A658;
  *(_QWORD *)(v0 + 160) = v16;
  *(_QWORD *)(v0 + 168) = v17;
  *(_QWORD *)(v0 + 176) = v18;
  *(_QWORD *)(v0 + 184) = v19;
  v20 = qword_256D3EF68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = *(_QWORD *)algn_256D4A688;
  v22 = qword_256D4A690;
  v23 = unk_256D4A698;
  v24 = qword_256D4A6A0;
  *(_QWORD *)(v0 + 192) = qword_256D4A680;
  *(_QWORD *)(v0 + 200) = v21;
  *(_QWORD *)(v0 + 208) = v22;
  *(_QWORD *)(v0 + 216) = v23;
  *(_QWORD *)(v0 + 224) = v24;
  qword_256D4A5D8 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static SecuritySummarizer.allSecuritySummaryFetchSpecifications.getter()
{
  return sub_23E3AC410(&qword_256D3EF40);
}

void sub_23E5297F0()
{
  qword_256D4A5E0 = 0xD000000000000013;
  *(_QWORD *)algn_256D4A5E8 = 0x800000023E56BCC0;
  qword_256D4A5F0 = (uint64_t)&unk_250EDE168;
  unk_256D4A5F8 = MEMORY[0x24BEE4AF8];
  qword_256D4A600 = (uint64_t)&unk_250EDE190;
}

uint64_t static SecuritySummarizer.garageDoorOpenersFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EF48 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D4A5E8;
  v3 = qword_256D4A5F0;
  v4 = unk_256D4A5F8;
  v5 = qword_256D4A600;
  *a1 = qword_256D4A5E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E5298BC()
{
  qword_256D4A608 = 0xD000000000000019;
  unk_256D4A610 = 0x800000023E56BCA0;
  qword_256D4A618 = (uint64_t)&unk_250EDE1B8;
  unk_256D4A620 = MEMORY[0x24BEE4AF8];
  qword_256D4A628 = (uint64_t)&unk_250EDE1E0;
}

uint64_t static SecuritySummarizer.motorizedDoorsAndWindowsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EF50 != -1)
    swift_once();
  v2 = unk_256D4A610;
  v3 = qword_256D4A618;
  v4 = unk_256D4A620;
  v5 = qword_256D4A628;
  *a1 = qword_256D4A608;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E529988()
{
  qword_256D4A630 = 0x1000000000000032;
  *(_QWORD *)algn_256D4A638 = 0x800000023E56BC60;
  qword_256D4A640 = (uint64_t)&unk_250EDE208;
  unk_256D4A648 = MEMORY[0x24BEE4AF8];
  qword_256D4A650 = (uint64_t)&unk_250EDE230;
}

uint64_t static SecuritySummarizer.doorsAndWindowsAndGarageDoorsContactSensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EF58 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D4A638;
  v3 = qword_256D4A640;
  v4 = unk_256D4A648;
  v5 = qword_256D4A650;
  *a1 = qword_256D4A630;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E529A54()
{
  qword_256D4A658 = 0x736B636F4CLL;
  unk_256D4A660 = 0xE500000000000000;
  qword_256D4A668 = (uint64_t)&unk_250EDE258;
  unk_256D4A670 = MEMORY[0x24BEE4AF8];
  qword_256D4A678 = (uint64_t)&unk_250EDE280;
}

uint64_t static SecuritySummarizer.locksFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EF60 != -1)
    swift_once();
  v2 = unk_256D4A660;
  v3 = qword_256D4A668;
  v4 = unk_256D4A670;
  v5 = qword_256D4A678;
  *a1 = qword_256D4A658;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E529B18()
{
  qword_256D4A680 = 0xD000000000000010;
  *(_QWORD *)algn_256D4A688 = 0x800000023E56BC40;
  qword_256D4A690 = (uint64_t)&unk_250EDE2A8;
  unk_256D4A698 = MEMORY[0x24BEE4AF8];
  qword_256D4A6A0 = (uint64_t)&unk_250EDE2D0;
}

uint64_t static SecuritySummarizer.securitySystemsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EF68 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D4A688;
  v3 = qword_256D4A690;
  v4 = unk_256D4A698;
  v5 = qword_256D4A6A0;
  *a1 = qword_256D4A680;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E529BE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t (*v28)();
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  _QWORD *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v10 = type metadata accessor for IconTextValueStringDataHolder();
  v55 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v54 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v53 = (uint64_t)&v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v63 = (uint64_t)&v48 - v15;
  v49 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v52 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A840);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = -1 << *(_BYTE *)(a1 + 32);
  v22 = ~v21;
  v23 = *(_QWORD *)(a1 + 64);
  v24 = -v21;
  v56 = a1;
  v57 = a1 + 64;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v58 = v22;
  v59 = 0;
  v60 = v25 & v23;
  v61 = a2;
  v62 = a3;
  v51 = a1;
  swift_bridgeObjectRetain();
  v50 = a3;
  swift_retain();
  sub_23E287988((uint64_t)v20);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  v28 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet;
  while (1)
  {
    v33 = (uint64_t)&v20[*(int *)(v26 + 48)];
    v34 = v28;
    sub_23E1E2FDC((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))v28);
    sub_23E1E2FDC(v33, v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v35 = *(_QWORD **)a5;
    v37 = sub_23E211680((uint64_t)v17);
    v38 = v35[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      break;
    v41 = v36;
    if (v35[3] >= v40)
    {
      if ((a4 & 1) != 0)
      {
        v44 = *(_QWORD **)a5;
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E220C38();
        v44 = *(_QWORD **)a5;
        if ((v41 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E218284(v40, a4 & 1);
      v42 = sub_23E211680((uint64_t)v17);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_22;
      v37 = v42;
      v44 = *(_QWORD **)a5;
      if ((v41 & 1) != 0)
      {
LABEL_7:
        v29 = v44[7];
        v30 = *(_QWORD *)(v55 + 72) * v37;
        v31 = v54;
        sub_23E1E2F50(v29 + v30, v54, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        v32 = v53;
        sub_23E1E2F50(v31, v53, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        v28 = v34;
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))v34);
        sub_23E52FA80(v32, *(_QWORD *)(*(_QWORD *)a5 + 56) + v30);
        goto LABEL_8;
      }
    }
    v44[(v37 >> 6) + 8] |= 1 << v37;
    v28 = v34;
    sub_23E1E2FDC((uint64_t)v17, v44[6] + *(_QWORD *)(v52 + 72) * v37, (uint64_t (*)(_QWORD))v34);
    sub_23E1E2FDC(v63, v44[7] + *(_QWORD *)(v55 + 72) * v37, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v45 = v44[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_21;
    v44[2] = v47;
LABEL_8:
    sub_23E287988((uint64_t)v20);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E529FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40CA0) + 48);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318) + 48);
  sub_23E1E2F50(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return sub_23E1E2F50(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_23E52A060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char **v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  int *v79;
  unint64_t *v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;

  v102 = a2;
  v106 = sub_23E536F80();
  v105 = *(_QWORD *)(v106 - 8);
  v3 = MEMORY[0x24BDAC7A8](v106);
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v98 = (char *)&v95 - v6;
  v7 = type metadata accessor for IconTextValueStringDataHolder();
  v100 = *(_QWORD *)(v7 - 8);
  v101 = (int *)v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v99 = (char *)&v95 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v96 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v95 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v95 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v103 = (uint64_t)&v95 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v97 = (char *)&v95 - v26;
  v27 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v104 = (char *)&v95 - v30;
  v31 = a1;
  v32 = a1 + *(int *)(v29 + 24);
  result = type metadata accessor for StaticCharacteristic();
  v34 = v32 + *(int *)(result + 24);
  v35 = *(_QWORD *)v34;
  switch(*(_BYTE *)(v34 + 16))
  {
    case 1:
      v35 = *(_QWORD *)v34;
      v36 = v106;
      goto LABEL_9;
    case 2:
      v35 = (unsigned __int16)*(_QWORD *)v34;
      v36 = v106;
      goto LABEL_9;
    case 3:
      v35 = *(_QWORD *)v34;
      v36 = v106;
      goto LABEL_9;
    case 4:
      v36 = v106;
      if (v35 < 0)
      {
        __break(1u);
        JUMPOUT(0x23E52A7D8);
      }
      goto LABEL_9;
    case 5:
    case 6:
      v35 = (int)v35;
      v36 = v106;
LABEL_9:
      v48 = v105;
      if (v35 == 1)
        return result;
      sub_23E1E2F50(v31, (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v103, 1, 1, v36);
      switch(v35)
      {
        case 0:
        case 2:
        case 3:
          v54 = v31 + *(int *)(v27 + 20);
          v55 = (uint64_t *)(v54 + *(int *)(type metadata accessor for StaticService() + 20));
          v52 = *v55;
          v51 = v55[1];
          swift_bridgeObjectRetain();
          static String.hfLocalized(_:)();
          v53 = v56;
          v96 = v57;
          v58 = 0xD000000000000010;
          v59 = "door.garage.open";
          break;
        case 4:
          v60 = v31 + *(int *)(v27 + 20);
          v61 = (uint64_t *)(v60 + *(int *)(type metadata accessor for StaticService() + 20));
          v52 = *v61;
          v51 = v61[1];
          swift_bridgeObjectRetain();
          static String.hfLocalized(_:)();
          v53 = v62;
          v96 = v63;
          goto LABEL_14;
        default:
          v49 = v31 + *(int *)(v27 + 20);
          v50 = (uint64_t *)(v49 + *(int *)(type metadata accessor for StaticService() + 20));
          v52 = *v50;
          v51 = v50[1];
          swift_bridgeObjectRetain();
          v53 = 0;
          v96 = 0;
LABEL_14:
          v58 = 0xD00000000000002ELL;
          v59 = "door.garage.open.trianglebadge.exclamationmark";
          break;
      }
      v64 = (unint64_t)(v59 - 32) | 0x8000000000000000;
      v65 = v103;
      sub_23E1FC2F8(v103, (uint64_t)v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v20, 1, v36) == 1)
      {
        v66 = v48;
        v67 = (uint64_t)v20;
        v68 = v64;
        v69 = v58;
        v70 = v51;
        v71 = v53;
        v72 = v52;
        v73 = v65;
        v74 = v98;
        sub_23E536F74();
        v75 = v73;
        v52 = v72;
        v53 = v71;
        v51 = v70;
        v58 = v69;
        v64 = v68;
        sub_23E273104(v75);
        sub_23E273104(v67);
        v76 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
        v36 = v106;
      }
      else
      {
        sub_23E273104(v65);
        v77 = v20;
        v76 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
        v74 = v98;
        v76(v98, v77, v36);
      }
      v78 = (uint64_t)v99;
      v76(v99, v74, v36);
      v79 = v101;
      v80 = (unint64_t *)(v78 + v101[5]);
      *v80 = v58;
      v80[1] = v64;
      v81 = (_QWORD *)(v78 + v79[6]);
      *v81 = v52;
      v81[1] = v51;
      v82 = (_QWORD *)(v78 + v79[7]);
      v83 = v96;
      v84 = (uint64_t)v97;
      *v82 = v53;
      v82[1] = v83;
      v85 = v78 + v79[8];
      *(_QWORD *)(v85 + 8) = 0;
      *(_QWORD *)(v85 + 16) = 0;
      *(_QWORD *)v85 = 1;
      *(_BYTE *)(v85 + 24) = 0;
      sub_23E1E2FDC(v78, v84, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v100 + 56))(v84, 0, 1, v79);
      v86 = v84;
      v87 = (uint64_t)v104;
      return sub_23E20D074(v86, v87);
    default:
      v104 = v25;
      v98 = v10;
      v103 = v35;
      sub_23E1E2F50(v31, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v37 = v105;
      v38 = v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v17, 1, 1, v106);
      v39 = v31 + *(int *)(v27 + 20);
      v40 = (char **)(v39 + *(int *)(type metadata accessor for StaticService() + 20));
      v41 = v40[1];
      v97 = *v40;
      swift_bridgeObjectRetain();
      static String.hfLocalized(_:)();
      v99 = v42;
      v44 = v43;
      v45 = v96;
      sub_23E1FC2F8((uint64_t)v17, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v45, 1, v38) == 1)
      {
        v46 = v5;
        sub_23E536F74();
        sub_23E273104((uint64_t)v17);
        sub_23E273104(v45);
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
      }
      else
      {
        sub_23E273104((uint64_t)v17);
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
        v46 = v5;
        v47(v5, v45, v38);
      }
      v88 = (uint64_t)v98;
      v47(v98, (uint64_t)v46, v38);
      v89 = v101;
      v90 = (_QWORD *)(v88 + v101[5]);
      *v90 = 0xD00000000000002ELL;
      v90[1] = 0x800000023E56BAF0;
      v91 = (_QWORD *)(v88 + v89[6]);
      *v91 = v97;
      v91[1] = v41;
      v92 = (_QWORD *)(v88 + v89[7]);
      *v92 = v99;
      v92[1] = v44;
      v93 = v88 + v89[8];
      *(_QWORD *)(v93 + 8) = 0;
      *(_QWORD *)(v93 + 16) = 0;
      *(_QWORD *)v93 = 6;
      *(_BYTE *)(v93 + 24) = 0;
      v94 = (uint64_t)v104;
      sub_23E1E2FDC(v88, (uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v100 + 56))(v94, 0, 1, v89);
      v86 = v94;
      v87 = v103;
      return sub_23E20D074(v86, v87);
  }
}

uint64_t sub_23E52A804(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t result;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  char **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t, char *);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char **v86;
  char *v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t, char *);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, uint64_t, char *);
  uint64_t v103;
  int *v104;
  _QWORD *v105;
  char **v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int *v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, char *, char *);
  uint64_t v133;
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  char *v173;

  v172 = a2;
  v3 = sub_23E536F80();
  v168 = *(_QWORD *)(v3 - 8);
  v169 = (char *)v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v150 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v151 = (char *)&v148 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v163 = (char *)&v148 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v162 = (char *)&v148 - v10;
  v11 = type metadata accessor for IconTextValueStringDataHolder();
  v170 = *(_QWORD *)(v11 - 8);
  v171 = (int *)v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v149 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v152 = (char *)&v148 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v161 = (char *)&v148 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v160 = (char *)&v148 - v18;
  v19 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v19);
  v167 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23E53752C();
  MEMORY[0x24BDAC7A8](v21);
  v166 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v154 = (char *)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v153 = (char *)&v148 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v148 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v148 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v157 = (uint64_t)&v148 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v156 = (char *)&v148 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v173 = (char *)&v148 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v155 = (char *)&v148 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v148 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)&v148 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v159 = (uint64_t)&v148 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v158 = (uint64_t)&v148 - v50;
  v51 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v52 = MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v148 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v52);
  v57 = (char *)&v148 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55);
  v165 = (char *)&v148 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v164 = (char *)&v148 - v61;
  v62 = a1;
  v63 = (char *)(a1 + *(int *)(v60 + 24));
  result = type metadata accessor for StaticCharacteristic();
  v65 = &v63[*(int *)(result + 24)];
  v66 = v65[16] - 1;
  v67 = *(_QWORD *)v65;
  switch(v66)
  {
    case 0:
      v67 = v67;
      goto LABEL_10;
    case 1:
      v67 = (unsigned __int16)v67;
      goto LABEL_10;
    case 2:
      v67 = v67;
      goto LABEL_10;
    case 3:
      v82 = (uint64_t)v173;
      if ((v67 & 0x8000000000000000) == 0)
        goto LABEL_11;
      __break(1u);
      goto LABEL_20;
    case 4:
    case 5:
      v67 = (int)v67;
LABEL_10:
      v82 = (uint64_t)v173;
LABEL_11:
      if (!v67)
        return result;
      v83 = v62 + *(int *)(v51 + 20);
      result = type metadata accessor for StaticService();
      v84 = result;
      v85 = *(unsigned __int8 *)(v83 + *(int *)(result + 84));
      if (v85 == 51)
      {
        sub_23E1E2F50(v62, (uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v91 = v168;
        v92 = v169;
        v93 = (uint64_t)v156;
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v168 + 56))(v156, 1, 1, v169);
        v94 = (uint64_t *)(v83 + *(int *)(v84 + 20));
        v95 = v91;
        v96 = v94[1];
        v173 = (char *)*v94;
        swift_bridgeObjectRetain();
        sub_23E537520();
        sub_23E536FA4();
        v97 = sub_23E5375A4();
        v99 = v98;
        v100 = v157;
        sub_23E1FC2F8(v93, v157);
        if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v95 + 48))(v100, 1, v92) == 1)
        {
          v101 = v163;
          sub_23E536F74();
          sub_23E273104(v93);
          sub_23E273104(v100);
          v102 = *(void (**)(char *, uint64_t, char *))(v95 + 32);
        }
        else
        {
          sub_23E273104(v93);
          v102 = *(void (**)(char *, uint64_t, char *))(v95 + 32);
          v101 = v163;
          v102(v163, v100, v92);
        }
        v112 = v92;
        v113 = (uint64_t)v161;
        v102(v161, (uint64_t)v101, v112);
        v114 = v171;
        v115 = (_QWORD *)(v113 + v171[5]);
        *v115 = 0xD000000000000014;
        v115[1] = 0x800000023E562B00;
        v116 = (_QWORD *)(v113 + v114[6]);
        *v116 = v173;
        v116[1] = v96;
        v117 = (uint64_t *)(v113 + v114[7]);
        *v117 = v97;
        v117[1] = v99;
        v118 = v113 + v114[8];
        *(_QWORD *)(v118 + 8) = 0;
        *(_QWORD *)(v118 + 16) = 0;
        *(_QWORD *)v118 = 4;
        *(_BYTE *)(v118 + 24) = 0;
        v119 = v159;
        sub_23E1E2FDC(v113, v159, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v170 + 56))(v119, 0, 1, v114);
        v110 = v119;
        goto LABEL_30;
      }
      if (v85 != 14)
        return result;
      v57 = (char *)0xD000000000000013;
      sub_23E1E2F50(v62, (uint64_t)v164, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v51 = v168;
      v47 = v169;
      v54 = v155;
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v168 + 56))(v155, 1, 1, v169);
      v86 = (char **)(v83 + *(int *)(v84 + 20));
      v30 = *v86;
      v63 = v86[1];
      swift_bridgeObjectRetain();
      sub_23E537520();
      sub_23E536FA4();
      v62 = sub_23E5375A4();
      v44 = v87;
      sub_23E1FC2F8((uint64_t)v54, v82);
      if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v51 + 48))(v82, 1, v47) == 1)
      {
        v88 = v51;
        v89 = v162;
        sub_23E536F74();
        sub_23E273104((uint64_t)v54);
        sub_23E273104(v82);
        v90 = *(void (**)(char *, uint64_t, char *))(v88 + 32);
        v57 = (char *)0xD000000000000013;
      }
      else
      {
LABEL_20:
        sub_23E273104((uint64_t)v54);
        v90 = *(void (**)(char *, uint64_t, char *))(v51 + 32);
        v89 = v162;
        v90(v162, v82, v47);
      }
      v103 = (uint64_t)v160;
      v90(v160, (uint64_t)v89, v47);
      v104 = v171;
      v105 = (_QWORD *)(v103 + v171[5]);
      *v105 = v57;
      v105[1] = 0x800000023E562AE0;
      v106 = (char **)(v103 + v104[6]);
      *v106 = v30;
      v106[1] = v63;
      v107 = (uint64_t *)(v103 + v104[7]);
      *v107 = v62;
      v107[1] = (uint64_t)v44;
      v108 = v103 + v104[8];
      *(_QWORD *)(v108 + 8) = 0;
      *(_QWORD *)(v108 + 16) = 0;
      *(_QWORD *)v108 = 2;
      *(_BYTE *)(v108 + 24) = 0;
      v109 = v158;
      sub_23E1E2FDC(v103, v158, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v170 + 56))(v109, 0, 1, v104);
      v110 = v109;
      v111 = (uint64_t)v164;
      return sub_23E20D074(v110, v111);
    default:
      v165 = v57;
      v173 = v54;
      v68 = (uint64_t)v153;
      v163 = v47;
      v164 = v44;
      v69 = (uint64_t)v154;
      v70 = v62 + *(int *)(v51 + 20);
      result = type metadata accessor for StaticService();
      v71 = result;
      v72 = *(unsigned __int8 *)(v70 + *(int *)(result + 84));
      if (v72 == 14)
      {
        sub_23E1E2F50(v62, (uint64_t)v165, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v120 = v168;
        v121 = v169;
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v168 + 56))(v33, 1, 1, v169);
        v122 = (uint64_t *)(v70 + *(int *)(v71 + 20));
        v123 = (uint64_t)v33;
        v125 = *v122;
        v124 = v122[1];
        swift_bridgeObjectRetain();
        sub_23E537520();
        sub_23E536FA4();
        v126 = sub_23E5375A4();
        v128 = v127;
        v129 = (uint64_t)v30;
        sub_23E1FC2F8(v123, (uint64_t)v30);
        if ((*(unsigned int (**)(char *, uint64_t, char *))(v120 + 48))(v30, 1, v121) == 1)
        {
          v130 = v123;
          v131 = v151;
          sub_23E536F74();
          sub_23E273104(v130);
          sub_23E273104(v129);
          v132 = *(void (**)(char *, char *, char *))(v120 + 32);
        }
        else
        {
          sub_23E273104(v123);
          v132 = *(void (**)(char *, char *, char *))(v120 + 32);
          v131 = v151;
          v132(v151, v30, v121);
        }
        v141 = (uint64_t)v163;
        v142 = (uint64_t)v152;
        v132(v152, v131, v121);
        v143 = v171;
        v144 = (_QWORD *)(v142 + v171[5]);
        *v144 = 0xD000000000000013;
        v144[1] = 0x800000023E562AE0;
        v145 = (_QWORD *)(v142 + v143[6]);
        *v145 = v125;
        v145[1] = v124;
        v146 = (uint64_t *)(v142 + v143[7]);
        *v146 = v126;
        v146[1] = v128;
        v147 = v142 + v143[8];
        *(_QWORD *)(v147 + 8) = 0;
        *(_QWORD *)(v147 + 16) = 0;
        *(_QWORD *)v147 = 6;
        *(_BYTE *)(v147 + 24) = 0;
        sub_23E1E2FDC(v142, v141, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v170 + 56))(v141, 0, 1, v143);
        v110 = v141;
LABEL_30:
        v111 = (uint64_t)v165;
      }
      else
      {
        if (v72 != 51)
          return result;
        sub_23E1E2F50(v62, (uint64_t)v173, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v73 = v168;
        v74 = v169;
        (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v168 + 56))(v68, 1, 1, v169);
        v75 = (char **)(v70 + *(int *)(v71 + 20));
        v76 = (uint64_t)v75[1];
        v163 = *v75;
        v165 = (char *)v76;
        swift_bridgeObjectRetain();
        sub_23E537520();
        sub_23E536FA4();
        v77 = sub_23E5375A4();
        v79 = v78;
        sub_23E1FC2F8(v68, v69);
        if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v73 + 48))(v69, 1, v74) == 1)
        {
          v80 = v150;
          sub_23E536F74();
          sub_23E273104(v68);
          sub_23E273104(v69);
          v81 = *(void (**)(char *, uint64_t, char *))(v73 + 32);
        }
        else
        {
          sub_23E273104(v68);
          v81 = *(void (**)(char *, uint64_t, char *))(v73 + 32);
          v80 = v150;
          v81(v150, v69, v74);
        }
        v133 = (uint64_t)v149;
        v134 = (uint64_t)v164;
        v81(v149, (uint64_t)v80, v74);
        v135 = v171;
        v136 = (_QWORD *)(v133 + v171[5]);
        *v136 = 0xD000000000000014;
        v136[1] = 0x800000023E562B00;
        v137 = (_QWORD *)(v133 + v135[6]);
        v138 = (uint64_t)v165;
        *v137 = v163;
        v137[1] = v138;
        v139 = (uint64_t *)(v133 + v135[7]);
        *v139 = v77;
        v139[1] = v79;
        v140 = v133 + v135[8];
        *(_QWORD *)(v140 + 8) = 0;
        *(_QWORD *)(v140 + 16) = 0;
        *(_QWORD *)v140 = 6;
        *(_BYTE *)(v140 + 24) = 0;
        sub_23E1E2FDC(v133, v134, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v170 + 56))(v134, 0, 1, v135);
        v110 = v134;
        v111 = (uint64_t)v173;
      }
      return sub_23E20D074(v110, v111);
  }
}

uint64_t sub_23E52B4EC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(char *, uint64_t);

  v26 = a3;
  v6 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v25 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (v16)
  {
    v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v20 = v19 | (v18 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v26(v10, a2);
    result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v18 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v18);
  if (v22)
  {
LABEL_19:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_5;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 2;
  if (v18 + 2 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 3;
  if (v18 + 3 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 4;
  if (v18 + 4 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_18:
    v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      return swift_release();
    v22 = *(_QWORD *)(v24 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E52B72C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t result;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char **v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char **v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char **v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char **v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  void (*v152)(char *, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char **v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  void (*v164)(char *, uint64_t, uint64_t);
  int *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  _QWORD *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  int *v185;
  _QWORD *v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  _QWORD *v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int *v200;
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  char *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  int *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;

  v250 = a2;
  v3 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v3);
  v249 = (char *)&v216 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E53752C();
  MEMORY[0x24BDAC7A8](v5);
  v248 = (char *)&v216 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v253 = *(_QWORD *)(v7 - 8);
  v254 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v233 = (char *)&v216 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v255 = (char *)&v216 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v232 = (char *)&v216 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v219 = (char *)&v216 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v218 = (char *)&v216 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v217 = (char *)&v216 - v18;
  v19 = type metadata accessor for IconTextValueStringDataHolder();
  v20 = *(_QWORD *)(v19 - 8);
  v251 = (int *)v19;
  v252 = v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v245 = (char *)&v216 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v244 = (char *)&v216 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v243 = (char *)&v216 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v230 = (char *)&v216 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v229 = (char *)&v216 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v228 = (char *)&v216 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v242 = (uint64_t)&v216 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v241 = (char *)&v216 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v240 = (uint64_t)&v216 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v238 = (char *)&v216 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v236 = (uint64_t)&v216 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v234 = (char *)&v216 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v227 = (uint64_t)&v216 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v225 = (char *)&v216 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v224 = (uint64_t)&v216 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v222 = (char *)&v216 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v220 = (uint64_t)&v216 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v56 = (char *)&v216 - v55;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v239 = (uint64_t)&v216 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v237 = (uint64_t)&v216 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v235 = (uint64_t)&v216 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v226 = (uint64_t)&v216 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v223 = (uint64_t)&v216 - v67;
  MEMORY[0x24BDAC7A8](v66);
  v221 = (uint64_t)&v216 - v68;
  v69 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v70 = MEMORY[0x24BDAC7A8](v69);
  v247 = (uint64_t)&v216 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x24BDAC7A8](v70);
  v246 = (uint64_t)&v216 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v76 = (char *)&v216 - v75;
  v77 = MEMORY[0x24BDAC7A8](v74);
  v231 = (uint64_t)&v216 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v81 = (char *)&v216 - v80;
  v82 = MEMORY[0x24BDAC7A8](v79);
  v84 = (char *)&v216 - v83;
  v85 = a1 + *(int *)(v82 + 20);
  result = type metadata accessor for StaticService();
  v87 = *(unsigned __int8 *)(v85 + *(int *)(result + 92));
  if (v87 != 53)
  {
    v88 = result;
    v89 = *(int *)(v69 + 24);
    v216 = a1;
    v90 = a1 + v89;
    result = type metadata accessor for StaticCharacteristic();
    v91 = v90 + *(int *)(result + 24);
    v92 = *(unsigned __int8 *)(v91 + 16);
    v93 = v255;
    v94 = *(_QWORD *)v91;
    switch(v92)
    {
      case 0:
        if ((v94 & 1) != 0)
          goto LABEL_12;
        return result;
      case 1:
        v94 = v94;
        goto LABEL_10;
      case 2:
        v94 = (unsigned __int16)v94;
        goto LABEL_10;
      case 3:
        v94 = v94;
        goto LABEL_10;
      case 4:
        if ((v94 & 0x8000000000000000) != 0)
        {
          __break(1u);
          JUMPOUT(0x23E52C94CLL);
        }
        goto LABEL_10;
      case 5:
      case 6:
        v94 = (int)v94;
LABEL_10:
        if (v94 > 1)
          goto LABEL_17;
        if (v94 != 1)
          return result;
LABEL_12:
        if (v87 == 14)
        {
          sub_23E1E2F50(v216, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v141 = v253;
          v142 = v254;
          v143 = (uint64_t)v222;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v222, 1, 1, v254);
          v144 = (char **)(v85 + *(int *)(v88 + 20));
          v145 = v144[1];
          v255 = *v144;
          swift_bridgeObjectRetain();
          sub_23E537520();
          sub_23E536FA4();
          v146 = sub_23E5375A4();
          v148 = v147;
          v149 = v224;
          sub_23E1FC2F8(v143, v224);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v149, 1, v142) == 1)
          {
            v150 = v143;
            v151 = v218;
            sub_23E536F74();
            sub_23E273104(v150);
            sub_23E273104(v149);
            v152 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 32);
          }
          else
          {
            sub_23E273104(v143);
            v152 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 32);
            v151 = v218;
            v152(v218, v149, v142);
          }
          v199 = v142;
          v200 = v251;
          v201 = (uint64_t)v229;
          v152(v229, (uint64_t)v151, v199);
          v202 = (_QWORD *)(v201 + v200[5]);
          *v202 = 0xD000000000000013;
          v202[1] = 0x800000023E562AE0;
          v203 = (_QWORD *)(v201 + v200[6]);
          *v203 = v255;
          v203[1] = v145;
          v204 = (uint64_t *)(v201 + v200[7]);
          *v204 = v146;
          v204[1] = v148;
          v205 = v201 + v200[8];
          *(_QWORD *)(v205 + 8) = 0;
          *(_QWORD *)(v205 + 16) = 0;
          *(_QWORD *)v205 = 2;
          *(_BYTE *)(v205 + 24) = 0;
          v206 = v223;
          sub_23E1E2FDC(v201, v223, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v252 + 56))(v206, 0, 1, v200);
          v174 = v206;
          v175 = (uint64_t)v81;
        }
        else if (v87 == 51)
        {
          sub_23E1E2F50(v216, v231, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v153 = v253;
          v154 = v254;
          v155 = (uint64_t)v225;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v225, 1, 1, v254);
          v156 = (char **)(v85 + *(int *)(v88 + 20));
          v157 = v156[1];
          v255 = *v156;
          swift_bridgeObjectRetain();
          sub_23E537520();
          sub_23E536FA4();
          v158 = sub_23E5375A4();
          v160 = v159;
          v161 = v227;
          sub_23E1FC2F8(v155, v227);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v161, 1, v154) == 1)
          {
            v162 = v155;
            v163 = v219;
            sub_23E536F74();
            sub_23E273104(v162);
            sub_23E273104(v161);
            v164 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 32);
          }
          else
          {
            sub_23E273104(v155);
            v164 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 32);
            v163 = v219;
            v164(v219, v161, v154);
          }
          v207 = v251;
          v208 = v154;
          v209 = v252;
          v210 = (uint64_t)v230;
          v164(v230, (uint64_t)v163, v208);
          v211 = (_QWORD *)(v210 + v207[5]);
          *v211 = 0xD000000000000014;
          v211[1] = 0x800000023E562B00;
          v212 = (_QWORD *)(v210 + v207[6]);
          *v212 = v255;
          v212[1] = v157;
          v213 = (uint64_t *)(v210 + v207[7]);
          *v213 = v158;
          v213[1] = v160;
          v214 = v210 + v207[8];
          *(_QWORD *)(v214 + 8) = 0;
          *(_QWORD *)(v214 + 16) = 0;
          *(_QWORD *)v214 = 4;
          *(_BYTE *)(v214 + 24) = 0;
          v215 = v226;
          sub_23E1E2FDC(v210, v226, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v209 + 56))(v215, 0, 1, v207);
          v174 = v215;
          v175 = v231;
        }
        else
        {
          result = v216;
          if (v87 != 19)
            return result;
          sub_23E1E2F50(v216, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v95 = v253;
          v96 = v254;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v56, 1, 1, v254);
          v97 = (char **)(v85 + *(int *)(v88 + 20));
          v98 = v97[1];
          v255 = *v97;
          swift_bridgeObjectRetain();
          static String.hfLocalized(_:)();
          v100 = v99;
          v102 = v101;
          v103 = v220;
          sub_23E1FC2F8((uint64_t)v56, v220);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v103, 1, v96) == 1)
          {
            v104 = v217;
            sub_23E536F74();
            sub_23E273104((uint64_t)v56);
            sub_23E273104(v103);
            v105 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
          }
          else
          {
            sub_23E273104((uint64_t)v56);
            v105 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
            v104 = v217;
            v105(v217, v103, v96);
          }
          v191 = v96;
          v192 = v251;
          v193 = (uint64_t)v228;
          v105(v228, (uint64_t)v104, v191);
          v194 = (_QWORD *)(v193 + v192[5]);
          *v194 = 0xD000000000000010;
          v194[1] = 0x800000023E562AC0;
          v195 = (_QWORD *)(v193 + v192[6]);
          *v195 = v255;
          v195[1] = v98;
          v196 = (_QWORD *)(v193 + v192[7]);
          *v196 = v100;
          v196[1] = v102;
          v197 = v193 + v192[8];
          *(_QWORD *)(v197 + 8) = 0;
          *(_QWORD *)(v197 + 16) = 0;
          *(_QWORD *)v197 = 1;
          *(_BYTE *)(v197 + 24) = 0;
          v198 = v221;
          sub_23E1E2FDC(v193, v221, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v252 + 56))(v198, 0, 1, v192);
          v174 = v198;
          v175 = (uint64_t)v84;
        }
        goto LABEL_42;
      default:
LABEL_17:
        if (v87 == 14)
        {
          sub_23E1E2F50(v216, v246, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v118 = v253;
          v119 = v254;
          v120 = (uint64_t)v238;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v238, 1, 1, v254);
          v121 = (uint64_t *)(v85 + *(int *)(v88 + 20));
          v122 = *v121;
          v123 = v121[1];
          swift_bridgeObjectRetain();
          sub_23E537520();
          sub_23E536FA4();
          v124 = sub_23E5375A4();
          v126 = v125;
          v127 = v240;
          sub_23E1FC2F8(v120, v240);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v127, 1, v119) == 1)
          {
            sub_23E536F74();
            sub_23E273104(v120);
            sub_23E273104(v127);
            v128 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 32);
          }
          else
          {
            sub_23E273104(v120);
            v128 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 32);
            v128(v93, v127, v119);
          }
          v176 = v119;
          v177 = v251;
          v178 = (uint64_t)v244;
          v128(v244, (uint64_t)v93, v176);
          v179 = (_QWORD *)(v178 + v177[5]);
          *v179 = 0xD000000000000013;
          v179[1] = 0x800000023E562AE0;
          v180 = (_QWORD *)(v178 + v177[6]);
          *v180 = v122;
          v180[1] = v123;
          v181 = (uint64_t *)(v178 + v177[7]);
          *v181 = v124;
          v181[1] = v126;
          v182 = v178 + v177[8];
          *(_QWORD *)(v182 + 8) = 0;
          *(_QWORD *)(v182 + 16) = 0;
          *(_QWORD *)v182 = 6;
          *(_BYTE *)(v182 + 24) = 0;
          v183 = v237;
          sub_23E1E2FDC(v178, v237, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v252 + 56))(v183, 0, 1, v177);
          v174 = v183;
          v175 = v246;
        }
        else if (v87 == 19)
        {
          sub_23E1E2F50(v216, (uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v129 = v253;
          v130 = v254;
          v131 = (uint64_t)v234;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v234, 1, 1, v254);
          v132 = (char **)(v85 + *(int *)(v88 + 20));
          v133 = v132[1];
          v255 = *v132;
          swift_bridgeObjectRetain();
          static String.hfLocalized(_:)();
          v135 = v134;
          v137 = v136;
          v138 = v236;
          sub_23E1FC2F8(v131, v236);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v138, 1, v130) == 1)
          {
            v139 = v232;
            sub_23E536F74();
            sub_23E273104(v131);
            sub_23E273104(v138);
            v140 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 32);
          }
          else
          {
            sub_23E273104(v131);
            v140 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 32);
            v139 = v232;
            v140(v232, v138, v130);
          }
          v184 = (uint64_t)v243;
          v140(v243, (uint64_t)v139, v130);
          v185 = v251;
          v186 = (_QWORD *)(v184 + v251[5]);
          *v186 = 0xD00000000000002ELL;
          v186[1] = 0x800000023E56BAF0;
          v187 = (_QWORD *)(v184 + v185[6]);
          *v187 = v255;
          v187[1] = v133;
          v188 = (_QWORD *)(v184 + v185[7]);
          *v188 = v135;
          v188[1] = v137;
          v189 = v184 + v185[8];
          *(_QWORD *)(v189 + 8) = 0;
          *(_QWORD *)(v189 + 16) = 0;
          *(_QWORD *)v189 = 6;
          *(_BYTE *)(v189 + 24) = 0;
          v190 = v235;
          sub_23E1E2FDC(v184, v235, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v252 + 56))(v190, 0, 1, v185);
          v174 = v190;
          v175 = (uint64_t)v76;
        }
        else
        {
          result = v216;
          if (v87 != 51)
            return result;
          sub_23E1E2F50(v216, v247, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          v106 = v253;
          v107 = v254;
          v108 = (uint64_t)v241;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v241, 1, 1, v254);
          v109 = (char **)(v85 + *(int *)(v88 + 20));
          v110 = v109[1];
          v255 = *v109;
          swift_bridgeObjectRetain();
          sub_23E537520();
          sub_23E536FA4();
          v111 = sub_23E5375A4();
          v113 = v112;
          v114 = v242;
          sub_23E1FC2F8(v108, v242);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v114, 1, v107) == 1)
          {
            v115 = v108;
            v116 = v233;
            sub_23E536F74();
            sub_23E273104(v115);
            sub_23E273104(v114);
            v117 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 32);
          }
          else
          {
            sub_23E273104(v108);
            v117 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 32);
            v116 = v233;
            v117(v233, v114, v107);
          }
          v165 = v251;
          v166 = v107;
          v167 = v252;
          v168 = (uint64_t)v245;
          v117(v245, (uint64_t)v116, v166);
          v169 = (_QWORD *)(v168 + v165[5]);
          *v169 = 0xD000000000000014;
          v169[1] = 0x800000023E562B00;
          v170 = (_QWORD *)(v168 + v165[6]);
          *v170 = v255;
          v170[1] = v110;
          v171 = (uint64_t *)(v168 + v165[7]);
          *v171 = v111;
          v171[1] = v113;
          v172 = v168 + v165[8];
          *(_QWORD *)(v172 + 8) = 0;
          *(_QWORD *)(v172 + 16) = 0;
          *(_QWORD *)v172 = 6;
          *(_BYTE *)(v172 + 24) = 0;
          v173 = v239;
          sub_23E1E2FDC(v168, v239, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v167 + 56))(v173, 0, 1, v165);
          v174 = v173;
          v175 = v247;
        }
LABEL_42:
        result = sub_23E20D074(v174, v175);
        break;
    }
  }
  return result;
}

uint64_t sub_23E52C968(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  int *v58;
  uint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  int *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  int *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v81 = a2;
  v85 = sub_23E536F80();
  v84 = *(_QWORD *)(v85 - 8);
  v3 = MEMORY[0x24BDAC7A8](v85);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v78 = (char *)&v74 - v6;
  v7 = type metadata accessor for IconTextValueStringDataHolder();
  v79 = *(_QWORD *)(v7 - 8);
  v80 = (int *)v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v74 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v75 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v74 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v74 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v77 = (uint64_t)&v74 - v25;
  v26 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v82 = (char *)&v74 - v31;
  v83 = a1;
  v32 = a1 + *(int *)(v30 + 24);
  result = type metadata accessor for StaticCharacteristic();
  v34 = v32 + *(int *)(result + 24);
  v35 = *(_QWORD *)v34;
  switch(*(_BYTE *)(v34 + 16))
  {
    case 1:
      v35 = *(_QWORD *)v34;
      goto LABEL_8;
    case 2:
      v35 = (unsigned __int16)*(_QWORD *)v34;
      goto LABEL_8;
    case 3:
      v35 = *(_QWORD *)v34;
      goto LABEL_8;
    case 4:
      v46 = v85;
      v47 = v84;
      v48 = (uint64_t)v18;
      if ((v35 & 0x8000000000000000) == 0)
        goto LABEL_9;
      __break(1u);
      goto LABEL_16;
    case 5:
    case 6:
      v35 = (int)v35;
LABEL_8:
      v46 = v85;
      v47 = v84;
      v48 = (uint64_t)v18;
LABEL_9:
      if (v35 == 1)
        return result;
      sub_23E1E2F50(v83, (uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v20, 1, 1, v46);
      if (v35)
      {
        if (v35 == 2)
        {
          v85 = 0xD000000000000027;
          v49 = 0x800000023E56BBD0;
          goto LABEL_18;
        }
        v49 = 0x800000023E56BBA0;
        v50 = 0xD000000000000022;
      }
      else
      {
LABEL_16:
        v49 = 0xEE006C6C69662E6ELL;
        v50 = 0x65706F2E6B636F6CLL;
      }
      v85 = v50;
LABEL_18:
      v51 = v83 + *(int *)(v26 + 20);
      v52 = (uint64_t *)(v51 + *(int *)(type metadata accessor for StaticService() + 20));
      v54 = *v52;
      v53 = v52[1];
      swift_bridgeObjectRetain();
      sub_23E1FC2F8((uint64_t)v20, v48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v46) == 1)
      {
        v55 = v78;
        sub_23E536F74();
        sub_23E273104((uint64_t)v20);
        sub_23E273104(v48);
        v56 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
      }
      else
      {
        sub_23E273104((uint64_t)v20);
        v56 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
        v55 = v78;
        v56(v78, v48, v46);
      }
      v57 = (uint64_t)v76;
      v56(v76, (uint64_t)v55, v46);
      v58 = v80;
      v59 = (uint64_t *)(v57 + v80[5]);
      v60 = v85;
      *v59 = v85;
      v59[1] = v49;
      v61 = (_QWORD *)(v57 + v58[6]);
      *v61 = v54;
      v61[1] = v53;
      v62 = (uint64_t *)(v57 + v58[7]);
      *v62 = v60;
      v62[1] = v49;
      v63 = v57 + v58[8];
      *(_QWORD *)(v63 + 8) = 0;
      *(_QWORD *)(v63 + 16) = 0;
      *(_QWORD *)v63 = 3;
      *(_BYTE *)(v63 + 24) = 0;
      v64 = v77;
      sub_23E1E2FDC(v57, v77, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v79 + 56))(v64, 0, 1, v58);
      v65 = v64;
      v66 = (uint64_t)v82;
      return sub_23E20D074(v65, v66);
    default:
      v82 = v24;
      v36 = v5;
      v37 = v83;
      sub_23E1E2F50(v83, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v38 = v84;
      v39 = v85;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v35, 1, 1, v85);
      v40 = v37 + *(int *)(v26 + 20);
      v41 = (uint64_t *)(v40 + *(int *)(type metadata accessor for StaticService() + 20));
      v43 = *v41;
      v42 = v41[1];
      v44 = v75;
      sub_23E1FC2F8(v35, v75);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v44, 1, v39);
      swift_bridgeObjectRetain();
      if (v45 == 1)
      {
        sub_23E536F74();
        sub_23E273104(v35);
        sub_23E273104(v75);
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v10, v36, v39);
      }
      else
      {
        sub_23E273104(v35);
        v67 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
        v67(v36, v75, v39);
        v67(v10, (uint64_t)v36, v39);
      }
      v68 = v80;
      v69 = &v10[v80[5]];
      *(_QWORD *)v69 = 0xD000000000000022;
      *((_QWORD *)v69 + 1) = 0x800000023E56BBA0;
      v70 = &v10[v68[6]];
      *(_QWORD *)v70 = v43;
      *((_QWORD *)v70 + 1) = v42;
      v71 = &v10[v68[7]];
      *(_QWORD *)v71 = 0xD000000000000022;
      *((_QWORD *)v71 + 1) = 0x800000023E56BBA0;
      v72 = &v10[v68[8]];
      *((_QWORD *)v72 + 1) = 0;
      *((_QWORD *)v72 + 2) = 0;
      *(_QWORD *)v72 = 6;
      v72[24] = 0;
      v73 = (uint64_t)v82;
      sub_23E1E2FDC((uint64_t)v10, (uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v79 + 56))(v73, 0, 1, v68);
      v65 = v73;
      v66 = (uint64_t)v29;
      return sub_23E20D074(v65, v66);
  }
}

uint64_t sub_23E52CFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (**v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t *v49;
  int v50;
  uint64_t v51;
  char *v52;
  void (**v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t *v67;
  int v68;
  char *v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  void (**v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  int *v82;
  _QWORD *v83;
  uint64_t *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  int *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  uint64_t v116;
  void (**v117)(char *, uint64_t, uint64_t, uint64_t);
  char *v118;
  uint64_t v119;

  v116 = a2;
  v119 = sub_23E536F80();
  v117 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v119 - 8);
  v3 = MEMORY[0x24BDAC7A8](v119);
  v104 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v118 = (char *)&v102 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v107 = (char *)&v102 - v7;
  v8 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = *(_QWORD *)(v8 - 8);
  v114 = (int *)v8;
  v115 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v111 = (char *)&v102 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v106 = (char *)&v102 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v112 = (uint64_t)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v103 = (char *)&v102 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v109 = (uint64_t)&v102 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v102 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v108 = (char *)&v102 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v102 - v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v110 = (uint64_t)&v102 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v105 = (char *)&v102 - v36;
  v37 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v38 = MEMORY[0x24BDAC7A8](v37);
  v40 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v102 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = MEMORY[0x24BDAC7A8](v38);
  v113 = (uint64_t)&v102 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v102 - v44;
  v46 = a1;
  v47 = a1 + *(int *)(v43 + 24);
  result = type metadata accessor for StaticCharacteristic();
  v49 = (uint64_t *)(v47 + *(int *)(result + 24));
  v50 = *((unsigned __int8 *)v49 + 16) - 1;
  v51 = *v49;
  switch(v50)
  {
    case 0:
      v51 = v51;
      goto LABEL_8;
    case 1:
      v51 = (unsigned __int16)v51;
      goto LABEL_8;
    case 2:
      v51 = v51;
      goto LABEL_8;
    case 3:
      v64 = v119;
      v65 = v118;
      if ((v51 & 0x8000000000000000) == 0)
        goto LABEL_9;
      __break(1u);
      goto LABEL_17;
    case 4:
    case 5:
      v51 = (int)v51;
LABEL_8:
      v64 = v119;
      v65 = v118;
LABEL_9:
      if (v51 == 4)
      {
        v71 = v46;
        sub_23E1E2F50(v46, v113, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v72 = v117;
        v117[7](v25, 1, 1, v64);
        v73 = v71 + *(int *)(v37 + 20);
        v74 = (uint64_t *)(v73 + *(int *)(type metadata accessor for StaticService() + 20));
        v76 = *v74;
        v75 = v74[1];
        v77 = v109;
        sub_23E1FC2F8((uint64_t)v25, v109);
        v78 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v72[6])(v77, 1, v64);
        swift_bridgeObjectRetain();
        if (v78 == 1)
        {
          sub_23E536F74();
          sub_23E273104((uint64_t)v25);
          sub_23E273104(v77);
          v79 = v72[4];
        }
        else
        {
          sub_23E273104((uint64_t)v25);
          v79 = v72[4];
          ((void (*)(char *, uint64_t, uint64_t))v79)(v65, v77, v64);
        }
        v89 = v115;
        v90 = v114;
        v91 = (uint64_t)v111;
        ((void (*)(char *, char *, uint64_t))v79)(v111, v65, v64);
        v92 = (_QWORD *)(v91 + v90[5]);
        *v92 = 0xD000000000000015;
        v92[1] = 0x800000023E562AA0;
        v93 = (_QWORD *)(v91 + v90[6]);
        *v93 = v76;
        v93[1] = v75;
        v94 = (_QWORD *)(v91 + v90[7]);
        *v94 = 0xD000000000000015;
        v94[1] = 0x800000023E562AA0;
        v95 = v91 + v90[8];
        *(_QWORD *)v95 = 0;
        *(_QWORD *)(v95 + 8) = 0;
        *(_BYTE *)(v95 + 24) = 0;
        *(_QWORD *)(v95 + 16) = 0;
        v96 = v110;
        sub_23E1E2FDC(v91, v110, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v89 + 56))(v96, 0, 1, v90);
        return sub_23E20D074(v96, v113);
      }
      else if (v51 == 3)
      {
        v65 = v45;
        sub_23E1E2F50(v46, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v40 = (uint64_t (**)(char *, uint64_t, uint64_t))v117;
        v117[7](v29, 1, 1, v64);
        v66 = v46 + *(int *)(v37 + 20);
        v67 = (uint64_t *)(v66 + *(int *)(type metadata accessor for StaticService() + 20));
        v46 = *v67;
        v37 = v67[1];
        v45 = v108;
        sub_23E1FC2F8((uint64_t)v29, (uint64_t)v108);
        v68 = v40[6](v45, 1, v64);
        swift_bridgeObjectRetain();
        if (v68 == 1)
        {
          v69 = v107;
          sub_23E536F74();
          sub_23E273104((uint64_t)v29);
          sub_23E273104((uint64_t)v45);
          v70 = v40[4];
        }
        else
        {
LABEL_17:
          sub_23E273104((uint64_t)v29);
          v70 = v40[4];
          v69 = v107;
          v70(v107, (uint64_t)v45, v64);
        }
        v81 = (uint64_t)v105;
        v80 = (uint64_t)v106;
        v70(v106, (uint64_t)v69, v64);
        v82 = v114;
        v83 = (_QWORD *)(v80 + v114[5]);
        *v83 = 0xD000000000000015;
        v83[1] = 0x800000023E560740;
        v84 = (uint64_t *)(v80 + v82[6]);
        *v84 = v46;
        v84[1] = v37;
        v85 = (_QWORD *)(v80 + v82[7]);
        *v85 = 0xD000000000000015;
        v85[1] = 0x800000023E560740;
        v86 = v80 + v82[8];
        *(_QWORD *)(v86 + 8) = 0;
        *(_QWORD *)(v86 + 16) = 0;
        *(_QWORD *)v86 = 5;
        *(_BYTE *)(v86 + 24) = 0;
        sub_23E1E2FDC(v80, v81, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v115 + 56))(v81, 0, 1, v82);
        v87 = v81;
        v88 = (uint64_t)v65;
        return sub_23E20D074(v87, v88);
      }
      return result;
    default:
      v52 = v104;
      v118 = (char *)v40;
      sub_23E1E2F50(v46, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v53 = v117;
      v54 = (uint64_t)v103;
      v55 = v119;
      v117[7](v103, 1, 1, v119);
      v56 = v46 + *(int *)(v37 + 20);
      v57 = (uint64_t *)(v56 + *(int *)(type metadata accessor for StaticService() + 20));
      v59 = *v57;
      v58 = v57[1];
      v60 = v112;
      sub_23E1FC2F8(v54, v112);
      v61 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v53[6])(v60, 1, v55);
      swift_bridgeObjectRetain();
      if (v61 == 1)
      {
        v62 = v52;
        sub_23E536F74();
        sub_23E273104(v54);
        sub_23E273104(v112);
        v63 = v53[4];
      }
      else
      {
        sub_23E273104(v54);
        v63 = v53[4];
        v62 = v52;
        ((void (*)(char *, uint64_t, uint64_t))v63)(v52, v112, v55);
      }
      v97 = v114;
      ((void (*)(char *, char *, uint64_t))v63)(v12, v62, v55);
      v98 = &v12[v97[5]];
      *(_QWORD *)v98 = 0xD000000000000015;
      *((_QWORD *)v98 + 1) = 0x800000023E562AA0;
      v99 = &v12[v97[6]];
      *(_QWORD *)v99 = v59;
      *((_QWORD *)v99 + 1) = v58;
      v100 = &v12[v97[7]];
      *(_QWORD *)v100 = 0xD000000000000015;
      *((_QWORD *)v100 + 1) = 0x800000023E562AA0;
      v101 = &v12[v97[8]];
      *((_QWORD *)v101 + 1) = 0;
      *((_QWORD *)v101 + 2) = 0;
      *(_QWORD *)v101 = 6;
      v101[24] = 0;
      sub_23E1E2FDC((uint64_t)v12, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v115 + 56))(v33, 0, 1, v97);
      v87 = (uint64_t)v33;
      v88 = (uint64_t)v118;
      return sub_23E20D074(v87, v88);
  }
}

unint64_t sub_23E52D7C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v14 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EF48 != -1)
    swift_once();
  v3 = qword_256D4A5E0;
  v2 = *(_QWORD *)algn_256D4A5E8;
  v4 = qword_256D4A5F0;
  v5 = unk_256D4A5F8;
  v6 = qword_256D4A600;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  v13 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v11[8] = 1;
  v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E52FAC4, (uint64_t)v11, a1);
  v9 = sub_23E4FDC54(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E52B4EC(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_23E52A060);
  swift_bridgeObjectRelease();
  result = v14;
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_23E52D970(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v14 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EF50 != -1)
    swift_once();
  v3 = qword_256D4A608;
  v2 = unk_256D4A610;
  v4 = qword_256D4A618;
  v5 = unk_256D4A620;
  v6 = qword_256D4A628;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  v13 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v11[8] = 1;
  v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E52FAC4, (uint64_t)v11, a1);
  v9 = sub_23E4FDC54(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E52B4EC(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_23E52A804);
  swift_bridgeObjectRelease();
  result = v14;
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_23E52DB18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v14 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EF58 != -1)
    swift_once();
  v3 = qword_256D4A630;
  v2 = *(_QWORD *)algn_256D4A638;
  v4 = qword_256D4A640;
  v5 = unk_256D4A648;
  v6 = qword_256D4A650;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  v13 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v11[8] = 1;
  v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E52FAC4, (uint64_t)v11, a1);
  v9 = sub_23E4FDC54(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E52B4EC(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_23E52B72C);
  swift_bridgeObjectRelease();
  result = v14;
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_23E52DCC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v14 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EF60 != -1)
    swift_once();
  v3 = qword_256D4A658;
  v2 = unk_256D4A660;
  v4 = qword_256D4A668;
  v5 = unk_256D4A670;
  v6 = qword_256D4A678;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  v13 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v11[8] = 1;
  v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E52FAC4, (uint64_t)v11, a1);
  v9 = sub_23E4FDC54(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E52B4EC(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_23E52C968);
  swift_bridgeObjectRelease();
  result = v14;
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_23E52DE68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v14 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EF68 != -1)
    swift_once();
  v3 = qword_256D4A680;
  v2 = *(_QWORD *)algn_256D4A688;
  v4 = qword_256D4A690;
  v5 = unk_256D4A698;
  v6 = qword_256D4A6A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  v13 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v11[8] = 1;
  v12 = &v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v8 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E31057C, (uint64_t)v11, a1);
  v9 = sub_23E4FDC54(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E52B4EC(v9, (uint64_t)&v14, (void (*)(char *, uint64_t))sub_23E52CFA8);
  swift_bridgeObjectRelease();
  result = v14;
  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

unint64_t _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v19;

  v2 = sub_23E20E3CC(MEMORY[0x24BEE4AF8]);
  v3 = sub_23E52D7C8(a1);
  if (v3)
  {
    v4 = v3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2;
    sub_23E529BE4(v4, (uint64_t)sub_23E529FE8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v19);
    v2 = v19;
    swift_bridgeObjectRelease();
  }
  v6 = sub_23E52D970(a1);
  if (v6)
  {
    v7 = v6;
    v8 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2;
    sub_23E529BE4(v7, (uint64_t)sub_23E529FE8, 0, v8, (uint64_t)&v19);
    v2 = v19;
    swift_bridgeObjectRelease();
  }
  v9 = sub_23E52DB18(a1);
  if (v9)
  {
    v10 = v9;
    v11 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2;
    sub_23E529BE4(v10, (uint64_t)sub_23E529FE8, 0, v11, (uint64_t)&v19);
    v2 = v19;
    swift_bridgeObjectRelease();
  }
  v12 = sub_23E52DCC0(a1);
  if (v12)
  {
    v13 = v12;
    v14 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2;
    sub_23E529BE4(v13, (uint64_t)sub_23E529FE8, 0, v14, (uint64_t)&v19);
    v2 = v19;
    swift_bridgeObjectRelease();
  }
  v15 = sub_23E52DE68(a1);
  if (v15)
  {
    v16 = v15;
    v17 = swift_isUniquelyReferenced_nonNull_native();
    v19 = v2;
    sub_23E529BE4(v16, (uint64_t)sub_23E529FE8, 0, v17, (uint64_t)&v19);
    v2 = v19;
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_23E52E1C8()
{
  unint64_t result;

  result = qword_256D4A6F0;
  if (!qword_256D4A6F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C800, &type metadata for SecurityIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A6F0);
  }
  return result;
}

unint64_t sub_23E52E20C()
{
  unint64_t result;

  result = qword_256D4A6F8;
  if (!qword_256D4A6F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C7B0, &type metadata for SecurityIssue.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A6F8);
  }
  return result;
}

unint64_t sub_23E52E250()
{
  unint64_t result;

  result = qword_256D4A700;
  if (!qword_256D4A700)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C760, &type metadata for SecurityIssue.NonresponsiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A700);
  }
  return result;
}

unint64_t sub_23E52E294()
{
  unint64_t result;

  result = qword_256D4A708;
  if (!qword_256D4A708)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C710, &type metadata for SecurityIssue.DisarmedSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A708);
  }
  return result;
}

unint64_t sub_23E52E2D8()
{
  unint64_t result;

  result = qword_256D4A710;
  if (!qword_256D4A710)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C6C0, &type metadata for SecurityIssue.OpenWindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A710);
  }
  return result;
}

unint64_t sub_23E52E31C()
{
  unint64_t result;

  result = qword_256D4A718;
  if (!qword_256D4A718)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C670, &type metadata for SecurityIssue.UnlockedDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A718);
  }
  return result;
}

unint64_t sub_23E52E360()
{
  unint64_t result;

  result = qword_256D4A720;
  if (!qword_256D4A720)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C620, &type metadata for SecurityIssue.OpenDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A720);
  }
  return result;
}

unint64_t sub_23E52E3A4()
{
  unint64_t result;

  result = qword_256D4A728;
  if (!qword_256D4A728)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C5D0, &type metadata for SecurityIssue.OpenGarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A728);
  }
  return result;
}

unint64_t sub_23E52E3E8()
{
  unint64_t result;

  result = qword_256D4A730;
  if (!qword_256D4A730)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C580, &type metadata for SecurityIssue.TriggeredSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A730);
  }
  return result;
}

unint64_t sub_23E52E430()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D4A780;
  if (!qword_256D4A780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D4A788);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D4A780);
  }
  return result;
}

unint64_t sub_23E52E480()
{
  unint64_t result;

  result = qword_256D4A790;
  if (!qword_256D4A790)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SecurityIssue, &type metadata for SecurityIssue);
    atomic_store(result, (unint64_t *)&qword_256D4A790);
  }
  return result;
}

ValueMetadata *type metadata accessor for SecuritySummarizer()
{
  return &type metadata for SecuritySummarizer;
}

ValueMetadata *type metadata accessor for SecurityIssue()
{
  return &type metadata for SecurityIssue;
}

uint64_t _s13HomeDataModel13SecurityIssueOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E52E534 + 4 * byte_23E55BFA4[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E52E568 + 4 * byte_23E55BF9F[v4]))();
}

uint64_t sub_23E52E568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E52E570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E52E578);
  return result;
}

uint64_t sub_23E52E584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E52E58CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E52E590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E52E598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SecurityIssue.CodingKeys()
{
  return &type metadata for SecurityIssue.CodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.TriggeredSecuritySystemCodingKeys()
{
  return &type metadata for SecurityIssue.TriggeredSecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenGarageDoorCodingKeys()
{
  return &type metadata for SecurityIssue.OpenGarageDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenDoorCodingKeys()
{
  return &type metadata for SecurityIssue.OpenDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.UnlockedDoorCodingKeys()
{
  return &type metadata for SecurityIssue.UnlockedDoorCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.OpenWindowCodingKeys()
{
  return &type metadata for SecurityIssue.OpenWindowCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.DisarmedSecuritySystemCodingKeys()
{
  return &type metadata for SecurityIssue.DisarmedSecuritySystemCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.NonresponsiveCodingKeys()
{
  return &type metadata for SecurityIssue.NonresponsiveCodingKeys;
}

ValueMetadata *type metadata accessor for SecurityIssue.NoneCodingKeys()
{
  return &type metadata for SecurityIssue.NoneCodingKeys;
}

unint64_t sub_23E52E638()
{
  unint64_t result;

  result = qword_256D4A798;
  if (!qword_256D4A798)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C558, &type metadata for SecurityIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A798);
  }
  return result;
}

unint64_t sub_23E52E680()
{
  unint64_t result;

  result = qword_256D4A7A0;
  if (!qword_256D4A7A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C478, &type metadata for SecurityIssue.TriggeredSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7A0);
  }
  return result;
}

unint64_t sub_23E52E6C8()
{
  unint64_t result;

  result = qword_256D4A7A8;
  if (!qword_256D4A7A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C4A0, &type metadata for SecurityIssue.TriggeredSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7A8);
  }
  return result;
}

unint64_t sub_23E52E710()
{
  unint64_t result;

  result = qword_256D4A7B0;
  if (!qword_256D4A7B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C428, &type metadata for SecurityIssue.OpenGarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7B0);
  }
  return result;
}

unint64_t sub_23E52E758()
{
  unint64_t result;

  result = qword_256D4A7B8;
  if (!qword_256D4A7B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C450, &type metadata for SecurityIssue.OpenGarageDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7B8);
  }
  return result;
}

unint64_t sub_23E52E7A0()
{
  unint64_t result;

  result = qword_256D4A7C0;
  if (!qword_256D4A7C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C3D8, &type metadata for SecurityIssue.OpenDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7C0);
  }
  return result;
}

unint64_t sub_23E52E7E8()
{
  unint64_t result;

  result = qword_256D4A7C8;
  if (!qword_256D4A7C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C400, &type metadata for SecurityIssue.OpenDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7C8);
  }
  return result;
}

unint64_t sub_23E52E830()
{
  unint64_t result;

  result = qword_256D4A7D0;
  if (!qword_256D4A7D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C388, &type metadata for SecurityIssue.UnlockedDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7D0);
  }
  return result;
}

unint64_t sub_23E52E878()
{
  unint64_t result;

  result = qword_256D4A7D8;
  if (!qword_256D4A7D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C3B0, &type metadata for SecurityIssue.UnlockedDoorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7D8);
  }
  return result;
}

unint64_t sub_23E52E8C0()
{
  unint64_t result;

  result = qword_256D4A7E0;
  if (!qword_256D4A7E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C338, &type metadata for SecurityIssue.OpenWindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7E0);
  }
  return result;
}

unint64_t sub_23E52E908()
{
  unint64_t result;

  result = qword_256D4A7E8;
  if (!qword_256D4A7E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C360, &type metadata for SecurityIssue.OpenWindowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7E8);
  }
  return result;
}

unint64_t sub_23E52E950()
{
  unint64_t result;

  result = qword_256D4A7F0;
  if (!qword_256D4A7F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C2E8, &type metadata for SecurityIssue.DisarmedSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7F0);
  }
  return result;
}

unint64_t sub_23E52E998()
{
  unint64_t result;

  result = qword_256D4A7F8;
  if (!qword_256D4A7F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C310, &type metadata for SecurityIssue.DisarmedSecuritySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A7F8);
  }
  return result;
}

unint64_t sub_23E52E9E0()
{
  unint64_t result;

  result = qword_256D4A800;
  if (!qword_256D4A800)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C298, &type metadata for SecurityIssue.NonresponsiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A800);
  }
  return result;
}

unint64_t sub_23E52EA28()
{
  unint64_t result;

  result = qword_256D4A808;
  if (!qword_256D4A808)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C2C0, &type metadata for SecurityIssue.NonresponsiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A808);
  }
  return result;
}

unint64_t sub_23E52EA70()
{
  unint64_t result;

  result = qword_256D4A810;
  if (!qword_256D4A810)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C248, &type metadata for SecurityIssue.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A810);
  }
  return result;
}

unint64_t sub_23E52EAB8()
{
  unint64_t result;

  result = qword_256D4A818;
  if (!qword_256D4A818)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C270, &type metadata for SecurityIssue.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A818);
  }
  return result;
}

unint64_t sub_23E52EB00()
{
  unint64_t result;

  result = qword_256D4A820;
  if (!qword_256D4A820)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C4C8, &type metadata for SecurityIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A820);
  }
  return result;
}

unint64_t sub_23E52EB48()
{
  unint64_t result;

  result = qword_256D4A828;
  if (!qword_256D4A828)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55C4F0, &type metadata for SecurityIssue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A828);
  }
  return result;
}

uint64_t sub_23E52EB8C()
{
  uint64_t v0;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned __int8 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  unint64_t v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_23E5274C8(v3);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      v7 = *(_BYTE *)(v4 + v2 + 32);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = sub_23E211704(v7);
      v10 = v6[2];
      v11 = (v8 & 1) == 0;
      v12 = v10 + v11;
      if (__OFADD__(v10, v11))
      {
        __break(1u);
LABEL_103:
        __break(1u);
        goto LABEL_104;
      }
      v0 = v8;
      if (v6[3] >= v12)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23E220ED0();
      }
      else
      {
        sub_23E218628(v12, isUniquelyReferenced_nonNull_native);
        v13 = sub_23E211704(v7);
        if ((v0 & 1) != (v14 & 1))
          goto LABEL_127;
        v9 = v13;
      }
      swift_bridgeObjectRelease();
      if ((v0 & 1) == 0)
      {
        v6[(v9 >> 6) + 8] |= 1 << v9;
        *(_BYTE *)(v6[6] + v9) = v7;
        *(_QWORD *)(v6[7] + 8 * v9) = 0;
        v15 = v6[2];
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          goto LABEL_110;
        }
        v6[2] = v17;
      }
      v18 = v6[7];
      v19 = *(_QWORD *)(v18 + 8 * v9);
      v16 = __OFADD__(v19, 1);
      v20 = v19 + 1;
      if (v16)
        goto LABEL_103;
      ++v2;
      *(_QWORD *)(v18 + 8 * v9) = v20;
      if (v5 == v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_16:
  swift_bridgeObjectRelease();
  v21 = v6[2];
  if (!v21)
  {
    v27 = 0;
    v24 = 0;
    goto LABEL_29;
  }
  v22 = sub_23E211704(0);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)(v6[7] + 8 * v22);
    v21 = v6[2];
    if (v21)
      goto LABEL_19;
LABEL_24:
    v27 = 0;
    goto LABEL_29;
  }
  v24 = 0;
  v21 = v6[2];
  if (!v21)
    goto LABEL_24;
LABEL_19:
  v25 = sub_23E211704(1u);
  if ((v26 & 1) != 0)
  {
    v27 = *(_QWORD *)(v6[7] + 8 * v25);
    v21 = v6[2];
    if (!v21)
      goto LABEL_29;
  }
  else
  {
    v27 = 0;
    v21 = v6[2];
    if (!v21)
      goto LABEL_29;
  }
  v28 = sub_23E211704(2u);
  if ((v29 & 1) != 0)
    v21 = *(_QWORD *)(v6[7] + 8 * v28);
  else
    v21 = 0;
LABEL_29:
  v16 = __OFADD__(v27, v21);
  v30 = v27 + v21;
  if (v16)
  {
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    swift_once();
    goto LABEL_51;
  }
  v31 = v6[2];
  if (v31)
  {
    v32 = sub_23E211704(4u);
    if ((v33 & 1) != 0)
      v31 = *(_QWORD *)(v6[7] + 8 * v32);
    else
      v31 = 0;
  }
  v0 = v30 + v31;
  if (__OFADD__(v30, v31))
    goto LABEL_114;
  if (!v6[2])
  {
    v5 = 0;
    isUniquelyReferenced_nonNull_native = 0;
    goto LABEL_47;
  }
  v34 = sub_23E211704(3u);
  if ((v35 & 1) == 0)
  {
    isUniquelyReferenced_nonNull_native = 0;
    if (v6[2])
      goto LABEL_38;
LABEL_43:
    v5 = 0;
    goto LABEL_47;
  }
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v6[7] + 8 * v34);
  if (!v6[2])
    goto LABEL_43;
LABEL_38:
  v36 = sub_23E211704(5u);
  if ((v37 & 1) != 0)
  {
    v5 = *(_QWORD *)(v6[7] + 8 * v36);
    if (!v6[2])
      goto LABEL_47;
  }
  else
  {
    v5 = 0;
    if (!v6[2])
      goto LABEL_47;
  }
  v38 = sub_23E211704(6u);
  if ((v39 & 1) != 0)
  {
    v2 = *(_QWORD *)(v6[7] + 8 * v38);
    goto LABEL_48;
  }
LABEL_47:
  v2 = 0;
LABEL_48:
  swift_bridgeObjectRelease();
  if (v24 <= 0)
    goto LABEL_54;
  if (v24 != 1)
    goto LABEL_61;
  if (qword_256D3EF30 != -1)
    goto LABEL_115;
LABEL_51:
  v40 = off_256D4A5C8;
  if (!*((_QWORD *)off_256D4A5C8 + 2))
  {
    __break(1u);
    goto LABEL_117;
  }
  v41 = sub_23E211704(0);
  if ((v42 & 1) != 0)
    goto LABEL_96;
  __break(1u);
LABEL_54:
  if (v0 >= 1)
  {
    if (v0 == 1)
    {
      if (qword_256D3EF30 != -1)
        swift_once();
      v40 = off_256D4A5C8;
      if (*((_QWORD *)off_256D4A5C8 + 2))
      {
        v41 = sub_23E211704(2u);
        if ((v43 & 1) == 0)
        {
          __break(1u);
LABEL_61:
          if (qword_256D3EF38 == -1)
          {
LABEL_62:
            if (*((_QWORD *)off_256D4A5D0 + 2))
            {
              sub_23E211704(0);
              if ((v44 & 1) != 0)
                swift_bridgeObjectRetain();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
            v45 = swift_allocObject();
            v46 = MEMORY[0x24BEE1768];
            *(_OWORD *)(v45 + 16) = xmmword_23E539650;
            v47 = MEMORY[0x24BEE17F0];
            *(_QWORD *)(v45 + 56) = v46;
            *(_QWORD *)(v45 + 64) = v47;
            *(_QWORD *)(v45 + 32) = v24;
LABEL_111:
            v59 = sub_23E537580();
            swift_bridgeObjectRelease();
            return v59;
          }
LABEL_117:
          swift_once();
          goto LABEL_62;
        }
        goto LABEL_96;
      }
      __break(1u);
LABEL_119:
      swift_once();
LABEL_74:
      if (*((_QWORD *)off_256D4A5D0 + 2))
      {
        sub_23E211704(2u);
        if ((v49 & 1) != 0)
          swift_bridgeObjectRetain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v50 = swift_allocObject();
      v51 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v50 + 16) = xmmword_23E539650;
      v52 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v50 + 56) = v51;
      *(_QWORD *)(v50 + 64) = v52;
      *(_QWORD *)(v50 + 32) = v0;
      goto LABEL_111;
    }
LABEL_73:
    if (qword_256D3EF38 == -1)
      goto LABEL_74;
    goto LABEL_119;
  }
  if (isUniquelyReferenced_nonNull_native >= 1)
  {
    if (isUniquelyReferenced_nonNull_native == 1)
    {
      if (qword_256D3EF30 != -1)
        swift_once();
      v40 = off_256D4A5C8;
      if (*((_QWORD *)off_256D4A5C8 + 2))
      {
        v41 = sub_23E211704(3u);
        if ((v48 & 1) == 0)
        {
          __break(1u);
          goto LABEL_73;
        }
LABEL_96:
        v59 = *(_QWORD *)(v40[7] + 16 * v41);
        swift_bridgeObjectRetain();
        return v59;
      }
      __break(1u);
LABEL_121:
      swift_once();
LABEL_86:
      if (*((_QWORD *)off_256D4A5D0 + 2))
      {
        sub_23E211704(3u);
        if ((v54 & 1) != 0)
          swift_bridgeObjectRetain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v55 = swift_allocObject();
      v56 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v55 + 16) = xmmword_23E539650;
      v57 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v55 + 56) = v56;
      *(_QWORD *)(v55 + 64) = v57;
      *(_QWORD *)(v55 + 32) = isUniquelyReferenced_nonNull_native;
      goto LABEL_111;
    }
LABEL_85:
    if (qword_256D3EF38 == -1)
      goto LABEL_86;
    goto LABEL_121;
  }
  if (v5 >= 1)
  {
    if (v5 == 1)
    {
      if (qword_256D3EF30 != -1)
        swift_once();
      v40 = off_256D4A5C8;
      if (*((_QWORD *)off_256D4A5C8 + 2))
      {
        v41 = sub_23E211704(5u);
        if ((v53 & 1) != 0)
          goto LABEL_96;
        __break(1u);
        goto LABEL_85;
      }
      __break(1u);
    }
    else if (qword_256D3EF38 == -1)
    {
      goto LABEL_98;
    }
    swift_once();
LABEL_98:
    if (*((_QWORD *)off_256D4A5D0 + 2))
    {
      sub_23E211704(5u);
      if ((v60 & 1) != 0)
        swift_bridgeObjectRetain();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v61 = swift_allocObject();
    v62 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v61 + 16) = xmmword_23E539650;
    v63 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v61 + 56) = v62;
    *(_QWORD *)(v61 + 64) = v63;
    *(_QWORD *)(v61 + 32) = v5;
    goto LABEL_111;
  }
  if (v2 < 1)
  {
LABEL_104:
    static String.hfLocalized(_:)();
    return v64;
  }
  if (v2 != 1)
  {
    if (qword_256D3EF38 == -1)
      goto LABEL_106;
    goto LABEL_125;
  }
  if (qword_256D3EF30 != -1)
    swift_once();
  v40 = off_256D4A5C8;
  if (!*((_QWORD *)off_256D4A5C8 + 2))
  {
    __break(1u);
LABEL_125:
    swift_once();
LABEL_106:
    if (*((_QWORD *)off_256D4A5D0 + 2))
    {
      sub_23E211704(6u);
      if ((v65 & 1) != 0)
        swift_bridgeObjectRetain();
    }
LABEL_110:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v66 = swift_allocObject();
    v67 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v66 + 16) = xmmword_23E539650;
    v68 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v66 + 56) = v67;
    *(_QWORD *)(v66 + 64) = v68;
    *(_QWORD *)(v66 + 32) = v2;
    goto LABEL_111;
  }
  v41 = sub_23E211704(6u);
  if ((v58 & 1) != 0)
    goto LABEL_96;
  __break(1u);
LABEL_127:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E52F408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *i;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  result = 0;
  for (i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    v10 = *(i - 1);
    v9 = *i;
    if (v10)
      break;
    if (v9 == 1)
    {
      v8 = __OFADD__(v4++, 1);
      if (v8)
        goto LABEL_21;
    }
    else
    {
      v8 = __OFADD__(v3++, 1);
      if (v8)
        goto LABEL_22;
    }
LABEL_4:
    if (!--v1)
      return result;
  }
  if (v10 == 1)
  {
    if (v9 != 1)
    {
      v8 = __OFADD__(v5++, 1);
      if (v8)
      {
        __break(1u);
        return result;
      }
    }
    goto LABEL_4;
  }
  if (v10 != 2)
    goto LABEL_4;
  v8 = __OFADD__(result++, 1);
  if (!v8)
    goto LABEL_4;
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23E52F4B0(uint64_t result)
{
  uint64_t v1;
  char v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;

  v1 = result;
  if (*(_QWORD *)(result + 16) == 1)
  {
    result = (uint64_t)sub_23E267814(result);
    if ((v2 & 1) == 0)
      return result;
  }
  v3 = 0;
  v4 = 0;
  v5 = v1 + 64;
  v6 = 1 << *(_BYTE *)(v1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_7;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_47;
    if (v14 >= v9)
      break;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v9)
        break;
      v15 = *(_QWORD *)(v5 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v9)
          break;
        v15 = *(_QWORD *)(v5 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v9)
            break;
          v15 = *(_QWORD *)(v5 + 8 * v3);
          if (!v15)
          {
            v3 = v14 + 4;
            if (v14 + 4 >= v9)
              break;
            v15 = *(_QWORD *)(v5 + 8 * v3);
            if (!v15)
            {
              v16 = v14 + 5;
              if (v16 >= v9)
                break;
              v15 = *(_QWORD *)(v5 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v3 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_48;
                  if (v3 >= v9)
                    goto LABEL_27;
                  v15 = *(_QWORD *)(v5 + 8 * v3);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v3 = v16;
            }
          }
        }
      }
    }
LABEL_26:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v11);
    v13 = __OFADD__(v4, v12);
    v4 += v12;
    if (v13)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
  }
LABEL_27:
  if (*(_QWORD *)(v1 + 16))
  {
    v17 = sub_23E211708(1);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v17);
      v13 = __OFSUB__(v4, v19);
      v4 -= v19;
      if (v13)
        __break(1u);
    }
  }
  if (!*(_QWORD *)(v1 + 16))
    return v4 < 1;
  v20 = sub_23E211708(0);
  if ((v21 & 1) != 0 && *(uint64_t *)(*(_QWORD *)(v1 + 56) + 8 * v20) > 0)
    return 0;
  if (!*(_QWORD *)(v1 + 16))
    return v4 < 1;
  v22 = sub_23E211708(2);
  if ((v23 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v22) == v4)
    return 2;
  if (*(_QWORD *)(v1 + 16)
    && (v24 = sub_23E211708(3), (v25 & 1) != 0)
    && *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v24) == v4)
  {
    return 3;
  }
  else
  {
    return v4 < 1;
  }
}

uint64_t sub_23E52F6E8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000017 && a2 == 0x800000023E56BC00 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617261476E65706FLL && a2 == 0xEE00726F6F446567 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6F446E65706FLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656B636F6C6E75 && a2 == 0xEC000000726F6F44 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646E69576E65706FLL && a2 == 0xEA0000000000776FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023E56BC20 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F707365726E6F6ELL && a2 == 0xED0000657669736ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23E52FA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E52FAC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23E31057C(a1, a2);
}

uint64_t WaterCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E40BD30(v1, a1);
}

uint64_t WaterCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WaterCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for WaterCategoryInformation()
{
  uint64_t result;

  result = qword_256D4A8D8;
  if (!qword_256D4A8D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WaterCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for WaterCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static WaterCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;

  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for WaterCategoryInformation(),
        sub_23E5225C0(*((_BYTE *)a1 + *(int *)(v4 + 20))),
        (v5 & 1) != 0))
  {
    return sub_23E335E88(*(uint64_t *)((char *)a1 + *(int *)(v4 + 24)), *(uint64_t *)((char *)a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

void WaterCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E52FC40
     + 4
     * byte_23E55C860[*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WaterCategoryInformation() + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E52FC40()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  return swift_bridgeObjectRelease();
}

uint64_t WaterCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  WaterCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t WaterCategoryInformation.summary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  _BYTE v13[16];
  uint64_t v14;

  type metadata accessor for WaterCategoryInformation();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E25C4C0(v1);
  v14 = v0;
  v3 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E530E1C, (uint64_t)v13, v2);
  swift_release();
  if (v3)
  {
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_23E53B510;
    *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v4 + 64) = sub_23E2AEAC0();
    *(_QWORD *)(v4 + 32) = 7695397;
    *(_QWORD *)(v4 + 40) = 0xE300000000000000;
    v5 = swift_bridgeObjectRetain();
    v6 = sub_23E25C4C0(v5);
    MEMORY[0x24BDAC7A8](v6);
    v12[2] = v0;
    v7 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E531074, (uint64_t)v12, v6);
    swift_release();
    v8 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v4 + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v4 + 104) = v8;
    *(_QWORD *)(v4 + 72) = v7;
    v9 = sub_23E537580();
    swift_bridgeObjectRelease();
  }
  else
  {
    static String.hfLocalized(_:)();
    return v10;
  }
  return v9;
}

uint64_t WaterCategoryInformation.shortSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for WaterCategoryInformation();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E25C4C0(v1);
  v10 = v0;
  v3 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E531074, (uint64_t)v9, v2);
  swift_release();
  if (!v3)
    return 0;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E25C4C0(v4);
  MEMORY[0x24BDAC7A8](v5);
  v8[2] = v0;
  v6 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E531074, (uint64_t)v8, v5);
  swift_release();
  v11 = v6;
  return sub_23E538318();
}

_QWORD *WaterCategoryInformation.statusItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t i;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33[2];
  _QWORD *v34[7];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _UNKNOWN **v38;
  __int128 v39;
  __int128 v40;
  _UNKNOWN **v41;
  __int128 v42;
  __int128 v43;
  _UNKNOWN **v44;
  __int128 v45;
  __int128 v46;
  _UNKNOWN **v47;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A848);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A850);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A858);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A860);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WaterCategoryInformation();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_23E25C4C0(v12);
  v35 = xmmword_23E55C980;
  v14 = swift_retain();
  sub_23E358258(v14, (uint64_t)v11);
  v15 = type metadata accessor for LeakAlarmStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_256D4A860);
    v36 = 0u;
    v37 = 0u;
    v38 = 0;
  }
  else
  {
    *((_QWORD *)&v37 + 1) = v15;
    v38 = &off_250EF4500;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v36);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, type metadata accessor for LeakAlarmStatusItem);
  }
  v17 = swift_retain();
  sub_23E224ED0(v17, (uint64_t)v8);
  v18 = type metadata accessor for IrrigationStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_256D4A858);
    v39 = 0u;
    v40 = 0u;
    v41 = 0;
  }
  else
  {
    *((_QWORD *)&v40 + 1) = v18;
    v41 = &off_250EE0848;
    v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
    sub_23E1E2FDC((uint64_t)v8, (uint64_t)v19, type metadata accessor for IrrigationStatusItem);
  }
  v20 = (uint64_t *)swift_retain();
  sub_23E333DE4(v20, (uint64_t)v5);
  v21 = type metadata accessor for ValveStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v5, 1, v21) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D4A850);
    v42 = 0u;
    v43 = 0u;
    v44 = 0;
  }
  else
  {
    *((_QWORD *)&v43 + 1) = v21;
    v44 = &off_250EE0878;
    v22 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v22, type metadata accessor for ValveStatusItem);
  }
  sub_23E335258(v13, (uint64_t)v2);
  v23 = type metadata accessor for FaucetStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v2, 1, v23) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_256D4A848);
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
  }
  else
  {
    *((_QWORD *)&v46 + 1) = v23;
    v47 = &off_250EE08A8;
    v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
    sub_23E1E2FDC((uint64_t)v2, (uint64_t)v24, type metadata accessor for FaucetStatusItem);
  }
  v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 4; i != 24; i += 5)
  {
    sub_23E1E7C20((uint64_t)&v34[i + 5], (uint64_t)v34, &qword_256D3FE40);
    sub_23E25CD18((uint64_t)v34, (uint64_t)&v31);
    if (v32)
    {
      sub_23E1E6C84(&v31, (uint64_t)v33);
      sub_23E1E6C84(v33, (uint64_t)&v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_23E51F32C(0, v25[2] + 1, 1, v25);
      v28 = v25[2];
      v27 = v25[3];
      if (v28 >= v27 >> 1)
        v25 = sub_23E51F32C((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
      v25[2] = v28 + 1;
      sub_23E1E6C84(&v31, (uint64_t)&v25[5 * v28 + 4]);
    }
    else
    {
      sub_23E1E7C64((uint64_t)&v31, &qword_256D3FE40);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  swift_arrayDestroy();
  v34[0] = v25;
  swift_bridgeObjectRetain();
  sub_23E358A98(v34);
  swift_bridgeObjectRelease();
  return v34[0];
}

uint64_t sub_23E530490@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5;

  v5 = *a2;
  return WaterCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t WaterCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];

  v27[0] = a4;
  v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WaterCategoryInformation();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a2;
  sub_23E40BD30(a1, (uint64_t)v16);
  v16[*(int *)(v13 + 20)] = 4;
  sub_23E1E7C20(a3, (uint64_t)v12, &qword_256D3FE48);
  v18 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_23E1E7C64((uint64_t)v12, &qword_256D3FE48);
    sub_23E40BD30(a1, (uint64_t)v9);
    v19 = v27[0];
  }
  else
  {
    v20 = swift_bridgeObjectRetain();
    v21 = sub_23E4FBE2C(v20);
    sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticRoom);
    sub_23E40BD30(a1, (uint64_t)v9);
    v19 = v27[0];
    if (v21)
      goto LABEL_5;
  }
  v22 = swift_bridgeObjectRetain();
  v21 = sub_23E4FBE2C(v22);
LABEL_5:
  sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StateSnapshot);
  v23 = sub_23E25C61C(v21, v17);
  *(_QWORD *)&v16[*(int *)(v13 + 24)] = v23;
  v24 = *(_QWORD *)(v23 + 16);
  sub_23E1E7C64(a3, &qword_256D3FE48);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  if (v24)
  {
    sub_23E1E2FDC((uint64_t)v16, v19, (uint64_t (*)(_QWORD))type metadata accessor for WaterCategoryInformation);
    v25 = 0;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WaterCategoryInformation);
    v25 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v25, 1, v13);
}

uint64_t WaterCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E53071C()
{
  __int128 v1[4];

  sub_23E53845C();
  WaterCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E53075C()
{
  __int128 v1[4];

  sub_23E53845C();
  WaterCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

char *sub_23E530794(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A248);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E53088C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E530898(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E5308A8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
}

uint64_t sub_23E5308B4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
}

uint64_t sub_23E5308C4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, type metadata accessor for ScrubberElement);
}

uint64_t sub_23E5308D0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E5308DC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, type metadata accessor for StaticRoom);
}

uint64_t sub_23E5308E8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, type metadata accessor for RoomType);
}

char *sub_23E5308F4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_23E538078();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_23E5309AC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  int64_t v4;
  char *result;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 < 0)
  {
    result = (char *)sub_23E538078();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
      return (char *)memmove(result, v3, v4);
  }
  return result;
}

uint64_t sub_23E530A3C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
}

char *sub_23E530A48(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_23E538078();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_23E530AF0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

char *sub_23E530AFC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_23E538078();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

uint64_t sub_23E530BA4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E530BB0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23E530BBC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E530BBC(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_23E538078();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23E530CC8(uint64_t a1)
{
  return sub_23E530794(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E530CDC(_QWORD *a1)
{
  return sub_23E2CB56C(0, a1[2], 0, a1);
}

uint64_t sub_23E530CF0(_QWORD *a1)
{
  return sub_23E2CC0CC(0, a1[2], 0, a1);
}

uint64_t sub_23E530D04(_QWORD *a1)
{
  return sub_23E2CC0E0(0, a1[2], 0, a1);
}

uint64_t sub_23E530D18(uint64_t a1)
{
  return sub_23E2CC100(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E530D2C(_QWORD *a1)
{
  return sub_23E2CC538(0, a1[2], 0, a1);
}

void sub_23E530D40()
{
  JUMPOUT(0x24264F598);
}

uint64_t sub_23E530D54(_QWORD *a1)
{
  return sub_23E2CC54C(0, a1[2], 0, a1);
}

uint64_t sub_23E530D68(_QWORD *a1)
{
  return sub_23E2CB544(0, a1[2], 0, a1);
}

uint64_t sub_23E530D7C(_QWORD *a1)
{
  return sub_23E2CC560(0, a1[2], 0, a1);
}

uint64_t sub_23E530D90(_QWORD *a1)
{
  return sub_23E2CC9E0(0, a1[2], 0, a1);
}

uint64_t sub_23E530DA4(uint64_t a1)
{
  return sub_23E2CC0F4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E530DB8(_QWORD *a1)
{
  return sub_23E2CC9F4(0, a1[2], 0, a1);
}

uint64_t sub_23E530DCC(_QWORD *a1)
{
  return sub_23E2CB558(0, a1[2], 0, a1);
}

uint64_t sub_23E530DE0(uint64_t a1)
{
  return sub_23E2CCF10(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23E530DF4(_QWORD *a1)
{
  return sub_23E2CD078(0, a1[2], 0, a1);
}

uint64_t sub_23E530E08(_QWORD *a1)
{
  return sub_23E2CD08C(0, a1[2], 0, a1);
}

uint64_t sub_23E530E1C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E25B364(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23E530E34(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E530EA4(&qword_256D4A868, (uint64_t)&protocol conformance descriptor for WaterCategoryInformation);
  result = sub_23E530EA4(&qword_256D4A870, (uint64_t)&protocol conformance descriptor for WaterCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E530E80()
{
  return sub_23E530EA4(&qword_256D4A878, (uint64_t)&protocol conformance descriptor for WaterCategoryInformation);
}

uint64_t sub_23E530EA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WaterCategoryInformation();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WaterCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E530EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WaterCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E530F78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E530FF0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E531074(_QWORD *a1, uint64_t a2)
{
  return sub_23E530E1C(a1, a2);
}

uint64_t sub_23E531088()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E5310EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 608) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E53114C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 616) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E531198()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[58];
  v2 = v0[34];
  v3 = v0[35];
  sub_23E1E7C20(v0[62], v1, &qword_254334340);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[78] = (uint64_t)v4;
  if (v4(v1, 1, v2) == 1)
  {
    if (qword_2543342C8 != -1)
      swift_once();
    v5 = v0[58];
    v6 = v0[36];
    v7 = __swift_project_value_buffer(v0[34], (uint64_t)qword_254333F38);
    sub_23E1E2F50(v7, v6, type metadata accessor for StateSnapshot);
    sub_23E1E7C64(v5, &qword_254334340);
  }
  else
  {
    sub_23E1FDC80(v0[58], v0[36]);
  }
  v0[79] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E5312AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 288);
  swift_release();
  sub_23E201B18(v1);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E531314()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 624);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 272);
  sub_23E1E7C20(*(_QWORD *)(v0 + 496), v2, &qword_254334340);
  if (v1(v2, 1, v3) == 1)
  {
    if (qword_2543342C8 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 496);
    v5 = *(_QWORD *)(v0 + 456);
    v6 = *(_QWORD *)(v0 + 184);
    v7 = __swift_project_value_buffer(*(_QWORD *)(v0 + 272), (uint64_t)qword_254333F38);
    sub_23E1E2F50(v7, v6, type metadata accessor for StateSnapshot);
    sub_23E1E7C64(v4, &qword_254334340);
    sub_23E1E7C64(v5, &qword_254334340);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 456);
    v9 = *(_QWORD *)(v0 + 184);
    sub_23E1E7C64(*(_QWORD *)(v0 + 496), &qword_254334340);
    sub_23E1FDC80(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 504));
}

uint64_t SnapshotModerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome, &qword_254333F50);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SnapshotModerator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome, &qword_254333F50);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t SnapshotModerator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t SnapshotModerator.readFreezeDriedHome(url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for StateSnapshot(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 + 64);
  v3[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E5316BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23E536BF0();
  swift_allocObject();
  sub_23E536BE4();
  v1 = sub_23E536E00();
  v3 = v2;
  sub_23E531FF4(&qword_256D40F40, (uint64_t)&protocol conformance descriptor for StateSnapshot);
  sub_23E536BD8();
  sub_23E22C908(v1, v3);
  swift_release();
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 40);
  v10 = v9 + *(int *)(*(_QWORD *)(v0 + 64) + 20);
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, v10, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  v13 = v8 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  swift_beginAccess();
  sub_23E34EFDC(v6, v13);
  swift_endAccess();
  v14 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  sub_23E1E2F50(v9, v7, type metadata accessor for StateSnapshot);
  v15 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_23E1FDC80(v7, v16 + v15);
  sub_23E26D014(v5, (uint64_t)&unk_256D4A940, v16);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E531904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23E53191C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E531988()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E5319EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E531A4C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E531A94()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E531AF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_23E201B18(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E531B30()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  int *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for StateSnapshot(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 20);
  v4 = sub_23E536F80();
  v5 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v7 = v3 + v6[6];
  v5(v7, v4);
  v8 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v9 = v7 + *(int *)(v8 + 28);
  v10 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v5(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5(v7 + *(int *)(v8 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v3 + v6[7];
  v5(v11, v4);
  v12 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v5(v11 + *(int *)(v12 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v3 + v6[20];
  v14 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v5(v13, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v13 + *(int *)(v14 + 40), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E531ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StateSnapshot(0) - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23E23C694;
  v4[2] = v3;
  return swift_task_switch();
}

uint64_t SnapshotModerator.writeFreezeDriedHome(stateSnapshot:)()
{
  uint64_t v0;

  sub_23E536C20();
  swift_allocObject();
  sub_23E536C14();
  sub_23E536BFC();
  type metadata accessor for StateSnapshot(0);
  sub_23E531FF4(&qword_256D40F48, (uint64_t)&protocol conformance descriptor for StateSnapshot);
  v0 = sub_23E536C08();
  swift_release();
  return v0;
}

uint64_t sub_23E531FF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StateSnapshot(255);
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E532034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_23E536DE8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, qword_256D4A918);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D4A918);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = objc_msgSend(v7, sel_URLForUbiquityContainerIdentifier_, 0);

  if (v8)
  {
    sub_23E536DC4();

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if ((_DWORD)result != 1)
    {
      sub_23E536DAC();
      return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t static SnapshotModerator.iCloudDocumentsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EF70 != -1)
    swift_once();
  v2 = sub_23E536DE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D4A918);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23E532258()
{
  return type metadata accessor for SnapshotModerator();
}

uint64_t method lookup function for SnapshotModerator()
{
  return swift_lookUpClassMethod();
}

__n128 ColorPickerFavorite.init(color:brightness:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>, double a3@<D0>)
{
  unint64_t v5;
  unsigned __int8 v6;
  __n128 result;
  __n128 v8;

  v8 = *a1;
  v5 = a1[1].n128_u64[0];
  v6 = a1[1].n128_u8[8];
  type metadata accessor for ColorPickerFavorite();
  sub_23E536F74();
  result = v8;
  *a2 = v8;
  a2[1].n128_u64[0] = v5;
  a2[1].n128_u8[8] = v6;
  a2[2].n128_f64[0] = a3;
  return result;
}

unint64_t static LightbulbColor.convertKelvinToMired(_:)(uint64_t a1)
{
  unint64_t v1;

  if (a1 <= 1)
    v1 = 1;
  else
    v1 = a1;
  if (v1 < 0x10)
    return 0xFFFFFFFFLL;
  else
    return 0xF4240 / v1;
}

void LightbulbColor.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23E53233C()
{
  sub_23E538468();
  return RGBColor.hash(into:)();
}

void static LightbulbColor.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_23E532470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  _BOOL4 v8;

  if (v7)
  {
    sub_23E533DE4(v2, v0, v1, v7);
    sub_23E533DF8(v5, v4, v3, v6);
    sub_23E533DF8(v2, v0, v1, v7);
    return 0;
  }
  else
  {
    sub_23E533DF8(v5, v4, v3, 0);
    sub_23E533DF8(v2, v0, v1, 0);
    v8 = *(double *)&v5 == *(double *)&v2;
    if (*(double *)&v4 != *(double *)&v0)
      v8 = 0;
    return *(double *)&v3 == *(double *)&v1 && v8;
  }
}

BOOL static RGBColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_23E532898()
{
  sub_23E533E78();
  return sub_23E538570();
}

uint64_t sub_23E5328C0()
{
  sub_23E533E78();
  return sub_23E53857C();
}

uint64_t sub_23E5328E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E532910 + 4 * byte_23E55CA28[*v0]))(4343634, 0xE300000000000000);
}

uint64_t sub_23E532910()
{
  return 5657416;
}

uint64_t sub_23E53291C()
{
  return 0x74617265706D6554;
}

uint64_t sub_23E53293C()
{
  return 0x6576697470616461;
}

uint64_t sub_23E532960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E535DC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E532984()
{
  sub_23E533E34();
  return sub_23E538570();
}

uint64_t sub_23E5329AC()
{
  sub_23E533E34();
  return sub_23E53857C();
}

uint64_t sub_23E5329D4()
{
  sub_23E533F44();
  return sub_23E538570();
}

uint64_t sub_23E5329FC()
{
  sub_23E533F44();
  return sub_23E53857C();
}

uint64_t sub_23E532A24()
{
  sub_23E533F88();
  return sub_23E538570();
}

uint64_t sub_23E532A4C()
{
  sub_23E533F88();
  return sub_23E53857C();
}

uint64_t sub_23E532A74()
{
  sub_23E533F00();
  return sub_23E538570();
}

uint64_t sub_23E532A9C()
{
  sub_23E533F00();
  return sub_23E53857C();
}

void LightbulbColor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A950);
  v13 = *(_QWORD *)(v3 - 8);
  v14 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v12 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A958);
  v9[3] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v9[1] = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A960);
  v9[4] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v9[2] = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A968);
  v9[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A970);
  v16 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v15 = *(_QWORD *)(v1 + 8);
  v8 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E533E34();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E532C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 112) = 0;
  sub_23E533F88();
  v6 = *(_QWORD *)(v4 - 120);
  sub_23E5381E0();
  v7 = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v7;
  *(_QWORD *)(v4 - 96) = v5;
  sub_23E533FCC();
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 224) + 8))(v2, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v1, v6);
}

uint64_t LightbulbColor.hashValue.getter()
{
  sub_23E53845C();
  LightbulbColor.hash(into:)();
  return sub_23E5384A4();
}

uint64_t LightbulbColor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9B0);
  v4 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  v27 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9B8);
  v24 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v29 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9C0);
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E533E34();
  v15 = v34;
  sub_23E5384E0();
  if (!v15)
  {
    v22[1] = v9;
    v22[2] = v8;
    v22[3] = 0;
    v34 = v11;
    v16 = v13;
    v17 = sub_23E5381C8();
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X9 }
    v18 = sub_23E537ED4();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v20 = &type metadata for LightbulbColor;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
}

void sub_23E533344()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  *(_BYTE *)(v4 - 112) = 1;
  sub_23E533F44();
  v5 = v2;
  v6 = *(_QWORD *)(v4 - 232);
  sub_23E5380C0();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 72) + 8))(v1, v3);
  }
  else
  {
    *(_BYTE *)(v4 - 112) = 0;
    v7 = *(_QWORD *)(v4 - 224);
    sub_23E53815C();
    *(_OWORD *)(v4 - 144) = v8;
    *(_BYTE *)(v4 - 112) = 1;
    sub_23E53815C();
    v9 = *(_QWORD *)(v4 - 72);
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8);
    *(_OWORD *)(v4 - 160) = v11;
    v10(v5, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v3);
    v12 = *(_OWORD *)(v4 - 144);
    v13 = *(_QWORD *)(v4 - 184);
    *((_QWORD *)&v12 + 1) = *(_QWORD *)(v4 - 160);
    *(_OWORD *)v13 = v12;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 24) = v0;
  }
  JUMPOUT(0x23E53331CLL);
}

uint64_t sub_23E5336E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return LightbulbColor.init(from:)(a1, a2);
}

void sub_23E5336F8(_QWORD *a1)
{
  LightbulbColor.encode(to:)(a1);
}

uint64_t sub_23E53370C()
{
  sub_23E53845C();
  LightbulbColor.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E533768()
{
  sub_23E53845C();
  LightbulbColor.hash(into:)();
  return sub_23E5384A4();
}

__n128 RGBColor.id.getter()
{
  __n128 *v0;
  unint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *v0;
  v1 = v0[1].n128_u64[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
  v2 = swift_allocObject();
  result = v4;
  *(_OWORD *)(v2 + 16) = xmmword_23E53E0F0;
  *(__n128 *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = v1;
  return result;
}

double RGBColor.r.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void RGBColor.r.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*RGBColor.r.modify())()
{
  return nullsub_1;
}

double RGBColor.g.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void RGBColor.g.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*RGBColor.g.modify())()
{
  return nullsub_1;
}

double RGBColor.b.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void RGBColor.b.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*RGBColor.b.modify())()
{
  return nullsub_1;
}

int8x16_t RGBColor.init(_:_:_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  double v7;
  float64x2_t v8;
  float64x2_t v9;
  int8x16_t result;

  v4.i64[0] = a1;
  v4.i64[1] = a2;
  v5 = vcvtq_f64_s64(v4);
  v6 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
  v7 = (double)a3 / 255.0;
  if (v7 <= 0.0)
    v7 = 0.0;
  if (v7 > 1.0)
    v7 = 1.0;
  v8 = vdivq_f64(v5, v6);
  v9 = (float64x2_t)vbicq_s8((int8x16_t)v8, (int8x16_t)vclezq_f64(v8));
  __asm { FMOV            V2.2D, #1.0 }
  result = vbslq_s8((int8x16_t)vcgtq_f64(v9, _Q2), (int8x16_t)_Q2, (int8x16_t)v9);
  *(int8x16_t *)a4 = result;
  *(double *)(a4 + 16) = v7;
  return result;
}

int8x16_t RGBColor.init(red:green:blue:)@<Q0>(uint64_t a1@<X8>, float64x2_t a2@<Q0>, float64_t a3@<D1>, double a4@<D2>)
{
  int8x16_t v4;
  float64x2_t v5;
  int8x16_t result;

  a2.f64[1] = a3;
  v4 = (int8x16_t)vclezq_f64(a2);
  if (a4 <= 0.0)
    a4 = 0.0;
  if (a4 > 1.0)
    a4 = 1.0;
  v5 = (float64x2_t)vbicq_s8((int8x16_t)a2, v4);
  __asm { FMOV            V1.2D, #1.0 }
  result = vbslq_s8((int8x16_t)vcgtq_f64(v5, _Q1), (int8x16_t)_Q1, (int8x16_t)v5);
  *(int8x16_t *)a1 = result;
  *(double *)(a1 + 16) = a4;
  return result;
}

uint64_t RGBColor.hash(into:)()
{
  sub_23E538498();
  sub_23E538498();
  return sub_23E538498();
}

uint64_t sub_23E533968()
{
  char *v0;

  return qword_23E55D558[*v0];
}

uint64_t sub_23E533980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E535F94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E5339A4()
{
  sub_23E5340CC();
  return sub_23E538570();
}

uint64_t sub_23E5339CC()
{
  sub_23E5340CC();
  return sub_23E53857C();
}

uint64_t RGBColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4A9E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5340CC();
  sub_23E5384EC();
  v14 = v9;
  v13 = 0;
  sub_23E534110();
  sub_23E5382AC();
  if (!v2)
  {
    v14 = v8;
    v13 = 1;
    sub_23E5382AC();
    v14 = v10;
    v13 = 2;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RGBColor.hashValue.getter()
{
  sub_23E53845C();
  RGBColor.hash(into:)();
  return sub_23E5384A4();
}

uint64_t RGBColor.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4AA00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E5340CC();
  sub_23E5384E0();
  if (!v2)
  {
    v14 = 0;
    sub_23E5341A0();
    sub_23E538180();
    v9 = v15;
    v14 = 1;
    sub_23E538180();
    v11 = v15;
    v14 = 2;
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v15;
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E533D90()
{
  sub_23E53845C();
  RGBColor.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E533DE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 3)
    return swift_retain();
  return result;
}

uint64_t sub_23E533DF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 3)
    return swift_release();
  return result;
}

uint64_t sub_23E533E0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    return sub_23E533DE4(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_23E533E20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    return sub_23E533DF8(a1, a2, a3, a4);
  return a1;
}

unint64_t sub_23E533E34()
{
  unint64_t result;

  result = qword_256D4A978;
  if (!qword_256D4A978)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D500, &type metadata for LightbulbColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A978);
  }
  return result;
}

unint64_t sub_23E533E78()
{
  unint64_t result;

  result = qword_256D4A980;
  if (!qword_256D4A980)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D4B0, &type metadata for LightbulbColor.AdaptiveLightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A980);
  }
  return result;
}

unint64_t sub_23E533EBC()
{
  unint64_t result;

  result = qword_256D4A988;
  if (!qword_256D4A988)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for LightbulbColor, &type metadata for LightbulbColor);
    atomic_store(result, (unint64_t *)&qword_256D4A988);
  }
  return result;
}

unint64_t sub_23E533F00()
{
  unint64_t result;

  result = qword_256D4A990;
  if (!qword_256D4A990)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D460, &type metadata for LightbulbColor.TemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A990);
  }
  return result;
}

unint64_t sub_23E533F44()
{
  unint64_t result;

  result = qword_256D4A998;
  if (!qword_256D4A998)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D410, &type metadata for LightbulbColor.HSVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A998);
  }
  return result;
}

unint64_t sub_23E533F88()
{
  unint64_t result;

  result = qword_256D4A9A0;
  if (!qword_256D4A9A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D3C0, &type metadata for LightbulbColor.RGBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A9A0);
  }
  return result;
}

unint64_t sub_23E533FCC()
{
  unint64_t result;

  result = qword_256D4A9A8;
  if (!qword_256D4A9A8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for RGBColor, &type metadata for RGBColor);
    atomic_store(result, (unint64_t *)&qword_256D4A9A8);
  }
  return result;
}

uint64_t sub_23E534010()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 != 255)
    sub_23E533DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

unint64_t sub_23E534044()
{
  unint64_t result;

  result = qword_256D4A9D8;
  if (!qword_256D4A9D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for LightbulbColor, &type metadata for LightbulbColor);
    atomic_store(result, (unint64_t *)&qword_256D4A9D8);
  }
  return result;
}

unint64_t sub_23E534088()
{
  unint64_t result;

  result = qword_256D4A9E0;
  if (!qword_256D4A9E0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for RGBColor, &type metadata for RGBColor);
    atomic_store(result, (unint64_t *)&qword_256D4A9E0);
  }
  return result;
}

unint64_t sub_23E5340CC()
{
  unint64_t result;

  result = qword_256D4A9F0;
  if (!qword_256D4A9F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D370, &type metadata for RGBColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4A9F0);
  }
  return result;
}

unint64_t sub_23E534110()
{
  unint64_t result;

  result = qword_256D4A9F8;
  if (!qword_256D4A9F8)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256D4A9F8);
  }
  return result;
}

uint64_t sub_23E534154()
{
  sub_23E53845C();
  RGBColor.hash(into:)();
  return sub_23E5384A4();
}

unint64_t sub_23E5341A0()
{
  unint64_t result;

  result = qword_256D4AA08;
  if (!qword_256D4AA08)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256D4AA08);
  }
  return result;
}

BOOL sub_23E5341E4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_23E534214@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RGBColor.init(from:)(a1, a2);
}

uint64_t sub_23E534228(_QWORD *a1)
{
  return RGBColor.encode(to:)(a1);
}

__n128 sub_23E53423C@<Q0>(uint64_t *a1@<X8>)
{
  __n128 *v1;
  unint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *v1;
  v3 = v1[1].n128_u64[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
  v4 = swift_allocObject();
  result = v6;
  *(_OWORD *)(v4 + 16) = xmmword_23E53E0F0;
  *(__n128 *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v3;
  *a1 = v4;
  return result;
}

uint64_t ColorPickerFavorite.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_23E533DE4(v2, v3, v4, v5);
}

__n128 ColorPickerFavorite.color.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_23E533DF8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  result = v5;
  *(__n128 *)v1 = v5;
  *(_QWORD *)(v1 + 16) = v2;
  *(_BYTE *)(v1 + 24) = v3;
  return result;
}

uint64_t (*ColorPickerFavorite.color.modify())()
{
  return nullsub_1;
}

double ColorPickerFavorite.brightness.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ColorPickerFavorite.brightness.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ColorPickerFavorite.brightness.modify())()
{
  return nullsub_1;
}

uint64_t ColorPickerFavorite.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColorPickerFavorite() + 24);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ColorPickerFavorite.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ColorPickerFavorite() + 24);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ColorPickerFavorite.id.modify())(_QWORD)
{
  type metadata accessor for ColorPickerFavorite();
  return nullsub_1;
}

uint64_t ColorPickerFavorite.description.getter()
{
  sub_23E537E68();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E5379D0();
  sub_23E537628();
  type metadata accessor for ColorPickerFavorite();
  sub_23E536F80();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ColorPickerFavorite.hash(into:)()
{
  LightbulbColor.hash(into:)();
  sub_23E538498();
  type metadata accessor for ColorPickerFavorite();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23E5374D8();
}

uint64_t sub_23E5345F4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656E746867697262;
  if (*v0 != 1)
    v1 = 25705;
  if (*v0)
    return v1;
  else
    return 0x726F6C6F63;
}

uint64_t sub_23E534644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E536098(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E534668()
{
  sub_23E534D98();
  return sub_23E538570();
}

uint64_t sub_23E534690()
{
  sub_23E534D98();
  return sub_23E53857C();
}

uint64_t ColorPickerFavorite.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  _BYTE v12[16];
  __int128 v13;
  uint64_t v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4AA10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E534D98();
  sub_23E5384EC();
  v9 = *((_QWORD *)v3 + 2);
  v10 = *((_BYTE *)v3 + 24);
  v13 = *v3;
  v14 = v9;
  v15 = v10;
  v12[15] = 0;
  sub_23E533EBC();
  sub_23E5382AC();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_23E538288();
    type metadata accessor for ColorPickerFavorite();
    LOBYTE(v13) = 2;
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ColorPickerFavorite.hashValue.getter()
{
  sub_23E53845C();
  LightbulbColor.hash(into:)();
  sub_23E538498();
  type metadata accessor for ColorPickerFavorite();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t ColorPickerFavorite.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  char v33;

  v25 = a2;
  v29 = sub_23E536F80();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D4AA20);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorPickerFavorite();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v12 + 4) = 0x3FF0000000000000;
  v28 = &v12[*(int *)(v10 + 24)];
  sub_23E536F74();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E534D98();
  sub_23E5384E0();
  if (v2)
  {
    v16 = v28;
    v15 = v29;
    v17 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, v15);
  }
  else
  {
    v13 = v6;
    v33 = 0;
    sub_23E534044();
    v14 = v26;
    sub_23E538180();
    v18 = v31;
    v19 = v32;
    *(_OWORD *)v12 = v30;
    *((_QWORD *)v12 + 2) = v18;
    v12[24] = v19;
    LOBYTE(v30) = 1;
    sub_23E53815C();
    *((_QWORD *)v12 + 4) = v20;
    LOBYTE(v30) = 2;
    sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v24 = v5;
    v21 = v29;
    sub_23E538180();
    v22 = v28;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
    (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v22, v24, v21);
    sub_23E3E6148((uint64_t)v12, v25);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_23E3E618C((uint64_t)v12);
  }
}

uint64_t sub_23E534C10()
{
  sub_23E53845C();
  LightbulbColor.hash(into:)();
  sub_23E538498();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E534CCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorPickerFavorite.init(from:)(a1, a2);
}

uint64_t sub_23E534CE0(_QWORD *a1)
{
  return ColorPickerFavorite.encode(to:)(a1);
}

uint64_t _s13HomeDataModel19ColorPickerFavoriteV2eeoiySbAC_ACtFZ_0(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  __int128 v8;
  uint64_t v9;
  char v10;

  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_BYTE *)a1 + 24);
  v8 = *a1;
  v9 = v4;
  v10 = v5;
  static LightbulbColor.== infix(_:_:)((uint64_t)&v8);
  if ((v6 & 1) == 0 || *((double *)a1 + 4) != *(double *)(a2 + 32))
    return 0;
  type metadata accessor for ColorPickerFavorite();
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
}

unint64_t sub_23E534D98()
{
  unint64_t result;

  result = qword_256D4AA18;
  if (!qword_256D4AA18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D320, &type metadata for ColorPickerFavorite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA18);
  }
  return result;
}

unint64_t sub_23E534DE0()
{
  unint64_t result;

  result = qword_256D4AA28;
  if (!qword_256D4AA28)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for LightbulbColor, &type metadata for LightbulbColor);
    atomic_store(result, (unint64_t *)&qword_256D4AA28);
  }
  return result;
}

unint64_t sub_23E534E28()
{
  unint64_t result;

  result = qword_256D4AA30;
  if (!qword_256D4AA30)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for RGBColor, &type metadata for RGBColor);
    atomic_store(result, (unint64_t *)&qword_256D4AA30);
  }
  return result;
}

unint64_t sub_23E534E70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D4AA38;
  if (!qword_256D4AA38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41118);
    v2 = MEMORY[0x24BEE13E8];
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D4AA38);
  }
  return result;
}

uint64_t sub_23E534ECC()
{
  return sub_23E1EE1C4(&qword_256D4AA40, (uint64_t (*)(uint64_t))type metadata accessor for ColorPickerFavorite, (uint64_t)&protocol conformance descriptor for ColorPickerFavorite);
}

uint64_t destroy for LightbulbColor(uint64_t a1)
{
  return sub_23E533DF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E533DE4(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E533DE4(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23E533DF8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LightbulbColor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23E533DF8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for LightbulbColor()
{
  return &type metadata for LightbulbColor;
}

ValueMetadata *type metadata accessor for RGBColor()
{
  return &type metadata for RGBColor;
}

unint64_t initializeBufferWithCopyOfBuffer for ColorPickerFavorite(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_23E533DE4(*(_QWORD *)a2, v8, v9, v10);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v11 = *(int *)(a3 + 24);
    v12 = a1 + v11;
    v13 = a2 + v11;
    v14 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ColorPickerFavorite(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23E533DF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_23E533DE4(*(_QWORD *)a2, v7, v8, v9);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_23E533DE4(*(_QWORD *)a2, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  v13 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v9;
  sub_23E533DF8(v10, v11, v12, v13);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ColorPickerFavorite(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_23E533DF8(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorPickerFavorite()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E5353B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 252)
  {
    v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 3)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ColorPickerFavorite()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E535430(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *(_BYTE *)(result + 24) = -(char)a2;
  }
  else
  {
    v7 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorPickerFavorite.CodingKeys()
{
  return &type metadata for ColorPickerFavorite.CodingKeys;
}

uint64_t _s13HomeDataModel19ColorPickerFavoriteV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E535500 + 4 * byte_23E55CA39[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E535534 + 4 * byte_23E55CA34[v4]))();
}

uint64_t sub_23E535534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E53553C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E535544);
  return result;
}

uint64_t sub_23E535550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E535558);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E53555C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E535564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RGBColor.CodingKeys()
{
  return &type metadata for RGBColor.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LightbulbColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E5355CC + 4 * byte_23E55CA43[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E535600 + 4 * byte_23E55CA3E[v4]))();
}

uint64_t sub_23E535600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E535608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E535610);
  return result;
}

uint64_t sub_23E53561C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E535624);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E535628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E535630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.CodingKeys()
{
  return &type metadata for LightbulbColor.CodingKeys;
}

ValueMetadata *type metadata accessor for LightbulbColor.RGBCodingKeys()
{
  return &type metadata for LightbulbColor.RGBCodingKeys;
}

uint64_t storeEnumTagSinglePayload for LightbulbColor.HSVCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E5356AC + 4 * byte_23E55CA4D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E5356E0 + 4 * byte_23E55CA48[v4]))();
}

uint64_t sub_23E5356E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5356E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E5356F0);
  return result;
}

uint64_t sub_23E5356FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E535704);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E535708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E535710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.HSVCodingKeys()
{
  return &type metadata for LightbulbColor.HSVCodingKeys;
}

ValueMetadata *type metadata accessor for LightbulbColor.TemperatureCodingKeys()
{
  return &type metadata for LightbulbColor.TemperatureCodingKeys;
}

uint64_t _s13HomeDataModel14LightbulbColorO13RGBCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E53577C + 4 * byte_23E55CA52[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E53579C + 4 * byte_23E55CA57[v4]))();
}

_BYTE *sub_23E53577C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E53579C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E5357A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E5357AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E5357B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E5357BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LightbulbColor.AdaptiveLightCodingKeys()
{
  return &type metadata for LightbulbColor.AdaptiveLightCodingKeys;
}

unint64_t sub_23E5357DC()
{
  unint64_t result;

  result = qword_256D4AA48;
  if (!qword_256D4AA48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CEA8, &type metadata for LightbulbColor.AdaptiveLightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA48);
  }
  return result;
}

unint64_t sub_23E535824()
{
  unint64_t result;

  result = qword_256D4AA50;
  if (!qword_256D4AA50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CF60, &type metadata for LightbulbColor.TemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA50);
  }
  return result;
}

unint64_t sub_23E53586C()
{
  unint64_t result;

  result = qword_256D4AA58;
  if (!qword_256D4AA58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D018, &type metadata for LightbulbColor.HSVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA58);
  }
  return result;
}

unint64_t sub_23E5358B4()
{
  unint64_t result;

  result = qword_256D4AA60;
  if (!qword_256D4AA60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D0D0, &type metadata for LightbulbColor.RGBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA60);
  }
  return result;
}

unint64_t sub_23E5358FC()
{
  unint64_t result;

  result = qword_256D4AA68;
  if (!qword_256D4AA68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D188, &type metadata for LightbulbColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA68);
  }
  return result;
}

unint64_t sub_23E535944()
{
  unint64_t result;

  result = qword_256D4AA70;
  if (!qword_256D4AA70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D240, &type metadata for RGBColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA70);
  }
  return result;
}

unint64_t sub_23E53598C()
{
  unint64_t result;

  result = qword_256D4AA78;
  if (!qword_256D4AA78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D2F8, &type metadata for ColorPickerFavorite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA78);
  }
  return result;
}

unint64_t sub_23E5359D4()
{
  unint64_t result;

  result = qword_256D4AA80;
  if (!qword_256D4AA80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D268, &type metadata for ColorPickerFavorite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA80);
  }
  return result;
}

unint64_t sub_23E535A1C()
{
  unint64_t result;

  result = qword_256D4AA88;
  if (!qword_256D4AA88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D290, &type metadata for ColorPickerFavorite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA88);
  }
  return result;
}

unint64_t sub_23E535A64()
{
  unint64_t result;

  result = qword_256D4AA90;
  if (!qword_256D4AA90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D1B0, &type metadata for RGBColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA90);
  }
  return result;
}

unint64_t sub_23E535AAC()
{
  unint64_t result;

  result = qword_256D4AA98;
  if (!qword_256D4AA98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D1D8, &type metadata for RGBColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AA98);
  }
  return result;
}

unint64_t sub_23E535AF4()
{
  unint64_t result;

  result = qword_256D4AAA0;
  if (!qword_256D4AAA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D040, &type metadata for LightbulbColor.RGBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAA0);
  }
  return result;
}

unint64_t sub_23E535B3C()
{
  unint64_t result;

  result = qword_256D4AAA8;
  if (!qword_256D4AAA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D068, &type metadata for LightbulbColor.RGBCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAA8);
  }
  return result;
}

unint64_t sub_23E535B84()
{
  unint64_t result;

  result = qword_256D4AAB0;
  if (!qword_256D4AAB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CF88, &type metadata for LightbulbColor.HSVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAB0);
  }
  return result;
}

unint64_t sub_23E535BCC()
{
  unint64_t result;

  result = qword_256D4AAB8;
  if (!qword_256D4AAB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CFB0, &type metadata for LightbulbColor.HSVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAB8);
  }
  return result;
}

unint64_t sub_23E535C14()
{
  unint64_t result;

  result = qword_256D4AAC0;
  if (!qword_256D4AAC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CED0, &type metadata for LightbulbColor.TemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAC0);
  }
  return result;
}

unint64_t sub_23E535C5C()
{
  unint64_t result;

  result = qword_256D4AAC8;
  if (!qword_256D4AAC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CEF8, &type metadata for LightbulbColor.TemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAC8);
  }
  return result;
}

unint64_t sub_23E535CA4()
{
  unint64_t result;

  result = qword_256D4AAD0;
  if (!qword_256D4AAD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CE18, &type metadata for LightbulbColor.AdaptiveLightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAD0);
  }
  return result;
}

unint64_t sub_23E535CEC()
{
  unint64_t result;

  result = qword_256D4AAD8;
  if (!qword_256D4AAD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55CE40, &type metadata for LightbulbColor.AdaptiveLightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAD8);
  }
  return result;
}

unint64_t sub_23E535D34()
{
  unint64_t result;

  result = qword_256D4AAE0;
  if (!qword_256D4AAE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D0F8, &type metadata for LightbulbColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAE0);
  }
  return result;
}

unint64_t sub_23E535D7C()
{
  unint64_t result;

  result = qword_256D4AAE8;
  if (!qword_256D4AAE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55D120, &type metadata for LightbulbColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D4AAE8);
  }
  return result;
}

uint64_t sub_23E535DC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 4343634 && a2 == 0xE300000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 5657416 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74617265706D6554 && a2 == 0xEB00000000657275 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6576697470616461 && a2 == 0xED0000746867694CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E535F94(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 114 && a2 == 0xE100000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 103 && a2 == 0xE100000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 98 && a2 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E536098(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E746867697262 && a2 == 0xEA00000000007373 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t StaticAlignment.alignment.getter()
{
  _BYTE *v0;

  if (*v0 == 1)
    return sub_23E5373DC();
  else
    return sub_23E5373E8();
}

BOOL static StaticAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticAlignment.hash(into:)()
{
  return sub_23E538468();
}

uint64_t StaticAlignment.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

BOOL static StateValueType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0 && v2 == v3)
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t StateValueType.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_23E538468();
    sub_23E538498();
  }
  else
  {
    sub_23E538468();
  }
  return sub_23E538498();
}

uint64_t StateValueType.hashValue.getter()
{
  sub_23E53845C();
  StateValueType.hash(into:)();
  return sub_23E5384A4();
}

BOOL sub_23E53639C(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) != 0 && v2 == v3)
      return *(double *)(a1 + 8) == *(double *)(a2 + 8);
  }
  else if ((*(_BYTE *)(a2 + 16) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_23E5363FC()
{
  sub_23E53845C();
  StateValueType.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E536450()
{
  sub_23E53845C();
  StateValueType.hash(into:)();
  return sub_23E5384A4();
}

unint64_t sub_23E5364A0()
{
  unint64_t result;

  result = qword_256D4AAF0;
  if (!qword_256D4AAF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAlignment, &type metadata for StaticAlignment);
    atomic_store(result, (unint64_t *)&qword_256D4AAF0);
  }
  return result;
}

unint64_t sub_23E5364E8()
{
  unint64_t result;

  result = qword_256D4AAF8;
  if (!qword_256D4AAF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateValueType, &type metadata for StateValueType);
    atomic_store(result, (unint64_t *)&qword_256D4AAF8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E536578 + 4 * byte_23E55D575[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E5365AC + 4 * byte_23E55D570[v4]))();
}

uint64_t sub_23E5365AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5365B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E5365BCLL);
  return result;
}

uint64_t sub_23E5365C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E5365D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E5365D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E5365DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAlignment()
{
  return &type metadata for StaticAlignment;
}

uint64_t getEnumTagSinglePayload for StateValueType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StateValueType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E536684(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23E53668C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StateValueType()
{
  return &type metadata for StateValueType;
}

uint64_t sub_23E536998()
{
  return MEMORY[0x24BDCB1E0]();
}

uint64_t sub_23E5369A4()
{
  return MEMORY[0x24BDCB1F0]();
}

uint64_t sub_23E5369B0()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23E5369BC()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23E5369C8()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23E5369D4()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_23E5369E0()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_23E5369EC()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_23E5369F8()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_23E536A04()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23E536A10()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23E536A1C()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23E536A28()
{
  return MEMORY[0x24BDCB488]();
}

uint64_t sub_23E536A34()
{
  return MEMORY[0x24BDCB498]();
}

uint64_t sub_23E536A40()
{
  return MEMORY[0x24BDCB4B0]();
}

uint64_t sub_23E536A4C()
{
  return MEMORY[0x24BDCB4D8]();
}

uint64_t sub_23E536A58()
{
  return MEMORY[0x24BDCB4F8]();
}

uint64_t sub_23E536A64()
{
  return MEMORY[0x24BDCB568]();
}

uint64_t sub_23E536A70()
{
  return MEMORY[0x24BDCB8C0]();
}

uint64_t sub_23E536A7C()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_23E536A88()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_23E536A94()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23E536AA0()
{
  return MEMORY[0x24BDCB958]();
}

uint64_t sub_23E536AAC()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_23E536AB8()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_23E536AC4()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_23E536AD0()
{
  return MEMORY[0x24BDCBA60]();
}

uint64_t sub_23E536ADC()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_23E536AE8()
{
  return MEMORY[0x24BDCBAC0]();
}

uint64_t sub_23E536AF4()
{
  return MEMORY[0x24BDCBAC8]();
}

uint64_t sub_23E536B00()
{
  return MEMORY[0x24BDCBAD0]();
}

uint64_t sub_23E536B0C()
{
  return MEMORY[0x24BDCBAE0]();
}

uint64_t sub_23E536B18()
{
  return MEMORY[0x24BDCBAE8]();
}

uint64_t sub_23E536B24()
{
  return MEMORY[0x24BDCBB20]();
}

uint64_t sub_23E536B30()
{
  return MEMORY[0x24BDCBB28]();
}

uint64_t sub_23E536B3C()
{
  return MEMORY[0x24BDCBB68]();
}

uint64_t sub_23E536B48()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_23E536B54()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23E536B60()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23E536B6C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23E536B78()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_23E536B84()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23E536B90()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23E536B9C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23E536BA8()
{
  return MEMORY[0x24BDCBD10]();
}

uint64_t sub_23E536BB4()
{
  return MEMORY[0x24BDCBD68]();
}

uint64_t sub_23E536BC0()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_23E536BCC()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23E536BD8()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_23E536BE4()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_23E536BF0()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_23E536BFC()
{
  return MEMORY[0x24BDCCA58]();
}

uint64_t sub_23E536C08()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_23E536C14()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_23E536C20()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_23E536C2C()
{
  return MEMORY[0x24BDCCE08]();
}

uint64_t sub_23E536C38()
{
  return MEMORY[0x24BDCCE30]();
}

uint64_t sub_23E536C44()
{
  return MEMORY[0x24BDCCE38]();
}

uint64_t sub_23E536C50()
{
  return MEMORY[0x24BDCCE48]();
}

uint64_t sub_23E536C5C()
{
  return MEMORY[0x24BDCCE58]();
}

uint64_t sub_23E536C68()
{
  return MEMORY[0x24BDCCF08]();
}

uint64_t sub_23E536C74()
{
  return MEMORY[0x24BDCCF10]();
}

uint64_t sub_23E536C80()
{
  return MEMORY[0x24BDCCF18]();
}

uint64_t sub_23E536C8C()
{
  return MEMORY[0x24BDCCF20]();
}

uint64_t sub_23E536C98()
{
  return MEMORY[0x24BDCD238]();
}

uint64_t sub_23E536CA4()
{
  return MEMORY[0x24BDCD240]();
}

uint64_t sub_23E536CB0()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_23E536CBC()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_23E536CC8()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_23E536CD4()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_23E536CE0()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_23E536CEC()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_23E536CF8()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_23E536D04()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23E536D10()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23E536D1C()
{
  return MEMORY[0x24BDCD410]();
}

uint64_t sub_23E536D28()
{
  return MEMORY[0x24BDCD420]();
}

uint64_t sub_23E536D34()
{
  return MEMORY[0x24BDCD4A0]();
}

uint64_t sub_23E536D40()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_23E536D4C()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_23E536D58()
{
  return MEMORY[0x24BDCD570]();
}

uint64_t sub_23E536D64()
{
  return MEMORY[0x24BDCD650]();
}

uint64_t sub_23E536D70()
{
  return MEMORY[0x24BDCD678]();
}

uint64_t sub_23E536D7C()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_23E536D88()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23E536D94()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_23E536DA0()
{
  return MEMORY[0x24BDCD908]();
}

uint64_t sub_23E536DAC()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_23E536DB8()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_23E536DC4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23E536DD0()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_23E536DDC()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_23E536DE8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23E536DF4()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23E536E00()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23E536E0C()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_23E536E18()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_23E536E24()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23E536E30()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23E536E3C()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23E536E48()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23E536E54()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_23E536E60()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_23E536E6C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23E536E78()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_23E536E84()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_23E536E90()
{
  return MEMORY[0x24BDCE2E8]();
}

uint64_t sub_23E536E9C()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_23E536EA8()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23E536EB4()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23E536EC0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23E536ECC()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_23E536ED8()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_23E536EE4()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23E536EF0()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23E536EFC()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23E536F08()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23E536F14()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23E536F20()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23E536F2C()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23E536F38()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23E536F44()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23E536F50()
{
  return MEMORY[0x24BDCE9D8]();
}

uint64_t _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23E536F68()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23E536F74()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23E536F80()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23E536F8C()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_23E536F98()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_23E536FA4()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_23E536FB0()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23E536FBC()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_23E536FC8()
{
  return MEMORY[0x24BDCF0D0]();
}

uint64_t sub_23E536FD4()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_23E536FE0()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_23E536FEC()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23E536FF8()
{
  return MEMORY[0x24BDCF3B0]();
}

uint64_t sub_23E537004()
{
  return MEMORY[0x24BDCF420]();
}

uint64_t sub_23E537010()
{
  return MEMORY[0x24BDCF428]();
}

uint64_t sub_23E53701C()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_23E537028()
{
  return MEMORY[0x24BDCF4F0]();
}

uint64_t sub_23E537034()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_23E537040()
{
  return MEMORY[0x24BDCF6D8]();
}

uint64_t sub_23E53704C()
{
  return MEMORY[0x24BDCF6E8]();
}

uint64_t sub_23E537058()
{
  return MEMORY[0x24BEE5BF8]();
}

uint64_t sub_23E537064()
{
  return MEMORY[0x24BEE5C38]();
}

uint64_t sub_23E537070()
{
  return MEMORY[0x24BEE5C40]();
}

uint64_t sub_23E53707C()
{
  return MEMORY[0x24BEE5C48]();
}

uint64_t sub_23E537088()
{
  return MEMORY[0x24BEE5C50]();
}

uint64_t sub_23E537094()
{
  return MEMORY[0x24BEE5C58]();
}

uint64_t sub_23E5370A0()
{
  return MEMORY[0x24BEE5C60]();
}

uint64_t sub_23E5370AC()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_23E5370B8()
{
  return MEMORY[0x24BDC5030]();
}

uint64_t sub_23E5370C4()
{
  return MEMORY[0x24BEE6188]();
}

uint64_t sub_23E5370D0()
{
  return MEMORY[0x24BEE62E0]();
}

uint64_t sub_23E5370DC()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_23E5370E8()
{
  return MEMORY[0x24BEE76E8]();
}

uint64_t sub_23E5370F4()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23E537100()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_23E53710C()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23E537118()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23E537124()
{
  return MEMORY[0x24BEE77B0]();
}

uint64_t sub_23E537130()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23E53713C()
{
  return MEMORY[0x24BEE77E0]();
}

uint64_t sub_23E537148()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23E537154()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23E537160()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23E53716C()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23E537178()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23E537184()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23E537190()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23E53719C()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23E5371A8()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23E5371B4()
{
  return MEMORY[0x24BDB9B48]();
}

uint64_t sub_23E5371C0()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_23E5371CC()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_23E5371D8()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_23E5371E4()
{
  return MEMORY[0x24BDB9D18]();
}

uint64_t sub_23E5371F0()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_23E5371FC()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_23E537208()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_23E537214()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_23E537220()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_23E53722C()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_23E537238()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_23E537244()
{
  return MEMORY[0x24BDB9F90]();
}

uint64_t sub_23E537250()
{
  return MEMORY[0x24BDBA080]();
}

uint64_t sub_23E53725C()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_23E537268()
{
  return MEMORY[0x24BDD47D0]();
}

uint64_t sub_23E537274()
{
  return MEMORY[0x24BDEB420]();
}

uint64_t sub_23E537280()
{
  return MEMORY[0x24BDEDF00]();
}

uint64_t sub_23E53728C()
{
  return MEMORY[0x24BDEE4E8]();
}

uint64_t sub_23E537298()
{
  return MEMORY[0x24BDEE4F0]();
}

uint64_t sub_23E5372A4()
{
  return MEMORY[0x24BDEF0A8]();
}

uint64_t sub_23E5372B0()
{
  return MEMORY[0x24BDEF0C0]();
}

uint64_t sub_23E5372BC()
{
  return MEMORY[0x24BDEF0C8]();
}

uint64_t sub_23E5372C8()
{
  return MEMORY[0x24BDEF0E0]();
}

uint64_t sub_23E5372D4()
{
  return MEMORY[0x24BDF0E18]();
}

uint64_t sub_23E5372E0()
{
  return MEMORY[0x24BDF0E20]();
}

uint64_t sub_23E5372EC()
{
  return MEMORY[0x24BDF3C38]();
}

uint64_t sub_23E5372F8()
{
  return MEMORY[0x24BDF3C58]();
}

uint64_t sub_23E537304()
{
  return MEMORY[0x24BDF3C80]();
}

uint64_t sub_23E537310()
{
  return MEMORY[0x24BDF3C88]();
}

uint64_t sub_23E53731C()
{
  return MEMORY[0x24BDF3CA0]();
}

uint64_t sub_23E537328()
{
  return MEMORY[0x24BDF3CB0]();
}

uint64_t sub_23E537334()
{
  return MEMORY[0x24BDF3CC0]();
}

uint64_t sub_23E537340()
{
  return MEMORY[0x24BDF3CC8]();
}

uint64_t sub_23E53734C()
{
  return MEMORY[0x24BDF3CE8]();
}

uint64_t sub_23E537358()
{
  return MEMORY[0x24BDF3CF8]();
}

uint64_t sub_23E537364()
{
  return MEMORY[0x24BDF3D28]();
}

uint64_t sub_23E537370()
{
  return MEMORY[0x24BDF3D38]();
}

uint64_t sub_23E53737C()
{
  return MEMORY[0x24BDF3D48]();
}

uint64_t sub_23E537388()
{
  return MEMORY[0x24BDF3D68]();
}

uint64_t sub_23E537394()
{
  return MEMORY[0x24BDF3D98]();
}

uint64_t sub_23E5373A0()
{
  return MEMORY[0x24BDF3DB8]();
}

uint64_t sub_23E5373AC()
{
  return MEMORY[0x24BDF3DC8]();
}

uint64_t sub_23E5373B8()
{
  return MEMORY[0x24BDF3DD8]();
}

uint64_t sub_23E5373C4()
{
  return MEMORY[0x24BDF3E68]();
}

uint64_t sub_23E5373D0()
{
  return MEMORY[0x24BDF3E90]();
}

uint64_t sub_23E5373DC()
{
  return MEMORY[0x24BDF4EF8]();
}

uint64_t sub_23E5373E8()
{
  return MEMORY[0x24BDF4F08]();
}

uint64_t sub_23E5373F4()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23E537400()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_23E53740C()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23E537418()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23E537424()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23E537430()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23E53743C()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_23E537448()
{
  return MEMORY[0x24BDCF7F0]();
}

uint64_t sub_23E537454()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23E537460()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23E53746C()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23E537478()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_23E537484()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23E537490()
{
  return MEMORY[0x24BEE0450]();
}

uint64_t sub_23E53749C()
{
  return MEMORY[0x24BEE0458]();
}

uint64_t sub_23E5374A8()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23E5374B4()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23E5374C0()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23E5374CC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23E5374D8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23E5374E4()
{
  return MEMORY[0x24BEE07C0]();
}

uint64_t sub_23E5374F0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23E5374FC()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23E537508()
{
  return MEMORY[0x24BEE0828]();
}

uint64_t sub_23E537514()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23E537520()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_23E53752C()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_23E537538()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23E537544()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23E537550()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23E53755C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23E537568()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_23E537574()
{
  return MEMORY[0x24BDCFA68]();
}

uint64_t sub_23E537580()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23E53758C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23E537598()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23E5375A4()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_23E5375B0()
{
  return MEMORY[0x24BDCFB30]();
}

uint64_t sub_23E5375BC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23E5375C8()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23E5375D4()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_23E5375E0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23E5375EC()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23E5375F8()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23E537604()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23E537610()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23E53761C()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_23E537628()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23E537634()
{
  return MEMORY[0x24BEE0BD8]();
}

uint64_t sub_23E537640()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23E53764C()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23E537658()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23E537664()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23E537670()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23E53767C()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_23E537688()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_23E537694()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_23E5376A0()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_23E5376AC()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_23E5376B8()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23E5376C4()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23E5376D0()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_23E5376DC()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_23E5376E8()
{
  return MEMORY[0x24BEE0E48]();
}

uint64_t sub_23E5376F4()
{
  return MEMORY[0x24BEE0E98]();
}

uint64_t sub_23E537700()
{
  return MEMORY[0x24BEE0EA0]();
}

uint64_t sub_23E53770C()
{
  return MEMORY[0x24BEE0EB0]();
}

uint64_t sub_23E537718()
{
  return MEMORY[0x24BEE0EB8]();
}

uint64_t sub_23E537724()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t sub_23E537730()
{
  return MEMORY[0x24BEE0ED0]();
}

uint64_t sub_23E53773C()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_23E537748()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_23E537754()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_23E537760()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23E53776C()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_23E537778()
{
  return MEMORY[0x24BEE1020]();
}

uint64_t sub_23E537784()
{
  return MEMORY[0x24BEE1048]();
}

uint64_t sub_23E537790()
{
  return MEMORY[0x24BEE1058]();
}

uint64_t sub_23E53779C()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23E5377A8()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_23E5377B4()
{
  return MEMORY[0x24BEE10A0]();
}

uint64_t sub_23E5377C0()
{
  return MEMORY[0x24BEE10C8]();
}

uint64_t sub_23E5377CC()
{
  return MEMORY[0x24BEE10D8]();
}

uint64_t sub_23E5377D8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23E5377E4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23E5377F0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23E5377FC()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23E537808()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23E537814()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23E537820()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23E53782C()
{
  return MEMORY[0x24BEE1170]();
}

uint64_t sub_23E537838()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23E537844()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23E537850()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23E53785C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23E537868()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23E537874()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23E537880()
{
  return MEMORY[0x24BEE1240]();
}

uint64_t sub_23E53788C()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23E537898()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_23E5378A4()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_23E5378B0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23E5378BC()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23E5378C8()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23E5378D4()
{
  return MEMORY[0x24BEE6860]();
}

uint64_t sub_23E5378E0()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_23E5378EC()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23E5378F8()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23E537904()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23E537910()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_23E53791C()
{
  return MEMORY[0x24BEE6978]();
}

uint64_t sub_23E537928()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23E537934()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23E537940()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_23E53794C()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_23E537958()
{
  return MEMORY[0x24BEE6A40]();
}

uint64_t sub_23E537964()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_23E537970()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_23E53797C()
{
  return MEMORY[0x24BEE6A98]();
}

uint64_t sub_23E537988()
{
  return MEMORY[0x24BEE6AA0]();
}

uint64_t sub_23E537994()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_23E5379A0()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_23E5379AC()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_23E5379B8()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_23E5379C4()
{
  return MEMORY[0x24BEE1390]();
}

uint64_t sub_23E5379D0()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_23E5379DC()
{
  return MEMORY[0x24BEE13B0]();
}

uint64_t sub_23E5379E8()
{
  return MEMORY[0x24BEE14A8]();
}

uint64_t sub_23E5379F4()
{
  return MEMORY[0x24BEE14D0]();
}

uint64_t sub_23E537A00()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23E537A0C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23E537A18()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23E537A24()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23E537A30()
{
  return MEMORY[0x24BEE1608]();
}

uint64_t sub_23E537A3C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23E537A48()
{
  return MEMORY[0x24BEE16C0]();
}

uint64_t sub_23E537A54()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_23E537A60()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23E537A6C()
{
  return MEMORY[0x24BDCFD38]();
}

uint64_t sub_23E537A78()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23E537A84()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23E537A90()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23E537A9C()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23E537AA8()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_23E537AB4()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23E537AC0()
{
  return MEMORY[0x24BDF5510]();
}

uint64_t sub_23E537ACC()
{
  return MEMORY[0x24BEE1B28]();
}

uint64_t sub_23E537AD8()
{
  return MEMORY[0x24BDCFE18]();
}

uint64_t sub_23E537AE4()
{
  return MEMORY[0x24BDCFF40]();
}

uint64_t sub_23E537AF0()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23E537AFC()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23E537B08()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23E537B14()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23E537B20()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23E537B2C()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_23E537B38()
{
  return MEMORY[0x24BDCFFC0]();
}

uint64_t sub_23E537B44()
{
  return MEMORY[0x24BDCFFE0]();
}

uint64_t sub_23E537B50()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23E537B5C()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23E537B68()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_23E537B74()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23E537B80()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_23E537B8C()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23E537B98()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23E537BA4()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_23E537BB0()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t sub_23E537BBC()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t sub_23E537BC8()
{
  return MEMORY[0x24BEE5930]();
}

uint64_t sub_23E537BD4()
{
  return MEMORY[0x24BEE5948]();
}

uint64_t sub_23E537BE0()
{
  return MEMORY[0x24BEE5310]();
}

uint64_t sub_23E537BEC()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_23E537BF8()
{
  return MEMORY[0x24BEE5328]();
}

uint64_t sub_23E537C04()
{
  return MEMORY[0x24BDD0150]();
}

uint64_t sub_23E537C10()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_23E537C1C()
{
  return MEMORY[0x24BDD01C8]();
}

uint64_t sub_23E537C28()
{
  return MEMORY[0x24BDD01D8]();
}

uint64_t sub_23E537C34()
{
  return MEMORY[0x24BDD01E0]();
}

uint64_t sub_23E537C40()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23E537C4C()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23E537C58()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23E537C64()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_23E537C70()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_23E537C7C()
{
  return MEMORY[0x24BDD0250]();
}

uint64_t sub_23E537C88()
{
  return MEMORY[0x24BDD47E0]();
}

uint64_t sub_23E537C94()
{
  return MEMORY[0x24BDD03C0]();
}

uint64_t sub_23E537CA0()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23E537CAC()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_23E537CB8()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_23E537CC4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23E537CD0()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_23E537CDC()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23E537CE8()
{
  return MEMORY[0x24BDD0498]();
}

uint64_t sub_23E537CF4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23E537D00()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23E537D0C()
{
  return MEMORY[0x24BDD04F0]();
}

uint64_t sub_23E537D18()
{
  return MEMORY[0x24BDD0590]();
}

uint64_t sub_23E537D24()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23E537D30()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23E537D3C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23E537D48()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23E537D54()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_23E537D60()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23E537D6C()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_23E537D78()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23E537D84()
{
  return MEMORY[0x24BEE2308]();
}

uint64_t sub_23E537D90()
{
  return MEMORY[0x24BEE2318]();
}

uint64_t sub_23E537D9C()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_23E537DA8()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_23E537DB4()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_23E537DC0()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_23E537DCC()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_23E537DD8()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23E537DE4()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_23E537DF0()
{
  return MEMORY[0x24BEE2368]();
}

uint64_t sub_23E537DFC()
{
  return MEMORY[0x24BEE2370]();
}

uint64_t sub_23E537E08()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23E537E14()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23E537E20()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23E537E2C()
{
  return MEMORY[0x24BEE6D58]();
}

uint64_t sub_23E537E38()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23E537E44()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23E537E50()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_23E537E5C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23E537E68()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23E537E74()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23E537E80()
{
  return MEMORY[0x24BEE2568]();
}

uint64_t sub_23E537E8C()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23E537E98()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_23E537EA4()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23E537EB0()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23E537EBC()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23E537EC8()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23E537ED4()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23E537EE0()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_23E537EEC()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_23E537EF8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23E537F04()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_23E537F10()
{
  return MEMORY[0x24BEE28C0]();
}

uint64_t sub_23E537F1C()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23E537F28()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23E537F34()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_23E537F40()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23E537F4C()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23E537F58()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23E537F64()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_23E537F70()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_23E537F7C()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_23E537F88()
{
  return MEMORY[0x24BEE6D80]();
}

uint64_t sub_23E537F94()
{
  return MEMORY[0x24BEE6DA8]();
}

uint64_t sub_23E537FA0()
{
  return MEMORY[0x24BEE6DC0]();
}

uint64_t sub_23E537FAC()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23E537FB8()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23E537FC4()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23E537FD0()
{
  return MEMORY[0x24BEE2BD8]();
}

uint64_t sub_23E537FDC()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23E537FE8()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_23E537FF4()
{
  return MEMORY[0x24BEE2F20]();
}

uint64_t sub_23E538000()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23E53800C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23E538018()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23E538024()
{
  return MEMORY[0x24BEE2FB0]();
}

uint64_t sub_23E538030()
{
  return MEMORY[0x24BEE2FC8]();
}

uint64_t sub_23E53803C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23E538048()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_23E538054()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23E538060()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23E53806C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23E538078()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23E538084()
{
  return MEMORY[0x24BEE3138]();
}

uint64_t sub_23E538090()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23E53809C()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_23E5380A8()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23E5380B4()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23E5380C0()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23E5380CC()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23E5380D8()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23E5380E4()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23E5380F0()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_23E5380FC()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_23E538108()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23E538114()
{
  return MEMORY[0x24BEE3330]();
}

uint64_t sub_23E538120()
{
  return MEMORY[0x24BEE3338]();
}

uint64_t sub_23E53812C()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_23E538138()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_23E538144()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23E538150()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23E53815C()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_23E538168()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23E538174()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_23E538180()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23E53818C()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_23E538198()
{
  return MEMORY[0x24BEE33A8]();
}

uint64_t sub_23E5381A4()
{
  return MEMORY[0x24BEE33B0]();
}

uint64_t sub_23E5381B0()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_23E5381BC()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_23E5381C8()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23E5381D4()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_23E5381E0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23E5381EC()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23E5381F8()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23E538204()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_23E538210()
{
  return MEMORY[0x24BEE3440]();
}

uint64_t sub_23E53821C()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_23E538228()
{
  return MEMORY[0x24BEE3450]();
}

uint64_t sub_23E538234()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23E538240()
{
  return MEMORY[0x24BEE3478]();
}

uint64_t sub_23E53824C()
{
  return MEMORY[0x24BEE3480]();
}

uint64_t sub_23E538258()
{
  return MEMORY[0x24BEE3488]();
}

uint64_t sub_23E538264()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_23E538270()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23E53827C()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23E538288()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_23E538294()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23E5382A0()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_23E5382AC()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23E5382B8()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_23E5382C4()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_23E5382D0()
{
  return MEMORY[0x24BEE3500]();
}

uint64_t sub_23E5382DC()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_23E5382E8()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_23E5382F4()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_23E538300()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_23E53830C()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23E538318()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23E538324()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_23E538330()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_23E53833C()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_23E538348()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23E538354()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23E538360()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_23E53836C()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_23E538378()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23E538384()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_23E538390()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23E53839C()
{
  return MEMORY[0x24BEE70F0]();
}

uint64_t sub_23E5383A8()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_23E5383B4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23E5383C0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23E5383CC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23E5383D8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23E5383E4()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23E5383F0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23E5383FC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23E538408()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23E538414()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23E538420()
{
  return MEMORY[0x24BDD07A0]();
}

uint64_t sub_23E53842C()
{
  return MEMORY[0x24BDD07A8]();
}

uint64_t sub_23E538438()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_23E538444()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_23E538450()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23E53845C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23E538468()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23E538474()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23E538480()
{
  return MEMORY[0x24BEE4308]();
}

uint64_t sub_23E53848C()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_23E538498()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23E5384A4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23E5384B0()
{
  return MEMORY[0x24BDD07B8]();
}

uint64_t sub_23E5384BC()
{
  return MEMORY[0x24BDD07C0]();
}

uint64_t sub_23E5384C8()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_23E5384D4()
{
  return MEMORY[0x24BDD0820]();
}

uint64_t sub_23E5384E0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23E5384EC()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23E5384F8()
{
  return MEMORY[0x24BEE4828]();
}

uint64_t sub_23E538504()
{
  return MEMORY[0x24BEE4850]();
}

uint64_t sub_23E538510()
{
  return MEMORY[0x24BEE4860]();
}

uint64_t sub_23E53851C()
{
  return MEMORY[0x24BEE4868]();
}

uint64_t sub_23E538528()
{
  return MEMORY[0x24BEE4870]();
}

uint64_t sub_23E538534()
{
  return MEMORY[0x24BEE4880]();
}

uint64_t sub_23E538540()
{
  return MEMORY[0x24BEE4890]();
}

uint64_t sub_23E53854C()
{
  return MEMORY[0x24BEE4898]();
}

uint64_t sub_23E538558()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_23E538564()
{
  return MEMORY[0x24BEE48E8]();
}

uint64_t sub_23E538570()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23E53857C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23E538588()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x24BDC0450](time1, time2);
}

uint64_t DetailDateMaskToString()
{
  return MEMORY[0x24BE67750]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x24BED84B0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x24BED8580]();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return MEMORY[0x24BED8680]();
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x24BDD1000](format);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x24BEDD080](object, key);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x24BEDD3C0](object, key, value, policy);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x24BEDD438](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x24BEDD440](obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x24BDAF4D8]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x24BEE4C88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

