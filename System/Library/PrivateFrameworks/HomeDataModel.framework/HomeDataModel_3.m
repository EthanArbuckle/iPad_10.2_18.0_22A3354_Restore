uint64_t sub_23E36799C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23E367A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 104) + 1;
  if (v1 == *(_QWORD *)(v0 + 88))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    while (1)
    {
      *(_QWORD *)(v0 + 104) = v1;
      v3 = *(_QWORD *)(v0 + 16);
      if ((v3 & 0xC000000000000001) != 0)
        v4 = (id)MEMORY[0x24264F148]();
      else
        v4 = *(id *)(v3 + 8 * v1 + 32);
      v5 = v4;
      *(_QWORD *)(v0 + 112) = v4;
      v6 = objc_msgSend(v4, sel_category);
      v7 = objc_msgSend(v6, sel_categoryType);

      v8 = sub_23E53755C();
      v10 = v9;

      if (v8 == sub_23E53755C() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_16;
      }
      v13 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_16;
      v14 = objc_msgSend(v5, sel_siriEndpointProfile);
      if (v14)
        break;

      v1 = *(_QWORD *)(v0 + 104) + 1;
      if (v1 == *(_QWORD *)(v0 + 88))
        goto LABEL_2;
    }

LABEL_16:
    if (qword_256D3ED18 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_256D40BD0);
    v16 = v5;
    v17 = sub_23E537190();
    v18 = sub_23E537B20();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v30 = v20;
      *(_DWORD *)v19 = 136315138;
      v21 = objc_msgSend(v16, sel_description);
      v22 = sub_23E53755C();
      v24 = v23;

      *(_QWORD *)(v19 + 4) = sub_23E1FD768(v22, v24, &v30);
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23E1DF000, v17, v18, "registering for %s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v20, -1, -1);
      MEMORY[0x24264FEBC](v19, -1, -1);
    }
    else
    {

    }
    v25 = objc_msgSend(v16, sel_uniqueIdentifier);
    sub_23E536F68();

    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_23E539640;
    *(_QWORD *)(v26 + 32) = v16;
    v30 = v26;
    sub_23E537808();
    v27 = v30;
    *(_QWORD *)(v0 + 120) = v30;
    v28 = v16;
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v29;
    *v29 = v0;
    v29[1] = sub_23E36799C;
    return sub_23E3694C8(*(_QWORD *)(v0 + 56), v27, *(_QWORD *)(v0 + 24));
  }
}

uint64_t sub_23E367DC0(uint64_t a1)
{
  uint64_t v1;
  id *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v14;
  unint64_t v15;
  char **v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;

  v3 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v4 = MEMORY[0x24BEE4AF8];
  if (!*v3)
    return v4;
  v5 = *v3;
  v6 = objc_msgSend(v5, sel_accessories);
  v7 = sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v8 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v9);
  v42 = a1;
  v10 = 0;
  v11 = sub_23E206BB0(sub_23E2098DC, (uint64_t)v41, v8);
  swift_bridgeObjectRelease();
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_23E539640;
    *(_QWORD *)(v12 + 32) = v11;
    v46 = v12;
    sub_23E537808();
    v4 = v46;
LABEL_4:

    return v4;
  }
  v14 = objc_msgSend(v5, sel_mediaSystems);
  sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
  v15 = sub_23E5377F0();

  v16 = (char **)&v43;
  MEMORY[0x24BDAC7A8](v17);
  v42 = a1;
  v18 = sub_23E206BB0(sub_23E2553E8, (uint64_t)v41, v15);
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_4;
  v19 = (uint64_t)objc_msgSend(v18, sel_components);
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FCD0);
  v20 = sub_23E5377F0();

  v46 = v4;
  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v19 = v20;
    else
      v19 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v21 = sub_23E53803C();
    if (v21)
      goto LABEL_9;
LABEL_26:
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    goto LABEL_27;
  }
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_26;
LABEL_9:
  v43 = 0;
  v44 = v18;
  v45 = v5;
  if ((uint64_t)v21 < 1)
  {
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  v22 = 0;
  v16 = &selRef_homeManager_didAddHome_;
  do
  {
    if ((v20 & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x24264F148](v22, v20);
    else
      v23 = *(id *)(v20 + 8 * v22 + 32);
    v24 = v23;
    v25 = objc_msgSend(v23, sel_mediaProfile, v43, v44, v45);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_accessory);

      if (v27)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
    }
    else
    {

    }
    ++v22;
  }
  while (v21 != v22);
  swift_bridgeObjectRelease();
  v5 = v45;
  v28 = v46;
  v10 = v43;
  v18 = v44;
LABEL_27:
  swift_bridgeObjectRelease();
  if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
    goto LABEL_62;
  v29 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    v46 = v29;
    sub_23E36F660(&v46);
    if (v10)
      goto LABEL_67;
    swift_bridgeObjectRelease();
    v19 = v46;
    LODWORD(v16) = v46 < 0 || (v46 & 0x4000000000000000) != 0;
    if ((_DWORD)v16 != 1)
      break;
    v20 = (uint64_t)v18;
    swift_bridgeObjectRetain();
    v38 = sub_23E53803C();
    swift_release();
    swift_bridgeObjectRetain();
    v29 = sub_23E53803C();
    swift_release();
    if (v29 < 0)
    {
      __break(1u);
LABEL_67:
      swift_release();
      __break(1u);
LABEL_68:
      v19 = (uint64_t)v18;
      v18 = (void *)v20;
      if ((v19 & 0xC000000000000001) == 0)
        goto LABEL_42;
      goto LABEL_39;
    }
    if (v38 >= 1)
      v39 = 1;
    else
      v39 = v38;
    if (v38 < 0)
      v29 = 1;
    else
      v29 = v39;
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    v18 = (void *)v19;
    swift_release();
    if (v10 >= v29)
      goto LABEL_68;
    __break(1u);
LABEL_62:
    v40 = swift_bridgeObjectRetain();
    v29 = (uint64_t)sub_23E24A4C4(v40);
    swift_bridgeObjectRelease();
  }
  if (*(uint64_t *)(v46 + 16) >= 1)
    v29 = 1;
  else
    v29 = *(_QWORD *)(v46 + 16);
  if ((v46 & 0xC000000000000001) == 0)
    goto LABEL_42;
LABEL_39:
  if (v29)
  {
    v30 = 0;
    do
    {
      v31 = v30 + 1;
      sub_23E537E98();
      v30 = v31;
    }
    while (v29 != v31);
  }
LABEL_42:
  if (!(_DWORD)v16)
  {
    v10 = 0;
    v7 = v19 + 32;
    v21 = (2 * v29) | 1;
    if ((v21 & 1) != 0)
      goto LABEL_47;
LABEL_46:
    v4 = sub_23E24A334(v19, v7, v10, v21);

    swift_unknownObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain();
  v32 = sub_23E538048();
  v7 = v33;
  v10 = v34;
  v21 = v35;
  swift_release_n();
  v19 = v32;
  if ((v21 & 1) == 0)
    goto LABEL_46;
LABEL_47:
  sub_23E538378();
  swift_unknownObjectRetain_n();
  v36 = swift_dynamicCastClass();
  if (!v36)
  {
    swift_unknownObjectRelease();
    v36 = MEMORY[0x24BEE4AF8];
  }
  v37 = *(_QWORD *)(v36 + 16);
  swift_release();
  if (__OFSUB__(v21 >> 1, v10))
    goto LABEL_64;
  if (v37 != (v21 >> 1) - v10)
  {
LABEL_65:
    swift_unknownObjectRelease();
    goto LABEL_46;
  }
  v4 = swift_dynamicCastClass();

  swift_unknownObjectRelease();
  if (!v4)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v4;
}

uint64_t CoordinationDataModel.register(for:isRemoval:withManagers:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 112) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_23E36839C()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E368404()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 72) = *v2;
  v4 = v3;
  return swift_task_switch();
}

uint64_t sub_23E368474()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = objc_msgSend(v1, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v4 = sub_23E5377F0();

    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v2;
    v6 = sub_23E206BB0(sub_23E2553E8, v5, v4);
    *(_QWORD *)(v0 + 80) = v6;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v6)
    {
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v7;
      *v7 = v0;
      v7[1] = sub_23E36865C;
      return sub_23E368838((uint64_t)v6, *(_BYTE *)(v0 + 112), *(_QWORD *)(v0 + 48));
    }
    v9 = *(_QWORD *)(v0 + 40);
    v10 = objc_msgSend(*(id *)(v0 + 72), sel_mediaSystems);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
    v11 = sub_23E5377F0();

    v12 = swift_task_alloc();
    *(_QWORD *)(v12 + 16) = v9;
    v13 = sub_23E206BB0(sub_23E2553E8, v12, v11);
    *(_QWORD *)(v0 + 96) = v13;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v13)
    {
      v14 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v14;
      *v14 = v0;
      v14[1] = sub_23E3686E4;
      return sub_23E368CCC((uint64_t)v13, *(_BYTE *)(v0 + 112), *(_QWORD *)(v0 + 48));
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36865C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3686B0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3686E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E368738()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CoordinationDataModel.update(for:isRemoval:withManagers:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23D584;
  return sub_23E368838(a1, a2, a3);
}

{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23D584;
  return sub_23E368CCC(a1, a2, a3);
}

uint64_t sub_23E368838(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 280) = a2;
  *(_QWORD *)(v4 + 96) = a1;
  v5 = sub_23E536F80();
  *(_QWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 136) = swift_task_alloc();
  *(_QWORD *)(v4 + 144) = type metadata accessor for CoordinationSnapshot.UpdateType();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  *(_QWORD *)(v4 + 184) = v7;
  *(_QWORD *)(v4 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  sub_23E5378F8();
  *(_QWORD *)(v4 + 208) = sub_23E5378EC();
  *(_QWORD *)(v4 + 216) = sub_23E5378B0();
  *(_QWORD *)(v4 + 224) = v8;
  return swift_task_switch();
}

uint64_t sub_23E368950()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t inited;
  id v4;
  _QWORD *v5;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(unsigned __int8 *)(v0 + 280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v2 = *(void **)(v0 + 96);
  inited = swift_initStackObject();
  if (v1 == 1)
  {
    *(_QWORD *)(v0 + 232) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23E539640;
    *(_QWORD *)(inited + 32) = v2;
    v9 = inited;
    sub_23E537808();
    *(_QWORD *)(v0 + 240) = v9;
    v4 = v2;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v5;
    *v5 = v0;
    v5[1] = sub_23E368A78;
    return sub_23E3692FC(v9);
  }
  else
  {
    *(_QWORD *)(v0 + 256) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23E539640;
    *(_QWORD *)(inited + 32) = v2;
    v10 = inited;
    sub_23E537808();
    *(_QWORD *)(v0 + 264) = v10;
    v7 = v2;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v8;
    *v8 = v0;
    v8[1] = sub_23E368C78;
    return sub_23E367514(v10, *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_23E368A78()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E368ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(uint64_t **)(v0 + 152);
  v15 = v4;
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v8 = *(void **)(v0 + 96);
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v9, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E539650;
  v12 = objc_msgSend(v8, sel_uniqueIdentifier);
  sub_23E536F68();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v11 + v10, v6, v14);
  *v5 = v11;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E368C78()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E368CCC(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_BYTE *)(v4 + 280) = a2;
  *(_QWORD *)(v4 + 96) = a1;
  v5 = sub_23E536F80();
  *(_QWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 136) = swift_task_alloc();
  *(_QWORD *)(v4 + 144) = type metadata accessor for CoordinationSnapshot.UpdateType();
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  *(_QWORD *)(v4 + 184) = v7;
  *(_QWORD *)(v4 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  sub_23E5378F8();
  *(_QWORD *)(v4 + 208) = sub_23E5378EC();
  *(_QWORD *)(v4 + 216) = sub_23E5378B0();
  *(_QWORD *)(v4 + 224) = v8;
  return swift_task_switch();
}

uint64_t sub_23E368DE4()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t inited;
  id v4;
  _QWORD *v5;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(unsigned __int8 *)(v0 + 280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v2 = *(void **)(v0 + 96);
  inited = swift_initStackObject();
  if (v1 == 1)
  {
    *(_QWORD *)(v0 + 232) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23E539640;
    *(_QWORD *)(inited + 32) = v2;
    v9 = inited;
    sub_23E537808();
    *(_QWORD *)(v0 + 240) = v9;
    v4 = v2;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v5;
    *v5 = v0;
    v5[1] = sub_23E368F0C;
    return sub_23E36945C(v9);
  }
  else
  {
    *(_QWORD *)(v0 + 256) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23E539640;
    *(_QWORD *)(inited + 32) = v2;
    v10 = inited;
    sub_23E537808();
    *(_QWORD *)(v0 + 264) = v10;
    v7 = v2;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v8;
    *v8 = v0;
    v8[1] = sub_23E369104;
    return sub_23E366B78(v10, *(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_23E368F0C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E368F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(uint64_t **)(v0 + 152);
  v15 = v3;
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v8 = *(void **)(v0 + 96);
  v9 = __swift_project_value_buffer(v4, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E539650;
  v12 = objc_msgSend(v8, sel_uniqueIdentifier);
  sub_23E536F68();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v11 + v10, v6, v14);
  *v5 = v11;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E369104()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E369158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(uint64_t **)(v0 + 152);
  v15 = v3;
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 120);
  v8 = *(void **)(v0 + 96);
  v9 = __swift_project_value_buffer(v4, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E539650;
  v12 = objc_msgSend(v8, sel_uniqueIdentifier);
  sub_23E536F68();

  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v11 + v10, v6, v14);
  *v5 = v11;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3692FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  sub_23E5378F8();
  v2[4] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E369368()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v2 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v6 = *(_QWORD *)(v0 + 16) + 32;
    do
    {
      if (v5)
        v7 = (id)MEMORY[0x24264F148](v4, *(_QWORD *)(v0 + 16));
      else
        v7 = *(id *)(v6 + 8 * v4);
      v8 = v7;
      v9 = *(_QWORD *)(v0 + 24);
      ++v4;
      v10 = v7;
      sub_23E36A5D0(&v10, v9);

    }
    while (v2 != v4);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E36945C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  sub_23E5378F8();
  v2[4] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3694C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[87] = v3;
  v4[86] = a3;
  v4[85] = a2;
  v4[84] = a1;
  v5 = sub_23E536F80();
  v4[88] = v5;
  v4[89] = *(_QWORD *)(v5 - 8);
  v4[90] = swift_task_alloc();
  v4[91] = swift_task_alloc();
  sub_23E5378F8();
  v4[92] = sub_23E5378EC();
  v4[93] = sub_23E5378B0();
  v4[94] = v6;
  return swift_task_switch();
}

uint64_t sub_23E36957C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _UNKNOWN **v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _UNKNOWN **v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  NSObject *v54;
  os_log_type_t v55;
  _BOOL4 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v73;
  unint64_t v74;
  _QWORD *v75;
  NSObject *log;
  uint64_t v77;
  void (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 *v91;
  uint64_t v92;
  _OWORD *v93;
  uint64_t v94;
  uint64_t v95;
  __int128 *v96;
  uint64_t v97;
  __int128 *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  void *v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108[2];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[18];

  v1 = *(_QWORD *)(v0 + 680);
  if (v1)
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    if (v1 >> 62)
      goto LABEL_53;
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
      swift_bridgeObjectRetain();
      while (1)
      {
        v114 = v2;
        sub_23E36F660(&v114);
        v4 = v114;
        if (qword_256D3ED18 != -1)
          swift_once();
        v5 = sub_23E5371A8();
        __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
        swift_retain_n();
        v6 = sub_23E537190();
        v7 = sub_23E537AFC();
        if (os_log_type_enabled(v6, v7))
        {
          v8 = (uint8_t *)swift_slowAlloc();
          v105 = swift_slowAlloc();
          v114 = v105;
          *(_DWORD *)v8 = 136315138;
          v9 = sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
          v10 = swift_retain();
          v11 = MEMORY[0x24264EA94](v10, v9);
          v13 = v12;
          swift_release();
          *(_QWORD *)(v0 + 664) = sub_23E1FD768(v11, v13, &v114);
          sub_23E537CF4();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_23E1DF000, v6, v7, "sortedAccessories: %s", v8, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v105, -1, -1);
          MEMORY[0x24264FEBC](v8, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
        {
          swift_retain();
          result = sub_23E53803C();
          if (!result)
          {
LABEL_58:
            swift_release_n();
            break;
          }
        }
        else
        {
          v14 = *(_QWORD *)(v4 + 16);
          result = swift_retain();
          if (!v14)
            goto LABEL_58;
        }
        if ((v4 & 0xC000000000000001) != 0)
        {
          v16 = (id)MEMORY[0x24264F148](0, v4);
        }
        else
        {
          if (!*(_QWORD *)(v4 + 16))
          {
            __break(1u);
            return result;
          }
          v16 = *(id *)(v4 + 32);
        }
        v17 = v16;
        swift_release();
        *(_QWORD *)(v0 + 760) = v17;
        v18 = *(_QWORD *)(v0 + 696) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)v18 + 16))
        {
          v19 = *(_QWORD *)(v0 + 672);
          swift_bridgeObjectRetain();
          sub_23E1E3300(v19);
          if ((v20 & 1) != 0)
          {
            swift_bridgeObjectRelease();

            swift_release();
            break;
          }
          swift_bridgeObjectRelease();
        }
        v86 = (uint64_t *)v18;
        v88 = v0 + 96;
        v91 = (__int128 *)(v0 + 16);
        v100 = v0 + 296;
        v102 = v0 + 256;
        v96 = (__int128 *)(v0 + 416);
        v104 = (_QWORD *)(v0 + 456);
        v106 = v17;
        v98 = (__int128 *)(v0 + 496);
        v93 = (_OWORD *)(v0 + 376);
        v84 = (_QWORD *)(v0 + 536);
        v21 = *(_QWORD *)(v0 + 680) & 0xC000000000000001;
        swift_bridgeObjectRetain();
        v22 = 0;
        while (1)
        {
          v23 = v21 ? (id)MEMORY[0x24264F148](v22, v1) : *(id *)(v1 + 8 * v22 + 32);
          v24 = v23;
          v25 = v22 + 1;
          if (__OFADD__(v22, 1))
            break;
          v26 = objc_msgSend(v23, sel_isReachable);

          if (!v26)
          {
            v27 = 2;
LABEL_29:
            *(_QWORD *)(v0 + 768) = v27;
            v28 = *(_QWORD *)(v0 + 688);
            swift_bridgeObjectRelease();
            sub_23E1E7C20(v28, v88, &qword_256D44470);
            if (*(_QWORD *)(v0 + 120))
            {
              sub_23E1E6C84((__int128 *)(v0 + 136), v0 + 216);
              __swift_destroy_boxed_opaque_existential_0(v88);
              if (*(_QWORD *)(v0 + 240))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
                v29 = type metadata accessor for MockTimerManager();
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v30 = *(id *)(v0 + 656);
                  v31 = &off_250EEBD00;
                  goto LABEL_36;
                }
LABEL_35:
                v32 = objc_allocWithZone((Class)type metadata accessor for _TimerConnectionProvider());
                v33 = v17;
                v34 = objc_msgSend(v32, sel_init);
                v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE19E60]), sel_initForAccessory_withConnectionProvider_, v33, v34);

                v29 = sub_23E1E335C(0, &qword_256D44478);
                v31 = &protocol witness table for COTimerManager;
LABEL_36:
                v35 = *(_QWORD *)(v0 + 688);
                *(_QWORD *)(v0 + 200) = v29;
                *(_QWORD *)(v0 + 208) = v31;
                *(_QWORD *)(v0 + 176) = v30;
                sub_23E1E4E3C(v0 + 176, v102, &qword_256D44460);
                sub_23E1E7C20(v35, (uint64_t)v91, &qword_256D44470);
                if (*(_QWORD *)(v0 + 40))
                {
                  sub_23E1E6C84(v91, (uint64_t)v93);
                  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
                  if (*(_QWORD *)(v0 + 400))
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
                    v36 = type metadata accessor for MockAlarmManager();
                    if ((swift_dynamicCast() & 1) != 0)
                    {
                      v37 = *(id *)(v0 + 648);
                      v38 = &off_250EEFFD0;
                      goto LABEL_43;
                    }
LABEL_42:
                    v39 = objc_allocWithZone((Class)type metadata accessor for _AlarmConnectionProvider());
                    v40 = v17;
                    v41 = objc_msgSend(v39, sel_init);
                    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE19DE8]), sel_initForAccessory_withConnectionProvider_, v40, v41);

                    v36 = sub_23E1E335C(0, &qword_256D44480);
                    v38 = &protocol witness table for COAlarmManager;
LABEL_43:
                    *(_QWORD *)(v0 + 360) = v36;
                    *(_QWORD *)(v0 + 368) = v38;
                    *(_QWORD *)(v0 + 336) = v37;
                    sub_23E1E4E3C(v0 + 336, v100, &qword_256D40C68);
                    sub_23E1E7C20(v102, (uint64_t)v96, &qword_256D44460);
                    if (*(_QWORD *)(v0 + 440))
                    {
                      sub_23E1E6C84(v96, (uint64_t)v104);
                      sub_23E1E7C20(v100, (uint64_t)v98, &qword_256D40C68);
                      if (*(_QWORD *)(v0 + 520))
                      {
                        v42 = *(_QWORD *)(v0 + 728);
                        v43 = *(_QWORD *)(v0 + 712);
                        v44 = *(_QWORD *)(v0 + 704);
                        v45 = *(_QWORD *)(v0 + 672);
                        sub_23E1E6C84(v98, (uint64_t)v84);
                        sub_23E36AAD8(v108, &v114, v104, v84, v45, v106);
                        v46 = v108[1];
                        v47 = v108[0];
                        *(_QWORD *)(v0 + 776) = v108[0];
                        v92 = v46;
                        *(_QWORD *)(v0 + 784) = v46;
                        v48 = v110;
                        v89 = v110;
                        v90 = v109;
                        *(_QWORD *)(v0 + 792) = v109;
                        *(_QWORD *)(v0 + 800) = v48;
                        v49 = v112;
                        v85 = v111;
                        *(_QWORD *)(v0 + 808) = v111;
                        *(_QWORD *)(v0 + 816) = v49;
                        v101 = v113;
                        v103 = v49;
                        *(_QWORD *)(v0 + 824) = v113;
                        v50 = v115;
                        v97 = v115;
                        v99 = v114;
                        *(_QWORD *)(v0 + 832) = v114;
                        *(_QWORD *)(v0 + 840) = v50;
                        v51 = v117;
                        v94 = v117;
                        v95 = v116;
                        *(_QWORD *)(v0 + 848) = v116;
                        *(_QWORD *)(v0 + 856) = v51;
                        v52 = v119;
                        v83 = v118;
                        *(_QWORD *)(v0 + 864) = v118;
                        *(_QWORD *)(v0 + 872) = v52;
                        v80 = v120;
                        v81 = v52;
                        *(_QWORD *)(v0 + 880) = v120;
                        v53 = *(void (**)(void))(v43 + 16);
                        ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v42, v45, v44);
                        sub_23E223038((id)v27);
                        swift_retain();
                        sub_23E223038((id)v27);
                        v54 = sub_23E537190();
                        v55 = sub_23E537B20();
                        v56 = os_log_type_enabled(v54, v55);
                        v57 = *(_QWORD *)(v0 + 728);
                        v58 = *(_QWORD *)(v0 + 712);
                        v59 = *(_QWORD *)(v0 + 704);
                        if (v56)
                        {
                          log = v54;
                          v60 = swift_slowAlloc();
                          v75 = (_QWORD *)swift_slowAlloc();
                          v77 = swift_slowAlloc();
                          v114 = v77;
                          *(_DWORD *)v60 = 136315650;
                          v79 = v47;
                          v61 = sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
                          v62 = swift_retain();
                          v63 = MEMORY[0x24264EA94](v62, v61);
                          v78 = v53;
                          v65 = v64;
                          swift_release();
                          *(_QWORD *)(v0 + 624) = sub_23E1FD768(v63, v65, &v114);
                          sub_23E537CF4();
                          swift_bridgeObjectRelease();
                          swift_release_n();
                          *(_WORD *)(v60 + 12) = 2080;
                          sub_23E288764();
                          v66 = sub_23E538318();
                          *(_QWORD *)(v0 + 632) = sub_23E1FD768(v66, v67, &v114);
                          v47 = v79;
                          sub_23E537CF4();
                          swift_bridgeObjectRelease();
                          v107 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
                          v107(v57, v59);
                          *(_WORD *)(v60 + 22) = 2112;
                          sub_23E370A4C();
                          swift_allocError();
                          *v68 = v27;
                          sub_23E223038((id)v27);
                          v69 = _swift_stdlib_bridgeErrorToNSError();
                          *(_QWORD *)(v0 + 640) = v69;
                          sub_23E537CF4();
                          *v75 = v69;
                          v53 = v78;
                          sub_23E223048((id)v27);
                          sub_23E223048((id)v27);
                          _os_log_impl(&dword_23E1DF000, log, v55, "start listening to %s for %s with error: %@", (uint8_t *)v60, 0x20u);
                          __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
                          swift_arrayDestroy();
                          MEMORY[0x24264FEBC](v75, -1, -1);
                          swift_arrayDestroy();
                          MEMORY[0x24264FEBC](v77, -1, -1);
                          MEMORY[0x24264FEBC](v60, -1, -1);

                        }
                        else
                        {
                          swift_release_n();
                          v107 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
                          v107(v57, v59);
                          sub_23E223048((id)v27);
                          sub_23E223048((id)v27);

                        }
                        v82 = *(_QWORD *)(v0 + 720);
                        v87 = *(_QWORD *)(v0 + 704);
                        v53();
                        swift_beginAccess();
                        sub_23E223038((id)v27);
                        sub_23E223038((id)v27);
                        swift_unknownObjectRetain();
                        swift_retain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_retain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        swift_unknownObjectRetain();
                        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                        v114 = *v86;
                        *v86 = 0x8000000000000000;
                        v121[0] = v99;
                        v121[1] = v97;
                        v121[2] = v95;
                        v121[3] = v94;
                        v121[4] = v83;
                        v121[5] = v81;
                        v121[6] = v80;
                        v121[7] = v47;
                        v121[8] = v92;
                        v121[9] = v90;
                        v121[10] = v89;
                        v121[11] = v85;
                        v121[12] = v103;
                        v121[13] = v101;
                        v121[14] = v27;
                        v121[15] = v27;
                        sub_23E21BB80(v121, v82, isUniquelyReferenced_nonNull_native);
                        *v86 = v114;
                        swift_bridgeObjectRelease();
                        v107(v82, v87);
                        swift_endAccess();
                        v73 = (_QWORD *)swift_task_alloc();
                        *(_QWORD *)(v0 + 888) = v73;
                        *v73 = v0;
                        v73[1] = sub_23E36A30C;
                        return sub_23E37057C((uint64_t)v104, (uint64_t)v106);
                      }
                      swift_release();

                      sub_23E223048((id)v27);
                      swift_release();
                      __swift_destroy_boxed_opaque_existential_0((uint64_t)v104);
                      v70 = &qword_256D40C68;
                      sub_23E1E7C64(v100, &qword_256D40C68);
                      sub_23E1E7C64(v102, &qword_256D44460);
                      v71 = v0 + 496;
                    }
                    else
                    {
                      swift_release();

                      sub_23E223048((id)v27);
                      swift_release();
                      sub_23E1E7C64(v100, &qword_256D40C68);
                      v70 = &qword_256D44460;
                      sub_23E1E7C64(v102, &qword_256D44460);
                      v71 = v0 + 416;
                    }
                    sub_23E1E7C64(v71, v70);
                    goto LABEL_56;
                  }
                }
                else
                {
                  sub_23E1E7C64((uint64_t)v91, &qword_256D44470);
                  *v93 = 0u;
                  *(_OWORD *)(v0 + 392) = 0u;
                  *(_QWORD *)(v0 + 408) = 0;
                }
                sub_23E1E7C64((uint64_t)v93, &qword_256D40C68);
                goto LABEL_42;
              }
            }
            else
            {
              sub_23E1E7C64(v88, &qword_256D44470);
              *(_OWORD *)(v0 + 216) = 0u;
              *(_OWORD *)(v0 + 232) = 0u;
              *(_QWORD *)(v0 + 248) = 0;
            }
            sub_23E1E7C64(v0 + 216, &qword_256D44460);
            goto LABEL_35;
          }
          ++v22;
          if (v25 == v3)
          {
            v27 = 0;
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_53:
        swift_bridgeObjectRetain();
        v3 = sub_23E53803C();
        swift_bridgeObjectRelease();
        if (!v3)
          break;
        v74 = swift_bridgeObjectRetain();
        v2 = (uint64_t)sub_23E24A4C4(v74);
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_release();
LABEL_56:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36A30C(char a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v1;
  *(_BYTE *)(v4 + 912) = a1;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 896) = v2;
  *v2 = v4;
  v2[1] = sub_23E36A384;
  return sub_23E3707C4(v4 + 536, *(_QWORD *)(v4 + 760));
}

uint64_t sub_23E36A384(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *v1;
  v4 = *(_BYTE *)(*v1 + 912);
  v5 = *v1;
  swift_task_dealloc();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 904) = v6;
  *v6 = v5;
  v6[1] = sub_23E36A408;
  return sub_23E36B468(*(_QWORD *)(v3 + 672), v4, a1 & 1);
}

uint64_t sub_23E36A408()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36A458()
{
  uint64_t v0;
  void *v1;
  void *v3;

  v3 = *(void **)(v0 + 768);
  v1 = *(void **)(v0 + 760);
  swift_release();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23E223048(v3);
  __swift_destroy_boxed_opaque_existential_0(v0 + 536);
  __swift_destroy_boxed_opaque_existential_0(v0 + 456);
  sub_23E1E7C64(v0 + 296, &qword_256D40C68);
  sub_23E1E7C64(v0 + 256, &qword_256D44460);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36A5D0(id *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  id v46;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56[16];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[168];
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  id v69;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v48 - v10;
  v69 = *a1;
  v12 = objc_msgSend(v69, sel_uniqueIdentifier);
  sub_23E536F68();

  v13 = (uint64_t *)(a2 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  v14 = *v13;
  if (!*(_QWORD *)(*v13 + 16))
    goto LABEL_8;
  swift_bridgeObjectRetain();
  v15 = sub_23E1E3300((uint64_t)v11);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v45 = *(void (**)(char *, uint64_t))(v6 + 8);
    v45(v11, v5);
    v30 = v69;
    goto LABEL_11;
  }
  v51 = a2;
  v52 = v2;
  v17 = (__int128 *)(*(_QWORD *)(v14 + 56) + (v15 << 7));
  v19 = v17[2];
  v18 = v17[3];
  v20 = v17[1];
  v57 = *v17;
  v58 = v20;
  v59 = v19;
  v60 = v18;
  v21 = v17[4];
  v22 = v17[5];
  v23 = v17[7];
  v63 = v17[6];
  v64 = v23;
  v61 = v21;
  v62 = v22;
  sub_23E223058((uint64_t)&v57);
  swift_bridgeObjectRelease();
  v54 = *(void (**)(char *, uint64_t))(v6 + 8);
  v54(v11, v5);
  *(_OWORD *)&v65[152] = v57;
  v66 = v58;
  v67 = v59;
  v68 = v60;
  sub_23E3664F0();
  v24 = *((_QWORD *)&v60 + 1);
  v25 = v61;
  v53 = v5;
  v26 = *((_QWORD *)&v61 + 1);
  v27 = v62;
  v28 = *((_QWORD *)&v63 + 1);
  v50 = v63;
  sub_23E36F36C(0x800000023E568830);
  v28 += 16;
  sub_23E3702E0(v24, v28);
  sub_23E3702E0(v25, v28);
  v29 = v26;
  v5 = v53;
  sub_23E3702E0(v29, v28);
  sub_23E3702E0(v27, v28);
  sub_23E3702E0(*((uint64_t *)&v27 + 1), v28);
  sub_23E3702E0(v50, v28);
  v30 = v69;
  v31 = objc_msgSend(v69, sel_uniqueIdentifier);
  sub_23E536F68();

  swift_beginAccess();
  sub_23E2DA658((uint64_t)v9, v56);
  v54(v9, v5);
  sub_23E1E4E3C((uint64_t)v56, (uint64_t)v65, &qword_256D41F70);
  swift_endAccess();
  sub_23E370418((uint64_t)v65);
  if (qword_256D3ED18 != -1)
    swift_once();
  v32 = sub_23E5371A8();
  __swift_project_value_buffer(v32, (uint64_t)qword_256D40BD0);
  v33 = v30;
  v34 = sub_23E537190();
  v35 = sub_23E537B20();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v56[0] = v50;
    v49 = v36;
    *(_DWORD *)v36 = 136315138;
    v37 = objc_msgSend(v33, sel_description, v36 + 4);
    v38 = sub_23E53755C();
    v40 = v39;

    v41 = v38;
    v5 = v53;
    v55 = sub_23E1FD768(v41, v40, v56);
    sub_23E537CF4();

    v30 = v69;
    swift_bridgeObjectRelease();
    v42 = v35;
    v43 = v49;
    _os_log_impl(&dword_23E1DF000, v34, v42, "unregistering for %s", v49, 0xCu);
    v44 = v50;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v44, -1, -1);
    MEMORY[0x24264FEBC](v43, -1, -1);

    sub_23E223150((uint64_t)&v57);
  }
  else
  {

    sub_23E223150((uint64_t)&v57);
  }
  v45 = v54;
LABEL_11:
  v46 = objc_msgSend(v30, sel_uniqueIdentifier);
  sub_23E536F68();

  swift_beginAccess();
  sub_23E2DA644((uint64_t)v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_23E2DA630((uint64_t)v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v45)(v9, v5);
}

uint64_t sub_23E36AAD8(uint64_t *a1, uint64_t *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  __int128 v27[2];

  v22 = sub_23E36AE38(a3, a5, MEMORY[0x24BE19DA8], (uint64_t)&unk_250EEA0E0, (uint64_t)sub_23E371870);
  v20 = sub_23E36AE38(a3, a5, MEMORY[0x24BE19DC0], (uint64_t)&unk_250EEA090, (uint64_t)sub_23E371794);
  v18 = sub_23E36AE38(a3, a5, MEMORY[0x24BE19DD0], (uint64_t)&unk_250EEA040, (uint64_t)sub_23E371780);
  v25 = a6;
  v12 = sub_23E36AFB0(a3, a5, a6, MEMORY[0x24BE19D60], (uint64_t)&unk_250EE9FF0, (uint64_t)sub_23E371554);
  v13 = sub_23E36AFB0(a3, a5, a6, MEMORY[0x24BE19D88], (uint64_t)&unk_250EE9FA0, (uint64_t)sub_23E3713A4);
  v23 = sub_23E36AE38(a3, a5, MEMORY[0x24BE19D68], (uint64_t)&unk_250EE9F50, (uint64_t)sub_23E3712E8);
  sub_23E1FF9C8((uint64_t)a3, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D444D0);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_23E1E6C84(v27, v26 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v24 = sub_23E36B150(a4, a5, MEMORY[0x24BE19BC8], (uint64_t)&unk_250EE9F00, (uint64_t)sub_23E3712BC);
  v21 = sub_23E36B150(a4, a5, MEMORY[0x24BE19BE0], (uint64_t)&unk_250EE9EB0, (uint64_t)sub_23E371200);
  v19 = sub_23E36B150(a4, a5, MEMORY[0x24BE19BF8], (uint64_t)&unk_250EE9E60, (uint64_t)sub_23E371144);
  v17 = sub_23E36B2C8(a4, a5, v25, MEMORY[0x24BE19C00], (uint64_t)&unk_250EE9E10, (uint64_t)sub_23E370D4C);
  v14 = sub_23E36B2C8(a4, a5, v25, MEMORY[0x24BE19C30], (uint64_t)&unk_250EE9DC0, (uint64_t)sub_23E370BB4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23E1FF9C8((uint64_t)a4, (uint64_t)v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D444D8);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  result = sub_23E1E6C84(v27, v15 + 16);
  *a1 = v22;
  a1[1] = v20;
  a1[2] = v18;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v23;
  a1[6] = v26;
  *a2 = v24;
  a2[1] = v21;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v14;
  a2[5] = 0;
  a2[6] = v15;
  return result;
}

uint64_t sub_23E36AE38(_QWORD *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;

  v24 = a5;
  v23[1] = a4;
  v7 = v5;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = a1[3];
  v14 = a1[4];
  v23[2] = __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = *a3;
  v23[0] = *(_QWORD *)(v7 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v19 = *(uint64_t (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48);
  v20 = v15;
  swift_retain();
  v21 = v19(v20, v23[0], v24, v18, v13, v14);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_23E36AFB0(_QWORD *a1, uint64_t a2, void *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  __int128 v33[2];

  v31 = a3;
  v32 = a6;
  v27 = a2;
  v28 = a5;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v30 = __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = *a4;
  v29 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_23E1FF9C8((uint64_t)a1, (uint64_t)v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  sub_23E1E6C84(v33, v19 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, v9);
  v20 = v31;
  *(_QWORD *)(v19 + v18) = v31;
  v21 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48);
  v22 = v15;
  swift_retain();
  v23 = v20;
  v24 = v21(v22, v29, v32, v19, v13, v14);
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_23E36B150(_QWORD *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;

  v24 = a5;
  v23[1] = a4;
  v7 = v5;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = a1[3];
  v14 = a1[4];
  v23[2] = __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = *a3;
  v23[0] = *(_QWORD *)(v7 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v19 = *(uint64_t (**)(id, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 64);
  v20 = v15;
  swift_retain();
  v21 = v19(v20, v23[0], v24, v18, v13, v14);
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_23E36B2C8(_QWORD *a1, uint64_t a2, void *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  __int128 v33[2];

  v31 = a3;
  v32 = a6;
  v27 = a2;
  v28 = a5;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v30 = __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = *a4;
  v29 = *(_QWORD *)(v6 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_23E1FF9C8((uint64_t)a1, (uint64_t)v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  sub_23E1E6C84(v33, v19 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, v9);
  v20 = v31;
  *(_QWORD *)(v19 + v18) = v31;
  v21 = *(uint64_t (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 64);
  v22 = v15;
  swift_retain();
  v23 = v20;
  v24 = v21(v22, v29, v32, v19, v13, v14);
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_23E36B468(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 + 473) = a3;
  *(_BYTE *)(v4 + 472) = a2;
  *(_QWORD *)(v4 + 360) = a1;
  *(_QWORD *)(v4 + 368) = v3;
  v5 = sub_23E536F80();
  *(_QWORD *)(v4 + 376) = v5;
  *(_QWORD *)(v4 + 384) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 392) = swift_task_alloc();
  sub_23E5378F8();
  *(_QWORD *)(v4 + 400) = sub_23E5378EC();
  *(_QWORD *)(v4 + 408) = sub_23E5378B0();
  *(_QWORD *)(v4 + 416) = v6;
  return swift_task_switch();
}

unint64_t sub_23E36B504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t result;
  unint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  *(_QWORD *)(v0 + 424) = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (!*(_QWORD *)(*v3 + 16))
    goto LABEL_13;
  v5 = *(_QWORD *)(v0 + 360);
  swift_bridgeObjectRetain();
  v6 = sub_23E1E3300(v5);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 360);
  v9 = (__int128 *)(*(_QWORD *)(v4 + 56) + (v6 << 7));
  v10 = v9[3];
  v12 = *v9;
  v11 = v9[1];
  *(_OWORD *)(v0 + 48) = v9[2];
  *(_OWORD *)(v0 + 64) = v10;
  *(_OWORD *)(v0 + 16) = v12;
  *(_OWORD *)(v0 + 32) = v11;
  v13 = v9[7];
  v15 = v9[4];
  v14 = v9[5];
  *(_OWORD *)(v0 + 112) = v9[6];
  *(_OWORD *)(v0 + 128) = v13;
  *(_OWORD *)(v0 + 80) = v15;
  *(_OWORD *)(v0 + 96) = v14;
  sub_23E223058(v0 + 16);
  swift_bridgeObjectRelease();
  result = sub_23E367DC0(v8);
  v17 = result;
  if (result >> 62)
  {
    result = sub_23E53803C();
    if (result)
      goto LABEL_5;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_23E223150(v0 + 16);
    goto LABEL_13;
  }
LABEL_5:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x24264F148](0, v17);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v18 = *(id *)(v17 + 32);
LABEL_8:
    *(_QWORD *)(v0 + 432) = v18;
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 440) = v19;
    *(_QWORD *)(v0 + 344) = v19;
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 448) = v20;
    *v20 = v0;
    v20[1] = sub_23E36B6D4;
    return sub_23E36BDAC(v0 + 312, *(_QWORD *)(v0 + 360), *(_BYTE *)(v0 + 473), (uint64_t *)(v0 + 344));
  }
  __break(1u);
  return result;
}

uint64_t sub_23E36B6D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(v1 + 456) = v3;
  *(_QWORD *)(v1 + 320) = v3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 464) = v4;
  *v4 = v2;
  v4[1] = sub_23E36B760;
  return sub_23E36BDAC(v1 + 328, *(_QWORD *)(v1 + 360), *(_BYTE *)(v1 + 472), (uint64_t *)(v1 + 320));
}

uint64_t sub_23E36B760()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36B7AC()
{
  uint64_t v0;
  id *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id *v45;
  id *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[17];

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  v45 = (id *)(v0 + 312);
  v46 = (id *)(v0 + 328);
  v1 = (id *)(qword_254333F18 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (!*v1 || (objc_msgSend(*v1, sel_hasOptedToHH2) & 1) != 0)
    goto LABEL_17;
  v2 = *v45;
  if (*v45 == (id)4)
  {
    sub_23E223048((id)4);
    v3 = 4;
LABEL_10:
    sub_23E223048((id)v3);
    goto LABEL_11;
  }
  sub_23E223038(*v45);
  sub_23E223048(v2);
  sub_23E223048((id)4);
  if (!v2)
  {
    sub_23E223048(0);
    v3 = 0;
    goto LABEL_10;
  }
  sub_23E223048(v2);
  sub_23E223048(0);
  *v45 = (id)5;
LABEL_11:
  v4 = *v46;
  if (*v46 == (id)4)
  {
    sub_23E223048((id)4);
    v5 = 4;
  }
  else
  {
    sub_23E223038(*v46);
    sub_23E223048(v4);
    sub_23E223048((id)4);
    if (v4)
    {
      sub_23E223048(v4);
      sub_23E223048(0);
      *v46 = (id)5;
      goto LABEL_17;
    }
    sub_23E223048(0);
    v5 = 0;
  }
  sub_23E223048((id)v5);
LABEL_17:
  if (qword_256D3ED18 != -1)
    swift_once();
  v6 = sub_23E5371A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_256D40BD0);
  v7 = sub_23E537190();
  v8 = sub_23E537B20();
  v49 = v7;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412546;
    swift_beginAccess();
    v11 = *(void **)(v0 + 312);
    sub_23E370A4C();
    swift_allocError();
    *v12 = v11;
    sub_23E223038(v11);
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 336) = v13;
    sub_23E537CF4();
    *v10 = v13;
    *(_WORD *)(v9 + 12) = 2112;
    swift_beginAccess();
    v14 = *(void **)(v0 + 328);
    swift_allocError();
    *v15 = v14;
    sub_23E223038(v14);
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 352) = v16;
    sub_23E537CF4();
    v10[1] = v16;
    _os_log_impl(&dword_23E1DF000, v49, v8, "updated alarm connection error state %@ timer connection error state %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  v17 = *(void **)(v0 + 456);
  v18 = *(void **)(v0 + 440);
  v33 = v17;
  v19 = *(_QWORD *)(v0 + 424);
  v21 = *(_QWORD *)(v0 + 384);
  v20 = *(_QWORD *)(v0 + 392);
  v43 = v20;
  v44 = *(void **)(v0 + 432);
  v22 = *(_QWORD *)(v0 + 368);
  v23 = *(_QWORD *)(v0 + 376);
  v24 = *(_QWORD *)(v0 + 360);

  v41 = (uint64_t *)(v22 + v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v24, v23);
  sub_23E223058(v0 + 16);
  sub_23E223048(v17);
  sub_23E223048(v18);
  v47 = *(_QWORD *)(v0 + 24);
  v48 = *(_QWORD *)(v0 + 32);
  v50 = *(_QWORD *)(v0 + 40);
  v34 = *(_QWORD *)(v0 + 16);
  v35 = *(_QWORD *)(v0 + 48);
  v36 = *(_QWORD *)(v0 + 56);
  v37 = *(_QWORD *)(v0 + 64);
  v39 = *(_QWORD *)(v0 + 80);
  v40 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 96);
  v38 = *(_QWORD *)(v0 + 88);
  v26 = *(_QWORD *)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 112);
  v42 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23E223058(v0 + 16);
  sub_23E223048(v33);
  sub_23E223048(v18);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_beginAccess();
  v28 = *(void **)(v0 + 312);
  swift_beginAccess();
  v29 = *(void **)(v0 + 328);
  swift_beginAccess();
  sub_23E223038(v28);
  sub_23E223038(v29);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31 = *v41;
  *v41 = 0x8000000000000000;
  v51 = v31;
  v52[0] = v34;
  v52[1] = v47;
  v52[2] = v48;
  v52[3] = v50;
  v52[4] = v35;
  v52[5] = v36;
  v52[6] = v37;
  v52[7] = v40;
  v52[8] = v39;
  v52[9] = v38;
  v52[10] = v25;
  v52[11] = v26;
  v52[12] = v27;
  v52[13] = v42;
  v52[14] = v28;
  v52[15] = v29;
  sub_23E21BB80(v52, v43, isUniquelyReferenced_nonNull_native);
  *v41 = v51;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v43, v23);
  swift_endAccess();

  sub_23E223150(v0 + 16);
  sub_23E223048(*(id *)(v0 + 328));
  sub_23E223048(*(id *)(v0 + 312));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36BDAC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 104) = a3;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a2;
  v6 = *a4;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 88) = v6;
  sub_23E5378F8();
  *(_QWORD *)(v5 + 96) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

void sub_23E36BE24()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  void *v5;
  char **v6;
  id v7;
  _QWORD *v8;
  id *v9;
  id v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id *v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  void *v55;
  void *v56;
  _QWORD *v57;
  id v58;
  void *v59;
  unsigned __int8 v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  void *v64;
  unint64_t v65;

  v2 = *(void **)(v0 + 72);
  swift_release();
  v3 = sub_23E367DC0((uint64_t)v2);
  if (!(v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_29:
    v24 = *(_QWORD **)(v0 + 64);
    swift_bridgeObjectRelease();
    *v24 = 0;
    goto LABEL_82;
  }
  if (!sub_23E53803C())
    goto LABEL_29;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24264F148](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v4 = *(id *)(v3 + 32);
  }
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = &selRef_homeManager_didAddHome_;
  v7 = objc_msgSend(v5, sel_siriEndpointProfile);
  if (!v7)
  {
LABEL_46:
    v34 = (id *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
    swift_beginAccess();
    if (!*v34)
      goto LABEL_61;
    v35 = *(_QWORD *)(v0 + 72);
    v36 = objc_msgSend(*v34, sel_mediaSystems);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
    v37 = sub_23E5377F0();

    v38 = swift_task_alloc();
    *(_QWORD *)(v38 + 16) = v35;
    v23 = (unint64_t)sub_23E206BB0(sub_23E2553E8, v38, v37);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (!v23)
    {
LABEL_61:
      v50 = objc_msgSend(v5, sel_softwareVersion);
      if (v50)
      {
        v51 = v50;
        v52 = (uint64_t)objc_msgSend(v50, sel_majorVersion);

        if (v52 <= 17)
        {
          v53 = *(_QWORD **)(v0 + 64);

LABEL_78:
          *v53 = 4;
          goto LABEL_82;
        }
      }
      v54 = *(unsigned __int8 *)(v0 + 104);
      if (v54 == 2)
      {
LABEL_67:
        v56 = *(void **)(v0 + 88);
        v57 = *(_QWORD **)(v0 + 64);

        *v57 = v56;
        sub_23E223038(v56);
        goto LABEL_82;
      }
      v55 = *(void **)(v0 + 88);
      if (v55 == (void *)2)
      {
        sub_23E223048((id)2);
        sub_23E223048((id)2);
        goto LABEL_67;
      }
      sub_23E223038(*(id *)(v0 + 88));
      sub_23E223048(v55);
      sub_23E223048((id)2);
      if ((v54 & 1) == 0)
      {
        v58 = objc_msgSend(v5, v6[240]);
        if (v58)
        {
          v59 = v58;
          v60 = objc_msgSend(v58, sel_isNeedsOnboarding);

          if ((v60 & 1) != 0)
          {
            v61 = 0;
LABEL_81:
            **(_QWORD **)(v0 + 64) = v61;
            goto LABEL_82;
          }
        }
        else
        {

        }
        v61 = 3;
        goto LABEL_81;
      }

      v61 = 0;
      goto LABEL_81;
    }
    v39 = objc_msgSend((id)v23, sel_components);
    sub_23E1E335C(0, (unint64_t *)&qword_256D3FCD0);
    v27 = sub_23E5377F0();

    v64 = v5;
    if (!(v27 >> 62))
    {
      v40 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v40)
      {
LABEL_60:
        swift_bridgeObjectRelease_n();

        v5 = v64;
        v6 = &selRef_homeManager_didAddHome_;
        goto LABEL_61;
      }
LABEL_50:
      v41 = 0;
      while (1)
      {
        if ((v27 & 0xC000000000000001) != 0)
          v42 = (id)MEMORY[0x24264F148](v41, v27);
        else
          v42 = *(id *)(v27 + 8 * v41 + 32);
        v43 = v42;
        v44 = v41 + 1;
        if (__OFADD__(v41, 1))
          goto LABEL_84;
        v45 = objc_msgSend(v42, sel_mediaProfile);
        if (!v45)
          break;
        v46 = v45;
        v47 = objc_msgSend(v45, sel_accessory);

        if (!v47)
          break;
        v48 = objc_msgSend(v47, sel_softwareVersion);

        if (!v48)
          break;
        v49 = (uint64_t)objc_msgSend(v48, sel_majorVersion);

        if (v49 < 18)
        {
          swift_bridgeObjectRelease();

          goto LABEL_77;
        }
        ++v41;
        if (v44 == v40)
          goto LABEL_60;
      }

      swift_bridgeObjectRelease();
LABEL_77:
      v53 = *(_QWORD **)(v0 + 64);
      swift_bridgeObjectRelease();

      goto LABEL_78;
    }
LABEL_85:
    swift_bridgeObjectRetain();
    v40 = sub_23E53803C();
    if (!v40)
      goto LABEL_60;
    goto LABEL_50;
  }
  v2 = v7;
  if ((objc_msgSend(v7, sel_isNeedsOnboarding) & 1) != 0)
  {
    v8 = *(_QWORD **)(v0 + 64);

    *v8 = v2;
    goto LABEL_82;
  }
  v9 = (id *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  if (!*v9)
  {
LABEL_45:

    goto LABEL_46;
  }
  v64 = v5;
  v10 = objc_msgSend(*v9, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v1 = sub_23E5377F0();

  v65 = MEMORY[0x24BEE4AF8];
  if (v1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v11 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v63 = v2;
    if (v11)
      goto LABEL_12;
LABEL_33:
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_87;
    goto LABEL_34;
  }
  v11 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v63 = v2;
  if (!v11)
    goto LABEL_33;
LABEL_12:
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v11; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0)
      v13 = (id)MEMORY[0x24264F148](i, v1);
    else
      v13 = *(id *)(v1 + 8 * i + 32);
    v14 = v13;
    v15 = objc_msgSend(v13, sel_category);
    v16 = objc_msgSend(v15, sel_categoryType);

    v17 = sub_23E53755C();
    v19 = v18;

    if (v17 == sub_23E53755C() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
LABEL_15:
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      sub_23E537F28();
      continue;
    }
    v22 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_15;

  }
  swift_bridgeObjectRelease();
  v23 = v65;
  if ((v65 & 0x8000000000000000) == 0)
  {
LABEL_34:
    if ((v23 & 0x4000000000000000) != 0)
      goto LABEL_87;
    v25 = *(_QWORD *)(v23 + 16);
    swift_retain();
    if (v25)
      goto LABEL_36;
LABEL_44:
    swift_release_n();
    v2 = v63;
    v5 = v64;
    v6 = &selRef_homeManager_didAddHome_;
    goto LABEL_45;
  }
LABEL_87:
  swift_retain();
  v25 = sub_23E53803C();
  if (!v25)
    goto LABEL_44;
LABEL_36:
  v26 = 0;
  v27 = v23 & 0xC000000000000001;
  while (2)
  {
    if (v27)
      v28 = (id)MEMORY[0x24264F148](v26, v23);
    else
      v28 = *(id *)(v23 + 8 * v26 + 32);
    v29 = v28;
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    v31 = objc_msgSend(v28, sel_softwareVersion);
    if (v31)
    {
      v32 = v31;
      v33 = (uint64_t)objc_msgSend(v31, sel_majorVersion);

      if (v33 < 18)
        goto LABEL_74;
      ++v26;
      if (v30 == v25)
        goto LABEL_44;
      continue;
    }
    break;
  }

LABEL_74:
  swift_release();

  v62 = *(_QWORD **)(v0 + 64);
  swift_release();

  *v62 = 4;
LABEL_82:
  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_23E36C5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23E36C5E0()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE **)(v0 + 16);
  v1 = *(_QWORD **)(v0 + 24);
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(v3, v4) & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36C63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23E36C654()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE **)(v0 + 16);
  v1 = *(_QWORD **)(v0 + 24);
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  *v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4) & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E36C6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x24264FF70](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23E36CDB0(a1, a3, "Received new timer %s", (uint64_t)&unk_250EEA108, (uint64_t)&unk_256D44568, (void (*)(uint64_t))sub_23E365AC8);

  }
}

void sub_23E36C73C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a2 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x24264FF70](v7);
  if (v8)
  {
    v9 = (void *)v8;
    a4(a1, a3);

  }
}

uint64_t sub_23E36C7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD v39[2];
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t updated;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a2;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v48 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23E536F80();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v39[1] = v6;
  v41 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536A94();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_256D40BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v14 = sub_23E537190();
  v15 = sub_23E537B20();
  if (os_log_type_enabled(v14, v15))
  {
    v39[0] = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v52 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = sub_23E536A70();
    v51 = sub_23E1FD768(v18, v19, &v52);
    a1 = v39[0];
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_23E1DF000, v14, v15, "Received timer removal %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  result = sub_23E370F00(a1, v50, MEMORY[0x24BE67800], &qword_256D44408);
  if (result)
  {
    v21 = result;
    v22 = sub_23E537934();
    v23 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v40, 1, 1, v22);
    v24 = v41;
    v25 = v42;
    v26 = v50;
    v27 = v44;
    v39[0] = *(_QWORD *)(v42 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v39[0])(v41, v50, v44);
    sub_23E5378F8();
    swift_bridgeObjectRetain();
    v28 = v43;
    v29 = sub_23E5378EC();
    v30 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v31 = swift_allocObject();
    v32 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = v32;
    *(_BYTE *)(v31 + 32) = 1;
    *(_QWORD *)(v31 + 40) = v21;
    *(_QWORD *)(v31 + 48) = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v30, v24, v27);
    sub_23E26D014(v23, (uint64_t)&unk_256D44560, v31);
    v33 = swift_release();
    MEMORY[0x24BDAC7A8](v33);
    v39[-2] = v26;
    v34 = sub_23E474340((void (*)(uint64_t))sub_23E365AC8, (uint64_t)&v39[-4], v21);
    swift_bridgeObjectRelease();
    if (qword_254332250 != -1)
      swift_once();
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
    __swift_project_value_buffer(v35, (uint64_t)qword_254332420);
    v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
    v37 = v48;
    ((void (*)(char *, uint64_t, uint64_t))v39[0])(v48, v50, v27);
    *(_QWORD *)&v37[v36] = v34;
    swift_storeEnumTagMultiPayload();
    v38 = v45;
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v38, v47);
  }
  return result;
}

void sub_23E36CC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x24264FF70](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23E36CDB0(a1, a3, "Received firing timer state dismissed. Removing %s", (uint64_t)&unk_250EE9F78, (uint64_t)&unk_256D44528, (void (*)(uint64_t))sub_23E364F7C);

  }
}

void sub_23E36CD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x24264FF70](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23E36CDB0(a1, a3, "Received updated timer %s", (uint64_t)&unk_250EEA068, (uint64_t)&unk_256D44558, (void (*)(uint64_t))sub_23E365AC8);

  }
}

uint64_t sub_23E36CDB0(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  const char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t updated;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];

  v53 = a5;
  v54 = a6;
  v52 = a4;
  v61 = a2;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v58 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23E536F80();
  v50 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v47 = v11;
  v49 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E536A94();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v18 = sub_23E5371A8();
  __swift_project_value_buffer(v18, (uint64_t)qword_256D40BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v19 = sub_23E537190();
  v20 = sub_23E537B20();
  if (os_log_type_enabled(v19, v20))
  {
    v46 = (void (*)(char *, uint64_t, uint64_t))a1;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v63[0] = v22;
    v45 = a3;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_23E536A70();
    v62 = sub_23E1FD768(v23, v24, v63);
    a1 = (uint64_t)v46;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _os_log_impl(&dword_23E1DF000, v19, v20, v45, v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  result = sub_23E370F00(a1, v61, MEMORY[0x24BE67800], &qword_256D44408);
  v26 = v60;
  if (result)
  {
    v27 = result;
    v28 = sub_23E537934();
    v29 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v48, 1, 1, v28);
    v30 = v49;
    v31 = v50;
    v32 = v61;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v46(v49, v61, v26);
    sub_23E5378F8();
    swift_bridgeObjectRetain();
    v33 = v51;
    v34 = sub_23E5378EC();
    v35 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v36 = swift_allocObject();
    v37 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v36 + 16) = v34;
    *(_QWORD *)(v36 + 24) = v37;
    *(_BYTE *)(v36 + 32) = 0;
    *(_QWORD *)(v36 + 40) = v27;
    *(_QWORD *)(v36 + 48) = v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v36 + v35, v30, v26);
    sub_23E26D014(v29, v53, v36);
    v38 = swift_release();
    MEMORY[0x24BDAC7A8](v38);
    *(&v44 - 2) = v32;
    v39 = sub_23E474340(v54, (uint64_t)(&v44 - 4), v27);
    swift_bridgeObjectRelease();
    if (qword_254332250 != -1)
      swift_once();
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
    __swift_project_value_buffer(v40, (uint64_t)qword_254332420);
    v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
    v42 = v58;
    v46(v58, v61, v26);
    *(_QWORD *)&v42[v41] = v39;
    swift_storeEnumTagMultiPayload();
    v43 = v55;
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v43, v57);
  }
  return result;
}

void sub_23E36D294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x24264FF70](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23E36D320(a1, a3, "Received new alarm %s", (uint64_t)&unk_250EE9F28, (uint64_t)&unk_256D44520, (void (*)(uint64_t))sub_23E3712CC);

  }
}

uint64_t sub_23E36D320(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  const char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t updated;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];

  v53 = a5;
  v54 = a6;
  v52 = a4;
  v61 = a2;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v58 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23E536F80();
  v50 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v47 = v11;
  v49 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E536A94();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v18 = sub_23E5371A8();
  __swift_project_value_buffer(v18, (uint64_t)qword_256D40BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v19 = sub_23E537190();
  v20 = sub_23E537B20();
  if (os_log_type_enabled(v19, v20))
  {
    v46 = (void (*)(char *, uint64_t, uint64_t))a1;
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v63[0] = v22;
    v45 = a3;
    *(_DWORD *)v21 = 136315138;
    v23 = sub_23E536A70();
    v62 = sub_23E1FD768(v23, v24, v63);
    a1 = (uint64_t)v46;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _os_log_impl(&dword_23E1DF000, v19, v20, v45, v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }

  result = sub_23E370F00(a1, v61, MEMORY[0x24BE67778], &qword_256D443F0);
  v26 = v60;
  if (result)
  {
    v27 = result;
    v28 = sub_23E537934();
    v29 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v48, 1, 1, v28);
    v30 = v49;
    v31 = v50;
    v32 = v61;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v46(v49, v61, v26);
    sub_23E5378F8();
    swift_bridgeObjectRetain();
    v33 = v51;
    v34 = sub_23E5378EC();
    v35 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v36 = swift_allocObject();
    v37 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v36 + 16) = v34;
    *(_QWORD *)(v36 + 24) = v37;
    *(_BYTE *)(v36 + 32) = 0;
    *(_QWORD *)(v36 + 40) = v27;
    *(_QWORD *)(v36 + 48) = v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v36 + v35, v30, v26);
    sub_23E26D014(v29, v53, v36);
    v38 = swift_release();
    MEMORY[0x24BDAC7A8](v38);
    *(&v44 - 2) = v32;
    v39 = sub_23E474BAC(v54, (uint64_t)(&v44 - 4), v27);
    swift_bridgeObjectRelease();
    if (qword_254332250 != -1)
      swift_once();
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
    __swift_project_value_buffer(v40, (uint64_t)qword_254332420);
    v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
    v42 = v58;
    v46(v58, v61, v26);
    *(_QWORD *)&v42[v41] = v39;
    swift_storeEnumTagMultiPayload();
    v43 = v55;
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v43, v57);
  }
  return result;
}

uint64_t sub_23E36D804(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD v39[2];
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t updated;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a2;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v48 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23E536F80();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v39[1] = v6;
  v41 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536A94();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_256D40BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v14 = sub_23E537190();
  v15 = sub_23E537B20();
  if (os_log_type_enabled(v14, v15))
  {
    v39[0] = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v52 = v17;
    *(_DWORD *)v16 = 136315138;
    v18 = sub_23E536A70();
    v51 = sub_23E1FD768(v18, v19, &v52);
    a1 = v39[0];
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl(&dword_23E1DF000, v14, v15, "Received alarm removal %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  result = sub_23E370F00(a1, v50, MEMORY[0x24BE67778], &qword_256D443F0);
  if (result)
  {
    v21 = result;
    v22 = sub_23E537934();
    v23 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v40, 1, 1, v22);
    v24 = v41;
    v25 = v42;
    v26 = v50;
    v27 = v44;
    v39[0] = *(_QWORD *)(v42 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v39[0])(v41, v50, v44);
    sub_23E5378F8();
    swift_bridgeObjectRetain();
    v28 = v43;
    v29 = sub_23E5378EC();
    v30 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v31 = swift_allocObject();
    v32 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v31 + 16) = v29;
    *(_QWORD *)(v31 + 24) = v32;
    *(_BYTE *)(v31 + 32) = 1;
    *(_QWORD *)(v31 + 40) = v21;
    *(_QWORD *)(v31 + 48) = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v30, v24, v27);
    sub_23E26D014(v23, (uint64_t)&unk_256D44518, v31);
    v33 = swift_release();
    MEMORY[0x24BDAC7A8](v33);
    v39[-2] = v26;
    v34 = sub_23E474BAC((void (*)(uint64_t))sub_23E371968, (uint64_t)&v39[-4], v21);
    swift_bridgeObjectRelease();
    if (qword_254332250 != -1)
      swift_once();
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
    __swift_project_value_buffer(v35, (uint64_t)qword_254332420);
    v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
    v37 = v48;
    ((void (*)(char *, uint64_t, uint64_t))v39[0])(v48, v50, v27);
    *(_QWORD *)&v37[v36] = v34;
    swift_storeEnumTagMultiPayload();
    v38 = v45;
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v38, v47);
  }
  return result;
}

void sub_23E36DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x24264FF70](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_23E36D320(a1, a3, "Received updated alarm %s", (uint64_t)&unk_250EE9E88, (uint64_t)&unk_256D44508, (void (*)(uint64_t))sub_23E371968);

  }
}

void sub_23E36DD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(_BYTE *, char *), uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v15 = a2 + 16;
  swift_beginAccess();
  v16 = MEMORY[0x24264FF70](v15);
  if (v16)
  {
    v17 = (void *)v16;
    sub_23E36DE20(a1, a3, a4, a5, a6, a7, a8);

  }
}

uint64_t sub_23E36DE20(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(_BYTE *, char *), uint64_t a7)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t ObjectType;
  void (*v38)(_BYTE *, char *);
  uint64_t v39;
  _BYTE v40[40];

  v38 = a6;
  v39 = a7;
  v35 = a4;
  v36 = a5;
  v32 = a3;
  v33 = a2;
  v31 = a1;
  ObjectType = swift_getObjectType();
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536A94();
  v12 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v28 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v16;
  v17 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v8);
  sub_23E1FF9C8(v33, (uint64_t)v40);
  sub_23E5378F8();
  v18 = v7;
  v35 = v35;
  v19 = sub_23E5378EC();
  v20 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = (v13 + *(unsigned __int8 *)(v9 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v20], v28, v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v24[v21], v30, v29);
  *(_QWORD *)&v24[v22] = v35;
  v38(v40, &v24[v23]);
  *(_QWORD *)&v24[(v23 + 47) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  sub_23E26D014((uint64_t)v34, v39, (uint64_t)v24);
  return swift_release();
}

void sub_23E36E070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(_BYTE *, char *), uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v14 = a2 + 16;
  swift_beginAccess();
  v15 = MEMORY[0x24264FF70](v14);
  if (v15)
  {
    v16 = (void *)v15;
    sub_23E36E10C(a3, a4, a5, a6, a7, a8);

  }
}

uint64_t sub_23E36E10C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(_BYTE *, char *), uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  void (*v32)(_BYTE *, char *);
  uint64_t v33;
  _BYTE v34[40];

  v32 = a5;
  v33 = a6;
  v30 = a4;
  v7 = v6;
  ObjectType = swift_getObjectType();
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  v29 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  sub_23E1FF9C8(a1, (uint64_t)v34);
  sub_23E5378F8();
  v19 = v7;
  v28 = a3;
  v20 = sub_23E5378EC();
  v21 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v22 = (v13 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 47) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  *((_QWORD *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v25;
  *((_QWORD *)v24 + 4) = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v21], v14, v29);
  v32(v34, &v24[v22]);
  *(_QWORD *)&v24[v23] = v28;
  *(_QWORD *)&v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  sub_23E26D014((uint64_t)v17, v33, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_23E36E2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v8[7] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v8[8] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v8[12] = v10;
  v8[13] = *(_QWORD *)(v10 - 8);
  v8[14] = swift_task_alloc();
  sub_23E5378F8();
  v8[15] = sub_23E5378EC();
  v8[16] = sub_23E5378B0();
  v8[17] = v11;
  return swift_task_switch();
}

uint64_t sub_23E36E3D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *v14;

  if (qword_256D3ED18 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256D40BD0);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Received timer CanDispatchDidUpdate change", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }
  v6 = v0[3];
  v5 = v0[4];

  v7 = sub_23E37100C(v6, v5);
  if (v7 == 2
    || (v8 = v7, (v9 = objc_msgSend((id)v0[5], sel_siriEndpointProfile)) != 0)
    && (v10 = v9, v11 = objc_msgSend(v9, sel_isNeedsOnboarding), v10, (v11 & 1) != 0))
  {
    v12 = (_QWORD *)swift_task_alloc();
    v0[19] = v12;
    *v12 = v0;
    v12[1] = sub_23E36E5C8;
    return sub_23E37057C(v0[6], v0[5]);
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc();
    v0[18] = v14;
    *v14 = v0;
    v14[1] = sub_23E36E57C;
    return sub_23E36B468(v0[4], v8 & 1, 2);
  }
}

uint64_t sub_23E36E57C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36E5C8(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v6 = *v1;
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 160) = v4;
  *v4 = v6;
  v4[1] = sub_23E36E640;
  return sub_23E36B468(*(_QWORD *)(v3 + 32), a1 & 1, 2);
}

uint64_t sub_23E36E640()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36E68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v7[7] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v7[11] = v9;
  v7[12] = *(_QWORD *)(v9 - 8);
  v7[13] = swift_task_alloc();
  sub_23E5378F8();
  v7[14] = sub_23E5378EC();
  v7[15] = sub_23E5378B0();
  v7[16] = v10;
  return swift_task_switch();
}

uint64_t sub_23E36E778()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256D3ED18 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256D40BD0);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Received timer state reset change", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[17] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E36E878;
  return sub_23E37057C(v0[4], v0[5]);
}

uint64_t sub_23E36E878(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v6 = *v1;
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 144) = v4;
  *v4 = v6;
  v4[1] = sub_23E36E8EC;
  return sub_23E36B468(*(_QWORD *)(v3 + 24), a1 & 1, 2);
}

uint64_t sub_23E36E8EC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36E938@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  v12 = __swift_project_boxed_opaque_existential_1(a1, v10);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_23E4A16D8((uint64_t)v14, (uint64_t)v9, v10, v11, a3);
  v16 = type metadata accessor for StaticAlarm();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
}

uint64_t sub_23E36EA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v8[7] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v8[8] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v8[9] = v9;
  v8[10] = *(_QWORD *)(v9 - 8);
  v8[11] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v8[12] = v10;
  v8[13] = *(_QWORD *)(v10 - 8);
  v8[14] = swift_task_alloc();
  sub_23E5378F8();
  v8[15] = sub_23E5378EC();
  v8[16] = sub_23E5378B0();
  v8[17] = v11;
  return swift_task_switch();
}

uint64_t sub_23E36EB54()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *v14;

  if (qword_256D3ED18 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256D40BD0);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Received alarm CanDispatchDidUpdate change", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }
  v6 = v0[3];
  v5 = v0[4];

  v7 = sub_23E37100C(v6, v5);
  if (v7 == 2
    || (v8 = v7, (v9 = objc_msgSend((id)v0[5], sel_siriEndpointProfile)) != 0)
    && (v10 = v9, v11 = objc_msgSend(v9, sel_isNeedsOnboarding), v10, (v11 & 1) != 0))
  {
    v12 = (_QWORD *)swift_task_alloc();
    v0[19] = v12;
    *v12 = v0;
    v12[1] = sub_23E36EEBC;
    return sub_23E3707C4(v0[6], v0[5]);
  }
  else
  {
    v14 = (_QWORD *)swift_task_alloc();
    v0[18] = v14;
    *v14 = v0;
    v14[1] = sub_23E36ECF8;
    return sub_23E36B468(v0[4], 2, v8 & 1);
  }
}

uint64_t sub_23E36ECF8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36ED44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(uint64_t **)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 32);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E539650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v12, v7);
  *v5 = v10;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36EEBC(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v6 = *v1;
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 160) = v4;
  *v4 = v6;
  v4[1] = sub_23E36E640;
  return sub_23E36B468(*(_QWORD *)(v3 + 32), 2, a1 & 1);
}

uint64_t sub_23E36EF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v7[7] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v7[8] = v8;
  v7[9] = *(_QWORD *)(v8 - 8);
  v7[10] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v7[11] = v9;
  v7[12] = *(_QWORD *)(v9 - 8);
  v7[13] = swift_task_alloc();
  sub_23E5378F8();
  v7[14] = sub_23E5378EC();
  v7[15] = sub_23E5378B0();
  v7[16] = v10;
  return swift_task_switch();
}

uint64_t sub_23E36F020()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256D3ED18 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_256D40BD0);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Received alarm state reset change", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[17] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E36F120;
  return sub_23E3707C4(v0[4], v0[5]);
}

uint64_t sub_23E36F120(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;

  v3 = *v1;
  v6 = *v1;
  swift_task_dealloc();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 144) = v4;
  *v4 = v6;
  v4[1] = sub_23E36F194;
  return sub_23E36B468(*(_QWORD *)(v3 + 24), 2, a1 & 1);
}

uint64_t sub_23E36F194()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36F1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(uint64_t **)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 24);
  v6 = __swift_project_value_buffer(v4, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E539650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + v9, v12, v7);
  *v5 = v10;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E36F358()
{
  sub_23E36F36C(0x800000023E568830);
}

void sub_23E36F36C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *oslog;
  uint64_t v15;

  v3 = MEMORY[0x24264FF70](v1 + 56);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_256D3ED18 != -1)
      swift_once();
    v5 = sub_23E5371A8();
    __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
    v6 = sub_23E537190();
    v7 = sub_23E537B20();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v15 = v9;
      *(_DWORD *)v8 = 136315138;
      sub_23E1FD768(0xD000000000000010, a1, &v15);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v6, v7, "cancel %s fetch", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);
    }

    objc_msgSend(v4, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  else
  {
    if (qword_256D3ED18 != -1)
      swift_once();
    v10 = sub_23E5371A8();
    __swift_project_value_buffer(v10, (uint64_t)qword_256D40BD0);
    oslog = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_23E1FD768(0xD000000000000010, a1, &v15);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, oslog, v11, "no %s fetch in flight", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_23E36F660(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23E530D40();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_23E36F6D8(v6);
  return sub_23E537F28();
}

void sub_23E36F6D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  unsigned int v26;
  BOOL v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  unsigned __int8 v42;
  void *v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  unint64_t v103;
  char *v104;
  char *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;

  v3 = a1[1];
  v4 = sub_23E53830C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_146;
    if (v3)
      sub_23E36FEBC(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_154;
  v6 = v4;
  v106 = a1;
  if (v3 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    v113 = MEMORY[0x24BEE4AF8];
    v111 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
      if (v13 >= 2)
      {
        v96 = *v106;
        do
        {
          v97 = v13 - 2;
          if (v13 < 2)
            goto LABEL_141;
          if (!v96)
            goto LABEL_153;
          v98 = (uint64_t)v9;
          v99 = *(_QWORD *)&v9[16 * v97 + 32];
          v100 = *(_QWORD *)&v9[16 * v13 + 24];
          sub_23E36FFAC((id *)(v96 + 8 * v99), (id *)(v96 + 8 * *(_QWORD *)&v9[16 * v13 + 16]), v96 + 8 * v100, v111);
          if (v1)
            break;
          if (v100 < v99)
            goto LABEL_142;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v101 = (char *)v98;
          else
            v101 = sub_23E530CC8(v98);
          if (v97 >= *((_QWORD *)v101 + 2))
            goto LABEL_143;
          v102 = &v101[16 * v97 + 32];
          *(_QWORD *)v102 = v99;
          *((_QWORD *)v102 + 1) = v100;
          v103 = *((_QWORD *)v101 + 2);
          if (v13 > v103)
            goto LABEL_144;
          v104 = v101;
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v103 - v13));
          v9 = v104;
          *((_QWORD *)v104 + 2) = v103 - 1;
          v13 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_123:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_23E537808();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v5 >> 1;
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v8 = sub_23E537844();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v111 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v113 = v8;
  }
  v108 = v6;
  v10 = 0;
  v11 = *a1;
  v107 = *a1 - 8;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v12 = &selRef_homeManager_didAddHome_;
  v110 = v3;
  v112 = *a1;
  while (1)
  {
    v14 = v10++;
    if (v10 >= v3)
      goto LABEL_42;
    v15 = v9;
    v16 = *(void **)(v11 + 8 * v14);
    v17 = *(id *)(v11 + 8 * v10);
    v18 = v16;
    if (!objc_msgSend(v17, v12[239]))
      break;
    v19 = objc_msgSend(v18, v12[239]);

    v20 = v19 ^ 1;
    v12 = &selRef_homeManager_didAddHome_;
    v21 = v14 + 2;
    v11 = v112;
    if (v14 + 2 < v110)
      goto LABEL_23;
LABEL_30:
    v9 = v15;
    v10 = v21;
    if (v20)
      goto LABEL_31;
LABEL_42:
    v33 = v110;
    if (v10 < v110)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_145;
      if (v10 - v14 < v108)
      {
        if (__OFADD__(v14, v108))
          goto LABEL_147;
        if (v14 + v108 < v110)
          v33 = v14 + v108;
        if (v33 < v14)
        {
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (v10 != v33)
        {
          v109 = v14;
          v105 = v9;
          v34 = v107 + 8 * v10;
          do
          {
            v35 = v33;
            v36 = *(void **)(v11 + 8 * v10);
            v37 = v109;
            v38 = v34;
            while (1)
            {
              v39 = *(void **)v38;
              v40 = v36;
              v41 = v39;
              if (!objc_msgSend(v40, v12[239]))
              {

                v11 = v112;
                goto LABEL_52;
              }
              v42 = objc_msgSend(v41, v12[239]);

              if ((v42 & 1) != 0)
                break;
              v11 = v112;
              if (!v112)
                goto LABEL_150;
              v43 = *(void **)v38;
              v36 = *(void **)(v38 + 8);
              *(_QWORD *)v38 = v36;
              *(_QWORD *)(v38 + 8) = v43;
              v38 -= 8;
              ++v37;
              v12 = &selRef_homeManager_didAddHome_;
              if (v10 == v37)
                goto LABEL_52;
            }
            v11 = v112;
            v12 = &selRef_homeManager_didAddHome_;
LABEL_52:
            ++v10;
            v34 += 8;
            v33 = v35;
          }
          while (v10 != v35);
          v10 = v35;
          v9 = v105;
          v14 = v109;
        }
      }
    }
    if (v10 < v14)
      goto LABEL_140;
    v44 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v9 = v44;
    else
      v9 = sub_23E530794(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
    v46 = *((_QWORD *)v9 + 2);
    v45 = *((_QWORD *)v9 + 3);
    v13 = v46 + 1;
    v11 = v112;
    if (v46 >= v45 >> 1)
    {
      v95 = sub_23E530794((char *)(v45 > 1), v46 + 1, 1, v9);
      v11 = v112;
      v9 = v95;
    }
    *((_QWORD *)v9 + 2) = v13;
    v47 = v9 + 32;
    v48 = &v9[16 * v46 + 32];
    *(_QWORD *)v48 = v14;
    *((_QWORD *)v48 + 1) = v10;
    if (v46)
    {
      while (1)
      {
        v49 = v13 - 1;
        if (v13 >= 4)
        {
          v54 = &v47[16 * v13];
          v55 = *((_QWORD *)v54 - 8);
          v56 = *((_QWORD *)v54 - 7);
          v60 = __OFSUB__(v56, v55);
          v57 = v56 - v55;
          if (v60)
            goto LABEL_129;
          v59 = *((_QWORD *)v54 - 6);
          v58 = *((_QWORD *)v54 - 5);
          v60 = __OFSUB__(v58, v59);
          v52 = v58 - v59;
          v53 = v60;
          if (v60)
            goto LABEL_130;
          v61 = v13 - 2;
          v62 = &v47[16 * v13 - 32];
          v64 = *(_QWORD *)v62;
          v63 = *((_QWORD *)v62 + 1);
          v60 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          if (v60)
            goto LABEL_132;
          v60 = __OFADD__(v52, v65);
          v66 = v52 + v65;
          if (v60)
            goto LABEL_135;
          if (v66 >= v57)
          {
            v84 = &v47[16 * v49];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v60 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v60)
              goto LABEL_139;
            v77 = v52 < v87;
            goto LABEL_98;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v78 = *((_QWORD *)v9 + 4);
            v79 = *((_QWORD *)v9 + 5);
            v60 = __OFSUB__(v79, v78);
            v71 = v79 - v78;
            v72 = v60;
            goto LABEL_92;
          }
          v51 = *((_QWORD *)v9 + 4);
          v50 = *((_QWORD *)v9 + 5);
          v60 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          v53 = v60;
        }
        if ((v53 & 1) != 0)
          goto LABEL_131;
        v61 = v13 - 2;
        v67 = &v47[16 * v13 - 32];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v70 = __OFSUB__(v68, v69);
        v71 = v68 - v69;
        v72 = v70;
        if (v70)
          goto LABEL_134;
        v73 = &v47[16 * v49];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v60 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v60)
          goto LABEL_137;
        if (__OFADD__(v71, v76))
          goto LABEL_138;
        if (v71 + v76 >= v52)
        {
          v77 = v52 < v76;
LABEL_98:
          if (v77)
            v49 = v61;
          goto LABEL_100;
        }
LABEL_92:
        if ((v72 & 1) != 0)
          goto LABEL_133;
        v80 = &v47[16 * v49];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v60 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v60)
          goto LABEL_136;
        if (v83 < v71)
          goto LABEL_14;
LABEL_100:
        v88 = v49 - 1;
        if (v49 - 1 >= v13)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v11)
          goto LABEL_151;
        v89 = v9;
        v90 = &v47[16 * v88];
        v91 = *(_QWORD *)v90;
        v92 = &v47[16 * v49];
        v93 = *((_QWORD *)v92 + 1);
        sub_23E36FFAC((id *)(v11 + 8 * *(_QWORD *)v90), (id *)(v11 + 8 * *(_QWORD *)v92), v11 + 8 * v93, v111);
        if (v1)
          goto LABEL_123;
        if (v93 < v91)
          goto LABEL_126;
        if (v49 > *((_QWORD *)v89 + 2))
          goto LABEL_127;
        *(_QWORD *)v90 = v91;
        *(_QWORD *)&v47[16 * v88 + 8] = v93;
        v94 = *((_QWORD *)v89 + 2);
        if (v49 >= v94)
          goto LABEL_128;
        v13 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        v9 = v89;
        *((_QWORD *)v89 + 2) = v94 - 1;
        v11 = v112;
        if (v94 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v3 = v110;
    v12 = &selRef_homeManager_didAddHome_;
    if (v10 >= v110)
      goto LABEL_110;
  }

  v21 = v14 + 2;
  if (v14 + 2 >= v110)
  {
    v10 = v14 + 2;
    v9 = v15;
    v11 = v112;
    goto LABEL_42;
  }
  v20 = 0;
  v11 = v112;
LABEL_23:
  while (2)
  {
    v23 = *(void **)(v11 + 8 * v10);
    v24 = *(id *)(v11 + 8 * v21);
    v25 = v23;
    if (!objc_msgSend(v24, v12[239]))
    {

      if ((v20 & 1) != 0)
      {
        v9 = v15;
        v11 = v112;
        if (v21 < v14)
          goto LABEL_149;
LABEL_34:
        if (v14 < v21)
        {
          v28 = (uint64_t *)(v107 + 8 * v21);
          v29 = v21;
          v30 = v14;
          v31 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v30 != --v29)
            {
              if (!v11)
                goto LABEL_152;
              v32 = *v31;
              *v31 = *v28;
              *v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
        v10 = v21;
        goto LABEL_42;
      }
      goto LABEL_22;
    }
    v26 = objc_msgSend(v25, v12[239]);

    v27 = v20 == v26;
    v12 = &selRef_homeManager_didAddHome_;
    if (!v27)
    {
LABEL_22:
      v22 = v21 + 1;
      v10 = v21;
      v21 = v22;
      v11 = v112;
      if (v22 >= v110)
      {
        v21 = v22;
        goto LABEL_30;
      }
      continue;
    }
    break;
  }
  v9 = v15;
  v11 = v112;
  v10 = v21;
  if (!v20)
    goto LABEL_42;
LABEL_31:
  if (v21 >= v14)
    goto LABEL_34;
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  sub_23E538000();
  __break(1u);
}

void sub_23E36FEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  unsigned __int8 v13;
  void *v14;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_6:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v9 = v6;
    while (1)
    {
      v10 = *(void **)v9;
      v11 = v7;
      v12 = v10;
      if (!objc_msgSend(v11, sel_isControllable))
      {

LABEL_5:
        ++v4;
        v6 += 8;
        if (v4 == a2)
          return;
        goto LABEL_6;
      }
      v13 = objc_msgSend(v12, sel_isControllable);

      if ((v13 & 1) != 0)
        goto LABEL_5;
      if (!v5)
        break;
      v14 = *(void **)v9;
      v7 = *(void **)(v9 + 8);
      *(_QWORD *)v9 = v7;
      *(_QWORD *)(v9 + 8) = v14;
      v9 -= 8;
      if (v4 == ++v8)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_23E36FFAC(id *__src, id *a2, unint64_t a3, void **a4)
{
  id *v5;
  id *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  char **v14;
  void **v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  unsigned __int8 v20;
  id *v21;
  void **v22;
  id *v23;
  id *v24;
  id *v25;
  id *v26;
  void *v27;
  id v28;
  id v29;
  unsigned __int8 v30;
  uint64_t result;
  id *v32;
  char *v34;
  void **v35;
  id *v36;

  v36 = __src;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v35 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_52;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v23 = &a4[v12];
    v34 = (char *)v23;
    v36 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_51:
      sub_23E5308A4(&v36, &v35, &v34);
      return 1;
    }
    v24 = (id *)(a3 - 8);
    v25 = v5;
    v32 = v6;
    while (1)
    {
      v26 = v24 + 1;
      v27 = *--v25;
      v28 = *(v23 - 1);
      v29 = v27;
      if (objc_msgSend(v28, sel_isControllable))
      {
        v30 = objc_msgSend(v29, sel_isControllable);

        if ((v30 & 1) == 0)
        {
          if (v26 != v5 || v24 >= v5)
            *v24 = *v25;
          v36 = v25;
          if (v25 <= v32)
            goto LABEL_51;
          goto LABEL_48;
        }
      }
      else
      {

      }
      v34 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23 || v26 != v23)
        *v24 = *(v23 - 1);
      v25 = v5;
      --v23;
      if (v5 <= v32)
        goto LABEL_51;
LABEL_48:
      --v24;
      v5 = v25;
      if (v23 <= a4)
        goto LABEL_51;
    }
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v34 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = &selRef_homeManager_didAddHome_;
      v15 = a4;
      while (1)
      {
        v16 = v6;
        v17 = *v15;
        v18 = *v5;
        v19 = v17;
        if (!objc_msgSend(v18, v14[239]))
          break;
        v20 = objc_msgSend(v19, v14[239]);

        if ((v20 & 1) != 0)
          goto LABEL_20;
        v21 = v5 + 1;
        v22 = v16;
        if (v16 >= v5 && v16 < v21)
        {
          v14 = &selRef_homeManager_didAddHome_;
          if (v16 != v5)
            *v16 = *v5;
          goto LABEL_24;
        }
        *v16 = *v5;
LABEL_23:
        v14 = &selRef_homeManager_didAddHome_;
LABEL_24:
        v6 = v22 + 1;
        if (v15 < v13)
        {
          v5 = v21;
          if ((unint64_t)v21 < a3)
            continue;
        }
        v36 = v6;
        goto LABEL_51;
      }

LABEL_20:
      v22 = v16;
      if (v16 != v15)
        *v16 = *v15;
      v35 = ++v15;
      v21 = v5;
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_52:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E3702E0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8[2];
  uint64_t v9;
  _QWORD v10[5];
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  if (result)
  {
    v3 = result;
    sub_23E1FF9C8(a2, (uint64_t)v10);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(v8, (uint64_t)v11);
      v4 = v12;
      v5 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(v3, v4, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    }
    else
    {
      v9 = 0;
      memset(v8, 0, sizeof(v8));
      sub_23E1E7C64((uint64_t)v8, &qword_256D40C68);
    }
    sub_23E1FF9C8(a2, (uint64_t)v11);
    v6 = v12;
    v7 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v10[3] = swift_getObjectType();
    v10[0] = v3;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 56))(v10, v6, v7);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  }
  return result;
}

uint64_t sub_23E370418(uint64_t a1)
{
  sub_23E370470(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(void **)(a1 + 112), *(void **)(a1 + 120));
  return a1;
}

void sub_23E370470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_23E223048(a15);
    sub_23E223048(a16);
  }
}

uint64_t sub_23E37057C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v2[9] = swift_task_alloc();
  sub_23E5378F8();
  v2[10] = sub_23E5378EC();
  v2[11] = sub_23E5378B0();
  v2[12] = v3;
  return swift_task_switch();
}

uint64_t sub_23E37060C()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_siriEndpointProfile);
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, sel_isNeedsOnboarding), v2, v3))
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 56);
    sub_23E53791C();
    v7 = sub_23E537934();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
    sub_23E1FF9C8(v6, v0 + 16);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    sub_23E1E6C84((__int128 *)(v0 + 16), v8 + 32);
    *(_QWORD *)(v0 + 104) = sub_23E2ABA20(v5, (uint64_t)&unk_256D444C8, v8);
    sub_23E1E7C64(v5, &qword_254334B40);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_23E370770;
    return sub_23E537994();
  }
}

uint64_t sub_23E370770()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3707C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v2[9] = swift_task_alloc();
  sub_23E5378F8();
  v2[10] = sub_23E5378EC();
  v2[11] = sub_23E5378B0();
  v2[12] = v3;
  return swift_task_switch();
}

uint64_t sub_23E370854()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = objc_msgSend(*(id *)(v0 + 64), sel_siriEndpointProfile);
  if (v1 && (v2 = v1, v3 = objc_msgSend(v1, sel_isNeedsOnboarding), v2, v3))
  {
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 56);
    sub_23E53791C();
    v7 = sub_23E537934();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
    sub_23E1FF9C8(v6, v0 + 16);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    sub_23E1E6C84((__int128 *)(v0 + 16), v8 + 32);
    *(_QWORD *)(v0 + 104) = sub_23E2ABA20(v5, (uint64_t)&unk_256D444B8, v8);
    sub_23E1E7C64(v5, &qword_254334B40);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_23E3709B8;
    return sub_23E537994();
  }
}

uint64_t sub_23E3709B8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E370A0C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 120);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

unint64_t sub_23E370A4C()
{
  unint64_t result;

  result = qword_256D444A0;
  if (!qword_256D444A0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CoordinationDataModel.Errors, &type metadata for CoordinationDataModel.Errors);
    atomic_store(result, &qword_256D444A0);
  }
  return result;
}

uint64_t sub_23E370A94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23D584;
  v4[2] = a1;
  v4[3] = v1 + 32;
  return swift_task_switch();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_23E370B28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23D584;
  v4[2] = a1;
  v4[3] = v1 + 32;
  return swift_task_switch();
}

uint64_t sub_23E370B8C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E370BB4(uint64_t a1)
{
  return sub_23E370D70(a1, (uint64_t)&unk_250EE9DE8, (uint64_t)sub_23E1E6C84, (uint64_t)&unk_256D444E8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t))sub_23E36E070);
}

uint64_t sub_23E370BDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v5;
  v11 = (uint64_t)v1 + v6;
  v12 = *(_QWORD *)((char *)v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23E23D584;
  return sub_23E36EF34(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_23E370D4C(uint64_t a1)
{
  return sub_23E370D70(a1, (uint64_t)&unk_250EE9E38, (uint64_t)sub_23E1E6C84, (uint64_t)&unk_256D444F8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t))sub_23E36DD7C);
}

uint64_t sub_23E370D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;

  v11 = *(_QWORD *)(sub_23E536F80() - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return a5(a1, *(_QWORD *)(v5 + 16), v5 + 24, v5 + v12, *(_QWORD *)(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)), a2, a3, a4);
}

uint64_t sub_23E370DFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_23E536A94() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_23E536F80() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = *(_QWORD *)((char *)v1 + v9);
  v14 = (uint64_t)v1 + v8;
  v15 = (uint64_t)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23E23D584;
  return sub_23E36EA60(a1, v10, v11, v12, (uint64_t)v1 + v5, v14, v13, v15);
}

uint64_t sub_23E370F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  _QWORD v10[5];
  __int128 v11;
  __int128 v12;

  v5 = sub_23E536A88();
  if (!v5)
  {
    v11 = 0u;
    v12 = 0u;
LABEL_11:
    sub_23E1E7C64((uint64_t)&v11, &qword_254332260);
    return 0;
  }
  v6 = v5;
  sub_23E53755C();
  sub_23E537E20();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_23E211498((uint64_t)v10), (v8 & 1) != 0))
  {
    sub_23E1EA57C(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
  }
  else
  {
    v11 = 0u;
    v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23E1FFD40((uint64_t)v10);
  if (!*((_QWORD *)&v12 + 1))
    goto LABEL_11;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  if ((swift_dynamicCast() & 1) != 0)
  {
    result = v10[0];
    if (*(_QWORD *)(v10[0] + 16))
      return result;
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_23E37100C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  v3 = sub_23E536A88();
  if (!v3)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_12:
    sub_23E1E7C64((uint64_t)&v13, &qword_254332260);
    return 2;
  }
  v4 = v3;
  sub_23E53755C();
  sub_23E537E20();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_23E211498((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_23E1EA57C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23E1FFD40((uint64_t)v12);
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44500);
  if ((swift_dynamicCast() & 1) == 0)
    return 2;
  v7 = v12[0];
  if (!*(_QWORD *)(v12[0] + 16) || (v8 = sub_23E1E3300(a2), (v9 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E371144(uint64_t a1)
{
  return sub_23E37187C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23E36DCF0);
}

uint64_t sub_23E371154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23E23D584;
  return sub_23E280EF8(a1, v5, v6, v7, v8, v9, v10);
}

void sub_23E371200(uint64_t a1)
{
  sub_23E3717A0(a1, (void (*)(uint64_t, uint64_t))sub_23E36D804);
}

uint64_t sub_23E371210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23E23C694;
  return sub_23E280EF8(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23E3712BC(uint64_t a1)
{
  return sub_23E37187C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23E36D294);
}

uint64_t sub_23E3712CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E36E938(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E3712E8(uint64_t a1)
{
  return sub_23E37187C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23E36CC98);
}

uint64_t sub_23E3712F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_BYTE *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v10 = v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23E23D584;
  return sub_23E2814F4(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23E3713A4(uint64_t a1)
{
  return sub_23E370D70(a1, (uint64_t)&unk_250EE9FC8, (uint64_t)sub_23E1E6C84, (uint64_t)&unk_256D44540, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t))sub_23E36E070);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);

  return swift_deallocObject();
}

uint64_t sub_23E37147C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v5;
  v11 = (uint64_t)v1 + v6;
  v12 = *(_QWORD *)((char *)v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23E23D584;
  return sub_23E36E68C(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_23E371554(uint64_t a1)
{
  return sub_23E370D70(a1, (uint64_t)&unk_250EEA018, (uint64_t)sub_23E1E6C84, (uint64_t)&unk_256D44550, (uint64_t (*)(uint64_t, _QWORD, uint64_t, unint64_t, _QWORD, uint64_t, uint64_t, uint64_t))sub_23E36DD7C);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_23E536A94();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  __swift_destroy_boxed_opaque_existential_0(v0 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_23E371678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_23E536A94() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_23E536F80() - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v1[2];
  v11 = v1[3];
  v12 = v1[4];
  v13 = *(_QWORD *)((char *)v1 + v9);
  v14 = (uint64_t)v1 + v8;
  v15 = (uint64_t)v1 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23E23D584;
  return sub_23E36E2E4(a1, v10, v11, v12, (uint64_t)v1 + v5, v14, v13, v15);
}

uint64_t sub_23E371780(uint64_t a1)
{
  return sub_23E37187C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23E36CD24);
}

void sub_23E371794(uint64_t a1)
{
  sub_23E3717A0(a1, (void (*)(uint64_t, uint64_t))sub_23E36C7AC);
}

void sub_23E3717A0(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  sub_23E36C73C(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E371870(uint64_t a1)
{
  return sub_23E37187C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_23E36C6B0);
}

uint64_t sub_23E37187C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4));
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E371968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E3712CC(a1, a2);
}

uint64_t StaticHome.home.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E371994()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E371A00()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E371A64()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E371AC4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E371B0C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E371B74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_homeFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticHome.actionSetsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.cameraProfilesSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.residentsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticHome.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticHome() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticHome.defaultRoom.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticHome();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 24), a1, type metadata accessor for StaticRoom);
}

uint64_t StaticHome.currentStaticUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticHome();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
}

uint64_t StaticHome.isUserAtHome.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 32));
}

uint64_t StaticHome.remoteAccessState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticHome();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticHome.nonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticHome();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t StaticHome.sidebarRoomsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.sectionsSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.servicesSortOrder.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.colorPickerFavorites.getter()
{
  type metadata accessor for StaticHome();
  return swift_bridgeObjectRetain();
}

uint64_t StaticHome.supportAutomaticSoftwareUpdate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 68));
}

uint64_t StaticHome.supportsResidentSelection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticHome() + 76));
}

uint64_t StaticHome.userSelectedResident.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticHome();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 80), a1, &qword_254333BF0);
}

uint64_t StaticHome.init(id:name:defaultRoom:currentStaticUser:isUserAtHome:remoteAccessState:nonResponsiveType:sidebarRoomsSortOrder:sectionsSortOrder:actionSetsSortOrder:servicesSortOrder:cameraProfilesSortOrder:colorPickerFavorites:supportAutomaticSoftwareUpdate:residentsSortOrder:supportsResidentSelection:userSelectedResident:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19)
{
  char v25;
  char v26;
  uint64_t v27;
  int *v28;
  _QWORD *v29;

  v25 = *a7;
  v26 = *a8;
  v27 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a9, a1, v27);
  v28 = (int *)type metadata accessor for StaticHome();
  v29 = (_QWORD *)(a9 + v28[5]);
  *v29 = a2;
  v29[1] = a3;
  sub_23E1E2FDC(a4, a9 + v28[6], type metadata accessor for StaticRoom);
  sub_23E1E2FDC(a5, a9 + v28[7], (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  *(_BYTE *)(a9 + v28[8]) = a6;
  *(_BYTE *)(a9 + v28[9]) = v25;
  *(_BYTE *)(a9 + v28[10]) = v26;
  *(_QWORD *)(a9 + v28[11]) = a10;
  *(_QWORD *)(a9 + v28[12]) = a11;
  *(_QWORD *)(a9 + v28[13]) = a12;
  *(_QWORD *)(a9 + v28[14]) = a13;
  *(_QWORD *)(a9 + v28[15]) = a14;
  *(_QWORD *)(a9 + v28[18]) = a17;
  *(_QWORD *)(a9 + v28[16]) = a15;
  *(_BYTE *)(a9 + v28[17]) = a16;
  *(_BYTE *)(a9 + v28[19]) = a18;
  return sub_23E376008(a19, a9 + v28[20]);
}

BOOL static StaticHome.RemoteAccessState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static StaticHome.NonResponsiveType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticHome.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for StaticResident();
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v10 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  StaticRoom.hash(into:)(a1);
  sub_23E5374D8();
  type metadata accessor for StaticUser();
  sub_23E5375EC();
  sub_23E5374D8();
  sub_23E538468();
  sub_23E538474();
  sub_23E538468();
  sub_23E538468();
  v11 = *(_QWORD *)(v1 + v10[11]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v11);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v2 + v10[12]);
  sub_23E538468();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = v12 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  v15 = *(_QWORD *)(v2 + v10[13]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v15);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v2 + v10[14]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v16);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v2 + v10[15]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v17);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v2 + v10[16]);
  swift_bridgeObjectRetain();
  sub_23E261A58(a1, v18);
  swift_bridgeObjectRelease();
  sub_23E538474();
  v19 = *(_QWORD *)(v2 + v10[18]);
  sub_23E538474();
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_23E26140C(a1, v19);
    swift_bridgeObjectRelease();
  }
  sub_23E538474();
  sub_23E1E7C20(v2 + v10[20], (uint64_t)v9, &qword_254333BF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v22) == 1)
    return sub_23E538474();
  sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  sub_23E538474();
  StaticResident.hash(into:)(a1);
  return sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E37241C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E372444 + 4 * byte_23E549490[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E372444()
{
  return 1701667182;
}

uint64_t sub_23E372454()
{
  return 0x52746C7561666564;
}

unint64_t sub_23E372474()
{
  return 0xD000000000000011;
}

unint64_t sub_23E372510()
{
  return 0xD000000000000017;
}

unint64_t sub_23E372528()
{
  return 0xD000000000000014;
}

unint64_t sub_23E372540()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_23E372558()
{
  return 0xD000000000000012;
}

unint64_t sub_23E372570()
{
  return 0xD000000000000019;
}

void sub_23E372588()
{
  JUMPOUT(0x23E37259CLL);
}

uint64_t sub_23E3725A8()
{
  unsigned __int8 *v0;

  return sub_23E37241C(*v0);
}

uint64_t sub_23E3725B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3785EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E3725D4(_BYTE *a1@<X8>)
{
  *a1 = 17;
}

uint64_t sub_23E3725E0()
{
  sub_23E376050();
  return sub_23E538570();
}

uint64_t sub_23E372608()
{
  sub_23E376050();
  return sub_23E53857C();
}

uint64_t StaticHome.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E376050();
  sub_23E5384EC();
  LOBYTE(v12) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticHome();
    LOBYTE(v12) = 1;
    sub_23E538270();
    LOBYTE(v12) = 2;
    type metadata accessor for StaticRoom(0);
    sub_23E1EE1C4(&qword_256D40DA0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
    sub_23E5382AC();
    LOBYTE(v12) = 3;
    type metadata accessor for StaticUser();
    sub_23E1EE1C4(&qword_256D40DE8, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
    sub_23E5382AC();
    LOBYTE(v12) = 4;
    sub_23E53827C();
    LOBYTE(v12) = *(_BYTE *)(v3 + v9[9]);
    v13 = 5;
    sub_23E376094();
    sub_23E5382AC();
    LOBYTE(v12) = *(_BYTE *)(v3 + v9[10]);
    v13 = 6;
    sub_23E3760D8();
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[11]);
    v13 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E264444(&qword_256D3FFA0, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[12]);
    v13 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
    sub_23E3761A4(&qword_256D445A8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[13]);
    v13 = 9;
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[14]);
    v13 = 10;
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[15]);
    v13 = 11;
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v9[16]);
    v13 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D445B0);
    sub_23E376204(&qword_256D445B8, &qword_256D445C0, (uint64_t)&protocol conformance descriptor for ColorPickerFavorite, MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    LOBYTE(v12) = 13;
    sub_23E53827C();
    v12 = *(_QWORD *)(v3 + v9[18]);
    v13 = 14;
    sub_23E538234();
    LOBYTE(v12) = 15;
    sub_23E53827C();
    LOBYTE(v12) = 16;
    type metadata accessor for StaticResident();
    sub_23E1EE1C4(&qword_256D40E30, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, (uint64_t)&protocol conformance descriptor for StaticResident);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticHome.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticHome.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t StaticHome.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  char v40;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (uint64_t)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for StaticUser();
  MEMORY[0x24BDAC7A8](v30);
  v31 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D445C8);
  v12 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = (int *)type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v37);
  v38 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23E376050();
  v32 = v14;
  v17 = v36;
  sub_23E5384E0();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  v36 = v6;
  v18 = (uint64_t)v8;
  v19 = (uint64_t)v31;
  LOBYTE(v39) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v20 = v38;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v38, v11, v9);
  LOBYTE(v39) = 1;
  v21 = sub_23E538144();
  v27[1] = v12;
  v22 = v37;
  v23 = (uint64_t *)&v20[v37[5]];
  *v23 = v21;
  v23[1] = v24;
  LOBYTE(v39) = 2;
  sub_23E1EE1C4(&qword_256D40EC0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
  sub_23E538180();
  sub_23E1E2FDC(v18, (uint64_t)&v20[v22[6]], type metadata accessor for StaticRoom);
  LOBYTE(v39) = 3;
  sub_23E1EE1C4(&qword_256D40EF0, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
  sub_23E538180();
  sub_23E1E2FDC(v19, (uint64_t)&v20[v22[7]], (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  LOBYTE(v39) = 4;
  v20[v22[8]] = sub_23E538150() & 1;
  v40 = 5;
  sub_23E37611C();
  sub_23E538180();
  v20[v22[9]] = v39;
  v40 = 6;
  sub_23E376160();
  sub_23E538180();
  v20[v22[10]] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v40 = 7;
  sub_23E264444(&qword_256D3FFB0, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v20[v22[11]] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v40 = 8;
  sub_23E3761A4(&qword_256D445E0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v20[v22[12]] = v39;
  v40 = 9;
  sub_23E538180();
  *(_QWORD *)&v38[v37[13]] = v39;
  v40 = 10;
  sub_23E538180();
  *(_QWORD *)&v38[v37[14]] = v39;
  v40 = 11;
  sub_23E538180();
  *(_QWORD *)&v38[v37[15]] = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D445B0);
  v40 = 12;
  sub_23E376204(&qword_256D445E8, &qword_256D445F0, (uint64_t)&protocol conformance descriptor for ColorPickerFavorite, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v38[v37[16]] = v39;
  LOBYTE(v39) = 13;
  v38[v37[17]] = sub_23E538150() & 1;
  v40 = 14;
  sub_23E538108();
  *(_QWORD *)&v38[v37[18]] = v39;
  LOBYTE(v39) = 15;
  v38[v37[19]] = sub_23E538150() & 1;
  type metadata accessor for StaticResident();
  LOBYTE(v39) = 16;
  sub_23E1EE1C4(&qword_256D40F20, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, (uint64_t)&protocol conformance descriptor for StaticResident);
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v34);
  v25 = (uint64_t)v38;
  sub_23E376008(v28, (uint64_t)&v38[v37[20]]);
  sub_23E1E2F50(v25, v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  return sub_23E1E2FA0(v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E3736F4()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticHome.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E373734()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticHome.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E37376C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticHome.init(from:)(a1, a2);
}

uint64_t sub_23E373780(_QWORD *a1)
{
  return StaticHome.encode(to:)(a1);
}

uint64_t StaticHome.RemoteAccessState.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E3737BC()
{
  sub_23E3762CC();
  return sub_23E538570();
}

uint64_t sub_23E3737E4()
{
  sub_23E3762CC();
  return sub_23E53857C();
}

uint64_t sub_23E37380C()
{
  sub_23E376310();
  return sub_23E538570();
}

uint64_t sub_23E373834()
{
  sub_23E376310();
  return sub_23E53857C();
}

uint64_t sub_23E37385C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E373888 + 4 * byte_23E5494A1[*v0]))(0x746553746F6ELL, 0xE600000000000000);
}

uint64_t sub_23E373888()
{
  return 0x6261706143746F6ELL;
}

uint64_t sub_23E3738A4()
{
  return 0x656C6261706163;
}

uint64_t sub_23E3738BC()
{
  return 0x6C62616C69617661;
}

uint64_t sub_23E3738D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E378C20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3738FC()
{
  sub_23E376288();
  return sub_23E538570();
}

uint64_t sub_23E373924()
{
  sub_23E376288();
  return sub_23E53857C();
}

uint64_t sub_23E37394C()
{
  sub_23E376354();
  return sub_23E538570();
}

uint64_t sub_23E373974()
{
  sub_23E376354();
  return sub_23E53857C();
}

uint64_t sub_23E37399C()
{
  sub_23E376398();
  return sub_23E538570();
}

uint64_t sub_23E3739C4()
{
  sub_23E376398();
  return sub_23E53857C();
}

void StaticHome.RemoteAccessState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D445F8);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44600);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44608);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44610);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44618);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E376288();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E373BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_23E376398();
  sub_23E5381E0();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t StaticHome.RemoteAccessState.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticHome.RemoteAccessState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44648);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44650);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44658);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44660);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44668);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E376288();
  v15 = v28;
  sub_23E5384E0();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23E5381C8();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23E537ED4();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v19 = &type metadata for StaticHome.RemoteAccessState;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_23E3741A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticHome.RemoteAccessState.init(from:)(a1, a2);
}

void sub_23E3741B4(_QWORD *a1)
{
  StaticHome.RemoteAccessState.encode(to:)(a1);
}

uint64_t StaticHome.NonResponsiveType.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E3741F0()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C696176616E75;
  else
    return 0x6E6F707365726F6ELL;
}

uint64_t sub_23E374238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E378DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E37425C()
{
  sub_23E3763DC();
  return sub_23E538570();
}

uint64_t sub_23E374284()
{
  sub_23E3763DC();
  return sub_23E53857C();
}

uint64_t sub_23E3742AC()
{
  sub_23E376464();
  return sub_23E538570();
}

uint64_t sub_23E3742D4()
{
  sub_23E376464();
  return sub_23E53857C();
}

uint64_t sub_23E3742FC()
{
  sub_23E376420();
  return sub_23E538570();
}

uint64_t sub_23E374324()
{
  sub_23E376420();
  return sub_23E53857C();
}

uint64_t StaticHome.NonResponsiveType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44670);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44678);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44680);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3763DC();
  sub_23E5384EC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23E376420();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23E376464();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StaticHome.NonResponsiveType.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticHome.NonResponsiveType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D446A0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D446A8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D446B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3763DC();
  v11 = v33;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticHome.NonResponsiveType;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23E376420();
    sub_23E5380C0();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23E376464();
    v22 = v6;
    sub_23E5380C0();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23E3748BC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticHome.NonResponsiveType.init(from:)(a1, a2);
}

uint64_t sub_23E3748D0(_QWORD *a1)
{
  return StaticHome.NonResponsiveType.encode(to:)(a1);
}

uint64_t StaticHome.set(colorPickerFavorites:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E3748FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23E5378F8();
  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374968()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3749CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374A2C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 56) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E374A74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = sub_23E536F44();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374ADC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[8];
  v2 = (void *)v0[7];
  swift_release();
  v0[10] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E374B40()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = *(NSObject **)(v0 + 80);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain();
    sub_23E3E4D34(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v3 = sub_23E5371A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_254333D88);
    v1 = sub_23E537190();
    v4 = sub_23E537B08();
    if (os_log_type_enabled(v1, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_23E1DF000, v1, v4, "While trying to set color picker favorites, couldn't find HMHome", v5, 2u);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticHome.turnOffManualSelectionMode()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_23E374C58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = sub_23E5378F8();
  *(_QWORD *)(v0 + 136) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374CC4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E374D28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374D88()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 152) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E374DD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_23E536F44();
  *(_QWORD *)(v0 + 168) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E374E38()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[20];
  v2 = (void *)v0[19];
  swift_release();
  v0[22] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E374E9C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  void *v24;

  v1 = *(void **)(v0 + 176);
  if (!v1)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_254333D88);
    v16 = sub_23E537190();
    v17 = sub_23E537B08();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23E1DF000, v16, v17, "turning off selectPreferredResident failed due to missing home", v18, 2u);
      MEMORY[0x24264FEBC](v18, -1, -1);
    }
    goto LABEL_18;
  }
  v2 = objc_msgSend(v1, sel_userSelectedPreferredResident);

  if (!v2)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v19 = sub_23E5371A8();
    __swift_project_value_buffer(v19, (uint64_t)qword_254333D88);
    v20 = sub_23E537190();
    v21 = sub_23E537B20();
    v22 = os_log_type_enabled(v20, v21);
    v16 = *(NSObject **)(v0 + 176);
    if (v22)
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_23E1DF000, v20, v21, "selectPreferredResident already nil", v23, 2u);
      MEMORY[0x24264FEBC](v23, -1, -1);

    }
    else
    {

      v16 = v20;
    }
LABEL_18:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v0 + 80;
  if (qword_254333DB8 != -1)
    swift_once();
  v4 = *(void **)(v0 + 176);
  v5 = sub_23E5371A8();
  *(_QWORD *)(v0 + 184) = __swift_project_value_buffer(v5, (uint64_t)qword_254333D88);
  v6 = v4;
  v7 = sub_23E537190();
  v8 = sub_23E537B20();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void **)(v0 + 176);
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    *(_QWORD *)(v0 + 80) = v10;
    v13 = v10;
    sub_23E537CF4();
    *v12 = v10;

    _os_log_impl(&dword_23E1DF000, v7, v8, "turning off selectPreferredResident on %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    v14 = v12;
    v3 = v0 + 80;
    MEMORY[0x24264FEBC](v14, -1, -1);
    MEMORY[0x24264FEBC](v11, -1, -1);
  }
  else
  {

  }
  v24 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E375258;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_23E267484;
  *(_QWORD *)(v0 + 104) = &block_descriptor_18;
  objc_msgSend(v24, sel_selectPreferredResident_completion_, 0, v3);
  return swift_continuation_await();
}

uint64_t sub_23E375258()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3752B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3752EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  id v7;
  void *v8;
  void *v9;
  _QWORD *v11;

  v1 = *(void **)(v0 + 176);
  swift_willThrow();
  v2 = v1;
  v3 = sub_23E537190();
  v4 = sub_23E537B08();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(void **)(v0 + 176);
    v6 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    *(_QWORD *)(v0 + 80) = v5;
    v7 = v5;
    sub_23E537CF4();
    *v11 = v5;

    _os_log_impl(&dword_23E1DF000, v3, v4, "turning off selectPreferredResident failed on %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }
  else
  {
    v8 = *(void **)(v0 + 176);

  }
  v9 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticHome.setAutomaticSoftwareUpdateEnabled(enabled:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 136) = v1;
  *(_BYTE *)(v2 + 312) = a1;
  *(_QWORD *)(v2 + 144) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(_QWORD *)(v2 + 152) = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  *(_QWORD *)(v2 + 160) = v3;
  *(_QWORD *)(v2 + 168) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 176) = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  *(_QWORD *)(v2 + 184) = v4;
  *(_QWORD *)(v2 + 192) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E375520()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378F8();
  *(_QWORD *)(v0 + 216) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37558C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3755F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E375650()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 232) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E375698()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = sub_23E536F44();
  *(_QWORD *)(v0 + 248) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E375704()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[30];
  v2 = (void *)v0[29];
  swift_release();
  v0[32] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E375768()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = *(void **)(v0 + 256);
  if (v1)
  {
    if (qword_254333DB8 != -1)
    {
      swift_once();
      v1 = *(void **)(v0 + 256);
    }
    v2 = sub_23E5371A8();
    *(_QWORD *)(v0 + 264) = __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
    v3 = v1;
    v4 = sub_23E537190();
    v5 = sub_23E537B20();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(void **)(v0 + 256);
    if (v6)
    {
      v8 = *(unsigned __int8 *)(v0 + 312);
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 67109378;
      *(_DWORD *)(v0 + 308) = v8;
      sub_23E537CF4();
      *(_WORD *)(v9 + 8) = 2112;
      *(_QWORD *)(v0 + 128) = v7;
      v11 = v7;
      sub_23E537CF4();
      *v10 = v7;

      _os_log_impl(&dword_23E1DF000, v4, v5, "setAutomaticSoftwareUpdateEnabled to %{BOOL}d on %@", (uint8_t *)v9, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v10, -1, -1);
      MEMORY[0x24264FEBC](v9, -1, -1);
    }
    else
    {

    }
    v17 = *(void **)(v0 + 256);
    v18 = *(unsigned __int8 *)(v0 + 312);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E375A88;
    v19 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v20 = (_QWORD *)(v0 + 80);
    v20[1] = 0x40000000;
    v20[2] = sub_23E267484;
    v20[3] = &block_descriptor_2_1;
    v20[4] = v19;
    objc_msgSend(v17, sel_updateAutomaticSoftwareUpdateEnabled_completionHandler_, v18, v20);
    return swift_continuation_await();
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v12 = sub_23E5371A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
    v13 = sub_23E537190();
    v14 = sub_23E537B08();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23E1DF000, v13, v14, "setAutomaticSoftwareUpdateEnabled failed due to missing home", v15, 2u);
      MEMORY[0x24264FEBC](v15, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E375A88()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 272) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E375AE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E375B48()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 288) = __swift_project_value_buffer(*(_QWORD *)(v0 + 160), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E375BC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E375C20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[36];
  v3 = v0[21];
  v2 = v0[22];
  v4 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E375C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  **(_QWORD **)(v0 + 152) = *(_QWORD *)(v0 + 256);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E375D38()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  _QWORD *v12;

  v1 = *(void **)(v0 + 256);
  swift_willThrow();
  v2 = v1;
  v3 = sub_23E537190();
  v4 = sub_23E537B08();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(void **)(v0 + 256);
    v6 = *(unsigned __int8 *)(v0 + 312);
    v7 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109378;
    *(_DWORD *)(v0 + 304) = v6;
    sub_23E537CF4();
    *(_WORD *)(v7 + 8) = 2112;
    *(_QWORD *)(v0 + 120) = v5;
    v8 = v5;
    sub_23E537CF4();
    *v12 = v5;

    _os_log_impl(&dword_23E1DF000, v3, v4, "setAutomaticSoftwareUpdateEnabled to %{BOOL}d failed on %@", (uint8_t *)v7, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v12, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  else
  {
    v9 = *(void **)(v0 + 256);

  }
  v10 = *(void **)(v0 + 256);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E375EFC(uint64_t a1)
{
  return sub_23E375F34(a1, qword_254334C08);
}

uint64_t sub_23E375F18(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D897C0);
}

uint64_t sub_23E375F34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_23E536F2C();
  v8 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  __break(1u);
  return result;
}

uint64_t sub_23E376008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E376050()
{
  unint64_t result;

  result = qword_256D44590;
  if (!qword_256D44590)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549FDC, &type metadata for StaticHome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44590);
  }
  return result;
}

unint64_t sub_23E376094()
{
  unint64_t result;

  result = qword_256D44598;
  if (!qword_256D44598)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.RemoteAccessState, &type metadata for StaticHome.RemoteAccessState);
    atomic_store(result, (unint64_t *)&qword_256D44598);
  }
  return result;
}

unint64_t sub_23E3760D8()
{
  unint64_t result;

  result = qword_256D445A0;
  if (!qword_256D445A0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.NonResponsiveType, &type metadata for StaticHome.NonResponsiveType);
    atomic_store(result, (unint64_t *)&qword_256D445A0);
  }
  return result;
}

unint64_t sub_23E37611C()
{
  unint64_t result;

  result = qword_256D445D0;
  if (!qword_256D445D0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.RemoteAccessState, &type metadata for StaticHome.RemoteAccessState);
    atomic_store(result, (unint64_t *)&qword_256D445D0);
  }
  return result;
}

unint64_t sub_23E376160()
{
  unint64_t result;

  result = qword_256D445D8;
  if (!qword_256D445D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.NonResponsiveType, &type metadata for StaticHome.NonResponsiveType);
    atomic_store(result, (unint64_t *)&qword_256D445D8);
  }
  return result;
}

uint64_t sub_23E3761A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254332B98);
    v8 = a2;
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E376204(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D445B0);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))type metadata accessor for ColorPickerFavorite, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E376288()
{
  unint64_t result;

  result = qword_256D44620;
  if (!qword_256D44620)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549F8C, &type metadata for StaticHome.RemoteAccessState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44620);
  }
  return result;
}

unint64_t sub_23E3762CC()
{
  unint64_t result;

  result = qword_256D44628;
  if (!qword_256D44628)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549F3C, &type metadata for StaticHome.RemoteAccessState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44628);
  }
  return result;
}

unint64_t sub_23E376310()
{
  unint64_t result;

  result = qword_256D44630;
  if (!qword_256D44630)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549EEC, &type metadata for StaticHome.RemoteAccessState.CapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44630);
  }
  return result;
}

unint64_t sub_23E376354()
{
  unint64_t result;

  result = qword_256D44638;
  if (!qword_256D44638)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549E9C, &type metadata for StaticHome.RemoteAccessState.NotCapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44638);
  }
  return result;
}

unint64_t sub_23E376398()
{
  unint64_t result;

  result = qword_256D44640;
  if (!qword_256D44640)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549E4C, &type metadata for StaticHome.RemoteAccessState.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44640);
  }
  return result;
}

unint64_t sub_23E3763DC()
{
  unint64_t result;

  result = qword_256D44688;
  if (!qword_256D44688)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549DFC, &type metadata for StaticHome.NonResponsiveType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44688);
  }
  return result;
}

unint64_t sub_23E376420()
{
  unint64_t result;

  result = qword_256D44690;
  if (!qword_256D44690)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549DAC, &type metadata for StaticHome.NonResponsiveType.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44690);
  }
  return result;
}

unint64_t sub_23E376464()
{
  unint64_t result;

  result = qword_256D44698;
  if (!qword_256D44698)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549D5C, &type metadata for StaticHome.NonResponsiveType.NoresponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44698);
  }
  return result;
}

uint64_t sub_23E3764A8()
{
  return sub_23E1EE1C4(&qword_256D446D0, (uint64_t (*)(uint64_t))type metadata accessor for StaticHome, (uint64_t)&protocol conformance descriptor for StaticHome);
}

unint64_t sub_23E3764D8()
{
  unint64_t result;

  result = qword_256D446D8;
  if (!qword_256D446D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.RemoteAccessState, &type metadata for StaticHome.RemoteAccessState);
    atomic_store(result, (unint64_t *)&qword_256D446D8);
  }
  return result;
}

unint64_t sub_23E376520()
{
  unint64_t result;

  result = qword_256D446E0;
  if (!qword_256D446E0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHome.NonResponsiveType, &type metadata for StaticHome.NonResponsiveType);
    atomic_store(result, (unint64_t *)&qword_256D446E0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticHome(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  unsigned int (*v52)(char *, uint64_t, int *);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  char *__dsta;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = &a2[v10];
    swift_bridgeObjectRetain();
    v70 = v8;
    v71 = v7;
    v8(v14, v15, v7);
    v16 = (int *)type metadata accessor for StaticRoom(0);
    v17 = v16[5];
    v18 = &v14[v17];
    v19 = &v15[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v14[v16[6]] = v15[v16[6]];
    v21 = v16[7];
    __dst = &v14[v21];
    v22 = &v15[v21];
    v23 = type metadata accessor for StaticZone();
    v67 = *(_QWORD *)(v23 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    swift_bridgeObjectRetain();
    if (v24(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v70(__dst, v22, v71);
      v27 = *(int *)(v23 + 20);
      v28 = &__dst[v27];
      v29 = &v22[v27];
      v30 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = v30;
      *(_QWORD *)&__dst[*(int *)(v23 + 24)] = *(_QWORD *)&v22[*(int *)(v23 + 24)];
      v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(__dst, 0, 1, v23);
    }
    v70(&v14[v16[8]], &v15[v16[8]], v71);
    *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
    *(_QWORD *)&v14[v16[10]] = *(_QWORD *)&v15[v16[10]];
    *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
    *(_QWORD *)&v14[v16[12]] = *(_QWORD *)&v15[v16[12]];
    *(_QWORD *)&v14[v16[13]] = *(_QWORD *)&v15[v16[13]];
    *(_QWORD *)&v14[v16[14]] = *(_QWORD *)&v15[v16[14]];
    *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
    *(_QWORD *)&v14[v16[16]] = *(_QWORD *)&v15[v16[16]];
    *(_QWORD *)&v14[v16[17]] = *(_QWORD *)&v15[v16[17]];
    v32 = a3[7];
    v33 = &a1[v32];
    v34 = &a2[v32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v33, v34, v71);
    v35 = (int *)type metadata accessor for StaticUser();
    v36 = v35[5];
    v37 = &v33[v36];
    v38 = &v34[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v35[6];
    v41 = &v33[v40];
    v42 = &v34[v40];
    swift_bridgeObjectRetain();
    v70(v41, v42, v71);
    v33[v35[7]] = v34[v35[7]];
    v43 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    a1[v43] = a2[v43];
    v44 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    *(_QWORD *)&a1[v44] = *(_QWORD *)&a2[v44];
    v45 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    *(_QWORD *)&a1[v45] = *(_QWORD *)&a2[v45];
    v46 = a3[15];
    *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
    *(_QWORD *)&a1[v46] = *(_QWORD *)&a2[v46];
    v47 = a3[17];
    *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
    a1[v47] = a2[v47];
    v48 = a3[19];
    *(_QWORD *)&a1[a3[18]] = *(_QWORD *)&a2[a3[18]];
    v49 = a3[20];
    __dsta = &a1[v49];
    v50 = &a2[v49];
    a1[v48] = a2[v48];
    v51 = (int *)type metadata accessor for StaticResident();
    v66 = *((_QWORD *)v51 - 1);
    v52 = *(unsigned int (**)(char *, uint64_t, int *))(v66 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v52(v50, 1, v51))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
      memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v70(__dsta, v50, v71);
      v54 = v51[5];
      v55 = &__dsta[v54];
      v56 = &v50[v54];
      v57 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      v58 = v51[6];
      v59 = &__dsta[v58];
      v60 = &v50[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      *(_QWORD *)&__dsta[v51[7]] = *(_QWORD *)&v50[v51[7]];
      *(_QWORD *)&__dsta[v51[8]] = *(_QWORD *)&v50[v51[8]];
      *(_WORD *)&__dsta[v51[9]] = *(_WORD *)&v50[v51[9]];
      v62 = v51[10];
      v63 = &__dsta[v62];
      v64 = &v50[v62];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70(v63, v64, v71);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(__dsta, 0, 1, v51);
    }
  }
  return a1;
}

uint64_t assignWithCopy for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  size_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  void (*v29)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, int *);
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);

  v6 = sub_23E536F80();
  v67 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v69 = (void (*)(uint64_t, char *, uint64_t))v7;
  v70 = v6;
  v7(a1 + v11, a2 + v11, v6);
  v14 = (int *)type metadata accessor for StaticRoom(0);
  v15 = v14[5];
  v16 = (_QWORD *)(v12 + v15);
  v17 = (_QWORD *)(v13 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + v14[6]) = *(_BYTE *)(v13 + v14[6]);
  v18 = v14[7];
  v19 = v12 + v18;
  v20 = (char *)(v13 + v18);
  v21 = type metadata accessor for StaticZone();
  v66 = *(_QWORD *)(v21 - 8);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  v68 = v19;
  LODWORD(v19) = v22(v19, 1, v21);
  v23 = v22((uint64_t)v20, 1, v21);
  if ((_DWORD)v19)
  {
    if (!v23)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v68, v20, v70);
      v26 = *(int *)(v21 + 20);
      v27 = (_QWORD *)(v68 + v26);
      v28 = &v20[v26];
      *v27 = *(_QWORD *)v28;
      v27[1] = *((_QWORD *)v28 + 1);
      *(_QWORD *)(v68 + *(int *)(v21 + 24)) = *(_QWORD *)&v20[*(int *)(v21 + 24)];
      v29 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v68, 0, 1, v21);
      goto LABEL_8;
    }
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v25 = (void *)v68;
LABEL_6:
    memcpy(v25, v20, v24);
LABEL_8:
    v30 = v70;
    goto LABEL_9;
  }
  if (v23)
  {
    sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v25 = (void *)v68;
    goto LABEL_6;
  }
  v30 = v70;
  v69(v68, v20, v70);
  v57 = *(int *)(v21 + 20);
  v58 = (_QWORD *)(v68 + v57);
  v59 = &v20[v57];
  *v58 = *(_QWORD *)v59;
  v58[1] = *((_QWORD *)v59 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v68 + *(int *)(v21 + 24)) = *(_QWORD *)&v20[*(int *)(v21 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_9:
  v69(v12 + v14[8], (char *)(v13 + v14[8]), v30);
  *(_QWORD *)(v12 + v14[9]) = *(_QWORD *)(v13 + v14[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[10]) = *(_QWORD *)(v13 + v14[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[11]) = *(_QWORD *)(v13 + v14[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[12]) = *(_QWORD *)(v13 + v14[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[13]) = *(_QWORD *)(v13 + v14[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[14]) = *(_QWORD *)(v13 + v14[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[15]) = *(_QWORD *)(v13 + v14[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[16]) = *(_QWORD *)(v13 + v14[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v14[17]) = *(_QWORD *)(v13 + v14[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v69(a1 + v31, (char *)(a2 + v31), v30);
  v34 = (int *)type metadata accessor for StaticUser();
  v35 = v34[5];
  v36 = (_QWORD *)(v32 + v35);
  v37 = (_QWORD *)(v33 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69(v32 + v34[6], (char *)(v33 + v34[6]), v30);
  *(_BYTE *)(v32 + v34[7]) = *(_BYTE *)(v33 + v34[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v38 = a3[20];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = (int *)type metadata accessor for StaticResident();
  v42 = *((_QWORD *)v41 - 1);
  v43 = *(uint64_t (**)(char *, uint64_t, int *))(v42 + 48);
  LODWORD(v32) = v43(v39, 1, v41);
  v44 = v43(v40, 1, v41);
  if (!(_DWORD)v32)
  {
    if (!v44)
    {
      v69((uint64_t)v39, v40, v30);
      v60 = v41[5];
      v61 = &v39[v60];
      v62 = &v40[v60];
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v63 = v41[6];
      v64 = &v39[v63];
      v65 = &v40[v63];
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = *((_QWORD *)v65 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v39[v41[7]] = *(_QWORD *)&v40[v41[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v39[v41[8]] = *(_QWORD *)&v40[v41[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v39[v41[9]] = *(_WORD *)&v40[v41[9]];
      v69((uint64_t)&v39[v41[10]], &v40[v41[10]], v30);
      return a1;
    }
    sub_23E1E2FA0((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v44)
  {
LABEL_14:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  v71 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v71(v39, v40, v30);
  v45 = v41[5];
  v46 = &v39[v45];
  v47 = &v40[v45];
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
  v48 = v41[6];
  v49 = &v39[v48];
  v50 = &v40[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  *(_QWORD *)&v39[v41[7]] = *(_QWORD *)&v40[v41[7]];
  *(_QWORD *)&v39[v41[8]] = *(_QWORD *)&v40[v41[8]];
  *(_WORD *)&v39[v41[9]] = *(_WORD *)&v40[v41[9]];
  v51 = v41[10];
  v52 = v30;
  v53 = &v39[v51];
  v54 = &v40[v51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71(v53, v54, v52);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
  return a1;
}

uint64_t initializeWithTake for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v35 = (void (*)(char *, char *, uint64_t))v7;
  v36 = v6;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)(v9 + v11[5]) = *(_OWORD *)(v10 + v11[5]);
  *(_BYTE *)(v9 + v11[6]) = *(_BYTE *)(v10 + v11[6]);
  v12 = v11[7];
  v13 = (char *)(v9 + v12);
  v14 = (char *)(v10 + v12);
  v15 = type metadata accessor for StaticZone();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v35(v13, v14, v36);
    *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
    *(_QWORD *)&v13[*(int *)(v15 + 24)] = *(_QWORD *)&v14[*(int *)(v15 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v35((char *)(v9 + v11[8]), (char *)(v10 + v11[8]), v36);
  *(_QWORD *)(v9 + v11[9]) = *(_QWORD *)(v10 + v11[9]);
  *(_QWORD *)(v9 + v11[10]) = *(_QWORD *)(v10 + v11[10]);
  *(_QWORD *)(v9 + v11[11]) = *(_QWORD *)(v10 + v11[11]);
  *(_QWORD *)(v9 + v11[12]) = *(_QWORD *)(v10 + v11[12]);
  *(_QWORD *)(v9 + v11[13]) = *(_QWORD *)(v10 + v11[13]);
  *(_QWORD *)(v9 + v11[14]) = *(_QWORD *)(v10 + v11[14]);
  *(_QWORD *)(v9 + v11[15]) = *(_QWORD *)(v10 + v11[15]);
  *(_QWORD *)(v9 + v11[16]) = *(_QWORD *)(v10 + v11[16]);
  *(_QWORD *)(v9 + v11[17]) = *(_QWORD *)(v10 + v11[17]);
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v35((char *)(a1 + v18), (char *)(a2 + v18), v36);
  v21 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)(v19 + v21[5]) = *(_OWORD *)(v20 + v21[5]);
  v35((char *)(v19 + v21[6]), (char *)(v20 + v21[6]), v36);
  *(_BYTE *)(v19 + v21[7]) = *(_BYTE *)(v20 + v21[7]);
  v22 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  v28 = a3[20];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v31 = (int *)type metadata accessor for StaticResident();
  v32 = *((_QWORD *)v31 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v35(v29, v30, v36);
    *(_OWORD *)&v29[v31[5]] = *(_OWORD *)&v30[v31[5]];
    *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
    *(_QWORD *)&v29[v31[7]] = *(_QWORD *)&v30[v31[7]];
    *(_QWORD *)&v29[v31[8]] = *(_QWORD *)&v30[v31[8]];
    *(_WORD *)&v29[v31[9]] = *(_WORD *)&v30[v31[9]];
    v35(&v29[v31[10]], &v30[v31[10]], v36);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t assignWithTake for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  int *v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, int *);
  int v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *__src;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;

  v6 = sub_23E536F80();
  v70 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v73 = v7;
  v74 = v6;
  v7(a1 + v13, a2 + v13, v6);
  v16 = (int *)type metadata accessor for StaticRoom(0);
  v17 = v16[5];
  v18 = (_QWORD *)(v14 + v17);
  v19 = (uint64_t *)(v15 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + v16[6]) = *(_BYTE *)(v15 + v16[6]);
  v22 = v16[7];
  v23 = v14 + v22;
  v24 = (char *)(v15 + v22);
  v25 = type metadata accessor for StaticZone();
  v69 = *(_QWORD *)(v25 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v72 = v23;
  LODWORD(v23) = v26(v23, 1, v25);
  __src = v24;
  v27 = v26((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    if (!v27)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v72, v24, v74);
      *(_OWORD *)(v72 + *(int *)(v25 + 20)) = *(_OWORD *)&v24[*(int *)(v25 + 20)];
      v30 = v74;
      *(_QWORD *)(v72 + *(int *)(v25 + 24)) = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v72, 0, 1, v25);
      goto LABEL_8;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v29 = (void *)v72;
LABEL_6:
    memcpy(v29, v24, v28);
    v30 = v74;
LABEL_8:
    v31 = v73;
    goto LABEL_9;
  }
  if (v27)
  {
    sub_23E1E2FA0(v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
    v29 = (void *)v72;
    goto LABEL_6;
  }
  v31 = v73;
  v73(v72, (uint64_t)__src, v74);
  v54 = *(int *)(v25 + 20);
  v55 = (_QWORD *)(v72 + v54);
  v56 = &__src[v54];
  v58 = *(_QWORD *)v56;
  v57 = *((_QWORD *)v56 + 1);
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v30 = v74;
  *(_QWORD *)(v72 + *(int *)(v25 + 24)) = *(_QWORD *)&__src[*(int *)(v25 + 24)];
  swift_bridgeObjectRelease();
LABEL_9:
  v31(v14 + v16[8], v15 + v16[8], v30);
  *(_QWORD *)(v14 + v16[9]) = *(_QWORD *)(v15 + v16[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[10]) = *(_QWORD *)(v15 + v16[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[11]) = *(_QWORD *)(v15 + v16[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[12]) = *(_QWORD *)(v15 + v16[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[13]) = *(_QWORD *)(v15 + v16[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[14]) = *(_QWORD *)(v15 + v16[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[15]) = *(_QWORD *)(v15 + v16[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[16]) = *(_QWORD *)(v15 + v16[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v14 + v16[17]) = *(_QWORD *)(v15 + v16[17]);
  swift_bridgeObjectRelease();
  v32 = a3[7];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v31(a1 + v32, a2 + v32, v30);
  v35 = (int *)type metadata accessor for StaticUser();
  v36 = v35[5];
  v37 = (_QWORD *)(v33 + v36);
  v38 = (uint64_t *)(v34 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v31(v33 + v35[6], v34 + v35[6], v30);
  *(_BYTE *)(v33 + v35[7]) = *(_BYTE *)(v34 + v35[7]);
  v41 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v42 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v42) = *(_QWORD *)(a2 + v42);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  v43 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v43) = *(_QWORD *)(a2 + v43);
  swift_bridgeObjectRelease();
  v44 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v45 = (char *)(a1 + v44);
  v46 = (char *)(a2 + v44);
  v47 = (int *)type metadata accessor for StaticResident();
  v48 = *((_QWORD *)v47 - 1);
  v49 = *(uint64_t (**)(char *, uint64_t, int *))(v48 + 48);
  LODWORD(v33) = v49(v45, 1, v47);
  v50 = v49(v46, 1, v47);
  if (!(_DWORD)v33)
  {
    if (!v50)
    {
      v31((uint64_t)v45, (uint64_t)v46, v30);
      v59 = v47[5];
      v60 = &v45[v59];
      v61 = &v46[v59];
      v63 = *(_QWORD *)v61;
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = v63;
      *((_QWORD *)v60 + 1) = v62;
      swift_bridgeObjectRelease();
      v64 = v47[6];
      v65 = &v45[v64];
      v66 = &v46[v64];
      v68 = *(_QWORD *)v66;
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = v68;
      *((_QWORD *)v65 + 1) = v67;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v45[v47[7]] = *(_QWORD *)&v46[v47[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v45[v47[8]] = *(_QWORD *)&v46[v47[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v45[v47[9]] = *(_WORD *)&v46[v47[9]];
      v31((uint64_t)&v45[v47[10]], (uint64_t)&v46[v47[10]], v30);
      return a1;
    }
    sub_23E1E2FA0((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v50)
  {
LABEL_14:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    return a1;
  }
  v51 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v51(v45, v46, v30);
  *(_OWORD *)&v45[v47[5]] = *(_OWORD *)&v46[v47[5]];
  *(_OWORD *)&v45[v47[6]] = *(_OWORD *)&v46[v47[6]];
  *(_QWORD *)&v45[v47[7]] = *(_QWORD *)&v46[v47[7]];
  *(_QWORD *)&v45[v47[8]] = *(_QWORD *)&v46[v47[8]];
  *(_WORD *)&v45[v47[9]] = *(_WORD *)&v46[v47[9]];
  v51(&v45[v47[10]], &v46[v47[10]], v30);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v48 + 56))(v45, 0, 1, v47);
  return a1;
}

uint64_t sub_23E377A9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = type metadata accessor for StaticRoom(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v16 = type metadata accessor for StaticUser();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[7];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[20];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23E377B94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = type metadata accessor for StaticRoom(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = type metadata accessor for StaticUser();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[20];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState()
{
  return &type metadata for StaticHome.RemoteAccessState;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType()
{
  return &type metadata for StaticHome.NonResponsiveType;
}

uint64_t _s13HomeDataModel10StaticHomeV17NonResponsiveTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E377CFC + 4 * byte_23E5494B2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E377D30 + 4 * byte_23E5494AD[v4]))();
}

uint64_t sub_23E377D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E377D40);
  return result;
}

uint64_t sub_23E377D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E377D54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E377D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.CodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.NoresponseCodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.NoresponseCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.NonResponsiveType.UnavailableCodingKeys()
{
  return &type metadata for StaticHome.NonResponsiveType.UnavailableCodingKeys;
}

uint64_t _s13HomeDataModel10StaticHomeV17RemoteAccessStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E377DE8 + 4 * byte_23E5494BC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E377E1C + 4 * byte_23E5494B7[v4]))();
}

uint64_t sub_23E377E1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377E24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E377E2CLL);
  return result;
}

uint64_t sub_23E377E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E377E40);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E377E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.CodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.NotSetCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.NotSetCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.NotCapableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.NotCapableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.CapableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.CapableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHome.RemoteAccessState.AvailableCodingKeys()
{
  return &type metadata for StaticHome.RemoteAccessState.AvailableCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticHome.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticHome.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_23E377F84 + 4 * byte_23E5494C6[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_23E377FB8 + 4 * byte_23E5494C1[v4]))();
}

uint64_t sub_23E377FB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377FC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E377FC8);
  return result;
}

uint64_t sub_23E377FD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E377FDCLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_23E377FE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E377FE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticHome.CodingKeys()
{
  return &type metadata for StaticHome.CodingKeys;
}

unint64_t sub_23E378008()
{
  unint64_t result;

  result = qword_256D446E8;
  if (!qword_256D446E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5499E4, &type metadata for StaticHome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D446E8);
  }
  return result;
}

unint64_t sub_23E378050()
{
  unint64_t result;

  result = qword_256D446F0;
  if (!qword_256D446F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549BDC, &type metadata for StaticHome.RemoteAccessState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D446F0);
  }
  return result;
}

unint64_t sub_23E378098()
{
  unint64_t result;

  result = qword_256D446F8;
  if (!qword_256D446F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549D34, &type metadata for StaticHome.NonResponsiveType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D446F8);
  }
  return result;
}

unint64_t sub_23E3780E0()
{
  unint64_t result;

  result = qword_256D44700;
  if (!qword_256D44700)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549C54, &type metadata for StaticHome.NonResponsiveType.NoresponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44700);
  }
  return result;
}

unint64_t sub_23E378128()
{
  unint64_t result;

  result = qword_256D44708;
  if (!qword_256D44708)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549C7C, &type metadata for StaticHome.NonResponsiveType.NoresponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44708);
  }
  return result;
}

unint64_t sub_23E378170()
{
  unint64_t result;

  result = qword_256D44710;
  if (!qword_256D44710)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549C04, &type metadata for StaticHome.NonResponsiveType.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44710);
  }
  return result;
}

unint64_t sub_23E3781B8()
{
  unint64_t result;

  result = qword_256D44718;
  if (!qword_256D44718)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549C2C, &type metadata for StaticHome.NonResponsiveType.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44718);
  }
  return result;
}

unint64_t sub_23E378200()
{
  unint64_t result;

  result = qword_256D44720;
  if (!qword_256D44720)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549CA4, &type metadata for StaticHome.NonResponsiveType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44720);
  }
  return result;
}

unint64_t sub_23E378248()
{
  unint64_t result;

  result = qword_256D44728;
  if (!qword_256D44728)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549CCC, &type metadata for StaticHome.NonResponsiveType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44728);
  }
  return result;
}

unint64_t sub_23E378290()
{
  unint64_t result;

  result = qword_256D44730;
  if (!qword_256D44730)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549AFC, &type metadata for StaticHome.RemoteAccessState.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44730);
  }
  return result;
}

unint64_t sub_23E3782D8()
{
  unint64_t result;

  result = qword_256D44738;
  if (!qword_256D44738)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549B24, &type metadata for StaticHome.RemoteAccessState.NotSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44738);
  }
  return result;
}

unint64_t sub_23E378320()
{
  unint64_t result;

  result = qword_256D44740;
  if (!qword_256D44740)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549AAC, &type metadata for StaticHome.RemoteAccessState.NotCapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44740);
  }
  return result;
}

unint64_t sub_23E378368()
{
  unint64_t result;

  result = qword_256D44748;
  if (!qword_256D44748)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549AD4, &type metadata for StaticHome.RemoteAccessState.NotCapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44748);
  }
  return result;
}

unint64_t sub_23E3783B0()
{
  unint64_t result;

  result = qword_256D44750;
  if (!qword_256D44750)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549A5C, &type metadata for StaticHome.RemoteAccessState.CapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44750);
  }
  return result;
}

unint64_t sub_23E3783F8()
{
  unint64_t result;

  result = qword_256D44758;
  if (!qword_256D44758)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549A84, &type metadata for StaticHome.RemoteAccessState.CapableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44758);
  }
  return result;
}

unint64_t sub_23E378440()
{
  unint64_t result;

  result = qword_256D44760;
  if (!qword_256D44760)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549A0C, &type metadata for StaticHome.RemoteAccessState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44760);
  }
  return result;
}

unint64_t sub_23E378488()
{
  unint64_t result;

  result = qword_256D44768;
  if (!qword_256D44768)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549A34, &type metadata for StaticHome.RemoteAccessState.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44768);
  }
  return result;
}

unint64_t sub_23E3784D0()
{
  unint64_t result;

  result = qword_256D44770;
  if (!qword_256D44770)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549B4C, &type metadata for StaticHome.RemoteAccessState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44770);
  }
  return result;
}

unint64_t sub_23E378518()
{
  unint64_t result;

  result = qword_256D44778;
  if (!qword_256D44778)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549B74, &type metadata for StaticHome.RemoteAccessState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44778);
  }
  return result;
}

unint64_t sub_23E378560()
{
  unint64_t result;

  result = qword_256D44780;
  if (!qword_256D44780)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549954, &type metadata for StaticHome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44780);
  }
  return result;
}

unint64_t sub_23E3785A8()
{
  unint64_t result;

  result = qword_256D44788;
  if (!qword_256D44788)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54997C, &type metadata for StaticHome.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44788);
  }
  return result;
}

uint64_t sub_23E3785EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x52746C7561666564 && a2 == 0xEB000000006D6F6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E568850 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7441726573557369 && a2 == 0xEC000000656D6F48 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E568870 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E568890 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E5688B0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E5688D0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E5688F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E568910 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E568930 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E568950 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023E568970 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E568990 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023E5689B0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E5689D0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_23E378C20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746553746F6ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6261706143746F6ELL && a2 == 0xEA0000000000656CLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6261706163 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E378DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F707365726F6ELL && a2 == 0xEA00000000006573;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23E378EFC()
{
  unint64_t result;

  result = qword_254332C18;
  if (!qword_254332C18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254332C18);
  }
  return result;
}

unsigned __int8 *static IconSymbol.defaultSymbol(serviceKind:)@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = *result - 3;
  if (v2 > 0x31)
    *a2 = 87;
  else
    *a2 = byte_23E54A40A[(char)v2];
  return result;
}

uint64_t IconSymbol.offStateSymbolName.getter()
{
  return IconSymbol.rawValue.getter();
}

uint64_t IconSymbol.onStateSymbolName.getter()
{
  _BYTE *v0;
  uint64_t result;

  result = 0xD000000000000014;
  switch(*v0)
  {
    case 5:
      result = 0xD000000000000019;
      break;
    case 6:
      result = 0xD00000000000001ALL;
      break;
    case 0xB:
      result = 0x2E746361746E6F63;
      break;
    case 0x10:
    case 0x1B:
    case 0x50:
    case 0x56:
      return result;
    case 0x12:
      result = 0xD000000000000013;
      break;
    case 0x13:
      result = 0x65706F2E6B636F6CLL;
      break;
    case 0x14:
      result = 0x6B7365642E6E6166;
      break;
    case 0x18:
      result = 0xD000000000000010;
      break;
    case 0x19:
      result = 0xD000000000000010;
      break;
    case 0x1A:
      result = 0xD00000000000001BLL;
      break;
    case 0x1F:
      result = 0x6C7562746867696CLL;
      break;
    case 0x27:
      result = 0x6C6C69662E63696DLL;
      break;
    case 0x38:
      result = 0xD000000000000015;
      break;
    case 0x3A:
      result = 0xD00000000000001BLL;
      break;
    case 0x3B:
      result = 0xD00000000000001CLL;
      break;
    case 0x3E:
      result = 0x2E72656B61657073;
      break;
    case 0x3F:
    case 0x40:
      result = 0xD00000000000001BLL;
      break;
    case 0x41:
      result = 0x656C6B6E69727073;
      break;
    case 0x42:
      result = 0xD000000000000013;
      break;
    case 0x43:
      result = 0xD00000000000001ALL;
      break;
    case 0x4B:
      result = 0x612E776F646E6977;
      break;
    case 0x4C:
    case 0x4D:
      result = 0x632E776F646E6977;
      break;
    case 0x4F:
      result = 0xD000000000000016;
      break;
    case 0x51:
      result = 0x736E696174727563;
      break;
    case 0x52:
      result = 0xD000000000000011;
      break;
    case 0x53:
      result = 0xD000000000000011;
      break;
    case 0x54:
      result = 0xD000000000000010;
      break;
    case 0x55:
      result = 0xD000000000000011;
      break;
    default:
      result = IconSymbol.rawValue.getter();
      break;
  }
  return result;
}

unint64_t IconSymbol.slashOffSymbolName.getter()
{
  _BYTE *v0;

  if (*v0 == 31)
    return 0xD000000000000014;
  else
    return 0;
}

void IconSymbol.offStateSymbolRenderingMode.getter(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned int v2;

  v2 = *v1 - 28;
  if (v2 > 0x13)
    *a1 = 0;
  else
    *a1 = byte_23E54A43C[(char)v2];
}

void IconSymbol.onStateSymbolRenderingMode.getter(char *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  if (((*v1 - 27) & 0xF8) != 0)
    v2 = 2;
  else
    v2 = 0x20202020200uLL >> (8 * (*v1 - 27));
  *a1 = v2;
}

uint64_t static IconSymbol.defaultSymbol(for:subKind:)@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, _BYTE *a3@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  unsigned __int8 v10[2];
  char v11;

  v4 = *a1;
  v5 = *a2;
  v10[1] = *a1;
  if (ServiceKind.rawValue.getter((uint64_t)a1) == 0xD000000000000024 && v6 == 0x800000023E55FFF0)
  {
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  v7 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0 || (_DWORD)v5 == 5)
  {
    v10[0] = v4;
    result = (uint64_t)static IconSymbol.defaultSymbol(serviceKind:)(v10, &v11);
    LOBYTE(v9) = v11;
  }
  else
  {
    v9 = 0x15393F1515uLL >> (8 * v5);
  }
  *a3 = v9;
  return result;
}

uint64_t IconSymbol.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E37947C + 4 * word_23E54A090[*v0]))(0xD00000000000001DLL, 0x800000023E560150);
}

uint64_t sub_23E37947C@<X0>(uint64_t a1@<X8>)
{
  return a1 - 6;
}

HomeDataModel::IconSymbol_optional __swiftcall IconSymbol.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeDataModel::IconSymbol_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_23E538384();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 70;
  switch(v3)
  {
    case 0:
      goto LABEL_72;
    case 1:
      v5 = 1;
      goto LABEL_72;
    case 2:
      v5 = 2;
      goto LABEL_72;
    case 3:
      v5 = 3;
      goto LABEL_72;
    case 4:
      v5 = 4;
      goto LABEL_72;
    case 5:
      v5 = 5;
      goto LABEL_72;
    case 6:
      v5 = 6;
      goto LABEL_72;
    case 7:
      v5 = 7;
      goto LABEL_72;
    case 8:
      v5 = 8;
      goto LABEL_72;
    case 9:
      v5 = 9;
      goto LABEL_72;
    case 10:
      v5 = 10;
      goto LABEL_72;
    case 11:
      v5 = 11;
      goto LABEL_72;
    case 12:
      v5 = 12;
      goto LABEL_72;
    case 13:
      v5 = 13;
      goto LABEL_72;
    case 14:
      v5 = 14;
      goto LABEL_72;
    case 15:
      v5 = 15;
      goto LABEL_72;
    case 16:
      v5 = 16;
      goto LABEL_72;
    case 17:
      v5 = 17;
      goto LABEL_72;
    case 18:
      v5 = 18;
      goto LABEL_72;
    case 19:
      v5 = 19;
      goto LABEL_72;
    case 20:
      v5 = 20;
      goto LABEL_72;
    case 21:
      v5 = 21;
      goto LABEL_72;
    case 22:
      v5 = 22;
      goto LABEL_72;
    case 23:
      v5 = 23;
      goto LABEL_72;
    case 24:
      v5 = 24;
      goto LABEL_72;
    case 25:
      v5 = 25;
      goto LABEL_72;
    case 26:
      v5 = 26;
      goto LABEL_72;
    case 27:
      v5 = 27;
      goto LABEL_72;
    case 28:
      v5 = 28;
      goto LABEL_72;
    case 29:
      v5 = 29;
      goto LABEL_72;
    case 30:
      v5 = 30;
      goto LABEL_72;
    case 31:
      v5 = 31;
      goto LABEL_72;
    case 32:
      v5 = 32;
      goto LABEL_72;
    case 33:
      v5 = 33;
      goto LABEL_72;
    case 34:
      v5 = 34;
      goto LABEL_72;
    case 35:
      v5 = 35;
      goto LABEL_72;
    case 36:
      v5 = 36;
      goto LABEL_72;
    case 37:
      v5 = 37;
      goto LABEL_72;
    case 38:
      v5 = 38;
      goto LABEL_72;
    case 39:
      v5 = 39;
      goto LABEL_72;
    case 40:
      v5 = 40;
      goto LABEL_72;
    case 41:
      v5 = 41;
      goto LABEL_72;
    case 42:
      v5 = 42;
      goto LABEL_72;
    case 43:
      v5 = 43;
      goto LABEL_72;
    case 44:
      v5 = 44;
      goto LABEL_72;
    case 45:
      v5 = 45;
      goto LABEL_72;
    case 46:
      v5 = 46;
      goto LABEL_72;
    case 47:
      v5 = 47;
      goto LABEL_72;
    case 48:
      v5 = 48;
      goto LABEL_72;
    case 49:
      v5 = 49;
      goto LABEL_72;
    case 50:
      v5 = 50;
      goto LABEL_72;
    case 51:
      v5 = 51;
      goto LABEL_72;
    case 52:
      v5 = 52;
      goto LABEL_72;
    case 53:
      v5 = 53;
      goto LABEL_72;
    case 54:
      v5 = 54;
      goto LABEL_72;
    case 55:
      v5 = 55;
      goto LABEL_72;
    case 56:
      v5 = 56;
      goto LABEL_72;
    case 57:
      v5 = 57;
      goto LABEL_72;
    case 58:
      v5 = 58;
      goto LABEL_72;
    case 59:
      v5 = 59;
      goto LABEL_72;
    case 60:
      v5 = 60;
      goto LABEL_72;
    case 61:
      v5 = 61;
      goto LABEL_72;
    case 62:
      v5 = 62;
      goto LABEL_72;
    case 63:
      v5 = 63;
      goto LABEL_72;
    case 64:
      v5 = 64;
      goto LABEL_72;
    case 65:
      v5 = 65;
      goto LABEL_72;
    case 66:
      v5 = 66;
      goto LABEL_72;
    case 67:
      v5 = 67;
      goto LABEL_72;
    case 68:
      v5 = 68;
      goto LABEL_72;
    case 69:
      v5 = 69;
LABEL_72:
      v6 = v5;
      break;
    case 70:
      break;
    case 71:
      v6 = 71;
      break;
    case 72:
      v6 = 72;
      break;
    case 73:
      v6 = 73;
      break;
    case 74:
      v6 = 74;
      break;
    case 75:
      v6 = 75;
      break;
    case 76:
      v6 = 76;
      break;
    case 77:
      v6 = 77;
      break;
    case 78:
      v6 = 78;
      break;
    case 79:
      v6 = 79;
      break;
    case 80:
      v6 = 80;
      break;
    case 81:
      v6 = 81;
      break;
    case 82:
      v6 = 82;
      break;
    case 83:
      v6 = 83;
      break;
    case 84:
      v6 = 84;
      break;
    case 85:
      v6 = 85;
      break;
    case 86:
      v6 = 86;
      break;
    case 87:
      v6 = 87;
      break;
    default:
      v6 = 88;
      break;
  }
  *v2 = v6;
  return result;
}

_BYTE *static IconSymbol.defaultSymbol(subKind:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = 0x15393F1515uLL >> (8 * *result);
  return result;
}

unsigned __int8 *static IconSymbol.defaultSymbol(deviceType:)@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  int v2;
  unsigned int v3;
  char v4;

  v2 = *result;
  v3 = v2 - 4;
  if ((v2 - 21) >= 2)
    v4 = 87;
  else
    v4 = 19;
  if (v3 < 4)
    v4 = 31;
  *a2 = v4;
  return result;
}

void *static IconSymbol.symbolSetForServiceKind(for:)(_BYTE *a1)
{
  if (*a1 == 30)
    return &unk_250EDE2F8;
  else
    return (void *)MEMORY[0x24BEE4AF8];
}

unsigned __int8 *static IconSymbol.defaultSymbol(actionSetKind:)@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  unsigned int v2;
  char v3;

  v2 = *result;
  if (v2 >= 4)
    v3 = 87;
  else
    v3 = 0x36373534u >> (8 * v2);
  *a2 = v3;
  return result;
}

void *static IconSymbol.exampleSymbolSetForTestingAndPreviews()()
{
  return &unk_250EDE320;
}

char *static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)@<X0>(char *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = byte_23E54A450[*result];
  return result;
}

char *static IconSymbol.convertToCAPackageIcon(iconSymbol:)@<X0>(char *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = byte_23E54A48A[*result];
  return result;
}

HomeDataModel::IconSymbol_optional sub_23E379F50(Swift::String *a1)
{
  return IconSymbol.init(rawValue:)(*a1);
}

uint64_t sub_23E379F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IconSymbol.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E379F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E5238E8(*a1, *a2);
}

unint64_t sub_23E379F90()
{
  unint64_t result;

  result = qword_256D44790;
  if (!qword_256D44790)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconSymbol, &type metadata for IconSymbol);
    atomic_store(result, (unint64_t *)&qword_256D44790);
  }
  return result;
}

uint64_t sub_23E379FD4()
{
  sub_23E53845C();
  IconSymbol.rawValue.getter();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E37A038()
{
  IconSymbol.rawValue.getter();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E37A088()
{
  sub_23E53845C();
  IconSymbol.rawValue.getter();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E37A0E8()
{
  sub_23E37A2EC();
  return sub_23E53779C();
}

uint64_t sub_23E37A144()
{
  sub_23E37A2EC();
  return sub_23E537760();
}

uint64_t getEnumTagSinglePayload for IconSymbol(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xA9)
    goto LABEL_17;
  if (a2 + 87 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 87) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 87;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 87;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 87;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x58;
  v8 = v6 - 88;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IconSymbol(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 87 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 87) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xA9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xA8)
    return ((uint64_t (*)(void))((char *)&loc_23E37A26C + 4 * byte_23E54A19D[v4]))();
  *a1 = a2 + 87;
  return ((uint64_t (*)(void))((char *)sub_23E37A2A0 + 4 * byte_23E54A198[v4]))();
}

uint64_t sub_23E37A2A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37A2A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E37A2B0);
  return result;
}

uint64_t sub_23E37A2BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E37A2C4);
  *(_BYTE *)result = a2 + 87;
  return result;
}

uint64_t sub_23E37A2C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37A2D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconSymbol()
{
  return &type metadata for IconSymbol;
}

unint64_t sub_23E37A2EC()
{
  unint64_t result;

  result = qword_256D44798;
  if (!qword_256D44798)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconSymbol, &type metadata for IconSymbol);
    atomic_store(result, (unint64_t *)&qword_256D44798);
  }
  return result;
}

uint64_t SignificantEvent.init(id:reason:dateOfOccurrence:confidenceLevel:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v8;
  char v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v8 = *a2;
  v9 = *a4;
  v10 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = (int *)type metadata accessor for SignificantEvent();
  *(_BYTE *)(a5 + v11[5]) = v8;
  v12 = a5 + v11[6];
  v13 = sub_23E536F20();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
  *(_BYTE *)(a5 + v11[7]) = v9;
  return result;
}

uint64_t type metadata accessor for SignificantEvent()
{
  uint64_t result;

  result = qword_256D44820;
  if (!qword_256D44820)
    return swift_getSingletonMetadata();
  return result;
}

void *static SignificantEvent.Reason.allCases.getter()
{
  return &unk_250EDE348;
}

void sub_23E37A41C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDE348;
}

BOOL static SignificantEvent.ConfidenceLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SignificantEvent.ConfidenceLevel.hash(into:)()
{
  return sub_23E538468();
}

uint64_t SignificantEvent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SignificantEvent.reason.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SignificantEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t SignificantEvent.dateOfOccurrence.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SignificantEvent() + 24);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SignificantEvent.confidenceLevel.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SignificantEvent();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t SignificantEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for SignificantEvent();
  sub_23E538468();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 4)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538468();
}

uint64_t SignificantEvent.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for SignificantEvent();
  sub_23E538468();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 4)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  return sub_23E5384A4();
}

uint64_t sub_23E37A758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538468();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 28)) == 4)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538468();
}

uint64_t sub_23E37A848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538468();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 28)) == 4)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  return sub_23E5384A4();
}

uint64_t _s13HomeDataModel16SignificantEventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for SignificantEvent();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = v4;
  if ((sub_23E536EF0() & 1) == 0)
    return 0;
  v6 = *(int *)(v5 + 28);
  v7 = *(unsigned __int8 *)(a1 + v6);
  v8 = *(unsigned __int8 *)(a2 + v6);
  if (v7 == 4)
  {
    if (v8 != 4)
      return 0;
  }
  else if (v8 == 4 || v7 != v8)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_23E37A9E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D447A0;
  if (!qword_256D447A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D447A8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D447A0);
  }
  return result;
}

unint64_t sub_23E37AA30()
{
  unint64_t result;

  result = qword_256D447B0;
  if (!qword_256D447B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SignificantEvent.Reason, &type metadata for SignificantEvent.Reason);
    atomic_store(result, (unint64_t *)&qword_256D447B0);
  }
  return result;
}

unint64_t sub_23E37AA78()
{
  unint64_t result;

  result = qword_256D447B8;
  if (!qword_256D447B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SignificantEvent.ConfidenceLevel, &type metadata for SignificantEvent.ConfidenceLevel);
    atomic_store(result, (unint64_t *)&qword_256D447B8);
  }
  return result;
}

uint64_t sub_23E37AABC()
{
  return sub_23E1EE1C4(&qword_256D447C0, (uint64_t (*)(uint64_t))type metadata accessor for SignificantEvent, (uint64_t)&protocol conformance descriptor for SignificantEvent);
}

_QWORD *initializeBufferWithCopyOfBuffer for SignificantEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for SignificantEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SignificantEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignificantEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E37AE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E536F20();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 4u)
    v14 = 4;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  v15 = v14 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 4u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SignificantEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E37AF34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23E536F20();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 4;
  return result;
}

uint64_t sub_23E37AFD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = sub_23E536F20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SignificantEvent.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E37B0B8 + 4 * byte_23E54A4F5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E37B0EC + 4 * byte_23E54A4F0[v4]))();
}

uint64_t sub_23E37B0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37B0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E37B0FCLL);
  return result;
}

uint64_t sub_23E37B108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E37B110);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E37B114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37B11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignificantEvent.Reason()
{
  return &type metadata for SignificantEvent.Reason;
}

uint64_t storeEnumTagSinglePayload for SignificantEvent.ConfidenceLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E37B184 + 4 * byte_23E54A4FF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E37B1B8 + 4 * byte_23E54A4FA[v4]))();
}

uint64_t sub_23E37B1B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37B1C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E37B1C8);
  return result;
}

uint64_t sub_23E37B1D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E37B1DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E37B1E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E37B1E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignificantEvent.ConfidenceLevel()
{
  return &type metadata for SignificantEvent.ConfidenceLevel;
}

uint64_t StaticResident.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticResident.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticResident() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticResident.init(with:home:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  __int16 v14;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  id v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v6 = (int *)type metadata accessor for StaticResident();
  v7 = *((_QWORD *)v6 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a2, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v11 = sub_23E5377F0();

  v12 = a1;
  v13 = sub_23E38FDEC(v11, v12);
  swift_bridgeObjectRelease();

  sub_23E37D5DC(v13, (__int16 *)&v49);
  v14 = v49;
  if ((~(unsigned __int16)v49 & 0xFEFC) == 0)
  {

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v7 + 56))(a3, 1, 1, v6);
  }
  v16 = objc_msgSend(v12, sel_uniqueIdentifier);
  sub_23E536F68();

  v47 = v7;
  if (v13)
  {
    v17 = objc_msgSend(v13, sel_room);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, sel_name);

      v20 = sub_23E53755C();
      v22 = v21;

      v23 = (uint64_t *)&v9[v6[6]];
      *v23 = v20;
      v23[1] = v22;
    }
    else
    {
      v26 = &v9[v6[6]];
      *(_QWORD *)v26 = 0;
      *((_QWORD *)v26 + 1) = 0;
    }
    v25 = objc_msgSend(v13, sel_configuredName);
    if (!v25)
    {
      v46 = a3;
      v31 = v13;
      v32 = objc_msgSend(v31, sel_category);
      v33 = objc_msgSend(v32, sel_categoryType);

      v34 = sub_23E53755C();
      v36 = v35;

      v28 = sub_23E1E54CC(v34, v36);
      v30 = v37;
      swift_bridgeObjectRelease();
      if (v30)
      {

      }
      else
      {
        v38 = objc_msgSend(v31, sel_name);
        v28 = sub_23E53755C();
        v30 = v39;

      }
      a3 = v46;
      goto LABEL_14;
    }
  }
  else
  {
    v24 = &v9[v6[6]];
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v25 = objc_msgSend(v12, sel_name);
  }
  v27 = v25;
  v28 = sub_23E53755C();
  v30 = v29;

LABEL_14:
  v40 = (uint64_t *)&v9[v6[5]];
  *v40 = v28;
  v40[1] = v30;
  *(_WORD *)&v9[v6[9]] = v14;
  v41 = objc_msgSend(v12, sel_status);
  v42 = MEMORY[0x24BEE4B08];
  v49 = MEMORY[0x24BEE4B08];
  if ((v41 & 1) != 0)
    sub_23E37EA70(&v48, 1);
  v43 = v47;
  if ((v41 & 2) != 0)
    sub_23E37EA70(&v48, 0);
  *(_QWORD *)&v9[v6[7]] = v49;
  v49 = v42;
  if ((objc_msgSend(v12, sel_supportsResidentSelection) & 1) != 0)
  {
    sub_23E37EBA8();
    v42 = v49;
  }
  *(_QWORD *)&v9[v6[8]] = v42;
  v44 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E2FDC((uint64_t)v9, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v43 + 56))(a3, 0, 1, v6);
}

BOOL static StaticResident.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticResident.Status.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E37B6B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C62616863616572;
  else
    return 0x7972616D697270;
}

uint64_t sub_23E37B6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E391024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E37B718()
{
  sub_23E38FF0C();
  return sub_23E538570();
}

uint64_t sub_23E37B740()
{
  sub_23E38FF0C();
  return sub_23E53857C();
}

uint64_t sub_23E37B768()
{
  sub_23E38FF94();
  return sub_23E538570();
}

uint64_t sub_23E37B790()
{
  sub_23E38FF94();
  return sub_23E53857C();
}

uint64_t sub_23E37B7B8()
{
  sub_23E38FF50();
  return sub_23E538570();
}

uint64_t sub_23E37B7E0()
{
  sub_23E38FF50();
  return sub_23E53857C();
}

uint64_t StaticResident.Status.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44860);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44868);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44870);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E38FF0C();
  sub_23E5384EC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23E38FF50();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23E38FF94();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StaticResident.Status.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticResident.Status.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44890);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44898);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448A0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E38FF0C();
  v11 = v33;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticResident.Status;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23E38FF50();
    sub_23E5380C0();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23E38FF94();
    v22 = v6;
    sub_23E5380C0();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23E37BD78@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticResident.Status.init(from:)(a1, a2);
}

uint64_t sub_23E37BD8C(_QWORD *a1)
{
  return StaticResident.Status.encode(to:)(a1);
}

uint64_t static StaticResident.Capability.== infix(_:_:)()
{
  return 1;
}

uint64_t StaticResident.Capability.hash(into:)()
{
  return sub_23E538468();
}

unint64_t sub_23E37BDCC()
{
  return 0xD000000000000018;
}

uint64_t sub_23E37BDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E391120(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23E37BE10()
{
  sub_23E38FFD8();
  return sub_23E538570();
}

uint64_t sub_23E37BE38()
{
  sub_23E38FFD8();
  return sub_23E53857C();
}

uint64_t sub_23E37BE60()
{
  sub_23E39001C();
  return sub_23E538570();
}

uint64_t sub_23E37BE88()
{
  sub_23E39001C();
  return sub_23E53857C();
}

uint64_t StaticResident.Capability.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E38FFD8();
  sub_23E5384EC();
  sub_23E39001C();
  sub_23E5381E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StaticResident.Capability.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticResident.Capability.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448C8);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448D0);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E38FFD8();
  v8 = v23;
  sub_23E5384E0();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_23E5381C8() + 16) != 1)
  {
    v14 = sub_23E537ED4();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v16 = &type metadata for StaticResident.Capability;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v13);
  }
  sub_23E39001C();
  v11 = v4;
  sub_23E5380C0();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_23E37C288(_QWORD *a1)
{
  return StaticResident.Capability.init(from:)(a1);
}

uint64_t sub_23E37C29C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E38FFD8();
  sub_23E5384EC();
  sub_23E39001C();
  sub_23E5381E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StaticResident.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticResident() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticResident.status.getter()
{
  type metadata accessor for StaticResident();
  return swift_bridgeObjectRetain();
}

uint64_t StaticResident.capabilities.getter()
{
  type metadata accessor for StaticResident();
  return swift_bridgeObjectRetain();
}

uint64_t StaticResident.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticResident();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticResident.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticResident() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticResident.init(id:name:roomName:status:capabilities:specialMediaCategory:homeId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, __int16 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  __int16 v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  _QWORD *v21;
  void (*v24)(uint64_t, uint64_t, uint64_t);

  v17 = *a8;
  v18 = sub_23E536F80();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v24(a9, a1, v18);
  v19 = (int *)type metadata accessor for StaticResident();
  v20 = (_QWORD *)(a9 + v19[5]);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(a9 + v19[6]);
  *v21 = a4;
  v21[1] = a5;
  *(_QWORD *)(a9 + v19[7]) = a6;
  *(_QWORD *)(a9 + v19[8]) = a7;
  *(_WORD *)(a9 + v19[9]) = v17;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(a9 + v19[10], a10, v18);
}

uint64_t StaticResident.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for StaticResident();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v4[6] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v5 = *(_QWORD *)(v1 + v4[7]);
  swift_bridgeObjectRetain();
  sub_23E240D30(a1, v5);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + v4[8]);
  swift_bridgeObjectRetain();
  sub_23E24144C(a1, v6);
  swift_bridgeObjectRelease();
  v7 = *(unsigned __int16 *)(v2 + v4[9]);
  if (!(v7 >> 14))
  {
    sub_23E538468();
    goto LABEL_8;
  }
  if (v7 >> 14 != 1)
  {
LABEL_8:
    sub_23E538468();
    return sub_23E5374D8();
  }
  sub_23E538468();
  sub_23E538474();
  sub_23E538474();
  return sub_23E5374D8();
}

uint64_t sub_23E37C7A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E37C7D0 + 4 * byte_23E54A734[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E37C7D0()
{
  return 1701667182;
}

uint64_t sub_23E37C7E0()
{
  return 0x656D614E6D6F6F72;
}

uint64_t sub_23E37C7F8()
{
  return 0x737574617473;
}

uint64_t sub_23E37C80C()
{
  return 0x696C696261706163;
}

unint64_t sub_23E37C82C()
{
  return 0xD000000000000014;
}

uint64_t sub_23E37C848()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E37C85C()
{
  unsigned __int8 *v0;

  return sub_23E37C7A8(*v0);
}

uint64_t sub_23E37C864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3911A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E37C888()
{
  sub_23E390060();
  return sub_23E538570();
}

uint64_t sub_23E37C8B0()
{
  sub_23E390060();
  return sub_23E53857C();
}

uint64_t StaticResident.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D448D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E390060();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticResident();
    LOBYTE(v13) = 1;
    sub_23E538270();
    LOBYTE(v13) = 2;
    sub_23E5381EC();
    v13 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D448E8);
    sub_23E3901B4(&qword_256D448F0, &qword_256D448E8, (uint64_t (*)(void))sub_23E3900A4, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[8]);
    v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44900);
    sub_23E3901B4(&qword_256D44908, &qword_256D44900, (uint64_t (*)(void))sub_23E3900E8, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOWORD(v13) = *(_WORD *)(v3 + v9[9]);
    v12 = 5;
    sub_23E39012C();
    sub_23E5382AC();
    LOBYTE(v13) = 6;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticResident.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t StaticResident.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v30 = a2;
  v33 = sub_23E536F80();
  v31 = *(_QWORD *)(v33 - 8);
  v3 = MEMORY[0x24BDAC7A8](v33);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v28 - v6;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44920);
  v7 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for StaticResident();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E390060();
  v34 = v9;
  v13 = v36;
  sub_23E5384E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v36 = v7;
  v29 = v5;
  v14 = v31;
  v15 = (uint64_t)v12;
  LOBYTE(v38) = 0;
  v16 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v32;
  v18 = v33;
  sub_23E538180();
  v28 = v16;
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v19(v15, v17, v18);
  LOBYTE(v38) = 1;
  v20 = sub_23E538144();
  v32 = (char *)v19;
  v21 = (uint64_t *)(v15 + v10[5]);
  *v21 = v20;
  v21[1] = v22;
  LOBYTE(v38) = 2;
  v23 = sub_23E5380D8();
  v24 = (uint64_t *)(v15 + v10[6]);
  *v24 = v23;
  v24[1] = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D448E8);
  v37 = 3;
  sub_23E3901B4(&qword_256D44928, &qword_256D448E8, (uint64_t (*)(void))sub_23E390170, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)(v15 + v10[7]) = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44900);
  v37 = 4;
  sub_23E3901B4(&qword_256D44938, &qword_256D44900, (uint64_t (*)(void))sub_23E390218, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)(v15 + v10[8]) = v38;
  v37 = 5;
  sub_23E39025C();
  sub_23E538180();
  *(_WORD *)(v15 + v10[9]) = v38;
  LOBYTE(v38) = 6;
  v26 = v29;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  ((void (*)(uint64_t, char *, uint64_t))v32)(v15 + v10[10], v26, v18);
  sub_23E1E2F50(v15, v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E37D114()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E37D154()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticResident.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E37D18C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticResident.init(from:)(a1, a2);
}

uint64_t sub_23E37D1A0(_QWORD *a1)
{
  return StaticResident.encode(to:)(a1);
}

uint64_t StaticResident.iconSymbol.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254333430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_WORD *)(inited + 32) = *(_WORD *)(v0 + *(int *)(type metadata accessor for StaticResident() + 36));
  v2 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
  swift_setDeallocating();
  return v2;
}

uint64_t sub_23E37D234(id *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v36);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v35 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v33 - v15;
  v17 = objc_msgSend(*a1, sel_device);
  if (v17)
  {
    v18 = v17;
    v19 = a2;
    v20 = objc_msgSend(v17, sel_uniqueIdentifier);

    sub_23E536F68();
    a2 = v19;
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v16, 0, 1, v4);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v16, 1, 1, v4);
  }
  v22 = objc_msgSend(a2, sel_device);
  v23 = objc_msgSend(v22, sel_uniqueIdentifier);

  sub_23E536F68();
  v21(v14, 0, 1, v4);
  v24 = (uint64_t)&v8[*(int *)(v36 + 48)];
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v8, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v14, v24, &qword_254333F50);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v8, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v14, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
    v26 = v25(v24, 1, v4);
    if (v26 == 1)
      v27 = &qword_254333F50;
    else
      v27 = &qword_254332798;
    if (v26 == 1)
      v28 = -1;
    else
      v28 = 0;
  }
  else
  {
    v29 = v35;
    sub_23E1E7C20((uint64_t)v8, v35, &qword_254333F50);
    if (v25(v24, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v14, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
      v28 = 0;
      v27 = &qword_254332798;
    }
    else
    {
      v30 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v34, v24, v4);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v28 = sub_23E537514();
      v31 = *(void (**)(char *, uint64_t))(v5 + 8);
      v31(v30, v4);
      v27 = &qword_254333F50;
      sub_23E1E7C64((uint64_t)v14, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
      v31((char *)v29, v4);
    }
  }
  sub_23E1E7C64((uint64_t)v8, v27);
  return v28 & 1;
}

void sub_23E37D5DC(void *a1@<X0>, __int16 *a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  __int16 v12;
  uint64_t v13;
  char v15;
  id v16;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, sel_category);
    v5 = objc_msgSend(v4, sel_categoryType);

    v6 = sub_23E53755C();
    v8 = v7;

    if (sub_23E53755C() == v6 && v9 == v8)
    {

      swift_bridgeObjectRelease_n();
      v12 = -32767;
    }
    else
    {
      v11 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        v12 = -32767;
      }
      else
      {
        if (sub_23E53755C() == v6 && v13 == v8)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v15 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {

            v12 = -260;
            goto LABEL_20;
          }
        }
        v16 = objc_msgSend(v3, sel_homePodVariant);

        if ((unint64_t)v16 >= 4)
          v12 = 1;
        else
          v12 = (__int16)v16;
      }
    }
  }
  else
  {
    v12 = -32766;
  }
LABEL_20:
  *a2 = v12;
}

uint64_t StaticResident.setAsPreferredResident(requireAutoUpdate:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 160) = v1;
  *(_BYTE *)(v2 + 352) = a1;
  v3 = sub_23E536F80();
  *(_QWORD *)(v2 + 168) = v3;
  *(_QWORD *)(v2 + 176) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 184) = swift_task_alloc();
  *(_QWORD *)(v2 + 192) = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  *(_QWORD *)(v2 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v2 + 208) = swift_task_alloc();
  *(_QWORD *)(v2 + 216) = swift_task_alloc();
  *(_QWORD *)(v2 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E37D820()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 232) = sub_23E5378F8();
  *(_QWORD *)(v0 + 240) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37D88C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E37D8F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 248) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37D950()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 256) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E37D998()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = sub_23E536F44();
  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37DA04()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[33];
  v2 = (void *)v0[32];
  swift_release();
  v0[35] = objc_msgSend(v2, sel_residentFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E37DA68()
{
  uint64_t v0;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (*(_QWORD *)(v0 + 280))
  {
    *(_QWORD *)(v0 + 288) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v2 = sub_23E5371A8();
    __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
    v3 = sub_23E537190();
    v4 = sub_23E537B08();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_23E1DF000, v3, v4, "calling setAsPreferredResident failed due to missing resident", v5, 2u);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E37DBD0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E37DC0C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37DC6C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 304) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E37DCB4()
{
  uint64_t v0;

  type metadata accessor for StaticResident();
  *(_QWORD *)(v0 + 312) = sub_23E536F44();
  *(_QWORD *)(v0 + 320) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E37DD30()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[39];
  v2 = (void *)v0[38];
  swift_release();
  v0[41] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E37DD94()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(uint64_t, uint64_t);
  void *v40;
  uint64_t v41;
  id v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void *v45;
  uint8_t *v46;
  NSObject *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  void *v58;
  void *v59;
  uint64_t v60;
  _QWORD *v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  os_log_type_t type;
  _QWORD *v71;
  NSObject *v72;

  v1 = *(void **)(v0 + 328);
  if (!v1)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v9 = sub_23E5371A8();
    __swift_project_value_buffer(v9, (uint64_t)qword_254333D88);
    v10 = sub_23E537190();
    v11 = sub_23E537B08();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(NSObject **)(v0 + 280);
    if (v12)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23E1DF000, v10, v11, "calling setAsPreferredResident failed due to missing home", v14, 2u);
      MEMORY[0x24264FEBC](v14, -1, -1);
      v15 = v10;
    }
    else
    {
      v15 = *(NSObject **)(v0 + 280);
      v13 = v10;
    }
    goto LABEL_28;
  }
  v2 = objc_msgSend(v1, sel_userSelectedPreferredResident);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  if (v2)
  {
    v6 = v2;
    v7 = objc_msgSend(v2, sel_uniqueIdentifier);

    sub_23E536F68();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v8(v3, 0, 1, v4);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v8(*(_QWORD *)(v0 + 224), 1, 1, v4);
  }
  v17 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 224);
  v19 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 168);
  v21 = *(_QWORD *)(v0 + 176);
  v22 = objc_msgSend(*(id *)(v0 + 280), sel_uniqueIdentifier);
  sub_23E536F68();

  v8(v17, 0, 1, v20);
  v23 = v18 + *(int *)(v19 + 48);
  sub_23E1E7C20(v16, v18, &qword_254333F50);
  sub_23E1E7C20(v17, v23, &qword_254333F50);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v24(v18, 1, v20) == 1)
  {
    v25 = *(_QWORD *)(v0 + 224);
    v26 = *(_QWORD *)(v0 + 168);
    sub_23E1E7C64(*(_QWORD *)(v0 + 216), &qword_254333F50);
    sub_23E1E7C64(v25, &qword_254333F50);
    if (v24(v23, 1, v26) == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 200), &qword_254333F50);
LABEL_17:
      if (qword_254333DB8 != -1)
        swift_once();
      v40 = *(void **)(v0 + 280);
      v41 = sub_23E5371A8();
      __swift_project_value_buffer(v41, (uint64_t)qword_254333D88);
      v42 = v40;
      v13 = sub_23E537190();
      v43 = sub_23E537B20();
      v44 = os_log_type_enabled(v13, v43);
      v15 = *(NSObject **)(v0 + 328);
      v45 = *(void **)(v0 + 280);
      if (v44)
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v71 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v46 = 138412290;
        *(_QWORD *)(v0 + 152) = v45;
        v47 = v45;
        sub_23E537CF4();
        *v71 = v45;

        _os_log_impl(&dword_23E1DF000, v13, v43, "selectPreferredResident already set to %@", v46, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v71, -1, -1);
        MEMORY[0x24264FEBC](v46, -1, -1);

        v13 = v47;
      }
      else
      {

      }
LABEL_28:

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    goto LABEL_14;
  }
  v27 = *(_QWORD *)(v0 + 168);
  sub_23E1E7C20(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), &qword_254333F50);
  v28 = v24(v23, 1, v27);
  v30 = *(_QWORD *)(v0 + 216);
  v29 = *(_QWORD *)(v0 + 224);
  v31 = *(_QWORD *)(v0 + 208);
  if (v28 == 1)
  {
    v33 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 176);
    sub_23E1E7C64(*(_QWORD *)(v0 + 216), &qword_254333F50);
    sub_23E1E7C64(v29, &qword_254333F50);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_14:
    sub_23E1E7C64(*(_QWORD *)(v0 + 200), &qword_254332798);
    goto LABEL_21;
  }
  v34 = *(_QWORD *)(v0 + 200);
  v35 = *(_QWORD *)(v0 + 176);
  v36 = *(_QWORD *)(v0 + 184);
  v37 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v36, v23, v37);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v38 = sub_23E537514();
  v39 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v39(v36, v37);
  sub_23E1E7C64(v30, &qword_254333F50);
  sub_23E1E7C64(v29, &qword_254333F50);
  v39(v31, v37);
  sub_23E1E7C64(v34, &qword_254333F50);
  if ((v38 & 1) != 0)
    goto LABEL_17;
LABEL_21:
  if (qword_254333DB8 != -1)
    swift_once();
  v48 = *(void **)(v0 + 328);
  v49 = *(void **)(v0 + 280);
  v50 = sub_23E5371A8();
  *(_QWORD *)(v0 + 336) = __swift_project_value_buffer(v50, (uint64_t)qword_254333D88);
  v51 = v49;
  v52 = v48;
  v53 = v51;
  v54 = v52;
  v55 = sub_23E537190();
  v56 = sub_23E537B20();
  v57 = os_log_type_enabled(v55, v56);
  v58 = *(void **)(v0 + 328);
  v59 = *(void **)(v0 + 280);
  if (v57)
  {
    type = v56;
    v60 = swift_slowAlloc();
    v61 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v60 = 138412546;
    *(_QWORD *)(v0 + 136) = v59;
    v72 = v55;
    v62 = v59;
    sub_23E537CF4();
    *v61 = v59;

    *(_WORD *)(v60 + 12) = 2112;
    *(_QWORD *)(v0 + 144) = v58;
    v63 = v58;
    v55 = v72;
    sub_23E537CF4();
    v61[1] = v58;

    _os_log_impl(&dword_23E1DF000, v72, type, "calling selectPreferredResident for %@ on %@", (uint8_t *)v60, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v61, -1, -1);
    MEMORY[0x24264FEBC](v60, -1, -1);
  }
  else
  {

  }
  v64 = *(void **)(v0 + 328);
  v65 = *(void **)(v0 + 280);
  v66 = *(unsigned __int8 *)(v0 + 352);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E37E508;
  v67 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v68 = (_QWORD *)(v0 + 80);
  v68[1] = 0x40000000;
  v68[2] = sub_23E267484;
  v68[3] = &block_descriptor_19;
  v68[4] = v67;
  objc_msgSend(v64, sel_selectPreferredResident_requireAutoUpdate_completion_, v65, v66, v68);
  return swift_continuation_await();
}

uint64_t sub_23E37E508()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 344) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E37E568()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 280);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E37E5E0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v19;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 280);
  swift_willThrow();

  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v4;
  v7 = sub_23E537190();
  v8 = sub_23E537B08();
  if (os_log_type_enabled(v7, v8))
  {
    v19 = *(void **)(v0 + 328);
    v9 = *(void **)(v0 + 280);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_QWORD *)(v0 + 120) = v9;
    *(_DWORD *)v10 = 138412546;
    v12 = v9;
    sub_23E537CF4();
    *v11 = v9;

    *(_WORD *)(v10 + 12) = 2112;
    *(_QWORD *)(v0 + 128) = v19;
    v13 = v19;
    sub_23E537CF4();
    v11[1] = v19;

    _os_log_impl(&dword_23E1DF000, v7, v8, "selectPreferredResident failed for %@ on %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);
  }
  else
  {
    v14 = *(void **)(v0 + 328);
    v15 = *(void **)(v0 + 280);

  }
  v16 = *(void **)(v0 + 328);
  v17 = *(void **)(v0 + 280);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E37E804(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, (void (*)(char *))StaticMediaProfile.hash(into:), &qword_256D44A70, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E37E828(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, (void (*)(char *))StaticMediaSystem.hash(into:), &qword_256D44A78, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel17StaticMediaSystemV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E37E84C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(char *), uint64_t *a5, uint64_t (*a6)(char *, uint64_t))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(char *);
  uint64_t *v28;
  uint64_t (*v29)(char *, uint64_t);
  char v30[72];

  v28 = a5;
  v29 = a6;
  v9 = v6;
  v12 = a3(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - v14;
  v16 = *v6;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  v27 = a4;
  a4(v30);
  v17 = sub_23E5384A4();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v19 = v17 & ~v18;
  if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
  {
    v25 = v6;
    v26 = a1;
    v20 = ~v18;
    v21 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v16 + 48) + v21 * v19, (uint64_t)v15, a3);
      v22 = v29(v15, a2);
      sub_23E1E2FA0((uint64_t)v15, a3);
      if ((v22 & 1) != 0)
        break;
      v19 = (v19 + 1) & v20;
      if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v9 = v25;
        a1 = v26;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(a2, a3);
    sub_23E1E2F50(*(_QWORD *)(*v25 + 48) + v21 * v19, v26, a3);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E1E2F50(a2, (uint64_t)v15, a3);
    *(_QWORD *)v30 = *v9;
    *v9 = 0x8000000000000000;
    sub_23E389F7C((uint64_t)v15, v19, isUniquelyReferenced_nonNull_native, a3, v28, v27, v29);
    *v9 = *(_QWORD *)v30;
    swift_bridgeObjectRelease();
    sub_23E1E2FDC(a2, a1, a3);
    return 1;
  }
}

uint64_t sub_23E37EA4C(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:), &qword_256D41D40, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E37EA70(_BYTE *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v4 = a2 & 1;
  v5 = *v2;
  sub_23E53845C();
  sub_23E538468();
  v6 = sub_23E5384A4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E387054(v4, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v4) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

BOOL sub_23E37EBA8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v1 = *v0;
  sub_23E53845C();
  sub_23E538468();
  v2 = sub_23E5384A4() & ~(-1 << *(_BYTE *)(v1 + 32));
  v3 = (1 << v2) & *(_QWORD *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v0;
    *v0 = 0x8000000000000000;
    sub_23E3871B8(v2, isUniquelyReferenced_nonNull_native);
    *v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_23E37EC68(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, (unint64_t *)&qword_254333358, 0x24BDD75B8, &qword_256D41D48);
}

uint64_t sub_23E37EC84(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, (unint64_t *)&qword_256D3FD20, 0x24BDD16E0, &qword_256D41DB8);
}

uint64_t sub_23E37ECA0(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x24264F6DC](*(_QWORD *)(v6 + 40), a2, 4);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E387444(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E37EDA0(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v5 = *v2;
  sub_23E53845C();
  v6 = dword_23E54B010[(char)a2];
  sub_23E53848C();
  v7 = sub_23E5384A4();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E387568(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v5 + 48);
  if (dword_23E54B010[*(char *)(v10 + v9)] != v6)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (dword_23E54B010[*(char *)(v10 + v9)] != v6);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E37EEDC(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, &qword_256D41DC8, 0x24BDDB670, &qword_256D41DC0);
}

uint64_t sub_23E37EEF8(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v5 = *v2;
  sub_23E53845C();
  v6 = dword_23E54B080[(char)a2];
  sub_23E53848C();
  v7 = sub_23E5384A4();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E3876E4(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v5 + 48);
  if (dword_23E54B080[*(char *)(v10 + v9)] != v6)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (dword_23E54B080[*(char *)(v10 + v9)] != v6);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E37F034(_WORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x24264F6DC](*(_QWORD *)(v6 + 40), (unsigned __int16)a2, 2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E387860(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E37F134(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v7 = *v3;
  sub_23E53845C();
  sub_23E538498();
  sub_23E538474();
  if ((a3 & 0x10000) == 0)
    sub_23E538480();
  v8 = sub_23E5384A4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    v15 = HIWORD(a3) & 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E387984(a2, a3 & 0x1FFFF, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_13;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = *(_QWORD *)(v7 + 48) + 16 * v10;
    if (*(_QWORD *)v12 != a2)
      goto LABEL_6;
    if ((*(_BYTE *)(v12 + 10) & 1) == 0)
      break;
    if ((a3 & 0x10000) != 0)
      goto LABEL_11;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_12;
  }
  if ((a3 & 0x10000) != 0 || *(unsigned __int16 *)(v12 + 8) != (unsigned __int16)a3)
    goto LABEL_6;
LABEL_11:
  result = 0;
  v14 = *(_QWORD *)(*v3 + 48) + 16 * v10;
  a2 = *(_QWORD *)v14;
  LOWORD(a3) = *(_WORD *)(v14 + 8);
  LOBYTE(v15) = *(_BYTE *)(v14 + 10);
LABEL_13:
  *(_QWORD *)a1 = a2;
  *(_WORD *)(a1 + 8) = a3;
  *(_BYTE *)(a1 + 10) = v15;
  return result;
}

uint64_t sub_23E37F2BC(_BYTE *a1, uint64_t a2)
{
  return sub_23E380B84(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter, &qword_2543333A0);
}

uint64_t sub_23E37F2D8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[4];

  v3 = v2;
  v6 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v25 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  v12 = *v2;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  StaticAccessory.hash(into:)(v29);
  v28 = a2 + *(int *)(v6 + 20);
  StaticService.hash(into:)(v29);
  v27 = a2 + *(int *)(v6 + 24);
  StaticCharacteristic.hash(into:)();
  v13 = sub_23E5384A4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  v16 = *(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15;
  v26 = v11;
  if ((v16 & 1) != 0)
  {
    v23 = v2;
    v24 = a1;
    v17 = ~v14;
    v18 = *(_QWORD *)(v25 + 72);
    do
    {
      sub_23E1E2F50(*(_QWORD *)(v12 + 48) + v18 * v15, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v6 + 20)], v28) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v6 + 24)], v27))
      {
        sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        swift_bridgeObjectRelease();
        sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        sub_23E1E2F50(*(_QWORD *)(*v23 + 48) + v18 * v15, v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        return 0;
      }
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v15 = (v15 + 1) & v17;
    }
    while (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    v3 = v23;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = (uint64_t)v26;
  sub_23E1E2F50(a2, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  *(_QWORD *)&v29[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23E387B24(v21, v15, isUniquelyReferenced_nonNull_native);
  *v3 = *(_QWORD *)&v29[0];
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return 1;
}

uint64_t sub_23E37F560(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, type metadata accessor for StaticAccessory, (void (*)(char *))StaticAccessory.hash(into:), &qword_256D44AA8, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E37F584(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55[5];

  v3 = v2;
  v6 = sub_23E536F80();
  v51 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v43 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v47);
  v54 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v41 - v12;
  v52 = type metadata accessor for StaticMediaSystemComponent();
  v13 = *(_QWORD *)(v52 - 8);
  v14 = MEMORY[0x24BDAC7A8](v52);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v46 = (char *)&v41 - v17;
  v18 = *v2;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  StaticMediaSystemComponent.hash(into:)(v55);
  v19 = sub_23E5384A4();
  v20 = -1 << *(_BYTE *)(v18 + 32);
  v21 = v19 & ~v20;
  v22 = v18 + 56;
  if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    v38 = (uint64_t)v46;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E1E2F50(a2, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    *(_QWORD *)&v55[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_23E387D64(v38, v21, isUniquelyReferenced_nonNull_native);
    *v3 = *(_QWORD *)&v55[0];
    swift_bridgeObjectRelease();
    sub_23E1E2FDC(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    return 1;
  }
  v48 = v6;
  v41 = v2;
  v42 = a1;
  v23 = ~v20;
  v24 = *(_QWORD *)(v13 + 72);
  v25 = (int *)v52;
  v44 = ~v20;
  v45 = v18 + 56;
  while (1)
  {
    sub_23E1E2F50(*(_QWORD *)(v18 + 48) + v24 * v21, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || (_s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)&v16[v25[5]], a2 + v25[5]) & 1) == 0
      || *(_QWORD *)&v16[v25[6]] != *(_QWORD *)(a2 + v25[6])
      || (sub_23E1F8470(*(_QWORD *)&v16[v25[7]], *(_QWORD *)(a2 + v25[7])) & 1) == 0)
    {
      goto LABEL_5;
    }
    v27 = v25[8];
    v50 = (uint64_t)&v16[v27];
    v28 = v53;
    sub_23E1E7C20(a2 + v27, v53, &qword_254333F50);
    v29 = v54;
    v30 = v54 + *(int *)(v47 + 48);
    sub_23E1E7C20(v50, v54, &qword_254333F50);
    v50 = v30;
    sub_23E1E7C20(v28, v30, &qword_254333F50);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
    v32 = v29;
    v33 = v48;
    if (v31(v32, 1, v48) == 1)
      break;
    sub_23E1E7C20(v54, (uint64_t)v49, &qword_254333F50);
    if (v31(v50, 1, v33) == 1)
    {
      sub_23E1E7C64(v53, &qword_254333F50);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v48);
      v25 = (int *)v52;
      v23 = v44;
      v22 = v45;
      goto LABEL_4;
    }
    v34 = v51;
    v35 = v43;
    v36 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v43, v50, v48);
    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    LODWORD(v50) = sub_23E537514();
    v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    v37(v35, v36);
    sub_23E1E7C64(v53, &qword_254333F50);
    v37(v49, v36);
    sub_23E1E7C64(v54, &qword_254333F50);
    v25 = (int *)v52;
    v23 = v44;
    v22 = v45;
    if ((v50 & 1) != 0)
      goto LABEL_20;
LABEL_5:
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v21 = (v21 + 1) & v23;
    if (((*(_QWORD *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      a1 = v42;
      v3 = v41;
      goto LABEL_17;
    }
  }
  sub_23E1E7C64(v53, &qword_254333F50);
  v26 = v31(v50, 1, v33);
  v25 = (int *)v52;
  v23 = v44;
  v22 = v45;
  if (v26 != 1)
  {
LABEL_4:
    sub_23E1E7C64(v54, &qword_254332798);
    goto LABEL_5;
  }
  sub_23E1E7C64(v54, &qword_254333F50);
LABEL_20:
  sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  sub_23E1E2F50(*(_QWORD *)(*v41 + 48) + v24 * v21, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  return 0;
}

uint64_t sub_23E37FAC0(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, &qword_256D41DD8, 0x24BDD7490, &qword_256D41DD0);
}

uint64_t sub_23E37FADC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD v57[10];

  v3 = v2;
  v6 = sub_23E536F80();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v56 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v39 - v10;
  v11 = type metadata accessor for StaticZone();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - v15;
  v17 = *v3;
  sub_23E53845C();
  sub_23E1EE1C4(&qword_254333DA0, v7, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  sub_23E5374D8();
  v43 = (_QWORD *)(a2 + *(int *)(v11 + 20));
  sub_23E5375EC();
  v45 = v11;
  v18 = *(int *)(v11 + 24);
  v50 = a2;
  v42 = v18;
  sub_23E26140C((uint64_t)v57, *(_QWORD *)(a2 + v18));
  v19 = sub_23E5384A4();
  v20 = -1 << *(_BYTE *)(v17 + 32);
  v21 = v19 & ~v20;
  v47 = v17 + 56;
  if (((*(_QWORD *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
  {
    v39 = v16;
    v40 = v3;
    v41 = a1;
    v44 = ~v20;
    v49 = *(_QWORD *)(v12 + 72);
    v22 = v52;
    v48 = v17;
    v23 = v55;
    do
    {
      v24 = *(_QWORD *)(v17 + 48);
      v51 = v21;
      v46 = v49 * v21;
      sub_23E1E2F50(v24 + v49 * v21, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        v25 = (_QWORD *)(v52 + *(int *)(v45 + 20));
        v26 = *v25 == *v43 && v25[1] == v43[1];
        if (v26 || (sub_23E538354() & 1) != 0)
        {
          v27 = *(_QWORD *)(v52 + *(int *)(v45 + 24));
          v28 = *(_QWORD *)(v50 + v42);
          v29 = *(_QWORD *)(v27 + 16);
          if (v29 == *(_QWORD *)(v28 + 16))
          {
            if (!v29 || v27 == v28)
            {
LABEL_16:
              sub_23E1E2FA0(v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
              swift_bridgeObjectRelease();
              sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
              sub_23E1E2F50(*(_QWORD *)(*v40 + 48) + v46, v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
              return 0;
            }
            v30 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
            v53 = *(_QWORD *)(v56 + 72);
            v31 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
            while (1)
            {
              v32 = v54;
              v31(v54, v27 + v30, v6);
              v31(v23, v28 + v30, v6);
              sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v33 = sub_23E537514();
              v34 = *(void (**)(char *, uint64_t))(v56 + 8);
              v34(v23, v6);
              v34(v32, v6);
              if ((v33 & 1) == 0)
                break;
              v30 += v53;
              if (!--v29)
                goto LABEL_16;
            }
          }
        }
      }
      v22 = v52;
      sub_23E1E2FA0(v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v21 = (v51 + 1) & v44;
      v17 = v48;
    }
    while (((*(_QWORD *)(v47 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
    v36 = (v51 + 1) & v44;
    swift_bridgeObjectRelease();
    a1 = v41;
    v3 = v40;
    v16 = v39;
  }
  else
  {
    v36 = v19 & ~v20;
    swift_bridgeObjectRelease();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = v50;
  sub_23E1E2F50(v50, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
  v57[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23E38825C((uint64_t)v16, v36, isUniquelyReferenced_nonNull_native);
  *v3 = v57[0];
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(v38, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
  return 1;
}

uint64_t sub_23E37FF78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  _QWORD v57[2];
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;

  v3 = v2;
  v6 = (int *)type metadata accessor for StaticActionSet();
  v7 = *((_QWORD *)v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v54 - v11;
  v12 = *v2;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  StaticActionSet.hash(into:)(&v68);
  v13 = sub_23E5384A4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v54 = v2;
  v55 = a1;
  v16 = ~v14;
  v17 = *(_QWORD *)(v7 + 72);
  do
  {
    sub_23E1E2F50(*(_QWORD *)(v12 + 48) + v17 * v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    {
      v18 = v6[5];
      v19 = *(_QWORD *)&v10[v18];
      v20 = *(_QWORD *)&v10[v18 + 8];
      v21 = (_QWORD *)(a2 + v18);
      v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (sub_23E538354() & 1) != 0)
      {
        v23 = v6[6];
        v24 = v10[v23];
        v25 = *(unsigned __int8 *)(a2 + v23);
        if (v24 == 7)
        {
          if (v25 != 7)
            goto LABEL_3;
        }
        else
        {
          if (v25 == 7)
            goto LABEL_3;
          sub_23E52398C(v24);
          if ((v26 & 1) == 0)
            goto LABEL_3;
        }
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          v27 = &v10[v6[8]];
          v28 = *(_QWORD *)v27;
          v29 = *((_QWORD *)v27 + 1);
          v30 = v27[16];
          v31 = *((_QWORD *)v27 + 3);
          v32 = *((_QWORD *)v27 + 4);
          v33 = v27[40];
          v34 = *((_QWORD *)v27 + 6);
          v35 = *((_QWORD *)v27 + 7);
          v36 = v27[64];
          v37 = *((_QWORD *)v27 + 9);
          v38 = *((_QWORD *)v27 + 10);
          LOBYTE(v27) = v27[88];
          *(_QWORD *)&v68 = v28;
          *((_QWORD *)&v68 + 1) = v29;
          v69 = v30;
          v70 = v31;
          v71 = v32;
          v72 = v33;
          v73 = v34;
          v74 = v35;
          v75 = v36;
          v76 = v37;
          v77 = v38;
          v78 = (char)v27;
          v39 = a2 + v6[8];
          v40 = *(_QWORD *)v39;
          v41 = *(_QWORD *)(v39 + 8);
          v42 = *(_BYTE *)(v39 + 16);
          v43 = *(_QWORD *)(v39 + 24);
          v44 = *(_QWORD *)(v39 + 32);
          v45 = *(_BYTE *)(v39 + 40);
          v46 = *(_QWORD *)(v39 + 48);
          v47 = *(_QWORD *)(v39 + 56);
          v48 = *(_BYTE *)(v39 + 64);
          v49 = *(_QWORD *)(v39 + 72);
          v50 = *(_QWORD *)(v39 + 80);
          LOBYTE(v39) = *(_BYTE *)(v39 + 88);
          v57[0] = v40;
          v57[1] = v41;
          v58 = v42;
          v59 = v43;
          v60 = v44;
          v61 = v45;
          v62 = v46;
          v63 = v47;
          v64 = v48;
          v65 = v49;
          v66 = v50;
          v67 = v39;
          if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)v57)
            && (sub_23E5372F8() & 1) != 0
            && (sub_23E1F8470(*(_QWORD *)&v10[v6[10]], *(_QWORD *)(a2 + v6[10])) & 1) != 0
            && v10[v6[11]] == *(_BYTE *)(a2 + v6[11])
            && (sub_23E336E44(*(_QWORD *)&v10[v6[12]], *(_QWORD *)(a2 + v6[12])) & 1) != 0
            && v10[v6[13]] == *(_BYTE *)(a2 + v6[13])
            && v10[v6[14]] == *(_BYTE *)(a2 + v6[14]))
          {
            sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
            swift_bridgeObjectRelease();
            sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
            sub_23E1E2F50(*(_QWORD *)(*v54 + 48) + v17 * v15, v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
            return 0;
          }
        }
      }
    }
LABEL_3:
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v15 = (v15 + 1) & v16;
  }
  while (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  swift_bridgeObjectRelease();
  a1 = v55;
  v3 = v54;
LABEL_26:
  v52 = (uint64_t)v56;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23E1E2F50(a2, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  *(_QWORD *)&v68 = *v3;
  *v3 = 0x8000000000000000;
  sub_23E388674(v52, v15, isUniquelyReferenced_nonNull_native);
  *v3 = v68;
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  return 1;
}

uint64_t sub_23E38036C(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (void (*)(char *))StaticCameraProfile.hash(into:), &qword_256D44A80, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E380390(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, type metadata accessor for StaticRoom, (void (*)(char *))StaticRoom.hash(into:), &qword_256D44A50, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E3803B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  __int128 v34[4];

  v3 = v2;
  v6 = (int *)type metadata accessor for StaticServiceGroup();
  v7 = *((_QWORD *)v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)&v31 - v11;
  v12 = *v2;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  StaticServiceGroup.hash(into:)(v34);
  v13 = sub_23E5384A4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v31 = v2;
    v32 = a1;
    v16 = ~v14;
    v17 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v12 + 48) + v17 * v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        v18 = v6[5];
        v19 = *(_QWORD *)&v10[v18];
        v20 = *(_QWORD *)&v10[v18 + 8];
        v21 = (_QWORD *)(a2 + v18);
        v22 = v19 == *v21 && v20 == v21[1];
        if ((v22 || (sub_23E538354() & 1) != 0)
          && v10[v6[6]] == *(_BYTE *)(a2 + v6[6])
          && v10[v6[7]] == *(_BYTE *)(a2 + v6[7])
          && (sub_23E1F8470(*(_QWORD *)&v10[v6[8]], *(_QWORD *)(a2 + v6[8])) & 1) != 0)
        {
          v23 = v6[9];
          v24 = &v10[v23];
          v25 = *(_QWORD *)&v10[v23 + 8];
          v26 = (_QWORD *)(a2 + v23);
          v27 = v26[1];
          if (v25)
          {
            if (v27 && (*(_QWORD *)v24 == *v26 && v25 == v27 || (sub_23E538354() & 1) != 0))
            {
LABEL_20:
              if (v10[v6[10]] == *(_BYTE *)(a2 + v6[10])
                && (sub_23E1F8844(*(_QWORD *)&v10[v6[11]], *(_QWORD *)(a2 + v6[11])) & 1) != 0)
              {
                sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
                swift_bridgeObjectRelease();
                sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
                sub_23E1E2F50(*(_QWORD *)(*v31 + 48) + v17 * v15, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
                return 0;
              }
            }
          }
          else if (!v27)
          {
            goto LABEL_20;
          }
        }
      }
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v15 = (v15 + 1) & v16;
      if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v31;
        a1 = v32;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  v29 = (uint64_t)v33;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23E1E2F50(a2, v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  *(_QWORD *)&v34[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23E388A40(v29, v15, isUniquelyReferenced_nonNull_native);
  *v3 = *(_QWORD *)&v34[0];
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  return 1;
}

uint64_t sub_23E3806B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v3 = v2;
  v6 = (int *)type metadata accessor for StaticResident();
  v7 = *((_QWORD *)v6 - 1);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)&v35 - v11;
  v12 = *v2;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  StaticResident.hash(into:)((uint64_t)v38);
  v13 = sub_23E5384A4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  v35 = v2;
  v36 = a1;
  v16 = ~v14;
  v17 = *(_QWORD *)(v7 + 72);
  do
  {
    sub_23E1E2F50(*(_QWORD *)(v12 + 48) + v17 * v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      goto LABEL_4;
    v18 = v6[5];
    v19 = *(_QWORD *)&v10[v18];
    v20 = *(_QWORD *)&v10[v18 + 8];
    v21 = (_QWORD *)(a2 + v18);
    v22 = v19 == *v21 && v20 == v21[1];
    if (!v22 && (sub_23E538354() & 1) == 0)
      goto LABEL_4;
    v23 = v6[6];
    v24 = &v10[v23];
    v25 = *(_QWORD *)&v10[v23 + 8];
    v26 = (_QWORD *)(a2 + v23);
    v27 = v26[1];
    if (v25)
    {
      if (!v27)
        goto LABEL_4;
      v28 = *(_QWORD *)v24 == *v26 && v25 == v27;
      if (!v28 && (sub_23E538354() & 1) == 0)
        goto LABEL_4;
    }
    else if (v27)
    {
      goto LABEL_4;
    }
    if ((sub_23E3372B8(*(_QWORD *)&v10[v6[7]], *(_QWORD *)(a2 + v6[7])) & 1) == 0
      || (sub_23E337498(*(_QWORD *)&v10[v6[8]], *(_QWORD *)(a2 + v6[8])) & 1) == 0)
    {
      goto LABEL_4;
    }
    v29 = v6[9];
    v30 = *(unsigned __int16 *)&v10[v29];
    v31 = *(unsigned __int16 *)(a2 + v29);
    if (v30 >> 14)
    {
      if (v30 >> 14 != 1)
      {
        switch(v30)
        {
          case 0x8000u:
            if (v31 == 0x8000)
              goto LABEL_39;
            goto LABEL_4;
          case 0x8001u:
            if (v31 == 32769)
              goto LABEL_39;
            goto LABEL_4;
          case 0x8002u:
            if (v31 == 32770)
              goto LABEL_39;
            goto LABEL_4;
          case 0x8003u:
            if (v31 == 32771)
              goto LABEL_39;
            goto LABEL_4;
          default:
            if (v31 == 33024)
              goto LABEL_39;
            goto LABEL_4;
        }
      }
      if ((v31 & 0xC000) != 0x4000
        || ((v30 & 1) == 0) == (v31 & 1)
        || ((((v30 & 0x100) == 0) ^ ((unsigned __int16)(v31 & 0x100) >> 8)) & 1) == 0)
      {
        goto LABEL_4;
      }
    }
    else if (v31 >> 14 || v31 != v30)
    {
      goto LABEL_4;
    }
LABEL_39:
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    {
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      sub_23E1E2F50(*(_QWORD *)(*v35 + 48) + v17 * v15, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      return 0;
    }
LABEL_4:
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v15 = (v15 + 1) & v16;
  }
  while (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  swift_bridgeObjectRelease();
  v3 = v35;
  a1 = v36;
LABEL_43:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v34 = v37;
  sub_23E1E2F50(a2, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  v38[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23E388FC8(v34, v15, isUniquelyReferenced_nonNull_native);
  *v3 = v38[0];
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  return 1;
}

uint64_t sub_23E380A68(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_23E53845C();
  sub_23E538468();
  v6 = sub_23E5384A4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E38936C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23E380B84(_BYTE *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _BYTE *v23;
  uint64_t v24;

  v8 = *v4;
  v9 = sub_23E53845C();
  ((void (*)(uint64_t))a3)(v9);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v10 = sub_23E5384A4();
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  v23 = a1;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    while (1)
    {
      v14 = a3();
      v16 = v15;
      if (v14 == a3() && v16 == v17)
        break;
      v19 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        goto LABEL_11;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease_n();
LABEL_11:
    swift_bridgeObjectRelease();
    result = 0;
    LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v4 + 48) + v12);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v4;
    *v4 = 0x8000000000000000;
    sub_23E3894C8(a2, v12, isUniquelyReferenced_nonNull_native, a4, (void (*)(uint64_t))a3);
    *v4 = v24;
    swift_bridgeObjectRelease();
    result = 1;
  }
  *v23 = a2;
  return result;
}

uint64_t sub_23E380D5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t *v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;

  v54 = a1;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  MEMORY[0x24BDAC7A8](v64);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v51 - v10;
  v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v61 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v57 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v56 = (uint64_t *)((char *)&v51 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v65 = (char *)&v51 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v52 = (uint64_t)&v51 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v51 - v21;
  v53 = v2;
  v23 = *v2;
  sub_23E53845C();
  v66 = a2;
  v63 = v12;
  sub_23E1E2F50(a2, (uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v59 = v7;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v22, v6);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  else
  {
    sub_23E538468();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  v25 = v23;
  v26 = sub_23E5384A4();
  v27 = -1 << *(_BYTE *)(v23 + 32);
  v28 = v26 & ~v27;
  v62 = v23 + 56;
  v29 = (uint64_t)v57;
  v30 = (uint64_t)v65;
  if (((*(_QWORD *)(v23 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    v46 = v53;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48 = v66;
    v49 = v52;
    sub_23E1E2F50(v66, v52, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v67 = *v46;
    *v46 = 0x8000000000000000;
    sub_23E3896B8(v49, v28, isUniquelyReferenced_nonNull_native);
    *v46 = v67;
    swift_bridgeObjectRelease();
    sub_23E1E2FDC(v48, v54, type metadata accessor for StaticAccessory.DeviceIdentifier);
    return 1;
  }
  v60 = ~v27;
  v61 = *(_QWORD *)(v61 + 72);
  v58 = v6;
  v31 = v59;
  while (1)
  {
    v32 = v25;
    v33 = v61 * v28;
    sub_23E1E2F50(*(_QWORD *)(v25 + 48) + v61 * v28, v30, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v34 = &v5[*(int *)(v64 + 48)];
    sub_23E1E2F50(v30, (uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2F50(v66, (uint64_t)v34, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_23E1E2F50((uint64_t)v5, v29, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v35 = v55;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v55, v34, v6);
      v36 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v37 = *(void (**)(char *, uint64_t))(v31 + 8);
      v38 = v35;
      v29 = (uint64_t)v57;
      v37(v38, v6);
      v37((char *)v29, v6);
      v30 = (uint64_t)v65;
      if ((v36 & 1) != 0)
        goto LABEL_23;
LABEL_20:
      sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v6 = v58;
      v31 = v59;
      v25 = v32;
      goto LABEL_8;
    }
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v6);
LABEL_7:
    v25 = v32;
    v30 = (uint64_t)v65;
    sub_23E1E7C64((uint64_t)v5, &qword_254333228);
LABEL_8:
    sub_23E1E2FA0(v30, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v28 = (v28 + 1) & v60;
    if (((*(_QWORD *)(v62 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_21;
  }
  v39 = v56;
  sub_23E1E2F50((uint64_t)v5, (uint64_t)v56, type metadata accessor for StaticAccessory.DeviceIdentifier);
  v41 = *v39;
  v40 = v39[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v6 = v58;
    v31 = v59;
    goto LABEL_7;
  }
  v42 = *(_QWORD *)v34;
  v43 = *((_QWORD *)v34 + 1);
  if (v41 != v42 || v40 != v43)
  {
    v45 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v65;
    if ((v45 & 1) != 0)
      goto LABEL_23;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
  v30 = (uint64_t)v65;
LABEL_23:
  sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E2FA0(v30, type metadata accessor for StaticAccessory.DeviceIdentifier);
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v66, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E2F50(*(_QWORD *)(*v53 + 48) + v33, v54, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return 0;
}

uint64_t sub_23E381318(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  _QWORD *v21;
  uint64_t v22;

  v3 = v2;
  v6 = *v2;
  sub_23E53845C();
  sub_23E538474();
  swift_bridgeObjectRetain();
  if (a2)
  {
    v7 = a2;
    sub_23E537C64();

  }
  v8 = sub_23E5384A4();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  v21 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v21;
    *v21 = 0x8000000000000000;
    v20 = a2;
    sub_23E389C1C(a2, v10, isUniquelyReferenced_nonNull_native);
    *v21 = v22;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v10);
    if (v12)
      break;
    if (!a2)
      goto LABEL_11;
LABEL_6:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_12;
  }
  if (!a2)
    goto LABEL_6;
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v13 = a2;
  v14 = v12;
  v15 = sub_23E537C58();

  if ((v15 & 1) == 0)
    goto LABEL_6;

LABEL_11:
  swift_bridgeObjectRelease();
  v16 = *(void **)(*(_QWORD *)(*v21 + 48) + 8 * v10);
  *a1 = v16;
  v17 = v16;
  return 0;
}

uint64_t sub_23E3814F8(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, (unint64_t *)&qword_254333DD0, 0x24BDD76B0, &qword_256D44A20);
}

uint64_t sub_23E381514(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  v8 = sub_23E5384A4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23E538354() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23E538354() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23E389DE4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23E3816C0(uint64_t a1, uint64_t a2)
{
  return sub_23E37E84C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, (void (*)(char *))ActionService.hash(into:), &qword_256D449F8, (uint64_t (*)(char *, uint64_t))_s13HomeDataModel13ActionServiceV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E3816E4(_QWORD *a1, void *a2)
{
  return sub_23E381700(a1, a2, &qword_254332C28, 0x24BDD7948, &qword_256D44A48);
}

uint64_t sub_23E381700(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = v5;
  v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0)
      v12 = *v5;
    else
      v12 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = sub_23E537DC0();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_23E1E335C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_23E537DB4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_23E3824A0(v12, result + 1, a5, a3);
    v37 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v32 = v27 + 1;
      v33 = v13;
      sub_23E386138(v32, a5);
      v28 = v37;
    }
    else
    {
      v28 = v26;
      v29 = v13;
    }
    sub_23E386DCC((uint64_t)v13, v28);
    *v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = sub_23E537C4C();
    v17 = -1 << *(_BYTE *)(v11 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_23E1E335C(0, a3);
      v19 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
      v20 = sub_23E537C58();

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v18);
        v23 = sub_23E537C58();

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = *v5;
    *v5 = 0x8000000000000000;
    v31 = a2;
    sub_23E3872B4((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_23E3819C8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_23E538450();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E38A178(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_23E381AC0(uint64_t a1, char a2)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E381B2C()
{
  _BYTE *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v4 = sub_23E5384A4() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  sub_23E200660(v2, v4, isUniquelyReferenced_nonNull_native);
  *v1 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v0 = (_BYTE)v2;
  return result;
}

uint64_t sub_23E381E38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  _QWORD *v42;
  uint64_t *v44;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v50 = a1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v63);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = _s7MergeIdVMa();
  v60 = *(_QWORD *)(v54 - 8);
  v6 = MEMORY[0x24BDAC7A8](v54);
  v64 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v48 = (uint64_t)&v47 - v8;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  v49 = v2;
  v21 = *v2;
  sub_23E53845C();
  v52 = a2;
  sub_23E1E7C20(a2, (uint64_t)v20, &qword_254333F50);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v22 = v62(v20, 1, v9);
  v56 = v10;
  v47 = v9;
  if (v22 == 1)
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v20, v9);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v23 = v52;
  v24 = (uint64_t)v57;
  v53 = (_QWORD *)(v52 + *(int *)(v54 + 20));
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v25 = sub_23E5384A4();
  v26 = -1 << *(_BYTE *)(v21 + 32);
  v27 = v25 & ~v26;
  v28 = v21 + 56;
  v29 = v21;
  if (((*(_QWORD *)(v21 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
  {
    v51 = v12;
    v59 = ~v26;
    v60 = *(_QWORD *)(v60 + 72);
    v30 = v64;
    v31 = v47;
    v61 = v21;
    v55 = v21 + 56;
    do
    {
      v32 = *(_QWORD *)(v29 + 48);
      v58 = v60 * v27;
      sub_23E1E2F50(v32 + v60 * v27, v30, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      v33 = v23;
      sub_23E1E7C20(v23, (uint64_t)v18, &qword_254333F50);
      v34 = v30;
      v35 = (uint64_t)&v5[*(int *)(v63 + 48)];
      sub_23E1E7C20(v34, (uint64_t)v5, &qword_254333F50);
      sub_23E1E7C20((uint64_t)v18, v35, &qword_254333F50);
      v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v62;
      if (v62(v5, 1, v31) == 1)
      {
        sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
        if (v36(v35, 1, v31) != 1)
          goto LABEL_13;
        sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
        v23 = v33;
      }
      else
      {
        sub_23E1E7C20((uint64_t)v5, v24, &qword_254333F50);
        if (v36(v35, 1, v31) == 1)
        {
          sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v24, v31);
          v28 = v55;
LABEL_13:
          sub_23E1E7C64((uint64_t)v5, &qword_254332798);
          v23 = v33;
          goto LABEL_7;
        }
        v37 = v56;
        v38 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v51, v35, v31);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v39 = sub_23E537514();
        v40 = *(void (**)(char *, uint64_t))(v37 + 8);
        v41 = v38;
        v24 = (uint64_t)v57;
        v40(v41, v31);
        sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
        v40((char *)v24, v31);
        v23 = v52;
        sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
        v28 = v55;
        if ((v39 & 1) == 0)
          goto LABEL_7;
      }
      v42 = (_QWORD *)(v64 + *(int *)(v54 + 20));
      if (*v42 == *v53 && v42[1] == v53[1] || (sub_23E538354() & 1) != 0)
      {
        sub_23E1E2FA0(v64, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        swift_bridgeObjectRelease();
        sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        sub_23E1E2F50(*(_QWORD *)(*v49 + 48) + v58, v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        return 0;
      }
LABEL_7:
      v30 = v64;
      sub_23E1E2FA0(v64, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      v27 = (v27 + 1) & v59;
      v29 = v61;
    }
    while (((*(_QWORD *)(v28 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  v44 = v49;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v46 = v48;
  sub_23E1E2F50(v23, v48, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  v65 = *v44;
  *v44 = 0x8000000000000000;
  sub_23E38A2E0(v46, v27, isUniquelyReferenced_nonNull_native);
  *v44 = v65;
  swift_bridgeObjectRelease();
  sub_23E1E2FDC(v23, v50, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  return 1;
}

uint64_t sub_23E382484(uint64_t a1, uint64_t a2)
{
  return sub_23E3824A0(a1, a2, &qword_256D41D48, (unint64_t *)&qword_254333358);
}

uint64_t sub_23E3824A0(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_23E537E50();
    v19 = v6;
    sub_23E537D78();
    if (sub_23E537DD8())
    {
      sub_23E1E335C(0, a4);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_23E386138(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_23E537C4C();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_23E537DD8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v6;
}

uint64_t sub_23E3826A0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(char *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(char *);
  char v41[72];

  v40 = a4;
  v7 = v4;
  v8 = a2(0);
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23E537E44();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v36 = v4;
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v38 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v37 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v37)
          goto LABEL_33;
        v25 = v38[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_33;
          v25 = v38[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v37)
              goto LABEL_33;
            v25 = v38[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v37)
              {
LABEL_33:
                swift_release();
                v7 = v36;
                v35 = 1 << *(_BYTE *)(v11 + 32);
                if (v35 > 63)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v38[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v37)
                    goto LABEL_33;
                  v25 = v38[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = *(_QWORD *)(v39 + 72);
      sub_23E1E2FDC(*(_QWORD *)(v11 + 48) + v27 * v23, (uint64_t)v10, a2);
      sub_23E53845C();
      v40(v41);
      result = sub_23E5384A4();
      v28 = -1 << *(_BYTE *)(v13 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v18 + 8 * v30);
        }
        while (v34 == -1);
        v21 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = sub_23E1E2FDC((uint64_t)v10, *(_QWORD *)(v13 + 48) + v21 * v27, a2);
      ++*(_QWORD *)(v13 + 16);
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_23E3829F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333A8);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E382C98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449F0);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v23 = v2;
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10)
          goto LABEL_31;
        v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          v5 = v13 + 1;
          if (v13 + 1 >= v10)
            goto LABEL_31;
          v9 = v6[v5];
          if (!v9)
          {
            v5 = v13 + 2;
            if (v13 + 2 >= v10)
              goto LABEL_31;
            v9 = v6[v5];
            if (!v9)
            {
              v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                v22 = 1 << *(_BYTE *)(v23 + 32);
                if (v22 > 63)
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v22;
                v1 = v0;
                *(_QWORD *)(v23 + 16) = 0;
                break;
              }
              v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  v5 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_37;
                  if (v5 >= v10)
                    goto LABEL_31;
                  v9 = v6[v5];
                  ++v14;
                  if (v9)
                    goto LABEL_22;
                }
              }
              v5 = v14;
            }
          }
        }
      }
LABEL_22:
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v15 = -1 << *(_BYTE *)(v4 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v18 = 0;
        v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v20 = v17 == v19;
          if (v17 == v19)
            v17 = 0;
          v18 |= v20;
          v21 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E382F0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_23E536F80();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332258);
  v6 = sub_23E537E44();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_23E5374CC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23E383278()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A98);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v4 + 40), v18, 4);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E3834FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AB8);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E3837B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D50);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E383A64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AA0);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v14);
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v4 + 40), v18, 2);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E383CE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AB0);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v30 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v29 = (unint64_t)(v6 + 63) >> 6;
    v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v5 << 6);
      }
      else
      {
        v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v29)
          goto LABEL_35;
        v15 = v30[v14];
        ++v5;
        if (!v15)
        {
          v5 = v14 + 1;
          if (v14 + 1 >= v29)
            goto LABEL_35;
          v15 = v30[v5];
          if (!v15)
          {
            v5 = v14 + 2;
            if (v14 + 2 >= v29)
              goto LABEL_35;
            v15 = v30[v5];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v29)
              {
LABEL_35:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v30[v16];
              if (!v15)
              {
                while (1)
                {
                  v5 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_41;
                  if (v5 >= v29)
                    goto LABEL_35;
                  v15 = v30[v5];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v5 = v16;
            }
          }
        }
LABEL_23:
        v8 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      v17 = *(_QWORD *)(v2 + 48) + 16 * v13;
      v18 = *(_QWORD *)v17;
      v19 = *(_WORD *)(v17 + 8);
      v20 = *(unsigned __int8 *)(v17 + 10);
      sub_23E53845C();
      sub_23E538498();
      sub_23E538474();
      if (v20 != 1)
        sub_23E538480();
      result = sub_23E5384A4();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v23);
        }
        while (v27 == -1);
        v10 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      v11 = *(_QWORD *)(v4 + 48) + 16 * v10;
      *(_QWORD *)v11 = v18;
      *(_WORD *)(v11 + 8) = v19;
      *(_BYTE *)(v11 + 10) = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E384004()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28[4];

  v1 = v0;
  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A00);
  v6 = sub_23E537E44();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v24 = v0;
    v25 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v26 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v19 >= v26)
          goto LABEL_23;
        v20 = v25[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v26)
            goto LABEL_23;
          v20 = v25[v14];
          if (!v20)
          {
            v14 = v19 + 2;
            if (v19 + 2 >= v26)
              goto LABEL_23;
            v20 = v25[v14];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v26)
              {
LABEL_23:
                swift_release();
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero(v25, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v25 = -1 << v22;
                v1 = v24;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v25[v21];
              if (!v20)
              {
                while (1)
                {
                  v14 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_29;
                  if (v14 >= v26)
                    goto LABEL_23;
                  v20 = v25[v14];
                  ++v21;
                  if (v20)
                    goto LABEL_22;
                }
              }
              v14 = v21;
            }
          }
        }
LABEL_22:
        v11 = (v20 - 1) & v20;
        v16 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v17 = *(_QWORD *)(v27 + 72);
      sub_23E1E2FDC(*(_QWORD *)(v5 + 48) + v17 * v16, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      sub_23E53845C();
      StaticAccessory.hash(into:)(v28);
      StaticService.hash(into:)(v28);
      StaticCharacteristic.hash(into:)();
      sub_23E5384A4();
      v18 = sub_23E537D60();
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23E384304()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  __int128 v58[5];

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v47 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticMediaSystemComponent();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v0;
  v10 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A18);
  v11 = sub_23E537E44();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v51 = v2;
    v52 = v1;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 56);
    v49 = (_QWORD *)(v10 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v48 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 56;
    result = swift_retain();
    v19 = 0;
    v20 = type metadata accessor for StaticMediaSystemComponent;
    v50 = v10;
    v21 = v51;
    while (1)
    {
      if (v16)
      {
        v56 = v19;
        v57 = (v16 - 1) & v16;
        v23 = __clz(__rbit64(v16)) | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v24 >= v48)
          goto LABEL_36;
        v25 = v49[v24];
        v26 = v19 + 1;
        if (!v25)
        {
          v26 = v19 + 2;
          if (v19 + 2 >= v48)
            goto LABEL_36;
          v25 = v49[v26];
          if (!v25)
          {
            v26 = v19 + 3;
            if (v19 + 3 >= v48)
              goto LABEL_36;
            v25 = v49[v26];
            if (!v25)
            {
              v27 = v19 + 4;
              if (v19 + 4 >= v48)
              {
LABEL_36:
                swift_release();
                v44 = v46;
                v45 = 1 << *(_BYTE *)(v10 + 32);
                if (v45 > 63)
                  bzero(v49, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v49 = -1 << v45;
                *(_QWORD *)(v10 + 16) = 0;
                result = swift_release();
                goto LABEL_41;
              }
              v25 = v49[v27];
              if (!v25)
              {
                while (1)
                {
                  v26 = v27 + 1;
                  if (__OFADD__(v27, 1))
                    goto LABEL_43;
                  if (v26 >= v48)
                    goto LABEL_36;
                  v25 = v49[v26];
                  ++v27;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v26 = v19 + 4;
            }
          }
        }
LABEL_23:
        v56 = v26;
        v57 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v26 << 6);
      }
      v28 = *(_QWORD *)(v10 + 48);
      v55 = *(_QWORD *)(v53 + 72);
      v29 = v20;
      sub_23E1E2FDC(v28 + v55 * v23, (uint64_t)v9, (uint64_t (*)(_QWORD))v20);
      sub_23E53845C();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v30 = v52;
      sub_23E5374D8();
      v31 = v54;
      StaticMediaProfile.hash(into:)(v58);
      sub_23E538468();
      v32 = *(_QWORD *)&v9[*(int *)(v31 + 28)];
      swift_bridgeObjectRetain();
      sub_23E240740(v58, v32);
      swift_bridgeObjectRelease();
      sub_23E1E7C20((uint64_t)&v9[*(int *)(v31 + 32)], (uint64_t)v6, &qword_254333F50);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v30) == 1)
      {
        sub_23E538474();
      }
      else
      {
        v33 = v12;
        v34 = v6;
        v35 = v47;
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v47, v34, v30);
        sub_23E538474();
        sub_23E5374D8();
        v36 = v35;
        v6 = v34;
        v12 = v33;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v30);
      }
      v20 = v29;
      v16 = v57;
      result = sub_23E5384A4();
      v37 = -1 << *(_BYTE *)(v12 + 32);
      v38 = result & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v17 + 8 * (v38 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v17 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v17 + 8 * v39);
        }
        while (v43 == -1);
        v22 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      result = sub_23E1E2FDC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v22 * v55, (uint64_t (*)(_QWORD))v20);
      ++*(_QWORD *)(v12 + 16);
      v10 = v50;
      v19 = v56;
    }
  }
  result = swift_release();
  v44 = v46;
LABEL_41:
  *v44 = v12;
  return result;
}

uint64_t sub_23E384814()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  char *v58;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v58 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticZone();
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v0;
  v10 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A90);
  v11 = sub_23E537E44();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 56);
    v48 = (_QWORD *)(v10 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v47 = (unint64_t)(v13 + 63) >> 6;
    v49 = v11 + 56;
    result = swift_retain();
    v18 = 0;
    v51 = v12;
    v52 = v10;
    v50 = v9;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v21 = (v16 - 1) & v16;
        v56 = v18;
        v22 = v20 | (v18 << 6);
      }
      else
      {
        v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        if (v23 >= v47)
          goto LABEL_40;
        v24 = v48[v23];
        v25 = v18 + 1;
        if (!v24)
        {
          v25 = v18 + 2;
          if (v18 + 2 >= v47)
            goto LABEL_40;
          v24 = v48[v25];
          if (!v24)
          {
            v25 = v18 + 3;
            if (v18 + 3 >= v47)
              goto LABEL_40;
            v24 = v48[v25];
            if (!v24)
            {
              v26 = v18 + 4;
              if (v18 + 4 >= v47)
              {
LABEL_40:
                swift_release();
                v43 = v46;
                v44 = 1 << *(_BYTE *)(v10 + 32);
                if (v44 > 63)
                  bzero(v48, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v48 = -1 << v44;
                *(_QWORD *)(v10 + 16) = 0;
                result = swift_release();
                goto LABEL_45;
              }
              v24 = v48[v26];
              if (!v24)
              {
                while (1)
                {
                  v25 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_47;
                  if (v25 >= v47)
                    goto LABEL_40;
                  v24 = v48[v25];
                  ++v26;
                  if (v24)
                    goto LABEL_23;
                }
              }
              v25 = v18 + 4;
            }
          }
        }
LABEL_23:
        v21 = (v24 - 1) & v24;
        v56 = v25;
        v22 = __clz(__rbit64(v24)) + (v25 << 6);
      }
      v57 = v21;
      v27 = *(_QWORD *)(v10 + 48);
      v55 = *(_QWORD *)(v53 + 72);
      sub_23E1E2FDC(v27 + v55 * v22, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      sub_23E53845C();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      v28 = v54;
      sub_23E5375EC();
      v29 = *(_QWORD *)&v9[*(int *)(v28 + 24)];
      v30 = *(_QWORD *)(v29 + 16);
      sub_23E538468();
      if (v30)
      {
        v31 = v29 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
        v32 = *(_QWORD *)(v2 + 72);
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
        while (1)
        {
          v33(v6, v31, v1);
          v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
          v34(v6, 0, 1, v1);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
            break;
          v35 = v58;
          (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v58, v6, v1);
          sub_23E5374D8();
          (*(void (**)(char *, uint64_t))(v2 + 8))(v35, v1);
          v31 += v32;
          if (!--v30)
            goto LABEL_30;
        }
      }
      else
      {
        v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_30:
        v34(v6, 1, 1, v1);
      }
      result = sub_23E5384A4();
      v12 = v51;
      v36 = -1 << *(_BYTE *)(v51 + 32);
      v37 = result & ~v36;
      v38 = v37 >> 6;
      if (((-1 << v37) & ~*(_QWORD *)(v49 + 8 * (v37 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v49 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
        v10 = v52;
        v9 = v50;
        v16 = v57;
      }
      else
      {
        v39 = 0;
        v40 = (unint64_t)(63 - v36) >> 6;
        v10 = v52;
        v9 = v50;
        v16 = v57;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v41 = v38 == v40;
          if (v38 == v40)
            v38 = 0;
          v39 |= v41;
          v42 = *(_QWORD *)(v49 + 8 * v38);
        }
        while (v42 == -1);
        v19 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(_QWORD *)(v49 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      result = sub_23E1E2FDC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v19 * v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      ++*(_QWORD *)(v12 + 16);
      v18 = v56;
    }
  }
  result = swift_release();
  v43 = v46;
LABEL_45:
  *v43 = v12;
  return result;
}

uint64_t sub_23E384D5C()
{
  uint64_t *v0;
  uint64_t *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39[4];

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticServiceGroup();
  v37 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A68);
  v6 = sub_23E537E44();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v0;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v36 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v35 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    v34 = v4;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v35)
          goto LABEL_36;
        v19 = v36[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_36;
          v19 = v36[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v35)
              goto LABEL_36;
            v19 = v36[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v35)
              {
LABEL_36:
                swift_release();
                v1 = v33;
                v31 = 1 << *(_BYTE *)(v5 + 32);
                if (v31 > 63)
                  bzero(v36, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v31;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v36[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v35)
                    goto LABEL_36;
                  v19 = v36[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48);
      v38 = *(_QWORD *)(v37 + 72);
      sub_23E1E2FDC(v21 + v38 * v17, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      sub_23E53845C();
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      sub_23E538474();
      sub_23E538468();
      v22 = *(_QWORD *)&v4[v2[8]];
      swift_bridgeObjectRetain();
      sub_23E240740(v39, v22);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)&v4[v2[9] + 8])
      {
        sub_23E538474();
        swift_bridgeObjectRetain();
        v4 = v34;
        sub_23E5375EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E538474();
      }
      sub_23E538474();
      v23 = *(_QWORD *)&v4[v2[11]];
      swift_bridgeObjectRetain();
      sub_23E238230((uint64_t)v39, v23);
      swift_bridgeObjectRelease();
      result = sub_23E5384A4();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23E38520C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;

  v1 = v0;
  v2 = type metadata accessor for StaticUser();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A60);
  v6 = sub_23E537E44();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v34 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v32 = v0;
    v33 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    v35 = v5;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v38 = v14;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_33;
        v19 = v34[v18];
        v20 = v14 + 1;
        if (!v19)
        {
          v20 = v14 + 2;
          if (v14 + 2 >= v33)
            goto LABEL_33;
          v19 = v34[v20];
          if (!v19)
          {
            v20 = v14 + 3;
            if (v14 + 3 >= v33)
              goto LABEL_33;
            v19 = v34[v20];
            if (!v19)
            {
              v21 = v14 + 4;
              if (v14 + 4 >= v33)
              {
LABEL_33:
                swift_release();
                v1 = v32;
                v31 = 1 << *(_BYTE *)(v5 + 32);
                if (v31 > 63)
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v31;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v34[v21];
              if (!v19)
              {
                while (1)
                {
                  v20 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v20 >= v33)
                    goto LABEL_33;
                  v19 = v34[v20];
                  ++v21;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v20 = v14 + 4;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v38 = v20;
        v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      sub_23E1E2FDC(v22 + v23 * v17, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      sub_23E53845C();
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      sub_23E5375EC();
      sub_23E5374D8();
      sub_23E538468();
      result = sub_23E5384A4();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      ++*(_QWORD *)(v7 + 16);
      v5 = v35;
      v14 = v38;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23E3855E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A38);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E385890(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v5 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_23E537E44();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v32 = (_QWORD *)(v6 + 56);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_33;
        v20 = v32[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_33;
          v20 = v32[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v12)
              goto LABEL_33;
            v20 = v32[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v12)
              {
LABEL_33:
                swift_release();
                v5 = v3;
                v31 = 1 << *(_BYTE *)(v6 + 32);
                if (v31 > 63)
                  bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v31;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v20 = v32[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v12)
                    goto LABEL_33;
                  v20 = v32[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
      v23 = sub_23E53845C();
      a3(v23);
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      result = sub_23E5384A4();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v5 = v8;
  return result;
}

uint64_t sub_23E385B80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A30);
  v3 = sub_23E537E44();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v29 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_35;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_35;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_35;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_35:
                swift_release();
                v1 = v29;
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_41;
                  if (v12 >= v9)
                    goto LABEL_35;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_23E53845C();
      sub_23E538474();
      if (v19)
      {
        v20 = v19;
        sub_23E537C64();

      }
      result = sub_23E5384A4();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E385E5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449E0);
  v3 = sub_23E537E44();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23E53845C();
      sub_23E5375EC();
      result = sub_23E5384A4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E386138(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23E537E44();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_23E537C4C();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23E3863D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A08);
  result = sub_23E537E44();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_23E538450();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23E386650()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A40);
  v3 = sub_23E537E44();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x23E38699CLL);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_23E53845C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_23E3869B4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(char *, uint64_t))
{
  uint64_t *v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v8 = v4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - v11;
  v13 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v14 = sub_23E537E44();
  if (*(_QWORD *)(v13 + 16))
  {
    v29 = v8;
    v15 = 1 << *(_BYTE *)(v13 + 32);
    v16 = (_QWORD *)(v13 + 56);
    v17 = -1;
    if (v15 < 64)
      v17 = ~(-1 << v15);
    v18 = v17 & *(_QWORD *)(v13 + 56);
    v19 = (unint64_t)(v15 + 63) >> 6;
    result = swift_retain();
    v21 = 0;
    while (1)
    {
      if (v18)
      {
        v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v23 = v22 | (v21 << 6);
      }
      else
      {
        v24 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v24 >= v19)
          goto LABEL_22;
        v25 = v16[v24];
        ++v21;
        if (!v25)
        {
          v21 = v24 + 1;
          if (v24 + 1 >= v19)
            goto LABEL_22;
          v25 = v16[v21];
          if (!v25)
          {
            v21 = v24 + 2;
            if (v24 + 2 >= v19)
              goto LABEL_22;
            v25 = v16[v21];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v19)
              {
LABEL_22:
                swift_release();
                v27 = 1 << *(_BYTE *)(v13 + 32);
                if (v27 > 63)
                  bzero((void *)(v13 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v16 = -1 << v27;
                v8 = v29;
                *(_QWORD *)(v13 + 16) = 0;
                break;
              }
              v25 = v16[v26];
              if (!v25)
              {
                while (1)
                {
                  v21 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_28;
                  if (v21 >= v19)
                    goto LABEL_22;
                  v25 = v16[v21];
                  ++v26;
                  if (v25)
                    goto LABEL_21;
                }
              }
              v21 = v26;
            }
          }
        }
LABEL_21:
        v18 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v21 << 6);
      }
      sub_23E1E2FDC(*(_QWORD *)(v13 + 48) + *(_QWORD *)(v10 + 72) * v23, (uint64_t)v12, a2);
      result = a4(v12, v14);
    }
  }
  result = swift_release();
  *v8 = v14;
  return result;
}

uint64_t sub_23E386BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E2F50(a1, (uint64_t)v11, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_23E538468();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  sub_23E5384A4();
  v12 = sub_23E537D60();
  *(_QWORD *)(a2 + 56 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(v9 + 72) * v12, type metadata accessor for StaticAccessory.DeviceIdentifier);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_23E386DCC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_23E537C4C();
  result = sub_23E537D60();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_23E386E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E7C20(a1, (uint64_t)v10, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v11 = _s7MergeIdVMa();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E5384A4();
  v12 = sub_23E537D60();
  *(_QWORD *)(a2 + 56 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v12, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_23E387054(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E3829F0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38AAC4();
      goto LABEL_14;
    }
    sub_23E38C004();
  }
  v8 = *v3;
  sub_23E53845C();
  sub_23E538468();
  result = sub_23E5384A4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E3871B8(uint64_t result, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v3 = result;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      sub_23E382C98();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_23E38C27C();
LABEL_8:
      v6 = *v2;
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v3 = result & ~(-1 << *(_BYTE *)(v6 + 32));
      if (((*(_QWORD *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v3) & 1) != 0)
        goto LABEL_12;
      goto LABEL_9;
    }
    result = (uint64_t)sub_23E38AC54();
  }
LABEL_9:
  v7 = *v2;
  *(_QWORD *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  result = sub_23E5383B4();
  __break(1u);
  return result;
}

void sub_23E3872B4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E386138(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_23E38B834(a4);
      goto LABEL_14;
    }
    sub_23E38F098(v11, a4);
  }
  v12 = *v5;
  v13 = sub_23E537C4C();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_23E1E335C(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_23E537C58();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_23E537C58();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_23E387444(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E383278();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38AFE0();
      goto LABEL_14;
    }
    sub_23E38C4BC();
  }
  v8 = *v3;
  result = MEMORY[0x24264F6DC](*(_QWORD *)(*v3 + 40), v5, 4);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E387568(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E3834FC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38BB68(&qword_256D44AB8);
      goto LABEL_14;
    }
    sub_23E38C720();
  }
  v8 = *v3;
  sub_23E53845C();
  v9 = dword_23E54B010[v5];
  sub_23E53848C();
  result = sub_23E5384A4();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (dword_23E54B010[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (dword_23E54B010[*(char *)(v11 + a2)] == v9)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_23E3876E4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E3837B0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38BB68(&qword_256D41D50);
      goto LABEL_14;
    }
    sub_23E38C9A4();
  }
  v8 = *v3;
  sub_23E53845C();
  v9 = dword_23E54B080[v5];
  sub_23E53848C();
  result = sub_23E5384A4();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (dword_23E54B080[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (dword_23E54B080[*(char *)(v11 + a2)] == v9)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_23E387860(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = (unsigned __int16)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E383A64();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38B174();
      goto LABEL_14;
    }
    sub_23E38CC28();
  }
  v8 = *v3;
  result = MEMORY[0x24264F6DC](*(_QWORD *)(*v3 + 40), v5, 2);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int16 *)(v10 + 2 * a2) == (_DWORD)v5)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int16 *)(v10 + 2 * a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(_QWORD *)(v12 + 48) + 2 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E387984(uint64_t result, int a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_19;
  if ((a4 & 1) != 0)
  {
    sub_23E383CE8();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_23E38B308();
      goto LABEL_19;
    }
    sub_23E38CE8C();
  }
  v10 = *v4;
  sub_23E53845C();
  sub_23E538498();
  sub_23E538474();
  if ((a2 & 0x10000) == 0)
    sub_23E538480();
  result = sub_23E5384A4();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = *(_QWORD *)(v10 + 48) + 16 * a3;
      if (*(_QWORD *)v13 == v7)
      {
        if ((*(_BYTE *)(v13 + 10) & 1) != 0)
        {
          if ((a2 & 0x10000) != 0)
            goto LABEL_18;
        }
        else if ((a2 & 0x10000) == 0 && *(unsigned __int16 *)(v13 + 8) == (unsigned __int16)a2)
        {
LABEL_18:
          result = sub_23E5383B4();
          __break(1u);
          break;
        }
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_19:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v15 = *(_QWORD *)(v14 + 48) + 16 * a3;
  *(_QWORD *)v15 = v7;
  *(_WORD *)(v15 + 8) = a2;
  *(_BYTE *)(v15 + 10) = BYTE2(a2) & 1;
  v16 = *(_QWORD *)(v14 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v18;
  return result;
}

uint64_t sub_23E387B24(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[4];

  v7 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v24 = v8;
  v25 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_15;
  if ((a3 & 1) != 0)
  {
    sub_23E384004();
  }
  else
  {
    if (v12 > v11)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, &qword_256D44A00);
      goto LABEL_15;
    }
    sub_23E38D174();
  }
  v13 = *v3;
  sub_23E53845C();
  StaticAccessory.hash(into:)(v27);
  v14 = a1 + *(int *)(v7 + 20);
  StaticService.hash(into:)(v27);
  v26 = a1 + *(int *)(v7 + 24);
  StaticCharacteristic.hash(into:)();
  v15 = sub_23E5384A4();
  v16 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v13 + 48) + v18 * a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v10, a1) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v10[*(int *)(v7 + 20)], v14) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v10[*(int *)(v7 + 24)], v26))
      {
        break;
      }
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_23E5383B4();
    __break(1u);
  }
LABEL_15:
  v19 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v19 + 48) + *(_QWORD *)(v24 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  v21 = *(_QWORD *)(v19 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v23;
  return result;
}

uint64_t sub_23E387D64(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58[5];

  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v11);
  v56 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v44 - v16;
  v17 = (int *)type metadata accessor for StaticMediaSystemComponent();
  v57 = *((_QWORD *)v17 - 1);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(*v3 + 16);
  v21 = *(_QWORD *)(*v3 + 24);
  v55 = v3;
  if (v21 <= v20 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      v50 = v11;
      v45 = v10;
      sub_23E384304();
    }
    else
    {
      if (v21 > v20)
      {
        sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, &qword_256D44A18);
        goto LABEL_22;
      }
      v50 = v11;
      v45 = v10;
      sub_23E38D43C();
    }
    v22 = *v3;
    sub_23E53845C();
    StaticMediaSystemComponent.hash(into:)(v58);
    v23 = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v22 + 32);
    a2 = v23 & ~v24;
    v25 = v22 + 56;
    if (((*(_QWORD *)(v22 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v51 = v8;
      v49 = v7;
      v26 = ~v24;
      v27 = *(_QWORD *)(v57 + 72);
      v47 = v22;
      v48 = v17;
      v46 = v22 + 56;
      do
      {
        sub_23E1E2F50(*(_QWORD *)(v22 + 48) + v27 * a2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
          && (_s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)&v19[v17[5]], a1 + v17[5]) & 1) != 0
          && *(_QWORD *)&v19[v17[6]] == *(_QWORD *)(a1 + v17[6])
          && (sub_23E1F8470(*(_QWORD *)&v19[v17[7]], *(_QWORD *)(a1 + v17[7])) & 1) != 0)
        {
          v31 = v17[8];
          v52 = (uint64_t)&v19[v31];
          v32 = v54;
          sub_23E1E7C20(a1 + v31, v54, &qword_254333F50);
          v33 = v56;
          v34 = v56 + *(int *)(v50 + 48);
          sub_23E1E7C20(v52, v56, &qword_254333F50);
          v52 = v34;
          sub_23E1E7C20(v32, v34, &qword_254333F50);
          v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
          v36 = v33;
          v37 = v49;
          if (v35(v36, 1, v49) == 1)
          {
            sub_23E1E7C64(v54, &qword_254333F50);
            v38 = v35(v52, 1, v37);
            v22 = v47;
            v17 = v48;
            v25 = v46;
            if (v38 == 1)
              goto LABEL_25;
          }
          else
          {
            sub_23E1E7C20(v56, (uint64_t)v53, &qword_254333F50);
            if (v35(v52, 1, v37) != 1)
            {
              v28 = v51;
              v29 = v45;
              (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v45, v52, v37);
              sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              LODWORD(v52) = sub_23E537514();
              v30 = *(void (**)(char *, uint64_t))(v28 + 8);
              v30(v29, v37);
              sub_23E1E7C64(v54, &qword_254333F50);
              v30(v53, v37);
              sub_23E1E7C64(v56, &qword_254333F50);
              v22 = v47;
              v17 = v48;
              v25 = v46;
              if ((v52 & 1) != 0)
                goto LABEL_26;
              goto LABEL_11;
            }
            sub_23E1E7C64(v54, &qword_254333F50);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v37);
            v22 = v47;
            v17 = v48;
            v25 = v46;
          }
          sub_23E1E7C64(v56, &qword_254332798);
        }
LABEL_11:
        sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        a2 = (a2 + 1) & v26;
      }
      while (((*(_QWORD *)(v25 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_22:
  v39 = *v55;
  *(_QWORD *)(*v55 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v39 + 48) + *(_QWORD *)(v57 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  v41 = *(_QWORD *)(v39 + 16);
  v42 = __OFADD__(v41, 1);
  v43 = v41 + 1;
  if (v42)
  {
    __break(1u);
LABEL_25:
    sub_23E1E7C64(v56, &qword_254333F50);
LABEL_26:
    sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    result = sub_23E5383B4();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v39 + 16) = v43;
  }
  return result;
}

uint64_t sub_23E38825C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[80];

  v45 = a1;
  v6 = sub_23E536F80();
  v50 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v36 - v9;
  v44 = type metadata accessor for StaticZone();
  v10 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*v3 + 16);
  v14 = *(_QWORD *)(*v3 + 24);
  v37 = v3;
  v36 = v10;
  if (v14 > v13 && (a3 & 1) != 0)
    goto LABEL_24;
  if ((a3 & 1) != 0)
  {
    sub_23E384814();
  }
  else
  {
    if (v14 > v13)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticZone, &qword_256D44A90);
      goto LABEL_24;
    }
    sub_23E38D90C();
  }
  v15 = *v3;
  sub_23E53845C();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v16 = v45;
  sub_23E5374D8();
  v17 = v44;
  v39 = (_QWORD *)(v16 + *(int *)(v44 + 20));
  sub_23E5375EC();
  v38 = *(int *)(v17 + 24);
  sub_23E26140C((uint64_t)v52, *(_QWORD *)(v16 + v38));
  v18 = sub_23E5384A4();
  v19 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v18 & ~v19;
  v42 = v15 + 56;
  v43 = v15;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v41 = ~v19;
    v40 = *(_QWORD *)(v10 + 72);
    v46 = v12;
    v21 = v48;
    v20 = v49;
    do
    {
      v22 = *(_QWORD *)(v43 + 48);
      v47 = a2;
      sub_23E1E2F50(v22 + v40 * a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        v23 = &v46[*(int *)(v44 + 20)];
        v24 = *(_QWORD *)v23 == *v39 && *((_QWORD *)v23 + 1) == v39[1];
        if (v24 || (sub_23E538354() & 1) != 0)
        {
          v25 = *(_QWORD *)(v45 + v38);
          v51 = *(_QWORD *)&v46[*(int *)(v44 + 24)];
          a2 = *(_QWORD *)(v51 + 16);
          if (a2 == *(_QWORD *)(v25 + 16))
          {
            if (!a2 || v51 == v25)
            {
LABEL_23:
              sub_23E1E2FA0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
              sub_23E5383B4();
              __break(1u);
              break;
            }
            v26 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
            v27 = *(_QWORD *)(v50 + 72);
            v28 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
            while (1)
            {
              v28(v21, v51 + v26, v6);
              v28(v20, v25 + v26, v6);
              sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v29 = sub_23E537514();
              v30 = *(void (**)(char *, uint64_t))(v50 + 8);
              v30(v20, v6);
              v30(v21, v6);
              if ((v29 & 1) == 0)
                break;
              v26 += v27;
              if (!--a2)
                goto LABEL_23;
            }
          }
        }
      }
      v12 = v46;
      sub_23E1E2FA0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      a2 = (v47 + 1) & v41;
    }
    while (((*(_QWORD *)(v42 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_24:
  v31 = *v37;
  *(_QWORD *)(*v37 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(v45, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v36 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
  v33 = *(_QWORD *)(v31 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (v34)
    __break(1u);
  else
    *(_QWORD *)(v31 + 16) = v35;
  return result;
}

uint64_t sub_23E388674(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  int v26;
  int v27;
  char v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v4 = v3;
  v8 = (int *)type metadata accessor for StaticActionSet();
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v59[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v58 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_31;
  v14 = v12 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E3826A0(v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_256D44A88, (void (*)(char *))StaticActionSet.hash(into:));
  }
  else
  {
    if (v13 > v12)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_256D44A88);
      goto LABEL_31;
    }
    sub_23E38BCF0(v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_256D44A88, (void (*)(char *))StaticActionSet.hash(into:));
  }
  v15 = *v4;
  sub_23E53845C();
  StaticActionSet.hash(into:)(&v70);
  v16 = sub_23E5384A4();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_23E1E2F50(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_10;
      v20 = v8[5];
      v21 = *(_QWORD *)&v11[v20];
      v22 = *(_QWORD *)&v11[v20 + 8];
      v23 = (_QWORD *)(a1 + v20);
      v24 = v21 == *v23 && v22 == v23[1];
      if (!v24 && (sub_23E538354() & 1) == 0)
        goto LABEL_10;
      v25 = v8[6];
      v26 = v11[v25];
      v27 = *(unsigned __int8 *)(a1 + v25);
      if (v26 == 7)
      {
        if (v27 != 7)
          goto LABEL_10;
      }
      else
      {
        if (v27 == 7)
          goto LABEL_10;
        sub_23E52398C(v26);
        if ((v28 & 1) == 0)
          goto LABEL_10;
      }
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        v29 = &v11[v8[8]];
        v30 = *(_QWORD *)v29;
        v31 = *((_QWORD *)v29 + 1);
        v32 = v29[16];
        v33 = *((_QWORD *)v29 + 3);
        v34 = *((_QWORD *)v29 + 4);
        v35 = v29[40];
        v36 = *((_QWORD *)v29 + 6);
        v37 = *((_QWORD *)v29 + 7);
        v38 = v29[64];
        v39 = *((_QWORD *)v29 + 9);
        v40 = *((_QWORD *)v29 + 10);
        LOBYTE(v29) = v29[88];
        *(_QWORD *)&v70 = v30;
        *((_QWORD *)&v70 + 1) = v31;
        v71 = v32;
        v72 = v33;
        v73 = v34;
        v74 = v35;
        v75 = v36;
        v76 = v37;
        v77 = v38;
        v78 = v39;
        v79 = v40;
        v80 = (char)v29;
        v41 = a1 + v8[8];
        v42 = *(_QWORD *)v41;
        v43 = *(_QWORD *)(v41 + 8);
        v44 = *(_BYTE *)(v41 + 16);
        v45 = *(_QWORD *)(v41 + 24);
        v46 = *(_QWORD *)(v41 + 32);
        v47 = *(_BYTE *)(v41 + 40);
        v48 = *(_QWORD *)(v41 + 48);
        v49 = *(_QWORD *)(v41 + 56);
        v50 = *(_BYTE *)(v41 + 64);
        v51 = *(_QWORD *)(v41 + 72);
        v52 = *(_QWORD *)(v41 + 80);
        LOBYTE(v41) = *(_BYTE *)(v41 + 88);
        v59[0] = v42;
        v59[1] = v43;
        v60 = v44;
        v61 = v45;
        v62 = v46;
        v63 = v47;
        v64 = v48;
        v65 = v49;
        v66 = v50;
        v67 = v51;
        v68 = v52;
        v69 = v41;
        if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)&v70, (uint64_t)v59)
          && (sub_23E5372F8() & 1) != 0
          && (sub_23E1F8470(*(_QWORD *)&v11[v8[10]], *(_QWORD *)(a1 + v8[10])) & 1) != 0
          && v11[v8[11]] == *(_BYTE *)(a1 + v8[11])
          && (sub_23E336E44(*(_QWORD *)&v11[v8[12]], *(_QWORD *)(a1 + v8[12])) & 1) != 0
          && v11[v8[13]] == *(_BYTE *)(a1 + v8[13])
          && v11[v8[14]] == *(_BYTE *)(a1 + v8[14]))
        {
          sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
          sub_23E5383B4();
          __break(1u);
          break;
        }
      }
LABEL_10:
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_31:
  v53 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v58 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  v55 = *(_QWORD *)(v53 + 16);
  v56 = __OFADD__(v55, 1);
  v57 = v55 + 1;
  if (v56)
    __break(1u);
  else
    *(_QWORD *)(v53 + 16) = v57;
  return result;
}

uint64_t sub_23E388A40(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[4];

  v4 = v3;
  v8 = (int *)type metadata accessor for StaticServiceGroup();
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v34 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_29;
  if ((a3 & 1) != 0)
  {
    sub_23E384D5C();
  }
  else
  {
    if (v13 > v12)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, &qword_256D44A68);
      goto LABEL_29;
    }
    sub_23E38DDFC();
  }
  v14 = *v4;
  sub_23E53845C();
  StaticServiceGroup.hash(into:)(v35);
  v15 = sub_23E5384A4();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_23E1E2F50(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_11;
      v19 = v8[5];
      v20 = *(_QWORD *)&v11[v19];
      v21 = *(_QWORD *)&v11[v19 + 8];
      v22 = (_QWORD *)(a1 + v19);
      v23 = v20 == *v22 && v21 == v22[1];
      if (!v23 && (sub_23E538354() & 1) == 0
        || v11[v8[6]] != *(_BYTE *)(a1 + v8[6])
        || v11[v8[7]] != *(_BYTE *)(a1 + v8[7])
        || (sub_23E1F8470(*(_QWORD *)&v11[v8[8]], *(_QWORD *)(a1 + v8[8])) & 1) == 0)
      {
        goto LABEL_11;
      }
      v24 = v8[9];
      v25 = &v11[v24];
      v26 = *(_QWORD *)&v11[v24 + 8];
      v27 = (_QWORD *)(a1 + v24);
      v28 = v27[1];
      if (v26)
      {
        if (!v28 || (*(_QWORD *)v25 != *v27 || v26 != v28) && (sub_23E538354() & 1) == 0)
          goto LABEL_11;
      }
      else if (v28)
      {
        goto LABEL_11;
      }
      if (v11[v8[10]] == *(_BYTE *)(a1 + v8[10])
        && (sub_23E1F8844(*(_QWORD *)&v11[v8[11]], *(_QWORD *)(a1 + v8[11])) & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
        sub_23E5383B4();
        __break(1u);
        break;
      }
LABEL_11:
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_29:
  v29 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v29 + 48) + *(_QWORD *)(v34 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v31 = *(_QWORD *)(v29 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
    __break(1u);
  else
    *(_QWORD *)(v29 + 16) = v33;
  return result;
}

uint64_t sub_23E388D10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v7 = (int *)type metadata accessor for StaticUser();
  v8 = *((_QWORD *)v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v28 = v8;
  v29 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_20;
  if ((a3 & 1) != 0)
  {
    sub_23E38520C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticUser, &qword_256D44A60);
      goto LABEL_20;
    }
    sub_23E38E268();
  }
  v13 = *v3;
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v14 = (_QWORD *)(a1 + v7[5]);
  sub_23E5375EC();
  v30 = a1 + v7[6];
  sub_23E5374D8();
  v27 = v7[7];
  sub_23E538468();
  v15 = sub_23E5384A4();
  v16 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v13 + 48) + v18 * a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        v19 = &v10[v7[5]];
        v20 = *(_QWORD *)v19 == *v14 && *((_QWORD *)v19 + 1) == v14[1];
        if ((v20 || (sub_23E538354() & 1) != 0)
          && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
          && v10[v7[7]] == *(_BYTE *)(a1 + v27))
        {
          break;
        }
      }
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_20;
    }
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    sub_23E5383B4();
    __break(1u);
  }
LABEL_20:
  v21 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v21 + 48) + *(_QWORD *)(v28 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v25;
  return result;
}

uint64_t sub_23E388FC8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[72];

  v4 = v3;
  v8 = (int *)type metadata accessor for StaticResident();
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v40 = v9;
  if (v13 <= v12 || (a3 & 1) == 0)
  {
    v14 = v12 + 1;
    if ((a3 & 1) != 0)
    {
      sub_23E3826A0(v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, &qword_256D44A58, (void (*)(char *))StaticResident.hash(into:));
    }
    else
    {
      if (v13 > v12)
      {
        sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticResident, &qword_256D44A58);
        goto LABEL_46;
      }
      sub_23E38BCF0(v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, &qword_256D44A58, (void (*)(char *))StaticResident.hash(into:));
    }
    v15 = *v4;
    sub_23E53845C();
    StaticResident.hash(into:)((uint64_t)v41);
    v16 = sub_23E5384A4();
    v17 = -1 << *(_BYTE *)(v15 + 32);
    a2 = v16 & ~v17;
    if (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v18 = ~v17;
      v19 = *(_QWORD *)(v9 + 72);
      do
      {
        sub_23E1E2F50(*(_QWORD *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
          goto LABEL_11;
        v20 = v8[5];
        v21 = *(_QWORD *)&v11[v20];
        v22 = *(_QWORD *)&v11[v20 + 8];
        v23 = (_QWORD *)(a1 + v20);
        v24 = v21 == *v23 && v22 == v23[1];
        if (!v24 && (sub_23E538354() & 1) == 0)
          goto LABEL_11;
        v25 = v8[6];
        v26 = &v11[v25];
        v27 = *(_QWORD *)&v11[v25 + 8];
        v28 = (_QWORD *)(a1 + v25);
        v29 = v28[1];
        if (v27)
        {
          if (!v29)
            goto LABEL_11;
          v30 = *(_QWORD *)v26 == *v28 && v27 == v29;
          if (!v30 && (sub_23E538354() & 1) == 0)
            goto LABEL_11;
        }
        else if (v29)
        {
          goto LABEL_11;
        }
        if ((sub_23E3372B8(*(_QWORD *)&v11[v8[7]], *(_QWORD *)(a1 + v8[7])) & 1) == 0
          || (sub_23E337498(*(_QWORD *)&v11[v8[8]], *(_QWORD *)(a1 + v8[8])) & 1) == 0)
        {
          goto LABEL_11;
        }
        v31 = v8[9];
        v32 = *(unsigned __int16 *)&v11[v31];
        v33 = *(unsigned __int16 *)(a1 + v31);
        if (v32 >> 14)
        {
          if (v32 >> 14 == 1)
          {
            if ((v33 & 0xC000) != 0x4000
              || ((v32 & 1) == 0) == (v33 & 1)
              || ((((v32 & 0x100) == 0) ^ ((unsigned __int16)(v33 & 0x100) >> 8)) & 1) == 0)
            {
              goto LABEL_11;
            }
          }
          else
          {
            switch(v32)
            {
              case 0x8000u:
                if (v33 == 0x8000)
                  goto LABEL_44;
                goto LABEL_11;
              case 0x8001u:
                v34 = 32769;
                break;
              case 0x8002u:
                v34 = 32770;
                break;
              case 0x8003u:
                v34 = 32771;
                break;
              default:
                v34 = 33024;
                break;
            }
            if (v33 != v34)
              goto LABEL_11;
          }
        }
        else if (v33 >> 14 || v33 != v32)
        {
          goto LABEL_11;
        }
LABEL_44:
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
          sub_23E5383B4();
          __break(1u);
          break;
        }
LABEL_11:
        sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        a2 = (a2 + 1) & v18;
      }
      while (((*(_QWORD *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_46:
  v35 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v35 + 48) + *(_QWORD *)(v40 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  v37 = *(_QWORD *)(v35 + 16);
  v38 = __OFADD__(v37, 1);
  v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
    JUMPOUT(0x23E38935CLL);
  }
  *(_QWORD *)(v35 + 16) = v39;
  return result;
}

uint64_t sub_23E38936C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23E3855E8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23E38BB68(&qword_256D44A38);
      goto LABEL_14;
    }
    sub_23E38E610();
  }
  v8 = *v3;
  sub_23E53845C();
  sub_23E538468();
  result = sub_23E5384A4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E3894C8(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t *v5;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v8 = result;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_16;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E385890(v11, a4, a5);
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23E38BB68(a4);
      goto LABEL_16;
    }
    sub_23E38E888(v11, a4, a5);
  }
  v12 = *v5;
  v13 = sub_23E53845C();
  a5(v13);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  result = sub_23E5384A4();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = result & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    do
    {
      v16 = ((uint64_t (*)(void))a5)();
      v18 = v17;
      if (v16 == ((uint64_t (*)(void))a5)() && v18 == v19)
        goto LABEL_19;
      v21 = sub_23E538354();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  v22 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v22 + 48) + a2) = v8;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v22 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease_n();
LABEL_20:
  result = sub_23E5383B4();
  __break(1u);
  return result;
}

uint64_t sub_23E3896B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = v3;
  v64 = a1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  MEMORY[0x24BDAC7A8](v63);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v53 - v12;
  v14 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v54 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v56 = (uint64_t *)((char *)&v53 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v53 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v53 - v23;
  v25 = *(_QWORD *)(*v4 + 16);
  v26 = *(_QWORD *)(*v4 + 24);
  v53 = v4;
  if (v26 <= v25 || (a3 & 1) == 0)
  {
    v27 = v25 + 1;
    if ((a3 & 1) != 0)
    {
      sub_23E3869B4(v27, type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_256D449E8, (uint64_t (*)(char *, uint64_t))sub_23E386BE4);
    }
    else
    {
      if (v26 > v25)
      {
        sub_23E38A8AC(type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_256D449E8);
        goto LABEL_28;
      }
      sub_23E38F89C(v27, type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_256D449E8, (uint64_t (*)(char *, uint64_t))sub_23E386BE4);
    }
    v62 = *v4;
    sub_23E53845C();
    sub_23E1E2F50(v64, (uint64_t)v24, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = v57;
      v29 = v24;
      v30 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v13, v29, v58);
      sub_23E538468();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v30);
    }
    else
    {
      sub_23E538468();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    v31 = sub_23E5384A4();
    v32 = -1 << *(_BYTE *)(v62 + 32);
    a2 = v31 & ~v32;
    v61 = v62 + 56;
    if (((*(_QWORD *)(v62 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v60 = ~v32;
      v59 = *(_QWORD *)(v54 + 72);
      do
      {
        sub_23E1E2F50(*(_QWORD *)(v62 + 48) + v59 * a2, (uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v33 = &v8[*(int *)(v63 + 48)];
        sub_23E1E2F50((uint64_t)v22, (uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
        sub_23E1E2F50(v64, (uint64_t)v33, type metadata accessor for StaticAccessory.DeviceIdentifier);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23E1E2F50((uint64_t)v8, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v34 = v57;
            v35 = v58;
            v36 = v17;
            v37 = v55;
            (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v55, v33, v58);
            v38 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            v39 = *(void (**)(char *, uint64_t))(v34 + 8);
            v40 = v37;
            v17 = v36;
            v39(v40, v35);
            v39(v36, v35);
            if ((v38 & 1) != 0)
              goto LABEL_32;
LABEL_26:
            sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
            goto LABEL_15;
          }
          (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v58);
        }
        else
        {
          v41 = v56;
          sub_23E1E2F50((uint64_t)v8, (uint64_t)v56, type metadata accessor for StaticAccessory.DeviceIdentifier);
          v43 = *v41;
          v42 = v41[1];
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            v44 = *(_QWORD *)v33;
            v45 = *((_QWORD *)v33 + 1);
            if (v43 == v44 && v42 == v45)
              goto LABEL_31;
            v47 = sub_23E538354();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v47 & 1) != 0)
              goto LABEL_32;
            goto LABEL_26;
          }
          swift_bridgeObjectRelease();
        }
        sub_23E1E7C64((uint64_t)v8, &qword_254333228);
LABEL_15:
        sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
        a2 = (a2 + 1) & v60;
      }
      while (((*(_QWORD *)(v61 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  v48 = *v53;
  *(_QWORD *)(*v53 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(v64, *(_QWORD *)(v48 + 48) + *(_QWORD *)(v54 + 72) * a2, type metadata accessor for StaticAccessory.DeviceIdentifier);
  v50 = *(_QWORD *)(v48 + 16);
  v51 = __OFADD__(v50, 1);
  v52 = v50 + 1;
  if (v51)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
    result = sub_23E5383B4();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v48 + 16) = v52;
  }
  return result;
}

void sub_23E389C1C(void *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_23E385B80();
  }
  else
  {
    if (v8 > v7)
    {
      sub_23E38B4DC();
      goto LABEL_18;
    }
    sub_23E38EB40();
  }
  v9 = *v3;
  sub_23E53845C();
  sub_23E538474();
  if (a1)
  {
    v10 = a1;
    sub_23E537C64();

  }
  v11 = sub_23E5384A4();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * a2);
      if (v14)
      {
        if (a1)
        {
          sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
          v15 = a1;
          v16 = v14;
          v17 = sub_23E537C58();

          if ((v17 & 1) != 0)
          {
LABEL_17:
            __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A28);
            sub_23E5383B4();
            __break(1u);
            break;
          }
        }
      }
      else if (!a1)
      {
        goto LABEL_17;
      }
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_18:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = a1;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
}

uint64_t sub_23E389DE4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23E385E5C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23E38B684();
      goto LABEL_22;
    }
    sub_23E38EDEC();
  }
  v11 = *v4;
  sub_23E53845C();
  sub_23E5375EC();
  result = sub_23E5384A4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23E538354(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23E5383B4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23E538354();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23E389F7C(uint64_t a1, unint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(char *), uint64_t (*a7)(char *, uint64_t))
{
  uint64_t *v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35[72];

  v15 = a4(0);
  v34 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v32 - v16;
  v18 = *(_QWORD *)(*v7 + 16);
  v19 = *(_QWORD *)(*v7 + 24);
  v33 = v7;
  if (v19 > v18 && (a3 & 1) != 0)
    goto LABEL_12;
  v20 = v18 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E3826A0(v20, a4, a5, a6);
  }
  else
  {
    if (v19 > v18)
    {
      sub_23E38A8AC(a4, a5);
      goto LABEL_12;
    }
    sub_23E38BCF0(v20, a4, a5, a6);
  }
  v21 = *v7;
  sub_23E53845C();
  a6(v35);
  v22 = sub_23E5384A4();
  v23 = -1 << *(_BYTE *)(v21 + 32);
  a2 = v22 & ~v23;
  if (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v32 = v15;
    v24 = ~v23;
    v25 = *(_QWORD *)(v34 + 72);
    do
    {
      sub_23E1E2F50(*(_QWORD *)(v21 + 48) + v25 * a2, (uint64_t)v17, a4);
      v26 = a7(v17, a1);
      sub_23E1E2FA0((uint64_t)v17, a4);
      if ((v26 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v24;
    }
    while (((*(_QWORD *)(v21 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v27 = *v33;
  *(_QWORD *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(a1, *(_QWORD *)(v27 + 48) + *(_QWORD *)(v34 + 72) * a2, a4);
  v29 = *(_QWORD *)(v27 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (!v30)
  {
    *(_QWORD *)(v27 + 16) = v31;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23E5383B4();
  __break(1u);
  return result;
}

uint64_t sub_23E38A178(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_23E3863D0();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_23E38B9D4();
        goto LABEL_14;
      }
      sub_23E38F30C();
    }
    v8 = *v3;
    result = sub_23E538450();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v10 = *(_QWORD *)(v8 + 48);
      if (*(_QWORD *)(v10 + 8 * a2) == v5)
      {
LABEL_13:
        result = sub_23E5383B4();
        __break(1u);
      }
      else
      {
        v11 = ~v9;
        while (1)
        {
          a2 = (a2 + 1) & v11;
          if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
            break;
          if (*(_QWORD *)(v10 + 8 * a2) == v5)
            goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x23E38A298);
  }
  *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_23E38A2E0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  unsigned int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v60);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = _s7MergeIdVMa();
  v8 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v48 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v48 - v20;
  v22 = *(_QWORD *)(*v3 + 16);
  v23 = *(_QWORD *)(*v3 + 24);
  v49 = v3;
  v48 = v8;
  if (v23 > v22 && (a3 & 1) != 0)
    goto LABEL_25;
  v24 = v22 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23E3869B4(v24, (uint64_t (*)(_QWORD))_s7MergeIdVMa, &qword_256D44A10, (uint64_t (*)(char *, uint64_t))sub_23E386E4C);
  }
  else
  {
    if (v23 > v22)
    {
      sub_23E38A8AC((uint64_t (*)(_QWORD))_s7MergeIdVMa, &qword_256D44A10);
      goto LABEL_25;
    }
    sub_23E38F89C(v24, (uint64_t (*)(_QWORD))_s7MergeIdVMa, &qword_256D44A10, (uint64_t (*)(char *, uint64_t))sub_23E386E4C);
  }
  v59 = *v3;
  sub_23E53845C();
  sub_23E1E7C20(v61, (uint64_t)v21, &qword_254333F50);
  v25 = v12;
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v27 = v26(v21, 1, v11);
  v52 = v25;
  if (v27 == 1)
  {
    sub_23E538474();
  }
  else
  {
    v28 = v50;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v50, v21, v11);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v11);
  }
  v51 = (_QWORD *)(v61 + *(int *)(v53 + 20));
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v29 = sub_23E5384A4();
  v30 = -1 << *(_BYTE *)(v59 + 32);
  a2 = v29 & ~v30;
  v58 = v59 + 56;
  if (((*(_QWORD *)(v59 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v57 = ~v30;
    v31 = *(_QWORD *)(v8 + 72);
    v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26;
    v56 = v31;
    v32 = _s7MergeIdVMa;
    v33 = (uint64_t)v54;
    do
    {
      v34 = v32;
      sub_23E1E2F50(*(_QWORD *)(v59 + 48) + v56 * a2, (uint64_t)v10, (uint64_t (*)(_QWORD))v32);
      sub_23E1E7C20(v61, (uint64_t)v19, &qword_254333F50);
      v35 = (uint64_t)&v7[*(int *)(v60 + 48)];
      sub_23E1E7C20((uint64_t)v10, (uint64_t)v7, &qword_254333F50);
      sub_23E1E7C20((uint64_t)v19, v35, &qword_254333F50);
      v36 = v55;
      if (v55((uint64_t)v7, 1, v11) == 1)
      {
        sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
        if (v36(v35, 1, v11) != 1)
          goto LABEL_20;
        sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
      }
      else
      {
        sub_23E1E7C20((uint64_t)v7, v33, &qword_254333F50);
        if (v36(v35, 1, v11) == 1)
        {
          sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v33, v11);
LABEL_20:
          sub_23E1E7C64((uint64_t)v7, &qword_254332798);
          goto LABEL_14;
        }
        v37 = v52;
        v38 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v50, v35, v11);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v39 = sub_23E537514();
        v40 = *(void (**)(char *, uint64_t))(v37 + 8);
        v41 = v38;
        v33 = (uint64_t)v54;
        v40(v41, v11);
        sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
        v40((char *)v33, v11);
        sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
        if ((v39 & 1) == 0)
          goto LABEL_14;
      }
      v42 = &v10[*(int *)(v53 + 20)];
      if (*(_QWORD *)v42 == *v51 && *((_QWORD *)v42 + 1) == v51[1] || (sub_23E538354() & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        sub_23E5383B4();
        __break(1u);
        break;
      }
LABEL_14:
      v32 = v34;
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))v34);
      a2 = (a2 + 1) & v57;
    }
    while (((*(_QWORD *)(v58 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_25:
  v43 = *v49;
  *(_QWORD *)(*v49 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23E1E2FDC(v61, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v48 + 72) * a2, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  v45 = *(_QWORD *)(v43 + 16);
  v46 = __OFADD__(v45, 1);
  v47 = v45 + 1;
  if (v46)
    __break(1u);
  else
    *(_QWORD *)(v43 + 16) = v47;
  return result;
}

void *sub_23E38A8AC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v5 = v2;
  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *v2;
  v11 = sub_23E537E38();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v5 = v12;
    return result;
  }
  v29 = v5;
  result = (void *)(v11 + 56);
  v14 = v10 + 56;
  v15 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 56 + 8 * v15)
    result = memmove(result, (const void *)(v10 + 56), 8 * v15);
  v17 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v18 = 1 << *(_BYTE *)(v10 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v10 + 56);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v25 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v21)
        goto LABEL_28;
      v26 = *(_QWORD *)(v14 + 8 * v17);
      if (!v26)
      {
        v17 = v25 + 2;
        if (v25 + 2 >= v21)
          goto LABEL_28;
        v26 = *(_QWORD *)(v14 + 8 * v17);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v20 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_12:
    v24 = *(_QWORD *)(v7 + 72) * v23;
    sub_23E1E2F50(*(_QWORD *)(v10 + 48) + v24, (uint64_t)v9, a1);
    result = (void *)sub_23E1E2FDC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v24, a1);
  }
  v27 = v25 + 3;
  if (v27 >= v21)
  {
LABEL_28:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_30;
  }
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v21)
      goto LABEL_28;
    v26 = *(_QWORD *)(v14 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23E38AAC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333A8);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38AC54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449F0);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13)
        goto LABEL_27;
      v12 = *(_QWORD *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        v9 = v14 + 1;
        if (v14 + 1 >= v13)
          goto LABEL_27;
        v12 = *(_QWORD *)(v6 + 8 * v9);
        if (!v12)
        {
          v9 = v14 + 2;
          if (v14 + 2 >= v13)
            goto LABEL_27;
          v12 = *(_QWORD *)(v6 + 8 * v9);
          if (!v12)
            break;
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  v15 = v14 + 3;
  if (v15 >= v13)
    goto LABEL_27;
  v12 = *(_QWORD *)(v6 + 8 * v15);
  if (v12)
  {
    v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v13)
      goto LABEL_27;
    v12 = *(_QWORD *)(v6 + 8 * v9);
    ++v15;
    if (v12)
      goto LABEL_12;
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_23E38ADB0()
{
  return sub_23E38B834(&qword_256D41D48);
}

void *sub_23E38ADBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332258);
  v6 = *v0;
  v7 = sub_23E537E38();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_23E38AFE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A98);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38B174()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AA0);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v15) = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38B308()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AB0);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(_WORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 10);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v20 = v18;
    *(_WORD *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 10) = v17;
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38B4B4()
{
  return sub_23E38A8AC((uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_256D41D40);
}

void *sub_23E38B4C8()
{
  return sub_23E38A8AC(type metadata accessor for StaticRoom, &qword_256D44A50);
}

id sub_23E38B4DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A30);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38B684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449E0);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23E38B834(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E537E38();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38B9D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A08);
  v2 = *v0;
  v3 = sub_23E537E38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E38BB68(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E537E38();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E38BCF0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, void (*a4)(char *))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  char v40[72];

  v39 = a4;
  v7 = v4;
  v8 = a2(0);
  v38 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23E537E44();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v13;
    return result;
  }
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 56);
  v35 = v4;
  v36 = v11 + 56;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v37 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 56;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_24;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v37)
      goto LABEL_33;
    v25 = *(_QWORD *)(v36 + 8 * v24);
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_33;
      v25 = *(_QWORD *)(v36 + 8 * v20);
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v37)
          goto LABEL_33;
        v25 = *(_QWORD *)(v36 + 8 * v20);
        if (!v25)
          break;
      }
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v38 + 72);
    sub_23E1E2F50(*(_QWORD *)(v11 + 48) + v27 * v23, (uint64_t)v10, a2);
    sub_23E53845C();
    v39(v40);
    result = sub_23E5384A4();
    v28 = -1 << *(_BYTE *)(v13 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v18 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v18 + 8 * v30);
      }
      while (v34 == -1);
      v21 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = sub_23E1E2FDC((uint64_t)v10, *(_QWORD *)(v13 + 48) + v21 * v27, a2);
    ++*(_QWORD *)(v13 + 16);
  }
  v26 = v24 + 3;
  if (v26 >= v37)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v35;
    goto LABEL_35;
  }
  v25 = *(_QWORD *)(v36 + 8 * v26);
  if (v25)
  {
    v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v37)
      goto LABEL_33;
    v25 = *(_QWORD *)(v36 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38C004()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333A8);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38C27C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449F0);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_33:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10)
        goto LABEL_31;
      v9 = *(_QWORD *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v10)
          goto LABEL_31;
        v9 = *(_QWORD *)(v6 + 8 * v5);
        if (!v9)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v10)
            goto LABEL_31;
          v9 = *(_QWORD *)(v6 + 8 * v5);
          if (!v9)
            break;
        }
      }
    }
LABEL_22:
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v15 = -1 << *(_BYTE *)(v4 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v18 = 0;
      v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        v20 = v17 == v19;
        if (v17 == v19)
          v17 = 0;
        v18 |= v20;
        v21 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(_QWORD *)(v4 + 16);
  }
  v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    result = swift_release();
    v1 = v0;
    goto LABEL_33;
  }
  v9 = *(_QWORD *)(v6 + 8 * v14);
  if (v9)
  {
    v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v10)
      goto LABEL_31;
    v9 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v9)
      goto LABEL_22;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E38C4BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A98);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    result = MEMORY[0x24264F6DC](*(_QWORD *)(v4 + 40), v18, 4);
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38C720()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AB8);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E53845C();
    sub_23E53848C();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38C9A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D50);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E53845C();
    sub_23E53848C();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38CC28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned __int16 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AA0);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v14);
    result = MEMORY[0x24264F6DC](*(_QWORD *)(v4 + 40), v18, 2);
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_WORD *)(*(_QWORD *)(v4 + 48) + 2 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38CE8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44AB0);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v28 = v2 + 56;
  v6 = 1 << *(_BYTE *)(v2 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v29)
      goto LABEL_35;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_35;
      v15 = *(_QWORD *)(v28 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_35;
        v15 = *(_QWORD *)(v28 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v2 + 48) + 16 * v13;
    v18 = *(_QWORD *)v17;
    v19 = *(_WORD *)(v17 + 8);
    v20 = *(unsigned __int8 *)(v17 + 10);
    sub_23E53845C();
    sub_23E538498();
    sub_23E538474();
    if (v20 != 1)
      sub_23E538480();
    result = sub_23E5384A4();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = *(_QWORD *)(v4 + 48) + 16 * v10;
    *(_QWORD *)v11 = v18;
    *(_WORD *)(v11 + 8) = v19;
    *(_BYTE *)(v11 + 10) = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_35:
    result = swift_release();
    v1 = v0;
    goto LABEL_37;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v29)
      goto LABEL_35;
    v15 = *(_QWORD *)(v28 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23E38D174()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27[4];

  v1 = v0;
  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A00);
  v6 = sub_23E537E44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v23 = v0;
  v24 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v25 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_7;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v14;
    if (!v20)
    {
      v14 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v14);
      if (!v20)
      {
        v14 = v19 + 2;
        if (v19 + 2 >= v25)
          goto LABEL_23;
        v20 = *(_QWORD *)(v24 + 8 * v14);
        if (!v20)
          break;
      }
    }
LABEL_22:
    v11 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_7:
    v17 = *(_QWORD *)(v26 + 72);
    sub_23E1E2F50(*(_QWORD *)(v5 + 48) + v17 * v16, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_23E53845C();
    StaticAccessory.hash(into:)(v27);
    StaticService.hash(into:)(v27);
    StaticCharacteristic.hash(into:)();
    sub_23E5384A4();
    v18 = sub_23E537D60();
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    ++*(_QWORD *)(v7 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_23:
    result = swift_release_n();
    v1 = v23;
    goto LABEL_25;
  }
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v14 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v14 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v14);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E38D43C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  __int128 v56[5];

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticMediaSystemComponent();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A18);
  v11 = sub_23E537E44();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v12;
    return result;
  }
  v48 = v2;
  v49 = v3;
  v44 = v0;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 56);
  v46 = v10 + 56;
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v47 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 56;
  result = swift_retain();
  v19 = 0;
  v20 = v10;
  v21 = v48;
  while (1)
  {
    if (v16)
    {
      v54 = v19;
      v55 = (v16 - 1) & v16;
      v23 = __clz(__rbit64(v16)) | (v19 << 6);
      goto LABEL_24;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v24 >= v47)
      goto LABEL_36;
    v25 = *(_QWORD *)(v46 + 8 * v24);
    v26 = v19 + 1;
    if (!v25)
    {
      v26 = v19 + 2;
      if (v19 + 2 >= v47)
        goto LABEL_36;
      v25 = *(_QWORD *)(v46 + 8 * v26);
      if (!v25)
      {
        v26 = v19 + 3;
        if (v19 + 3 >= v47)
          goto LABEL_36;
        v25 = *(_QWORD *)(v46 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_23:
    v54 = v26;
    v55 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v20 + 48);
    v53 = *(_QWORD *)(v50 + 72);
    sub_23E1E2F50(v28 + v53 * v23, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E53845C();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    v29 = v51;
    StaticMediaProfile.hash(into:)(v56);
    sub_23E538468();
    v30 = *(_QWORD *)&v9[*(int *)(v29 + 28)];
    swift_bridgeObjectRetain();
    sub_23E240740(v56, v30);
    swift_bridgeObjectRelease();
    v31 = v52;
    sub_23E1E7C20((uint64_t)&v9[*(int *)(v29 + 32)], v52, &qword_254333F50);
    v32 = v49;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v31, 1, v21) == 1)
    {
      sub_23E538474();
    }
    else
    {
      v33 = v12;
      v34 = v20;
      v35 = v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v45, v31, v21);
      sub_23E538474();
      sub_23E5374D8();
      v36 = v35;
      v20 = v34;
      v12 = v33;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v21);
    }
    v16 = v55;
    result = sub_23E5384A4();
    v37 = -1 << *(_BYTE *)(v12 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v17 + 8 * (v38 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v17 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v17 + 8 * v39);
      }
      while (v43 == -1);
      v22 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = sub_23E1E2FDC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v22 * v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    ++*(_QWORD *)(v12 + 16);
    v19 = v54;
  }
  v27 = v19 + 4;
  if (v19 + 4 >= v47)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v44;
    goto LABEL_38;
  }
  v25 = *(_QWORD *)(v46 + 8 * v27);
  if (v25)
  {
    v26 = v19 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v47)
      goto LABEL_36;
    v25 = *(_QWORD *)(v46 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23E38D90C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  unint64_t v55;
  char *v56;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v56 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticZone();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v0;
  v10 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A90);
  v11 = sub_23E537E44();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
    result = swift_release();
LABEL_42:
    *v44 = v12;
    return result;
  }
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 56);
  v45 = v10 + 56;
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v46 = (unint64_t)(v13 + 63) >> 6;
  v47 = v11 + 56;
  result = swift_retain();
  v18 = 0;
  v49 = v10;
  v50 = v12;
  v48 = v9;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v21 = (v16 - 1) & v16;
      v54 = v18;
      v22 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v23 >= v46)
      goto LABEL_40;
    v24 = *(_QWORD *)(v45 + 8 * v23);
    v25 = v18 + 1;
    if (!v24)
    {
      v25 = v18 + 2;
      if (v18 + 2 >= v46)
        goto LABEL_40;
      v24 = *(_QWORD *)(v45 + 8 * v25);
      if (!v24)
      {
        v25 = v18 + 3;
        if (v18 + 3 >= v46)
          goto LABEL_40;
        v24 = *(_QWORD *)(v45 + 8 * v25);
        if (!v24)
          break;
      }
    }
LABEL_23:
    v21 = (v24 - 1) & v24;
    v54 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_24:
    v55 = v21;
    v27 = *(_QWORD *)(v10 + 48);
    v53 = *(_QWORD *)(v51 + 72);
    sub_23E1E2F50(v27 + v53 * v22, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    sub_23E53845C();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    v28 = v52;
    sub_23E5375EC();
    v29 = *(_QWORD *)&v9[*(int *)(v28 + 24)];
    v30 = *(_QWORD *)(v29 + 16);
    sub_23E538468();
    if (v30)
    {
      v31 = v29 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v32 = *(_QWORD *)(v2 + 72);
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
      while (1)
      {
        v33(v6, v31, v1);
        v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
        v34(v6, 0, 1, v1);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
          break;
        v35 = v56;
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v56, v6, v1);
        sub_23E5374D8();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v35, v1);
        v31 += v32;
        if (!--v30)
          goto LABEL_30;
      }
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_30:
      v34(v6, 1, 1, v1);
    }
    result = sub_23E5384A4();
    v12 = v50;
    v36 = -1 << *(_BYTE *)(v50 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v47 + 8 * (v37 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v47 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      v9 = v48;
      v10 = v49;
      v16 = v55;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      v9 = v48;
      v10 = v49;
      v16 = v55;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v47 + 8 * v38);
      }
      while (v42 == -1);
      v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v47 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = sub_23E1E2FDC((uint64_t)v9, *(_QWORD *)(v12 + 48) + v19 * v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    ++*(_QWORD *)(v12 + 16);
    v18 = v54;
  }
  v26 = v18 + 4;
  if (v18 + 4 >= v46)
  {
LABEL_40:
    result = swift_release_n();
    goto LABEL_42;
  }
  v24 = *(_QWORD *)(v45 + 8 * v26);
  if (v24)
  {
    v25 = v18 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v46)
      goto LABEL_40;
    v24 = *(_QWORD *)(v45 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E38DDFC()
{
  uint64_t *v0;
  uint64_t *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38[4];

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticServiceGroup();
  v36 = *((_QWORD *)v2 - 1);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A68);
  v6 = sub_23E537E44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v7;
    return result;
  }
  v32 = v0;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v34 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  v33 = v4;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v35)
      goto LABEL_36;
    v19 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_36;
      v19 = *(_QWORD *)(v34 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v35)
          goto LABEL_36;
        v19 = *(_QWORD *)(v34 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(_QWORD *)(v5 + 48);
    v37 = *(_QWORD *)(v36 + 72);
    sub_23E1E2F50(v21 + v37 * v17, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E53845C();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    sub_23E538474();
    sub_23E538468();
    v22 = *(_QWORD *)&v4[v2[8]];
    swift_bridgeObjectRetain();
    sub_23E240740(v38, v22);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v4[v2[9] + 8])
    {
      sub_23E538474();
      swift_bridgeObjectRetain();
      v4 = v33;
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E538474();
    }
    sub_23E538474();
    v23 = *(_QWORD *)&v4[v2[11]];
    swift_bridgeObjectRetain();
    sub_23E238230((uint64_t)v38, v23);
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v35)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v32;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v34 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v35)
      goto LABEL_36;
    v19 = *(_QWORD *)(v34 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23E38E268()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v1 = v0;
  v2 = type metadata accessor for StaticUser();
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A60);
  v6 = sub_23E537E44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v31 = v0;
  v32 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  v34 = v5;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v37 = v14;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v33)
      goto LABEL_33;
    v19 = *(_QWORD *)(v32 + 8 * v18);
    v20 = v14 + 1;
    if (!v19)
    {
      v20 = v14 + 2;
      if (v14 + 2 >= v33)
        goto LABEL_33;
      v19 = *(_QWORD *)(v32 + 8 * v20);
      if (!v19)
      {
        v20 = v14 + 3;
        if (v14 + 3 >= v33)
          goto LABEL_33;
        v19 = *(_QWORD *)(v32 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v11 = (v19 - 1) & v19;
    v37 = v20;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v5 + 48);
    v23 = *(_QWORD *)(v35 + 72);
    sub_23E1E2F50(v22 + v23 * v17, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    sub_23E53845C();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    sub_23E5375EC();
    sub_23E5374D8();
    sub_23E538468();
    result = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    ++*(_QWORD *)(v7 + 16);
    v5 = v34;
    v14 = v37;
  }
  v21 = v14 + 4;
  if (v14 + 4 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v32 + 8 * v21);
  if (v19)
  {
    v20 = v14 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v33)
      goto LABEL_33;
    v19 = *(_QWORD *)(v32 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38E610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A38);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38E888(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;

  v5 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_23E537E44();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v5 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 56);
  v31 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v31)
      goto LABEL_33;
    v20 = *(_QWORD *)(v10 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v31)
        goto LABEL_33;
      v20 = *(_QWORD *)(v10 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v31)
          goto LABEL_33;
        v20 = *(_QWORD *)(v10 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
    v23 = sub_23E53845C();
    a3(v23);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v16 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v22;
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v5 = v3;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v10 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v31)
      goto LABEL_33;
    v20 = *(_QWORD *)(v10 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38EB40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A30);
  v3 = sub_23E537E44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v28 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_35;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_35;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_23E53845C();
    sub_23E538474();
    if (v19)
    {
      v20 = v19;
      sub_23E537C64();

    }
    result = sub_23E5384A4();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v28;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_35;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23E38EDEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D449E0);
  v3 = sub_23E537E44();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23E53845C();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38F098(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23E537E44();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_23E537C4C();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38F30C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A08);
  result = sub_23E537E44();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_23E538450();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E38F56C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44A40);
  v3 = sub_23E537E44();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x23E38F884);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_23E53845C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_23E38F89C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(char *, uint64_t))
{
  uint64_t *v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v8 = v4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - v11;
  v13 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v14 = sub_23E537E44();
  if (!*(_QWORD *)(v13 + 16))
  {
    result = swift_release();
LABEL_24:
    *v8 = v14;
    return result;
  }
  v28 = v8;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = v13 + 56;
  v17 = -1;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  v18 = v17 & *(_QWORD *)(v13 + 56);
  v19 = (unint64_t)(v15 + 63) >> 6;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_6;
    }
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v24 >= v19)
      goto LABEL_22;
    v25 = *(_QWORD *)(v16 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v19)
        goto LABEL_22;
      v25 = *(_QWORD *)(v16 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v19)
          goto LABEL_22;
        v25 = *(_QWORD *)(v16 + 8 * v21);
        if (!v25)
          break;
      }
    }
LABEL_21:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_6:
    sub_23E1E2F50(*(_QWORD *)(v13 + 48) + *(_QWORD *)(v10 + 72) * v23, (uint64_t)v12, a2);
    result = a4(v12, v14);
  }
  v26 = v24 + 3;
  if (v26 >= v19)
  {
LABEL_22:
    result = swift_release_n();
    v8 = v28;
    goto LABEL_24;
  }
  v25 = *(_QWORD *)(v16 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v19)
      goto LABEL_22;
    v25 = *(_QWORD *)(v16 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel14StaticResidentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int16 v18;
  __int16 v19;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for StaticResident();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_23E538354() & 1) == 0)
    return 0;
  v10 = v4[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = *(_QWORD *)(a1 + v10 + 8);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  if (v12)
  {
    if (!v14)
      return 0;
    v15 = *v11 == *v13 && v12 == v14;
    if (!v15 && (sub_23E538354() & 1) == 0)
      return 0;
  }
  else if (v14)
  {
    return 0;
  }
  if ((sub_23E3372B8(*(_QWORD *)(a1 + v4[7]), *(_QWORD *)(a2 + v4[7])) & 1) != 0
    && (sub_23E337498(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a2 + v4[8])) & 1) != 0)
  {
    v16 = v4[9];
    v19 = *(_WORD *)(a1 + v16);
    v18 = *(_WORD *)(a2 + v16);
    if ((_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(&v19, &v18) & 1) != 0)
      return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  return 0;
}

uint64_t sub_23E38FBBC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  if (!objc_msgSend(a1, sel_supportsResidentSelection))
    return (uint64_t)v6;
  v6 = objc_msgSend(a1, sel_autoSelectedPreferredResidents);
  if (!v6)
    return (uint64_t)v6;
  sub_23E1E335C(0, (unint64_t *)&qword_254332C18);
  v7 = sub_23E5377F0();

  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_5;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v8 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_5:
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  result = sub_23E2058F8(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v6 = v17;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x24264F148](v10, v7);
      else
        v11 = *(id *)(v7 + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_23E536F68();

      v17 = v6;
      v15 = v6[2];
      v14 = v6[3];
      if (v15 >= v14 >> 1)
      {
        sub_23E2058F8(v14 > 1, v15 + 1, 1);
        v6 = v17;
      }
      ++v10;
      v6[2] = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v15, v5, v2);
    }
    while (v8 != v10);
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void *sub_23E38FDEC(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v12;

  if (a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_23E53803C())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v12 = v7;
      v10 = sub_23E37D234(&v12, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return v8;
      }
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23E38FF0C()
{
  unint64_t result;

  result = qword_256D44878;
  if (!qword_256D44878)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AFBC, &type metadata for StaticResident.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44878);
  }
  return result;
}

unint64_t sub_23E38FF50()
{
  unint64_t result;

  result = qword_256D44880;
  if (!qword_256D44880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AF6C, &type metadata for StaticResident.Status.ReachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44880);
  }
  return result;
}

unint64_t sub_23E38FF94()
{
  unint64_t result;

  result = qword_256D44888;
  if (!qword_256D44888)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AF1C, &type metadata for StaticResident.Status.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44888);
  }
  return result;
}

unint64_t sub_23E38FFD8()
{
  unint64_t result;

  result = qword_256D448B8;
  if (!qword_256D448B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AECC, &type metadata for StaticResident.Capability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D448B8);
  }
  return result;
}

unint64_t sub_23E39001C()
{
  unint64_t result;

  result = qword_256D448C0;
  if (!qword_256D448C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AE7C, &type metadata for StaticResident.Capability.SupportResidentSelectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D448C0);
  }
  return result;
}

unint64_t sub_23E390060()
{
  unint64_t result;

  result = qword_256D448E0;
  if (!qword_256D448E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AE2C, &type metadata for StaticResident.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D448E0);
  }
  return result;
}

unint64_t sub_23E3900A4()
{
  unint64_t result;

  result = qword_256D448F8;
  if (!qword_256D448F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Status, &type metadata for StaticResident.Status);
    atomic_store(result, (unint64_t *)&qword_256D448F8);
  }
  return result;
}

unint64_t sub_23E3900E8()
{
  unint64_t result;

  result = qword_256D44910;
  if (!qword_256D44910)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Capability, &type metadata for StaticResident.Capability);
    atomic_store(result, (unint64_t *)&qword_256D44910);
  }
  return result;
}

unint64_t sub_23E39012C()
{
  unint64_t result;

  result = qword_256D44918;
  if (!qword_256D44918)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.SpecialMediaCategory, &type metadata for StaticAccessory.SpecialMediaCategory);
    atomic_store(result, (unint64_t *)&qword_256D44918);
  }
  return result;
}

unint64_t sub_23E390170()
{
  unint64_t result;

  result = qword_256D44930;
  if (!qword_256D44930)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Status, &type metadata for StaticResident.Status);
    atomic_store(result, (unint64_t *)&qword_256D44930);
  }
  return result;
}

uint64_t sub_23E3901B4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24264FDE4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E390218()
{
  unint64_t result;

  result = qword_256D44940;
  if (!qword_256D44940)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Capability, &type metadata for StaticResident.Capability);
    atomic_store(result, (unint64_t *)&qword_256D44940);
  }
  return result;
}

unint64_t sub_23E39025C()
{
  unint64_t result;

  result = qword_256D44948;
  if (!qword_256D44948)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.SpecialMediaCategory, &type metadata for StaticAccessory.SpecialMediaCategory);
    atomic_store(result, (unint64_t *)&qword_256D44948);
  }
  return result;
}

unint64_t sub_23E3902A4()
{
  unint64_t result;

  result = qword_254333210;
  if (!qword_254333210)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Status, &type metadata for StaticResident.Status);
    atomic_store(result, (unint64_t *)&qword_254333210);
  }
  return result;
}

unint64_t sub_23E3902EC()
{
  unint64_t result;

  result = qword_256D44958;
  if (!qword_256D44958)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticResident.Capability, &type metadata for StaticResident.Capability);
    atomic_store(result, (unint64_t *)&qword_256D44958);
  }
  return result;
}

uint64_t sub_23E390330()
{
  return sub_23E1EE1C4(&qword_256D44960, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, (uint64_t)&protocol conformance descriptor for StaticResident);
}

char *initializeBufferWithCopyOfBuffer for StaticResident(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *(_QWORD *)v11 = *v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *(_QWORD *)v14 = *v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    *(_QWORD *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    v18 = a3[10];
    *(_WORD *)&a1[a3[9]] = *(_WORD *)((char *)a2 + a3[9]);
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v19, v20, v7);
  }
  return a1;
}

uint64_t destroy for StaticResident(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 40), v4);
}

uint64_t initializeWithCopy for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v18, v19, v6);
  return a1;
}

uint64_t assignWithCopy for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + a3[10], a2 + a3[10], v6);
  return a1;
}

uint64_t initializeWithTake for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + v10, a2 + v10, v6);
  return a1;
}

uint64_t assignWithTake for StaticResident(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v18 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  v7(a1 + v18, a2 + v18, v6);
  return a1;
}

uint64_t sub_23E390864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E3908E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Status()
{
  return &type metadata for StaticResident.Status;
}

ValueMetadata *type metadata accessor for StaticResident.Capability()
{
  return &type metadata for StaticResident.Capability;
}

uint64_t storeEnumTagSinglePayload for StaticResident.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E3909D4 + 4 * byte_23E54A756[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E390A08 + 4 * byte_23E54A751[v4]))();
}

uint64_t sub_23E390A08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E390A10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E390A18);
  return result;
}

uint64_t sub_23E390A24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E390A2CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E390A30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E390A38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.CodingKeys()
{
  return &type metadata for StaticResident.CodingKeys;
}

uint64_t _s13HomeDataModel14StaticResidentV10CapabilityOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E390A94 + 4 * byte_23E54A75B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E390AB4 + 4 * byte_23E54A760[v4]))();
}

_BYTE *sub_23E390A94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E390AB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E390ABC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E390AC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E390ACC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E390AD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Capability.CodingKeys()
{
  return &type metadata for StaticResident.Capability.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Capability.SupportResidentSelectionCodingKeys()
{
  return &type metadata for StaticResident.Capability.SupportResidentSelectionCodingKeys;
}

uint64_t _s13HomeDataModel14StaticResidentV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E390B4C + 4 * byte_23E54A76A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E390B80 + 4 * byte_23E54A765[v4]))();
}

uint64_t sub_23E390B80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E390B88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E390B90);
  return result;
}

uint64_t sub_23E390B9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E390BA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E390BA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E390BB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticResident.Status.CodingKeys()
{
  return &type metadata for StaticResident.Status.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Status.PrimaryCodingKeys()
{
  return &type metadata for StaticResident.Status.PrimaryCodingKeys;
}

ValueMetadata *type metadata accessor for StaticResident.Status.ReachableCodingKeys()
{
  return &type metadata for StaticResident.Status.ReachableCodingKeys;
}

unint64_t sub_23E390BF0()
{
  unint64_t result;

  result = qword_256D44968;
  if (!qword_256D44968)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AC44, &type metadata for StaticResident.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44968);
  }
  return result;
}

unint64_t sub_23E390C38()
{
  unint64_t result;

  result = qword_256D44970;
  if (!qword_256D44970)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AD4C, &type metadata for StaticResident.Capability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44970);
  }
  return result;
}

unint64_t sub_23E390C80()
{
  unint64_t result;

  result = qword_256D44978;
  if (!qword_256D44978)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AE04, &type metadata for StaticResident.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44978);
  }
  return result;
}

unint64_t sub_23E390CC8()
{
  unint64_t result;

  result = qword_256D44980;
  if (!qword_256D44980)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AD74, &type metadata for StaticResident.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44980);
  }
  return result;
}

unint64_t sub_23E390D10()
{
  unint64_t result;

  result = qword_256D44988;
  if (!qword_256D44988)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AD9C, &type metadata for StaticResident.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44988);
  }
  return result;
}

unint64_t sub_23E390D58()
{
  unint64_t result;

  result = qword_256D44990;
  if (!qword_256D44990)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AC6C, &type metadata for StaticResident.Capability.SupportResidentSelectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44990);
  }
  return result;
}

unint64_t sub_23E390DA0()
{
  unint64_t result;

  result = qword_256D44998;
  if (!qword_256D44998)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AC94, &type metadata for StaticResident.Capability.SupportResidentSelectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44998);
  }
  return result;
}

unint64_t sub_23E390DE8()
{
  unint64_t result;

  result = qword_256D449A0;
  if (!qword_256D449A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54ACBC, &type metadata for StaticResident.Capability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449A0);
  }
  return result;
}

unint64_t sub_23E390E30()
{
  unint64_t result;

  result = qword_256D449A8;
  if (!qword_256D449A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54ACE4, &type metadata for StaticResident.Capability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449A8);
  }
  return result;
}

unint64_t sub_23E390E78()
{
  unint64_t result;

  result = qword_256D449B0;
  if (!qword_256D449B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AB64, &type metadata for StaticResident.Status.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449B0);
  }
  return result;
}

unint64_t sub_23E390EC0()
{
  unint64_t result;

  result = qword_256D449B8;
  if (!qword_256D449B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AB8C, &type metadata for StaticResident.Status.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449B8);
  }
  return result;
}

unint64_t sub_23E390F08()
{
  unint64_t result;

  result = qword_256D449C0;
  if (!qword_256D449C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AB14, &type metadata for StaticResident.Status.ReachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449C0);
  }
  return result;
}

unint64_t sub_23E390F50()
{
  unint64_t result;

  result = qword_256D449C8;
  if (!qword_256D449C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54AB3C, &type metadata for StaticResident.Status.ReachableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449C8);
  }
  return result;
}

unint64_t sub_23E390F98()
{
  unint64_t result;

  result = qword_256D449D0;
  if (!qword_256D449D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54ABB4, &type metadata for StaticResident.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449D0);
  }
  return result;
}

unint64_t sub_23E390FE0()
{
  unint64_t result;

  result = qword_256D449D8;
  if (!qword_256D449D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54ABDC, &type metadata for StaticResident.Status.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D449D8);
  }
  return result;
}

uint64_t sub_23E391024(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62616863616572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E391120(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x800000023E568D10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23E538354();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23E3911A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E568D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23E391460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3914A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t MatterDeviceType.rawValue.getter()
{
  char *v0;

  return dword_23E54B2B0[*v0];
}

Swift::Bool __swiftcall MatterDeviceType.contains(cluster:)(HomeDataModel::ClusterKind cluster)
{
  unsigned __int8 *v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;
  BOOL v5;
  _BOOL4 v6;

  v2 = *(unsigned __int8 *)cluster;
  v3 = *v1;
  v4 = (0x186CE0u >> v3) & 1;
  if (v3 >= 0x15)
    LOBYTE(v4) = 0;
  v5 = v3 >= 0x15;
  v6 = (0x187EF0u >> v3) & 1;
  if (v5)
    LOBYTE(v6) = 0;
  if (v2 != 10)
    LOBYTE(v6) = 0;
  if (v2 == 11)
    return v4;
  else
    return v6;
}

HomeDataModel::MatterDeviceType_optional __swiftcall MatterDeviceType.init(rawValue:)(Swift::UInt32 rawValue)
{
  char *v1;
  char v2;
  char v3;

  if ((int)rawValue <= 513)
  {
    switch(rawValue)
    {
      case 0x100u:
        v2 = 4;
        goto LABEL_31;
      case 0x101u:
        v2 = 5;
        goto LABEL_31;
      case 0x102u:
      case 0x108u:
      case 0x109u:
LABEL_15:
        *v1 = 26;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x103u:
        *v1 = 9;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x104u:
        *v1 = 10;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x105u:
        *v1 = 11;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x106u:
        *v1 = 24;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x107u:
        *v1 = 25;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x10Au:
        *v1 = 12;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x10Bu:
        *v1 = 13;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x10Cu:
        v2 = 6;
        goto LABEL_31;
      case 0x10Du:
        v2 = 7;
LABEL_31:
        v3 = v2;
LABEL_32:
        *v1 = v3;
        break;
      default:
        v2 = 0;
        v3 = 8;
        switch(rawValue)
        {
          case 0xAu:
            *v1 = 21;
            break;
          case 0xBu:
            *v1 = 22;
            break;
          case 0xFu:
            goto LABEL_32;
          case 0x11u:
            v2 = 1;
            goto LABEL_31;
          case 0x13u:
            v2 = 2;
            goto LABEL_31;
          case 0x15u:
            *v1 = 23;
            break;
          case 0x16u:
            goto LABEL_31;
          case 0x27u:
            v2 = 3;
            goto LABEL_31;
          case 0x2Bu:
            *v1 = 18;
            break;
          default:
            goto LABEL_15;
        }
        break;
    }
  }
  else
  {
    switch(rawValue)
    {
      case 0x300u:
        *v1 = 14;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x301u:
        *v1 = 15;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x302u:
        goto LABEL_15;
      case 0x303u:
        *v1 = 19;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      case 0x304u:
        *v1 = 20;
        return (HomeDataModel::MatterDeviceType_optional)rawValue;
      default:
        if (rawValue == 514)
        {
          *v1 = 16;
        }
        else
        {
          if (rawValue != 515)
            goto LABEL_15;
          *v1 = 17;
        }
        break;
    }
  }
  return (HomeDataModel::MatterDeviceType_optional)rawValue;
}

HomeDataModel::MatterDeviceType_optional sub_23E3916F0(Swift::UInt32 *a1)
{
  return MatterDeviceType.init(rawValue:)(*a1);
}

void sub_23E3916F8(_DWORD *a1@<X8>)
{
  char *v1;

  *a1 = dword_23E54B2B0[*v1];
}

uint64_t sub_23E391710()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E39175C()
{
  return sub_23E53848C();
}

uint64_t sub_23E391790()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

BOOL sub_23E3917D8(char *a1, char *a2)
{
  return dword_23E54B2B0[*a1] == dword_23E54B2B0[*a2];
}

uint64_t sub_23E3917FC()
{
  sub_23E391B70();
  return sub_23E5377CC();
}

uint64_t sub_23E391858()
{
  sub_23E391B70();
  return sub_23E537790();
}

uint64_t sub_23E3918A4()
{
  uint64_t result;

  result = sub_23E2D06E0((uint64_t)&unk_250EDE370);
  qword_256D44AC0 = result;
  return result;
}

uint64_t static MatterDeviceType.homeAppSupported.getter()
{
  if (qword_256D3EE08 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t MatterDeviceType.homeAppSupported.getter()
{
  char *v0;
  char v1;

  v1 = *v0;
  if (qword_256D3EE08 != -1)
    swift_once();
  if (sub_23E2100B0(v1, qword_256D44AC0))
    return 1;
  if (qword_256D3EEA8 != -1)
    swift_once();
  return byte_256D472A0;
}

void MatterDeviceType.umbrellaCategory.getter(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned int v2;

  v2 = *v1 - 4;
  if (v2 > 0x15)
    *a1 = 5;
  else
    *a1 = byte_23E54B318[(char)v2];
}

unint64_t sub_23E3919D0()
{
  unint64_t result;

  result = qword_256D44AC8;
  if (!qword_256D44AC8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterDeviceType, &type metadata for MatterDeviceType);
    atomic_store(result, (unint64_t *)&qword_256D44AC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MatterDeviceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterDeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_23E391AF0 + 4 * byte_23E54B12A[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_23E391B24 + 4 * byte_23E54B125[v4]))();
}

uint64_t sub_23E391B24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E391B2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E391B34);
  return result;
}

uint64_t sub_23E391B40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E391B48);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_23E391B4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E391B54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterDeviceType()
{
  return &type metadata for MatterDeviceType;
}

unint64_t sub_23E391B70()
{
  unint64_t result;

  result = qword_256D44AD0;
  if (!qword_256D44AD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterDeviceType, &type metadata for MatterDeviceType);
    atomic_store(result, (unint64_t *)&qword_256D44AD0);
  }
  return result;
}

uint64_t StatusItem.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v9 = sub_23E536F80();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a3, v8, v9);
  return sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
}

void StatusItem.priority.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

BOOL static StatusItemPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void sub_23E391C8C(_BYTE *a1@<X8>)
{
  StatusItem.priority.getter(a1);
}

BOOL static StatusItemPriority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StatusItemPriority.hash(into:)()
{
  return sub_23E538468();
}

uint64_t StatusItemPriority.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StatusItem.label.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v7 = *(_QWORD *)&v6[*(int *)(v4 + 24)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  return v7;
}

uint64_t StatusItem.valueString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v7 = *(_QWORD *)&v6[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  return v7;
}

unint64_t sub_23E391E84()
{
  unint64_t result;

  result = qword_256D44AD8;
  if (!qword_256D44AD8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StatusItemPriority, &type metadata for StatusItemPriority);
    atomic_store(result, (unint64_t *)&qword_256D44AD8);
  }
  return result;
}

uint64_t dispatch thunk of StatusItem.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StatusItem.dataHolder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of StatusItem.filter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StatusItem.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of StatusItem.init(staticAccessories:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for TilesFilter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TilesFilter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EEADE0[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for TilesFilter()
{
  uint64_t result;

  result = qword_256D44B50;
  if (!qword_256D44B50)
    return swift_getSingletonMetadata();
  return result;
}

void *initializeWithTake for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for TilesFilter(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_23E39252C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23E3925F4();
  if (v0 <= 0x3F)
  {
    sub_23E39265C(319, &qword_256D44B68, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
    if (v1 <= 0x3F)
    {
      sub_23E39265C(319, qword_256D44B70, (void (*)(uint64_t))type metadata accessor for StaticService);
      if (v2 <= 0x3F)
        swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_23E3925F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D44B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3FF20);
    v0 = sub_23E537040();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D44B60);
  }
}

void sub_23E39265C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23E537040();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t storeEnumTagSinglePayload for StatusItemPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E392704 + 4 * byte_23E54B335[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E392738 + 4 * byte_23E54B330[v4]))();
}

uint64_t sub_23E392738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E392740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E392748);
  return result;
}

uint64_t sub_23E392754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E39275CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E392760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E392768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusItemPriority()
{
  return &type metadata for StatusItemPriority;
}

void HMActionSet.shouldShowInDashboard.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_20;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t sub_23E3928E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void (*HMActionSet.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMActionSet.shouldShowInDashboard.getter() & 1;
  return sub_23E392944;
}

void sub_23E392944(uint64_t a1)
{
  HMActionSet.shouldShowInDashboard.setter(*(_BYTE *)(a1 + 8));
}

BOOL HMActionSet.hasSetDashboardVisibility.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
    swift_unknownObjectRelease();
  return v3 != 0;
}

uint64_t HMActionSet.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  char v5;

  v3 = objc_msgSend(v1, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)(&v5);
  return Icon.init(actionSetKind:)(&v5, a1);
}

uint64_t sub_23E392A74@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  char v15;
  _QWORD v16[2];
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = objc_msgSend(*a1, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)(&v15);
  Icon.init(actionSetKind:)(&v15, (uint64_t)v16);
  v4 = v16[1];
  v5 = v17;
  v6 = v18;
  v7 = v19;
  v8 = v20;
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v13 = v24;
  result = v25;
  v14 = v26;
  *(_QWORD *)a2 = v16[0];
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v10;
  *(_BYTE *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = result;
  *(_BYTE *)(a2 + 88) = v14;
  return result;
}

uint64_t HMActionSet.statusIcon.setter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void (*HMActionSet.statusIcon.modify(_QWORD *a1))(void **a1)
{
  void *v1;
  void *v3;
  id v4;
  char v6;

  v3 = malloc(0x59uLL);
  *a1 = v3;
  v4 = objc_msgSend(v1, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)(&v6);
  Icon.init(actionSetKind:)(&v6, (uint64_t)v3);
  return sub_23E392C00;
}

void sub_23E392C00(void **a1)
{
  void *v1;

  v1 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  free(v1);
}

void HMActionSet.statusIconTint.setter(uint64_t a1)
{
  sub_23E392E20(a1, (uint64_t)&unk_250EEAEC0, (uint64_t)sub_23E393800, (uint64_t)&block_descriptor_6_0);
}

uint64_t (*HMActionSet.statusIconTint.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = HMActionSet.tileIconTint.getter();
  return sub_23E392CA4;
}

uint64_t sub_23E392CA4(uint64_t *a1, char a2)
{
  return sub_23E393164(a1, a2, (uint64_t (*)(uint64_t))HMActionSet.statusIconTint.setter);
}

uint64_t _sSo11HMActionSetC13HomeDataModelE14statusIconTint7SwiftUI5ColorVSgvg_0()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  _BYTE v9[40];
  __int128 v10;
  __int128 v11;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = objc_msgSend(v1, sel_dictionary);

  v3 = sub_23E537460();
  *(_QWORD *)&v10 = 0xD00000000000001FLL;
  *((_QWORD *)&v10 + 1) = 0x800000023E568DB0;
  sub_23E537E20();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_23E211498((uint64_t)v9), (v5 & 1) != 0))
  {
    sub_23E1EA57C(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23E1FFD40((uint64_t)v9);
  if (*((_QWORD *)&v11 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44BA0);
    if (swift_dynamicCast())
      v6 = v8;
    else
      v6 = 0;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v10);
    v6 = 0;
  }
  return Color.init(_:)(v6);
}

void HMActionSet.tileIconTint.setter(uint64_t a1)
{
  sub_23E392E20(a1, (uint64_t)&unk_250EEAF10, (uint64_t)sub_23E393580, (uint64_t)&block_descriptor_12);
}

void sub_23E392E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  if (a1)
  {
    swift_retain();
    v7 = Color.colorDictionary.getter();
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v4, sel_applicationData);
      sub_23E2F8F18(v8);
      swift_bridgeObjectRelease();
      v10 = (void *)sub_23E537454();
      v11 = (void *)sub_23E537538();
      objc_msgSend(v9, sel_setObject_forKeyedSubscript_, v10, v11);

      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v4, sel_applicationData);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v4;
      v16[4] = a3;
      v16[5] = v13;
      v16[0] = MEMORY[0x24BDAC760];
      v16[1] = 1107296256;
      v16[2] = sub_23E50B358;
      v16[3] = a4;
      v14 = _Block_copy(v16);
      v15 = v4;
      swift_release();
      objc_msgSend(v15, sel_updateApplicationData_completionHandler_, v12, v14);
      swift_release();
      _Block_release(v14);
      swift_release();

    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t sub_23E392FE0(uint64_t a1, void *a2)
{
  uint64_t updated;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_254333EE8);
  *v5 = objc_msgSend(a2, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t (*HMActionSet.tileIconTint.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = HMActionSet.tileIconTint.getter();
  return sub_23E393158;
}

uint64_t sub_23E393158(uint64_t *a1, char a2)
{
  return sub_23E393164(a1, a2, (uint64_t (*)(uint64_t))HMActionSet.tileIconTint.setter);
}

uint64_t sub_23E393164(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) == 0)
    return a3(*a1);
  v4 = swift_retain();
  a3(v4);
  return swift_release();
}

unint64_t HMActionSet.iconSymbol.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_applicationData);
  v3 = (void *)sub_23E537538();
  v4 = (unint64_t)objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);

  if (!v4)
  {

LABEL_6:
    v5 = 0;
    goto LABEL_7;
  }
  v15 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if ((swift_dynamicCast() & 1) == 0)
  {

    v4 = 0;
    goto LABEL_6;
  }
  v4 = v13;
  v5 = v14;

LABEL_7:
  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = (void *)sub_23E537538();
  v8 = objc_msgSend(v6, sel_objectForKeyedSubscript_, v7);

  if (!v8
    || (v15 = (unint64_t)v8,
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48),
        !swift_dynamicCast()))
  {

    if (!v5)
      goto LABEL_18;
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRetain();
    if ((sub_23E53767C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v4 = sub_23E393598();
      v10 = v9;
      swift_bridgeObjectRelease();
      if (!v10)
      {
LABEL_20:
        v4 = 0x69662E6573756F68;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return v4;
  }

  if (v5)
    goto LABEL_13;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v4 = v13;
    goto LABEL_14;
  }
LABEL_18:
  v11 = objc_msgSend(v1, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)((char *)&v13);
  v4 = 0xD000000000000013;
  switch((char)v13)
  {
    case 0:
      return v4;
    case 1:
      v4 = 0xD000000000000015;
      break;
    case 2:
      v4 = 0x2E78616D2E6E7573;
      break;
    case 3:
      v4 = 0x6174732E6E6F6F6DLL;
      break;
    case 7:
      goto LABEL_20;
    default:
      v4 = 0x69662E6573756F68;
      break;
  }
  return v4;
}

uint64_t HMActionSet.backupTint.getter()
{
  if (qword_256D3EEF0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_23E393580(uint64_t a1)
{
  uint64_t v1;

  return sub_23E392FE0(a1, *(void **)(v1 + 16));
}

unint64_t sub_23E393598()
{
  int v0;
  unint64_t result;

  swift_bridgeObjectRetain();
  v0 = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0() - 61;
  result = 0x2E78616D2E6E7573;
  switch(v0)
  {
    case 0:
      result = 0xD000000000000013;
      break;
    case 1:
      result = 0x702E676E69797266;
      break;
    case 2:
    case 7:
      result = 0xD000000000000011;
      break;
    case 3:
      result = 0xD000000000000013;
      break;
    case 4:
      result = 0x696E6B2E6B726F66;
      break;
    case 5:
      result = 0xD000000000000015;
      break;
    case 6:
      result = 0x2E6E726F63706F70;
      break;
    case 8:
      result = 0x69662E7472616568;
      break;
    case 9:
      result = 0x6174732E6E6F6F6DLL;
      break;
    case 10:
      return result;
    default:
      result = 0x69662E6573756F68;
      break;
  }
  return result;
}

uint64_t sub_23E39373C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMActionSet.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E393768(char *a1)
{
  HMActionSet.shouldShowInDashboard.setter(*a1);
}

uint64_t sub_23E393794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = HMActionSet.tileIconTint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23E3937BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_16Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HMActionSet.statusIconTint.setter);
}

uint64_t sub_23E3937C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_16Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t))HMActionSet.tileIconTint.setter);
}

uint64_t keypath_set_16Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_retain();
  return a5(v6);
}

void static StatusIcon.defaultIcon.getter(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 1476657152;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

void sub_23E393830()
{
  __asm { BR              X10 }
}

uint64_t sub_23E393868()
{
  unsigned int v0;
  uint64_t v1;

  v1 = sub_23E538468();
  ServiceKind.rawValue.getter(v1);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (v0 >> 8 != 5)
  {
    sub_23E538474();
    __asm { BR              X10 }
  }
  return sub_23E538474();
}

void sub_23E393A34()
{
  JUMPOUT(0x23E393AC8);
}

void sub_23E393A40()
{
  JUMPOUT(0x23E393AC8);
}

uint64_t sub_23E393A70()
{
  uint64_t v0;
  uint64_t v1;

  ((void (*)(uint64_t, uint64_t, unint64_t))sub_23E5375EC)(v0, v1 - 5, 0x800000023E560B80);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x800000023E560B80);
}

uint64_t sub_23E393A80()
{
  uint64_t v0;
  uint64_t v1;

  ((void (*)(uint64_t, uint64_t, unint64_t))sub_23E5375EC)(v0, v1 - 6, 0x800000023E560BA0);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x800000023E560BA0);
}

uint64_t sub_23E393A90()
{
  uint64_t v0;
  uint64_t v1;

  ((void (*)(uint64_t, uint64_t, unint64_t))sub_23E5375EC)(v0, v1, 0x800000023E560BC0);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x800000023E560BC0);
}

uint64_t sub_23E393A9C()
{
  uint64_t v0;
  uint64_t v1;

  ((void (*)(uint64_t, uint64_t, unint64_t))sub_23E5375EC)(v0, v1 + 1, 0x800000023E560BE0);
  return ((uint64_t (*)(unint64_t))swift_bridgeObjectRelease)(0x800000023E560BE0);
}

void sub_23E393AAC()
{
  JUMPOUT(0x23E393AB8);
}

void sub_23E393B08(_QWORD *a1)
{
  unsigned __int16 *v1;
  unsigned __int16 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C10);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C18);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v14[6] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C20);
  v14[2] = *(_QWORD *)(v8 - 8);
  v14[3] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v14[1] = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C28);
  v14[5] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[4] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C30);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C38);
  v22 = *(_QWORD *)(v12 - 8);
  v23 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v21 = *v2;
  v13 = *((unsigned __int8 *)v2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E396888();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E393D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 - 72) = 1;
  sub_23E3969DC();
  v2 = *(_QWORD *)(v1 - 192);
  v3 = *(_QWORD *)(v1 - 104);
  v4 = v0;
  sub_23E5381E0();
  v5 = *(_DWORD *)(v1 - 116);
  *(_BYTE *)(v1 - 81) = v5;
  *(_BYTE *)(v1 - 82) = 0;
  sub_23E2BE8AC();
  v6 = *(_QWORD *)(v1 - 168);
  v7 = *(_QWORD *)(v1 - 96);
  sub_23E5382AC();
  if (!v7)
  {
    *(_BYTE *)(v1 - 83) = BYTE1(v5);
    *(_BYTE *)(v1 - 84) = 1;
    sub_23E396A20();
    sub_23E538234();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 184) + 8))(v2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 112) + 8))(v4, v3);
}

void sub_23E393FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 85) = 0;
  sub_23E396A64();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v0, v5);
  JUMPOUT(0x23E393F88);
}

uint64_t sub_23E394008@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[9];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v25 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C80);
  v23[7] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C88);
  v23[8] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C90);
  v23[4] = *(_QWORD *)(v5 - 8);
  v23[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44C98);
  v23[6] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44CA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44CA8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23E396888();
  v17 = v33;
  sub_23E5384E0();
  if (!v17)
  {
    v23[2] = v8;
    v23[3] = v11;
    v23[1] = v9;
    v33 = v13;
    v18 = sub_23E5381C8();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StatusIcon.StatusIconPayload;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v12);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
}

uint64_t sub_23E394754()
{
  sub_23E3968CC();
  return sub_23E538570();
}

uint64_t sub_23E39477C()
{
  sub_23E3968CC();
  return sub_23E53857C();
}

uint64_t sub_23E3947A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3947CC + 4 * byte_23E54B4DF[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E3947CC()
{
  return 0x65636976726573;
}

uint64_t sub_23E3947E4()
{
  return 0x72657474616DLL;
}

unint64_t sub_23E3947F8()
{
  return 0xD000000000000014;
}

uint64_t sub_23E394814()
{
  return 0x65536E6F69746361;
}

uint64_t sub_23E394830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E396478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E394854()
{
  sub_23E396888();
  return sub_23E538570();
}

uint64_t sub_23E39487C()
{
  sub_23E396888();
  return sub_23E53857C();
}

uint64_t sub_23E3948A4()
{
  sub_23E396998();
  return sub_23E538570();
}

uint64_t sub_23E3948CC()
{
  sub_23E396998();
  return sub_23E53857C();
}

uint64_t sub_23E3948F4()
{
  sub_23E396A64();
  return sub_23E538570();
}

uint64_t sub_23E39491C()
{
  sub_23E396A64();
  return sub_23E53857C();
}

uint64_t sub_23E394944()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_23E394960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E396680(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E394984()
{
  sub_23E3969DC();
  return sub_23E538570();
}

uint64_t sub_23E3949AC()
{
  sub_23E3969DC();
  return sub_23E53857C();
}

uint64_t sub_23E3949D4()
{
  sub_23E396954();
  return sub_23E538570();
}

uint64_t sub_23E3949FC()
{
  sub_23E396954();
  return sub_23E53857C();
}

uint64_t sub_23E394A28()
{
  sub_23E53845C();
  sub_23E393830();
  return sub_23E5384A4();
}

uint64_t sub_23E394A7C()
{
  sub_23E53845C();
  sub_23E393830();
  return sub_23E5384A4();
}

uint64_t sub_23E394AC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E394008(a1, a2);
}

void sub_23E394ADC(_QWORD *a1)
{
  sub_23E393B08(a1);
}

void StatusIcon.customIconSymbol.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

uint64_t StatusIcon.customIconSymbolString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StatusIcon.tileOnIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E394C6C(1, 0, a1);
}

uint64_t sub_23E394B34@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  unsigned __int16 *v3;
  unsigned int v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unsigned __int8 *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int16 v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *v3;
  v6 = *((unsigned __int8 *)v3 + 2);
  v7 = *((_BYTE *)v3 + 3);
  v8 = *((_QWORD *)v3 + 1);
  v9 = *((_QWORD *)v3 + 2);
  if (v6 == 2 && (v5 >> 14 < 2 || (v5 >> 14 == 2 ? (v10 = v5 == 32769) : (v10 = 0), v10)))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333430);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E539650;
    *(_WORD *)(inited + 32) = v5;
    v18 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
    v20 = v19;
    result = swift_setDeallocating();
    *(_QWORD *)a3 = v18;
    *(_QWORD *)(a3 + 8) = v20;
    *(_BYTE *)(a3 + 16) = 0;
  }
  else
  {
    v11 = (unsigned __int8 *)(a2 & 1);
    v12 = sub_23E394CA4(a1 & 1, a2 & 1);
    v14 = v13;
    v22 = v5;
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v26 = v9;
    result = (uint64_t)sub_23E394F5C(v11, &v21);
    v16 = v21;
    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = v14;
    *(_BYTE *)(a3 + 16) = v16;
  }
  return result;
}

uint64_t StatusIcon.tileOffIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E394C6C(1, 1, a1);
}

uint64_t StatusIcon.accessoryControlOnIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E394C6C(0, 0, a1);
}

uint64_t StatusIcon.accessoryControlOffIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E394C6C(0, 1, a1);
}

uint64_t sub_23E394C6C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  return sub_23E394B34(a1, a2, a3);
}

unint64_t sub_23E394CA4(uint64_t a1, char a2)
{
  unsigned __int16 *v2;
  int v4;
  unsigned int v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t result;
  int v10;
  char v11;
  char v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v4 = *((unsigned __int8 *)v2 + 3);
  if (v4 != 88)
  {
    if ((a2 & 1) == 0)
    {
      v14 = *((_BYTE *)v2 + 3);
      return IconSymbol.onStateSymbolName.getter();
    }
    goto LABEL_34;
  }
  v5 = *v2;
  v6 = *((unsigned __int8 *)v2 + 2);
  if (v6 != 3)
  {
    if (v6 != 1)
    {
      if (!*((_BYTE *)v2 + 2))
      {
        v7 = a1;
        v14 = *v2;
        if (ServiceKind.rawValue.getter(a1) == 0xD000000000000024 && v8 == 0x800000023E55FFF0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v11 = sub_23E538354();
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0)
          {
LABEL_20:
            if ((a2 & 1) == 0)
            {
              v14 = v5;
              static IconSymbol.defaultSymbol(serviceKind:)(&v14, &v13);
              return IconSymbol.onStateSymbolName.getter();
            }
            if ((v7 & 1) == 0)
            {
              v13 = v5;
              static IconSymbol.defaultSymbol(serviceKind:)(&v13, &v14);
              if (v14 == 31)
                return 0xD000000000000014;
            }
            v14 = v5;
            static IconSymbol.defaultSymbol(serviceKind:)(&v14, &v13);
            return IconSymbol.rawValue.getter();
          }
        }
        if (v5 >> 8 != 5)
        {
          if ((a2 & 1) == 0)
          {
            v14 = 47;
            v13 = BYTE1(v5);
            static IconSymbol.defaultSymbol(for:subKind:)(&v14, &v13, &v12);
            return IconSymbol.onStateSymbolName.getter();
          }
          v14 = 47;
          v13 = BYTE1(v5);
          static IconSymbol.defaultSymbol(for:subKind:)(&v14, &v13, &v12);
          return IconSymbol.rawValue.getter();
        }
        goto LABEL_20;
      }
      return 0;
    }
    v10 = *v2;
    if ((v10 - 4) >= 4)
    {
      if ((v10 - 21) >= 2)
      {
        if (v10 == 26)
          return 0;
        LOBYTE(v4) = 87;
      }
      else
      {
        LOBYTE(v4) = 19;
      }
    }
    else
    {
      LOBYTE(v4) = 31;
    }
LABEL_34:
    v14 = v4;
    return IconSymbol.rawValue.getter();
  }
  result = 0xD000000000000013;
  switch(*v2)
  {
    case 0u:
      return result;
    case 1u:
      result = 0xD000000000000015;
      break;
    case 2u:
      result = 0x2E78616D2E6E7573;
      break;
    case 3u:
      result = 0x6174732E6E6F6F6DLL;
      break;
    case 7u:
      return 0;
    default:
      result = 0x69662E6573756F68;
      break;
  }
  return result;
}

unsigned __int8 *sub_23E394F5C@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  unsigned int v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  unsigned int v10;
  unsigned __int8 v11;
  char v12;
  unsigned __int8 v13;
  unsigned __int8 v14;

  v4 = *(unsigned __int8 *)(v2 + 3);
  if (v4 != 88)
  {
    if ((result & 1) != 0)
    {
      if (v4 - 41 < 7 || v4 == 28)
        goto LABEL_18;
    }
    else
    {
      v6 = v4 > 0x22;
      v7 = (1 << v4) & 0x608000000;
      if (v6 || v7 == 0)
        goto LABEL_18;
    }
    *a2 = 0;
    return result;
  }
  if (!*(_BYTE *)(v2 + 2))
  {
    if ((result & 1) != 0)
    {
      v13 = *(_WORD *)v2;
      result = static IconSymbol.defaultSymbol(serviceKind:)(&v13, &v14);
      v10 = v14 - 28;
      if (v10 > 0x13)
        v5 = 0;
      else
        v5 = byte_23E54BEAE[(char)v10];
    }
    else
    {
      v11 = *(_WORD *)v2;
      result = static IconSymbol.defaultSymbol(serviceKind:)(&v11, &v12);
      if (((v12 - 27) & 0xF8) != 0)
        v5 = 2;
      else
        v5 = 0x20202020200uLL >> (8 * (v12 - 27));
    }
    goto LABEL_19;
  }
LABEL_18:
  v5 = 2;
LABEL_19:
  *a2 = v5;
  return result;
}

HomeDataModel::IconSymbol __swiftcall StatusIcon.defaultIconSymbol()()
{
  char *v0;
  unsigned __int16 *v1;
  int v2;
  unsigned __int16 v3;
  HomeDataModel::IconSymbol result;
  char v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  v2 = *((unsigned __int8 *)v1 + 2);
  if (v2 == 3)
  {
    v5 = 52;
    switch(*v1)
    {
      case 0u:
        goto LABEL_12;
      case 1u:
        v5 = 53;
        break;
      case 2u:
        v5 = 55;
        break;
      case 3u:
        v5 = 54;
        break;
      default:
        goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v2 != 1)
  {
    if (!*((_BYTE *)v1 + 2))
    {
      v3 = *v1;
      v6 = HIBYTE(*v1);
      v7 = v3;
      return static IconSymbol.defaultSymbol(for:subKind:)(&v7, &v6, v0);
    }
    goto LABEL_11;
  }
  if (*v1 - 4 >= 4)
  {
    if (*v1 - 21 >= 2)
    {
LABEL_11:
      v5 = 87;
      goto LABEL_12;
    }
    v5 = 19;
  }
  else
  {
    v5 = 31;
  }
LABEL_12:
  *v0 = v5;
  return result;
}

uint64_t StatusIcon.hash(into:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 3);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23E393830();
  if (v1 == 88)
  {
    sub_23E538474();
    if (v2)
    {
LABEL_3:
      sub_23E538474();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_23E538474();
    IconSymbol.rawValue.getter();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
  }
  return sub_23E538474();
}

uint64_t sub_23E395218()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000016;
  if (*v0)
    return v1;
  else
    return 0x64616F6C796170;
}

uint64_t sub_23E395278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E396740(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E39529C()
{
  sub_23E395DB4();
  return sub_23E538570();
}

uint64_t sub_23E3952C4()
{
  sub_23E395DB4();
  return sub_23E53857C();
}

uint64_t StatusIcon.encode(to:)(_QWORD *a1)
{
  __int16 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  __int16 v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44BA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *((_BYTE *)v1 + 2);
  v13 = *((unsigned __int8 *)v1 + 3);
  v9 = *((_QWORD *)v1 + 1);
  v12[0] = *((_QWORD *)v1 + 2);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E395DB4();
  sub_23E5384EC();
  v18 = v7;
  v19 = v8;
  v20 = 0;
  sub_23E395DF8();
  v10 = v14;
  sub_23E5382AC();
  if (!v10)
  {
    v17 = v13;
    v16 = 1;
    sub_23E395E3C();
    sub_23E538234();
    v15 = 2;
    sub_23E5381EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StatusIcon.hashValue.getter()
{
  sub_23E53845C();
  StatusIcon.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StatusIcon.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int16 v9;
  char v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  __int16 v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44BC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E395DB4();
  sub_23E5384E0();
  if (!v2)
  {
    v23 = 0;
    sub_23E395E80();
    sub_23E538180();
    v9 = v21;
    v10 = v22;
    v19 = 1;
    sub_23E395EC4();
    sub_23E538108();
    v17 = v20;
    v18 = 2;
    v12 = sub_23E5380D8();
    v13 = v8;
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *(_WORD *)a2 = v9;
    *(_BYTE *)(a2 + 2) = v10;
    *(_BYTE *)(a2 + 3) = v17;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E395694()
{
  sub_23E53845C();
  StatusIcon.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E3956E8()
{
  sub_23E53845C();
  StatusIcon.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E395734@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StatusIcon.init(from:)(a1, a2);
}

uint64_t sub_23E395748(_QWORD *a1)
{
  return StatusIcon.encode(to:)(a1);
}

uint64_t StatusIcon.Info.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void StatusIcon.Info.renderingMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

BOOL static StatusIcon.Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23E538354();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t StatusIcon.Info.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E538468();
}

uint64_t StatusIcon.Info.hashValue.getter()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E3958B8()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E395928()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E538468();
}

uint64_t sub_23E395980()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  return sub_23E5384A4();
}

void sub_23E3959EC(uint64_t a1)
{
  __asm { BR              X11 }
}

BOOL sub_23E395A2C@<W0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 result;
  char v9;
  char v10;

  if (a2)
    return 0;
  v4 = ServiceKind.rawValue.getter(a1);
  v6 = v5;
  if (v4 == ServiceKind.rawValue.getter(v4) && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v9 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v9 & 1) == 0)
      return result;
  }
  if (v3 >> 8 != 5)
  {
    if (v2 >> 8 != 5)
    {
      sub_23E1F6874(SBYTE1(v3));
      if ((v10 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return v2 >> 8 == 5;
}

BOOL _s13HomeDataModel10StatusIconV2eeoiySbAC_ACtFZ_0(__int16 *a1, uint64_t a2)
{
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 result;
  __int16 v16;
  char v17;

  v2 = *((_BYTE *)a1 + 2);
  v3 = *((unsigned __int8 *)a1 + 3);
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *(unsigned __int8 *)(a2 + 3);
  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v16 = *a1;
  v17 = v2;
  sub_23E3959EC((uint64_t)&v16);
  if ((v9 & 1) == 0)
    return 0;
  if (v3 == 88)
  {
    if (v6 != 88)
      return 0;
  }
  else
  {
    if (v6 == 88)
      return 0;
    v10 = IconSymbol.rawValue.getter();
    v12 = v11;
    if (v10 == IconSymbol.rawValue.getter() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v14 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v14 & 1) == 0)
        return result;
    }
  }
  if (v5)
    return v7 && (v4 == v8 && v5 == v7 || (sub_23E538354() & 1) != 0);
  return !v7;
}

unint64_t sub_23E395DB4()
{
  unint64_t result;

  result = qword_256D44BB0;
  if (!qword_256D44BB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B810, &type metadata for StatusIcon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44BB0);
  }
  return result;
}

unint64_t sub_23E395DF8()
{
  unint64_t result;

  result = qword_256D44BB8;
  if (!qword_256D44BB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B7E8, &type metadata for StatusIcon.StatusIconPayload);
    atomic_store(result, (unint64_t *)&qword_256D44BB8);
  }
  return result;
}

unint64_t sub_23E395E3C()
{
  unint64_t result;

  result = qword_256D44BC0;
  if (!qword_256D44BC0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconSymbol, &type metadata for IconSymbol);
    atomic_store(result, (unint64_t *)&qword_256D44BC0);
  }
  return result;
}

unint64_t sub_23E395E80()
{
  unint64_t result;

  result = qword_256D44BD0;
  if (!qword_256D44BD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B7C0, &type metadata for StatusIcon.StatusIconPayload);
    atomic_store(result, (unint64_t *)&qword_256D44BD0);
  }
  return result;
}

unint64_t sub_23E395EC4()
{
  unint64_t result;

  result = qword_256D44BD8;
  if (!qword_256D44BD8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconSymbol, &type metadata for IconSymbol);
    atomic_store(result, (unint64_t *)&qword_256D44BD8);
  }
  return result;
}

unint64_t sub_23E395F0C()
{
  unint64_t result;

  result = qword_256D44BE0;
  if (!qword_256D44BE0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StatusIcon, &type metadata for StatusIcon);
    atomic_store(result, (unint64_t *)&qword_256D44BE0);
  }
  return result;
}

unint64_t sub_23E395F54()
{
  unint64_t result;

  result = qword_256D44BE8;
  if (!qword_256D44BE8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StatusIcon.Info, &type metadata for StatusIcon.Info);
    atomic_store(result, (unint64_t *)&qword_256D44BE8);
  }
  return result;
}

uint64_t destroy for StatusIcon()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel10StatusIconVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StatusIcon(uint64_t a1, __int16 *a2)
{
  __int16 v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)a1 = v3;
  *(_BYTE *)(a1 + 3) = *((_BYTE *)a2 + 3);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StatusIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusIcon(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusIcon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon()
{
  return &type metadata for StatusIcon;
}

ValueMetadata *type metadata accessor for StatusIcon.Info()
{
  return &type metadata for StatusIcon.Info;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for StatusIcon.StatusIconPayload(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC)
  {
    if ((a2 + 33554180) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776964;
    }
  }
  v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 4)
    v5 = -1;
  else
    v5 = v4 ^ 0xFF;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusIcon.StatusIconPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554180) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFB)
    v3 = 0;
  if (a2 > 0xFB)
  {
    *(_WORD *)result = a2 - 252;
    *(_BYTE *)(result + 2) = (a2 - 252) >> 16;
    if (v3)
    {
      v4 = ((a2 - 252) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 2) = -(char)a2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

uint64_t sub_23E39624C(unsigned __int16 *a1)
{
  if (*((unsigned __int8 *)a1 + 2) <= 3u)
    return *((unsigned __int8 *)a1 + 2);
  else
    return *a1 + 4;
}

uint64_t sub_23E396264(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_WORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 2) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload()
{
  return &type metadata for StatusIcon.StatusIconPayload;
}

uint64_t storeEnumTagSinglePayload for StatusIcon.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E3962D8 + 4 * byte_23E54B502[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E39630C + 4 * byte_23E54B4FD[v4]))();
}

uint64_t sub_23E39630C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E396314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E39631CLL);
  return result;
}

uint64_t sub_23E396328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E396330);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E396334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E39633C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.CodingKeys()
{
  return &type metadata for StatusIcon.CodingKeys;
}

unint64_t sub_23E39635C()
{
  unint64_t result;

  result = qword_256D44BF0;
  if (!qword_256D44BF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B730, &type metadata for StatusIcon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44BF0);
  }
  return result;
}

unint64_t sub_23E3963A4()
{
  unint64_t result;

  result = qword_256D44BF8;
  if (!qword_256D44BF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B798, &type metadata for StatusIcon.StatusIconPayload);
    atomic_store(result, (unint64_t *)&qword_256D44BF8);
  }
  return result;
}

unint64_t sub_23E3963EC()
{
  unint64_t result;

  result = qword_256D44C00;
  if (!qword_256D44C00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B6A0, &type metadata for StatusIcon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C00);
  }
  return result;
}

unint64_t sub_23E396434()
{
  unint64_t result;

  result = qword_256D44C08;
  if (!qword_256D44C08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B6C8, &type metadata for StatusIcon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C08);
  }
  return result;
}

uint64_t sub_23E396478(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636976726573 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72657474616DLL && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E568D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23E396680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E396740(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E568EC0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023E568EE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23E396888()
{
  unint64_t result;

  result = qword_256D44C40;
  if (!qword_256D44C40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BE5C, &type metadata for StatusIcon.StatusIconPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C40);
  }
  return result;
}

unint64_t sub_23E3968CC()
{
  unint64_t result;

  result = qword_256D44C48;
  if (!qword_256D44C48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BE0C, &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C48);
  }
  return result;
}

unint64_t sub_23E396910()
{
  unint64_t result;

  result = qword_256D44C50;
  if (!qword_256D44C50)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HMActionSet.ActionSetKind, &type metadata for HMActionSet.ActionSetKind);
    atomic_store(result, (unint64_t *)&qword_256D44C50);
  }
  return result;
}

unint64_t sub_23E396954()
{
  unint64_t result;

  result = qword_256D44C58;
  if (!qword_256D44C58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BDBC, &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C58);
  }
  return result;
}

unint64_t sub_23E396998()
{
  unint64_t result;

  result = qword_256D44C60;
  if (!qword_256D44C60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BD6C, &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C60);
  }
  return result;
}

unint64_t sub_23E3969DC()
{
  unint64_t result;

  result = qword_256D44C68;
  if (!qword_256D44C68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BD1C, &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C68);
  }
  return result;
}

unint64_t sub_23E396A20()
{
  unint64_t result;

  result = qword_256D44C70;
  if (!qword_256D44C70)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceSubKind, &type metadata for ServiceSubKind);
    atomic_store(result, (unint64_t *)&qword_256D44C70);
  }
  return result;
}

unint64_t sub_23E396A64()
{
  unint64_t result;

  result = qword_256D44C78;
  if (!qword_256D44C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BCCC, &type metadata for StatusIcon.StatusIconPayload.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44C78);
  }
  return result;
}

unint64_t sub_23E396AA8()
{
  unint64_t result;

  result = qword_256D44CB0;
  if (!qword_256D44CB0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HMActionSet.ActionSetKind, &type metadata for HMActionSet.ActionSetKind);
    atomic_store(result, (unint64_t *)&qword_256D44CB0);
  }
  return result;
}

unint64_t sub_23E396AEC()
{
  unint64_t result;

  result = qword_256D44CB8;
  if (!qword_256D44CB8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceSubKind, &type metadata for ServiceSubKind);
    atomic_store(result, (unint64_t *)&qword_256D44CB8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StatusIcon.StatusIconPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E396B7C + 4 * byte_23E54B50C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E396BB0 + 4 * byte_23E54B507[v4]))();
}

uint64_t sub_23E396BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E396BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E396BC0);
  return result;
}

uint64_t sub_23E396BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E396BD4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E396BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E396BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.CodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.NoneCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.NoneCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StatusIcon.StatusIconPayload.ServiceCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E396C58 + 4 * byte_23E54B516[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E396C8C + 4 * byte_23E54B511[v4]))();
}

uint64_t sub_23E396C8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E396C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E396C9CLL);
  return result;
}

uint64_t sub_23E396CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E396CB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E396CB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E396CBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.ServiceCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.MatterCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys;
}

uint64_t _s13HomeDataModel10StatusIconV17StatusIconPayloadO16MatterCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E396D3C + 4 * byte_23E54B51B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E396D5C + 4 * byte_23E54B520[v4]))();
}

_BYTE *sub_23E396D3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E396D5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E396D64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E396D6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E396D74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E396D7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StatusIcon.StatusIconPayload.ActionSetCodingKeys()
{
  return &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys;
}

unint64_t sub_23E396D9C()
{
  unint64_t result;

  result = qword_256D44CC0;
  if (!qword_256D44CC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B974, &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CC0);
  }
  return result;
}

unint64_t sub_23E396DE4()
{
  unint64_t result;

  result = qword_256D44CC8;
  if (!qword_256D44CC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BA2C, &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CC8);
  }
  return result;
}

unint64_t sub_23E396E2C()
{
  unint64_t result;

  result = qword_256D44CD0;
  if (!qword_256D44CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BAE4, &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CD0);
  }
  return result;
}

unint64_t sub_23E396E74()
{
  unint64_t result;

  result = qword_256D44CD8;
  if (!qword_256D44CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BB9C, &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CD8);
  }
  return result;
}

unint64_t sub_23E396EBC()
{
  unint64_t result;

  result = qword_256D44CE0;
  if (!qword_256D44CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BCA4, &type metadata for StatusIcon.StatusIconPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CE0);
  }
  return result;
}

unint64_t sub_23E396F04()
{
  unint64_t result;

  result = qword_256D44CE8;
  if (!qword_256D44CE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BBC4, &type metadata for StatusIcon.StatusIconPayload.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CE8);
  }
  return result;
}

unint64_t sub_23E396F4C()
{
  unint64_t result;

  result = qword_256D44CF0;
  if (!qword_256D44CF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BBEC, &type metadata for StatusIcon.StatusIconPayload.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CF0);
  }
  return result;
}

unint64_t sub_23E396F94()
{
  unint64_t result;

  result = qword_256D44CF8;
  if (!qword_256D44CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BB0C, &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44CF8);
  }
  return result;
}

unint64_t sub_23E396FDC()
{
  unint64_t result;

  result = qword_256D44D00;
  if (!qword_256D44D00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BB34, &type metadata for StatusIcon.StatusIconPayload.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D00);
  }
  return result;
}

unint64_t sub_23E397024()
{
  unint64_t result;

  result = qword_256D44D08;
  if (!qword_256D44D08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BA54, &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D08);
  }
  return result;
}

unint64_t sub_23E39706C()
{
  unint64_t result;

  result = qword_256D44D10;
  if (!qword_256D44D10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BA7C, &type metadata for StatusIcon.StatusIconPayload.MatterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D10);
  }
  return result;
}

unint64_t sub_23E3970B4()
{
  unint64_t result;

  result = qword_256D44D18;
  if (!qword_256D44D18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B99C, &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D18);
  }
  return result;
}

unint64_t sub_23E3970FC()
{
  unint64_t result;

  result = qword_256D44D20;
  if (!qword_256D44D20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B9C4, &type metadata for StatusIcon.StatusIconPayload.SpecialMediaCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D20);
  }
  return result;
}

unint64_t sub_23E397144()
{
  unint64_t result;

  result = qword_256D44D28;
  if (!qword_256D44D28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B8E4, &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D28);
  }
  return result;
}

unint64_t sub_23E39718C()
{
  unint64_t result;

  result = qword_256D44D30;
  if (!qword_256D44D30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54B90C, &type metadata for StatusIcon.StatusIconPayload.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D30);
  }
  return result;
}

unint64_t sub_23E3971D4()
{
  unint64_t result;

  result = qword_256D44D38;
  if (!qword_256D44D38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BC14, &type metadata for StatusIcon.StatusIconPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D38);
  }
  return result;
}

unint64_t sub_23E39721C()
{
  unint64_t result;

  result = qword_256D44D40;
  if (!qword_256D44D40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54BC3C, &type metadata for StatusIcon.StatusIconPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44D40);
  }
  return result;
}

void static CharacteristicWriteBehavior.batched.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CharacteristicWriteBehavior.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

HomeDataModel::CharacteristicWriteBehavior __swiftcall CharacteristicWriteBehavior.init(rawValue:)(HomeDataModel::CharacteristicWriteBehavior rawValue)
{
  HomeDataModel::CharacteristicWriteBehavior *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CharacteristicWriteBehavior.ephemeral.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static CharacteristicWriteBehavior.optimistic.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static CharacteristicWriteBehavior.widgetManager.getter(_QWORD *a1@<X8>)
{
  *a1 = 1024;
}

unint64_t sub_23E3972A4()
{
  unint64_t result;

  result = qword_256D44D48;
  if (!qword_256D44D48)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicWriteBehavior, &type metadata for CharacteristicWriteBehavior);
    atomic_store(result, (unint64_t *)&qword_256D44D48);
  }
  return result;
}

unint64_t sub_23E3972EC()
{
  unint64_t result;

  result = qword_256D44D50;
  if (!qword_256D44D50)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicWriteBehavior, &type metadata for CharacteristicWriteBehavior);
    atomic_store(result, (unint64_t *)&qword_256D44D50);
  }
  return result;
}

unint64_t sub_23E397334()
{
  unint64_t result;

  result = qword_256D44D58;
  if (!qword_256D44D58)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicWriteBehavior, &type metadata for CharacteristicWriteBehavior);
    atomic_store(result, (unint64_t *)&qword_256D44D58);
  }
  return result;
}

unint64_t sub_23E39737C()
{
  unint64_t result;

  result = qword_256D44D60;
  if (!qword_256D44D60)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicWriteBehavior, &type metadata for CharacteristicWriteBehavior);
    atomic_store(result, &qword_256D44D60);
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicWriteBehavior()
{
  return &type metadata for CharacteristicWriteBehavior;
}

uint64_t sub_23E3973D4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;

  v28 = a3;
  v31 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45330);
  v27 = *(_QWORD *)(v32 - 8);
  v4 = MEMORY[0x24BDAC7A8](v32);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 64);
  v29 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v30 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v20 = *(_QWORD *)(a1 + 48);
    v21 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * i, v21);
    v22 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    v23 = v32;
    *(_QWORD *)&v8[*(int *)(v32 + 48)] = v22;
    sub_23E1E4E3C((uint64_t)v8, (uint64_t)v6, &qword_256D45330);
    v24 = *(_QWORD *)&v6[*(int *)(v23 + 48)];
    v25 = v22;
    if ((v31(v6, v24) & 1) != 0)
    {
      swift_release();
      v26 = v28;
      sub_23E1E4E3C((uint64_t)v6, v28, &qword_256D45330);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v26, 0, 1, v32);
    }
    result = sub_23E1E7C64((uint64_t)v6, &qword_256D45330);
    if (v12)
      goto LABEL_4;
LABEL_5:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v30)
      goto LABEL_25;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v30)
        goto LABEL_25;
      v18 = *(_QWORD *)(v29 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v30)
          goto LABEL_25;
        v18 = *(_QWORD *)(v29 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v30)
            goto LABEL_25;
          v18 = *(_QWORD *)(v29 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_20:
    v12 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 >= v30)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, 1, 1, v32);
  }
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v30)
      goto LABEL_25;
    v18 = *(_QWORD *)(v29 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E39769C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[11] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  sub_23E5378F8();
  v4[15] = sub_23E5378EC();
  v4[16] = sub_23E5378B0();
  v4[17] = v6;
  return swift_task_switch();
}

uint64_t sub_23E397734()
{
  uint64_t v0;
  void **v1;
  uint64_t result;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  if (qword_254333470)
  {
    v1 = (void **)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
    result = swift_beginAccess();
    v3 = *v1;
    *(_QWORD *)(v0 + 144) = *v1;
    if (v3)
    {
      v4 = v3;
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v5;
      *v5 = v0;
      v5[1] = sub_23E3978A8;
      return DataModel.loadUpHomeSnapshots(homeManager:)((uint64_t)v4);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    sub_23E1F9794();
    if (qword_254333BB0 != -1)
      swift_once();
    v7 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v9, (uint64_t)qword_254333B20);
    *(_QWORD *)(v0 + 72) = 0;
    *(_QWORD *)(v0 + 64) = 0;
    *(_BYTE *)(v0 + 80) = 3;
    sub_23E537940();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_23E3978A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 144);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E3978F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  sub_23E1F9794();
  if (qword_254333BB0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
  __swift_project_value_buffer(v4, (uint64_t)qword_254333B20);
  *(_QWORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  *(_BYTE *)(v0 + 80) = 3;
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdatePrimaryHome(_:)(HMHomeManager a1)
{
  void *v1;
  void *v2;
  char **ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  NSObject *v10;
  int v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char **v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  ObjectType = (char **)swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    goto LABEL_24;
  while (1)
  {
    v8 = sub_23E5371A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
    v9 = a1.super.isa;
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (!os_log_type_enabled(v10, (os_log_type_t)v11))
    {

      goto LABEL_22;
    }
    v40 = v11;
    v12 = swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v44 = v42;
    *(_DWORD *)v12 = 136315650;
    v13 = -[objc_class homes](v9, sel_homes);
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    a1.super.isa = (Class)sub_23E5377F0();

    if ((unint64_t)a1.super.isa >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_23E53803C();
    }
    else
    {
      v14 = *(_QWORD *)(((unint64_t)a1.super.isa & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v15 = 1701736302;
    if (!v14)
      break;
    v37 = v2;
    v38 = v7;
    v39 = ObjectType;
    v2 = (void *)((unint64_t)a1.super.isa & 0xC000000000000001);
    v7 = 4;
    ObjectType = &selRef_homeManager_didAddHome_;
    while (1)
    {
      v16 = v2 ? (id)MEMORY[0x24264F148](v7 - 4, a1.super.isa) : *((id *)a1.super.isa + v7);
      v17 = v16;
      v18 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      if ((objc_msgSend(v16, sel_isPrimary) & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
        v21 = objc_msgSend(v17, sel_name);

        v20 = sub_23E53755C();
        v19 = v22;

        goto LABEL_17;
      }

      ++v7;
      if (v18 == v14)
      {
        swift_bridgeObjectRelease_n();
        v19 = 0xE400000000000000;
        v20 = 1701736302;
LABEL_17:
        v7 = v38;
        ObjectType = v39;
        v2 = v37;
        v15 = 1701736302;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  swift_bridgeObjectRelease_n();
  v19 = 0xE400000000000000;
  v20 = 1701736302;
LABEL_18:
  v43 = sub_23E1FD768(v20, v19, &v44);
  sub_23E537CF4();

  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 12) = 2080;
  v23 = -[objc_class currentHome](v9, sel_currentHome);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, sel_name);

    v26 = sub_23E53755C();
    v28 = v27;

    v15 = v26;
  }
  else
  {
    v28 = 0xE400000000000000;
  }
  v43 = sub_23E1FD768(v15, v28, &v44);
  sub_23E537CF4();

  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 22) = 2112;
  v29 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  v43 = (uint64_t)v29;
  sub_23E537CF4();
  v30 = v41;
  *v41 = v29;
  _os_log_impl(&dword_23E1DF000, v10, (os_log_type_t)v40, "DataModel: homeManagerDidUpdatePrimaryHome, primary is: %s, current is: %s, current thread is %@", (uint8_t *)v12, 0x20u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
  swift_arrayDestroy();
  MEMORY[0x24264FEBC](v30, -1, -1);
  v31 = v42;
  swift_arrayDestroy();
  MEMORY[0x24264FEBC](v31, -1, -1);
  MEMORY[0x24264FEBC](v12, -1, -1);

LABEL_22:
  v32 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
  sub_23E5378F8();
  v33 = v2;
  v34 = sub_23E5378EC();
  v35 = (_QWORD *)swift_allocObject();
  v36 = MEMORY[0x24BEE6930];
  v35[2] = v34;
  v35[3] = v36;
  v35[4] = v33;
  v35[5] = ObjectType;
  sub_23E26D014(v7, (uint64_t)&unk_256D44D88, (uint64_t)v35);
  swift_release();
}

uint64_t sub_23E397EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[8] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[13] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v4[14] = v6;
  v4[15] = *(_QWORD *)(v6 - 8);
  v4[16] = swift_task_alloc();
  sub_23E5378F8();
  v4[17] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E397FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_beginAccess();
  if (qword_254333470)
  {
    sub_23E2D528C();
    sub_23E1F9794();
    if (qword_254334090 != -1)
      swift_once();
    v2 = *(_QWORD *)(v0 + 120);
    v1 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD *)(v0 + 112);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
    __swift_project_value_buffer(v4, (uint64_t)qword_254333EE8);
    swift_storeEnumTagMultiPayload();
    sub_23E537940();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    if (qword_254333BB0 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v8, (uint64_t)qword_254333B20);
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 48) = 0;
    *(_BYTE *)(v0 + 56) = 3;
    sub_23E537940();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdateCurrentHome(_:)(HMHomeManager a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_23E5378F8();
  v7 = v1;
  v8 = sub_23E5378EC();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  v9[5] = ObjectType;
  sub_23E26D014((uint64_t)v5, (uint64_t)&unk_256D44DA0, (uint64_t)v9);
  swift_release();
}

uint64_t sub_23E3982B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_23E5378F8();
  *(_QWORD *)(v4 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E398320()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (qword_254333470)
    sub_23E2D528C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.homeManager(_:didAdd:)(HMHomeManager _, HMHome didAdd)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  objc_class *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_23E5378F8();
  v11 = didAdd.super.isa;
  v12 = v3;
  v13 = _.super.isa;
  v14 = sub_23E5378EC();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v11;
  v15[5] = v12;
  v15[6] = v13;
  v15[7] = ObjectType;
  sub_23E26D014((uint64_t)v9, (uint64_t)&unk_256D44DB0, (uint64_t)v15);
  swift_release();
}

uint64_t sub_23E398498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[22] = a5;
  v6[23] = a6;
  v6[21] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6[24] = v7;
  v6[25] = *(_QWORD *)(v7 - 8);
  v6[26] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v6[27] = v8;
  v6[28] = *(_QWORD *)(v8 - 8);
  v6[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v6[30] = swift_task_alloc();
  v6[31] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  sub_23E536F80();
  v6[35] = swift_task_alloc();
  sub_23E5378F8();
  v6[36] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3985FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  uint64_t v81[5];

  swift_release();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 168);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v78 = swift_slowAlloc();
    v81[0] = v78;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 152) = sub_23E1FD768(0xD000000000000016, 0x800000023E5691A0, v81);
    sub_23E537CF4();
    *(_WORD *)(v8 + 12) = 2080;
    v9 = objc_msgSend(v7, sel_name);
    v10 = sub_23E53755C();
    v12 = v11;

    *(_QWORD *)(v0 + 160) = sub_23E1FD768(v10, v12, v81);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v4, v5, "%s adding home: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v78, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);
  }
  else
  {

  }
  v13 = *(_QWORD **)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(void **)(v0 + 184);
  v16 = *(void **)(v0 + 168);
  sub_23E1F9794();
  DataModel.registerForAllRelevantAccessories(_:)((HMHome)v16);
  v17 = objc_msgSend(v16, sel_uniqueIdentifier);
  sub_23E536F68();

  *v13 = v16;
  swift_storeEnumTagMultiPayload();
  v18 = type metadata accessor for StateSnapshot(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v14, 1, 1, v18);
  v20 = qword_2543331D8;
  v79 = v16;
  v21 = v16;
  v22 = v15;
  if (v20 != -1)
    swift_once();
  v23 = *(_QWORD **)(v0 + 272);
  v73 = *(_QWORD *)(v0 + 280);
  v25 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 264);
  v26 = *(_QWORD *)(v0 + 176);
  v27 = *(void **)(v0 + 184);
  v28 = *(void **)(v0 + 168);
  v29 = qword_2543331D0;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v25, v27, v28, v24, v29, v23);
  v19((uint64_t)v23, 0, 1, v18);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 128) = v26;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *(_QWORD *)(v0 + 144) = v26;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  sub_23E1FDC5C((uint64_t)v23, v73);
  swift_endAccess();
  *(_QWORD *)(v0 + 136) = v26;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  *(_QWORD *)(v0 + 40) = &type metadata for HomeAppFeatures;
  *(_QWORD *)(v0 + 48) = sub_23E20B720();
  *(_BYTE *)(v0 + 16) = 1;
  v30 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v30 & 1) != 0)
  {
    if (qword_254332458 != -1)
      swift_once();
    v31 = *(_QWORD *)(v0 + 240);
    v32 = *(void **)(v0 + 168);
    v77 = *(_QWORD *)(v0 + 176);
    v33 = qword_254332248;
    v34 = MEMORY[0x24BEE4AF8];
    v80 = sub_23E2224B8(MEMORY[0x24BEE4AF8]);
    v35 = v32;
    sub_23E428A78();
    v37 = v36;
    v38 = sub_23E222614(v34);
    v39 = v35;
    v40 = sub_23E39FB6C(v38, v37, (uint64_t)v39, (uint64_t)&v80);

    swift_bridgeObjectRelease();
    v41 = objc_msgSend(v39, sel_matterControllerID);
    v42 = sub_23E53755C();
    v44 = v43;

    sub_23E231F58(v42, v44, v40, v81);
    v75 = v81[1];
    v76 = v81[0];
    v45 = v81[3];
    v74 = v81[2];
    v46 = objc_msgSend(v39, sel_matterControllerID);
    v47 = sub_23E53755C();
    v49 = v48;

    v50 = v80;
    v51 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v31, 1, 1, v51);
    v52 = (_QWORD *)swift_allocObject();
    v52[2] = 0;
    v52[3] = 0;
    v52[4] = v33;
    v52[5] = v50;
    v52[6] = v47;
    v52[7] = v49;
    swift_retain();
    sub_23E26D014(v31, (uint64_t)&unk_256D45338, (uint64_t)v52);
    swift_release();
    v53 = objc_msgSend(v39, sel_matterControllerID);
    v54 = sub_23E53755C();
    v56 = v55;

    v57 = (uint64_t *)(v77 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81[0] = *v57;
    *v57 = 0x8000000000000000;
    sub_23E21B224(v76, v75, v74, v45, v54, v56, isUniquelyReferenced_nonNull_native);
    *v57 = v81[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_254333BB0 != -1)
      swift_once();
    v59 = *(_QWORD *)(v0 + 224);
    v60 = *(_QWORD *)(v0 + 232);
    v61 = *(_QWORD *)(v0 + 216);
    v62 = *(void **)(v0 + 168);
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v63, (uint64_t)qword_254333B20);
    *(_QWORD *)(v0 + 104) = v79;
    *(_QWORD *)(v0 + 112) = 0;
    *(_BYTE *)(v0 + 120) = 0;
    v64 = v62;
    sub_23E537940();
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v61);
  }
  if (qword_254334090 != -1)
    swift_once();
  v65 = *(_QWORD **)(v0 + 256);
  v67 = *(_QWORD *)(v0 + 200);
  v66 = *(_QWORD *)(v0 + 208);
  v68 = *(_QWORD *)(v0 + 192);
  v69 = *(void **)(v0 + 168);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v70, (uint64_t)qword_254333EE8);
  *v65 = v79;
  swift_storeEnumTagMultiPayload();
  v71 = v69;
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.homeManager(_:didRemove:)(HMHomeManager _, HMHome didRemove)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_23E5378F8();
  v8 = didRemove.super.isa;
  v9 = v2;
  v10 = sub_23E5378EC();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v8;
  v11[5] = v9;
  sub_23E26D014((uint64_t)v6, (uint64_t)&unk_256D44DC0, (uint64_t)v11);
  swift_release();
}

uint64_t sub_23E399040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v5[20] = swift_task_alloc();
  sub_23E536F80();
  v5[21] = swift_task_alloc();
  sub_23E5378F8();
  v5[22] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3990F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25[2];

  swift_release();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 144);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B20();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 144);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 128) = sub_23E1FD768(0xD000000000000019, 0x800000023E569180, v25);
    sub_23E537CF4();
    *(_WORD *)(v8 + 12) = 2080;
    v9 = objc_msgSend(v7, sel_name);
    v10 = sub_23E53755C();
    v12 = v11;

    *(_QWORD *)(v0 + 136) = sub_23E1FD768(v10, v12, v25);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v4, v5, "%s removing home: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v24, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  v15 = *(void **)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  DataModel.unregisterForAllRelevantAccessories(_:)((HMHome)v15);
  v17 = objc_msgSend(v15, sel_uniqueIdentifier);
  sub_23E536F68();

  v18 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 112) = v16;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *(_QWORD *)(v0 + 120) = v16;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  sub_23E1FDC5C(v14, v13);
  swift_endAccess();
  *(_QWORD *)(v0 + 104) = v16;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  *(_QWORD *)(v0 + 40) = &type metadata for HomeAppFeatures;
  *(_QWORD *)(v0 + 48) = sub_23E20B720();
  *(_BYTE *)(v0 + 16) = 1;
  LOBYTE(v17) = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v17 & 1) != 0)
  {
    v19 = objc_msgSend(*(id *)(v0 + 144), sel_matterControllerID);
    v20 = sub_23E53755C();
    v22 = v21;

    swift_beginAccess();
    sub_23E2DA334(v20, v22, (uint64_t)v25);
    swift_bridgeObjectRelease();
    sub_23E23D3AC(v25[0], v25[1]);
    swift_endAccess();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.home(_:didAdd:)(HMHome _, HMAccessory didAdd)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t updated;
  uint64_t v11;
  HMHome *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  objc_class *v20;
  id v21;
  objc_class *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  objc_class *v29;
  char *v30;
  Class v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  Class isa;
  Class v36;
  uint64_t v37;
  char v38;
  ValueMetadata *v39;
  unint64_t v40;

  v3 = v2;
  isa = didAdd.super.isa;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v12 = (HMHome *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v17, (uint64_t)qword_254333EE8);
  v12->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  v31 = _.super.isa;
  v18 = _.super.isa;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v19 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 1, 1, v19);
  sub_23E5378F8();
  v20 = v18;
  v21 = v3;
  v22 = isa;
  v23 = sub_23E5378EC();
  v24 = (_QWORD *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v21;
  v24[5] = v22;
  v24[6] = v20;
  sub_23E26D014((uint64_t)v9, (uint64_t)&unk_256D44DD8, (uint64_t)v24);
  swift_release();
  v39 = &type metadata for HomeAppFeatures;
  v40 = sub_23E20B720();
  LOBYTE(v36) = 1;
  LOBYTE(v21) = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v36);
  if ((v21 & 1) != 0)
  {
    v26 = -[objc_class hdm_matterNodeID](v22, sel_hdm_matterNodeID);
    if (v26)
    {
      v27 = v26;
      v36 = 0;
      LOBYTE(v37) = 1;
      sub_23E5384D4();

      if ((v37 & 1) == 0)
      {
        if (qword_254333BB0 != -1)
          swift_once();
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
        __swift_project_value_buffer(v28, (uint64_t)qword_254333B20);
        v36 = v31;
        v37 = 0;
        v38 = 0;
        v29 = v20;
        v30 = v32;
        sub_23E537940();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v34);
      }
    }
  }
}

uint64_t sub_23E3999C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_23E5378F8();
  v6[5] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E399A34()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release();
  sub_23E4F85E4(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s13HomeDataModel0bC0C17homeDidUpdateNameyySo6HMHomeCF_0(void *a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v9, (uint64_t)qword_254333EE8);
  *v4 = a1;
  swift_storeEnumTagMultiPayload();
  v10 = a1;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall DataModel.home(_:didUpdate:)(HMHome _, HMHomeHubState didUpdate)
{
  uint64_t updated;
  uint64_t v4;
  HMHome *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (HMHome *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_254333EE8);
  v5->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  v11 = _.super.isa;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

Swift::Void __swiftcall DataModel.home(_:didUpdateAutomaticSoftwareUpdateEnabled:)(HMHome _, Swift::Bool didUpdateAutomaticSoftwareUpdateEnabled)
{
  uint64_t updated;
  uint64_t v4;
  HMHome *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  uint64_t v12;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (HMHome *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_254333EE8);
  v5->super.isa = _.super.isa;
  swift_storeEnumTagMultiPayload();
  v11 = _.super.isa;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMRoom didUpdateApplicationDataFor)
{
  sub_23E3A042C(_.super.isa, didUpdateApplicationDataFor.super.isa, "%s - new application data for room %s — %s");
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMServiceGroup didUpdateApplicationDataFor)
{
  sub_23E3A042C(_.super.isa, didUpdateApplicationDataFor.super.isa, "%s - new application data for serviceGroup %s — %s");
}

Swift::Void __swiftcall DataModel.home(_:didUpdateApplicationDataFor:)(HMHome _, HMActionSet didUpdateApplicationDataFor)
{
  sub_23E3A042C(_.super.isa, didUpdateApplicationDataFor.super.isa, "%s - new application data for actionSet %s — %s");
}

uint64_t DataModel.userActionPredictionController(_:didUpdate:)(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  ObjectType = swift_getObjectType();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_23E5378F8();
  v10 = v2;
  v11 = a1;
  swift_bridgeObjectRetain();
  v12 = sub_23E5378EC();
  v13 = (_QWORD *)swift_allocObject();
  v14 = MEMORY[0x24BEE6930];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v10;
  v13[5] = v11;
  v13[6] = a2;
  v13[7] = ObjectType;
  sub_23E26D014((uint64_t)v8, (uint64_t)&unk_256D44DE8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_23E39AB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  v6[19] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[20] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6[21] = v7;
  v6[22] = *(_QWORD *)(v7 - 8);
  v6[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D45320);
  v6[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6[25] = swift_task_alloc();
  v8 = sub_23E536F80();
  v6[26] = v8;
  v6[27] = *(_QWORD *)(v8 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  sub_23E5378F8();
  v6[30] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39AC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 120) = v3;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  v4 = swift_bridgeObjectRetain();
  sub_23E3973D4(v4, (uint64_t (*)(char *, uint64_t))sub_23E3A269C, v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45330);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 192);
  if (v6 == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_256D45320);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, 1, 1, v7);
LABEL_4:
    sub_23E1E7C64(*(_QWORD *)(v0 + 200), &qword_254333F50);
    goto LABEL_5;
  }

  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v11(v9, v10, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
    goto LABEL_4;
  v13 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 128);
  v11(v14, *(_QWORD *)(v0 + 200), v15);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v31(v13, v14, v15);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 96) = v18;
  swift_bridgeObjectRetain();
  sub_23E537070();
  swift_release();
  *(_QWORD *)(v0 + 88) = v18;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v19 = (uint64_t *)(v18 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = *v19;
  *v19 = 0x8000000000000000;
  sub_23E204648(v17, v13, isUniquelyReferenced_nonNull_native);
  *v19 = v33;
  swift_bridgeObjectRelease();
  v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v21(v13, v15);
  swift_endAccess();
  *(_QWORD *)(v0 + 104) = v18;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 112) = v18;
  sub_23E537070();
  swift_release();
  v22 = v18 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v23 = type metadata accessor for StateSnapshot(0);
  v31(v13, v22 + *(int *)(v23 + 20), v15);
  LOBYTE(v22) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v21(v13, v15);
  if ((v22 & 1) != 0)
  {
    if (qword_254334090 != -1)
      swift_once();
    v32 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 184);
    v27 = *(_QWORD **)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
    __swift_project_value_buffer(v30, (uint64_t)qword_254333EE8);
    *v27 = v29;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23E537940();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v28);
    v21(v32, v24);
  }
  else
  {
    v21(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));
  }
LABEL_5:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s13HomeDataModel0bC0C22accessoryDidUpdateNameyySo11HMAccessoryCF_0(void *a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v9, (uint64_t)qword_254333EE8);
  *v4 = objc_msgSend(a1, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall DataModel.accessory(_:service:didUpdateValueFor:)(HMAccessory _, HMService service, HMCharacteristic didUpdateValueFor)
{
  sub_23E3A08C8((uint64_t)service.super.isa, didUpdateValueFor.super.isa);
}

uint64_t sub_23E39B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[10] = a4;
  v5[11] = a5;
  v5[12] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[13] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v8 = sub_23E536F20();
  v5[20] = v8;
  v5[21] = *(_QWORD *)(v8 - 8);
  v5[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v5[23] = swift_task_alloc();
  v9 = type metadata accessor for StaticCharacteristic();
  v5[24] = v9;
  v5[25] = *(_QWORD *)(v9 - 8);
  v5[26] = swift_task_alloc();
  v10 = sub_23E536F80();
  v5[27] = v10;
  v5[28] = *(_QWORD *)(v10 - 8);
  v5[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v5[30] = swift_task_alloc();
  v5[31] = type metadata accessor for StateSnapshot(0);
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E39B728()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = sub_23E5378F8();
  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39B794()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[32];
  v2 = v0[10];
  swift_release();
  swift_getKeyPath();
  v0[5] = v2;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E1E2F50(v3, v1, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E39B878()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  BOOL v35;
  void *v36;
  uint8_t *v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  id v47;
  char v48;
  void *v49;
  uint64_t v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  void *v55;
  uint8_t *v56;
  _QWORD *v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  _BOOL4 v64;
  void *v65;
  uint8_t *v66;
  _QWORD *v67;
  id v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  void *v76;
  uint8_t *v77;
  _QWORD *v78;
  id v79;
  NSObject *log;
  unsigned __int8 v82;

  v1 = objc_msgSend(*(id *)(v0 + 88), sel_service);
  *(_QWORD *)(v0 + 280) = v1;
  v2 = *(_QWORD *)(v0 + 256);
  if (!v1)
    goto LABEL_46;
  v3 = *(_QWORD *)(v2 + *(int *)(*(_QWORD *)(v0 + 248) + 60));
  v4 = objc_msgSend(v1, sel_uniqueIdentifier);
  sub_23E536F68();

  if (*(_QWORD *)(v3 + 16))
  {
    v5 = sub_23E1E3300(*(_QWORD *)(v0 + 232));
    v6 = *(_QWORD *)(v0 + 240);
    if ((v7 & 1) != 0)
    {
      v8 = v5;
      v9 = *(_QWORD *)(v3 + 56);
      v10 = type metadata accessor for StaticService();
      v11 = *(_QWORD *)(v10 - 8);
      sub_23E1E2F50(v9 + *(_QWORD *)(v11 + 72) * v8, v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      goto LABEL_8;
    }
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 240);
  }
  v10 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
LABEL_8:
  v12 = *(_QWORD *)(v0 + 240);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v12, 1, v10) != 1)
  {
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(void **)(v0 + 88);
    v17 = *(_QWORD *)(v15 + *(int *)(v10 + 104));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v18 = objc_msgSend(v16, sel_characteristicType);
    v19 = sub_23E53755C();
    v21 = v20;

    v22._countAndFlagsBits = v19;
    v22._object = v21;
    CharacteristicKind.init(rawValue:)(v22);
    if (v82 == 174)
    {
      v23 = *(_QWORD *)(v0 + 256);

      swift_bridgeObjectRelease();
LABEL_45:
      v2 = v23;
      goto LABEL_46;
    }
    if (*(_QWORD *)(v17 + 16) && (v24 = sub_23E1EAF70(v82), (v25 & 1) != 0))
    {
      sub_23E1E2F50(*(_QWORD *)(v17 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 200) + 72) * v24, *(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v26 = 0;
    }
    else
    {
      v26 = 1;
    }
    v28 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 200);
    v29 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v26, 1, v28);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v28) == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 184), &qword_2543332A0);
      if (qword_254333DB8 != -1)
        swift_once();
      v30 = *(void **)(v0 + 88);
      v31 = sub_23E5371A8();
      __swift_project_value_buffer(v31, (uint64_t)qword_254333D88);
      v32 = v30;
      v33 = sub_23E537190();
      v34 = sub_23E537B20();
      v35 = os_log_type_enabled(v33, v34);
      v36 = *(void **)(v0 + 88);
      if (v35)
      {
        v37 = (uint8_t *)swift_slowAlloc();
        v38 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v37 = 138412290;
        *(_QWORD *)(v0 + 48) = v36;
        v39 = v36;
        sub_23E537CF4();
        *v38 = v36;

        _os_log_impl(&dword_23E1DF000, v33, v34, "update for:  %@", v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v38, -1, -1);
        MEMORY[0x24264FEBC](v37, -1, -1);
      }
      else
      {

        v33 = *(NSObject **)(v0 + 88);
      }

      *(_QWORD *)(v0 + 312) = sub_23E5378EC();
      sub_23E5378B0();
      return swift_task_switch();
    }
    v40 = *(_QWORD *)(v0 + 208);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 168);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 160);
    v45 = *(void **)(v0 + 88);
    sub_23E3A2650(*(_QWORD *)(v0 + 184), v40);
    v46 = *(_BYTE *)(v40 + *(int *)(v41 + 32));
    v47 = objc_msgSend(v45, sel_valueUpdatedTime);
    sub_23E536EFC();

    sub_23E1EE1C4(&qword_256D45318, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v48 = sub_23E5374FC();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
    if ((v46 & 0xC0) == 0x40)
    {
      if (qword_254333DB8 != -1)
        swift_once();
      v49 = *(void **)(v0 + 88);
      v50 = sub_23E5371A8();
      __swift_project_value_buffer(v50, (uint64_t)qword_254333D88);
      v51 = v49;
      v52 = sub_23E537190();
      v53 = sub_23E537B20();
      v54 = os_log_type_enabled(v52, v53);
      v55 = *(void **)(v0 + 88);
      if (v54)
      {
        v56 = (uint8_t *)swift_slowAlloc();
        v57 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v56 = 138412290;
        *(_QWORD *)(v0 + 72) = v55;
        v58 = v55;
        sub_23E537CF4();
        *v57 = v55;

        _os_log_impl(&dword_23E1DF000, v52, v53, "skip update for: %@", v56, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v57, -1, -1);
        MEMORY[0x24264FEBC](v56, -1, -1);
      }
      else
      {

      }
      v23 = *(_QWORD *)(v0 + 256);
      v69 = *(_QWORD *)(v0 + 208);

    }
    else
    {
      if ((v48 & 1) != 0)
      {
        if (qword_254333DB8 != -1)
          swift_once();
        v59 = *(void **)(v0 + 88);
        v60 = sub_23E5371A8();
        __swift_project_value_buffer(v60, (uint64_t)qword_254333D88);
        v61 = v59;
        v62 = sub_23E537190();
        v63 = sub_23E537B20();
        v64 = os_log_type_enabled(v62, v63);
        v65 = *(void **)(v0 + 88);
        if (v64)
        {
          v66 = (uint8_t *)swift_slowAlloc();
          v67 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v66 = 138412290;
          *(_QWORD *)(v0 + 64) = v65;
          v68 = v65;
          sub_23E537CF4();
          *v67 = v65;

          _os_log_impl(&dword_23E1DF000, v62, v63, "update for:  %@", v66, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v67, -1, -1);
          MEMORY[0x24264FEBC](v66, -1, -1);
        }
        else
        {

          v62 = *(NSObject **)(v0 + 88);
        }

        *(_QWORD *)(v0 + 288) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }
      if (qword_254333DB8 != -1)
        swift_once();
      v70 = *(void **)(v0 + 88);
      v71 = sub_23E5371A8();
      __swift_project_value_buffer(v71, (uint64_t)qword_254333D88);
      v72 = v70;
      v73 = sub_23E537190();
      v74 = sub_23E537B20();
      v75 = os_log_type_enabled(v73, v74);
      v76 = *(void **)(v0 + 88);
      if (v75)
      {
        v77 = (uint8_t *)swift_slowAlloc();
        v78 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v77 = 138412290;
        *(_QWORD *)(v0 + 56) = v76;
        log = v73;
        v79 = v76;
        sub_23E537CF4();
        *v78 = v76;

        v73 = log;
        _os_log_impl(&dword_23E1DF000, log, v74, "out of date update for: %@", v77, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v78, -1, -1);
        MEMORY[0x24264FEBC](v77, -1, -1);
      }
      else
      {

      }
      v23 = *(_QWORD *)(v0 + 256);
      v69 = *(_QWORD *)(v0 + 208);

    }
    sub_23E1E2FA0(v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    goto LABEL_45;
  }
  v13 = *(_QWORD *)(v0 + 256);
  v14 = *(_QWORD *)(v0 + 240);

  sub_23E1E7C64(v14, &qword_254332DE8);
  v2 = v13;
LABEL_46:
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E39C234()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 296) = __swift_project_value_buffer(*(_QWORD *)(v0 + 112), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E39C2AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39C30C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[37];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E39C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 256);
  v1 = *(_QWORD *)(v0 + 152);
  v10 = *(void **)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(uint64_t **)(v0 + 104);
  v6 = *(void **)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539640;
  *(_QWORD *)(v7 + 32) = v6;
  v15 = v7;
  sub_23E537808();
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
  v5[4] = sub_23E1F9710(&qword_256D45310, &qword_256D3FDD0, MEMORY[0x24BEE12C8]);
  *v5 = v15;
  swift_storeEnumTagMultiPayload();
  v8 = v6;
  sub_23E537940();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v12);
  sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  sub_23E1E2FA0(v14, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E39C51C()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 320) = __swift_project_value_buffer(*(_QWORD *)(v0 + 112), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E39C594()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 328) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39C5F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[40];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E39C654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 152);
  v10 = *(void **)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(uint64_t **)(v0 + 104);
  v6 = *(void **)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539640;
  *(_QWORD *)(v7 + 32) = v6;
  v14 = v7;
  sub_23E537808();
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
  v5[4] = sub_23E1F9710(&qword_256D45310, &qword_256D3FDD0, MEMORY[0x24BEE12C8]);
  *v5 = v14;
  swift_storeEnumTagMultiPayload();
  v8 = v6;
  sub_23E537940();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v12);
  sub_23E1E2FA0(v13, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DataModel.accessory(_:didUpdateFirmwareVersion:)(HMAccessory _, Swift::String didUpdateFirmwareVersion)
{
  uint64_t updated;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_254333EE8);
  *v5 = -[objc_class home](_.super.isa, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s13HomeDataModel0bC0C11homeManager_9didUpdateySo06HMHomeE0C_So0hE19AuthorizationStatusVtF_0()
{
  uint64_t updated;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v5, (uint64_t)qword_254333EE8);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id DataModel.softwareUpdateController(_:accessory:didReceiveUpdate:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23E3A1254(a2, a3);
}

id sub_23E39D400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Class isa;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void *v20;
  id v21;
  id result;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t ObjectType;
  char *v63;
  uint64_t v64;
  os_log_t v65;
  uint64_t updated;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v67 = a2;
  v69 = a1;
  ObjectType = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v61 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v58 = v7;
  v59 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v58 - v8;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  isa = v65[-1].isa;
  MEMORY[0x24BDAC7A8](v65);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v14, (uint64_t)qword_254333EE8);
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
  v16 = v15[12];
  v17 = v15[16];
  v18 = v15[20];
  v60 = v5;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v64 = v4;
  v68 = v19;
  v19(v10, v69, v4);
  v20 = (void *)v67;
  *(_QWORD *)&v10[v16] = v67;
  *(_QWORD *)&v10[v17] = 0;
  *(_QWORD *)&v10[v18] = 0;
  swift_storeEnumTagMultiPayload();
  v21 = v20;
  sub_23E537940();
  (*((void (**)(char *, os_log_t))isa + 1))(v13, v65);
  result = objc_msgSend(v21, sel_documentationMetadata);
  if (result)
  {
    v23 = result;
    if (qword_254333DB8 != -1)
      swift_once();
    v24 = sub_23E5371A8();
    __swift_project_value_buffer(v24, (uint64_t)qword_254333D88);
    v25 = v63;
    v26 = v64;
    v27 = v69;
    v68(v63, v69, v64);
    v28 = v21;
    v29 = v23;
    v30 = v28;
    v31 = v29;
    v32 = sub_23E537190();
    v33 = sub_23E537B20();
    v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v71 = v67;
      *(_DWORD *)v35 = 136315650;
      LODWORD(updated) = v34;
      v36 = objc_msgSend(v31, sel_description);
      v37 = sub_23E53755C();
      v65 = v32;
      v39 = v38;

      v70 = sub_23E1FD768(v37, v39, &v71);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v40 = objc_msgSend(v30, sel_description);
      v41 = sub_23E53755C();
      v43 = v42;

      v44 = v41;
      v26 = v64;
      v70 = sub_23E1FD768(v44, v43, &v71);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v45 = v63;
      v46 = sub_23E538318();
      v70 = sub_23E1FD768(v46, v47, &v71);
      v27 = v69;
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v48 = v60;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v26);
      v49 = v65;
      _os_log_impl(&dword_23E1DF000, v65, (os_log_type_t)updated, "Start documentation fetch with metadata: %s softwareUpdate: %s for: %s", (uint8_t *)v35, 0x20u);
      v50 = v67;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v50, -1, -1);
      MEMORY[0x24264FEBC](v35, -1, -1);

    }
    else
    {

      v48 = v60;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v25, v26);

    }
    v51 = sub_23E537934();
    v52 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v61, 1, 1, v51);
    v53 = v59;
    v68(v59, v27, v26);
    v54 = (*(unsigned __int8 *)(v48 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v55 = (v58 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    v56 = (char *)swift_allocObject();
    *((_QWORD *)v56 + 2) = 0;
    *((_QWORD *)v56 + 3) = 0;
    *((_QWORD *)v56 + 4) = v31;
    *((_QWORD *)v56 + 5) = v30;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v56[v54], v53, v26);
    *(_QWORD *)&v56[v55] = ObjectType;
    v57 = v30;
    sub_23E26D014(v52, (uint64_t)&unk_256D452E0, (uint64_t)v56);
    return (id)swift_release();
  }
  return result;
}

id DataModel.softwareUpdateController(_:accessory:didFailUpdate:withError:timestamp:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return sub_23E3A1510(a2, a3, a4);
}

uint64_t DataModel.softwareUpdateController(_:accessory:didUpdateProgress:)(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23E3A186C(a2, a3);
}

uint64_t sub_23E39DCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v6[11] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = swift_task_alloc();
  v9 = sub_23E536F80();
  v6[19] = v9;
  v6[20] = *(_QWORD *)(v9 - 8);
  v6[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E39DD98()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E5378F8();
  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39DE04()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E39DE68()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39DEC8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 200) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E39DF10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39DF70()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[25];
  swift_release();
  swift_getKeyPath();
  v0[2] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v0[27] = v2;
  v3 = v2;
  return swift_task_switch();
}

uint64_t sub_23E39E020()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[27];
  v2 = v0[8];
  v3 = swift_task_alloc();
  v0[28] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[29] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F0);
  *v4 = v0;
  v4[1] = sub_23E39E0D4;
  return sub_23E538390();
}

uint64_t sub_23E39E0D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E39E140()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t type;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 248) = v1;
  if (v1)
  {
    v2 = qword_254333DB8;
    v3 = v1;
    if (v2 != -1)
      swift_once();
    v5 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 152);
    v8 = *(void **)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v9 = sub_23E5371A8();
    __swift_project_value_buffer(v9, (uint64_t)qword_254333D88);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 256) = v10;
    v10(v4, v7, v6);
    v11 = v3;
    v12 = v8;
    v13 = v11;
    v14 = v12;
    v15 = sub_23E537190();
    v16 = sub_23E537B20();
    v17 = os_log_type_enabled(v15, v16);
    v19 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(void **)(v0 + 72);
    if (v17)
    {
      v37 = *(_QWORD *)(v0 + 160);
      v22 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v39 = v38;
      *(_DWORD *)v22 = 136315650;
      v35 = v18;
      v23 = objc_msgSend(v13, sel_description);
      v34 = v20;
      v24 = sub_23E53755C();
      type = v16;
      v26 = v25;

      *(_QWORD *)(v0 + 40) = sub_23E1FD768(v24, v26, &v39);
      sub_23E537CF4();
      swift_bridgeObjectRelease();

      *(_WORD *)(v22 + 12) = 2080;
      v27 = objc_msgSend(v21, sel_description);
      v28 = sub_23E53755C();
      v30 = v29;

      *(_QWORD *)(v0 + 48) = sub_23E1FD768(v28, v30, &v39);
      sub_23E537CF4();
      swift_bridgeObjectRelease();

      *(_WORD *)(v22 + 22) = 2080;
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v31 = sub_23E538318();
      *(_QWORD *)(v0 + 56) = sub_23E1FD768(v31, v32, &v39);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v34);
      _os_log_impl(&dword_23E1DF000, v15, type, "Received documentation: %s softwareUpdate: %s for: %s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v38, -1, -1);
      MEMORY[0x24264FEBC](v22, -1, -1);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    }

    *(_QWORD *)(v0 + 264) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E39E510()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(*(_QWORD *)(v0 + 104), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E39E588()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E39E5E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[34];
  v3 = v0[14];
  v2 = v0[15];
  v4 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E39E648()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(void **)(v0 + 216);
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 120);
  v18 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v14 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(void **)(v0 + 72);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
  v7 = v6[12];
  v8 = v6[16];
  v9 = v6[20];
  v13(v3, v4, v2);
  *(_QWORD *)(v3 + v7) = v5;
  *(_QWORD *)(v3 + v8) = 0;
  *(_QWORD *)(v3 + v9) = v1;
  swift_storeEnumTagMultiPayload();
  v10 = v1;
  v11 = v5;
  sub_23E537940();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E39E798()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_task_dealloc();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 240);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v5, v6, "Documentation fetch error: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E39E9A0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  if (a2)
  {
    v9 = objc_msgSend(a2, sel_softwareUpdateController);
    if (v9)
    {
      v10 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
      v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v12 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      aBlock[4] = sub_23E3A2530;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23E360FE8;
      aBlock[3] = &block_descriptor_21;
      v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v10, sel_fetchDocumentationFromMetadata_completion_, a3, v13);
      _Block_release(v13);

    }
  }
}

uint64_t sub_23E39EB00(void *a1, id a2)
{
  id v2;
  id v4;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F8);
    return sub_23E5378BC();
  }
  else
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F8);
    return sub_23E5378C8();
  }
}

uint64_t DataModel.overrideSoftwareUpdateState(for:state:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t updated;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[2];
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *a2;
  if (qword_254333DB8 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_254333D88);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v29(v12, a1, v9);
  v14 = sub_23E537190();
  v15 = sub_23E537B20();
  if (os_log_type_enabled(v14, v15))
  {
    v27[1] = updated;
    v28 = a1;
    v16 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    v35 = v27[0];
    *(_DWORD *)v16 = 136315394;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_23E538318();
    v34 = sub_23E1FD768(v17, v18, &v35);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(_WORD *)(v16 + 12) = 2080;
    switch(v33)
    {
      case 2:
        v19 = 0xE400000000000000;
        v20 = 1701736302;
        break;
      case 3:
        v19 = 0xE900000000000065;
        v20 = 0x6C62616C69617661;
        break;
      case 4:
        v19 = 0xEB00000000676E69;
        v20 = 0x64616F6C6E776F64;
        break;
      case 5:
        v20 = 0x64616F6C6E776F64;
        v21 = v27[0];
        v19 = 0xEA00000000006465;
        goto LABEL_15;
      case 6:
        v20 = 0x6574736575716572;
        goto LABEL_13;
      case 7:
        v20 = 0x656C6C6174736E69;
LABEL_13:
        v19 = 0xE900000000000064;
        break;
      default:
        v19 = 0xEA0000000000676ELL;
        v20 = 0x696C6C6174736E69;
        break;
    }
    v21 = v27[0];
LABEL_15:
    v34 = sub_23E1FD768(v20, v19, &v35);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v14, v15, "on device update for: .softwareUpdateOverride(uuid: %s, state: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v16, -1, -1);

    a1 = v28;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  }
  v22 = v32;
  if (qword_254334090 != -1)
    swift_once();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v23, (uint64_t)qword_254333EE8);
  v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0) + 48);
  v29(v6, a1, v9);
  v6[v24] = v33;
  swift_storeEnumTagMultiPayload();
  v25 = v30;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v25, v22);
}

uint64_t DataModel.rebuildSnapshot(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[10] = swift_task_alloc();
  sub_23E5378F8();
  v3[11] = sub_23E5378EC();
  v3[12] = sub_23E5378B0();
  v3[13] = v4;
  return swift_task_switch();
}

uint64_t sub_23E39F070()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  _QWORD *v7;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (void **)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 112) = *v1;
  if (v2)
  {
    v3 = qword_2543327D8;
    v4 = v2;
    if (v3 != -1)
      swift_once();
    v5 = *(void **)(v0 + 56);
    **(_QWORD **)(v0 + 80) = v5;
    swift_storeEnumTagMultiPayload();
    v6 = v5;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v7;
    *v7 = v0;
    v7[1] = sub_23E39F320;
    return sub_23E1F1F88(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 80), (uint64_t)v4, *(_QWORD *)(v0 + 56));
  }
  else
  {
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v9 = *(void **)(v0 + 56);
    v10 = sub_23E5371A8();
    __swift_project_value_buffer(v10, (uint64_t)qword_254333D88);
    v11 = v9;
    v12 = sub_23E537190();
    v13 = sub_23E537B08();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void **)(v0 + 56);
    if (v14)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      *(_QWORD *)(v0 + 40) = v15;
      v18 = v15;
      sub_23E537CF4();
      *v17 = v15;

      _os_log_impl(&dword_23E1DF000, v12, v13, "skipping rebuildSnapshot for %@ due to missing homeManager", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v17, -1, -1);
      MEMORY[0x24264FEBC](v16, -1, -1);
    }
    else
    {

      v12 = *(NSObject **)(v0 + 56);
    }

    v19 = *(_QWORD *)(v0 + 48);
    v20 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E39F320()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E39F380()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 112);
  swift_release();

  v2 = *(_QWORD *)(v0 + 48);
  v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DataModel.cameraSnapshotControl(_:didTake:error:)(void *a1)
{
  return sub_23E3A1C54(a1, "Received snapshot control: %@");
}

Swift::Void __swiftcall DataModel.cameraSnapshotControlDidUpdateMostRecentSnapshot(_:)(HMCameraSnapshotControl a1)
{
  sub_23E3A1C54(a1.super.super.isa, "Did update most recent snapshot: %@");
}

Swift::Void __swiftcall DataModel.cameraStreamControlDidStartStream(_:)(HMCameraStreamControl a1)
{
  sub_23E3A1C54(a1.super.super.isa, "Did start stream: %@");
}

uint64_t DataModel.residentDevice(_:didUpdate:)(void *a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v9, (uint64_t)qword_254333EE8);
  *v4 = objc_msgSend(a1, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E39F860(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E39769C(a1, v4, v5, v6);
}

uint64_t sub_23E39F8DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E397EE0(a1, v4, v5, v6);
}

uint64_t sub_23E39F958(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E3982B4(a1, v4, v5, v6);
}

uint64_t sub_23E39F9D0()
{
  return objectdestroy_11Tm();
}

uint64_t sub_23E39F9D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E398498(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E39FA64()
{
  return objectdestroy_15Tm_0();
}

uint64_t sub_23E39FA6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23D584;
  return sub_23E399040(a1, v4, v5, v7, v6);
}

uint64_t sub_23E39FAE4()
{
  return objectdestroy_11Tm();
}

uint64_t sub_23E39FAEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E3999C4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E39FB6C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  ValueMetadata *v37;
  unint64_t v38;
  uint64_t v39;

  v5 = v4;
  v29 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333280);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (uint64_t)&v28 - v12;
  v39 = a1;
  if (a2 >> 62)
    goto LABEL_22;
  v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; v13 = sub_23E53803C())
  {
    v31 = a3;
    v28 = v5;
    v14 = 4;
    v15 = &selRef_homeManager_didAddHome_;
    a3 = 1;
    while (1)
    {
      a1 = v14 - 4;
      v16 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v14 - 4, a2) : *(id *)(a2 + 8 * v14);
      v17 = v16;
      v5 = v14 - 3;
      if (__OFADD__(a1, 1))
        break;
      if ((_s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(v16) & 1) != 0
        && (v18 = objc_msgSend(v17, v15[39])) != 0
        && (v19 = v18, v35 = 0, v36 = 1, sub_23E5384D4(), v19, (v36 & 1) == 0))
      {
        v34 = v35;
        v20 = sub_23E42881C(v17);
        if (v20)
        {
          v22 = (uint64_t)v20;
          v32 = v21;
          v23 = v33;
          v37 = &type metadata for HomeAppFeatures;
          v38 = sub_23E20B720();
          LOBYTE(v35) = 2;
          v24 = sub_23E5370AC();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v35);
          swift_unknownObjectRetain();
          v25 = v17;
          if ((v24 & 1) != 0)
            StaticMatterDevice.init(device:accessory:)(v22, v32, v25, v23);
          else
            StaticMatterDevice.init(device:accessory:limitedSnapshotController:)(v22, v32, v25, v29, v23);
          v26 = v30;
          sub_23E1E4E3C(v33, v30, (uint64_t *)&unk_254333280);
          sub_23E20C940(v26, v34);

          swift_unknownObjectRelease();
          v15 = &selRef_homeManager_didAddHome_;
        }
        else
        {

        }
        a3 = 1;
      }
      else
      {

      }
      ++v14;
      if (v5 == v13)
      {
        swift_bridgeObjectRelease();
        return v39;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HomeDataModel0bC0C4home_9didRemoveySo6HMHomeC_So11HMAccessoryCtF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD v19[2];
  char v20;
  ValueMetadata *v21;
  unint64_t v22;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v2 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (_QWORD *)((char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v12, (uint64_t)qword_254333EE8);
  *v7 = a1;
  swift_storeEnumTagMultiPayload();
  v13 = a1;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v21 = &type metadata for HomeAppFeatures;
  v22 = sub_23E20B720();
  LOBYTE(v19[0]) = 1;
  v14 = sub_23E5370AC();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  if ((v14 & 1) != 0)
  {
    if (qword_254333BB0 != -1)
      swift_once();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
    __swift_project_value_buffer(v16, (uint64_t)qword_254333B20);
    v19[0] = a1;
    v19[1] = 0;
    v20 = 0;
    v17 = v13;
    sub_23E537940();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  }
  return result;
}

uint64_t _s13HomeDataModel0bC0C024homeDidUpdateApplicationB0yySo6HMHomeCF_0(void *a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD v31[2];
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (_QWORD *)((char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v9 = sub_23E5371A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_254333D88);
  v10 = a1;
  v11 = sub_23E537190();
  v12 = sub_23E537B20();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = swift_slowAlloc();
    v35 = v6;
    v15 = v14;
    v33 = swift_slowAlloc();
    v39 = v33;
    *(_DWORD *)v15 = 136315650;
    v32 = v13;
    v38 = sub_23E1FD768(0xD000000000000020, 0x800000023E569150, &v39);
    sub_23E537CF4();
    v34 = v8;
    *(_WORD *)(v15 + 12) = 2080;
    v16 = objc_msgSend(v10, sel_name);
    v37 = v5;
    v17 = v16;
    v18 = sub_23E53755C();
    v36 = updated;
    v20 = v19;

    v38 = sub_23E1FD768(v18, v20, &v39);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v31[1] = v15 + 24;
    v21 = objc_msgSend(v10, sel_applicationData);
    v22 = objc_msgSend(v21, sel_dictionary);

    sub_23E537460();
    v23 = sub_23E53746C();
    v25 = v24;
    v8 = v34;
    swift_bridgeObjectRelease();
    v38 = sub_23E1FD768(v23, v25, &v39);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v11, (os_log_type_t)v32, "%s - new application data for home %s — %s", (uint8_t *)v15, 0x20u);
    v26 = v33;
    v5 = v37;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v26, -1, -1);
    v27 = v15;
    v6 = v35;
    MEMORY[0x24264FEBC](v27, -1, -1);

  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v28, (uint64_t)qword_254333EE8);
  *v4 = v10;
  swift_storeEnumTagMultiPayload();
  v29 = v10;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E3A042C(void *a1, void *a2, const char *a3)
{
  uint64_t updated;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD v37[2];
  const char *v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v8 = (_QWORD *)((char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_254333D88);
  v14 = a2;
  v15 = sub_23E537190();
  v16 = sub_23E537B20();
  v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    v18 = swift_slowAlloc();
    v41 = v12;
    v19 = v18;
    v40 = swift_slowAlloc();
    v47 = v40;
    *(_DWORD *)v19 = 136315650;
    v45 = a1;
    v46 = sub_23E1FD768(0xD000000000000024, 0x800000023E569120, &v47);
    v39 = v17;
    sub_23E537CF4();
    v38 = a3;
    *(_WORD *)(v19 + 12) = 2080;
    v20 = objc_msgSend(v14, sel_name);
    v44 = v9;
    v21 = v20;
    v22 = sub_23E53755C();
    v42 = v10;
    v43 = updated;
    v23 = v22;
    v25 = v24;

    v46 = sub_23E1FD768(v23, v25, &v47);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    v37[1] = v19 + 24;
    v26 = objc_msgSend(v14, sel_applicationData);
    v27 = objc_msgSend(v26, sel_dictionary);

    sub_23E537460();
    v10 = v42;
    v28 = sub_23E53746C();
    v30 = v29;
    swift_bridgeObjectRelease();
    v31 = v28;
    a1 = v45;
    v46 = sub_23E1FD768(v31, v30, &v47);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v15, (os_log_type_t)v39, v38, (uint8_t *)v19, 0x20u);
    v32 = v40;
    v9 = v44;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v32, -1, -1);
    v33 = v19;
    v12 = v41;
    MEMORY[0x24264FEBC](v33, -1, -1);

  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v34, (uint64_t)qword_254333EE8);
  *v8 = a1;
  swift_storeEnumTagMultiPayload();
  v35 = a1;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23E3A083C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E39AB28(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E3A08C8(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  unsigned __int8 v23;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = HMService.supportedCharacteristicKinds.getter();
  v10 = objc_msgSend(a2, sel_characteristicType);
  v11 = sub_23E53755C();
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  CharacteristicKind.init(rawValue:)(v14);
  if (v23 == 174)
    v15 = 0;
  else
    v15 = v23;
  v16 = sub_23E20F7B0(v15, v9);
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v18 = sub_23E537934();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = 0;
    v19[3] = 0;
    v19[4] = v3;
    v19[5] = a2;
    v19[6] = ObjectType;
    v20 = v3;
    v21 = a2;
    sub_23E26D014((uint64_t)v8, (uint64_t)&unk_256D45308, (uint64_t)v19);
    return swift_release();
  }
  return result;
}

uint64_t _s13HomeDataModel0bC0C029accessoryDidUpdateApplicationB0yySo11HMAccessoryCF_0(void *a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (_QWORD *)((char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v9 = sub_23E5371A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_254333D88);
  v10 = a1;
  v11 = sub_23E537190();
  v12 = sub_23E537B20();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = swift_slowAlloc();
    v34 = v6;
    v15 = v14;
    v32 = swift_slowAlloc();
    v38 = v32;
    *(_DWORD *)v15 = 136315650;
    v31 = v13;
    v37 = sub_23E1FD768(0xD000000000000025, 0x800000023E5690F0, &v38);
    sub_23E537CF4();
    v33 = v8;
    *(_WORD *)(v15 + 12) = 2080;
    v16 = objc_msgSend(v10, sel_name);
    v36 = updated;
    v17 = v16;
    v18 = sub_23E53755C();
    v35 = v5;
    v20 = v19;

    v37 = sub_23E1FD768(v18, v20, &v38);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v30[1] = v15 + 24;
    v21 = objc_msgSend(v10, sel_applicationData);
    v22 = objc_msgSend(v21, sel_dictionary);

    sub_23E537460();
    v23 = sub_23E53746C();
    v25 = v24;
    v8 = v33;
    swift_bridgeObjectRelease();
    v37 = sub_23E1FD768(v23, v25, &v38);
    sub_23E537CF4();

    v5 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v11, (os_log_type_t)v31, "%s - new application data for accessory %s — %s", (uint8_t *)v15, 0x20u);
    v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v26, -1, -1);
    v27 = v15;
    v6 = v34;
    MEMORY[0x24264FEBC](v27, -1, -1);

  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v28, (uint64_t)qword_254333EE8);
  *v4 = objc_msgSend(v10, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _s13HomeDataModel0bC0C9accessory_020didUpdateApplicationB3ForySo11HMAccessoryC_So9HMServiceCtF_0(void *a1, void *a2)
{
  uint64_t updated;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_254333D88);
  v12 = a2;
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v36 = a1;
    v17 = v16;
    v34 = swift_slowAlloc();
    v41 = v34;
    *(_DWORD *)v17 = 136315650;
    v33 = v15;
    v40 = sub_23E1FD768(0xD000000000000029, 0x800000023E5690C0, &v41);
    v38 = v7;
    sub_23E537CF4();
    v35 = v10;
    *(_WORD *)(v17 + 12) = 2080;
    v18 = objc_msgSend(v12, sel_name);
    v39 = updated;
    v19 = v18;
    v20 = sub_23E53755C();
    v37 = v8;
    v22 = v21;

    v40 = sub_23E1FD768(v20, v22, &v41);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    v23 = objc_msgSend(v12, sel_applicationData, v17 + 24);
    v24 = objc_msgSend(v23, sel_dictionary);

    sub_23E537460();
    v25 = sub_23E53746C();
    v27 = v26;
    v10 = v35;
    swift_bridgeObjectRelease();
    v40 = sub_23E1FD768(v25, v27, &v41);
    v7 = v38;
    sub_23E537CF4();

    v8 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v13, (os_log_type_t)v33, "%s - new application data for service %s — %s", (uint8_t *)v17, 0x20u);
    v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v28, -1, -1);
    v29 = v17;
    a1 = v36;
    MEMORY[0x24264FEBC](v29, -1, -1);

  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v30, (uint64_t)qword_254333EE8);
  *v6 = objc_msgSend(a1, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_23E3A1254(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v10 = sub_23E5371A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_254333D88);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = a2;
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v31 = v27;
    *(_DWORD *)v15 = 136315394;
    HIDWORD(v26) = v14;
    v16 = objc_msgSend(v11, sel_description);
    v29 = v3;
    v17 = v16;
    v18 = sub_23E53755C();
    v28 = a1;
    v19 = v18;
    v21 = v20;

    v30 = sub_23E1FD768(v19, v21, &v31);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_23E538318();
    v30 = sub_23E1FD768(v22, v23, &v31);
    a1 = v28;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_23E1DF000, v12, BYTE4(v26), "Received softwareUpdate: %s for: %s", (uint8_t *)v15, 0x16u);
    v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v24, -1, -1);
    MEMORY[0x24264FEBC](v15, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  return sub_23E39D400(a1, (uint64_t)v11);
}

id sub_23E3A1510(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v12 = sub_23E5371A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = a3;
  v14 = a2;
  v15 = a3;
  v16 = v14;
  v17 = sub_23E537190();
  v18 = sub_23E537B20();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v38 = v4;
    v21 = v20;
    v37 = swift_slowAlloc();
    v40 = v37;
    *(_DWORD *)v21 = 136315650;
    swift_getErrorValue();
    v36 = v17;
    v22 = sub_23E5383E4();
    v39 = sub_23E1FD768(v22, v23, &v40);
    v35 = v19;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 12) = 2080;
    v24 = objc_msgSend(v16, sel_description);
    v25 = sub_23E53755C();
    v34 = v9;
    v26 = a1;
    v28 = v27;

    v39 = sub_23E1FD768(v25, v28, &v40);
    sub_23E537CF4();

    a1 = v26;
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v29 = sub_23E538318();
    v39 = sub_23E1FD768(v29, v30, &v40);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v8);
    v17 = v36;
    _os_log_impl(&dword_23E1DF000, v36, (os_log_type_t)v35, "Received error:%s softwareUpdate: %s for: %s", (uint8_t *)v21, 0x20u);
    v31 = v37;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v31, -1, -1);
    MEMORY[0x24264FEBC](v21, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  return sub_23E39D400(a1, (uint64_t)v16);
}

uint64_t sub_23E3A186C(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v34;
  os_log_t v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t updated;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_254333D88);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v38(v10, a1, v7);
  v12 = a2;
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  v15 = v14;
  v16 = os_log_type_enabled(v13, v14);
  v40 = a1;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v36 = v15;
    v18 = v17;
    v37 = swift_slowAlloc();
    v45 = v37;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    v19 = objc_msgSend(v12, sel_description);
    v20 = sub_23E53755C();
    v22 = v21;

    v44 = sub_23E1FD768(v20, v22, &v45);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v23 = sub_23E538318();
    v44 = sub_23E1FD768(v23, v24, &v45);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v13 = v35;
    _os_log_impl(&dword_23E1DF000, v35, (os_log_type_t)v36, "Received softwareUpdateProgress: %s for: %s", (uint8_t *)v18, 0x16u);
    v25 = v37;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v25, -1, -1);
    MEMORY[0x24264FEBC](v18, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  if (qword_254334090 != -1)
    swift_once();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v26, (uint64_t)qword_254333EE8);
  v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
  v28 = v27[12];
  v29 = v27[16];
  v30 = v27[20];
  v38(v5, v40, v7);
  *(_QWORD *)&v5[v28] = 0;
  *(_QWORD *)&v5[v29] = v12;
  *(_QWORD *)&v5[v30] = 0;
  swift_storeEnumTagMultiPayload();
  v31 = v12;
  v32 = v39;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v32, v43);
}

uint64_t sub_23E3A1C54(void *a1, const char *a2)
{
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD *v22;
  uint8_t *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v9 = sub_23E5371A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_254333D88);
  v10 = a1;
  v11 = sub_23E537190();
  v12 = sub_23E537B20();
  if (os_log_type_enabled(v11, v12))
  {
    v24 = a2;
    v13 = swift_slowAlloc();
    v25 = v6;
    v14 = (uint8_t *)v13;
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = v14;
    *(_DWORD *)v14 = 138412290;
    v27 = v10;
    v15 = v10;
    v26 = updated;
    v16 = v15;
    sub_23E537CF4();
    v17 = v22;
    *v22 = v10;

    v18 = v23;
    _os_log_impl(&dword_23E1DF000, v11, v12, v24, v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    v19 = v18;
    v6 = v25;
    MEMORY[0x24264FEBC](v19, -1, -1);

  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v20, (uint64_t)qword_254333EE8);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _s13HomeDataModel0bC0C19cameraStreamControl_07didStopE9WithErrorySo08HMCameraeF0C_s0J0_pSgtF_0(void *a1, void *a2)
{
  uint64_t updated;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_254333D88);
  v12 = a1;
  v13 = a2;
  v14 = v12;
  v15 = a2;
  v16 = sub_23E537190();
  v17 = sub_23E537B20();
  if (os_log_type_enabled(v16, v17))
  {
    v26 = v10;
    v27 = v8;
    v28 = v7;
    v29 = v6;
    v30 = updated;
    v18 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v18 = 138412546;
    v31 = (uint64_t)v14;
    v20 = v14;
    sub_23E537CF4();
    *v19 = v14;

    *(_WORD *)(v18 + 12) = 2112;
    if (a2)
    {
      v21 = a2;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v31 = v22;
      sub_23E537CF4();
    }
    else
    {
      v31 = 0;
      sub_23E537CF4();
      v22 = 0;
    }
    v19[1] = v22;

    _os_log_impl(&dword_23E1DF000, v16, v17, "Did stop stream: %@ with error: %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v19, -1, -1);
    MEMORY[0x24264FEBC](v18, -1, -1);

    v8 = v27;
    v7 = v28;
    v10 = v26;
  }
  else
  {

  }
  if (qword_254334090 != -1)
    swift_once();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v23, (uint64_t)qword_254333EE8);
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3A22A0()
{
  return objectdestroy_15Tm_0();
}

uint64_t sub_23E3A22A8()
{
  return objectdestroy_11Tm();
}

uint64_t objectdestroy_11Tm()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E3A22FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E3982B4(a1, v4, v5, v6);
}

uint64_t sub_23E3A2374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E3A2404(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E39DCB8(a1, v5, v6, v7, v8, v9);
}

void sub_23E3A24C4(uint64_t a1)
{
  uint64_t v1;

  sub_23E39E9A0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E3A24CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E3A2530(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D452F8);
  return sub_23E39EB00(a1, a2);
}

uint64_t sub_23E3A2580()
{
  return objectdestroy_15Tm_0();
}

uint64_t objectdestroy_15Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E3A25C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23D584;
  return sub_23E39B590(a1, v4, v5, v6, v7);
}

uint64_t sub_23E3A2650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3A269C()
{
  sub_23E1E335C(0, (unint64_t *)&qword_254333370);
  return sub_23E537C58() & 1;
}

uint64_t sub_23E3A26FC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3A2738(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E2C3788(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_23E3A27C4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_23E1E335C(0, &qword_256D45380);
  v2 = sub_23E5377F0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v7 + 144) = a6;
  *(_QWORD *)(v7 + 72) = a5;
  *(_QWORD *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 56) = a3;
  *(_QWORD *)(v7 + 64) = a4;
  *(_QWORD *)(v7 + 40) = a1;
  *(_QWORD *)(v7 + 48) = a2;
  *(_QWORD *)(v7 + 88) = sub_23E5378F8();
  *(_QWORD *)(v7 + 96) = sub_23E5378EC();
  *(_QWORD *)(v7 + 104) = sub_23E5378B0();
  *(_QWORD *)(v7 + 112) = v8;
  return swift_task_switch();
}

uint64_t sub_23E3A28AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 48);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  swift_bridgeObjectRetain_n();
  v4 = v3;
  v5 = sub_23E537190();
  v6 = sub_23E537AF0();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 64);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 48);
    v10 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v9, v8, &v27);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    if (v24)
    {
      v11 = objc_msgSend(v4, sel_name);
      v12 = sub_23E53755C();
      v14 = v13;

    }
    else
    {
      v14 = 0xE400000000000000;
      v12 = 1819047278;
    }
    *(_QWORD *)(v0 + 32) = sub_23E1FD768(v12, v14, &v27);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v25, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  if (*(_QWORD *)(v0 + 48))
  {
    v15 = *(_QWORD *)(v0 + 80);
    v16 = *(_BYTE *)(v0 + 144);
    v17 = *(_QWORD *)(v0 + 72);
    v26 = *(_OWORD *)(v0 + 56);
    v18 = *(_QWORD *)(v0 + 40);
    v19 = v4;
    *(_QWORD *)(v0 + 120) = sub_23E5378EC();
    v20 = swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v20;
    *(_QWORD *)(v20 + 16) = v15;
    *(_QWORD *)(v20 + 24) = v18;
    *(_QWORD *)(v20 + 32) = v19;
    *(_OWORD *)(v20 + 40) = v26;
    *(_QWORD *)(v20 + 56) = v17;
    *(_BYTE *)(v20 + 64) = v16 & 1;
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44E08);
    *v21 = v0;
    v21[1] = sub_23E3A2C34;
    return sub_23E538324();
  }
  else
  {
    swift_release();
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23E53803C())
      sub_23E2D0838(MEMORY[0x24BEE4AF8]);
    else
      v23 = MEMORY[0x24BEE4B08];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
  }
}

uint64_t sub_23E3A2C34()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3A2C9C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E3A2CD4(uint64_t a1, uint64_t a2, _QWORD *a3, NSObject *a4, unint64_t a5, unint64_t a6, uint64_t a7, char a8)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v22 = a7;
  v20 = a4;
  v12 = a8 & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45388);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a5;
  *(_QWORD *)(v17 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  swift_bridgeObjectRetain();
  DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:completion:)(a3, v20, a5, a6, v22, v12, (uint64_t)sub_23E3AA27C, v17);
  return swift_release();
}

uint64_t sub_23E3A2DF4(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v27;

  if (qword_254333DB8 != -1)
    swift_once();
  v7 = sub_23E5371A8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254333D88);
  swift_bridgeObjectRetain_n();
  v8 = sub_23E537190();
  v9 = sub_23E537AF0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v27 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_23E1FD768(a3, a4, &v27);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);

    if (a1)
      goto LABEL_5;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_5:
      v12 = a1;
      swift_bridgeObjectRetain();
      v13 = a1;
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = sub_23E537190();
      v16 = sub_23E537AF0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v27 = v18;
        *(_DWORD *)v17 = 136315394;
        swift_bridgeObjectRetain();
        sub_23E1FD768(a3, a4, &v27);
        sub_23E537CF4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v17 + 12) = 2080;
        swift_getErrorValue();
        v19 = sub_23E5383E4();
        sub_23E1FD768(v19, v20, &v27);
        sub_23E537CF4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23E1DF000, v15, v16, "...{%s} returned error %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v18, -1, -1);
        MEMORY[0x24264FEBC](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain_n();
  v21 = sub_23E537190();
  v22 = sub_23E537AF0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27 = v24;
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain();
    sub_23E1FD768(a3, a4, &v27);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E1DF000, v21, v22, "...{%s} returned NO error", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v24, -1, -1);
    MEMORY[0x24264FEBC](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_12:
  v27 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45388);
  return sub_23E5378C8();
}

uint64_t DataModel.reloadCharacteristics(matching:for:fetchId:timeoutSeconds:completion:)(_QWORD *a1, NSObject *a2, unint64_t a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  char *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  double v23;
  _QWORD *v24;
  NSObject *v25;
  int v26;
  _BOOL4 v27;
  double v28;
  uint64_t v29;
  double v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __int128 v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  double v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  double v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD, uint64_t);
  void *v64;
  uint64_t i;
  id v66;
  void *v67;
  id v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double *v75;
  double v76;
  void *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  id v81;
  void *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t result;
  char v90;
  uint64_t v91;
  char *v92;
  double v93;
  double v94;
  void (*v95)(char *, unint64_t);
  double v96;
  char *v97;
  double v98;
  double v99;
  double v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  double v104;
  double v105;
  NSObject *v106;
  uint64_t v107;
  double v108;
  double v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  char *v117;
  double v118;
  double v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  double v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  double v134;
  double v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  void *v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  _QWORD *v154;
  void (*v155)(double *, _QWORD);
  uint8_t *v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  double v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  char v168;
  NSObject *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  _QWORD *v181;
  void (*v182)(double *, _QWORD);
  uint8_t *v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  double v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  double v201;
  double v202;
  char *v203;
  char *v204;
  uint64_t ObjectType;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(_QWORD, uint64_t);
  unint64_t v213;
  uint8_t *v214;
  uint64_t v215;
  _QWORD *v216;
  char *v217;
  unint64_t v218;
  NSObject *v219;
  double v220;
  unint64_t v221[3];
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  double aBlock;
  uint64_t v228;
  void *v229;
  void *v230;
  void *v231;
  _QWORD *v232;
  _OWORD v233[2];
  uint64_t v234;

  v211 = a8;
  LODWORD(v9) = a6;
  v207 = a5;
  v219 = a2;
  v216 = a1;
  ObjectType = swift_getObjectType();
  v12 = sub_23E5371A8();
  v209 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v204 = (char *)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v195 - v15;
  v218 = sub_23E536F20();
  v206 = *(_QWORD *)(v218 - 8);
  MEMORY[0x24BDAC7A8](v218);
  v217 = (char *)&v195 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    goto LABEL_56;
LABEL_2:
  v18 = __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
  swift_bridgeObjectRetain_n();
  v215 = v18;
  v19 = sub_23E537190();
  v20 = sub_23E537AF0();
  v21 = os_log_type_enabled(v19, v20);
  v203 = v16;
  v212 = (void (*)(_QWORD, uint64_t))a7;
  v210 = v12;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = COERCE_DOUBLE(swift_slowAlloc());
    aBlock = v23;
    *(_DWORD *)v22 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v233[0] = sub_23E1FD768(a3, a4, (uint64_t *)&aBlock);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](*(_QWORD *)&v23, -1, -1);
    MEMORY[0x24264FEBC](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  v24 = v216;
  swift_bridgeObjectRetain_n();
  v25 = sub_23E537190();
  v26 = sub_23E537AF0();
  v27 = os_log_type_enabled(v25, (os_log_type_t)v26);
  v28 = MEMORY[0x24BEE4AF8];
  v214 = (uint8_t *)a3;
  v213 = a4;
  LODWORD(v208) = (_DWORD)v9;
  if (v27)
  {
    LODWORD(v202) = v26;
    v29 = swift_slowAlloc();
    v30 = COERCE_DOUBLE(swift_slowAlloc());
    aBlock = v30;
    *(_DWORD *)v29 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v233[0] = sub_23E1FD768(a3, a4, (uint64_t *)&aBlock);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    v31 = v24[2];
    v32 = MEMORY[0x24BEE4AF8];
    if (v31)
    {
      v201 = v30;
      *(_QWORD *)&v233[0] = MEMORY[0x24BEE4AF8];
      sub_23E2058B0(0, v31, 0);
      v32 = *(_QWORD *)&v233[0];
      v33 = v24 + 5;
      do
      {
        v34 = *(v33 - 1);
        v35 = *v33;
        *(_QWORD *)&v233[0] = v32;
        v37 = *(_QWORD *)(v32 + 16);
        v36 = *(_QWORD *)(v32 + 24);
        swift_bridgeObjectRetain();
        if (v37 >= v36 >> 1)
        {
          sub_23E2058B0(v36 > 1, v37 + 1, 1);
          v32 = *(_QWORD *)&v233[0];
        }
        v33 += 5;
        *(_QWORD *)(v32 + 16) = v37 + 1;
        v38 = v32 + 16 * v37;
        *(_QWORD *)(v38 + 32) = v34;
        *(_QWORD *)(v38 + 40) = v35;
        --v31;
      }
      while (v31);
      a4 = v213;
      a3 = (unint64_t)v214;
      v30 = v201;
    }
    *(_QWORD *)&v233[0] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
    sub_23E1F9710((unint64_t *)&qword_254332BA0, &qword_254332B98, MEMORY[0x24BEE12B0]);
    v39 = sub_23E5374F0();
    v41 = v40;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v233[0] = sub_23E1FD768(v39, v41, (uint64_t *)&aBlock);
    sub_23E537CF4();
    v24 = v216;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v25, LOBYTE(v202), "...{%s} will process fetch specifications %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](*(_QWORD *)&v30, -1, -1);
    MEMORY[0x24264FEBC](v29, -1, -1);

    v28 = MEMORY[0x24BEE4AF8];
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  aBlock = v28;
  v9 = (char *)v24[2];
  if (!v9)
  {
    v50 = v28;
    v51 = *(_QWORD *)&v28 >> 62;
    if (*(_QWORD *)&v28 >> 62)
      goto LABEL_41;
LABEL_30:
    if (*(_QWORD *)((*(_QWORD *)&v50 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_31;
LABEL_42:
    swift_bridgeObjectRelease();
    if ((*(_QWORD *)&v28 & 0xC000000000000000) == 0)
    {
      v62 = MEMORY[0x24BEE4B08];
      v63 = v212;
LABEL_44:
      v63(0, v62);
      return swift_bridgeObjectRelease();
    }
LABEL_130:
    v192 = sub_23E53803C();
    v63 = v212;
    if (v192)
    {
      sub_23E2D0838(MEMORY[0x24BEE4AF8]);
      v62 = v193;
    }
    else
    {
      v62 = MEMORY[0x24BEE4B08];
    }
    goto LABEL_44;
  }
  a4 = (unint64_t)(v24 + 4);
  swift_bridgeObjectRetain();
  v16 = 0;
  v12 = 0;
  do
  {
    v43 = a4 + 40 * (_QWORD)v16;
    v44 = *(_OWORD *)(v43 + 16);
    v233[0] = *(_OWORD *)v43;
    v233[1] = v44;
    v234 = *(_QWORD *)(v43 + 32);
    sub_23E3A9458((uint64_t)v233);
    v45 = -[NSObject accessories](v219, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    a3 = sub_23E5377F0();

    v226 = *(_QWORD *)&v28;
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      v46 = sub_23E53803C();
      if (!v46)
      {
LABEL_16:
        swift_bridgeObjectRelease_n();
        v42 = *(_QWORD *)&v28;
        goto LABEL_17;
      }
    }
    else
    {
      v46 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v46)
        goto LABEL_16;
    }
    a7 = 4;
    do
    {
      if ((a3 & 0xC000000000000001) != 0)
        v47 = (id)MEMORY[0x24264F148](a7 - 4, a3);
      else
        v47 = *(id *)(a3 + 8 * a7);
      v48 = v47;
      v49 = a7 - 3;
      if (__OFADD__(a7 - 4, 1))
      {
        __break(1u);
LABEL_56:
        swift_once();
        goto LABEL_2;
      }
      v223 = (uint64_t)v47;
      sub_23E3A7728((id *)&v223, (unint64_t *)v233, v221);

      sub_23E2593C0(v221[0]);
      ++a7;
    }
    while (v49 != v46);
    swift_bridgeObjectRelease_n();
    v42 = v226;
    v28 = MEMORY[0x24BEE4AF8];
LABEL_17:
    ++v16;
    sub_23E3A94A8((uint64_t)v233);
    sub_23E2593C0(v42);
  }
  while (v16 != v9);
  swift_bridgeObjectRelease();
  v50 = aBlock;
  a4 = v213;
  a3 = (unint64_t)v214;
  v51 = *(_QWORD *)&aBlock >> 62;
  if (!(*(_QWORD *)&aBlock >> 62))
    goto LABEL_30;
LABEL_41:
  swift_bridgeObjectRetain();
  v61 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v61)
    goto LABEL_42;
LABEL_31:
  v52 = swift_bridgeObjectRetain();
  sub_23E4FDD28(v52);
  v202 = v50;
  swift_bridgeObjectRelease();
  v53 = swift_bridgeObjectRetain();
  v54 = COERCE_DOUBLE(sub_23E24A528(v53));
  swift_bridgeObjectRelease();
  aBlock = v54;
  sub_23E3A8430((uint64_t *)&aBlock);
  v196 = v51;
  swift_bridgeObjectRelease();
  v55 = *(_QWORD *)&aBlock;
  if ((*(_QWORD *)&aBlock & 0x8000000000000000) != 0 || (*(_QWORD *)&aBlock & 0x4000000000000000) != 0)
  {
    swift_retain();
    v56 = sub_23E53803C();
    if (!v56)
      goto LABEL_58;
LABEL_34:
    if (v56 >= 1)
    {
      v57 = 0;
      v58 = v55 & 0xC000000000000001;
      do
      {
        if (v58)
          v59 = COERCE_DOUBLE(MEMORY[0x24264F148](v57, v55));
        else
          *(_QWORD *)&v59 = *(id *)(v55 + 8 * v57 + 32);
        v60 = v59;
        ++v57;
        aBlock = v59;
        sub_23E3A94F4((void **)&aBlock, v55, a3, a4);

      }
      while (v56 != v57);
      swift_release();
      aBlock = v28;
      v64 = (void *)objc_opt_self();
      swift_retain();
      for (i = 0; i != v56; ++i)
      {
        if (v58)
          v66 = (id)MEMORY[0x24264F148](i, v55);
        else
          v66 = *(id *)(v55 + 8 * i + 32);
        v67 = v66;
        v68 = objc_msgSend(v64, sel_readRequestWithCharacteristic_, v66);

        if (v68)
        {
          MEMORY[0x24264EA70]();
          if (*(_QWORD *)((*(_QWORD *)&aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)&aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
            sub_23E537820();
          sub_23E53785C();
          sub_23E537808();
        }
      }
      swift_release();
      a4 = v213;
      v28 = MEMORY[0x24BEE4AF8];
      a3 = (unint64_t)v214;
      goto LABEL_59;
    }
    __break(1u);
    goto LABEL_130;
  }
  v56 = *(_QWORD *)(*(_QWORD *)&aBlock + 16);
  swift_retain();
  if (v56)
    goto LABEL_34;
LABEL_58:
  swift_release();
LABEL_59:
  sub_23E1E335C(0, &qword_256D45350);
  v69 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v70 = objc_msgSend((id)objc_opt_self(), sel_characteristicBatchRequestWithReadRequests_, v69);

  if (!v70)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if ((*(_QWORD *)&v28 & 0xC000000000000000) != 0 && sub_23E53803C())
    {
      sub_23E2D0838(MEMORY[0x24BEE4AF8]);
      v88 = v194;
    }
    else
    {
      v88 = MEMORY[0x24BEE4B08];
    }
    v212(0, v88);
    return swift_bridgeObjectRelease();
  }
  *(double *)&v71 = COERCE_DOUBLE(swift_allocObject());
  v72 = sub_23E4FDD28(v55);
  swift_release();
  *(_QWORD *)(v71 + 16) = v72;
  v200 = (uint64_t *)(v71 + 16);
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = 0;
  v197 = v73 + 16;
  v74 = swift_allocObject();
  *(_QWORD *)(v74 + 16) = 0;
  v195 = v74 + 16;
  v75 = (double *)swift_allocObject();
  v75[2] = *(double *)&v71;
  *((_QWORD *)v75 + 3) = a3;
  *((_QWORD *)v75 + 4) = a4;
  *((_QWORD *)v75 + 5) = v74;
  *((_QWORD *)v75 + 6) = ObjectType;
  v231 = sub_23E3A9A0C;
  v232 = v75;
  v216 = v70;
  v76 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v228 = 1107296256;
  v229 = sub_23E3A27C4;
  v230 = &block_descriptor_22;
  v77 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  v201 = *(double *)&v71;
  swift_retain();
  ObjectType = v74;
  swift_retain();
  swift_release();
  objc_msgSend(v216, sel_setProgressHandler_, v77);
  _Block_release(v77);
  v78 = swift_allocObject();
  *(_BYTE *)(v78 + 16) = 0;
  v79 = (_BYTE *)(v78 + 16);
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = v73;
  *(_QWORD *)(v80 + 24) = v78;
  v231 = sub_23E3A9A58;
  v232 = (_QWORD *)v80;
  aBlock = v76;
  v81 = v216;
  v228 = 1107296256;
  v229 = sub_23E50B358;
  v230 = &block_descriptor_19;
  v82 = _Block_copy(&aBlock);
  v199 = v73;
  swift_retain();
  v198 = v78;
  swift_retain();
  swift_release();
  objc_msgSend(v81, sel_setCompletionHandler_, v82);
  _Block_release(v82);
  swift_bridgeObjectRetain_n();
  v83 = sub_23E537190();
  v84 = sub_23E537AF0();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc();
    v86 = COERCE_DOUBLE(swift_slowAlloc());
    aBlock = v86;
    *(_DWORD *)v85 = 136315138;
    v81 = v216;
    swift_bridgeObjectRetain();
    v226 = sub_23E1FD768((uint64_t)v214, a4, (uint64_t *)&aBlock);
    a3 = (unint64_t)v214;
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    v87 = v86;
    v28 = MEMORY[0x24BEE4AF8];
    MEMORY[0x24264FEBC](*(_QWORD *)&v87, -1, -1);
    MEMORY[0x24264FEBC](v85, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v90 = v208;
  v91 = v206;
  -[NSObject performBatchCharacteristicRequest:](v219, sel_performBatchCharacteristicRequest_, v81);
  v92 = v217;
  sub_23E536F14();
  sub_23E536E84();
  v94 = v93;
  v95 = *(void (**)(char *, unint64_t))(v91 + 8);
  v95(v92, v218);
  swift_beginAccess();
  v96 = *(double *)&v207;
  v97 = v217;
  while (2)
  {
    sub_23E536F14();
    sub_23E536E84();
    v99 = v98;
    v95(v97, v218);
    v100 = v99 - v94;
    if ((v90 & 1) != 0)
    {
      if (v100 >= -1.0)
        goto LABEL_72;
LABEL_69:
      objc_msgSend((id)objc_opt_self(), sel_sleepForTimeInterval_, 0.02);
      if (*v79 != 1)
        continue;
      swift_bridgeObjectRelease();
      v110 = v209;
      v111 = v203;
      v112 = v210;
      (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v203, v215, v210);
      swift_bridgeObjectRetain_n();
      v113 = v201;
      swift_retain_n();
      v114 = ObjectType;
      swift_retain();
      v115 = sub_23E537190();
      LODWORD(v215) = sub_23E537B20();
      if (!os_log_type_enabled(v115, (os_log_type_t)v215))
      {

        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
        v104 = v113;
        goto LABEL_128;
      }
      v116 = swift_slowAlloc();
      v208 = swift_slowAlloc();
      v222 = v208;
      *(_DWORD *)v116 = 136315906;
      swift_bridgeObjectRetain();
      aBlock = COERCE_DOUBLE(sub_23E1FD768(a3, a4, &v222));
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v116 + 12) = 2048;
      v117 = v217;
      sub_23E536F14();
      sub_23E536E84();
      v119 = v118;
      v95(v117, v218);
      aBlock = v119 - v94;
      sub_23E537CF4();
      *(_WORD *)(v116 + 22) = 2048;
      swift_beginAccess();
      aBlock = *(double *)(v114 + 16);
      sub_23E537CF4();
      swift_release();
      v214 = (uint8_t *)v116;
      *(_WORD *)(v116 + 32) = 2080;
      v120 = v200;
      swift_beginAccess();
      v121 = *v120;
      v219 = (*v120 & 0xC000000000000001);
      if (v219)
      {
        swift_bridgeObjectRetain();
        v122 = sub_23E537DB4();
        if (v122)
        {
LABEL_80:
          v220 = v28;
          v123 = COERCE_DOUBLE(&v220);
          sub_23E2058B0(0, v122 & ~(v122 >> 63), 0);
          if (v219)
          {
            v124 = sub_23E537D6C();
            v126 = 1;
          }
          else
          {
            v124 = sub_23E2CD7AC(v121);
            v126 = v162 & 1;
          }
          v223 = v124;
          v224 = v125;
          v225 = v126;
          if (v122 < 0)
            goto LABEL_136;
          v163 = v121 & 0xFFFFFFFFFFFFFF8;
          if (v121 < 0)
            v163 = v121;
          v217 = (char *)v163;
          v218 = v121;
          do
          {
            while (1)
            {
              v169 = v115;
              v170 = v223;
              v171 = v224;
              v172 = v225;
              sub_23E2CD518(v223, v224, v225, v121);
              v174 = v173;
              v175 = objc_msgSend(v173, sel_description);
              v176 = sub_23E53755C();
              v178 = v177;

              v123 = v220;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23E2058B0(0, *(_QWORD *)(*(_QWORD *)&v123 + 16) + 1, 1);
                v123 = v220;
              }
              v180 = *(_QWORD *)(*(_QWORD *)&v123 + 16);
              v179 = *(_QWORD *)(*(_QWORD *)&v123 + 24);
              if (v180 >= v179 >> 1)
              {
                sub_23E2058B0(v179 > 1, v180 + 1, 1);
                v123 = v220;
              }
              *(_QWORD *)(*(_QWORD *)&v123 + 16) = v180 + 1;
              v181 = (_QWORD *)(*(_QWORD *)&v123 + 16 * v180);
              v181[4] = v176;
              v181[5] = v178;
              if (v219)
                break;
              v121 = v218;
              v164 = sub_23E2CD280(v170, v171, v172, v218);
              v166 = v165;
              v168 = v167;
              sub_23E23D578(v170, v171, v172);
              v223 = v164;
              v224 = v166;
              v225 = v168 & 1;
              v115 = v169;
              if (!--v122)
                goto LABEL_126;
            }
            v121 = v218;
            if ((v172 & 1) == 0)
              goto LABEL_138;
            v115 = v169;
            if (sub_23E537D84())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&qword_256D428F0);
            v182 = (void (*)(double *, _QWORD))sub_23E537A30();
            sub_23E537DFC();
            v182(&aBlock, 0);
            --v122;
          }
          while (v122);
LABEL_126:
          sub_23E23D578(v223, v224, v225);
          swift_bridgeObjectRelease();
          v135 = v220;
LABEL_127:
          v183 = v214;
          v184 = MEMORY[0x24264EA94](*(_QWORD *)&v135, MEMORY[0x24BEE0D00]);
          v186 = v185;
          swift_bridgeObjectRelease();
          aBlock = COERCE_DOUBLE(sub_23E1FD768(v184, v186, &v222));
          sub_23E537CF4();
          v187 = v201;
          swift_release_n();
          v104 = v187;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23E1DF000, v115, (os_log_type_t)v215, "...{%s} fetch completed in %fs, got %ld results, nilCharacteristics = %s", v183, 0x2Au);
          v188 = v208;
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v188, -1, -1);
          MEMORY[0x24264FEBC](v183, -1, -1);

          (*(void (**)(char *, uint64_t))(v209 + 8))(v203, v210);
          goto LABEL_128;
        }
      }
      else
      {
        v122 = *(_QWORD *)(v121 + 16);
        swift_bridgeObjectRetain();
        if (v122)
          goto LABEL_80;
      }
      swift_bridgeObjectRelease();
      v135 = MEMORY[0x24BEE4AF8];
      goto LABEL_127;
    }
    break;
  }
  if (v100 < v96)
    goto LABEL_69;
LABEL_72:
  v101 = v209;
  v102 = v204;
  v103 = v210;
  (*(void (**)(char *, uint64_t, uint64_t))(v209 + 16))(v204, v215, v210);
  swift_bridgeObjectRetain_n();
  v104 = v201;
  swift_retain_n();
  v105 = v202;
  swift_bridgeObjectRetain();
  swift_retain();
  v106 = sub_23E537190();
  LODWORD(v215) = sub_23E537B08();
  if (!os_log_type_enabled(v106, (os_log_type_t)v215))
  {

    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
    goto LABEL_128;
  }
  v219 = v106;
  v107 = swift_slowAlloc();
  *(double *)&v207 = COERCE_DOUBLE(swift_slowAlloc());
  v222 = v207;
  *(_DWORD *)v107 = 136316162;
  swift_bridgeObjectRetain();
  aBlock = COERCE_DOUBLE(sub_23E1FD768(a3, a4, &v222));
  sub_23E537CF4();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v107 + 12) = 2048;
  v108 = -1.0;
  if ((v90 & 1) == 0)
    v108 = v96;
  aBlock = v108;
  sub_23E537CF4();
  *(_WORD *)(v107 + 22) = 2048;
  swift_beginAccess();
  aBlock = *(double *)(ObjectType + 16);
  sub_23E537CF4();
  swift_release();
  *(_WORD *)(v107 + 32) = 2048;
  if (v196)
  {
    swift_bridgeObjectRetain();
    v109 = COERCE_DOUBLE(sub_23E53803C());
    swift_bridgeObjectRelease();
  }
  else
  {
    v109 = *(double *)((*(_QWORD *)&v105 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  aBlock = v109;
  sub_23E537CF4();
  swift_bridgeObjectRelease();
  v214 = (uint8_t *)v107;
  *(_WORD *)(v107 + 42) = 2080;
  v127 = v200;
  swift_beginAccess();
  v128 = *v127;
  v218 = *v127 & 0xC000000000000001;
  if (v218)
  {
    swift_bridgeObjectRetain();
    v129 = sub_23E537DB4();
  }
  else
  {
    v129 = *(_QWORD *)(v128 + 16);
    swift_bridgeObjectRetain();
  }
  v130 = v219;
  if (!v129)
  {
    swift_bridgeObjectRelease();
    v134 = MEMORY[0x24BEE4AF8];
    goto LABEL_110;
  }
  v220 = v28;
  v123 = COERCE_DOUBLE(&v220);
  sub_23E2058B0(0, v129 & ~(v129 >> 63), 0);
  if (v218)
  {
    v131 = sub_23E537D6C();
    v133 = 1;
  }
  else
  {
    v131 = sub_23E2CD7AC(v128);
    v133 = v136 & 1;
  }
  v223 = v131;
  v224 = v132;
  v225 = v133;
  if ((v129 & 0x8000000000000000) == 0)
  {
    v137 = v128 & 0xFFFFFFFFFFFFFF8;
    if (v128 < 0)
      v137 = v128;
    v217 = (char *)v137;
    do
    {
      while (1)
      {
        v143 = v223;
        v144 = v224;
        v145 = v225;
        sub_23E2CD518(v223, v224, v225, v128);
        v147 = v146;
        v148 = objc_msgSend(v146, sel_description);
        v149 = sub_23E53755C();
        v151 = v150;

        v123 = v220;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E2058B0(0, *(_QWORD *)(*(_QWORD *)&v123 + 16) + 1, 1);
          v123 = v220;
        }
        v153 = *(_QWORD *)(*(_QWORD *)&v123 + 16);
        v152 = *(_QWORD *)(*(_QWORD *)&v123 + 24);
        if (v153 >= v152 >> 1)
        {
          sub_23E2058B0(v152 > 1, v153 + 1, 1);
          v123 = v220;
        }
        *(_QWORD *)(*(_QWORD *)&v123 + 16) = v153 + 1;
        v154 = (_QWORD *)(*(_QWORD *)&v123 + 16 * v153);
        v154[4] = v149;
        v154[5] = v151;
        if (v218)
          break;
        v138 = sub_23E2CD280(v143, v144, v145, v128);
        v140 = v139;
        v142 = v141;
        sub_23E23D578(v143, v144, v145);
        v223 = v138;
        v224 = v140;
        v225 = v142 & 1;
        v130 = v219;
        if (!--v129)
          goto LABEL_109;
      }
      if ((v145 & 1) == 0)
        goto LABEL_137;
      if (sub_23E537D84())
        swift_isUniquelyReferenced_nonNull_native();
      v130 = v219;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D428F0);
      v155 = (void (*)(double *, _QWORD))sub_23E537A30();
      sub_23E537DFC();
      v155(&aBlock, 0);
      --v129;
    }
    while (v129);
LABEL_109:
    sub_23E23D578(v223, v224, v225);
    swift_bridgeObjectRelease();
    v134 = v220;
LABEL_110:
    v156 = v214;
    v157 = MEMORY[0x24264EA94](*(_QWORD *)&v134, MEMORY[0x24BEE0D00]);
    v159 = v158;
    swift_bridgeObjectRelease();
    aBlock = COERCE_DOUBLE(sub_23E1FD768(v157, v159, &v222));
    sub_23E537CF4();
    v160 = v201;
    swift_release_n();
    v104 = v160;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v130, (os_log_type_t)v215, "...{%s} fetch timed out after %fs, got %ld results of %ld requested, nilCharacteristics = %s", v156, 0x34u);
    v161 = v207;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v161, -1, -1);
    MEMORY[0x24264FEBC](v156, -1, -1);

    (*(void (**)(char *, uint64_t))(v209 + 8))(v204, v210);
LABEL_128:
    swift_beginAccess();
    v189 = *(void **)(v199 + 16);
    swift_beginAccess();
    v190 = *(_QWORD *)(*(_QWORD *)&v104 + 16);
    v191 = v189;
    swift_bridgeObjectRetain();
    v212(v189, v190);
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  swift_release();
  __break(1u);
LABEL_138:
  swift_release();
  __break(1u);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t DataModel.characteristics(matching:for:filterOutHiddenStatusAccessories:)(uint64_t a1, id a2)
{
  __int128 v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v2;
  v8 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  v3 = objc_msgSend(a2, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v4 = sub_23E5377F0();

  sub_23E3A9458((uint64_t)v7);
  v5 = sub_23E3A9304(v4, (unint64_t *)v7);
  sub_23E3A94A8((uint64_t)v7);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_23E3A4FBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  objc_class *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25[2];

  v11 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = sub_23E53803C();
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_17;
  }
  v13 = 0;
  v14 = a2 + 16;
  do
  {
    if ((v11 & 0xC000000000000001) != 0)
      v15 = (objc_class *)MEMORY[0x24264F148](v13, v11);
    else
      v15 = (objc_class *)*(id *)(v11 + 8 * v13 + 32);
    v16 = v15;
    ++v13;
    v24 = (uint64_t)v15;
    sub_23E3A9B1C((void **)&v24, v14, a3, a4, a5);

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  if (qword_254333DB8 != -1)
    swift_once();
  v17 = sub_23E5371A8();
  __swift_project_value_buffer(v17, (uint64_t)qword_254333D88);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_23E537190();
  LOBYTE(v12) = sub_23E537B20();
  if (!os_log_type_enabled((os_log_t)v11, (os_log_type_t)v12))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = swift_slowAlloc();
  v6 = swift_slowAlloc();
  v25[0] = v6;
  *(_DWORD *)v5 = 136315394;
  swift_bridgeObjectRetain();
  v24 = sub_23E1FD768(a3, a4, v25);
  sub_23E537CF4();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v5 + 12) = 2080;
  swift_beginAccess();
  if (qword_256D3EE10 != -1)
    goto LABEL_23;
LABEL_17:
  v18 = (void *)qword_256D45340;
  v19 = (void *)sub_23E537A60();
  v20 = objc_msgSend(v18, sel_stringForObjectValue_, v19);

  if (v20)
  {
    v21 = sub_23E53755C();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0xE000000000000000;
  }
  sub_23E1FD768(v21, v23, v25);
  sub_23E537CF4();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23E1DF000, (os_log_t)v11, (os_log_type_t)v12, "...{%s} fetch progress - %s", (uint8_t *)v5, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24264FEBC](v6, -1, -1);
  MEMORY[0x24264FEBC](v5, -1, -1);

}

uint64_t sub_23E3A531C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t result;

  swift_beginAccess();
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v7 = a1;

  result = swift_beginAccess();
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t DataModel.fetchCharacteristicValue(for:characteristicsKindMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = type metadata accessor for StateSnapshot(0);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[16] = swift_task_alloc();
  v4[17] = sub_23E5378F8();
  v4[18] = sub_23E5378EC();
  v4[19] = sub_23E5378B0();
  v4[20] = v6;
  return swift_task_switch();
}

uint64_t sub_23E3A5464()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (void **)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 168) = *v1;
  if (v2)
  {
    v3 = v2;
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 64);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3A5530()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A5590()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3A55F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A5654()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 192) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3A569C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_23E536F44();
  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A5708()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[25];
  v2 = (void *)v0[24];
  swift_release();
  v0[27] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3A5768()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 216))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v1;
    *v1 = v0;
    v1[1] = sub_23E3A5824;
    return sub_23E3A6000(*(_QWORD *)(v0 + 80));
  }
  else
  {

    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 64);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, 1, 1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3A5824(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3A587C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = v0[29];
  v14 = MEMORY[0x24BEE4AF8];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_23E1E335C(0, &qword_256D45350);
    v11 = (void *)sub_23E5377E4();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend((id)objc_opt_self(), sel_characteristicBatchRequestWithReadRequests_, v11);
    v0[30] = v12;

    v13 = (_QWORD *)swift_task_alloc();
    v0[31] = v13;
    *v13 = v0;
    v13[1] = sub_23E3A5A84;
    return sub_23E2721F4((uint64_t)v12);
  }
  swift_bridgeObjectRetain();
  v2 = sub_23E53803C();
  if (!v2)
    goto LABEL_15;
LABEL_3:
  result = objc_opt_self();
  if (v2 >= 1)
  {
    v4 = (void *)result;
    v5 = 0;
    v6 = v1 & 0xC000000000000001;
    v7 = v0[29] + 32;
    do
    {
      if (v6)
        v8 = (id)MEMORY[0x24264F148](v5, v0[29]);
      else
        v8 = *(id *)(v7 + 8 * v5);
      v9 = v8;
      v10 = objc_msgSend(v4, sel_readRequestWithCharacteristic_, v8, v14);

      if (v10)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
      ++v5;
    }
    while (v2 != v5);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E3A5A84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3A5AFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;

  if (qword_2543327D8 != -1)
    swift_once();
  v1 = v0[29];
  v2 = v0[21];
  v3 = (uint64_t *)v0[16];
  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
  v3[4] = sub_23E1F9710(&qword_256D45310, &qword_256D3FDD0, MEMORY[0x24BEE12C8]);
  *v3 = v1;
  swift_storeEnumTagMultiPayload();
  v4 = (_QWORD *)swift_task_alloc();
  v0[33] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23E3A5BE4;
  return sub_23E1F1F88(v0[8], v0[16], v2, v0[27]);
}

uint64_t sub_23E3A5BE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E3A5C44()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 64);

  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3A5CD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v1 = *(void **)(v0 + 256);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_8:
    v12 = *(void **)(v0 + 240);
    v13 = *(void **)(v0 + 216);
    v14 = *(void **)(v0 + 168);
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 272) = v3;
  *(_QWORD *)(v0 + 280) = v4;
  if (v4 < 0)
  {
    swift_bridgeObjectRetain();
    v11 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    sub_23E272474(v3, v4);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v5 = (id)v4;
  swift_bridgeObjectRelease();

  if (qword_2543327D8 != -1)
    swift_once();
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD **)(v0 + 128);
  v8[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
  v8[4] = sub_23E1F9710(&qword_256D45310, &qword_256D3FDD0, MEMORY[0x24BEE12C8]);
  *v8 = v6;
  swift_storeEnumTagMultiPayload();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v9;
  *v9 = v0;
  v9[1] = sub_23E3A5EF0;
  return sub_23E1F1F88(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128), v7, *(_QWORD *)(v0 + 216));
}

uint64_t sub_23E3A5EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc();
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E3A5F6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  swift_release();
  sub_23E272474(v1, v2);
  v3 = *(void **)(v0 + 240);
  v4 = *(void **)(v0 + 216);
  v5 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3A6000(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[3] = a1;
  v1[4] = *(_QWORD *)(type metadata accessor for StaticService() - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45370);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = sub_23E5378F8();
  v1[9] = sub_23E5378EC();
  v1[10] = sub_23E5378B0();
  v1[11] = v2;
  return swift_task_switch();
}

uint64_t sub_23E3A60C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 170) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
LABEL_5:
    v10 = *(_QWORD *)(v0 + 48);
    sub_23E1E2F50(*(_QWORD *)(v1 + 48) + *(_QWORD *)(v2 + 72) * v8, v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v11 = *(_QWORD *)(v1 + 56);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
    *(_QWORD *)(v10 + *(int *)(v12 + 48)) = *(_QWORD *)(v11 + 8 * v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  v13 = 63 - v5;
  if ((unint64_t)(63 - v5) <= 0x7F)
  {
    v7 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 72);
    if (v14)
    {
      v7 = 1;
LABEL_9:
      v9 = (v14 - 1) & v14;
      v8 = __clz(__rbit64(v14)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v13 < 0xC0)
    {
      v7 = 1;
    }
    else
    {
      v14 = *(_QWORD *)(v1 + 80);
      if (v14)
      {
        v7 = 2;
        goto LABEL_9;
      }
      if (v13 < 0x100)
      {
        v7 = 2;
      }
      else
      {
        v14 = *(_QWORD *)(v1 + 88);
        if (v14)
        {
          v7 = 3;
          goto LABEL_9;
        }
        if (v13 < 0x140)
        {
          v7 = 3;
        }
        else
        {
          v14 = *(_QWORD *)(v1 + 96);
          if (v14)
          {
            v7 = 4;
            goto LABEL_9;
          }
          v23 = 0;
          v24 = v13 >> 6;
          v25 = 5;
          if (v24 > 5)
            v25 = v24;
          v26 = v25 - 5;
          while (v26 != v23)
          {
            v14 = *(_QWORD *)(v1 + 104 + 8 * v23++);
            if (v14)
            {
              v7 = v23 + 4;
              goto LABEL_9;
            }
          }
          v7 = v24 - 1;
        }
      }
    }
  }
  v15 = *(_QWORD *)(v0 + 48);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v9 = 0;
LABEL_12:
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v0 + 104) = v9;
  v17 = *(_QWORD *)(v0 + 56);
  sub_23E3A9AD4(*(_QWORD *)(v0 + 48), v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18) == 1)
  {
    swift_release();
    swift_release();
    v19 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 56);
    v22 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v21 + *(int *)(v18 + 48));
    sub_23E2EA034(v21, v22);
    return swift_task_switch();
  }
}

uint64_t sub_23E3A6384()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A63E4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3A6448()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 128) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A64A8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 136) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3A64F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_23E536F44();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A655C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[18];
  v2 = (void *)v0[17];
  swift_release();
  v0[20] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

id sub_23E3A65BC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  char v53;
  unsigned __int8 v54;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v52 = (unsigned __int8 *)(v0 + 168);
    v3 = (_BYTE *)(v0 + 169);
    v4 = *(_QWORD *)(v0 + 160);
    v50 = v1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    v48 = v2;
    v49 = v0;
    v46 = (_QWORD *)(v0 + 16);
    v47 = v4;
    while (1)
    {
      if (v4)
      {
        v53 = *(_BYTE *)(v50 + v5);
        v6 = objc_msgSend(*(id *)(v0 + 160), sel_characteristics);
        sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        v7 = sub_23E5377F0();

        if (v7 >> 62)
        {
          swift_bridgeObjectRetain();
          v8 = sub_23E53803C();
          if (v8)
          {
LABEL_8:
            v51 = v5;
            v9 = 0;
            v0 = v7 & 0xC000000000000001;
            while (1)
            {
              if (v0)
                result = (id)MEMORY[0x24264F148](v9, v7);
              else
                result = *(id *)(v7 + 8 * v9 + 32);
              v15 = result;
              v16 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                goto LABEL_38;
              }
              v17 = objc_msgSend(result, sel_characteristicType);
              v18 = sub_23E53755C();
              v20 = v19;

              v21._countAndFlagsBits = v18;
              v21._object = v20;
              LOBYTE(v22) = CharacteristicKind.init(rawValue:)(v21);
              v23 = v54;
              if (v54 == 174)
                v23 = 0;
              *v52 = v23;
              *v3 = v53;
              v24 = CharacteristicKind.rawValue.getter(v22);
              v26 = v25;
              if (v24 == CharacteristicKind.rawValue.getter(v24) && v26 == v27)
                break;
              v28 = sub_23E538354();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v28 & 1) != 0)
                goto LABEL_21;

              ++v9;
              if (v16 == v8)
              {
                swift_bridgeObjectRelease_n();
                v2 = v48;
                v0 = v49;
                v4 = v47;
                v5 = v51;
                goto LABEL_4;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_21:
            v29 = swift_bridgeObjectRelease_n();
            MEMORY[0x24264EA70](v29);
            v2 = v48;
            v0 = v49;
            v5 = v51;
            if (*(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23E537820();
            sub_23E53785C();
            sub_23E537808();
            v4 = v47;
            goto LABEL_4;
          }
        }
        else
        {
          v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v8)
            goto LABEL_8;
        }
        swift_bridgeObjectRelease_n();
      }
LABEL_4:
      if (++v5 == v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v30 = *(void **)(v0 + 160);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);

  result = (id)swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 104);
  if (v31)
  {
    v33 = (v31 - 1) & v31;
    v34 = __clz(__rbit64(v31)) | (v32 << 6);
    v9 = *(_QWORD *)(v0 + 24);
LABEL_29:
    v35 = *(_QWORD *)(v0 + 48);
    sub_23E1E2F50(*(_QWORD *)(v9 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 72) * v34, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v36 = *(_QWORD *)(v9 + 56);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
    *(_QWORD *)(v35 + *(int *)(v37 + 48)) = *(_QWORD *)(v36 + 8 * v34);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
    swift_bridgeObjectRetain();
    goto LABEL_49;
  }
  v11 = v32 + 1;
  if (__OFADD__(v32, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  v12 = (unint64_t)((1 << *(_BYTE *)(v0 + 170)) + 63) >> 6;
  if (v11 < v12)
  {
    v9 = *(_QWORD *)(v0 + 24);
    v13 = v9 + 64;
    v38 = *(_QWORD *)(v9 + 64 + 8 * v11);
    if (v38)
    {
LABEL_33:
      v33 = (v38 - 1) & v38;
      v34 = __clz(__rbit64(v38)) + (v11 << 6);
      v32 = v11;
      goto LABEL_29;
    }
    v14 = v32 + 2;
    ++v32;
    if (v11 + 1 < v12)
    {
      v38 = *(_QWORD *)(v13 + 8 * v14);
      if (v38)
      {
LABEL_36:
        v11 = v14;
        goto LABEL_33;
      }
LABEL_38:
      v32 = v14;
      if (v11 + 2 < v12)
      {
        v38 = *(_QWORD *)(v13 + 8 * (v11 + 2));
        if (v38)
        {
          v11 += 2;
          goto LABEL_33;
        }
        v14 = v11 + 3;
        v32 = v11 + 2;
        if (v11 + 3 < v12)
        {
          v38 = *(_QWORD *)(v13 + 8 * v14);
          if (v38)
            goto LABEL_36;
          while (1)
          {
            v11 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (v11 >= v12)
            {
              v32 = v12 - 1;
              goto LABEL_48;
            }
            v38 = *(_QWORD *)(v13 + 8 * v11);
            ++v14;
            if (v38)
              goto LABEL_33;
          }
LABEL_53:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_48:
  v39 = *(_QWORD *)(v0 + 48);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  v33 = 0;
LABEL_49:
  *(_QWORD *)(v0 + 96) = v32;
  *(_QWORD *)(v0 + 104) = v33;
  v41 = *(_QWORD *)(v0 + 56);
  sub_23E3A9AD4(*(_QWORD *)(v0 + 48), v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45378);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42) == 1)
  {
    swift_release();
    swift_release();
    v43 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(uint64_t))(v0 + 8))(v43);
  }
  else
  {
    v44 = *(_QWORD *)(v0 + 56);
    v45 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v44 + *(int *)(v42 + 48));
    sub_23E2EA034(v44, v45);
    return (id)swift_task_switch();
  }
}

uint64_t DataModel.fetchProfileContent(for:profileBags:profileKind:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 136) = a3;
  *(_QWORD *)(v5 + 144) = v4;
  *(_QWORD *)(v5 + 120) = a1;
  *(_QWORD *)(v5 + 128) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  v7 = sub_23E536F80();
  *(_QWORD *)(v5 + 160) = v7;
  *(_QWORD *)(v5 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  *(_QWORD *)(v5 + 192) = *(_QWORD *)(type metadata accessor for StaticLightProfile() - 8);
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  *(_QWORD *)(v5 + 208) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_BYTE *)(v5 + 336) = *a4;
  *(_QWORD *)(v5 + 224) = sub_23E5378F8();
  *(_QWORD *)(v5 + 232) = sub_23E5378EC();
  *(_QWORD *)(v5 + 240) = sub_23E5378B0();
  *(_QWORD *)(v5 + 248) = v8;
  return swift_task_switch();
}

uint64_t sub_23E3A6C1C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;

  v1 = (void **)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 256) = *v1;
  if (v2)
  {
    v3 = v2;
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 120);
    swift_release();
    v6 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3A6D10()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A6D70()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3A6DD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A6E34()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 280) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3A6E7C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = sub_23E536F44();
  *(_QWORD *)(v0 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3A6EE8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[36];
  v2 = (void *)v0[35];
  swift_release();
  v0[38] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3A6F48()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(unint64_t, unint64_t, uint64_t);
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;

  if (!*(_QWORD *)(v0 + 304))
  {

    v14 = *(_QWORD *)(v0 + 120);
    swift_release();
    v15 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v1 = *(_BYTE *)(v0 + 336);
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE4AF8];
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 144);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 112) = v3;
    sub_23E30AAAC();
    sub_23E537070();
    swift_release();
    v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
    swift_beginAccess();
    v5 = *v4;
    if (*(_QWORD *)(v5 + 16))
    {
      v6 = *(_QWORD *)(v0 + 128);
      swift_bridgeObjectRetain();
      v7 = sub_23E1E3300(v6);
      v8 = *(_QWORD *)(v0 + 120);
      if ((v9 & 1) != 0)
      {
        v10 = v7;
        v11 = *(_QWORD *)(v5 + 56);
        v12 = type metadata accessor for StateSnapshot(0);
        v13 = *(_QWORD *)(v12 - 8);
        sub_23E1E2F50(v11 + *(_QWORD *)(v13 + 72) * v10, v8, type metadata accessor for StateSnapshot);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      else
      {
        v41 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v8, 1, 1, v41);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = *(_QWORD *)(v0 + 120);
      v37 = type metadata accessor for StateSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 1, 1, v37);
    }
    v42 = *(void **)(v0 + 256);

    goto LABEL_28;
  }
  v16 = *(_QWORD *)(v0 + 136);
  v46 = v2;
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = v16 + 32;
    swift_bridgeObjectRetain();
    do
    {
      v18 += 16;
      v19 = swift_bridgeObjectRetain();
      sub_23E259764(v19);
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v2 = v46;
  }
  v20 = *(_QWORD *)(v2 + 16);
  if (v20)
  {
    v43 = v2;
    v21 = *(_QWORD *)(v0 + 192);
    v22 = *(_QWORD *)(v0 + 168);
    v23 = v2 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v44 = *(_QWORD *)(v21 + 72);
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24BEE4AF8];
    do
    {
      v25 = *(_QWORD *)(v0 + 200);
      v27 = *(_QWORD *)(v0 + 152);
      v26 = *(_QWORD *)(v0 + 160);
      sub_23E1E2F50(v23, v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v27, v25, v26);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v27, 0, 1, v26);
      sub_23E1E2FA0(v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v27, 1, v26) == 1)
      {
        sub_23E273104(*(_QWORD *)(v0 + 152));
      }
      else
      {
        v29 = *(_QWORD *)(v0 + 176);
        v28 = *(_QWORD *)(v0 + 184);
        v30 = *(_QWORD *)(v0 + 160);
        v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32);
        v31(v28, *(_QWORD *)(v0 + 152), v30);
        v31(v29, v28, v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_23E51E540(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v33 = *(_QWORD *)(v24 + 16);
        v32 = *(_QWORD *)(v24 + 24);
        if (v33 >= v32 >> 1)
          v24 = sub_23E51E540(v32 > 1, v33 + 1, 1, v24);
        v34 = *(_QWORD *)(v0 + 176);
        v35 = *(_QWORD *)(v0 + 160);
        *(_QWORD *)(v24 + 16) = v33 + 1;
        v31(v24+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(_QWORD *)(v22 + 72) * v33, v34, v35);
      }
      v23 += v44;
      --v20;
    }
    while (v20);
    v2 = v43;
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  sub_23E259F3C(v24);
  *(_QWORD *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D403F0);
  v38 = sub_23E1F9710(&qword_256D403F8, &qword_256D403F0, MEMORY[0x24BEE12E0]);
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 48) = v38;
  v45 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D42510 + dword_256D42510);
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v39;
  *v39 = v0;
  v39[1] = sub_23E3A73E4;
  return v45(*(_QWORD *)(v0 + 128), v0 + 16);
}

uint64_t sub_23E3A73E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_23E3A7458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_2543327D8 != -1)
    swift_once();
  v1 = v0[32];
  v2 = v0[27];
  v3 = v0[20];
  v4 = v0[21];
  v5 = v0[16];
  v6 = (_QWORD *)(v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  v7 = v0[13];
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v6[4] = sub_23E1F9710(&qword_256D426F8, &qword_254333DC0, MEMORY[0x24BEE12C8]);
  *v6 = v7;
  swift_storeEnumTagMultiPayload();
  v8 = (_QWORD *)swift_task_alloc();
  v0[41] = v8;
  *v8 = v0;
  v8[1] = sub_23E3A7578;
  return sub_23E1F1F88(v0[15], v0[27], v1, v0[38]);
}

uint64_t sub_23E3A7578()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E3A75D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 120);

  swift_release();
  v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3A7684()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 256);

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3A7728@<X0>(id *a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  BOOL v13;
  unint64_t v14;
  id v15;
  void *v16;
  void *v17;
  Swift::String v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t *v26;
  unint64_t *v27;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  Swift::String v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t *v46;
  uint64_t v47;
  unint64_t *v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  void *v62;
  void *v63;
  Swift::String v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t *v68;
  unint64_t *v69;
  uint64_t v70;
  unint64_t *v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  id v78;
  unint64_t v79;
  unint64_t *v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t result;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  char v108;
  void *v109;
  id v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[2];
  uint64_t v116;

  v4 = objc_msgSend(*a1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v5 = sub_23E5377F0();

  v6 = v5;
  v113 = MEMORY[0x24BEE4AF8];
  v96 = (uint64_t)a2;
  v100 = v5;
  if (v5 >> 62)
    goto LABEL_98;
  v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_23E3A9458((uint64_t)a2);
  swift_bridgeObjectRetain();
  v8 = v7;
  if (!v7)
  {
LABEL_99:
    swift_bridgeObjectRelease_n();
    v90 = MEMORY[0x24BEE4AF8];
    goto LABEL_100;
  }
LABEL_3:
  v9 = 0;
  v99 = v6 & 0xC000000000000001;
  v116 = *(_QWORD *)(v96 + 16);
  v93 = v6 + 32;
  v94 = v6 & 0xFFFFFFFFFFFFFF8;
  v95 = (char *)(v116 + 32);
  v97 = v8;
  v98 = *(_QWORD *)(v116 + 16);
  do
  {
    if (v99)
    {
      v10 = v6;
      v11 = v9;
      v12 = (id)MEMORY[0x24264F148](v9, v10);
    }
    else
    {
      if (v9 >= *(_QWORD *)(v94 + 16))
        goto LABEL_97;
      v11 = v9;
      v12 = *(id *)(v93 + 8 * v9);
    }
    v107 = v12;
    v13 = __OFADD__(v11, 1);
    v14 = v11 + 1;
    if (v13)
      goto LABEL_96;
    v101 = v14;
    swift_bridgeObjectRetain();
    v15 = objc_msgSend(v107, sel_serviceType);
    a2 = (unint64_t *)sub_23E53755C();
    v17 = v16;

    v18._countAndFlagsBits = (uint64_t)a2;
    v18._object = v17;
    ServiceKind.init(rawValue:)(v18);
    if (v112 == 53)
      v19 = 0;
    else
      v19 = v112;
    v20 = v98;
    if (!v98)
    {
      sub_23E3A9AAC((uint64_t)&v116);

      goto LABEL_5;
    }
    v21 = swift_bridgeObjectRetain();
    v22 = v95;
    while (1)
    {
      v23 = *v22++;
      LOBYTE(v112) = v23;
      LOBYTE(v110) = v19;
      v24 = ServiceKind.rawValue.getter(v21);
      v26 = v25;
      a2 = (unint64_t *)&v110;
      if (v24 == ServiceKind.rawValue.getter(v24) && v26 == v27)
        break;
      a2 = v27;
      v29 = sub_23E538354();
      swift_bridgeObjectRelease();
      v21 = swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
        goto LABEL_24;
      if (!--v20)
      {
        sub_23E3A9AAC((uint64_t)&v116);
        v30 = &v116;
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_24:
    sub_23E3A9AAC((uint64_t)&v116);
    sub_23E3A9AAC((uint64_t)&v116);
    v31 = v96;
    v32 = *(_QWORD *)(v96 + 24);
    v115[0] = v32;
    v33 = *(_QWORD *)(v32 + 16);
    if (!v33)
      goto LABEL_40;
    swift_bridgeObjectRetain();
    v34 = (unint64_t *)objc_msgSend(v107, sel_associatedServiceType);
    if (v34)
    {
      a2 = v34;
      v35 = sub_23E53755C();
      v37 = v36;

      v38._countAndFlagsBits = v35;
      v38._object = v37;
      ServiceKind.init(rawValue:)(v38);
      if (v112 == 53)
        v39 = 0;
      else
        v39 = v112;
    }
    else
    {
      v39 = 0;
    }
    v40 = v32 + 32;
    v41 = swift_bridgeObjectRetain();
    v42 = 0;
    do
    {
      v43 = v42 + 1;
      if (__OFADD__(v42, 1))
        goto LABEL_95;
      LOBYTE(v112) = *(_BYTE *)(v40 + v42);
      LOBYTE(v110) = v39;
      v44 = ServiceKind.rawValue.getter(v41);
      v46 = v45;
      v47 = ServiceKind.rawValue.getter(v44);
      a2 = v48;
      if (v44 == v47 && v46 == v48)
      {
        swift_bridgeObjectRelease_n();
LABEL_39:
        sub_23E3A9AAC((uint64_t)v115);
        sub_23E3A9AAC((uint64_t)v115);
        v31 = v96;
LABEL_40:
        v50 = *(_QWORD *)(v31 + 32);
        v114 = v50;
        v51 = MEMORY[0x24BEE4AF8];
        v112 = MEMORY[0x24BEE4AF8];
        v104 = *(_QWORD *)(v50 + 16);
        if (!v104)
        {
          swift_bridgeObjectRetain();
          v74 = v51;
LABEL_66:
          sub_23E3A9AAC((uint64_t)&v114);
          v112 = v51;
          if (!(v74 >> 62))
          {
            v75 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v75)
              goto LABEL_68;
LABEL_88:

            swift_bridgeObjectRelease();
            a2 = (unint64_t *)&v113;
            sub_23E2593C0(v51);
            goto LABEL_5;
          }
          swift_bridgeObjectRetain();
          v75 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (!v75)
            goto LABEL_88;
LABEL_68:
          v76 = 0;
          v105 = v74 & 0xFFFFFFFFFFFFFF8;
          v106 = v74 & 0xC000000000000001;
          while (2)
          {
            if (v106)
            {
              v77 = (id)MEMORY[0x24264F148](v76, v74);
            }
            else
            {
              if (v76 >= *(_QWORD *)(v105 + 16))
                goto LABEL_93;
              v77 = *(id *)(v74 + 8 * v76 + 32);
            }
            v78 = v77;
            v79 = v76 + 1;
            if (__OFADD__(v76, 1))
              goto LABEL_94;
            v80 = (unint64_t *)objc_msgSend(v77, sel_service);
            if (v80)
            {
              a2 = v80;
              v109 = v78;
              v81 = objc_msgSend(v80, sel_applicationData);
              v82 = (void *)sub_23E537538();
              v83 = objc_msgSend(v81, sel_objectForKeyedSubscript_, v82);

              v84 = objc_msgSend(a2, sel_accessory);
              if (v84)
              {
                v85 = v84;
                v86 = objc_msgSend(v84, sel_applicationData);
                v87 = v75;
                v88 = v74;
                v89 = (void *)sub_23E537538();
                v103 = objc_msgSend(v86, sel_objectForKeyedSubscript_, v89);

                v74 = v88;
                v75 = v87;

                if (v83)
                {
                  v110 = v83;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
                  if ((swift_dynamicCast() & 1) != 0 && (v111 & 1) == 0)
                  {

                    swift_unknownObjectRelease();
LABEL_71:
                    ++v76;
                    if (v79 == v75)
                    {
                      v51 = v112;
                      goto LABEL_88;
                    }
                    continue;
                  }
                }
                if (v103)
                {
                  v110 = v103;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
                  if (swift_dynamicCast())
                  {
                    if ((v111 & 1) == 0)
                    {

                      goto LABEL_71;
                    }
                  }
                }
              }
              else
              {

                swift_unknownObjectRelease();
              }
            }
            break;
          }
          a2 = &v112;
          sub_23E537F1C();
          sub_23E537F4C();
          sub_23E537F58();
          sub_23E537F28();
          goto LABEL_71;
        }
        v102 = v50 + 32;
        swift_bridgeObjectRetain_n();
        v52 = 0;
        v53 = v107;
LABEL_44:
        v108 = *(_BYTE *)(v102 + v52);
        a2 = (unint64_t *)objc_msgSend(v53, sel_characteristics);
        sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        v54 = sub_23E5377F0();

        if (v54 >> 62)
        {
          swift_bridgeObjectRetain();
          v55 = sub_23E53803C();
          if (!v55)
          {
LABEL_42:
            swift_bridgeObjectRelease_n();
            goto LABEL_43;
          }
        }
        else
        {
          v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v55)
            goto LABEL_42;
        }
        v56 = 4;
        while (1)
        {
          a2 = (unint64_t *)(v56 - 4);
          v57 = (v54 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x24264F148](v56 - 4, v54)
              : *(id *)(v54 + 8 * v56);
          v58 = v57;
          v59 = v56 - 3;
          if (__OFADD__(a2, 1))
            break;
          v60 = objc_msgSend(v57, sel_characteristicType);
          v61 = sub_23E53755C();
          v63 = v62;

          v64._countAndFlagsBits = v61;
          v64._object = v63;
          LOBYTE(v65) = CharacteristicKind.init(rawValue:)(v64);
          v66 = (char)v110;
          if (v110 == 174)
            v66 = 0;
          LOBYTE(v110) = v66;
          v111 = v108;
          v67 = CharacteristicKind.rawValue.getter(v65);
          v69 = v68;
          v70 = CharacteristicKind.rawValue.getter(v67);
          a2 = v71;
          if (v67 == v70 && v69 == v71)
          {
            swift_bridgeObjectRelease_n();
LABEL_59:
            v73 = swift_bridgeObjectRelease_n();
            a2 = &v112;
            MEMORY[0x24264EA70](v73);
            if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23E537820();
            sub_23E53785C();
            sub_23E537808();
LABEL_43:
            ++v52;
            v53 = v107;
            if (v52 == v104)
            {
              sub_23E3A9AAC((uint64_t)&v114);
              v74 = v112;
              v51 = MEMORY[0x24BEE4AF8];
              goto LABEL_66;
            }
            goto LABEL_44;
          }
          v72 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v72 & 1) != 0)
            goto LABEL_59;

          ++v56;
          if (v59 == v55)
            goto LABEL_42;
        }
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        sub_23E3A9458((uint64_t)a2);
        swift_bridgeObjectRetain();
        v6 = v100;
        v8 = sub_23E53803C();
        if (!v8)
          goto LABEL_99;
        goto LABEL_3;
      }
      v49 = sub_23E538354();
      swift_bridgeObjectRelease();
      v41 = swift_bridgeObjectRelease();
      if ((v49 & 1) != 0)
        goto LABEL_39;
      ++v42;
    }
    while (v43 != v33);
    sub_23E3A9AAC((uint64_t)v115);
    v30 = v115;
LABEL_37:
    sub_23E3A9AAC((uint64_t)v30);

LABEL_5:
    v6 = v100;
    v9 = v101;
  }
  while (v101 != v97);
  swift_bridgeObjectRelease_n();
  v90 = v113;
LABEL_100:
  result = sub_23E3A94A8(v96);
  *a3 = v90;
  return result;
}

void DataModel.characteristics(matching:from:)(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  v4 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v4;
  v8 = *(_QWORD *)(a1 + 32);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_23E3A9458((uint64_t)v7);
  sub_23E4FC6E4(a2, (uint64_t)sub_23E3A9AA4, v5);
}

uint64_t sub_23E3A8130(id *a1, uint64_t a2)
{
  uint64_t result;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  result = (uint64_t)objc_msgSend(*a1, sel_service);
  if (result)
  {
    v4 = (void *)result;
    v35 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v5 = objc_msgSend(v4, sel_serviceType);
    v6 = sub_23E53755C();
    v8 = v7;

    v9._countAndFlagsBits = v6;
    v9._object = v8;
    ServiceKind.init(rawValue:)(v9);
    v10 = *(_QWORD *)(v35 + 16);
    if (v10)
    {
      v11 = (char *)(v35 + 32);
      v12 = swift_bridgeObjectRetain();
      while (1)
      {
        v13 = *v11++;
        LOBYTE(v34) = v13;
        v14 = ServiceKind.rawValue.getter(v12);
        v16 = v15;
        if (v14 == ServiceKind.rawValue.getter(v14) && v16 == v17)
          break;
        v19 = sub_23E538354();
        swift_bridgeObjectRelease();
        v12 = swift_bridgeObjectRelease();
        if ((v19 & 1) != 0)
          goto LABEL_14;
        if (!--v10)
        {
          sub_23E3A9AAC((uint64_t)&v35);
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_14:
      sub_23E3A9AAC((uint64_t)&v35);
      sub_23E3A9AAC((uint64_t)&v35);
      v34 = *(_QWORD *)(a2 + 24);
      v20 = *(_QWORD *)(v34 + 16);
      if (v20)
      {
        swift_bridgeObjectRetain();
        v21 = objc_msgSend(v4, sel_associatedServiceType);
        if (v21)
        {
          v22 = v21;
          v23 = sub_23E53755C();
          v25 = v24;

          v26._countAndFlagsBits = v23;
          v26._object = v25;
          ServiceKind.init(rawValue:)(v26);
        }
        result = swift_bridgeObjectRetain();
        for (i = 0; ; ++i)
        {
          v28 = i + 1;
          if (__OFADD__(i, 1))
            break;
          v29 = ServiceKind.rawValue.getter(result);
          v31 = v30;
          if (v29 == ServiceKind.rawValue.getter(v29) && v31 == v32)
          {
            swift_bridgeObjectRelease_n();
LABEL_26:
            sub_23E3A9AAC((uint64_t)&v34);

            sub_23E3A9AAC((uint64_t)&v34);
            return 1;
          }
          v33 = sub_23E538354();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v33 & 1) != 0)
            goto LABEL_26;
          if (v28 == v20)
          {
            sub_23E3A9AAC((uint64_t)&v34);

            sub_23E3A9AAC((uint64_t)&v34);
            return 0;
          }
        }
        __break(1u);
      }
      else
      {

        return 1;
      }
    }
    else
    {
LABEL_11:
      sub_23E3A9AAC((uint64_t)&v35);

      return 0;
    }
  }
  return result;
}

id sub_23E3A83E4()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  result = objc_msgSend(v0, sel_setFormatWidth_, 4);
  qword_256D45340 = (uint64_t)v0;
  return result;
}

uint64_t sub_23E3A8430(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23E531070();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_23E3A84A8(v6);
  return sub_23E537F28();
}

uint64_t sub_23E3A84A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a1[1];
  result = sub_23E53830C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_23E3A8D70(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v133 = MEMORY[0x24BEE4AF8];
    v128 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        v111 = *v117;
        do
        {
          v112 = v11 - 2;
          if (v11 < 2)
            goto LABEL_145;
          if (!v111)
            goto LABEL_157;
          v113 = *(_QWORD *)&v8[16 * v112 + 32];
          v114 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_23E3A8EF0((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_23E530CC8((uint64_t)v8);
          if (v112 >= *((_QWORD *)v8 + 2))
            goto LABEL_147;
          v115 = &v8[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_148;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_23E537808();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v7 = sub_23E537844();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v118 = *a1 + 16;
  v119 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v125 = v3;
  v129 = *a1;
  while (2)
  {
    v12 = v9 + 1;
    v124 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_45;
    v121 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v14 = *(id *)(v10 + 8 * v12);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_description);
    v17 = sub_23E53755C();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_description);
    v21 = sub_23E53755C();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
      v126 = 0;
    else
      v126 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v12 = v9 + 2;
    v3 = v125;
    if (v9 + 2 >= v125)
      goto LABEL_36;
    v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      v130 = v12;
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v27;
      v30 = objc_msgSend(v28, sel_description);
      v31 = sub_23E53755C();
      v33 = v32;

      v34 = objc_msgSend(v29, sel_description);
      v35 = sub_23E53755C();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if ((v126 & 1) != 0)
        {
          v8 = v121;
          v9 = v124;
          v3 = v125;
          v10 = v129;
          v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v26 = sub_23E538354();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v126 ^ v26) & 1) != 0)
        break;
LABEL_25:
      v12 = v130 + 1;
      ++v25;
      v3 = v125;
      if (v125 == v130 + 1)
      {
        v12 = v125;
        goto LABEL_35;
      }
    }
    v3 = v125;
    v12 = v130;
LABEL_35:
    v9 = v124;
LABEL_36:
    v8 = v121;
    v10 = v129;
    if ((v126 & 1) != 0)
    {
LABEL_37:
      if (v12 < v9)
        goto LABEL_151;
      if (v9 < v12)
      {
        v39 = (uint64_t *)(v119 + 8 * v12);
        v40 = v12;
        v41 = v9;
        v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10)
              goto LABEL_156;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v12, v9))
      goto LABEL_149;
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_23E530794(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v63 = *((_QWORD *)v8 + 2);
      v62 = *((_QWORD *)v8 + 3);
      v11 = v63 + 1;
      if (v63 >= v62 >> 1)
        v8 = sub_23E530794((char *)(v62 > 1), v63 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v64 = v8 + 32;
      v65 = &v8[16 * v63 + 32];
      *(_QWORD *)v65 = v9;
      *((_QWORD *)v65 + 1) = v12;
      v132 = v12;
      if (!v63)
      {
        v11 = 1;
LABEL_14:
        v3 = v125;
        v9 = v132;
        if (v132 >= v125)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v66 = v11 - 1;
        if (v11 >= 4)
        {
          v71 = &v64[16 * v11];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_133;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_134;
          v78 = v11 - 2;
          v79 = &v64[16 * v11 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_136;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_139;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_143;
            v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v95 = *((_QWORD *)v8 + 4);
            v96 = *((_QWORD *)v8 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_99;
          }
          v68 = *((_QWORD *)v8 + 4);
          v67 = *((_QWORD *)v8 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_135;
        v78 = v11 - 2;
        v84 = &v64[16 * v11 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_138;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_141;
        if (__OFADD__(v88, v93))
          goto LABEL_142;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_105:
          if (v94)
            v66 = v78;
          goto LABEL_107;
        }
LABEL_99:
        if ((v89 & 1) != 0)
          goto LABEL_137;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_140;
        if (v100 < v88)
          goto LABEL_14;
LABEL_107:
        v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_155;
        v106 = &v64[16 * v105];
        v107 = *(_QWORD *)v106;
        v108 = &v64[16 * v66];
        v109 = *((_QWORD *)v108 + 1);
        sub_23E3A8EF0((void **)(v10 + 8 * *(_QWORD *)v106), (id *)(v10 + 8 * *(_QWORD *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1)
          goto LABEL_127;
        if (v109 < v107)
          goto LABEL_130;
        if (v66 > *((_QWORD *)v8 + 2))
          goto LABEL_131;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v64[16 * v105 + 8] = v109;
        v110 = *((_QWORD *)v8 + 2);
        if (v66 >= v110)
          goto LABEL_132;
        v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((_QWORD *)v8 + 2) = v110 - 1;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v9, v120))
    goto LABEL_152;
  if (v9 + v120 >= v3)
    v44 = v3;
  else
    v44 = v9 + v120;
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      v123 = v44;
      v45 = v119 + 8 * v12;
      do
      {
        v47 = *(void **)(v10 + 8 * v12);
        v127 = v45;
        v131 = v12;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_description);
          v52 = sub_23E53755C();
          v54 = v53;

          v55 = objc_msgSend(v50, sel_description);
          v56 = sub_23E53755C();
          v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            v10 = v129;
            v46 = v131;
            goto LABEL_56;
          }
          v60 = sub_23E538354();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v129;
          if ((v60 & 1) == 0)
            break;
          if (!v129)
            goto LABEL_154;
          v61 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          v46 = v131;
          if (v131 == v9)
            goto LABEL_56;
        }
        v46 = v131;
LABEL_56:
        v12 = v46 + 1;
        v45 = v127 + 8;
        v9 = v124;
      }
      while (v12 != v123);
      v12 = v123;
      v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E3A8D70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_description);
      v12 = sub_23E53755C();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_description);
      v16 = sub_23E53755C();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = sub_23E538354();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E3A8EF0(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_23E5308A4(&v61, &v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, sel_description);
      v39 = sub_23E53755C();
      v41 = v40;

      v42 = objc_msgSend(v37, sel_description);
      v43 = sub_23E53755C();
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = sub_23E538354();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_description);
        v19 = sub_23E53755C();
        v21 = v20;

        v22 = objc_msgSend(v17, sel_description);
        v23 = sub_23E53755C();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = sub_23E538354();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E3A9304(unint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v11;
  id v12;
  uint64_t v13;

  v13 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_13;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_23E53803C())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v12 = v7;
      sub_23E3A7728(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_23E2593C0(v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E3A9444(uint64_t a1)
{
  uint64_t v1;

  return sub_23E3A2CD4(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(NSObject **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
}

uint64_t sub_23E3A9458(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E3A94A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_23E3A94F4(void **a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  char v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  void *v25;
  char v26;
  uint64_t v27;
  id v28;
  void *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v35;

  v5 = *a1;
  if (a2 >> 62)
    goto LABEL_33;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = a2 & 0xC000000000000001;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v8 = (id)MEMORY[0x24264F148](0, a2);
      }
      else
      {
        if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v8 = *(id *)(a2 + 32);
      }
      v9 = v8;
      sub_23E1E335C(0, (unint64_t *)&qword_254333358);
      v10 = sub_23E537C58();

      if ((v10 & 1) != 0)
        break;
      if (v6 == 1)
        return;
      if (v7)
      {
        v23 = (id)MEMORY[0x24264F148](1, a2);
      }
      else
      {
        if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        {
          __break(1u);
          return;
        }
        v23 = *(id *)(a2 + 40);
      }
      v25 = v23;
      v26 = sub_23E537C58();

      if ((v26 & 1) != 0)
        break;
      v27 = 1;
      while (1)
      {
        v31 = v27 + 1;
        if (__OFADD__(v27, 1))
          break;
        if (v31 == v6)
          return;
        if (v7)
        {
          v28 = (id)MEMORY[0x24264F148](v27 + 1, a2);
        }
        else
        {
          if ((v31 & 0x8000000000000000) != 0)
            goto LABEL_37;
          if (v31 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_38;
          v28 = *(id *)(a2 + 32 + 8 * v31);
        }
        v29 = v28;
        v30 = sub_23E537C58();

        ++v27;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
      __break(1u);
LABEL_33:
      swift_bridgeObjectRetain();
      v6 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v6)
        return;
    }
LABEL_7:
    if (qword_254333DB8 == -1)
      goto LABEL_8;
LABEL_39:
    swift_once();
LABEL_8:
    v11 = sub_23E5371A8();
    __swift_project_value_buffer(v11, (uint64_t)qword_254333D88);
    swift_bridgeObjectRetain_n();
    v12 = v5;
    v13 = sub_23E537190();
    v14 = sub_23E537AF0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v35 = v32;
      *(_DWORD *)v15 = 136315650;
      swift_bridgeObjectRetain();
      sub_23E1FD768(a3, a4, &v35);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2080;
      if (qword_256D3EE10 != -1)
        swift_once();
      v17 = (void *)qword_256D45340;
      v18 = (void *)sub_23E537A60();
      v19 = objc_msgSend(v17, sel_stringForObjectValue_, v18);

      if (v19)
      {
        v20 = sub_23E53755C();
        v22 = v21;

      }
      else
      {
        v20 = 0;
        v22 = 0xE000000000000000;
      }
      sub_23E1FD768(v20, v22, &v35);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2112;
      v24 = v12;
      sub_23E537CF4();
      *v16 = v12;

      _os_log_impl(&dword_23E1DF000, v13, v14, "...{%s)} [%s] will fetch '%@'", (uint8_t *)v15, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v32, -1, -1);
      MEMORY[0x24264FEBC](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_23E3A9980()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3A99A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E3A99C8()
{
  return swift_deallocObject();
}

uint64_t sub_23E3A99D8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23E3A9A0C(uint64_t a1)
{
  uint64_t v1;

  sub_23E3A4FBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23E3A9A1C()
{
  return swift_deallocObject();
}

uint64_t sub_23E3A9A2C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E3A9A58(void *a1)
{
  uint64_t v1;

  return sub_23E3A531C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E3A9A68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3A9AA4(id *a1)
{
  uint64_t v1;

  return sub_23E3A8130(a1, v1 + 16);
}

uint64_t sub_23E3A9AAC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E3A9AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3A9B1C(void **a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t updated;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;

  v49 = a4;
  v50 = a5;
  v48 = a3;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = (_QWORD *)v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if (objc_msgSend(v15, sel_value))
  {
    objc_opt_self();
    v16 = swift_dynamicCastObjCClass();
    swift_unknownObjectRelease();
    if (v16)
    {
      v17 = objc_msgSend(v15, sel_request);
      v18 = objc_msgSend(v17, sel_characteristic);

      swift_beginAccess();
      v19 = (void *)sub_23E296514(v18);
      swift_endAccess();

      if (qword_254334090 != -1)
        swift_once();
      v20 = __swift_project_value_buffer(v8, (uint64_t)qword_254333EE8);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_23E539640;
      v22 = objc_msgSend(v15, sel_request);
      v23 = objc_msgSend(v22, sel_characteristic);

      *(_QWORD *)(v21 + 32) = v23;
      v52[0] = v21;
      sub_23E537808();
      v24 = v52[0];
      v7[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
      v7[4] = sub_23E1F9710(&qword_256D45310, &qword_256D3FDD0, MEMORY[0x24BEE12C8]);
      *v7 = v24;
      swift_storeEnumTagMultiPayload();
      sub_23E537940();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      (*(void (**)(char *, _QWORD *))(v45 + 8))(v14, v46);
    }
  }
  if (qword_254333DB8 != -1)
    swift_once();
  v25 = (_QWORD *)(v50 + 16);
  v26 = sub_23E5371A8();
  __swift_project_value_buffer(v26, (uint64_t)qword_254333D88);
  v27 = v15;
  v28 = v49;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v29 = v27;
  v30 = sub_23E537190();
  v31 = sub_23E537B20();
  if (!os_log_type_enabled(v30, (os_log_type_t)v31))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  LODWORD(v45) = v31;
  v8 = swift_slowAlloc();
  v46 = (_QWORD *)swift_slowAlloc();
  v31 = swift_slowAlloc();
  v52[0] = v31;
  *(_DWORD *)v8 = 136315906;
  swift_bridgeObjectRetain();
  v51 = sub_23E1FD768(v48, v28, v52);
  sub_23E537CF4();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v8 + 12) = 2080;
  swift_beginAccess();
  if (qword_256D3EE10 != -1)
    goto LABEL_22;
  while (1)
  {
    v32 = (void *)qword_256D45340;
    v33 = (void *)sub_23E537A60();
    v34 = objc_msgSend(v32, sel_stringForObjectValue_, v33);

    updated = v31;
    if (v34)
    {
      v35 = sub_23E53755C();
      v37 = v36;

    }
    else
    {
      v35 = 0;
      v37 = 0xE000000000000000;
    }
    v53 = sub_23E1FD768(v35, v37, v52);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2112;
    v38 = objc_msgSend(v29, sel_request);
    v39 = objc_msgSend(v38, sel_characteristic);

    v53 = (uint64_t)v39;
    sub_23E537CF4();
    v40 = v46;
    *v46 = v39;

    *(_WORD *)(v8 + 32) = 2112;
    v41 = objc_msgSend(v29, sel_value);
    v31 = updated;
    if (!v41)
      goto LABEL_17;
    objc_opt_self();
    v42 = swift_dynamicCastObjCClass();
    if (!v42)
    {
      swift_unknownObjectRelease();
LABEL_17:
      v42 = sub_23E537538();
    }
    v53 = v42;
    sub_23E537CF4();
    v40[1] = v42;

    _os_log_impl(&dword_23E1DF000, v30, (os_log_type_t)v45, "...{%s} [%s] fetched characteristic '%@' response %@", (uint8_t *)v8, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v31, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);

LABEL_19:
    result = swift_beginAccess();
    if (!__OFADD__(*v25, 1))
      break;
    __break(1u);
LABEL_22:
    swift_once();
  }
  ++*v25;
  return result;
}

uint64_t sub_23E3AA204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45388);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E3AA27C(void *a1, uint64_t a2)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45388);
  return sub_23E3A2DF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23E3AA2D8(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v2 < v5)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t static ClimateSummarizer.temperatureAverageString(_:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45468);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45478);
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45480);
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45488);
  v11 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(a1);
  v14 = objc_msgSend((id)objc_opt_self(), sel_celsius);
  sub_23E3AD2A8();
  sub_23E536A28();
  sub_23E536A4C();
  sub_23E536D58();
  static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45498);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 0, 1, v15);
  sub_23E536F98();
  sub_23E536A58();
  v16 = sub_23E536A40();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v18);
  return v16;
}

uint64_t static ClimateSummarizer.climateSummary(from:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v22 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  static ClimateSummarizer.temperatureGaugeData(from:)(a1, (uint64_t)&v22 - v9);
  v11 = type metadata accessor for IconTextValueStringDataHolder();
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (v12(v10, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_256D3F310);
  }
  else
  {
    v13 = &v10[*(int *)(v11 + 28)];
    v15 = *(_QWORD *)v13;
    v14 = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    if (v14)
      return v15;
  }
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(a1, 1, (uint64_t)v8);
  if (v12(v8, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_256D3F310);
  }
  else
  {
    v16 = &v8[*(int *)(v11 + 28)];
    v15 = *(_QWORD *)v16;
    v17 = *((_QWORD *)v16 + 1);
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    if (v17)
      return v15;
  }
  static ClimateSummarizer.airQualityGaugeData(from:)(a1, (uint64_t)v5);
  if (v12(v5, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D3F310);
    return 0;
  }
  else
  {
    v18 = &v5[*(int *)(v11 + 28)];
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    if (v20)
      return v19;
    else
      return 0;
  }
}

uint64_t static ClimateSummarizer.temperatureGaugeData(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  _WORD v38[12];
  uint64_t *v39;
  uint64_t v40;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E539650;
  if (qword_256D3EE20 != -1)
    swift_once();
  v5 = unk_256D453A0;
  v6 = qword_256D453A8;
  v7 = unk_256D453B0;
  v8 = qword_256D453B8;
  *(_QWORD *)(v4 + 32) = qword_256D45398;
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 64) = v8;
  v40 = v4;
  MEMORY[0x24BDAC7A8](v5);
  v38[8] = 1;
  v39 = &v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E3AD768, (uint64_t)v38, a1);
  v10 = sub_23E4FDC54(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v10);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    v15 = type metadata accessor for IconTextValueStringDataHolder();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    return swift_bridgeObjectRelease();
  }
  if (v12 == 1)
  {
    v13 = 0;
    v14 = 0.0;
  }
  else
  {
    v13 = v12 & 0x7FFFFFFFFFFFFFFELL;
    v17 = (double *)(v11 + 40);
    v14 = 0.0;
    v18 = v12 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v14 = v14 + *(v17 - 1) + *v17;
      v17 += 2;
      v18 -= 2;
    }
    while (v18);
    if (v12 == v13)
      goto LABEL_12;
  }
  v19 = v12 - v13;
  v20 = (double *)(v11 + 8 * v13 + 32);
  do
  {
    v21 = *v20++;
    v14 = v14 + v21;
    --v19;
  }
  while (v19);
LABEL_12:
  v22 = v14 / (double)v12;
  v23 = _s13HomeDataModel17ClimateSummarizerV15temperatureIconySSSaySdGFZ_0(v11);
  v25 = v24;
  static String.hfLocalized(_:)();
  v27 = v26;
  v29 = v28;
  v30 = static ClimateSummarizer.temperatureRangeString(_:)(v11);
  v32 = v31;
  swift_bridgeObjectRelease();
  sub_23E536F74();
  v33 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v34 = (uint64_t *)(a2 + v33[5]);
  *v34 = v23;
  v34[1] = v25;
  v35 = (_QWORD *)(a2 + v33[6]);
  *v35 = v27;
  v35[1] = v29;
  v36 = (uint64_t *)(a2 + v33[7]);
  *v36 = v30;
  v36[1] = v32;
  v37 = a2 + v33[8];
  *(double *)v37 = v22;
  *(_OWORD *)(v37 + 8) = xmmword_23E54C200;
  *(_BYTE *)(v37 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v33 - 1) + 56))(a2, 0, 1, v33);
}

uint64_t static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  _WORD v37[12];
  uint64_t *v38;
  uint64_t v39;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E539650;
  if (qword_256D3EE30 != -1)
    swift_once();
  v7 = unk_256D453F0;
  v8 = qword_256D453F8;
  v9 = unk_256D45400;
  v10 = qword_256D45408;
  *(_QWORD *)(v6 + 32) = qword_256D453E8;
  *(_QWORD *)(v6 + 40) = v7;
  *(_QWORD *)(v6 + 48) = v8;
  *(_QWORD *)(v6 + 56) = v9;
  *(_QWORD *)(v6 + 64) = v10;
  v39 = v6;
  MEMORY[0x24BDAC7A8](v7);
  v37[8] = 1;
  v38 = &v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E3AD768, (uint64_t)v37, a1);
  v12 = sub_23E4FDC54(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v12);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    v17 = type metadata accessor for IconTextValueStringDataHolder();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    return swift_bridgeObjectRelease();
  }
  if (v14 == 1)
  {
    v15 = 0;
    v16 = 0.0;
  }
  else
  {
    v15 = v14 & 0x7FFFFFFFFFFFFFFELL;
    v19 = (double *)(v13 + 40);
    v16 = 0.0;
    v20 = v14 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v16 = v16 + *(v19 - 1) + *v19;
      v19 += 2;
      v20 -= 2;
    }
    while (v20);
    if (v14 == v15)
      goto LABEL_12;
  }
  v21 = v14 - v15;
  v22 = (double *)(v13 + 8 * v15 + 32);
  do
  {
    v23 = *v22++;
    v16 = v16 + v23;
    --v21;
  }
  while (v21);
LABEL_12:
  v24 = v16 / (double)v14;
  static String.hfLocalized(_:)();
  v26 = v25;
  v28 = v27;
  v29 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(v13, a2 & 1);
  v31 = v30;
  swift_bridgeObjectRelease();
  sub_23E536F74();
  v32 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v33 = a3 + v32[5];
  strcpy((char *)v33, "humidity.fill");
  *(_WORD *)(v33 + 14) = -4864;
  v34 = (_QWORD *)(a3 + v32[6]);
  *v34 = v26;
  v34[1] = v28;
  v35 = (uint64_t *)(a3 + v32[7]);
  *v35 = v29;
  v35[1] = v31;
  v36 = a3 + v32[8];
  *(double *)v36 = v24;
  *(_OWORD *)(v36 + 8) = xmmword_23E54C210;
  *(_BYTE *)(v36 + 24) = 1;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v32 - 1) + 56))(a3, 0, 1, v32);
}

uint64_t static ClimateSummarizer.airQualityGaugeData(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v30;
  _WORD v31[12];
  uint64_t *v32;
  uint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E539650;
  if (qword_256D3EE28 != -1)
    swift_once();
  v5 = *(_QWORD *)algn_256D453C8;
  v6 = qword_256D453D0;
  v7 = unk_256D453D8;
  v8 = qword_256D453E0;
  *(_QWORD *)(v4 + 32) = qword_256D453C0;
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 64) = v8;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v5);
  v31[8] = 1;
  v32 = &v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E3AD768, (uint64_t)v31, a1);
  v10 = sub_23E4FDC54(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = _s13HomeDataModel17ValueAccumulatorsV9intValues4fromSaySiGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(v10);
  swift_bridgeObjectRelease();
  if (!v11[2] || (v12 = sub_23E3AD8A0((uint64_t)v11), (v13 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v30 = type metadata accessor for IconTextValueStringDataHolder();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a2, 1, 1, v30);
  }
  else
  {
    if (__OFSUB__(6, v12))
    {
      __break(1u);
      JUMPOUT(0x23E3AAFECLL);
    }
    v14 = 0xE700000000000000;
    v15 = 0x776F6C2E697161;
    switch(v12)
    {
      case 1:
        break;
      case 5:
        v14 = 0xE800000000000000;
        v15 = 0x686769682E697161;
        break;
      default:
        v15 = 0x6964656D2E697161;
        v14 = 0xEA00000000006D75;
        break;
    }
    v16 = (double)(6 - v12);
    static String.hfLocalized(_:)();
    v18 = v17;
    v20 = v19;
    v21 = _s13HomeDataModel17ClimateSummarizerV21airQualityRangeStringySSSgSaySiGFZ_0((uint64_t)v11);
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_23E536F74();
    v24 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    v25 = (uint64_t *)(a2 + v24[5]);
    *v25 = v15;
    v25[1] = v14;
    v26 = (_QWORD *)(a2 + v24[6]);
    *v26 = v18;
    v26[1] = v20;
    v27 = (uint64_t *)(a2 + v24[7]);
    *v27 = v21;
    v27[1] = v23;
    v28 = a2 + v24[8];
    *(double *)v28 = v16;
    *(_OWORD *)(v28 + 8) = xmmword_23E54C220;
    *(_BYTE *)(v28 + 24) = 1;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v24 - 1) + 56))(a2, 0, 1, v24);
  }
}

double static ClimateSummarizer.doubleAverage(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  double v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v3 = 0.0;
    return v3 / (double)v1;
  }
  if (v1 == 1)
  {
    v2 = 0;
    v3 = 0.0;
LABEL_8:
    v6 = v1 - v2;
    v7 = (double *)(a1 + 8 * v2 + 32);
    do
    {
      v8 = *v7++;
      v3 = v3 + v8;
      --v6;
    }
    while (v6);
    return v3 / (double)v1;
  }
  v2 = v1 & 0x7FFFFFFFFFFFFFFELL;
  v4 = (double *)(a1 + 40);
  v3 = 0.0;
  v5 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v3 = v3 + *(v4 - 1) + *v4;
    v4 += 2;
    v5 -= 2;
  }
  while (v5);
  if (v1 != v2)
    goto LABEL_8;
  return v3 / (double)v1;
}

uint64_t static ClimateSummarizer.temperatureRangeString(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  double v28;
  double v29;
  double *v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v70[2];
  unint64_t v71;
  char *v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v5);
  v75 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45498);
  v7 = *(char **)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v9 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45488);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v70 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v77 = (char *)v70 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v21 = *(double *)(a1 + 32);
    v22 = v20 - 1;
    v71 = v18;
    v72 = v7;
    if (v22)
    {
      v26 = (double *)(a1 + 40);
      v27 = v22;
      v24 = v21;
      do
      {
        v28 = *v26++;
        v29 = v28;
        if (v28 < v24)
          v24 = v29;
        --v27;
      }
      while (v27);
      v23 = v17;
      v30 = (double *)(a1 + 40);
      do
      {
        v31 = *v30++;
        v32 = v31;
        if (v21 < v31)
          v21 = v32;
        --v22;
      }
      while (v22);
    }
    else
    {
      v23 = v17;
      v24 = v21;
    }
    _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(v24);
    v33 = (void *)objc_opt_self();
    v34 = objc_msgSend(v33, sel_celsius);
    v73 = sub_23E3AD2A8();
    sub_23E536A28();
    _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(v21);
    v35 = objc_msgSend(v33, sel_celsius);
    v74 = v16;
    sub_23E536A28();
    static ClimateSummarizer.temperatureNumberFormatStyle.getter();
    sub_23E536F98();
    sub_23E536D58();
    v36 = (void *)sub_23E537B44();
    sub_23E536A64();

    sub_23E536A34();
    v38 = v37;
    v39 = *(void (**)(char *, uint64_t))(v71 + 8);
    v39(v13, v23);
    v79 = v38;
    v40 = v4;
    v41 = v76;
    v71 = sub_23E536D1C();
    v43 = v42;
    v44 = (void (*)(char *, uint64_t))*((_QWORD *)v72 + 1);
    v44(v9, v41);
    static ClimateSummarizer.temperatureNumberFormatStyle.getter();
    sub_23E536F98();
    sub_23E536D58();
    v72 = v40;
    v45 = (void *)sub_23E537B44();
    sub_23E536A64();

    sub_23E536A34();
    v47 = v46;
    v39(v13, v23);
    v79 = v47;
    v48 = sub_23E536D1C();
    v50 = v49;
    v51 = v41;
    v52 = v44;
    v44(v9, v51);
    if (v71 == v48 && v43 == v50)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v53 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0)
      {
        v79 = 0;
        v80 = 0xE000000000000000;
        sub_23E536F98();
        sub_23E536D58();
        v59 = (void *)sub_23E537B44();
        sub_23E536A64();

        sub_23E536A34();
        v61 = v60;
        v39(v13, v23);
        v78 = v61;
        static ClimateSummarizer.temperatureNumberFormatStyle.getter();
        v71 = sub_23E3ADE1C();
        v70[1] = sub_23E3ADE60();
        v62 = v52;
        v63 = v39;
        v64 = v76;
        sub_23E537448();
        v62(v9, v64);
        sub_23E537628();
        swift_bridgeObjectRelease();
        sub_23E537628();
        sub_23E536F98();
        sub_23E536D58();
        v65 = (void *)sub_23E537B44();
        v55 = v74;
        sub_23E536A64();

        sub_23E536A34();
        v67 = v66;
        v63(v13, v23);
        v78 = v67;
        static ClimateSummarizer.temperatureNumberFormatStyle.getter();
        sub_23E537448();
        v68 = v64;
        v39 = v63;
        v62(v9, v68);
        goto LABEL_19;
      }
    }
    v79 = 0;
    v80 = 0xE000000000000000;
    sub_23E536F98();
    sub_23E536D58();
    v54 = (void *)sub_23E537B44();
    v55 = v74;
    sub_23E536A64();

    sub_23E536A34();
    v57 = v56;
    v39(v13, v23);
    v78 = v57;
    static ClimateSummarizer.temperatureNumberFormatStyle.getter();
    sub_23E3ADE1C();
    sub_23E3ADE60();
    v58 = v76;
    sub_23E537448();
    v52(v9, v58);
LABEL_19:
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v25 = v79;
    v39(v55, v23);
    v39(v77, v23);
    return v25;
  }
  return 0x9380E29380E2;
}

uint64_t static ClimateSummarizer.airQualityAverage(_:)(uint64_t a1)
{
  return sub_23E3AD8A0(a1);
}

uint64_t static ClimateSummarizer.airQualityIcon(_:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a2 & 1) != 0)
    return 0x6964656D2E697161;
  v2 = a1 - 1;
  result = 0x776F6C2E697161;
  switch(v2)
  {
    case 0:
      return result;
    case 4:
      result = 0x686769682E697161;
      break;
    default:
      return 0x6964656D2E697161;
  }
  return result;
}

void static ClimateSummarizer.airQualityString(_:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    switch(a1)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

uint64_t sub_23E3AB828(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  double *v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(double *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 != 1)
  {
    v4 = (double *)(a1 + 40);
    do
    {
      v5 = *v4++;
      v6 = v5;
      if (v5 < v2)
        v2 = v6;
      --v3;
    }
    while (v3);
  }
  return *(_QWORD *)&v2;
}

uint64_t static ClimateSummarizer.temperatureNumberFormatStyle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23E536D70();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45498);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F98();
  sub_23E3ADE1C();
  sub_23E536D28();
  sub_23E3AD2A8();
  sub_23E536F98();
  sub_23E536D58();
  v10 = (void *)sub_23E537B44();
  v11 = objc_msgSend((id)objc_opt_self(), sel_celsius);
  sub_23E537C58();

  sub_23E536D64();
  MEMORY[0x24264DFCC](v4, v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t static ClimateSummarizer.preferredTemperatureUnit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23E3AD2A8();
  sub_23E536F98();
  sub_23E536D58();
  return sub_23E537B44();
}

uint64_t static ClimateSummarizer.strippedTemperatureString(_:)(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  unint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45498);
  v21[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45488);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v21 - v12;
  _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(a1);
  v14 = objc_msgSend((id)objc_opt_self(), sel_celsius);
  sub_23E3AD2A8();
  sub_23E536A28();
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_23E536F98();
  sub_23E536D58();
  v15 = (void *)sub_23E537B44();
  sub_23E536A64();

  sub_23E536A34();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  v21[1] = v17;
  static ClimateSummarizer.temperatureNumberFormatStyle.getter();
  sub_23E3ADE1C();
  sub_23E3ADE60();
  sub_23E537448();
  (*(void (**)(char *, uint64_t))(v21[0] + 8))(v4, v2);
  sub_23E537628();
  swift_bridgeObjectRelease();
  v19 = v22;
  v18(v13, v7);
  return v19;
}

double NSUnitTemperature.preferredStepSize.getter()
{
  void *v0;
  id v1;
  char v2;
  id v4;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_fahrenheit);
  sub_23E3AD2A8();
  v2 = sub_23E537C58();

  if ((v2 & 1) != 0)
    return 0.555555556;
  v4 = objc_msgSend(v0, sel_celsius);
  sub_23E537C58();

  return 0.5;
}

uint64_t sub_23E3ABE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E53E0F0;
  if (qword_256D3EE20 != -1)
    swift_once();
  v1 = unk_256D453A0;
  v2 = qword_256D453A8;
  v3 = unk_256D453B0;
  v4 = qword_256D453B8;
  *(_QWORD *)(v0 + 32) = qword_256D45398;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  v5 = qword_256D3EE28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = *(_QWORD *)algn_256D453C8;
  v7 = qword_256D453D0;
  v8 = unk_256D453D8;
  v9 = qword_256D453E0;
  *(_QWORD *)(v0 + 72) = qword_256D453C0;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v9;
  v10 = qword_256D3EE30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1)
    swift_once();
  v11 = unk_256D453F0;
  v12 = qword_256D453F8;
  v13 = unk_256D45400;
  v14 = qword_256D45408;
  *(_QWORD *)(v0 + 112) = qword_256D453E8;
  *(_QWORD *)(v0 + 120) = v11;
  *(_QWORD *)(v0 + 128) = v12;
  *(_QWORD *)(v0 + 136) = v13;
  *(_QWORD *)(v0 + 144) = v14;
  qword_256D45390 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ClimateSummarizer.allClimateSummaryFetchSpecifications.getter()
{
  return sub_23E3AC410(&qword_256D3EE18);
}

void sub_23E3ABFE4()
{
  qword_256D45398 = 0xD000000000000013;
  unk_256D453A0 = 0x800000023E569390;
  qword_256D453A8 = (uint64_t)&unk_250EDDF88;
  unk_256D453B0 = MEMORY[0x24BEE4AF8];
  qword_256D453B8 = (uint64_t)&unk_250EDDFB0;
}

uint64_t static ClimateSummarizer.temperatureSensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EE20 != -1)
    swift_once();
  v2 = unk_256D453A0;
  v3 = qword_256D453A8;
  v4 = unk_256D453B0;
  v5 = qword_256D453B8;
  *a1 = qword_256D45398;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E3AC0B0()
{
  qword_256D453C0 = 0xD000000000000013;
  *(_QWORD *)algn_256D453C8 = 0x800000023E569330;
  qword_256D453D0 = (uint64_t)&unk_250EDE028;
  unk_256D453D8 = MEMORY[0x24BEE4AF8];
  qword_256D453E0 = (uint64_t)&unk_250EDE050;
}

uint64_t static ClimateSummarizer.airQualitySensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EE28 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D453C8;
  v3 = qword_256D453D0;
  v4 = unk_256D453D8;
  v5 = qword_256D453E0;
  *a1 = qword_256D453C0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E3AC17C()
{
  qword_256D453E8 = 0xD000000000000010;
  unk_256D453F0 = 0x800000023E569350;
  qword_256D453F8 = (uint64_t)&unk_250EDDFD8;
  unk_256D45400 = MEMORY[0x24BEE4AF8];
  qword_256D45408 = (uint64_t)&unk_250EDE000;
}

uint64_t static ClimateSummarizer.humiditySensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EE30 != -1)
    swift_once();
  v2 = unk_256D453F0;
  v3 = qword_256D453F8;
  v4 = unk_256D45400;
  v5 = qword_256D45408;
  *a1 = qword_256D453E8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E3AC248()
{
  qword_256D45410 = 0xD000000000000017;
  *(_QWORD *)algn_256D45418 = 0x800000023E569310;
  qword_256D45420 = (uint64_t)&unk_250EDEA90;
  unk_256D45428 = MEMORY[0x24BEE4AF8];
  qword_256D45430 = (uint64_t)&unk_250EDEAB8;
}

uint64_t static ClimateSummarizer.carbonMonoxideSensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EE38 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D45418;
  v3 = qword_256D45420;
  v4 = unk_256D45428;
  v5 = qword_256D45430;
  *a1 = qword_256D45410;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E3AC314()
{
  qword_256D45438 = 0xD000000000000016;
  unk_256D45440 = 0x800000023E5692F0;
  qword_256D45448 = (uint64_t)&unk_250EDEAE0;
  unk_256D45450 = MEMORY[0x24BEE4AF8];
  qword_256D45458 = (uint64_t)&unk_250EDEB08;
}

uint64_t static ClimateSummarizer.carbonDioxideSensorsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3EE40 != -1)
    swift_once();
  v2 = unk_256D45440;
  v3 = qword_256D45448;
  v4 = unk_256D45450;
  v5 = qword_256D45458;
  *a1 = qword_256D45438;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E3AC3E0()
{
  qword_256D45460 = (uint64_t)&unk_250EDEB30;
}

uint64_t static ClimateSummarizer.climateSensorServiceKinds.getter()
{
  return sub_23E3AC410(&qword_256D3EE48);
}

uint64_t sub_23E3AC410(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E3AC448(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v17;
  char v18[16];
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t (*v26)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v27;
  uint64_t v28;

  v8 = type metadata accessor for StaticAccessory(0);
  v28 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v28 + 64);
  v10 = *(_QWORD *)(a1 + *(int *)(MEMORY[0x24BDAC7A8](v8) + 80));
  v19 = a1;
  swift_bridgeObjectRetain();
  v11 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)v18, v10);
  swift_bridgeObjectRelease();
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a2;
  *(_QWORD *)&v24 = v11;
  *((_QWORD *)&v24 + 1) = sub_23E3ADECC;
  v25 = v12;
  *(_BYTE *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D454B0);
  sub_23E538030();
  swift_release();
  v20 = v22;
  v21 = v23;
  *(_QWORD *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  sub_23E538030();
  swift_release();
  v13 = v25;
  v17 = v24;
  sub_23E1E2F50(a1, (uint64_t)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], type metadata accessor for StaticAccessory);
  v14 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  sub_23E1E2FDC((uint64_t)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], v15 + v14, type metadata accessor for StaticAccessory);
  v24 = v17;
  v25 = v13;
  v26 = sub_23E3ADEF8;
  v27 = v15;
  swift_bridgeObjectRetain();
  return sub_23E4FB960((uint64_t *)&v24);
}

uint64_t sub_23E3AC66C(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v17;
  char v18[16];
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t (*v26)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v27;
  uint64_t v28;

  v8 = type metadata accessor for StaticAccessory(0);
  v28 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v28 + 64);
  v10 = *(_QWORD *)(a1 + *(int *)(MEMORY[0x24BDAC7A8](v8) + 80));
  v19 = a1;
  swift_bridgeObjectRetain();
  v11 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v18, v10);
  swift_bridgeObjectRelease();
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a2;
  *(_QWORD *)&v24 = v11;
  *((_QWORD *)&v24 + 1) = sub_23E3AE3AC;
  v25 = v12;
  *(_BYTE *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D454B0);
  sub_23E538030();
  swift_release();
  v20 = v22;
  v21 = v23;
  *(_QWORD *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  sub_23E538030();
  swift_release();
  v13 = v25;
  v17 = v24;
  sub_23E1E2F50(a1, (uint64_t)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], type metadata accessor for StaticAccessory);
  v14 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  sub_23E1E2FDC((uint64_t)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 16], v15 + v14, type metadata accessor for StaticAccessory);
  v24 = v17;
  v25 = v13;
  v26 = sub_23E3AE310;
  v27 = v15;
  swift_bridgeObjectRetain();
  return sub_23E4FB960((uint64_t *)&v24);
}

uint64_t sub_23E3AC890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v48 = type metadata accessor for StaticService();
  v4 = MEMORY[0x24BDAC7A8](v48);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v52 = (uint64_t)v44 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v44 - v8;
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    return 0;
  v47 = v7;
  v11 = a2 + 32;
  v44[1] = a2;
  swift_bridgeObjectRetain();
  v12 = 0;
  LOBYTE(v13) = 0;
  v51 = v9;
  v49 = a1;
  v45 = a2 + 32;
  v46 = v10;
  do
  {
    v14 = (_QWORD *)(v11 + 40 * v12);
    v15 = v14[2];
    v53 = v14[1];
    v16 = v14[3];
    v17 = v14[4];
    sub_23E1E2F50(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v13 & 1) != 0)
    {
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v13 = 1;
    }
    else
    {
      v18 = *(_QWORD *)(v15 + 16);
      if (v18)
      {
        v19 = v9[*(int *)(v48 + 84)];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50 = v17;
        v20 = swift_bridgeObjectRetain();
        v21 = 0;
        while (1)
        {
          v57 = *(_BYTE *)(v15 + v21 + 32);
          v56 = v19;
          v22 = ServiceKind.rawValue.getter(v20);
          v24 = v23;
          if (v22 == ServiceKind.rawValue.getter(v22) && v24 == v25)
            break;
          v27 = sub_23E538354();
          swift_bridgeObjectRelease();
          v20 = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_18;
          if (v18 == ++v21)
          {
            swift_bridgeObjectRelease_n();
            v11 = v45;
            v10 = v46;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_18:
        swift_bridgeObjectRelease_n();
        v29 = v52;
        sub_23E1E2F50((uint64_t)v51, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v30 = *(_QWORD *)(v16 + 16);
        v31 = v29;
        v32 = v47;
        sub_23E1E2F50(v31, v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v30)
        {
          if (*(_BYTE *)(v32 + *(int *)(v48 + 92)) == 53)
            v33 = 0;
          else
            v33 = *(_BYTE *)(v32 + *(int *)(v48 + 92));
          v34 = swift_bridgeObjectRetain_n();
          v35 = 0;
          while (1)
          {
            v55 = *(_BYTE *)(v16 + v35 + 32);
            v54 = v33;
            v36 = ServiceKind.rawValue.getter(v34);
            v38 = v37;
            if (v36 == ServiceKind.rawValue.getter(v36) && v38 == v39)
              break;
            v41 = sub_23E538354();
            swift_bridgeObjectRelease();
            v34 = swift_bridgeObjectRelease();
            if ((v41 & 1) != 0)
              goto LABEL_32;
            if (v30 == ++v35)
            {
              v13 = 0;
              goto LABEL_33;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_32:
          v13 = 1;
LABEL_33:
          a1 = v49;
          v11 = v45;
          v10 = v46;
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v13 = 1;
          a1 = v49;
          v11 = v45;
          v10 = v46;
        }
        sub_23E1E2FA0(v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0(v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v42 = (uint64_t)v51;
        sub_23E1E2FA0((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v9 = (char *)v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        v9 = v51;
        v28 = v52;
        sub_23E1E2F50((uint64_t)v51, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0(v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = 0;
        a1 = v49;
      }
    }
    ++v12;
  }
  while (v12 != v10);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23E3ACCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v51 = a3;
  v55 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticCharacteristic();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v46 = (uint64_t)&v38 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v47 = (uint64_t)&v38 - v15;
  result = MEMORY[0x24BEE4AF8];
  v56 = MEMORY[0x24BEE4AF8];
  v40 = *(_QWORD *)(a2 + 16);
  if (v40)
  {
    v38 = a2;
    v39 = a2 + 32;
    swift_bridgeObjectRetain();
    v17 = 0;
    v45 = v8;
    while (1)
    {
      v18 = (_QWORD *)(v39 + 40 * v17);
      v19 = v18[4];
      v20 = *(_QWORD *)(v19 + 16);
      if (v20)
        break;
      v25 = MEMORY[0x24BEE4AF8];
LABEL_4:
      ++v17;
      sub_23E25941C(v25);
      if (v17 == v40)
      {
        swift_bridgeObjectRelease();
        return v56;
      }
    }
    v44 = v17;
    v21 = v18[1];
    v22 = v18[2];
    v23 = v18[3];
    v54 = *(int *)(type metadata accessor for StaticService() + 104);
    v43 = v21;
    swift_bridgeObjectRetain();
    v42 = v22;
    swift_bridgeObjectRetain();
    v41 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v24 = 0;
    v52 = v20;
    v25 = MEMORY[0x24BEE4AF8];
    v26 = v52;
    while (1)
    {
      v27 = *(_QWORD *)(v55 + v54);
      if (*(_QWORD *)(v27 + 16))
      {
        v28 = *(unsigned __int8 *)(v19 + v24 + 32);
        swift_bridgeObjectRetain();
        v29 = sub_23E1EAF70(v28);
        if ((v30 & 1) != 0)
        {
          sub_23E1E2F50(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v8 + 72) * v29, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          v31 = 0;
        }
        else
        {
          v31 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v31, 1, v7);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        {
          v32 = v50;
          sub_23E1E2FDC((uint64_t)v6, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          v33 = v46;
          sub_23E1E2F50(v51, v46, type metadata accessor for StaticAccessory);
          v34 = v49;
          sub_23E1E2F50(v55, v33 + *(int *)(v49 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FDC(v32, v33 + *(int *)(v34 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          v35 = v47;
          sub_23E1E2FDC(v33, v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          sub_23E1E2FDC(v35, v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v25 = sub_23E51F318(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
          v8 = v45;
          v26 = v52;
          v37 = *(_QWORD *)(v25 + 16);
          v36 = *(_QWORD *)(v25 + 24);
          if (v37 >= v36 >> 1)
            v25 = sub_23E51F318(v36 > 1, v37 + 1, 1, v25);
          *(_QWORD *)(v25 + 16) = v37 + 1;
          sub_23E1E2FDC(v53, v25+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
          goto LABEL_9;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      }
      sub_23E1E7C64((uint64_t)v6, &qword_2543332A0);
LABEL_9:
      if (v26 == ++v24)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v17 = v44;
        goto LABEL_4;
      }
    }
  }
  return result;
}

uint64_t sub_23E3AD124@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_23E3AC448(a1, a2, a3, *a4);
  if (!v5)
    *a5 = result;
  return result;
}

double _s13HomeDataModel17ClimateSummarizerV18roundedTemperatureyS2dFZ_0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  char v7;
  double v8;
  id v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45470);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v3);
  sub_23E3AD2A8();
  sub_23E536F98();
  sub_23E536D58();
  v4 = (void *)sub_23E537B44();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_fahrenheit);
  v7 = sub_23E537C58();

  if ((v7 & 1) != 0)
  {
    v8 = 0.555555556;
  }
  else
  {
    v9 = objc_msgSend(v5, sel_celsius);
    sub_23E537C58();

    v8 = 0.5;
    v4 = v9;
  }

  return v8 * round(a1 / v8);
}

unint64_t sub_23E3AD2A8()
{
  unint64_t result;

  result = qword_256D45490;
  if (!qword_256D45490)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D45490);
  }
  return result;
}

uint64_t _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;
  double *v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_23E536FB0();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return 0;
  v10 = *(double *)(a1 + 32);
  v11 = v9 - 1;
  if (v11)
  {
    v13 = (double *)(a1 + 40);
    v14 = v11;
    v12 = *(double *)(a1 + 32);
    do
    {
      v15 = *v13++;
      v16 = v15;
      if (v15 < v12)
        v12 = v16;
      --v14;
    }
    while (v14);
    v17 = (double *)(a1 + 40);
    do
    {
      v18 = *v17++;
      v19 = v18;
      if (v10 < v18)
        v10 = v19;
      --v11;
    }
    while (v11);
  }
  else
  {
    v12 = *(double *)(a1 + 32);
  }
  v20 = round(v12);
  if (v20 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((*(_QWORD *)&v20 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_37;
  v21 = round(v10);
  if ((*(_QWORD *)&v21 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_37;
  if (v21 <= -9.22337204e18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v21 < 9.22337204e18)
  {
    HIDWORD(v47) = a2;
    v22 = (uint64_t)v20;
    v23 = (uint64_t)v21;
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    objc_msgSend(v24, sel_setNumberStyle_, 1);
    objc_msgSend(v24, sel_setUsesSignificantDigits_, 0);
    sub_23E536FA4();
    v25 = (void *)sub_23E536F8C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v24, sel_setLocale_, v25);

    if (v22 != v23)
    {
      v30 = (void *)sub_23E537A60();
      v31 = objc_msgSend(v24, sel_stringFromNumber_, v30);

      if (v31)
      {
        v32 = sub_23E53755C();
        v34 = v33;

      }
      else
      {
        v48 = v22;
        v32 = sub_23E538318();
        v34 = v37;
      }
      v38 = (void *)sub_23E537A60();
      v39 = objc_msgSend(v24, sel_stringFromNumber_, v38);

      if (v39)
      {
        v40 = sub_23E53755C();
        v42 = v41;

      }
      else
      {
        v48 = v23;
        v40 = sub_23E538318();
        v42 = v43;
      }
      static String.hfLocalized(_:)();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_23E53B510;
      v45 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v44 + 56) = MEMORY[0x24BEE0D00];
      v46 = sub_23E2AEAC0();
      *(_QWORD *)(v44 + 32) = v32;
      *(_QWORD *)(v44 + 40) = v34;
      *(_QWORD *)(v44 + 96) = v45;
      *(_QWORD *)(v44 + 104) = v46;
      *(_QWORD *)(v44 + 64) = v46;
      *(_QWORD *)(v44 + 72) = v40;
      *(_QWORD *)(v44 + 80) = v42;
      v29 = sub_23E537580();

      swift_bridgeObjectRelease();
      return v29;
    }
    if ((v47 & 0x100000000) != 0)
    {
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
      objc_msgSend(v26, sel_setNumberStyle_, 3);
      v27 = (void *)sub_23E5379AC();
      v28 = objc_msgSend(v26, sel_stringFromNumber_, v27);

      if (v28)
      {
        v29 = sub_23E53755C();

        return v29;
      }

    }
    else
    {
      v35 = (void *)sub_23E537A60();
      v36 = objc_msgSend(v24, sel_stringFromNumber_, v35);

      if (v36)
      {
        v29 = sub_23E53755C();

        return v29;
      }

    }
    return 0;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23E3AD768@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23E3AD868(a1, a2);
}

uint64_t _s13HomeDataModel17ClimateSummarizerV15temperatureIconySSSaySdGFZ_0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  double v10;
  double v11;

  result = 0xD000000000000012;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 0;
      v5 = 0.0;
    }
    else
    {
      v4 = v3 & 0x7FFFFFFFFFFFFFFELL;
      v6 = (double *)(a1 + 40);
      v5 = 0.0;
      v7 = v3 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v5 = v5 + *(v6 - 1) + *v6;
        v6 += 2;
        v7 -= 2;
      }
      while (v7);
      if (v3 == v4)
        goto LABEL_10;
    }
    v8 = v3 - v4;
    v9 = (double *)(a1 + 8 * v4 + 32);
    do
    {
      v10 = *v9++;
      v5 = v5 + v10;
      --v8;
    }
    while (v8);
LABEL_10:
    v11 = v5 / (double)v3;
    if (v11 >= 15.0)
    {
      if (v11 >= 21.0)
        return 0xD000000000000010;
    }
    else
    {
      return 0x656D6F6D72656874;
    }
  }
  return result;
}

uint64_t sub_23E3AD868@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_23E3AC448(a1, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17), **(_QWORD **)(v2 + 24));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23E3AD8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double v18;
  uint64_t result;
  double *v20;
  unint64_t v21;
  double v22;
  double v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
  {
    v5 = MEMORY[0x24BEE4AF8];
    v9 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v9)
      goto LABEL_11;
LABEL_18:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x24BEE4AF8];
  do
  {
    v8 = *(_QWORD *)(a1 + 8 * v4 + 32);
    if (v8)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2CB08C(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v7 = *(_QWORD *)(v5 + 16);
      v6 = *(_QWORD *)(v5 + 24);
      if (v7 >= v6 >> 1)
        sub_23E2CB08C(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v5 + 16) = v7 + 1;
      *(_QWORD *)(v5 + 8 * v7 + 32) = v8;
    }
    ++v4;
  }
  while (v1 != v4);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v5 + 16);
  if (!v9)
    goto LABEL_18;
LABEL_11:
  v24 = v2;
  sub_23E2CB0A8(0, v9, 0);
  v10 = 0;
  v11 = *(_QWORD *)(v24 + 16);
  v12 = v11;
  do
  {
    v13 = *(_QWORD *)(v5 + 8 * v10 + 32);
    v14 = *(_QWORD *)(v24 + 24);
    v15 = v12 + 1;
    if (v12 >= v14 >> 1)
      sub_23E2CB0A8(v14 > 1, v12 + 1, 1);
    ++v10;
    *(_QWORD *)(v24 + 16) = v15;
    *(double *)(v24 + 8 * v12++ + 32) = (double)v13;
  }
  while (v9 != v10);
  v16 = v9 + v11;
  if (v9 + v11 < 2)
  {
    v17 = 0;
    v18 = 0.0;
    do
    {
LABEL_22:
      v22 = *(double *)(v24 + 32 + 8 * v17++);
      v18 = v18 + v22;
    }
    while (v15 != v17);
    goto LABEL_23;
  }
  v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
  v20 = (double *)(v24 + 40);
  v18 = 0.0;
  v21 = v16 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    v18 = v18 + *(v20 - 1) + *v20;
    v20 += 2;
    v21 -= 2;
  }
  while (v21);
  if (v16 != v17)
    goto LABEL_22;
LABEL_23:
  swift_release();
  result = swift_release();
  v23 = round(fmax(fmin(v18 / (double)v9, 5.0), 1.0));
  if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v23 < 9.22337204e18)
    return (uint64_t)v23;
LABEL_29:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel17ClimateSummarizerV21airQualityRangeStringySSSgSaySiGFZ_0(uint64_t a1)
{
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  int8x8_t v4;
  unint64_t v5;
  int64x2_t v6;
  int64x2_t *v7;
  unint64_t v8;
  int64x2_t v9;
  int8x16_t v10;
  uint64_t v11;
  unint64_t v12;
  int8x8_t *v13;
  int8x8_t v14;
  int8x8_t v15;
  unint64_t v16;
  int64x2_t v17;
  int64x2_t *v18;
  unint64_t v19;
  int64x2_t v20;
  int8x16_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t *v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(a1 + 32);
  v3 = v1 - 1;
  if (v1 == 1)
  {
    v4 = *(int8x8_t *)(a1 + 32);
    goto LABEL_22;
  }
  if (v1 >= 5)
  {
    v6 = vdupq_n_s64(v2);
    v5 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
    v7 = (int64x2_t *)(a1 + 56);
    v8 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    v9 = v6;
    do
    {
      v6 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v6, v7[-1]), (int8x16_t)v7[-1], (int8x16_t)v6);
      v9 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v9, *v7), *(int8x16_t *)v7, (int8x16_t)v9);
      v7 += 2;
      v8 -= 4;
    }
    while (v8);
    v10 = vbslq_s8((int8x16_t)vcgtq_s64(v9, v6), (int8x16_t)v6, (int8x16_t)v9);
    v11 = vextq_s8(v10, v10, 8uLL).u64[0];
    v4 = vbsl_s8((int8x8_t)vcgtd_s64(v11, v10.i64[0]), *(int8x8_t *)v10.i8, (int8x8_t)v11);
    if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL))
      goto LABEL_13;
  }
  else
  {
    v5 = 1;
    v4 = *(int8x8_t *)(a1 + 32);
  }
  v12 = v1 - v5;
  v13 = (int8x8_t *)(a1 + 8 * v5 + 32);
  do
  {
    v15 = *v13++;
    v14 = v15;
    if (*(_QWORD *)&v15 < *(_QWORD *)&v4)
      v4 = v14;
    --v12;
  }
  while (v12);
LABEL_13:
  if (v1 < 5)
  {
    v16 = 1;
    goto LABEL_18;
  }
  v16 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
  v17 = vdupq_n_s64(v2);
  v18 = (int64x2_t *)(a1 + 56);
  v19 = v3 & 0xFFFFFFFFFFFFFFFCLL;
  v20 = v17;
  do
  {
    v17 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v17, v18[-1]), (int8x16_t)v17, (int8x16_t)v18[-1]);
    v20 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v20, *v18), (int8x16_t)v20, *(int8x16_t *)v18);
    v18 += 2;
    v19 -= 4;
  }
  while (v19);
  v21 = vbslq_s8((int8x16_t)vcgtq_s64(v17, v20), (int8x16_t)v17, (int8x16_t)v20);
  v22 = vextq_s8(v21, v21, 8uLL).u64[0];
  v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v21.i64[0], v22), *(int8x8_t *)v21.i8, (int8x8_t)v22);
  if (v3 != (v3 & 0xFFFFFFFFFFFFFFFCLL))
  {
LABEL_18:
    v23 = v1 - v16;
    v24 = (int64_t *)(a1 + 8 * v16 + 32);
    do
    {
      v26 = *v24++;
      v25 = v26;
      if (v2 <= v26)
        v2 = v25;
      --v23;
    }
    while (v23);
  }
LABEL_22:
  switch((unint64_t)v4)
  {
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      static String.hfLocalized(_:)();
      v28 = v27;
      v30 = v29;
      switch(v2)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          static String.hfLocalized(_:)();
          if (v28 == v32 && v30 == v31 || (sub_23E538354() & 1) != 0)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_23E537628();
            sub_23E537628();
            swift_bridgeObjectRelease();
          }
          break;
        default:
          swift_bridgeObjectRelease();
          return 0;
      }
      break;
    default:
      return 0;
  }
  return v28;
}

unint64_t sub_23E3ADE1C()
{
  unint64_t result;

  result = qword_256D454A0;
  if (!qword_256D454A0)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_256D454A0);
  }
  return result;
}

unint64_t sub_23E3ADE60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D454A8;
  if (!qword_256D454A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D45498);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD4C0], v1);
    atomic_store(result, (unint64_t *)&qword_256D454A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClimateSummarizer()
{
  return &type metadata for ClimateSummarizer;
}

uint64_t sub_23E3ADEBC()
{
  return swift_deallocObject();
}

uint64_t sub_23E3ADECC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E4838D4(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23E3ADED4()
{
  return swift_deallocObject();
}

uint64_t sub_23E3ADEE4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E483974(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_23E3ADEEC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E3AC890(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E3ADEF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticAccessory(0) - 8) + 80);
  result = sub_23E3ACCBC(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
  *a2 = result;
  return result;
}

uint64_t sub_23E3ADF4C()
{
  return swift_deallocObject();
}

uint64_t sub_23E3ADF5C()
{
  return swift_deallocObject();
}

uint64_t sub_23E3ADF6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3ADF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v2 = *(_QWORD *)(v1 + 16);
  v4[2] = a1;
  return sub_23E288B08(0, (void (*)(uint64_t *__return_ptr, char *, _QWORD *))sub_23E3AE394, (uint64_t)v4, v2) & 1;
}

uint64_t objectdestroy_10Tm_0()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int EnumCaseMultiPayload;
  unint64_t v19;

  v1 = (int *)type metadata accessor for StaticAccessory(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + v2;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(v0 + v2, v4);
  swift_bridgeObjectRelease();
  v7 = v0 + v2 + v1[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6(v7, v4);
  else
    swift_bridgeObjectRelease();
  v8 = v3 + v1[7];
  v9 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = v3 + v1[8];
  v11 = sub_23E536F20();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v6(v3 + v1[11], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v3 + v1[21];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    v6(v14, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v3 + v1[26];
  v16 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v6(v15, v4);
    v17 = v15 + *(int *)(v16 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v19 = v17 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v13(v19, 1, v11))
        (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v19, v11);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      v6(v17, v4);
      type metadata accessor for StaticHH2Update(0);
LABEL_18:
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E3AE310@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[6];

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticAccessory(0) - 8) + 80);
  v6 = *(_QWORD *)(v2 + 16);
  v8[2] = a1;
  v8[3] = v2 + ((v5 + 24) & ~v5);
  result = sub_23E288FD8((void (*)(uint64_t *__return_ptr, _QWORD *))sub_23E3AE37C, (uint64_t)v8, v6);
  *a2 = result;
  return result;
}

uint64_t sub_23E3AE37C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E483DC4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23E3AE394@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;

  return sub_23E483A14(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

id COTimerManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AE3D0(a1, a2, a3, (SEL *)&selRef_addTimer_);
}

id COTimerManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AE3D0(a1, a2, a3, (SEL *)&selRef_updateTimer_);
}

id sub_23E3AE3D0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  void *v12;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E335C(0, (unint64_t *)&qword_256D454B8);
  swift_dynamicCast();
  v8 = v12;
  v9 = objc_msgSend(v4, *a4, v12);

  return v9;
}

id COTimerManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AE3D0(a1, a2, a3, (SEL *)&selRef_removeTimer_);
}

Swift::String __swiftcall COTimerManager.description()()
{
  id v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  Swift::String result;
  objc_super v7;

  v7.super_class = (Class)MEMORY[0x24BE19E60];
  v0 = objc_msgSendSuper2(&v7, sel_description);
  v1 = sub_23E53755C();
  v3 = v2;

  v4 = v1;
  v5 = v3;
  result._object = v5;
  result._countAndFlagsBits = v4;
  return result;
}

id sub_23E3AE50C()
{
  id *v0;

  return objc_msgSend(*v0, sel_timers);
}

id sub_23E3AE530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.add<A>(_:)(a1, a2, a3);
}

id sub_23E3AE550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.update<A>(_:)(a1, a2, a3);
}

id sub_23E3AE570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COTimerManager.remove<A>(_:)(a1, a2, a3);
}

id sub_23E3AE590()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_dismissTimerWithIdentifier_, v2);

  return v3;
}

id sub_23E3AE5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v7 = *v4;
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23E45F80C;
  v11[3] = &block_descriptor_23;
  v8 = _Block_copy(v11);
  swift_retain();
  v9 = objc_msgSend(v7, sel_addObserverForName_queue_usingBlock_, a1, a2, v8);
  _Block_release(v8);
  swift_release();
  return v9;
}

uint64_t sub_23E3AE6A0(_QWORD *a1)
{
  void **v1;
  void *v2;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  objc_msgSend(v2, sel_removeObserver_, sub_23E538348());
  return swift_unknownObjectRelease();
}

uint64_t sub_23E3AE6EC()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_description);
  v2 = sub_23E53755C();

  return v2;
}

id sub_23E3AE740()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v2 = (void *)sub_23E5377E4();
  v3 = objc_msgSend(v1, sel_timersForAccessories_, v2);

  return v3;
}

id sub_23E3AE7B0(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_timersForAccessory_, a1);
}

id sub_23E3AE7D8()
{
  id *v0;

  return objc_msgSend(*v0, sel__canDispatchForAssociatedAccessory);
}

uint64_t sub_23E3AE7F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  uint64_t result;

  swift_getObjectType();
  v6 = sub_23E3B0170((uint64_t)a1, a2);

  result = swift_unknownObjectRelease();
  *a3 = v6;
  return result;
}

uint64_t dispatch thunk of HomeTimerManager.timers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeTimerManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of HomeTimerManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of HomeTimerManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HomeTimerManager.dismissTimer(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HomeTimerManager.addObserver(forName:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of HomeTimerManager.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HomeTimerManager.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeTimerManager.timers(forAccessories:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HomeTimerManager.timers(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of HomeTimerManager._canDispatchForAssociatedAccessory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HomeTimerManager.init(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

_QWORD *sub_23E3AE8B4(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v2 = (_QWORD *)v1;
  *(_BYTE *)(v1 + 16) = 0;
  v4 = MEMORY[0x24BEE4AF8];
  v2[4] = MEMORY[0x24BEE4AF8];
  v2[5] = sub_23E222EE8(v4);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1650]), sel_init);
  v2[3] = v5;
  sub_23E1E335C(0, &qword_256D45630);
  v6 = v5;
  v7 = (void *)MEMORY[0x24264EE9C](v4);
  v8 = a1;
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_23E3AE994()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_keyEnumerator);
  v2 = objc_msgSend(v1, sel_allObjects);

  v3 = sub_23E5377F0();
  if (!*(_QWORD *)(v3 + 16))
  {
    v6 = 0u;
    v7 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_23E1EA57C(v3 + 32, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v7 + 1))
  {
LABEL_7:
    sub_23E1E7C64((uint64_t)&v6, &qword_254332260);
    return 0;
  }
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  if (swift_dynamicCast())
    return v5;
  else
    return 0;
}

uint64_t sub_23E3AEA98(unint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1650]), sel_init);
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v3);

    return (uint64_t)v11;
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v4 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = *(void **)(v1 + 24);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x24264F148](v6, a1);
      else
        v8 = *(id *)(a1 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      v10 = objc_msgSend(v7, sel_objectForKey_, v8);
      objc_msgSend(v3, sel_setObject_forKey_, v10, v9);

    }
    while (v4 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E3AEBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t result;
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  __int128 v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_23E3AE994();
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(_QWORD *)(v2 + 40);
    if (*(_QWORD *)(v8 + 16) && (v9 = sub_23E211704(0), (v10 & 1) != 0))
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = v11 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_23E1FF9C8(v13, (uint64_t)v24);
          if ((sub_23E3AF29C((uint64_t)v24, a1, a2) & 1) != 0)
            break;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
          v13 += 40;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        sub_23E1E6C84(v24, (uint64_t)&v25);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        v27 = 0;
        v25 = 0u;
        v26 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v26 + 1))
      {
        sub_23E1E7C64((uint64_t)&v25, &qword_256D40C00);
        sub_23E3B012C();
        v22 = (void *)swift_allocError();
        *v23 = 0xD000000000000010;
        v23[1] = 0x800000023E569490;
        v17 = (id)sub_23E536D04();
        v18 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v17);

        goto LABEL_14;
      }
    }
    else
    {
      v27 = 0;
      v25 = 0u;
      v26 = 0u;
    }
    sub_23E1E7C64((uint64_t)&v25, &qword_256D40C00);
    v14 = *(void **)(v3 + 24);
    v15 = objc_msgSend(v14, sel_objectForKey_, v7);
    if (!v15)
    {
      sub_23E1E335C(0, &qword_256D45630);
      v15 = (id)MEMORY[0x24264EE9C](MEMORY[0x24BEE4AF8]);
    }
    v16 = objc_msgSend(v15, sel_arrayByAddingObject_, sub_23E538348());
    swift_unknownObjectRelease();
    if (v16)
    {
      objc_msgSend(v14, sel_setObject_forKey_, v16, v7);

      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v18 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v17);

LABEL_14:
      return (uint64_t)v18;
    }
    __break(1u);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v21 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id sub_23E3AEF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AEF5C(a1, a2, a3, 1u, 0x800000023E569470, (uint64_t (*)(_OWORD *))sub_23E3B01AC);
}

id sub_23E3AEF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AEF5C(a1, a2, a3, 2u, 0x800000023E569450, (uint64_t (*)(_OWORD *))sub_23E3B010C);
}

id sub_23E3AEF5C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t (*a6)(_OWORD *))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  __int128 v36[3];
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v10 = v6;
  v13 = sub_23E3AE994();
  if (!v13)
  {
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v29 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v28);

    return v29;
  }
  v14 = (void *)v13;
  v15 = *(_QWORD *)(v6 + 40);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_23E211704(a4), (v17 & 1) != 0))
  {
    v35 = a5;
    v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = v18 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_23E1FF9C8(v20, (uint64_t)v36);
        if ((sub_23E3AF29C((uint64_t)v36, a1, a2) & 1) != 0)
          break;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        v20 += 40;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      sub_23E1E6C84(v36, (uint64_t)&v37);
      swift_bridgeObjectRelease();
      v30 = v35;
      if (*((_QWORD *)&v38 + 1))
      {
LABEL_18:
        sub_23E1E7C64((uint64_t)&v37, &qword_256D40C00);
        sub_23E3B012C();
        v31 = (void *)swift_allocError();
        *v32 = 0xD000000000000013;
        v32[1] = v30;
        v33 = (void *)sub_23E536D04();
        v34 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v33);

        return v34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_15:
      v30 = v35;
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v38 + 1))
        goto LABEL_18;
    }
  }
  else
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
  }
  sub_23E1E7C64((uint64_t)&v37, &qword_256D40C00);
  v21 = *(void **)(v10 + 24);
  v22 = objc_msgSend(v21, sel_objectForKey_, v14);
  if (v22)
  {
    v23 = (id)MEMORY[0x24BDAC7A8](v22);
    sub_23E45F314(a6);
    v24 = (void *)sub_23E5377E4();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setObject_forKey_, v24, v14);

  }
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v26 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v25);

  return v26;
}

uint64_t sub_23E3AF29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _BYTE v11[40];

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E1FF9C8(v5, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
  swift_dynamicCast();
  v8 = sub_23E537514();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8 & 1;
}

BOOL sub_23E3AF36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];

  v17 = a3;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18[-1] - v11;
  sub_23E1EA57C(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
  swift_dynamicCast();
  v14 = v19;
  v13 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(uint64_t, uint64_t))(v13 + 64))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(a4 + 64))(v17, a4);
  sub_23E20BBB0();
  LOBYTE(v13) = sub_23E537514();
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  return (v13 & 1) == 0;
}

void sub_23E3AF4DC(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  _BYTE v7[32];

  sub_23E1EA57C(a1, (uint64_t)v7);
  type metadata accessor for MockObserver();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_beginAccess();
    v2 = v6;
    v3 = sub_23E3AFC00((unint64_t *)(v1 + 32));

    v4 = *(_QWORD *)(v1 + 32);
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v5 >= v3)
        goto LABEL_4;
    }
    else
    {
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5 >= v3)
      {
LABEL_4:
        sub_23E460CC4(v3, v5);
        swift_endAccess();

        return;
      }
    }
    __break(1u);
  }
}

unint64_t sub_23E3AF5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v12;
  unint64_t v13;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23E537E68();
  swift_bridgeObjectRelease();
  v12 = 0xD00000000000001FLL;
  v13 = 0x800000023E569430;
  v6 = (void *)sub_23E3AE994();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_uniqueIdentifier);

    sub_23E536F68();
    sub_23E536F38();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v9 = *(id *)(v1 + 24);
  v10 = objc_msgSend(v9, sel_description);
  sub_23E53755C();

  sub_23E537628();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23E3AF784()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockTimerManager()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for MockTimerManager.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E3AF824 + 4 * byte_23E54C275[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E3AF858 + 4 * byte_23E54C270[v4]))();
}

uint64_t sub_23E3AF858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3AF860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3AF868);
  return result;
}

uint64_t sub_23E3AF874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3AF87CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E3AF880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3AF888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MockTimerManager.Action()
{
  return &type metadata for MockTimerManager.Action;
}

unint64_t sub_23E3AF8A8()
{
  unint64_t result;

  result = qword_256D45628;
  if (!qword_256D45628)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54C338, &type metadata for MockTimerManager.Action);
    atomic_store(result, (unint64_t *)&qword_256D45628);
  }
  return result;
}

id sub_23E3AF8EC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 24), sel_objectEnumerator);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_allObjects);

    sub_23E5377F0();
  }
  v4 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v4);

  return v5;
}

uint64_t sub_23E3AF9BC(uint64_t a1, uint64_t a2)
{
  return sub_23E3AEBF4(a1, a2);
}

id sub_23E3AF9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AEF1C(a1, a2, a3);
}

id sub_23E3AF9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E3AEF3C(a1, a2, a3);
}

id sub_23E3AFA1C()
{
  id v0;
  id v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v1 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v0);

  return v1;
}

id sub_23E3AFA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3AFFCC(a3, a4);
}

void sub_23E3AFAA8(uint64_t a1)
{
  sub_23E3AF4DC(a1);
}

unint64_t sub_23E3AFAC8()
{
  return sub_23E3AF5E8();
}

uint64_t sub_23E3AFAE8(unint64_t a1)
{
  return sub_23E3AEA98(a1);
}

id sub_23E3AFB08(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 24), sel_objectForKey_, a1);
  if (!v2)
  {
    sub_23E1E335C(0, &qword_256D45630);
    v2 = (id)MEMORY[0x24264EE9C](MEMORY[0x24BEE4AF8]);
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v2);

  return v3;
}

uint64_t sub_23E3AFBA0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 16);
}

_QWORD *sub_23E3AFBAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _QWORD *result;

  type metadata accessor for MockTimerManager();
  v4 = swift_allocObject();
  result = sub_23E3AE8B4(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_23E3AFC00(unint64_t *a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  unint64_t v8;
  unint64_t v10;
  unint64_t i;
  unint64_t v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  id v17;
  id v18;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *a1;
  if (*a1 >> 62)
    goto LABEL_62;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_23E1E335C(0, (unint64_t *)&qword_254333370);
    v4 = 0;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      v7 = sub_23E537C58();

      if ((v7 & 1) != 0)
        break;
      v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        v3 = sub_23E53803C();
        if (!v3)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!(*a1 >> 62))
    {
      if (v10 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (i = v4 + 5; ; ++i)
        {
          v2 = i - 4;
          v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v13 = (id)MEMORY[0x24264F148](i - 4);
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0)
              goto LABEL_52;
            if (v2 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_53;
            v13 = *(id *)(v12 + 8 * i);
          }
          v14 = v13;
          v15 = sub_23E537C58();

          if ((v15 & 1) != 0)
            goto LABEL_42;
          if (v2 != v4)
            break;
LABEL_41:
          if (__OFADD__(v4++, 1))
            goto LABEL_55;
LABEL_42:
          v26 = i - 3;
          if (__OFADD__(v2, 1))
            goto LABEL_54;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v27 = sub_23E53803C();
            swift_bridgeObjectRelease();
          }
          else
          {
            v27 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27)
            return v4;
        }
        v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v17 = (id)MEMORY[0x24264F148](v4, *a1);
          v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0)
              goto LABEL_58;
            if (v2 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_59;
            v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_56;
          if (v4 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_57;
          v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0)
            goto LABEL_27;
        }
        v18 = (id)MEMORY[0x24264F148](i - 4, v16);
        v16 = *a1;
LABEL_30:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v16 & 0x8000000000000000) != 0
          || (v16 & 0x4000000000000000) != 0)
        {
          sub_23E24AB40(v16);
        }
        v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        sub_23E537808();
        v21 = *a1;
        v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || (v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
          sub_23E24AB40(v21);
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_60;
        v23 = v21 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_61;
        v24 = *(void **)(v23 + 8 * i);
        *(_QWORD *)(v23 + 8 * i) = v17;

        sub_23E537808();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    v29 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 != v29)
      goto LABEL_16;
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!(*a1 >> 62))
    return *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v28 = sub_23E53803C();
  swift_bridgeObjectRelease();
  return v28;
}

id sub_23E3AFFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  objc_super v14;

  v3 = v2;
  v6 = (objc_class *)type metadata accessor for MockObserver();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t *)&v7[OBJC_IVAR____TtC13HomeDataModel12MockObserver_block];
  *v8 = 0;
  v8[1] = 0;
  swift_retain();
  v9 = v7;
  sub_23E536F74();
  v10 = *v8;
  *v8 = a1;
  v8[1] = a2;
  swift_retain();
  sub_23E22D1F8(v10);

  v14.receiver = v9;
  v14.super_class = v6;
  v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_release();
  swift_beginAccess();
  v12 = v11;
  MEMORY[0x24264EA70]();
  if (*(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_23E537820();
  sub_23E53785C();
  sub_23E537808();
  swift_endAccess();
  return v12;
}

BOOL sub_23E3B010C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23E3AF36C(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_23E3B012C()
{
  unint64_t result;

  result = qword_256D45638;
  if (!qword_256D45638)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552754, &type metadata for MockError);
    atomic_store(result, (unint64_t *)&qword_256D45638);
  }
  return result;
}

id sub_23E3B0170(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initForAccessory_withConnectionProvider_, a1, a2);
}

BOOL sub_23E3B01AC(uint64_t a1)
{
  return sub_23E3B010C(a1);
}

uint64_t MatterMetadataKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3B01FC + 4 * byte_23E54C370[*v0]))(0x4E79616C70736944, 0xEB00000000656D61);
}

uint64_t sub_23E3B01FC()
{
  return 0x44496D6F6F52;
}

uint64_t sub_23E3B0210()
{
  return 0x6E6564496E6F6349;
}

uint64_t sub_23E3B0234()
{
  return 0x657469726F766146;
}

uint64_t sub_23E3B024C()
{
  return 0x61446E4F776F6853;
}

unint64_t sub_23E3B0270()
{
  return 0xD000000000000017;
}

uint64_t sub_23E3B028C()
{
  return 0x657A6953656C6954;
}

uint64_t sub_23E3B02A4()
{
  return 0x746169636F737341;
}

uint64_t sub_23E3B02C8()
{
  return 0x496564756C636E49;
}

uint64_t sub_23E3B02EC()
{
  return 0x6564644165746144;
}

uint64_t sub_23E3B0308@<X0>(unsigned __int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  void *v4;
  void *v5;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[32];

  v5 = v4;
  swift_beginAccess();
  v10 = objc_getAssociatedObject(v5, &unk_256D45641);
  swift_endAccess();
  if (v10)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_23E266144((uint64_t)&v18, (uint64_t)v20);
  sub_23E1EA5B8((uint64_t)v20, (uint64_t)&v18);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_23E1E9988((uint64_t)&v18);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45650);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    result = sub_23E1E9988((uint64_t)v20);
    *a4 = 0u;
    a4[1] = 0u;
    return result;
  }
  if (!*(_QWORD *)(v17 + 16) || (v11 = sub_23E2112B8(a1), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_23E211350(a2, a3);
    if ((v15 & 1) != 0)
    {
      sub_23E1EA57C(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)a4);
    }
    else
    {
      *a4 = 0u;
      a4[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a4 = 0u;
    a4[1] = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_23E1E9988((uint64_t)v20);
}

uint64_t sub_23E3B04B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  void *v3;
  void *v4;
  id v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[32];

  v4 = v3;
  swift_beginAccess();
  v8 = objc_getAssociatedObject(v4, &unk_256D45640);
  swift_endAccess();
  if (v8)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_23E266144((uint64_t)&v13, (uint64_t)v15);
  sub_23E1EA5B8((uint64_t)v15, (uint64_t)&v13);
  if (!*((_QWORD *)&v14 + 1))
  {
    sub_23E1E9988((uint64_t)&v13);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    result = sub_23E1E9988((uint64_t)v15);
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_23E211350(a1, a2);
    if ((v10 & 1) != 0)
    {
      sub_23E1EA57C(*(_QWORD *)(v12 + 56) + 32 * v9, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_23E1E9988((uint64_t)v15);
}

HomeDataModel::MatterMetadataKey_optional __swiftcall MatterMetadataKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::MatterMetadataKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_23E3B0684(char *a1)
{
  sub_23E5234AC(*a1);
}

unint64_t sub_23E3B0694()
{
  unint64_t result;

  result = qword_256D45648;
  if (!qword_256D45648)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterMetadataKey, &type metadata for MatterMetadataKey);
    atomic_store(result, (unint64_t *)&qword_256D45648);
  }
  return result;
}

uint64_t sub_23E3B06D8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  sub_23E2A6B28((uint64_t)v3, v1);
  return sub_23E5384A4();
}

void sub_23E3B071C(uint64_t a1)
{
  char *v1;

  sub_23E2A6B28(a1, *v1);
}

uint64_t sub_23E3B0724()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  sub_23E2A6B28((uint64_t)v3, v1);
  return sub_23E5384A4();
}

HomeDataModel::MatterMetadataKey_optional sub_23E3B0764(Swift::String *a1)
{
  return MatterMetadataKey.init(rawValue:)(*a1);
}

uint64_t sub_23E3B0770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MatterMetadataKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for MatterMetadataKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E3B07E0 + 4 * byte_23E54C37F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E3B0814 + 4 * byte_23E54C37A[v4]))();
}

uint64_t sub_23E3B0814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3B081C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3B0824);
  return result;
}

uint64_t sub_23E3B0830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3B0838);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E3B083C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3B0844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterMetadataKey()
{
  return &type metadata for MatterMetadataKey;
}

uint64_t sub_23E3B0860(unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  char v17;
  void *v18;
  unint64_t v20;
  unint64_t v21;
  _OWORD v22[2];
  __int128 v23;
  uint64_t v24;

  v5 = v4;
  swift_beginAccess();
  v10 = objc_getAssociatedObject(v4, &unk_256D45641);
  swift_endAccess();
  if (v10)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_23E266144((uint64_t)v22, (uint64_t)&v23);
  if (!v24)
  {
    sub_23E1E9988((uint64_t)&v23);
LABEL_9:
    v11 = sub_23E22296C(MEMORY[0x24BEE4AF8]);
    if (!*(_QWORD *)(v11 + 16))
      goto LABEL_12;
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45650);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_9;
  v11 = v20;
  if (!*(_QWORD *)(v20 + 16))
    goto LABEL_12;
LABEL_10:
  v12 = sub_23E2112B8(a1);
  if ((v13 & 1) != 0)
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
    v21 = v14;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
LABEL_12:
  v14 = sub_23E20D69C(MEMORY[0x24BEE4AF8]);
  v21 = v14;
LABEL_13:
  sub_23E1EA5B8(a4, (uint64_t)&v23);
  if (v24)
  {
    sub_23E1EA76C(&v23, v22);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E21B4FC(v22, a2, a3, isUniquelyReferenced_nonNull_native);
    v16 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23E1E9988((uint64_t)&v23);
    sub_23E2DA540(a2, a3, v22);
    swift_bridgeObjectRelease();
    sub_23E1E9988((uint64_t)v22);
    v16 = v21;
  }
  v17 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v23 = v11;
  sub_23E21B4F0(v16, a1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
  v18 = (void *)sub_23E537454();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  objc_setAssociatedObject(v5, &unk_256D45641, v18, (void *)0x301);
  swift_endAccess();

  return swift_bridgeObjectRelease();
}

void sub_23E3B0B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  void *v11;
  _OWORD v12[2];
  __int128 v13;
  uint64_t v14;
  unint64_t v15;

  v4 = v3;
  swift_beginAccess();
  v8 = objc_getAssociatedObject(v4, &unk_256D45640);
  swift_endAccess();
  if (v8)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_23E266144((uint64_t)v12, (uint64_t)&v13);
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    if (swift_dynamicCast())
    {
      v9 = v15;
      goto LABEL_9;
    }
  }
  else
  {
    sub_23E1E9988((uint64_t)&v13);
  }
  v9 = sub_23E20D69C(MEMORY[0x24BEE4AF8]);
LABEL_9:
  v15 = v9;
  sub_23E1EA5B8(a3, (uint64_t)&v13);
  if (v14)
  {
    sub_23E1EA76C(&v13, v12);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23E21B4FC(v12, a1, a2, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23E1E9988((uint64_t)&v13);
    sub_23E2DA540(a1, a2, v12);
    swift_bridgeObjectRelease();
    sub_23E1E9988((uint64_t)v12);
  }
  v11 = (void *)sub_23E537454();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  objc_setAssociatedObject(v4, &unk_256D45640, v11, (void *)0x301);
  swift_endAccess();

}

uint64_t sub_23E3B0D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];
  _QWORD v21[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v10, &qword_254334B40);
  v11 = sub_23E537934();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_254334B40);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_23E5378B0();
      v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v16 = *v4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t AccessoryDetailsBasicInfo.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t AccessoryDetailsBasicInfo.commit()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E3B0EF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_23E3B0F80;
  return sub_23E537F04();
}

uint64_t sub_23E3B0F80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B0FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a2;
  v3[3] = a3;
  v4 = *(_QWORD *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  v3[4] = v4;
  v3[5] = *(_QWORD *)(v4 + 64);
  v3[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B1060()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0[6];
  v2 = v0[7];
  v3 = v0[4];
  v4 = v0[3];
  v5 = sub_23E537934();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v2, 1, 1, v5);
  sub_23E1E2F50(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  sub_23E1E2FDC(v1, v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_23E3B0D0C(v2, (uint64_t)&unk_256D45810, v8);
  sub_23E1E7C64(v2, &qword_254334B40);
  v6(v2, 1, 1, v5);
  sub_23E1E2F50(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  sub_23E1E2FDC(v1, v9 + v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_23E3B0D0C(v2, (uint64_t)&unk_256D45820, v9);
  sub_23E1E7C64(v2, &qword_254334B40);
  v6(v2, 1, 1, v5);
  sub_23E1E2F50(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  sub_23E1E2FDC(v1, v10 + v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_23E3B0D0C(v2, (uint64_t)&unk_256D45830, v10);
  sub_23E1E7C64(v2, &qword_254334B40);
  v6(v2, 1, 1, v5);
  sub_23E1E2F50(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_23E1E2FDC(v1, v11 + v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_23E3B0D0C(v2, (uint64_t)&unk_256D45840, v11);
  sub_23E1E7C64(v2, &qword_254334B40);
  v6(v2, 1, 1, v5);
  sub_23E1E2F50(v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  sub_23E1E2FDC(v1, v12 + v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_23E3B0D0C(v2, (uint64_t)&unk_256D45850, v12);
  sub_23E1E7C64(v2, &qword_254334B40);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v14 + 8))();
}

uint64_t sub_23E3B1398(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23D584;
  return sub_23E3B0FDC(a1, a2, v6);
}

uint64_t sub_23E3B1400()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitName()();
}

uint64_t AccessoryDetailsBasicInfo.commitName()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[6] = v0;
  type metadata accessor for StaticEndpoint();
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[8] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[9] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E3B1568()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v1 = v0[6];
  v2 = (uint64_t *)(v1 + *(int *)(v0[14] + 20));
  v3 = *v2;
  v0[17] = *v2;
  v4 = v2[1];
  v0[18] = v4;
  if (v4)
  {
    v18 = v3;
    v5 = qword_256D3ED78;
    swift_bridgeObjectRetain();
    if (v5 != -1)
    {
      swift_once();
      v1 = v0[6];
    }
    v6 = v0[16];
    v7 = sub_23E5371A8();
    v0[19] = __swift_project_value_buffer(v7, (uint64_t)qword_256D42C38);
    sub_23E1E2F50(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    swift_bridgeObjectRetain_n();
    v8 = sub_23E537190();
    v9 = sub_23E537B20();
    v10 = os_log_type_enabled(v8, v9);
    v11 = v0[16];
    if (v10)
    {
      v12 = v0[13];
      v13 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain();
      v0[4] = sub_23E1FD768(v18, v4, &v19);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      sub_23E1E2F50(v11, v12, type metadata accessor for AccessoryDetails.Payload);
      sub_23E4BF6FC(v12);
      v20 = 0xD000000000000019;
      v21 = 0x800000023E5694D0;
      sub_23E537628();
      swift_bridgeObjectRelease();
      v14 = v20;
      v15 = v21;
      sub_23E1E2FA0(v12, type metadata accessor for AccessoryDetails.Payload);
      v0[5] = sub_23E1FD768(v14, v15, &v19);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v11, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
      _os_log_impl(&dword_23E1DF000, v8, v9, "Write new name: %s to staticServiceGroup %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v17, -1, -1);
      MEMORY[0x24264FEBC](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_23E1E2FA0(v11, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    }

    sub_23E1E2F50(v0[6], v0[12], type metadata accessor for AccessoryDetails.Payload);
    v16 = (char *)&loc_23E3B1898 + 4 * byte_23E54C470[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __asm { BR              X0 }
}

uint64_t sub_23E3B1A44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B1AB0()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 80), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B1B4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B1BB8()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B1C54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B1CC0()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B1D5C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B1DBC()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B1E58()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 80), type metadata accessor for StaticAccessory);
  v1 = *(void **)(v0 + 168);
  sub_23E1E2F50(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  v2 = sub_23E537190();
  v3 = sub_23E537B08();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v15 = v6;
    v7 = *(_QWORD *)(v0 + 104);
    v16 = v1;
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v4, v5, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_23E1E2F50(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v7);
    v18 = 0xD000000000000019;
    v19 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v10 = v18;
    v11 = v19;
    sub_23E1E2FA0(v7, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v10, v11, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);
    v12 = v16;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B2108()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v1 = *(void **)(v0 + 184);
  sub_23E1E2F50(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  v2 = sub_23E537190();
  v3 = sub_23E537B08();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v15 = v6;
    v7 = *(_QWORD *)(v0 + 104);
    v16 = v1;
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v4, v5, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_23E1E2F50(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v7);
    v18 = 0xD000000000000019;
    v19 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v10 = v18;
    v11 = v19;
    sub_23E1E2FA0(v7, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v10, v11, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);
    v12 = v16;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B23B8()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v1 = *(void **)(v0 + 200);
  sub_23E1E2F50(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  swift_bridgeObjectRetain();
  v2 = sub_23E537190();
  v3 = sub_23E537B08();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 120);
    v15 = v6;
    v7 = *(_QWORD *)(v0 + 104);
    v16 = v1;
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v4, v5, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_23E1E2F50(v6, v7, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v7);
    v18 = 0xD000000000000019;
    v19 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v10 = v18;
    v11 = v19;
    sub_23E1E2FA0(v7, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v10, v11, &v17);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v2, v3, "Error commit name: %s for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);
    v12 = v16;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 120);
    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v12 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B2668()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitRoom()();
}

uint64_t AccessoryDetailsBasicInfo.commitRoom()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[6] = v0;
  type metadata accessor for StaticEndpoint();
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[8] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[9] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  v1[17] = swift_task_alloc();
  v2 = type metadata accessor for StaticRoom(0);
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B2838()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24[35];

  v1 = v0[18];
  v2 = v0[19];
  v3 = v0[17];
  sub_23E1E7C20(v0[6] + *(int *)(v0[14] + 24), v3, &qword_256D3FE48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    sub_23E1E2FDC(v0[17], v0[22], type metadata accessor for StaticRoom);
    if (qword_256D3ED78 != -1)
      swift_once();
    v9 = v0[21];
    v8 = v0[22];
    v10 = v0[16];
    v11 = v0[6];
    v12 = sub_23E5371A8();
    v0[23] = __swift_project_value_buffer(v12, (uint64_t)qword_256D42C38);
    sub_23E1E2F50(v8, v9, type metadata accessor for StaticRoom);
    sub_23E1E2F50(v11, v10, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v13 = sub_23E537190();
    v14 = sub_23E537B20();
    v15 = os_log_type_enabled(v13, v14);
    v16 = v0[21];
    v17 = v0[16];
    if (v15)
    {
      v18 = v0[13];
      v19 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v24[0] = v23;
      *(_DWORD *)v19 = 136315394;
      v20 = StaticRoom.description.getter();
      v0[4] = sub_23E1FD768(v20, v21, v24);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v16, type metadata accessor for StaticRoom);
      *(_WORD *)(v19 + 12) = 2080;
      sub_23E1E2F50(v17, v18, type metadata accessor for AccessoryDetails.Payload);
      sub_23E4BF6FC(v18);
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v18, type metadata accessor for AccessoryDetails.Payload);
      v0[5] = sub_23E1FD768(0xD000000000000019, 0x800000023E5694D0, v24);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
      _os_log_impl(&dword_23E1DF000, v13, v14, "Write %s to dataModel room for %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v23, -1, -1);
      MEMORY[0x24264FEBC](v19, -1, -1);
    }
    else
    {
      sub_23E1E2FA0(v0[21], type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    }

    sub_23E1E2F50(v0[6], v0[12], type metadata accessor for AccessoryDetails.Payload);
    v22 = (char *)&loc_23E3B2BAC + 4 * byte_23E54C474[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = v0[14];
  v5 = v0[6];
  sub_23E1E7C64(v0[17], &qword_256D3FE48);
  if (!*(_QWORD *)(v5 + *(int *)(v4 + 28) + 8))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __asm { BR              X0 }
  }
  v6 = (_QWORD *)swift_task_alloc();
  v0[31] = v6;
  *v6 = v0;
  v6[1] = sub_23E3B335C;
  return sub_23E3B9530();
}

uint64_t sub_23E3B2E34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B2E98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 80), type metadata accessor for StaticAccessory);
  sub_23E1E2FA0(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B2F84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B2FE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2FA0(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B30D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B3130()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 64), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  sub_23E1E2FA0(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B321C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B3270()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E2FA0(v1, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B335C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E3B343C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 80), type metadata accessor for StaticAccessory);
  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 48);
  sub_23E1E2F50(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160), type metadata accessor for StaticRoom);
  sub_23E1E2F50(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v22 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 120);
    v19 = v7;
    v8 = *(_QWORD *)(v0 + 104);
    v21 = v1;
    v9 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v9 = 136315394;
    v10 = StaticRoom.description.getter();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v10, v11, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v6, type metadata accessor for StaticRoom);
    *(_WORD *)(v9 + 12) = 2080;
    sub_23E1E2F50(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v8);
    v24 = 0xD000000000000019;
    v25 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v12 = v24;
    v13 = v25;
    sub_23E1E2FA0(v8, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v12, v13, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v19, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v4, v5, "Error committing room: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v20, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

    v14 = v22;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 120);

    sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_23E1E2FA0(v16, type metadata accessor for StaticRoom);
    v14 = v15;
  }
  sub_23E1E2FA0(v14, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B376C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 72), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v1 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 48);
  sub_23E1E2F50(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160), type metadata accessor for StaticRoom);
  sub_23E1E2F50(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v22 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 120);
    v19 = v7;
    v8 = *(_QWORD *)(v0 + 104);
    v21 = v1;
    v9 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v9 = 136315394;
    v10 = StaticRoom.description.getter();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v10, v11, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v6, type metadata accessor for StaticRoom);
    *(_WORD *)(v9 + 12) = 2080;
    sub_23E1E2F50(v7, v8, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v8);
    v24 = 0xD000000000000019;
    v25 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v12 = v24;
    v13 = v25;
    sub_23E1E2FA0(v8, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 24) = sub_23E1FD768(v12, v13, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v19, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v4, v5, "Error committing room: %s for %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v20, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

    v14 = v22;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 120);

    sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_23E1E2FA0(v16, type metadata accessor for StaticRoom);
    v14 = v15;
  }
  sub_23E1E2FA0(v14, type metadata accessor for StaticRoom);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B3A9C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitShouldShowInDashboard()();
}

uint64_t AccessoryDetailsBasicInfo.commitShouldShowInDashboard()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  type metadata accessor for StaticEndpoint();
  v1[3] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v1[4] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[5] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E3B3BC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char *v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 32));
  if (v2 == 2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __asm { BR              X0 }
  }
  v3 = v2 & 1;
  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    *(_DWORD *)(v0 + 104) = v3;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v5, v6, "Write %{BOOL}d to dataModel shouldShowInDashboard", v7, 8u);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }

  sub_23E1E2F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 64), type metadata accessor for AccessoryDetails.Payload);
  v8 = (char *)&loc_23E3B3D44 + 4 * byte_23E54C478[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3B3EBC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B3F10()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 48), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B3F80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B3FD4()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 40), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4044()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B4098()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4108()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B415C()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B41CC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitIsFavorite()();
}

uint64_t AccessoryDetailsBasicInfo.commitIsFavorite()()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  type metadata accessor for StaticEndpoint();
  v1[3] = swift_task_alloc();
  type metadata accessor for StaticService();
  v1[4] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23E3B42D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  char *v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 36));
  if (v2 != 2)
  {
    v3 = v2 & 1;
    if (qword_256D3ED78 != -1)
      swift_once();
    v4 = sub_23E5371A8();
    __swift_project_value_buffer(v4, (uint64_t)qword_256D42C38);
    v5 = sub_23E537190();
    v6 = sub_23E537B20();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 67109120;
      *(_DWORD *)(v0 + 88) = v3;
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v5, v6, "Write %{BOOL}d to dataModel isFavorite", v7, 8u);
      MEMORY[0x24264FEBC](v7, -1, -1);
    }

    sub_23E1E2F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), type metadata accessor for AccessoryDetails.Payload);
    v8 = (char *)&loc_23E3B4408 + 4 * byte_23E54C47C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __asm { BR              X0 }
}

uint64_t sub_23E3B457C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B45D0()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 40), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4638()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B468C()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B46F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3B4748()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B47B0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitIconSymbol()();
}

uint64_t AccessoryDetailsBasicInfo.commitIconSymbol()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  type metadata accessor for StaticEndpoint();
  v1[3] = swift_task_alloc();
  v2 = type metadata accessor for StaticService();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v1[7] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B48E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 40)) != 88)
  {
    sub_23E1E2F50(v1, *(_QWORD *)(v0 + 80), type metadata accessor for AccessoryDetails.Payload);
    v2 = (char *)&loc_23E3B4960 + 4 * byte_23E54C480[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4A6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23E1E2FDC(v0[10], v0[3], (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  v1 = IconSymbol.rawValue.getter();
  v3 = v2;
  v0[15] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23E3B4D48;
  return StaticEndpoint.set(customIconSymbol:)(v1, v3);
}

void sub_23E3B4AE8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23E1E2FDC(v0[10], v0[6], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  IconSymbol.rawValue.getter();
  v0[13] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[14] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23E3B4C78;
  JUMPOUT(0x23E3B4B78);
}

uint64_t sub_23E3B4B98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B4C04()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 64), type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4C78()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B4CD4()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3B4D48()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3B4DA4()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AccessoryDetailsBasicInfo.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int *v10;
  int v11;
  _BYTE v13[16];

  v3 = type metadata accessor for StaticRoom(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AccessoryDetails.Payload.hash(into:)();
  v10 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  if (*(_QWORD *)(v1 + v10[5] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E1E7C20(v1 + v10[6], (uint64_t)v9, &qword_256D3FE48);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, type metadata accessor for StaticRoom);
    sub_23E538474();
    StaticRoom.hash(into:)(a1);
    sub_23E1E2FA0((uint64_t)v6, type metadata accessor for StaticRoom);
  }
  if (*(_QWORD *)(v1 + v10[7] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  if (*(_BYTE *)(v1 + v10[8]) != 2)
    sub_23E538474();
  sub_23E538474();
  if (*(_BYTE *)(v1 + v10[9]) != 2)
    sub_23E538474();
  sub_23E538474();
  v11 = *(unsigned __int8 *)(v1 + v10[10]);
  if (v11 == 88)
    return sub_23E538474();
  sub_23E538474();
  v13[15] = v11;
  IconSymbol.rawValue.getter();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3B50C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3B50FC + 4 * byte_23E54C484[a1]))(0x64616F6C796170, 0xE700000000000000);
}

uint64_t sub_23E3B50FC()
{
  return 0x614E646567617473;
}

uint64_t sub_23E3B5118()
{
  return 0x6F52646567617473;
}

unint64_t sub_23E3B513C()
{
  return 0xD000000000000013;
}

unint64_t sub_23E3B5178()
{
  return 0xD000000000000010;
}

uint64_t sub_23E3B51A0()
{
  unsigned __int8 *v0;

  return sub_23E3B50C8(*v0);
}

uint64_t sub_23E3B51A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3C0B8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3B51CC()
{
  sub_23E3C0AF0();
  return sub_23E538570();
}

uint64_t sub_23E3B51F4()
{
  sub_23E3C0AF0();
  return sub_23E53857C();
}

uint64_t AccessoryDetailsBasicInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D456A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3C0AF0();
  sub_23E5384EC();
  v11[15] = 0;
  type metadata accessor for AccessoryDetails.Payload(0);
  sub_23E1EE1C4(&qword_256D456B8, type metadata accessor for AccessoryDetails.Payload, (uint64_t)&protocol conformance descriptor for AccessoryDetails.Payload);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for AccessoryDetailsBasicInfo();
    v11[14] = 1;
    sub_23E5381EC();
    v11[13] = 2;
    type metadata accessor for StaticRoom(0);
    sub_23E1EE1C4(&qword_256D40DA0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
    sub_23E538234();
    v11[12] = 3;
    sub_23E5381EC();
    v11[11] = 4;
    sub_23E5381F8();
    v11[10] = 5;
    sub_23E5381F8();
    v11[9] = *(_BYTE *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_23E395E3C();
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AccessoryDetailsBasicInfo.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  AccessoryDetailsBasicInfo.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t AccessoryDetailsBasicInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t *v54;
  char *v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D456C0);
  v46 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 20)];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v54 = (uint64_t *)v12;
  v13 = (uint64_t)&v11[*(int *)(v9 + 24)];
  v14 = type metadata accessor for StaticRoom(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v52 = v13;
  v15(v13, 1, 1, v14);
  v16 = &v11[v8[7]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v53 = v16;
  v17 = v8[8];
  v11[v17] = 2;
  v18 = v8[9];
  v11[v18] = 2;
  v19 = v8[10];
  v11[v19] = 88;
  v20 = a1;
  v21 = a1[3];
  v51 = v20;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  sub_23E3C0AF0();
  v48 = v7;
  v22 = (uint64_t)v55;
  sub_23E5384E0();
  if (v22)
  {
    v26 = v52;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
    swift_bridgeObjectRelease();
    sub_23E1E7C64(v26, &qword_256D3FE48);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v55 = v11;
    v42 = v18;
    v43 = v17;
    v41 = v19;
    v23 = v46;
    v63 = 0;
    sub_23E1EE1C4(&qword_256D456C8, type metadata accessor for AccessoryDetails.Payload, (uint64_t)&protocol conformance descriptor for AccessoryDetails.Payload);
    v24 = (uint64_t)v49;
    v25 = v48;
    sub_23E538180();
    sub_23E1E2FDC(v24, (uint64_t)v55, type metadata accessor for AccessoryDetails.Payload);
    v62 = 1;
    v27 = sub_23E5380D8();
    v28 = (uint64_t *)v53;
    v29 = v54;
    *v54 = v27;
    v29[1] = v30;
    v61 = 2;
    sub_23E1EE1C4(&qword_256D40EC0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
    v31 = (uint64_t)v45;
    sub_23E538108();
    sub_23E3C0B34(v31, v52);
    v60 = 3;
    v32 = sub_23E5380D8();
    v34 = v33;
    swift_bridgeObjectRelease();
    *v28 = v32;
    v28[1] = v34;
    v59 = 4;
    v35 = sub_23E5380E4();
    v36 = (uint64_t)v55;
    v55[v43] = v35;
    v58 = 5;
    *(_BYTE *)(v36 + v42) = sub_23E5380E4();
    v56 = 6;
    sub_23E395EC4();
    v37 = v36;
    v38 = v50;
    sub_23E538108();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v38);
    *(_BYTE *)(v37 + v41) = v57;
    sub_23E1E2F50(v37, v44, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
    return sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  }
}

void AccessoryDetailsBasicInfo.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_23E1E2F50(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_23E3B5B0C + 4 * byte_23E54C48B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3B5B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E1E2FDC(v2, v1, type metadata accessor for StaticAccessory);
  v3 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v1, v3);
  return sub_23E1E2FA0(v1, type metadata accessor for StaticAccessory);
}

uint64_t sub_23E3B5C34()
{
  _BYTE v1[72];

  sub_23E53845C();
  AccessoryDetailsBasicInfo.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3B5C74()
{
  _BYTE v1[72];

  sub_23E53845C();
  AccessoryDetailsBasicInfo.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3B5CAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetailsBasicInfo.init(from:)(a1, a2);
}

uint64_t sub_23E3B5CC0(_QWORD *a1)
{
  return AccessoryDetailsBasicInfo.encode(to:)(a1);
}

uint64_t sub_23E3B5CD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E3B5CEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_23E3B0F80;
  return sub_23E537F04();
}

uint64_t AccessoryDetailsBasicInfo.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E3B5D98(a1, type metadata accessor for StaticAccessory, a2);
}

{
  return sub_23E3B5D98(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, a2);
}

{
  return sub_23E3B5D98(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, a2);
}

uint64_t sub_23E3B5D98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  v7 = (_QWORD *)(a3 + v6[5]);
  *v7 = 0;
  v7[1] = 0;
  v8 = a3 + v6[6];
  v9 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)(a3 + v6[7]);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(a3 + v6[8]) = 2;
  *(_BYTE *)(a3 + v6[9]) = 2;
  *(_BYTE *)(a3 + v6[10]) = 88;
  sub_23E1E2FDC(a1, a3, a2);
  type metadata accessor for AccessoryDetails.Payload(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AccessoryDetailsBasicInfo.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v1 + *(int *)(v6 + 20));
  v10 = *v9;
  v11 = v9[1];
  sub_23E1E2F50(v1, (uint64_t)v8, v12);
  if (!v11)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    v13 = (char *)&loc_23E3B5F78 + 4 * byte_23E54C48F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  return v10;
}

uint64_t sub_23E3B609C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(a1 + *(int *)(v5 + 20));
  v9 = *v8;
  v10 = v8[1];
  sub_23E1E2F50(a1, (uint64_t)v7, v11);
  if (v10)
  {
    swift_bridgeObjectRetain();
    result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  }
  else
  {
    AccessoryDetails.Payload.basicInfo.getter();
    v13 = v18;
    v14 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
    v10 = v15;
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  }
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t sub_23E3B619C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

void (*AccessoryDetailsBasicInfo.name.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v2 = v1;
  v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[7] = v2;
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v4[9] = v8;
  v9 = *(int *)(v7 + 20);
  *((_DWORD *)v4 + 20) = v9;
  v10 = (uint64_t *)(v2 + v9);
  v11 = *v10;
  v12 = v10[1];
  sub_23E1E2F50(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  if (!v12)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    v13 = (char *)&loc_23E3B6330 + 4 * byte_23E54C493[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v4[5] = v11;
  v4[6] = v12;
  return sub_23E3B6460;
}

void sub_23E3B6460(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v7;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v5 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 56) + *(int *)(*(_QWORD *)a1 + 80));
  v6 = *(void **)(*(_QWORD *)a1 + 64);
  v7 = *(void **)(*(_QWORD *)a1 + 72);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v5 = v3;
    v5[1] = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *v5 = v3;
    v5[1] = v4;
  }
  free(v7);
  free(v6);
  free(v2);
}

void AccessoryDetailsBasicInfo.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_23E1E2F50(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_23E3B6654 + 4 * byte_23E54C497[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3B6654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticAccessory);
  v2 = StaticAccessory.statusString.getter();
  if (v3)
    v4 = v2;
  else
    v4 = 0;
  sub_23E1E2FA0(v0, type metadata accessor for StaticAccessory);
  return v4;
}

void AccessoryDetailsBasicInfo.detailedStatusTitle.getter()
{
  sub_23E3B676C();
}

void AccessoryDetailsBasicInfo.detailedStatusString.getter()
{
  sub_23E3B676C();
}

void sub_23E3B676C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23E1E2F50(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_23E3B68A8 + 4 * byte_23E54C49B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3B68A8()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for AccessoryDetails.Payload);
  return 0;
}

void AccessoryDetailsBasicInfo.isReachable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E3B6A40 + 4 * byte_23E54C49F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3B6A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 - 48) = type metadata accessor for StaticAccessory(0);
  *(_QWORD *)(v1 - 40) = sub_23E1EE1C4(&qword_256D456E8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_23E1E2FDC(v0, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v1 - 72);
  return v3 & 1;
}

_QWORD *AccessoryDetailsBasicInfo.roomsForHome.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23[4];

  v0 = type metadata accessor for StaticRoom(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (uint64_t (*)(uint64_t))((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v20 - v5;
  if (qword_254334098 != -1)
    goto LABEL_16;
  while (1)
  {
    v7 = (_QWORD *)qword_254333F18;
    swift_getKeyPath();
    v23[1] = v7;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    type metadata accessor for StateSnapshot(0);
    v8 = swift_bridgeObjectRetain();
    v9 = (_QWORD *)sub_23E24A784(v8);
    swift_bridgeObjectRelease();
    v23[0] = v9;
    swift_retain();
    sub_23E3BF348(v23);
    swift_release();
    v10 = v23[0];
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v23[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
    v12 = v10[2];
    if (!v12)
      break;
    v20 = v4;
    v13 = 0;
    v4 = type metadata accessor for StaticRoom;
    v21 = v12;
    v22 = v1;
    while (v13 < v10[2])
    {
      v14 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      v15 = *(_QWORD *)(v1 + 72);
      sub_23E1E2F50((uint64_t)v10 + v14 + v15 * v13, (uint64_t)v6, type metadata accessor for StaticRoom);
      if ((v6[*(int *)(v0 + 24)] & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v6, type metadata accessor for StaticRoom);
      }
      else
      {
        v16 = (uint64_t)v20;
        sub_23E1E2FDC((uint64_t)v6, (uint64_t)v20, type metadata accessor for StaticRoom);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23E1F9288(0, v11[2] + 1, 1);
        v11 = v23[0];
        v18 = v23[0][2];
        v17 = v23[0][3];
        if (v18 >= v17 >> 1)
        {
          sub_23E1F9288(v17 > 1, v18 + 1, 1);
          v11 = v23[0];
        }
        v11[2] = v18 + 1;
        sub_23E1E2FDC(v16, (uint64_t)v11 + v14 + v18 * v15, type metadata accessor for StaticRoom);
        v12 = v21;
        v1 = v22;
      }
      ++v13;
      v4 = type metadata accessor for StaticRoom;
      if (v12 == v13)
      {
        v11 = v23[0];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
LABEL_14:
  swift_release();
  return v11;
}

uint64_t sub_23E3B6E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  sub_23E1E2F50(v1, (uint64_t)&v15 - v9, v11);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    sub_23E536F80();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_23E539650;
    sub_23E1E2F50(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails.Payload);
    v13 = (char *)&loc_23E3B6FA0 + 4 * byte_23E54C4A3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FDC((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v12 = *(_QWORD *)&v4[*(int *)(v2 + 32)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  return v12;
}

uint64_t sub_23E3B7100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v3 = sub_23E3B6E08();
  v12 = v1;
  v4 = (_QWORD *)sub_23E474E24((void (*)(char *))sub_23E3C896C, (uint64_t)&v11, v3);
  swift_bridgeObjectRelease();
  v13 = v4;
  swift_bridgeObjectRetain();
  sub_23E3BF348(&v13);
  swift_bridgeObjectRelease();
  v5 = v13;
  v6 = v13[2];
  v7 = type metadata accessor for StaticRoom(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (v6)
  {
    sub_23E1E2F50((uint64_t)v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a1, type metadata accessor for StaticRoom);
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
  return swift_release();
}

uint64_t sub_23E3B71F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_254334098 != -1)
    swift_once();
  v4 = qword_254333F18;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + *(int *)(type metadata accessor for StateSnapshot(0) + 52));
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E1E3300(a1);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v6 + 56);
      v11 = type metadata accessor for StaticRoom(0);
      v12 = *(_QWORD *)(v11 - 8);
      sub_23E1E2F50(v10 + *(_QWORD *)(v12 + 72) * v9, a2, type metadata accessor for StaticRoom);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      v15 = type metadata accessor for StaticRoom(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = type metadata accessor for StaticRoom(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

BOOL AccessoryDetailsBasicInfo.hasMultipleRooms.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  sub_23E1E2F50(v1, (uint64_t)&v16 - v9, v11);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    sub_23E536F80();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_23E539650;
    sub_23E1E2F50(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails.Payload);
    v13 = (char *)&loc_23E3B753C + 4 * byte_23E54C4A7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FDC((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v12 = *(_QWORD *)&v4[*(int *)(v2 + 32)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v14 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease();
  return v14 > 1;
}

uint64_t AccessoryDetailsBasicInfo.room.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  _QWORD v28[12];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = sub_23E536F80();
  v28[7] = *(_QWORD *)(v4 - 8);
  v28[8] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v29 = type metadata accessor for AccessoryDetails.Payload(0);
  v5 = MEMORY[0x24BDAC7A8](v29);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v28 - v8;
  v10 = type metadata accessor for StaticRoom(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v28[6] = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v28[9] = (char *)v28 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v28[10] = (char *)v28 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v28[11] = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v28 - v21;
  v23 = *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
  v30 = v2;
  sub_23E1E7C20(v2 + v23, (uint64_t)v22, &qword_256D3FE48);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v24(v22, 1, v10) == 1)
  {
    v28[4] = v24;
    v28[5] = v7;
    sub_23E1E7C64((uint64_t)v22, &qword_256D3FE48);
    if (qword_254334098 != -1)
      swift_once();
    v25 = qword_254333F18;
    swift_getKeyPath();
    v31 = v25;
    v28[2] = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    v28[1] = type metadata accessor for StateSnapshot(0);
    sub_23E1E2F50(v30, (uint64_t)v9, type metadata accessor for AccessoryDetails.Payload);
    v26 = (char *)&loc_23E3B7974 + 4 * byte_23E54C4AB[swift_getEnumCaseMultiPayload()];
    v28[3] = a1;
    __asm { BR              X10 }
  }
  return sub_23E1E2FDC((uint64_t)v22, a1, type metadata accessor for StaticRoom);
}

uint64_t sub_23E3B7D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for StaticRoom(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v7, type metadata accessor for StaticRoom);
  v8 = a2 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
  sub_23E1E7C64(v8, &qword_256D3FE48);
  sub_23E1E2FDC((uint64_t)v7, v8, type metadata accessor for StaticRoom);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t AccessoryDetailsBasicInfo.room.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
  sub_23E1E7C64(v3, &qword_256D3FE48);
  sub_23E1E2FDC(a1, v3, type metadata accessor for StaticRoom);
  v4 = type metadata accessor for StaticRoom(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void (*AccessoryDetailsBasicInfo.room.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for StaticRoom(0);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  AccessoryDetailsBasicInfo.room.getter((uint64_t)v7);
  return sub_23E3B7EC8;
}

void sub_23E3B7EC8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = (void *)(*a1)[3];
  v4 = (void *)(*a1)[4];
  v5 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    sub_23E1E2F50((*a1)[4], (uint64_t)v3, type metadata accessor for StaticRoom);
    v8 = v7 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
    sub_23E1E7C64(v8, &qword_256D3FE48);
    sub_23E1E2FDC((uint64_t)v3, v8, type metadata accessor for StaticRoom);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    sub_23E1E2FA0((uint64_t)v4, type metadata accessor for StaticRoom);
  }
  else
  {
    v9 = v7 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 24);
    sub_23E1E7C64(v9, &qword_256D3FE48);
    sub_23E1E2FDC((uint64_t)v4, v9, type metadata accessor for StaticRoom);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AccessoryDetailsBasicInfo.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + *(int *)(v6 + 28));
  v10 = *v9;
  v11 = v9[1];
  sub_23E1E2F50(v1, (uint64_t)v8, v12);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v13 = (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo;
    v14 = (uint64_t)v8;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v4);
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v10 = *(_QWORD *)&v4[*(int *)(v2 + 20)];
    swift_bridgeObjectRetain();
    v13 = type metadata accessor for StaticRoom;
    v14 = (uint64_t)v4;
  }
  sub_23E1E2FA0(v14, v13);
  return v10;
}

uint64_t sub_23E3B80FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;

  v4 = type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(a1 + *(int *)(v8 + 28));
  v13 = *v11;
  v12 = v11[1];
  sub_23E1E2F50(a1, (uint64_t)v10, v14);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v15 = (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo;
    v16 = (uint64_t)v10;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v6);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v17 = &v6[*(int *)(v4 + 20)];
    v13 = *(_QWORD *)v17;
    v12 = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain();
    v15 = type metadata accessor for StaticRoom;
    v16 = (uint64_t)v6;
  }
  result = sub_23E1E2FA0(v16, v15);
  *a2 = v13;
  a2[1] = v12;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.roomName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  BOOL v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticRoom(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v33 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v34 = (uint64_t)&v33 - v13;
  v14 = AccessoryDetailsBasicInfo.roomsForHome.getter();
  v15 = v14[2];
  if (v15)
  {
    v16 = (uint64_t)v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v17 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_23E1E2F50(v16, (uint64_t)v12, type metadata accessor for StaticRoom);
      v18 = &v12[*(int *)(v6 + 20)];
      v19 = *(_QWORD *)v18 == a1 && *((_QWORD *)v18 + 1) == a2;
      if (v19 || (sub_23E538354() & 1) != 0)
        break;
      sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticRoom);
      v16 += v17;
      if (!--v15)
        goto LABEL_9;
    }
    v21 = v35;
    sub_23E1E2FDC((uint64_t)v12, v35, type metadata accessor for StaticRoom);
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v20(v21, 0, 1, v6);
  }
  else
  {
LABEL_9:
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v21 = v35;
    v20(v35, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v21, 1, v6) == 1)
  {
    sub_23E1E7C64(v21, &qword_256D3FE48);
    v22 = type metadata accessor for AccessoryDetailsBasicInfo();
    v23 = v36;
    v24 = v36 + *(int *)(v22 + 24);
    sub_23E1E7C64(v24, &qword_256D3FE48);
    v20(v24, 1, 1, v6);
    v25 = (_QWORD *)(v23 + *(int *)(v22 + 28));
    result = swift_bridgeObjectRelease();
    *v25 = a1;
    v25[1] = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v27 = v34;
    sub_23E1E2FDC(v21, v34, type metadata accessor for StaticRoom);
    v28 = type metadata accessor for AccessoryDetailsBasicInfo();
    v29 = v36;
    v30 = (_QWORD *)(v36 + *(int *)(v28 + 28));
    swift_bridgeObjectRelease();
    *v30 = 0;
    v30[1] = 0;
    v31 = v33;
    sub_23E1E2F50(v27, v33, type metadata accessor for StaticRoom);
    v32 = v29 + *(int *)(v28 + 24);
    sub_23E1E7C64(v32, &qword_256D3FE48);
    sub_23E1E2FDC(v31, v32, type metadata accessor for StaticRoom);
    v20(v32, 0, 1, v6);
    return sub_23E1E2FA0(v27, type metadata accessor for StaticRoom);
  }
  return result;
}

void (*AccessoryDetailsBasicInfo.roomName.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  char *v14;

  v2 = v1;
  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[2] = v2;
  v5 = type metadata accessor for StaticRoom(0);
  v6 = (char *)malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[3] = v6;
  v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v4[4] = v8;
  v9 = (uint64_t *)(v2 + *(int *)(v7 + 28));
  v11 = *v9;
  v10 = v9[1];
  sub_23E1E2F50(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v12 = (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo;
    v13 = (uint64_t)v8;
  }
  else
  {
    AccessoryDetailsBasicInfo.room.getter((uint64_t)v6);
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v14 = &v6[*(int *)(v5 + 20)];
    v11 = *(_QWORD *)v14;
    v10 = *((_QWORD *)v14 + 1);
    swift_bridgeObjectRetain();
    v12 = type metadata accessor for StaticRoom;
    v13 = (uint64_t)v6;
  }
  sub_23E1E2FA0(v13, v12);
  *v4 = v11;
  v4[1] = v10;
  return sub_23E3B8630;
}

void sub_23E3B8630(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (void *)(*a1)[3];
  v6 = (void *)(*a1)[4];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    AccessoryDetailsBasicInfo.roomName.setter(v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    AccessoryDetailsBasicInfo.roomName.setter(**a1, v3);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t AccessoryDetailsBasicInfo.preemptivelySetRoom(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  v3[9] = swift_task_alloc();
  v4 = type metadata accessor for StaticRoom(0);
  v3[10] = v4;
  v3[11] = *(_QWORD *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for AccessoryDetailsBasicInfo();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[17] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v3[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B87AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = sub_23E5378F8();
  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B8818()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3B887C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B88DC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 176) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3B8924()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B8984()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[22];
  swift_release();
  swift_getKeyPath();
  v0[5] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v2 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v0[24] = v2;
  v3 = v2;
  return swift_task_switch();
}

uint64_t sub_23E3B8A34()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 192))
  {
    *(_QWORD *)(v0 + 200) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3B8B04()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3B8B40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B8BA0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3B8BE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B8C48()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 216);
  swift_release();
  v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 232) = *v2;
  v4 = v3;
  return swift_task_switch();
}

uint64_t sub_23E3B8CB8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 232))
  {
    *(_QWORD *)(v0 + 240) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3B8D90()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3B8DF4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 248) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B8E54()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 256) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E3B8E9C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;

  v1 = v0[29];
  v2 = (void *)v0[24];
  *(_QWORD *)v0[17] = v2;
  swift_storeEnumTagMultiPayload();
  v3 = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[33] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_23E3B8F20;
  return sub_23E1F1F88(v0[18], v0[17], v1, (uint64_t)v3);
}

uint64_t sub_23E3B8F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E3B8F98()
{
  uint64_t *v0;

  sub_23E1E2F50(v0[8], v0[15], (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v0[34] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B900C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  *(_QWORD *)(v0 + 280) = AccessoryDetailsBasicInfo.roomsForHome.getter();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  return swift_task_switch();
}

uint64_t sub_23E3B9064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = *(_QWORD *)(v0 + 96);
      v9 = *(_QWORD *)(v0 + 48);
      v8 = *(_QWORD *)(v0 + 56);
      sub_23E1E2F50(v5, v7, type metadata accessor for StaticRoom);
      v10 = (_QWORD *)(v7 + *(int *)(v4 + 20));
      v11 = *v10 == v9 && v10[1] == v8;
      if (v11 || (sub_23E538354() & 1) != 0)
        break;
      sub_23E1E2FA0(*(_QWORD *)(v0 + 96), type metadata accessor for StaticRoom);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease();
    sub_23E1E2FDC(v13, v16, type metadata accessor for StaticRoom);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v12(v16, 0, 1, v15);
  }
  else
  {
LABEL_10:
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 56);
    v12(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 80));
  }
  v17 = *(void **)(v0 + 232);
  v18 = *(void **)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 72), &qword_256D3FE48);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 64);
    sub_23E1E2FDC(*(_QWORD *)(v0 + 72), v22, type metadata accessor for StaticRoom);
    v26 = v25 + *(int *)(v23 + 24);
    sub_23E1E7C64(v26, &qword_256D3FE48);
    sub_23E1E2FDC(v22, v26, type metadata accessor for StaticRoom);
    v12(v26, 0, 1, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AccessoryDetailsBasicInfo.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[5];

  v1 = v0;
  v2 = type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AccessoryDetailsBasicInfo();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(v1 + *(int *)(v9 + 20));
  v14 = *v12;
  v13 = v12[1];
  sub_23E1E2F50(v1, (uint64_t)v11, v15);
  if (!v13)
  {
    sub_23E1E2F50((uint64_t)v11, (uint64_t)v7, type metadata accessor for AccessoryDetails.Payload);
    v16 = (char *)&loc_23E3B93B0 + 4 * byte_23E54C4AF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  AccessoryDetailsBasicInfo.room.getter((uint64_t)v4);
  v17 = &v4[*(int *)(v2 + 20)];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v4, type metadata accessor for StaticRoom);
  v22[1] = v14;
  v22[2] = v13;
  v22[3] = v19;
  v22[4] = v18;
  v20 = DeviceDisplayNames.displayName.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_23E3B9530()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[12] = v0;
  v2 = type metadata accessor for AccessoryDetailsBasicInfo();
  v1[13] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[14] = v3;
  v1[15] = *(_QWORD *)(v3 + 64);
  v1[16] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v1[17] = swift_task_alloc();
  v1[18] = type metadata accessor for StateSnapshot(0);
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B95D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 96) + *(int *)(*(_QWORD *)(v0 + 104) + 28));
  *(_QWORD *)(v0 + 160) = *v1;
  v2 = v1[1];
  *(_QWORD *)(v0 + 168) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 176) = sub_23E5378F8();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3B969C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3B9700()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B9760()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 200) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3B97A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B9808()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[25];
  v2 = v0[19];
  swift_release();
  swift_getKeyPath();
  v0[11] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E1E2F50(v3, v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E3B98E8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[19];
  sub_23E1E2F50(v1 + *(int *)(v0[18] + 20), v0[17], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  v0[27] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B9974()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3B99B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B9A10()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 232) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3B9A58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = sub_23E536F44();
  *(_QWORD *)(v0 + 248) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3B9AC4()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)v0[30];
  v2 = (void *)v0[29];
  v3 = v0[17];
  swift_release();
  v0[32] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_23E1E2FA0(v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  return swift_task_switch();
}

uint64_t sub_23E3B9B44()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;

  v1 = (void *)v0[32];
  if (v1)
  {
    v3 = v0[20];
    v2 = v0[21];
    v5 = v0[15];
    v4 = v0[16];
    v6 = v0[14];
    v7 = v0[12];
    v8 = (void *)sub_23E537538();
    sub_23E1E2F50(v7, v4, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v10 = swift_allocObject();
    sub_23E1E2FDC(v4, v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v11 = (_QWORD *)(v10 + ((v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
    v0[2] = MEMORY[0x24BDAC760];
    *v11 = v3;
    v11[1] = v2;
    v0[6] = sub_23E3C92C8;
    v0[7] = v10;
    v0[3] = 1107296256;
    v0[4] = sub_23E360FE8;
    v0[5] = &block_descriptor_24;
    v12 = _Block_copy(v0 + 2);
    swift_release();
    objc_msgSend(v1, sel_addRoomWithName_completionHandler_, v8, v12);
    _Block_release(v12);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23E3B9CB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;

  v9 = type metadata accessor for AccessoryDetailsBasicInfo();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  result = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v17 = sub_23E537934();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    sub_23E1E2F50(a3, (uint64_t)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v18 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = a1;
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v20 + v18, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v21 = (_QWORD *)((char *)v20 + v19);
    *v21 = a4;
    v21[1] = a5;
    v22 = a1;
    swift_bridgeObjectRetain();
    sub_23E26D014((uint64_t)v16, (uint64_t)&unk_256D457F0, (uint64_t)v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E3B9E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[53] = a6;
  v7[54] = a7;
  v7[51] = a4;
  v7[52] = a5;
  type metadata accessor for AccessoryDetailsBasicInfo();
  v7[55] = swift_task_alloc();
  v8 = sub_23E536F80();
  v7[56] = v8;
  v7[57] = *(_QWORD *)(v8 - 8);
  v7[58] = swift_task_alloc();
  type metadata accessor for StaticEndpoint();
  v7[59] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v7[60] = swift_task_alloc();
  type metadata accessor for StaticServiceGroup();
  v7[61] = swift_task_alloc();
  type metadata accessor for StaticService();
  v7[62] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v7[63] = swift_task_alloc();
  v7[64] = type metadata accessor for AccessoryDetails.Payload(0);
  v7[65] = swift_task_alloc();
  v7[66] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v7[67] = swift_task_alloc();
  v7[68] = type metadata accessor for StateSnapshot(0);
  v7[69] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3B9FC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 560) = sub_23E5378F8();
  *(_QWORD *)(v0 + 568) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA02C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3BA090()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 576) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA0F0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 584) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3BA138()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 592) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA198()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[73];
  v2 = v0[69];
  swift_release();
  swift_getKeyPath();
  v0[50] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E1E2F50(v3, v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E3BA27C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[69];
  sub_23E1E2F50(v1 + *(int *)(v0[68] + 20), v0[67], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  v0[75] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA30C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3BA348()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 608) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA3A8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 616) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3BA3F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 624) = sub_23E536F44();
  *(_QWORD *)(v0 + 632) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA45C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)v0[78];
  v2 = (void *)v0[77];
  v3 = v0[67];
  swift_release();
  v0[80] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_23E1E2FA0(v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  return swift_task_switch();
}

uint64_t sub_23E3BA4E0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;

  v1 = *(void **)(v0 + 640);
  if (v1)
  {
    *(_QWORD *)(v0 + 392) = v1;
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v2 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40460);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 408);
      sub_23E1E6C84((__int128 *)(v0 + 224), v0 + 144);
      v4 = *(_QWORD *)(v0 + 168);
      v5 = *(_QWORD *)(v0 + 176);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), v4);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v4, v5);
      __swift_destroy_boxed_opaque_existential_0(v0 + 144);
    }
    else
    {
      *(_QWORD *)(v0 + 256) = 0;
      *(_OWORD *)(v0 + 224) = 0u;
      *(_OWORD *)(v0 + 240) = 0u;
      sub_23E1E7C64(v0 + 224, &qword_256D40468);
    }
    sub_23E1E2F50(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 528), type metadata accessor for AccessoryDetails.Payload);
    v7 = (char *)&loc_23E3BA694 + *((int *)qword_23E3BA838 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BA6A4()
{
  uint64_t *v0;

  sub_23E1E2FDC(v0[66], v0[63], type metadata accessor for StaticAccessory);
  v0[81] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA7AC()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = (void *)v0[51];
  sub_23E1E2FDC(v0[66], v0[59], (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  v2 = objc_msgSend(v1, sel_uniqueIdentifier);
  sub_23E536F68();

  v3 = (_QWORD *)swift_task_alloc();
  v0[102] = v3;
  *v3 = v0;
  v3[1] = sub_23E3BB694;
  return StaticEndpoint.set(roomID:)(v0[58]);
}

uint64_t sub_23E3BA848()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3BA884()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 656) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA8E4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 664) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3BA92C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 672) = sub_23E536F44();
  *(_QWORD *)(v0 + 680) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BA998()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[84];
  v2 = (void *)v0[83];
  swift_release();
  v0[86] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3BAA00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v5;

  v1 = *(_QWORD *)(v0 + 688);
  if (v1)
  {
    v2 = *(void **)(v0 + 640);
    v3 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E3BAB78;
    *(_QWORD *)(v0 + 296) = swift_continuation_init();
    *(_QWORD *)(v0 + 264) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 272) = 0x40000000;
    *(_QWORD *)(v0 + 280) = sub_23E267484;
    *(_QWORD *)(v0 + 288) = &block_descriptor_56_0;
    objc_msgSend(v2, sel_assignAccessory_toRoom_completionHandler_, v1, v3, v0 + 264);
    return swift_continuation_await();
  }
  else
  {
    v5 = *(void **)(v0 + 640);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 504), type metadata accessor for StaticAccessory);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3BAB78()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 696) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3BABD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 504);

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BACBC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3BACF8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 712) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BAD58()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 720) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3BADA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 728) = sub_23E536F44();
  *(_QWORD *)(v0 + 736) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BAE0C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[91];
  v2 = (void *)v0[90];
  swift_release();
  v0[93] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3BAE74()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(void **)(v0 + 744);
  if (v1
    && (v2 = objc_msgSend(*(id *)(v0 + 744), sel_accessory),
        *(_QWORD *)(v0 + 752) = v2,
        v1,
        v2))
  {
    v3 = *(void **)(v0 + 640);
    v4 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_23E3BB014;
    v5 = swift_continuation_init();
    *(_QWORD *)(v0 + 184) = MEMORY[0x24BDAC760];
    v6 = (_QWORD *)(v0 + 184);
    v6[1] = 0x40000000;
    v6[2] = sub_23E267484;
    v6[3] = &block_descriptor_55;
    v6[4] = v5;
    objc_msgSend(v3, sel_assignAccessory_toRoom_completionHandler_, v2, v4, v6);
    return swift_continuation_await();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 496);

    sub_23E1E2FA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3BB014()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 760) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_23E3BB074()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 496);

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BB158()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3BB194()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 776) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BB1F4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 784) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3BB23C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 792) = sub_23E536F44();
  *(_QWORD *)(v0 + 800) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3BB2A8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[99];
  v2 = (void *)v0[98];
  swift_release();
  v0[101] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3BB310()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;

  v1 = *(void **)(v0 + 808);
  if (!v1)
  {
    v23 = *(void **)(v0 + 640);
    sub_23E1E2FA0(*(_QWORD *)(v0 + 488), (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);

LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = objc_msgSend(v1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v3 = sub_23E5377F0();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_4;
LABEL_23:
    v24 = *(void **)(v0 + 640);
    v25 = *(_QWORD *)(v0 + 488);

    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v4 = result;
  if (!result)
    goto LABEL_23;
LABEL_4:
  if (v4 >= 1)
  {
    v6 = 0;
    v28 = v3 & 0xC000000000000001;
    v26 = v4;
    v27 = v3;
    do
    {
      if (v28)
        v7 = (id)MEMORY[0x24264F148](v6, v3);
      else
        v7 = *(id *)(v3 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_accessory);
      if (v9)
      {
        v10 = v9;
        v29 = v8;
        v11 = *(void **)(v0 + 640);
        v12 = *(_QWORD *)(v0 + 480);
        v13 = *(void **)(v0 + 408);
        v14 = sub_23E537934();
        v15 = *(_QWORD *)(v14 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v12, 1, 1, v14);
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = 0;
        v16[3] = 0;
        v16[4] = v11;
        v16[5] = v10;
        v16[6] = v13;
        LODWORD(v12) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
        v17 = v11;
        v18 = v13;
        v19 = *(_QWORD *)(v0 + 480);
        if ((_DWORD)v12 == 1)
        {
          sub_23E1E7C64(*(_QWORD *)(v0 + 480), &qword_254334B40);
        }
        else
        {
          sub_23E537928();
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
        }
        v3 = v27;
        if (v16[2])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v20 = sub_23E5378B0();
          v22 = v21;
          swift_unknownObjectRelease();
        }
        else
        {
          v20 = 0;
          v22 = 0;
        }
        if (v22 | v20)
        {
          *(_QWORD *)(v0 + 304) = 0;
          *(_QWORD *)(v0 + 312) = 0;
          *(_QWORD *)(v0 + 320) = v20;
          *(_QWORD *)(v0 + 328) = v22;
        }
        swift_task_create();

        swift_release();
        v4 = v26;
      }
      else
      {

      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E3BB694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 456);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 464);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 448);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23E3BB708()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 472);

  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BB7E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t type;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v1 = *(void **)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 504);
  swift_willThrow();

  sub_23E1E2FA0(v2, type metadata accessor for StaticAccessory);
  v3 = *(void **)(v0 + 696);
  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = sub_23E5371A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_256D42C38);
  sub_23E1E2F50(v5, v4, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = v3;
  swift_bridgeObjectRetain();
  v9 = sub_23E537190();
  v10 = sub_23E537B08();
  if (os_log_type_enabled(v9, v10))
  {
    type = v10;
    v11 = *(_QWORD *)(v0 + 520);
    v13 = *(_QWORD *)(v0 + 432);
    v12 = *(_QWORD *)(v0 + 440);
    v22 = *(_QWORD *)(v0 + 424);
    v25 = *(void **)(v0 + 640);
    v14 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v23;
    *(_DWORD *)v14 = 136315650;
    *(_QWORD *)(v0 + 360) = v3;
    v15 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    v16 = sub_23E5375BC();
    *(_QWORD *)(v0 + 368) = sub_23E1FD768(v16, v17, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 376) = sub_23E1FD768(v22, v13, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2080;
    sub_23E1E2F50(v12, v11, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v11);
    v27 = 0xD000000000000019;
    v28 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v18 = v27;
    v19 = v28;
    sub_23E1E2FA0(v11, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 384) = sub_23E1FD768(v18, v19, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v12, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v9, type, "Error '%s' committing suggested room: %s for %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);

  }
  else
  {
    v20 = *(_QWORD *)(v0 + 440);

    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BBBDC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t type;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v1 = *(void **)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 496);
  swift_willThrow();

  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v3 = *(void **)(v0 + 760);
  if (qword_256D3ED78 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = sub_23E5371A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_256D42C38);
  sub_23E1E2F50(v5, v4, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = v3;
  swift_bridgeObjectRetain();
  v9 = sub_23E537190();
  v10 = sub_23E537B08();
  if (os_log_type_enabled(v9, v10))
  {
    type = v10;
    v11 = *(_QWORD *)(v0 + 520);
    v13 = *(_QWORD *)(v0 + 432);
    v12 = *(_QWORD *)(v0 + 440);
    v22 = *(_QWORD *)(v0 + 424);
    v25 = *(void **)(v0 + 640);
    v14 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v23;
    *(_DWORD *)v14 = 136315650;
    *(_QWORD *)(v0 + 360) = v3;
    v15 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    v16 = sub_23E5375BC();
    *(_QWORD *)(v0 + 368) = sub_23E1FD768(v16, v17, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 376) = sub_23E1FD768(v22, v13, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2080;
    sub_23E1E2F50(v12, v11, type metadata accessor for AccessoryDetails.Payload);
    sub_23E4BF6FC(v11);
    v27 = 0xD000000000000019;
    v28 = 0x800000023E5694D0;
    sub_23E537628();
    swift_bridgeObjectRelease();
    v18 = v27;
    v19 = v28;
    sub_23E1E2FA0(v11, type metadata accessor for AccessoryDetails.Payload);
    *(_QWORD *)(v0 + 384) = sub_23E1FD768(v18, v19, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v12, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    _os_log_impl(&dword_23E1DF000, v9, type, "Error '%s' committing suggested room: %s for %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);

  }
  else
  {
    v20 = *(_QWORD *)(v0 + 440);

    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BBFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  return swift_task_switch();
}

uint64_t sub_23E3BBFF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[17];
  v1 = v0[18];
  v3 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_23E3BC090;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_57;
  v5[4] = v4;
  objc_msgSend(v3, sel_assignAccessory_toRoom_completionHandler_, v2, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_23E3BC090()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3BC0F0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 128);
  *(_QWORD *)(v0 + 120) = v1;
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40460);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(v0 + 112) = 0;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
  }
  sub_23E1E7C64(v0 + 80, &qword_256D40468);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3BC198()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AccessoryDetailsBasicInfo.shouldShowInDashboard.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 32));
  sub_23E1E2F50(v1, (uint64_t)v8, v10);
  if (v9 == 2)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    v11 = (char *)&loc_23E3BC2BC + 4 * byte_23E54C4B3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  return v9 & 1;
}

uint64_t sub_23E3BC3F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 32));
  sub_23E1E2F50(a1, (uint64_t)v7, v9);
  if (v8 == 2)
  {
    AccessoryDetails.Payload.basicInfo.getter();
    v10 = v16;
    v11 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v10, v11);
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v12 = v8 & 1;
  }
  *a2 = v12 & 1;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.shouldShowInDashboard.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*AccessoryDetailsBasicInfo.shouldShowInDashboard.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10;
  char *v11;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[5] = v1;
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[6] = v6;
  v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v4[7] = v8;
  v9 = *(int *)(v7 + 32);
  *((_DWORD *)v4 + 16) = v9;
  v10 = *(unsigned __int8 *)(v2 + v9);
  sub_23E1E2F50(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10 == 2)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    v11 = (char *)&loc_23E3BC5F8 + 4 * byte_23E54C4B7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  *((_BYTE *)v4 + 68) = v10 & 1;
  return sub_23E3BC73C;
}

uint64_t AccessoryDetailsBasicInfo.isFavorite.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryDetailsBasicInfo();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 36));
  sub_23E1E2F50(v1, (uint64_t)v8, v10);
  if (v9 == 2)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v4, type metadata accessor for AccessoryDetails.Payload);
    v11 = (char *)&loc_23E3BC828 + 4 * byte_23E54C4BB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  return v9 & 1;
}

uint64_t sub_23E3BC95C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for AccessoryDetailsBasicInfo();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 36));
  sub_23E1E2F50(a1, (uint64_t)v7, v9);
  if (v8 == 2)
  {
    AccessoryDetails.Payload.basicInfo.getter();
    v10 = v16;
    v11 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 72))(v10, v11);
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
  else
  {
    result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
    v12 = v8 & 1;
  }
  *a2 = v12 & 1;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.isFavorite.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*AccessoryDetailsBasicInfo.isFavorite.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10;
  char *v11;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[5] = v1;
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[6] = v6;
  v7 = type metadata accessor for AccessoryDetailsBasicInfo();
  v8 = malloc(*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v4[7] = v8;
  v9 = *(int *)(v7 + 36);
  *((_DWORD *)v4 + 16) = v9;
  v10 = *(unsigned __int8 *)(v2 + v9);
  sub_23E1E2F50(v2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  if (v10 == 2)
  {
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
    v11 = (char *)&loc_23E3BCB64 + 4 * byte_23E54C4BF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryDetailsBasicInfo);
  *((_BYTE *)v4 + 68) = v10 & 1;
  return sub_23E3BC73C;
}

void sub_23E3BCCA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *a1;
  v2 = *(int *)(*a1 + 64);
  v4 = *(void **)(*a1 + 48);
  v3 = *(void **)(*a1 + 56);
  *(_BYTE *)(*(_QWORD *)(v1 + 40) + v2) = *(_BYTE *)(v1 + 68);
  free(v3);
  free(v4);
  free((void *)v1);
}

void AccessoryDetailsBasicInfo.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E3BCD70 + 4 * byte_23E54C4C3[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3BCD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 - 48) = type metadata accessor for StaticAccessory(0);
  *(_QWORD *)(v1 - 40) = sub_23E1EE1C4(&qword_256D456E8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_23E1E2FDC(v0, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v3, v4);
  __swift_destroy_boxed_opaque_existential_0(v1 - 72);
  return v3 & 1;
}

void AccessoryDetailsBasicInfo.batteryLevel.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  _QWORD v18[14];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v18[7] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v18[6] = (char *)v18 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v18[3] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v18[5] = (char *)v18 - v10;
  v11 = type metadata accessor for StaticAccessory(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v18[4] = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v14);
  sub_23E1E2F50(v0, (uint64_t)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  v17 = (char *)sub_23E3BD070 + 4 * byte_23E54C4C7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3BD070()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for AccessoryDetails.Payload);
  return 0;
}

void AccessoryDetailsBasicInfo.chargingState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = type metadata accessor for StaticService();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v5);
  sub_23E1E2F50(v0, (uint64_t)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v8 = (char *)sub_23E3BD820 + 4 * byte_23E54C4CB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3BD820()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for AccessoryDetails.Payload);
  return 2;
}

void AccessoryDetailsBasicInfo.defaultIcon.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E3BDB30 + 4 * byte_23E54C4CF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3BDB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 48) = type metadata accessor for StaticAccessory(0);
  *(_QWORD *)(v1 - 40) = sub_23E1EE1C4(&qword_256D456E8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 - 72));
  sub_23E1E2FDC(v0, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
  v3 = *(_QWORD *)(v1 - 48);
  v4 = *(_QWORD *)(v1 - 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 72), v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4);
  v5 = *(_QWORD *)(v1 - 88);
  v6 = *(_QWORD *)(v1 - 80);
  *(_DWORD *)(v1 - 120) = *(_DWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 112) = v5;
  *(_QWORD *)(v1 - 104) = v6;
  StatusIcon.defaultIconSymbol()();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(v1 - 72);
}

uint64_t AccessoryDetailsBasicInfo.iconSymbol.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  int v7;
  char *v8;
  __int16 v9;

  v3 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for AccessoryDetailsBasicInfo();
  v7 = *(unsigned __int8 *)(v1 + *(int *)(result + 40));
  if (v7 == 88)
  {
    sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails.Payload);
    v8 = (char *)&loc_23E3BDCFC + 4 * byte_23E54C4D3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *a1 = v7;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.iconSymbol.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = *a1;
  if (qword_256D3ED78 != -1)
    swift_once();
  v3 = sub_23E5371A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_256D42C38);
  v4 = sub_23E537190();
  v5 = sub_23E537B20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v11 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = IconSymbol.rawValue.getter();
    sub_23E1FD768(v8, v9, &v11);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v4, v5, "Write %s to dataModel icon", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }

  result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

void (*AccessoryDetailsBasicInfo.iconSymbol.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int v6;
  char *v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = type metadata accessor for AccessoryDetails.Payload(0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[6] = v5;
  v6 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for AccessoryDetailsBasicInfo() + 40));
  if (v6 == 88)
  {
    sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails.Payload);
    v7 = (char *)&loc_23E3BE090 + 4 * byte_23E54C4D7[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *((_BYTE *)v3 + 56) = v6;
  return sub_23E3BE1FC;
}

void sub_23E3BE1FC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  char *v4;
  char v5;
  char v6;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    v5 = *(_BYTE *)(*(_QWORD *)a1 + 56);
    v4 = &v5;
  }
  else
  {
    v6 = *(_BYTE *)(*(_QWORD *)a1 + 56);
    v4 = &v6;
  }
  AccessoryDetailsBasicInfo.iconSymbol.setter(v4);
  free(v3);
  free(v2);
}

void AccessoryDetailsBasicInfo.symbolSet.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v13 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v8);
  sub_23E1E2F50(v16, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)&loc_23E3BE454 + *((int *)qword_23E3BE728 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void *sub_23E3BE464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  sub_23E1E2FDC(v2, v0, type metadata accessor for StaticAccessory);
  StaticAccessory.primaryStaticService.getter(v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v1) == 1)
  {
    sub_23E1E7C64(v4, &qword_254332DE8);
    sub_23E1E2FA0(v0, type metadata accessor for StaticAccessory);
    return (void *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23E1E2FDC(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (*(_BYTE *)(v5 + *(int *)(v1 + 84)) == 30)
      v6 = &unk_250EDEC68;
    else
      v6 = (void *)MEMORY[0x24BEE4AF8];
    sub_23E1E2FA0(v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0(v0, type metadata accessor for StaticAccessory);
  }
  return v6;
}

uint64_t AccessoryDetailsBasicInfo.primaryStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = type metadata accessor for StaticService();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - v6;
  AccessoryDetailsBasicInfo.staticServices.getter();
  v9 = v8;
  v10 = v8 + 56;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v8 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(v9 + 48) + *(_QWORD *)(v2 + 72) * i, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v5[*(int *)(v1 + 24)] == 1)
    {
      swift_release();
      v22 = v24;
      sub_23E1E2FDC((uint64_t)v5, v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v22, 0, 1, v1);
      return swift_bridgeObjectRelease();
    }
    result = sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v19 >= v14)
      goto LABEL_27;
    v20 = *(_QWORD *)(v10 + 8 * v19);
    ++v16;
    if (v20)
      goto LABEL_22;
    v16 = v19 + 1;
    if (v19 + 1 >= v14)
      goto LABEL_27;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    if (v20)
      goto LABEL_22;
    v16 = v19 + 2;
    if (v19 + 2 >= v14)
      goto LABEL_27;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    if (v20)
      goto LABEL_22;
    v16 = v19 + 3;
    if (v19 + 3 >= v14)
      goto LABEL_27;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    if (v20)
      goto LABEL_22;
    v16 = v19 + 4;
    if (v19 + 4 >= v14)
      goto LABEL_27;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    if (v20)
      goto LABEL_22;
    v21 = v19 + 5;
    if (v21 >= v14)
    {
LABEL_27:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v24, 1, 1, v1);
      return swift_bridgeObjectRelease();
    }
    v20 = *(_QWORD *)(v10 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v16 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_30;
        if (v16 >= v14)
          goto LABEL_27;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        ++v21;
        if (v20)
          goto LABEL_22;
      }
    }
    v16 = v21;
LABEL_22:
    v13 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void AccessoryDetailsBasicInfo.staticServices.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23E1E2F50(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_23E3BEAD8 + 4 * byte_23E54C4DB[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3BEAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_23E1E2FDC(v2, v0, type metadata accessor for StaticAccessory);
  v4 = *(_QWORD *)(v0 + *(int *)(v1 + 80));
  MEMORY[0x24BDAC7A8](v3);
  v9 = v0;
  swift_bridgeObjectRetain();
  v5 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v8, v4);
  swift_bridgeObjectRelease();
  v6 = sub_23E4FDEC8(v5);
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v0, type metadata accessor for StaticAccessory);
  return v6;
}

uint64_t AccessoryDetailsBasicInfo.primaryServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v4);
  v8 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    v9 = sub_23E536F80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
LABEL_4:
    sub_23E536F74();
    return sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
  }
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v4, v10);
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    goto LABEL_4;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v7, v10);
}

uint64_t AccessoryDetailsBasicInfo.primaryServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v4);
  v5 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    v7 = 0;
  }
  else
  {
    v7 = v4[*(int *)(v5 + 84)];
    result = sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *a1 = v7;
  return result;
}

uint64_t AccessoryDetailsBasicInfo.displayAsServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  int v10;
  uint64_t v11;

  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v8, &qword_254332DE8);
    LOBYTE(v10) = 0;
  }
  else
  {
    v10 = v8[*(int *)(v2 + 92)];
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v10 == 53)
      LOBYTE(v10) = v5[*(int *)(v2 + 84)];
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *a1 = v10;
  return result;
}

void AccessoryDetailsBasicInfo.foregroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  _BYTE v8[16];

  v0 = type metadata accessor for StaticService();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_254332DE8);
    LOBYTE(v7) = 0;
  }
  else
  {
    v7 = v6[*(int *)(v0 + 92)];
    sub_23E1E2F50((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v7 == 53)
      LOBYTE(v7) = v3[*(int *)(v0 + 84)];
    sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v8[15] = v7;
  ServiceKind.foregroundColor.getter();
}

uint64_t AccessoryDetailsBasicInfo.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  _BYTE v8[32];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v2);
  v3 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_254332DE8);
    v4 = 0;
  }
  else
  {
    v5 = v2[*(int *)(v3 + 84)];
    sub_23E1E2FA0((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v8[31] = v5;
    ServiceKind.togglingCharacteristicKind.getter(v8);
    if (v8[0] == 174)
    {
      if (qword_256D3ED38 != -1)
        swift_once();
      swift_beginAccess();
      v6 = off_256D42460;
      swift_bridgeObjectRetain();
      v4 = sub_23E1E333C(v5, (uint64_t)v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 1;
    }
  }
  return v4 & 1;
}

uint64_t type metadata accessor for AccessoryDetailsBasicInfo()
{
  uint64_t result;

  result = qword_256D45768;
  if (!qword_256D45768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E3BF2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23E23C694;
  return sub_23E45915C(a1, a2, v7, v6);
}

uint64_t sub_23E3BF348(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for StaticRoom(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E530D68(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E3BF3C8(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E3BF3C8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  BOOL v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;

  v152 = type metadata accessor for StaticRoom(0);
  v147 = *(_QWORD *)(v152 - 8);
  v2 = MEMORY[0x24BDAC7A8](v152);
  v143 = (uint64_t)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v153 = (uint64_t)&v135 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v135 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v135 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v145 = (uint64_t)&v135 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v144 = (uint64_t)&v135 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v140 = (uint64_t)&v135 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v139 = (uint64_t)&v135 - v18;
  v156 = a1;
  v19 = a1[1];
  result = sub_23E53830C();
  if (result >= v19)
  {
    if (v19 < 0)
      goto LABEL_154;
    if (v19)
      return sub_23E3BFE74(0, v19, 1, v156);
    return result;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_162;
  v149 = v11;
  v150 = v8;
  v137 = result;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x24BEE4AF8];
    v146 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
    v136 = MEMORY[0x24BEE4AF8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_120:
      v127 = v25;
      if (v27 >= 2)
      {
        v128 = *v156;
        do
        {
          v129 = v27 - 2;
          if (v27 < 2)
            goto LABEL_149;
          if (!v128)
            goto LABEL_161;
          v130 = *(_QWORD *)&v127[16 * v129 + 32];
          v131 = *(_QWORD *)&v127[16 * v27 + 24];
          v132 = v148;
          sub_23E3C00E8(v128 + *(_QWORD *)(v147 + 72) * v130, v128 + *(_QWORD *)(v147 + 72) * *(_QWORD *)&v127[16 * v27 + 16], v128 + *(_QWORD *)(v147 + 72) * v131, v146);
          v148 = v132;
          if (v132)
            break;
          if (v131 < v130)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v127 = sub_23E530CC8((uint64_t)v127);
          if (v129 >= *((_QWORD *)v127 + 2))
            goto LABEL_151;
          v133 = &v127[16 * v129 + 32];
          *(_QWORD *)v133 = v130;
          *((_QWORD *)v133 + 1) = v131;
          v134 = *((_QWORD *)v127 + 2);
          if (v27 > v134)
            goto LABEL_152;
          memmove(&v127[16 * v27 + 16], &v127[16 * v27 + 32], 16 * (v134 - v27));
          *((_QWORD *)v127 + 2) = v134 - 1;
          v27 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_23E537844();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v147 + 80);
    v136 = v23;
    v146 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    if (v26 + 1 >= v19)
      break;
    v30 = *v156;
    v31 = *(_QWORD *)(v147 + 72);
    v32 = v139;
    sub_23E1E2F50(*v156 + v31 * v29, v139, type metadata accessor for StaticRoom);
    v151 = v30;
    v155 = v31;
    v33 = v30 + v31 * v28;
    v34 = v140;
    sub_23E1E2F50(v33, v140, type metadata accessor for StaticRoom);
    v35 = *(int *)(v152 + 20);
    v36 = *(_QWORD *)(v32 + v35);
    v37 = *(_QWORD *)(v32 + v35 + 8);
    v38 = (_QWORD *)(v34 + v35);
    if (v36 == *v38 && v37 == v38[1])
      LODWORD(v154) = 0;
    else
      LODWORD(v154) = sub_23E538354();
    sub_23E1E2FA0(v140, type metadata accessor for StaticRoom);
    sub_23E1E2FA0(v139, type metadata accessor for StaticRoom);
    v26 = v28 + 2;
    if (v28 + 2 < v19)
    {
      v40 = v28;
      v138 = v25;
      v41 = v155 * v29;
      v42 = v151;
      v43 = v155 * v26;
      while (1)
      {
        v44 = v144;
        sub_23E1E2F50(v42 + v43, v144, type metadata accessor for StaticRoom);
        v45 = v145;
        sub_23E1E2F50(v42 + v41, v145, type metadata accessor for StaticRoom);
        v46 = *(int *)(v152 + 20);
        v47 = *(_QWORD *)(v44 + v46);
        v48 = *(_QWORD *)(v44 + v46 + 8);
        v49 = (_QWORD *)(v45 + v46);
        v50 = v47 == *v49 && v48 == v49[1];
        v51 = v50 ? 0 : sub_23E538354();
        sub_23E1E2FA0(v145, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v144, type metadata accessor for StaticRoom);
        if (((v154 ^ v51) & 1) != 0)
          break;
        v42 += v155;
        if (v19 == ++v26)
        {
          v26 = v19;
          break;
        }
      }
      v25 = v138;
      v28 = v40;
    }
    if ((v154 & 1) == 0)
      goto LABEL_48;
    if (v26 < v28)
      goto LABEL_155;
    if (v28 >= v26)
      goto LABEL_48;
    v154 = v19;
    v138 = v25;
    v52 = 0;
    v53 = v155 * (v26 - 1);
    v54 = v28;
    v55 = v26 * v155;
    v56 = v54;
    v142 = v54;
    v57 = v54 * v155;
    v58 = (uint64_t)v150;
    do
    {
      if (v56 != v26 + v52 - 1)
      {
        v59 = v151;
        if (!v151)
          goto LABEL_160;
        v60 = v151 + v57;
        sub_23E1E2FDC(v151 + v57, v143, type metadata accessor for StaticRoom);
        if (v57 < v53 || v60 >= v59 + v55)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 != v53)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_23E1E2FDC(v143, v59 + v53, type metadata accessor for StaticRoom);
        v58 = (uint64_t)v150;
      }
      ++v56;
      --v52;
      v53 -= v155;
      v55 -= v155;
      v57 += v155;
    }
    while (v56 < v26 + v52);
    v25 = v138;
    v19 = v154;
    v28 = v142;
    if (v26 < v154)
      goto LABEL_49;
LABEL_72:
    if (v26 < v28)
      goto LABEL_148;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_23E530794(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v75 = *((_QWORD *)v25 + 2);
    v74 = *((_QWORD *)v25 + 3);
    v27 = v75 + 1;
    v76 = v28;
    if (v75 >= v74 >> 1)
      v25 = sub_23E530794((char *)(v74 > 1), v75 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v77 = v25 + 32;
    v78 = &v25[16 * v75 + 32];
    *(_QWORD *)v78 = v76;
    *((_QWORD *)v78 + 1) = v26;
    if (v75)
    {
      while (1)
      {
        v79 = v27 - 1;
        if (v27 >= 4)
        {
          v84 = &v77[16 * v27];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_137;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_138;
          v91 = v27 - 2;
          v92 = &v77[16 * v27 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_140;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_143;
          if (v96 >= v87)
          {
            v114 = &v77[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_147;
            v107 = v82 < v117;
            goto LABEL_109;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v108 = *((_QWORD *)v25 + 4);
            v109 = *((_QWORD *)v25 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_103;
          }
          v81 = *((_QWORD *)v25 + 4);
          v80 = *((_QWORD *)v25 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_139;
        v91 = v27 - 2;
        v97 = &v77[16 * v27 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_142;
        v103 = &v77[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_145;
        if (__OFADD__(v101, v106))
          goto LABEL_146;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_109:
          if (v107)
            v79 = v91;
          goto LABEL_111;
        }
LABEL_103:
        if ((v102 & 1) != 0)
          goto LABEL_141;
        v110 = &v77[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_144;
        if (v113 < v101)
          goto LABEL_14;
LABEL_111:
        v118 = v79 - 1;
        if (v79 - 1 >= v27)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v156)
          goto LABEL_159;
        v119 = v26;
        v120 = v25;
        v121 = &v77[16 * v118];
        v122 = *(_QWORD *)v121;
        v123 = &v77[16 * v79];
        v124 = *((_QWORD *)v123 + 1);
        v125 = v148;
        sub_23E3C00E8(*v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v121, *v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v123, *v156 + *(_QWORD *)(v147 + 72) * v124, v146);
        v148 = v125;
        if (v125)
          goto LABEL_131;
        if (v124 < v122)
          goto LABEL_134;
        if (v79 > *((_QWORD *)v120 + 2))
          goto LABEL_135;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v77[16 * v118 + 8] = v124;
        v126 = *((_QWORD *)v120 + 2);
        if (v79 >= v126)
          goto LABEL_136;
        v25 = v120;
        v27 = v126 - 1;
        memmove(&v77[16 * v79], v123 + 16, 16 * (v126 - 1 - v79));
        *((_QWORD *)v120 + 2) = v126 - 1;
        v26 = v119;
        if (v126 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = v156[1];
    if (v26 >= v19)
      goto LABEL_120;
  }
  ++v26;
LABEL_48:
  v58 = (uint64_t)v150;
  if (v26 >= v19)
    goto LABEL_72;
LABEL_49:
  if (__OFSUB__(v26, v28))
    goto LABEL_153;
  if (v26 - v28 >= v137)
    goto LABEL_72;
  if (__OFADD__(v28, v137))
    goto LABEL_156;
  if (v28 + v137 >= v19)
    v61 = v19;
  else
    v61 = v28 + v137;
  if (v61 >= v28)
  {
    if (v26 != v61)
    {
      v138 = v25;
      v151 = *(_QWORD *)(v147 + 72);
      v154 = v26 * v151;
      v155 = v151 * (v26 - 1);
      v141 = v61;
      v142 = v28;
      do
      {
        v62 = 0;
        v63 = v28;
        while (1)
        {
          v64 = *v156;
          v65 = (uint64_t)v149;
          sub_23E1E2F50(v154 + v62 + *v156, (uint64_t)v149, type metadata accessor for StaticRoom);
          sub_23E1E2F50(v155 + v62 + v64, v58, type metadata accessor for StaticRoom);
          v66 = *(int *)(v152 + 20);
          v67 = *(_QWORD *)(v65 + v66);
          v68 = *(_QWORD *)(v65 + v66 + 8);
          v69 = (_QWORD *)(v58 + v66);
          if (v67 == *v69 && v68 == v69[1])
            break;
          v71 = sub_23E538354();
          sub_23E1E2FA0(v58, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v65, type metadata accessor for StaticRoom);
          if ((v71 & 1) == 0)
            goto LABEL_59;
          v72 = *v156;
          if (!*v156)
            goto LABEL_158;
          v73 = v72 + v155 + v62;
          sub_23E1E2FDC(v72 + v154 + v62, v153, type metadata accessor for StaticRoom);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v153, v73, type metadata accessor for StaticRoom);
          v58 = (uint64_t)v150;
          v62 -= v151;
          if (v26 == ++v63)
            goto LABEL_59;
        }
        sub_23E1E2FA0(v58, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v65, type metadata accessor for StaticRoom);
LABEL_59:
        ++v26;
        v155 += v151;
        v154 += v151;
        v28 = v142;
      }
      while (v26 != v141);
      v26 = v141;
      v25 = v138;
    }
    goto LABEL_72;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E3BFE74(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a1;
  v36 = type metadata accessor for StaticRoom(0);
  v7 = MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v30 - v14;
  v35 = a3;
  v31 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v39 = v16 * (v35 - 1);
    v34 = v16;
    v38 = v16 * v35;
    v33 = (char *)&v30 - v14;
LABEL_6:
    v17 = 0;
    v18 = v32;
    while (1)
    {
      v19 = *a4;
      sub_23E1E2F50(v38 + v17 + *a4, (uint64_t)v15, type metadata accessor for StaticRoom);
      sub_23E1E2F50(v39 + v17 + v19, (uint64_t)v11, type metadata accessor for StaticRoom);
      v20 = *(int *)(v36 + 20);
      v21 = *(_QWORD *)&v15[v20];
      v22 = *(_QWORD *)&v15[v20 + 8];
      v23 = &v11[v20];
      if (v21 == *(_QWORD *)v23 && v22 == *((_QWORD *)v23 + 1))
      {
        sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticRoom);
        result = sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticRoom);
LABEL_5:
        v39 += v34;
        v38 += v34;
        if (++v35 == v31)
          return result;
        goto LABEL_6;
      }
      v25 = sub_23E538354();
      sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticRoom);
      result = sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticRoom);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v11;
      v28 = a4;
      v29 = v26 + v39 + v17;
      sub_23E1E2FDC(v26 + v38 + v17, v37, type metadata accessor for StaticRoom);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v37, v29, type metadata accessor for StaticRoom);
      v17 -= v34;
      ++v18;
      a4 = v28;
      v11 = v27;
      v15 = v33;
      if (v35 == v18)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E3C00E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v54 = type metadata accessor for StaticRoom(0);
  v8 = MEMORY[0x24BDAC7A8](v54);
  v53 = (unint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v51 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v51 - v16;
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v57 = a1;
  v56 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v35 = a4 + v24;
      v55 = a4 + v24;
      v57 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v37 = -v19;
        do
        {
          v38 = a1;
          v39 = v52;
          sub_23E1E2F50(v35 + v37, v52, type metadata accessor for StaticRoom);
          v40 = a2 + v37;
          v41 = v53;
          sub_23E1E2F50(a2 + v37, v53, type metadata accessor for StaticRoom);
          v42 = *(int *)(v54 + 20);
          v43 = *(_QWORD *)(v39 + v42);
          v44 = *(_QWORD *)(v39 + v42 + 8);
          v45 = (_QWORD *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1])
            v47 = 0;
          else
            v47 = sub_23E538354();
          v48 = a3 + v37;
          sub_23E1E2FA0(v53, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v52, type metadata accessor for StaticRoom);
          if ((v47 & 1) != 0)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v57 += v37;
          }
          else
          {
            v49 = v55;
            v55 += v37;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              v40 = a2;
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != v49)
                swift_arrayInitWithTakeBackToFront();
              v40 = a2;
            }
          }
          v35 = v55;
          if (v55 <= a4)
            break;
          a2 = v40;
          a3 += v37;
        }
        while (v40 > a1);
      }
LABEL_70:
      sub_23E5308DC(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v53 = a4 + v23;
    v55 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_23E1E2F50(a2, (uint64_t)v17, type metadata accessor for StaticRoom);
        sub_23E1E2F50(a4, (uint64_t)v14, type metadata accessor for StaticRoom);
        v26 = *(int *)(v54 + 20);
        v27 = *(_QWORD *)&v17[v26];
        v28 = *(_QWORD *)&v17[v26 + 8];
        v29 = &v14[v26];
        if (v27 == *(_QWORD *)v29 && v28 == *((_QWORD *)v29 + 1))
          break;
        v31 = sub_23E538354();
        sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticRoom);
        if ((v31 & 1) == 0)
          goto LABEL_32;
        v32 = v57;
        v33 = a2 + v19;
        if (v57 < a2 || v57 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v57 = v32 + v19;
        a4 = v56;
        if (v56 < v53)
        {
          a2 = v33;
          if (v33 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticRoom);
      sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticRoom);
LABEL_32:
      v32 = v57;
      v34 = v56 + v19;
      if (v57 < v56 || v57 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v56 = v34;
      v33 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel25AccessoryDetailsBasicInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  char v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  int v46;
  int v47;
  _BOOL4 v48;
  uint64_t v49;
  int v50;
  int v51;
  _BOOL4 v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  char v66;
  char v67;

  v4 = type metadata accessor for StaticRoom(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D457E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v61 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v61 - v18;
  if ((static AccessoryDetails.Payload.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v20 = type metadata accessor for AccessoryDetailsBasicInfo();
  v21 = *(int *)(v20 + 20);
  v22 = (_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  if (!v23)
  {
    if (v25)
      return 0;
    goto LABEL_11;
  }
  if (!v25)
    return 0;
  v26 = *v22 == *v24 && v23 == v25;
  if (v26 || (v65 = (int *)v20, v27 = sub_23E538354(), v20 = (uint64_t)v65, v28 = v27, result = 0, (v28 & 1) != 0))
  {
LABEL_11:
    v62 = v7;
    v63 = a1;
    v30 = v20;
    sub_23E1E7C20(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_256D3FE48);
    v64 = a2;
    v65 = (int *)v30;
    sub_23E1E7C20(a2 + *(int *)(v30 + 24), (uint64_t)v17, &qword_256D3FE48);
    v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E1E7C20((uint64_t)v19, (uint64_t)v10, &qword_256D3FE48);
    sub_23E1E7C20((uint64_t)v17, v31, &qword_256D3FE48);
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v32((uint64_t)v10, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_256D3FE48);
      sub_23E1E7C64((uint64_t)v19, &qword_256D3FE48);
      if (v32(v31, 1, v4) == 1)
      {
        sub_23E1E7C64((uint64_t)v10, &qword_256D3FE48);
LABEL_20:
        v36 = v64;
        v35 = v65;
        v37 = v65[7];
        v38 = v63;
        v39 = (_QWORD *)(v63 + v37);
        v40 = *(_QWORD *)(v63 + v37 + 8);
        v41 = (_QWORD *)(v64 + v37);
        v42 = v41[1];
        if (v40)
        {
          if (!v42)
            return 0;
          if (*v39 != *v41 || v40 != v42)
          {
            v43 = sub_23E538354();
            v35 = v65;
            v44 = v43;
            result = 0;
            if ((v44 & 1) == 0)
              return result;
          }
        }
        else if (v42)
        {
          return 0;
        }
        v45 = v35[8];
        v46 = *(unsigned __int8 *)(v38 + v45);
        v47 = *(unsigned __int8 *)(v36 + v45);
        if (v46 == 2)
        {
          if (v47 != 2)
            return 0;
        }
        else
        {
          result = 0;
          v48 = (v46 & 1) == 0;
          if (v47 == 2 || ((v48 ^ v47) & 1) == 0)
            return result;
        }
        v49 = v35[9];
        v50 = *(unsigned __int8 *)(v38 + v49);
        v51 = *(unsigned __int8 *)(v36 + v49);
        if (v50 == 2)
        {
          if (v51 != 2)
            return 0;
        }
        else
        {
          result = 0;
          v52 = (v50 & 1) == 0;
          if (v51 == 2 || ((v52 ^ v51) & 1) == 0)
            return result;
        }
        v53 = v35[10];
        v54 = *(unsigned __int8 *)(v38 + v53);
        v55 = *(unsigned __int8 *)(v36 + v53);
        if (v54 == 88)
        {
          if (v55 == 88)
            return 1;
        }
        else if (v55 != 88)
        {
          v67 = v54;
          v66 = v55;
          v56 = IconSymbol.rawValue.getter();
          v58 = v57;
          if (v56 == IconSymbol.rawValue.getter() && v58 == v59)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v60 = sub_23E538354();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v60 & 1) == 0)
              return 0;
          }
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_23E1E7C20((uint64_t)v10, (uint64_t)v14, &qword_256D3FE48);
      if (v32(v31, 1, v4) != 1)
      {
        v33 = (uint64_t)v62;
        sub_23E1E2FDC(v31, (uint64_t)v62, type metadata accessor for StaticRoom);
        v34 = static StaticRoom.== infix(_:_:)(v14, v33);
        sub_23E1E2FA0(v33, type metadata accessor for StaticRoom);
        sub_23E1E7C64((uint64_t)v17, &qword_256D3FE48);
        sub_23E1E7C64((uint64_t)v19, &qword_256D3FE48);
        sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticRoom);
        sub_23E1E7C64((uint64_t)v10, &qword_256D3FE48);
        if ((v34 & 1) == 0)
          return 0;
        goto LABEL_20;
      }
      sub_23E1E7C64((uint64_t)v17, &qword_256D3FE48);
      sub_23E1E7C64((uint64_t)v19, &qword_256D3FE48);
      sub_23E1E2FA0((uint64_t)v14, type metadata accessor for StaticRoom);
    }
    sub_23E1E7C64((uint64_t)v10, &qword_256D457E0);
    return 0;
  }
  return result;
}

unint64_t sub_23E3C0AF0()
{
  unint64_t result;

  result = qword_256D456B0;
  if (!qword_256D456B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54C7AC, &type metadata for AccessoryDetailsBasicInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D456B0);
  }
  return result;
}

uint64_t sub_23E3C0B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3C0B8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614E646567617473 && a2 == 0xEA0000000000656DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F52646567617473 && a2 == 0xEA00000000006D6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E5694F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569510 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E569530 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E569550)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_23E3C0E50()
{
  return sub_23E1EE1C4(&qword_256D45700, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo, (uint64_t)&protocol conformance descriptor for AccessoryDetailsBasicInfo);
}

uint64_t sub_23E3C0E84@<X0>(uint64_t a1@<X8>)
{
  return AccessoryDetailsBasicInfo.room.getter(a1);
}

uint64_t sub_23E3C0EAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return AccessoryDetailsBasicInfo.roomName.setter(v1, v2);
}

uint64_t sub_23E3C0EEC(char *a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(_BYTE *)(a2 + *(int *)(result + 32)) = v3;
  return result;
}

uint64_t sub_23E3C0F20(char *a1, uint64_t a2)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = type metadata accessor for AccessoryDetailsBasicInfo();
  *(_BYTE *)(a2 + *(int *)(result + 36)) = v3;
  return result;
}

uint64_t sub_23E3C0F50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = AccessoryDetailsBasicInfo.iconSymbol.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_23E3C0F88(char *a1)
{
  char v2;

  v2 = *a1;
  return AccessoryDetailsBasicInfo.iconSymbol.setter(&v2);
}

uint64_t initializeBufferWithCopyOfBuffer for AccessoryDetailsBasicInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for AccessoryDetails.Payload(0);
    v5 = (char *)&loc_23E3C1034 + 4 * byte_23E54C4DF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unsigned int (*v53)(void);

  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = a1 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = a1 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = a1 + v7[8];
      v35 = sub_23E536F20();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (!v37(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      v6(a1 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = a1 + v7[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v38, 1, v4))
        v6(v38, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = a1 + v7[26];
      v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
        goto LABEL_40;
      v6(v39, v4);
      v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v44 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v37(v44, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v44, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_40;
        v6(v41, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
      goto LABEL_40;
    case 1u:
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(a1, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v11(a1 + v12[10], v9);
      v13 = a1 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v11(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = a1 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v53 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v53)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = a1 + v12[24];
      v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v11(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = a1 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
        goto LABEL_34;
      v11(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v52 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53())
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v52, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v11(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v43 = a1 + v12[31];
      if (!v19(v43, 1, v9))
        v11(v43, v9);
LABEL_41:
      swift_bridgeObjectRelease();
      v45 = a1 + *(int *)(a2 + 24);
      v46 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46))
      {
        v47 = sub_23E536F80();
        v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8);
        v48(v45, v47);
        swift_bridgeObjectRelease();
        v49 = v45 + *(int *)(v46 + 28);
        v50 = type metadata accessor for StaticZone();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
        {
          v48(v49, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v48(v45 + *(int *)(v46 + 32), v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      goto LABEL_41;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(a1, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(a1 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = a1 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_41;
    default:
      goto LABEL_41;
  }
}

void initializeWithCopy for AccessoryDetailsBasicInfo()
{
  char *v0;

  type metadata accessor for AccessoryDetails.Payload(0);
  v0 = (char *)sub_23E3C2E9C + 4 * byte_23E54C4E7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3C2E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  unsigned int (*v55)(const void *, uint64_t, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  int EnumCaseMultiPayload;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int *updated;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  int *v126;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, int *);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  void (*v146)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v154;
  uint64_t v155;
  unsigned int (*v156)(const void *, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, char *, uint64_t);
  void (*v161)(char *, _QWORD, uint64_t, int *);
  int *v162;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v5(v0, v1, v3);
  v6 = (int *)type metadata accessor for StaticAccessory(0);
  v7 = v6[5];
  v8 = (_QWORD *)(v0 + v7);
  v9 = (_QWORD *)(v1 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v6[6];
  v12 = (_QWORD *)(v0 + v11);
  v13 = (_QWORD *)(v1 + v11);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5((uint64_t)v12, (uint64_t)v13, v3);
  }
  else
  {
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = v6[7];
  v16 = (char *)(v0 + v15);
  v17 = (char *)(v1 + v15);
  v18 = (int *)type metadata accessor for StaticDeviceMetadata();
  v19 = *((_QWORD *)v18 - 1);
  v158 = v4;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v5((uint64_t)v16, (uint64_t)v17, v3);
    v21 = v18[5];
    v22 = &v16[v21];
    v23 = &v17[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = v18[6];
    v26 = &v16[v25];
    v27 = &v17[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v18[7];
    v30 = &v16[v29];
    v31 = &v17[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = v18[8];
    v34 = &v16[v33];
    v35 = &v17[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    v16[v18[11]] = v17[v18[11]];
    v37 = *(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v1 = *(_QWORD *)(v2 - 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v16, 0, 1, v18);
  }
  v38 = v6[8];
  v39 = *(_QWORD *)(v2 - 88);
  v40 = (void *)(v39 + v38);
  v41 = (const void *)(v1 + v38);
  v42 = sub_23E536F20();
  v43 = *(_QWORD *)(v42 - 8);
  v156 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
  v157 = v42;
  v155 = v43;
  if (v156(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = v6[9];
  v46 = v39 + v45;
  v47 = v1 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_BYTE *)(v39 + v6[10]) = *(_BYTE *)(v1 + v6[10]);
  v5(v39 + v6[11], v1 + v6[11], v3);
  *(_QWORD *)(v39 + v6[12]) = *(_QWORD *)(v1 + v6[12]);
  v48 = v6[13];
  v49 = (_QWORD *)(v39 + v48);
  v50 = (_QWORD *)(v1 + v48);
  v51 = v50[1];
  *v49 = *v50;
  v49[1] = v51;
  *(_BYTE *)(v39 + v6[14]) = *(_BYTE *)(v1 + v6[14]);
  *(_BYTE *)(v39 + v6[15]) = *(_BYTE *)(v1 + v6[15]);
  *(_BYTE *)(v39 + v6[16]) = *(_BYTE *)(v1 + v6[16]);
  *(_BYTE *)(v39 + v6[17]) = *(_BYTE *)(v1 + v6[17]);
  *(_BYTE *)(v39 + v6[18]) = *(_BYTE *)(v1 + v6[18]);
  *(_QWORD *)(v39 + v6[19]) = *(_QWORD *)(v1 + v6[19]);
  *(_QWORD *)(v39 + v6[20]) = *(_QWORD *)(v1 + v6[20]);
  v52 = v6[21];
  v53 = (void *)(v39 + v52);
  v54 = (const void *)(v1 + v52);
  v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v158 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56 = (void (*)(char *, char *, uint64_t))v5;
  if (v55(v54, 1, v3))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v5((uint64_t)v53, (uint64_t)v54, v3);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v53, 0, 1, v3);
  }
  v59 = *(_QWORD *)(v2 - 96);
  v58 = *(_QWORD *)(v2 - 88);
  *(_WORD *)(v58 + v6[22]) = *(_WORD *)(v59 + v6[22]);
  v60 = v6[23];
  v61 = (_QWORD *)(v58 + v60);
  v62 = (_QWORD *)(v59 + v60);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  *(_QWORD *)(v58 + v6[24]) = *(_QWORD *)(v59 + v6[24]);
  *(_BYTE *)(v58 + v6[25]) = *(_BYTE *)(v59 + v6[25]);
  v64 = v6[26];
  v65 = (char *)(v58 + v64);
  v66 = (char *)(v59 + v64);
  v67 = type metadata accessor for StaticSoftwareUpdate(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v69(v66, 1, v67))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    v72 = *(_QWORD *)(v2 - 96);
    v71 = *(_QWORD *)(v2 - 88);
    v73 = v162;
    goto LABEL_31;
  }
  v56(v65, v66, v3);
  v74 = *(int *)(v67 + 20);
  v75 = &v65[v74];
  v76 = &v66[v74];
  v77 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v154 = v68;
  if (EnumCaseMultiPayload == 2)
  {
    v88 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v88;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v90 = updated[5];
    v91 = &v75[v90];
    v92 = &v76[v90];
    swift_bridgeObjectRetain();
    if (v156(v92, 1, v157))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v91, v92, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v91, 0, 1, v157);
    }
    v71 = *(_QWORD *)(v2 - 88);
    v73 = v162;
    v101 = updated[6];
    v102 = &v75[v101];
    v103 = &v76[v101];
    v104 = *((_QWORD *)v103 + 1);
    *(_QWORD *)v102 = *(_QWORD *)v103;
    *((_QWORD *)v102 + 1) = v104;
    v105 = updated[7];
    v106 = &v75[v105];
    v107 = &v76[v105];
    v108 = *((_QWORD *)v107 + 1);
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *((_QWORD *)v106 + 1) = v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
    v75[*(int *)(v109 + 48)] = v76[*(int *)(v109 + 48)];
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v71 = *(_QWORD *)(v2 - 88);
      if (EnumCaseMultiPayload)
      {
        memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
      }
      else
      {
        v56(v75, v76, v3);
        v79 = (int *)type metadata accessor for StaticHH2Update(0);
        v75[v79[5]] = v76[v79[5]];
        v80 = v79[6];
        v81 = &v75[v80];
        v82 = &v76[v80];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        *(_QWORD *)v81 = v84;
        *((_QWORD *)v81 + 1) = v83;
        v85 = v79[7];
        v86 = &v75[v85];
        v87 = &v76[v85];
        v86[8] = v87[8];
        *(_QWORD *)v86 = *(_QWORD *)v87;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      v72 = *(_QWORD *)(v2 - 96);
      v73 = v162;
      goto LABEL_30;
    }
    v94 = *((_QWORD *)v76 + 1);
    *(_QWORD *)v75 = *(_QWORD *)v76;
    *((_QWORD *)v75 + 1) = v94;
    v95 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v96 = v95[5];
    v97 = &v75[v96];
    v98 = &v76[v96];
    swift_bridgeObjectRetain();
    v99 = v156(v98, 1, v157);
    v71 = *(_QWORD *)(v2 - 88);
    if (v99)
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v97, v98, v157);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v97, 0, 1, v157);
    }
    v73 = v162;
    v110 = v95[6];
    v111 = &v75[v110];
    v112 = &v76[v110];
    v113 = *((_QWORD *)v112 + 1);
    *(_QWORD *)v111 = *(_QWORD *)v112;
    *((_QWORD *)v111 + 1) = v113;
    v114 = v95[7];
    v115 = &v75[v114];
    v116 = &v76[v114];
    v117 = *((_QWORD *)v116 + 1);
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *((_QWORD *)v115 + 1) = v117;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
    v75[*(int *)(v118 + 48)] = v76[*(int *)(v118 + 48)];
  }
  swift_storeEnumTagMultiPayload();
  v72 = *(_QWORD *)(v2 - 96);
LABEL_30:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v65, 0, 1, v67);
LABEL_31:
  *(_BYTE *)(v71 + v6[27]) = *(_BYTE *)(v72 + v6[27]);
  *(_BYTE *)(v71 + v6[28]) = *(_BYTE *)(v72 + v6[28]);
  *(_QWORD *)(v71 + v6[29]) = *(_QWORD *)(v72 + v6[29]);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v119 = v73[5];
  v120 = v73[6];
  v121 = (_QWORD *)(v71 + v119);
  v122 = (_QWORD *)(v72 + v119);
  v123 = v122[1];
  *v121 = *v122;
  v121[1] = v123;
  v124 = (char *)(v71 + v120);
  v125 = (char *)(v72 + v120);
  v126 = (int *)type metadata accessor for StaticRoom(0);
  v127 = *((_QWORD *)v126 - 1);
  v128 = *(unsigned int (**)(char *, uint64_t, int *))(v127 + 48);
  swift_bridgeObjectRetain();
  if (v128(v125, 1, v126))
  {
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v159 = v127;
    v130 = sub_23E536F80();
    v160 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
    v160(v124, v125, v130);
    v131 = v126[5];
    v132 = &v124[v131];
    v133 = &v125[v131];
    v134 = *((_QWORD *)v133 + 1);
    *(_QWORD *)v132 = *(_QWORD *)v133;
    *((_QWORD *)v132 + 1) = v134;
    v124[v126[6]] = v125[v126[6]];
    v135 = v126[7];
    v136 = &v124[v135];
    v137 = &v125[v135];
    v138 = type metadata accessor for StaticZone();
    v139 = *(_QWORD *)(v138 - 8);
    v140 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
    swift_bridgeObjectRetain();
    if (v140(v137, 1, v138))
    {
      v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    }
    else
    {
      v160(v136, v137, v130);
      v142 = *(int *)(v138 + 20);
      v143 = &v136[v142];
      v144 = &v137[v142];
      v145 = *((_QWORD *)v144 + 1);
      *(_QWORD *)v143 = *(_QWORD *)v144;
      *((_QWORD *)v143 + 1) = v145;
      *(_QWORD *)&v136[*(int *)(v138 + 24)] = *(_QWORD *)&v137[*(int *)(v138 + 24)];
      v146 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v146(v136, 0, 1, v138);
    }
    v160(&v124[v126[8]], &v125[v126[8]], v130);
    *(_QWORD *)&v124[v126[9]] = *(_QWORD *)&v125[v126[9]];
    *(_QWORD *)&v124[v126[10]] = *(_QWORD *)&v125[v126[10]];
    *(_QWORD *)&v124[v126[11]] = *(_QWORD *)&v125[v126[11]];
    *(_QWORD *)&v124[v126[12]] = *(_QWORD *)&v125[v126[12]];
    *(_QWORD *)&v124[v126[13]] = *(_QWORD *)&v125[v126[13]];
    *(_QWORD *)&v124[v126[14]] = *(_QWORD *)&v125[v126[14]];
    *(_QWORD *)&v124[v126[15]] = *(_QWORD *)&v125[v126[15]];
    *(_QWORD *)&v124[v126[16]] = *(_QWORD *)&v125[v126[16]];
    *(_QWORD *)&v124[v126[17]] = *(_QWORD *)&v125[v126[17]];
    v161 = *(void (**)(char *, _QWORD, uint64_t, int *))(v159 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v161(v124, 0, 1, v126);
    v72 = *(_QWORD *)(v2 - 96);
    v71 = *(_QWORD *)(v2 - 88);
    v73 = v162;
  }
  v147 = v73[7];
  v148 = v73[8];
  v149 = (_QWORD *)(v71 + v147);
  v150 = (_QWORD *)(v72 + v147);
  v151 = v150[1];
  *v149 = *v150;
  v149[1] = v151;
  *(_BYTE *)(v71 + v148) = *(_BYTE *)(v72 + v148);
  v152 = v73[10];
  *(_BYTE *)(v71 + v73[9]) = *(_BYTE *)(v72 + v73[9]);
  *(_BYTE *)(v71 + v152) = *(_BYTE *)(v72 + v152);
  swift_bridgeObjectRetain();
  return v71;
}

uint64_t assignWithCopy for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *);
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, _QWORD, uint64_t, int *);
  int *v66;
  uint64_t v67;
  uint64_t v68;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  if (a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    v6 = (char *)&loc_23E3C4438 + 4 * byte_23E54C4EB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = v3[6];
  v11 = (char *)(v5 + v10);
  v12 = (char *)(v4 + v10);
  v13 = (int *)type metadata accessor for StaticRoom(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticRoom);
      goto LABEL_9;
    }
    v66 = v3;
    v68 = v5;
    v30 = sub_23E536F80();
    v31 = *(_QWORD *)(v30 - 8);
    v62 = *(void (**)(char *, char *))(v31 + 24);
    v64 = v30;
    v62(v11, v12);
    v32 = v13[5];
    v33 = &v11[v32];
    v34 = &v12[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11[v13[6]] = v12[v13[6]];
    v35 = v13[7];
    v36 = &v11[v35];
    v37 = &v12[v35];
    v38 = type metadata accessor for StaticZone();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    v41 = v40(v36, 1, v38);
    v42 = v40(v37, 1, v38);
    if (v41)
    {
      if (!v42)
      {
        v43 = v64;
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v36, v37, v64);
        v44 = *(int *)(v38 + 20);
        v45 = &v36[v44];
        v46 = &v37[v44];
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
        *(_QWORD *)&v36[*(int *)(v38 + 24)] = *(_QWORD *)&v37[*(int *)(v38 + 24)];
        v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47(v36, 0, 1, v38);
        v5 = v68;
        v4 = a2;
LABEL_18:
        v53 = (void (*)(char *, char *, uint64_t))v62;
LABEL_19:
        v53(&v11[v13[8]], &v12[v13[8]], v43);
        *(_QWORD *)&v11[v13[9]] = *(_QWORD *)&v12[v13[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[10]] = *(_QWORD *)&v12[v13[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[12]] = *(_QWORD *)&v12[v13[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[13]] = *(_QWORD *)&v12[v13[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[14]] = *(_QWORD *)&v12[v13[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[15]] = *(_QWORD *)&v12[v13[15]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v11[v13[17]] = *(_QWORD *)&v12[v13[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_20:
        v3 = v66;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v42)
      {
        v53 = (void (*)(char *, char *, uint64_t))v62;
        v43 = v64;
        ((void (*)(char *, char *, uint64_t))v62)(v36, v37, v64);
        v58 = *(int *)(v38 + 20);
        v59 = &v36[v58];
        v60 = &v37[v58];
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v36[*(int *)(v38 + 24)] = *(_QWORD *)&v37[*(int *)(v38 + 24)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v5 = v68;
        v4 = a2;
        goto LABEL_19;
      }
      sub_23E1E2FA0((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    }
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    v5 = v68;
    v4 = a2;
    v43 = v64;
    goto LABEL_18;
  }
  if (!v17)
  {
    v61 = v14;
    v66 = v3;
    v67 = v5;
    v18 = sub_23E536F80();
    v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    v63(v11, v12, v18);
    v19 = v13[5];
    v20 = &v11[v19];
    v21 = &v12[v19];
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
    v11[v13[6]] = v12[v13[6]];
    v22 = v13[7];
    v23 = &v11[v22];
    v24 = &v12[v22];
    v25 = type metadata accessor for StaticZone();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v63(v23, v24, v18);
      v48 = *(int *)(v25 + 20);
      v49 = &v23[v48];
      v50 = &v24[v48];
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
      *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v23, 0, 1, v25);
    }
    v63(&v11[v13[8]], &v12[v13[8]], v18);
    *(_QWORD *)&v11[v13[9]] = *(_QWORD *)&v12[v13[9]];
    *(_QWORD *)&v11[v13[10]] = *(_QWORD *)&v12[v13[10]];
    *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
    *(_QWORD *)&v11[v13[12]] = *(_QWORD *)&v12[v13[12]];
    *(_QWORD *)&v11[v13[13]] = *(_QWORD *)&v12[v13[13]];
    *(_QWORD *)&v11[v13[14]] = *(_QWORD *)&v12[v13[14]];
    *(_QWORD *)&v11[v13[15]] = *(_QWORD *)&v12[v13[15]];
    *(_QWORD *)&v11[v13[16]] = *(_QWORD *)&v12[v13[16]];
    *(_QWORD *)&v11[v13[17]] = *(_QWORD *)&v12[v13[17]];
    v65 = *(void (**)(char *, _QWORD, uint64_t, int *))(v61 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v11, 0, 1, v13);
    v5 = v67;
    v4 = a2;
    goto LABEL_20;
  }
LABEL_9:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_21:
  v54 = v3[7];
  v55 = (_QWORD *)(v5 + v54);
  v56 = (_QWORD *)(v4 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v5 + v3[8]) = *(_BYTE *)(v4 + v3[8]);
  *(_BYTE *)(v5 + v3[9]) = *(_BYTE *)(v4 + v3[9]);
  *(_BYTE *)(v5 + v3[10]) = *(_BYTE *)(v4 + v3[10]);
  return v5;
}

void initializeWithTake for AccessoryDetailsBasicInfo()
{
  char *v0;

  type metadata accessor for AccessoryDetails.Payload(0);
  v0 = (char *)sub_23E3C5E90 + 4 * byte_23E54C4EF[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3C5E90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__dst, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  int *v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  int EnumCaseMultiPayload;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  _OWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *updated;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(const void *, uint64_t, uint64_t);
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  int *v108;
  int *v109;

  v108 = v34;
  v35 = sub_23E536F80();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
  v37(v32, v33, v35);
  v38 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(v32 + v38[5]) = *(_OWORD *)(v33 + v38[5]);
  v39 = v38[6];
  v40 = (void *)(v32 + v39);
  v41 = (const void *)(v33 + v39);
  v42 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v37((uint64_t)v40, (uint64_t)v41, v35);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  v43 = v38[7];
  v44 = (char *)(v32 + v43);
  v45 = (char *)(v33 + v43);
  v46 = (int *)type metadata accessor for StaticDeviceMetadata();
  v47 = *((_QWORD *)v46 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v37((uint64_t)v44, (uint64_t)v45, v35);
    *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
    *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
    *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
    *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
    v44[v46[9]] = v45[v46[9]];
    v44[v46[10]] = v45[v46[10]];
    v44[v46[11]] = v45[v46[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = v38[8];
  v50 = (void *)(v32 + v49);
  v51 = (const void *)(v33 + v49);
  v52 = sub_23E536F20();
  v53 = *(_QWORD *)(v52 - 8);
  v105 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
  if (v105(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v55 = v38[9];
  v56 = v32 + v55;
  v57 = v33 + v55;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  *(_BYTE *)(v32 + v38[10]) = *(_BYTE *)(v33 + v38[10]);
  v37(v32 + v38[11], v33 + v38[11], v35);
  *(_QWORD *)(v32 + v38[12]) = *(_QWORD *)(v33 + v38[12]);
  *(_OWORD *)(v32 + v38[13]) = *(_OWORD *)(v33 + v38[13]);
  *(_BYTE *)(v32 + v38[14]) = *(_BYTE *)(v33 + v38[14]);
  *(_BYTE *)(v32 + v38[15]) = *(_BYTE *)(v33 + v38[15]);
  *(_BYTE *)(v32 + v38[16]) = *(_BYTE *)(v33 + v38[16]);
  *(_BYTE *)(v32 + v38[17]) = *(_BYTE *)(v33 + v38[17]);
  *(_BYTE *)(v32 + v38[18]) = *(_BYTE *)(v33 + v38[18]);
  *(_QWORD *)(v32 + v38[19]) = *(_QWORD *)(v33 + v38[19]);
  *(_QWORD *)(v32 + v38[20]) = *(_QWORD *)(v33 + v38[20]);
  v58 = v38[21];
  v59 = (void *)(v32 + v58);
  v60 = (const void *)(v33 + v58);
  v104 = v53;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v33 + v58, 1, v35))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v37((uint64_t)v59, (uint64_t)v60, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v59, 0, 1, v35);
  }
  *(_WORD *)(v32 + v38[22]) = *(_WORD *)(v33 + v38[22]);
  *(_OWORD *)(v32 + v38[23]) = *(_OWORD *)(v33 + v38[23]);
  *(_QWORD *)(v32 + v38[24]) = *(_QWORD *)(v33 + v38[24]);
  *(_BYTE *)(v32 + v38[25]) = *(_BYTE *)(v33 + v38[25]);
  v62 = v38[26];
  v63 = (char *)(v32 + v62);
  v64 = (char *)(v33 + v62);
  v65 = type metadata accessor for StaticSoftwareUpdate(0);
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    v68 = v108;
    goto LABEL_28;
  }
  v103 = v66;
  v37((uint64_t)v63, (uint64_t)v64, v35);
  v69 = *(int *)(v65 + 20);
  v70 = &v63[v69];
  v71 = &v64[v69];
  v101 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v102 = v63;
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        v37((uint64_t)v70, (uint64_t)v71, v35);
        v73 = (int *)type metadata accessor for StaticHH2Update(0);
        v70[v73[5]] = v71[v73[5]];
        *(_OWORD *)&v70[v73[6]] = *(_OWORD *)&v71[v73[6]];
        v74 = v73[7];
        v75 = &v70[v74];
        v76 = &v71[v74];
        v75[8] = v76[8];
        *(_QWORD *)v75 = *(_QWORD *)v76;
        swift_storeEnumTagMultiPayload();
      }
      v68 = v108;
      goto LABEL_27;
    }
    v77 = v70;
    *(_OWORD *)v70 = *(_OWORD *)v71;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v81 = updated[5];
    v79 = &v70[v81];
    v80 = &v71[v81];
    if (v105(&v71[v81], 1, v52))
      goto LABEL_22;
LABEL_25:
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v79, v80, v52);
    v77 = v70;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v79, 0, 1, v52);
    goto LABEL_26;
  }
  v77 = v70;
  *(_OWORD *)v70 = *(_OWORD *)v71;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v78 = updated[5];
  v79 = &v70[v78];
  v80 = &v71[v78];
  if (!v105(&v71[v78], 1, v52))
    goto LABEL_25;
LABEL_22:
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
LABEL_26:
  v68 = v108;
  *(_OWORD *)((char *)v77 + updated[6]) = *(_OWORD *)&v71[updated[6]];
  *(_OWORD *)((char *)v77 + updated[7]) = *(_OWORD *)&v71[updated[7]];
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v77 + *(int *)(v83 + 48)) = v71[*(int *)(v83 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v102, 0, 1, v65);
LABEL_28:
  *(_BYTE *)(v32 + v38[27]) = *(_BYTE *)(v33 + v38[27]);
  *(_BYTE *)(v32 + v38[28]) = *(_BYTE *)(v33 + v38[28]);
  *(_QWORD *)(v32 + v38[29]) = *(_QWORD *)(v33 + v38[29]);
  swift_storeEnumTagMultiPayload();
  v84 = v68[6];
  *(_OWORD *)(v32 + v68[5]) = *(_OWORD *)(v33 + v68[5]);
  v85 = (char *)(v32 + v84);
  v86 = (char *)(v33 + v84);
  v87 = (int *)type metadata accessor for StaticRoom(0);
  v88 = *((_QWORD *)v87 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v88 + 48))(v86, 1, v87))
  {
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
  }
  else
  {
    v106 = v88;
    v109 = v68;
    v90 = sub_23E536F80();
    v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32);
    v107(v85, v86, v90);
    *(_OWORD *)&v85[v87[5]] = *(_OWORD *)&v86[v87[5]];
    v85[v87[6]] = v86[v87[6]];
    v91 = v87[7];
    v92 = &v85[v91];
    v93 = &v86[v91];
    v94 = type metadata accessor for StaticZone();
    v95 = *(_QWORD *)(v94 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
    {
      v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      v107(v92, v93, v90);
      *(_OWORD *)&v92[*(int *)(v94 + 20)] = *(_OWORD *)&v93[*(int *)(v94 + 20)];
      *(_QWORD *)&v92[*(int *)(v94 + 24)] = *(_QWORD *)&v93[*(int *)(v94 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
    }
    v107(&v85[v87[8]], &v86[v87[8]], v90);
    *(_QWORD *)&v85[v87[9]] = *(_QWORD *)&v86[v87[9]];
    *(_QWORD *)&v85[v87[10]] = *(_QWORD *)&v86[v87[10]];
    *(_QWORD *)&v85[v87[11]] = *(_QWORD *)&v86[v87[11]];
    *(_QWORD *)&v85[v87[12]] = *(_QWORD *)&v86[v87[12]];
    *(_QWORD *)&v85[v87[13]] = *(_QWORD *)&v86[v87[13]];
    *(_QWORD *)&v85[v87[14]] = *(_QWORD *)&v86[v87[14]];
    *(_QWORD *)&v85[v87[15]] = *(_QWORD *)&v86[v87[15]];
    *(_QWORD *)&v85[v87[16]] = *(_QWORD *)&v86[v87[16]];
    *(_QWORD *)&v85[v87[17]] = *(_QWORD *)&v86[v87[17]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v106 + 56))(v85, 0, 1, v87);
    v68 = v109;
  }
  v97 = v68[8];
  *(_OWORD *)(v32 + v68[7]) = *(_OWORD *)(v33 + v68[7]);
  *(_BYTE *)(v32 + v97) = *(_BYTE *)(v33 + v97);
  v98 = v68[10];
  *(_BYTE *)(v32 + v68[9]) = *(_BYTE *)(v33 + v68[9]);
  *(_BYTE *)(v32 + v98) = *(_BYTE *)(v33 + v98);
  return v32;
}

uint64_t assignWithTake for AccessoryDetailsBasicInfo(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(_BYTE *, _BYTE *);
  uint64_t v61;
  uint64_t v62;
  int *v63;
  int *v64;

  v3 = a3;
  if (a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for AccessoryDetails.Payload);
    type metadata accessor for AccessoryDetails.Payload(0);
    v6 = (char *)&loc_23E3C70D0 + 4 * byte_23E54C4F3[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = v3[6];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = (int *)type metadata accessor for StaticRoom(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_23E1E2FA0((uint64_t)v13, type metadata accessor for StaticRoom);
      goto LABEL_9;
    }
    v64 = v3;
    v28 = sub_23E536F80();
    v57 = *(_QWORD *)(v28 - 8);
    v60 = *(void (**)(_BYTE *, _BYTE *))(v57 + 40);
    v62 = v28;
    v60(v13, v14);
    v29 = v15[5];
    v30 = &v13[v29];
    v31 = (uint64_t *)&v14[v29];
    v33 = *v31;
    v32 = v31[1];
    *v30 = v33;
    v30[1] = v32;
    swift_bridgeObjectRelease();
    v13[v15[6]] = v14[v15[6]];
    v34 = v15[7];
    v35 = &v13[v34];
    v36 = &v14[v34];
    v37 = type metadata accessor for StaticZone();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v58 = (uint64_t)v35;
    LODWORD(v35) = v39(v35, 1, v37);
    v40 = v39(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (!v40)
      {
        v43 = v62;
        (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v58, v36, v62);
        *(_OWORD *)(v58 + *(int *)(v37 + 20)) = *(_OWORD *)&v36[*(int *)(v37 + 20)];
        *(_QWORD *)(v58 + *(int *)(v37 + 24)) = *(_QWORD *)&v36[*(int *)(v37 + 24)];
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v58, 0, 1, v37);
        v3 = v64;
        goto LABEL_19;
      }
      v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v42 = (void *)v58;
    }
    else
    {
      if (!v40)
      {
        v44 = (void (*)(_BYTE *, _BYTE *, uint64_t))v60;
        v43 = v62;
        ((void (*)(uint64_t, char *, uint64_t))v60)(v58, v36, v62);
        v52 = *(int *)(v37 + 20);
        v53 = (_QWORD *)(v58 + v52);
        v54 = &v36[v52];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        *v53 = v56;
        v53[1] = v55;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v58 + *(int *)(v37 + 24)) = *(_QWORD *)&v36[*(int *)(v37 + 24)];
        swift_bridgeObjectRelease();
        v3 = v64;
        goto LABEL_20;
      }
      sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v42 = (void *)v58;
    }
    memcpy(v42, v36, v41);
    v43 = v62;
    v3 = v64;
LABEL_19:
    v44 = (void (*)(_BYTE *, _BYTE *, uint64_t))v60;
LABEL_20:
    v44(&v13[v15[8]], &v14[v15[8]], v43);
    *(_QWORD *)&v13[v15[9]] = *(_QWORD *)&v14[v15[9]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[10]] = *(_QWORD *)&v14[v15[10]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[11]] = *(_QWORD *)&v14[v15[11]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[12]] = *(_QWORD *)&v14[v15[12]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[13]] = *(_QWORD *)&v14[v15[13]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[14]] = *(_QWORD *)&v14[v15[14]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[16]] = *(_QWORD *)&v14[v15[16]];
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v15[17]] = *(_QWORD *)&v14[v15[17]];
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v19)
  {
LABEL_9:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_21;
  }
  v63 = v3;
  v20 = sub_23E536F80();
  v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v61 = v20;
  ((void (*)(_BYTE *, _BYTE *))v59)(v13, v14);
  *(_OWORD *)&v13[v15[5]] = *(_OWORD *)&v14[v15[5]];
  v13[v15[6]] = v14[v15[6]];
  v21 = v15[7];
  v22 = &v13[v21];
  v23 = &v14[v21];
  v24 = type metadata accessor for StaticZone();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v59(v22, v23, v61);
    *(_OWORD *)&v22[*(int *)(v24 + 20)] = *(_OWORD *)&v23[*(int *)(v24 + 20)];
    *(_QWORD *)&v22[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v3 = v63;
  v59(&v13[v15[8]], &v14[v15[8]], v61);
  *(_QWORD *)&v13[v15[9]] = *(_QWORD *)&v14[v15[9]];
  *(_QWORD *)&v13[v15[10]] = *(_QWORD *)&v14[v15[10]];
  *(_QWORD *)&v13[v15[11]] = *(_QWORD *)&v14[v15[11]];
  *(_QWORD *)&v13[v15[12]] = *(_QWORD *)&v14[v15[12]];
  *(_QWORD *)&v13[v15[13]] = *(_QWORD *)&v14[v15[13]];
  *(_QWORD *)&v13[v15[14]] = *(_QWORD *)&v14[v15[14]];
  *(_QWORD *)&v13[v15[15]] = *(_QWORD *)&v14[v15[15]];
  *(_QWORD *)&v13[v15[16]] = *(_QWORD *)&v14[v15[16]];
  *(_QWORD *)&v13[v15[17]] = *(_QWORD *)&v14[v15[17]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_21:
  v45 = v3[7];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = v3[9];
  *(_BYTE *)(a1 + v3[8]) = *(_BYTE *)(a2 + v3[8]);
  *(_BYTE *)(a1 + v50) = *(_BYTE *)(a2 + v50);
  *(_BYTE *)(a1 + v3[10]) = *(_BYTE *)(a2 + v3[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryDetailsBasicInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3C855C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = type metadata accessor for AccessoryDetails.Payload(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryDetailsBasicInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3C8624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for AccessoryDetails.Payload(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E3C86D0()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for AccessoryDetails.Payload(319);
  if (v0 <= 0x3F)
  {
    sub_23E3C8774();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23E3C8774()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D45778[0])
  {
    type metadata accessor for StaticRoom(255);
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, qword_256D45778);
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryDetailsBasicInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E3C8814 + 4 * byte_23E54C4FC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E3C8848 + 4 * byte_23E54C4F7[v4]))();
}

uint64_t sub_23E3C8848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3C8850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3C8858);
  return result;
}

uint64_t sub_23E3C8864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3C886CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E3C8870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3C8878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetailsBasicInfo.CodingKeys()
{
  return &type metadata for AccessoryDetailsBasicInfo.CodingKeys;
}

unint64_t sub_23E3C8898()
{
  unint64_t result;

  result = qword_256D457C0;
  if (!qword_256D457C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54C784, &type metadata for AccessoryDetailsBasicInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D457C0);
  }
  return result;
}

unint64_t sub_23E3C88E0()
{
  unint64_t result;

  result = qword_256D457C8;
  if (!qword_256D457C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54C6F4, &type metadata for AccessoryDetailsBasicInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D457C8);
  }
  return result;
}

unint64_t sub_23E3C8928()
{
  unint64_t result;

  result = qword_256D457D0;
  if (!qword_256D457D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54C71C, &type metadata for AccessoryDetailsBasicInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D457D0);
  }
  return result;
}

uint64_t sub_23E3C896C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E3B71F4(a1, a2);
}

uint64_t sub_23E3C8984()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  int *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int (*v19)(unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int EnumCaseMultiPayload;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(void);
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  void (*v54)(unint64_t, uint64_t);
  uint64_t v55;

  v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v6(v0 + v2, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = v3 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = v3 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = v3 + v7[8];
      v35 = sub_23E536F20();
      v55 = *(_QWORD *)(v35 - 8);
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      if (!v53(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v34, v35);
      v6(v3 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v3 + v7[21];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v36, 1, v4))
        v6(v36, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v3 + v7[26];
      v38 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        goto LABEL_41;
      }
      v6(v37, v4);
      v39 = v37 + *(int *)(v38 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v42 = v39 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53(v42, 1, v35))
          (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v42, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_41;
        v6(v39, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1u:
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      v11(v0 + v2, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v54 = v11;
      v11(v3 + v12[10], v9);
      v13 = v3 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v54(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v3 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v52 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      v51 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v3 + v12[24];
      v19 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v54(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
      {
        goto LABEL_34;
      }
      v54(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v50 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v52())
          (*(void (**)(unint64_t, uint64_t))(v51 + 8))(v50, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v54(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v41 = v3 + v12[31];
      if (!v19(v41, 1, v9))
        v54(v41, v9);
LABEL_42:
      swift_bridgeObjectRelease();
      v43 = v3 + *(int *)(v1 + 24);
      v44 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44))
      {
        v45 = sub_23E536F80();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v43, v45);
        swift_bridgeObjectRelease();
        v47 = v43 + *(int *)(v44 + 28);
        v48 = type metadata accessor for StaticZone();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          v46(v47, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46(v43 + *(int *)(v44 + 32), v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v2, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(v0 + v2, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(v3 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = v3 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_42;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_23E3C92C8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23E3B9CB4(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_23E3C932C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  int *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int (*v19)(unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int EnumCaseMultiPayload;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(void);
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  void (*v54)(unint64_t, uint64_t);
  uint64_t v55;

  v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();

  v3 = v0 + v2;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v6(v0 + v2, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = v3 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = v3 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = v3 + v7[8];
      v35 = sub_23E536F20();
      v55 = *(_QWORD *)(v35 - 8);
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      if (!v53(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v34, v35);
      v6(v3 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v3 + v7[21];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v36, 1, v4))
        v6(v36, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v3 + v7[26];
      v38 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        goto LABEL_41;
      }
      v6(v37, v4);
      v39 = v37 + *(int *)(v38 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v42 = v39 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53(v42, 1, v35))
          (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v42, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_41;
        v6(v39, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1u:
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      v11(v0 + v2, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v54 = v11;
      v11(v3 + v12[10], v9);
      v13 = v3 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v54(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v3 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v52 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      v51 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v3 + v12[24];
      v19 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v54(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
      {
        goto LABEL_34;
      }
      v54(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v50 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v52())
          (*(void (**)(unint64_t, uint64_t))(v51 + 8))(v50, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v54(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v41 = v3 + v12[31];
      if (!v19(v41, 1, v9))
        v54(v41, v9);
LABEL_42:
      swift_bridgeObjectRelease();
      v43 = v3 + *(int *)(v1 + 24);
      v44 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44))
      {
        v45 = sub_23E536F80();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v43, v45);
        swift_bridgeObjectRelease();
        v47 = v43 + *(int *)(v44 + 28);
        v48 = type metadata accessor for StaticZone();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          v46(v47, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46(v43 + *(int *)(v44 + 32), v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v2, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(v0 + v2, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(v3 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = v3 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_42;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_23E3C9C78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for AccessoryDetailsBasicInfo() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23E23C694;
  return sub_23E3B9E20(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_23E3C9D34()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E3C9D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23E23D584;
  *(_QWORD *)(v3 + 144) = v2;
  *(_OWORD *)(v3 + 128) = v4;
  return swift_task_switch();
}

uint64_t sub_23E3C9DDC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  type metadata accessor for AccessoryDetailsBasicInfo();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitName()();
}

uint64_t sub_23E3C9E60()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  type metadata accessor for AccessoryDetailsBasicInfo();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitRoom()();
}

uint64_t sub_23E3C9EE4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  type metadata accessor for AccessoryDetailsBasicInfo();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitShouldShowInDashboard()();
}

uint64_t sub_23E3C9F68()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  type metadata accessor for AccessoryDetailsBasicInfo();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitIsFavorite()();
}

uint64_t objectdestroy_60Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  int *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int (*v19)(unint64_t, uint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int EnumCaseMultiPayload;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(void);
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  void (*v54)(unint64_t, uint64_t);
  uint64_t v55;

  v1 = type metadata accessor for AccessoryDetailsBasicInfo();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = sub_23E536F80();
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v6(v0 + v2, v4);
      v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      v8 = v3 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6(v8, v4);
      else
        swift_bridgeObjectRelease();
      v32 = v3 + v7[7];
      v33 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        v6(v32, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = v3 + v7[8];
      v35 = sub_23E536F20();
      v55 = *(_QWORD *)(v35 - 8);
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
      if (!v53(v34, 1, v35))
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v34, v35);
      v6(v3 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v3 + v7[21];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v36, 1, v4))
        v6(v36, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v3 + v7[26];
      v38 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        goto LABEL_41;
      }
      v6(v37, v4);
      v39 = v37 + *(int *)(v38 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v42 = v39 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v53(v42, 1, v35))
          (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v42, v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_41;
        v6(v39, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_41:
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 1u:
      v9 = sub_23E536F80();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
      v11(v0 + v2, v9);
      v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v54 = v11;
      v11(v3 + v12[10], v9);
      v13 = v3 + v12[12];
      v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v54(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v3 + v12[13];
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      v52 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      v51 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v3 + v12[24];
      v19 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9))
        v54(v18, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v3 + v12[28];
      v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
      {
        goto LABEL_34;
      }
      v54(v20, v9);
      v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        v50 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v52())
          (*(void (**)(unint64_t, uint64_t))(v51 + 8))(v50, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23)
          goto LABEL_34;
        v54(v22, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_34:
      swift_bridgeObjectRelease();
      v41 = v3 + v12[31];
      if (!v19(v41, 1, v9))
        v54(v41, v9);
LABEL_42:
      swift_bridgeObjectRelease();
      v43 = v3 + *(int *)(v1 + 24);
      v44 = type metadata accessor for StaticRoom(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44))
      {
        v45 = sub_23E536F80();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v43, v45);
        swift_bridgeObjectRelease();
        v47 = v43 + *(int *)(v44 + 28);
        v48 = type metadata accessor for StaticZone();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          v46(v47, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46(v43 + *(int *)(v44 + 32), v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 2u:
      v24 = sub_23E536F80();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v0 + v2, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    case 3u:
      v25 = sub_23E536F80();
      v26 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
      v26(v0 + v2, v25);
      v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(v3 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      v28 = v3 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v30 = sub_23E536F20();
      v31 = *(_QWORD *)(v30 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      goto LABEL_42;
    default:
      goto LABEL_42;
  }
}

uint64_t sub_23E3CA920()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  type metadata accessor for AccessoryDetailsBasicInfo();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return AccessoryDetailsBasicInfo.commitIconSymbol()();
}

uint64_t sub_23E3CA9A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t CameraClip.init(id:eventID:date:creationDate:isComplete:duration:significantEvents:posterFrameURL:timelapseID:timelapseOffset:timelapseQualityAssetURL:highQualityAssetURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);

  v18 = (int *)type metadata accessor for CameraClip();
  v19 = a9 + v18[11];
  v20 = sub_23E536DE8();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v22 = a9 + v18[12];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = a9 + v18[14];
  v21(v24, 1, 1, v20);
  v25 = a9 + v18[15];
  v21(v25, 1, 1, v20);
  v26 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(a9, a1, v26);
  sub_23E1E4E3C(a2, a9 + v18[5], &qword_256D40600);
  v27 = a9 + v18[6];
  v28 = sub_23E536F20();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v27, a3, v28);
  v29(a9 + v18[7], a4, v28);
  *(_BYTE *)(a9 + v18[8]) = a5;
  *(double *)(a9 + v18[9]) = a10;
  *(_QWORD *)(a9 + v18[10]) = a6;
  sub_23E223248(a7, v19, &qword_256D40610);
  sub_23E223248(a8, v22, &qword_256D40600);
  *(double *)(a9 + v18[13]) = a11;
  sub_23E223248(a12, v24, &qword_256D40610);
  return sub_23E223248(a13, v25, &qword_256D40610);
}

uint64_t type metadata accessor for CameraClip()
{
  uint64_t result;

  result = qword_256D458C8;
  if (!qword_256D458C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CameraClip.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CameraClip.eventID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CameraClip();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 20), a1, &qword_256D40600);
}

uint64_t CameraClip.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CameraClip() + 24);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CameraClip.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CameraClip() + 28);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CameraClip.isComplete.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CameraClip() + 32));
}

double CameraClip.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CameraClip() + 36));
}

uint64_t CameraClip.significantEvents.getter()
{
  type metadata accessor for CameraClip();
  return swift_bridgeObjectRetain();
}

uint64_t CameraClip.posterFrameURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CameraClip();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 44), a1, &qword_256D40610);
}

uint64_t CameraClip.timelapseID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CameraClip();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 48), a1, &qword_256D40600);
}

double CameraClip.timelapseOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CameraClip() + 52));
}

uint64_t CameraClip.timelapseQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CameraClip();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 56), a1, &qword_256D40610);
}

uint64_t CameraClip.highQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CameraClip();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 60), a1, &qword_256D40610);
}

uint64_t CameraClip.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v51[2];
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v2 = v1;
  v4 = sub_23E536DE8();
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v63 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v62 = (uint64_t)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v61 = (uint64_t)v51 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v58 = (uint64_t)v51 - v11;
  v12 = sub_23E536F80();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v55 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v53 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (uint64_t)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v60 = (uint64_t)v51 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v51 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v51 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v57 = (uint64_t)v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v51 - v29;
  v51[1] = sub_23E1EE1C4(&qword_254333DA0, v13, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v31 = (int *)type metadata accessor for CameraClip();
  sub_23E1E7C20(v2 + v31[5], (uint64_t)v30, &qword_256D40600);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v59 = v15;
  v56 = v32;
  v33 = v32((uint64_t)v30, 1, v15);
  v54 = v12;
  if (v33 == 1)
  {
    v34 = v55;
    sub_23E538474();
    v36 = v63;
    v35 = v64;
  }
  else
  {
    sub_23E1E4E3C((uint64_t)v30, (uint64_t)v25, &qword_254333F50);
    sub_23E538474();
    sub_23E1E7C20((uint64_t)v25, (uint64_t)v23, &qword_254333F50);
    v37 = v55;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v23, 1, v12) == 1)
    {
      v34 = v37;
      sub_23E538474();
    }
    else
    {
      v38 = v53;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v53, v23, v12);
      sub_23E538474();
      sub_23E5374D8();
      v34 = v37;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v12);
    }
    v36 = v63;
    v35 = v64;
    sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
  }
  v39 = v65;
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  sub_23E5374D8();
  sub_23E538474();
  sub_23E538498();
  v40 = *(_QWORD *)(v2 + v31[10]);
  swift_bridgeObjectRetain();
  sub_23E2618BC(a1, v40);
  swift_bridgeObjectRelease();
  v41 = v58;
  sub_23E1E7C20(v2 + v31[11], v58, &qword_256D40610);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v42(v41, 1, v39) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v36, v41, v39);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D45860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v39);
  }
  v43 = v57;
  sub_23E1E7C20(v2 + v31[12], v57, &qword_256D40600);
  if (v56(v43, 1, v59) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v44 = v60;
    sub_23E1E4E3C(v43, v60, &qword_254333F50);
    sub_23E538474();
    v45 = v52;
    sub_23E1E7C20(v44, v52, &qword_254333F50);
    v46 = v54;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v45, 1, v54) == 1)
    {
      sub_23E538474();
    }
    else
    {
      v47 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v45, v46);
      sub_23E538474();
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v46);
    }
    v39 = v65;
    sub_23E1E7C64(v60, &qword_254333F50);
  }
  sub_23E538498();
  v48 = v61;
  sub_23E1E7C20(v2 + v31[14], v61, &qword_256D40610);
  if (v42(v48, 1, v39) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v36, v48, v39);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D45860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v39);
  }
  v49 = v62;
  sub_23E1E7C20(v2 + v31[15], v62, &qword_256D40610);
  if (v42(v49, 1, v39) == 1)
    return sub_23E538474();
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v36, v49, v39);
  sub_23E538474();
  sub_23E1EE1C4(&qword_256D45860, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v39);
}

uint64_t CameraClip.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3CB614()
{
  _BYTE v1[72];

  sub_23E53845C();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3CB654()
{
  _BYTE v1[72];

  sub_23E53845C();
  CameraClip.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

BOOL _s13HomeDataModel10CameraClipV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  unsigned int v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  int *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v90;
  _BYTE *v91;
  void (*v92)(_BYTE *, uint64_t);
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_BYTE *, uint64_t);
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  int *v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  unsigned int v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  char v125;
  void (*v126)(_BYTE *, uint64_t);
  _BYTE *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  void (*v131)(_BYTE *, uint64_t);
  int *v132;
  _BYTE *v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  unsigned int (*v138)(uint64_t, uint64_t, uint64_t);
  _BYTE *v139;
  void (*v140)(_BYTE *, uint64_t, uint64_t);
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  char v144;
  void (*v145)(_BYTE *, uint64_t);
  _BYTE v146[4];
  int v147;
  unsigned int (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int *v153;
  _BYTE *v154;
  _BYTE *v155;
  _BYTE *v156;
  _BYTE *v157;
  _BYTE *v158;
  _BYTE *v159;
  _BYTE *v160;
  _BYTE *v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  _BYTE *v183;

  v174 = sub_23E536DE8();
  v172 = *(_QWORD *)(v174 - 8);
  MEMORY[0x24BDAC7A8](v174);
  v165 = &v146[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45938);
  v5 = MEMORY[0x24BDAC7A8](v171);
  v159 = &v146[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v160 = &v146[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v170 = &v146[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v154 = &v146[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v155 = &v146[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v156 = &v146[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v157 = &v146[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v182 = &v146[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v163 = &v146[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v167 = &v146[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v183 = &v146[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v173 = &v146[-v27];
  v28 = sub_23E536F80();
  v29 = *(_QWORD *)(v28 - 8);
  v179 = v28;
  v180 = v29;
  MEMORY[0x24BDAC7A8](v28);
  v175 = &v146[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  v31 = MEMORY[0x24BDAC7A8](v177);
  v162 = &v146[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v31);
  v181 = &v146[-v33];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v158 = &v146[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = MEMORY[0x24BDAC7A8](v36);
  v161 = &v146[-v39];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v176 = &v146[-v41];
  MEMORY[0x24BDAC7A8](v40);
  v178 = (uint64_t)&v146[-v42];
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45940);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v166 = &v146[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v44);
  v47 = &v146[-v46];
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v164 = &v146[-((v50 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = MEMORY[0x24BDAC7A8](v49);
  v168 = &v146[-v52];
  v53 = MEMORY[0x24BDAC7A8](v51);
  v169 = &v146[-v54];
  v55 = MEMORY[0x24BDAC7A8](v53);
  v57 = &v146[-v56];
  v58 = MEMORY[0x24BDAC7A8](v55);
  v60 = &v146[-v59];
  MEMORY[0x24BDAC7A8](v58);
  v62 = &v146[-v61];
  v63 = a2;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v64 = type metadata accessor for CameraClip();
  v65 = *(int *)(v64 + 20);
  v151 = a1;
  sub_23E1E7C20(a1 + v65, (uint64_t)v62, &qword_256D40600);
  v153 = (int *)v64;
  v66 = *(int *)(v64 + 20);
  v152 = v63;
  sub_23E1E7C20(v63 + v66, (uint64_t)v60, &qword_256D40600);
  v67 = (uint64_t)&v47[*(int *)(v43 + 48)];
  sub_23E1E7C20((uint64_t)v62, (uint64_t)v47, &qword_256D40600);
  sub_23E1E7C20((uint64_t)v60, v67, &qword_256D40600);
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  v69 = v43;
  if (v68((uint64_t)v47, 1, v34) == 1)
  {
    sub_23E1E7C64((uint64_t)v60, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v62, &qword_256D40600);
    v70 = v68(v67, 1, v34);
    v72 = (uint64_t)v182;
    v71 = v183;
    if (v70 == 1)
      goto LABEL_11;
    goto LABEL_7;
  }
  sub_23E1E7C20((uint64_t)v47, (uint64_t)v57, &qword_256D40600);
  if (v68(v67, 1, v34) == 1)
  {
    sub_23E1E7C64((uint64_t)v60, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v62, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v57, &qword_254333F50);
LABEL_7:
    v73 = &qword_256D45940;
LABEL_23:
    v88 = v47;
LABEL_24:
    sub_23E1E7C64((uint64_t)v88, v73);
    return 0;
  }
  v150 = v43;
  v74 = v178;
  sub_23E1E4E3C(v67, v178, &qword_254333F50);
  v75 = v181;
  v76 = (uint64_t)&v181[*(int *)(v177 + 48)];
  sub_23E1E4E3C((uint64_t)v57, (uint64_t)v181, &qword_254333F50);
  sub_23E1E7C20(v74, v76, &qword_254333F50);
  v77 = v179;
  v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
  if (v78((uint64_t)v75, 1, v179) == 1)
  {
    sub_23E1E7C64(v74, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v60, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v62, &qword_256D40600);
    if (v78(v76, 1, v179) == 1)
    {
      sub_23E1E7C64((uint64_t)v181, &qword_254333F50);
      v72 = (uint64_t)v182;
      v71 = v183;
      v69 = v150;
LABEL_11:
      v148 = v68;
      v150 = v69;
      v149 = v34;
      sub_23E1E7C64((uint64_t)v47, &qword_256D40600);
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  v87 = v176;
  sub_23E1E7C20((uint64_t)v75, (uint64_t)v176, &qword_254333F50);
  if (v78(v76, 1, v77) == 1)
  {
    sub_23E1E7C64(v178, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v60, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v62, &qword_256D40600);
    (*(void (**)(_BYTE *, uint64_t))(v180 + 8))(v87, v77);
LABEL_22:
    sub_23E1E7C64((uint64_t)v181, &qword_254332798);
    v73 = &qword_256D40600;
    goto LABEL_23;
  }
  v148 = v68;
  v149 = v34;
  v90 = v180;
  v91 = v175;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v180 + 32))(v175, v76, v77);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v147 = sub_23E537514();
  v92 = *(void (**)(_BYTE *, uint64_t))(v90 + 8);
  v92(v91, v77);
  sub_23E1E7C64(v178, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v60, &qword_256D40600);
  sub_23E1E7C64((uint64_t)v62, &qword_256D40600);
  v92(v87, v77);
  sub_23E1E7C64((uint64_t)v75, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v47, &qword_256D40600);
  v72 = (uint64_t)v182;
  v71 = v183;
  if ((v147 & 1) == 0)
    return 0;
LABEL_12:
  v79 = v153;
  v80 = v151;
  v81 = v152;
  if ((sub_23E536EF0() & 1) == 0
    || (sub_23E536EF0() & 1) == 0
    || *(unsigned __int8 *)(v80 + v79[8]) != *(unsigned __int8 *)(v81 + v79[8])
    || *(double *)(v80 + v79[9]) != *(double *)(v81 + v79[9])
    || (sub_23E262E7C(*(_QWORD *)(v80 + v79[10]), *(_QWORD *)(v81 + v79[10])) & 1) == 0)
  {
    return 0;
  }
  v82 = v173;
  sub_23E1E7C20(v80 + v79[11], (uint64_t)v173, &qword_256D40610);
  sub_23E1E7C20(v81 + v79[11], (uint64_t)v71, &qword_256D40610);
  v83 = v170;
  v84 = (uint64_t)&v170[*(int *)(v171 + 48)];
  sub_23E1E7C20((uint64_t)v82, (uint64_t)v170, &qword_256D40610);
  sub_23E1E7C20((uint64_t)v71, v84, &qword_256D40610);
  v85 = v172;
  v86 = *(_BYTE **)(v172 + 48);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v86)(v83, 1, v174) == 1)
  {
    v181 = v86;
    sub_23E1E7C64((uint64_t)v71, &qword_256D40610);
    sub_23E1E7C64((uint64_t)v82, &qword_256D40610);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v181)(v84, 1, v174) == 1)
    {
      sub_23E1E7C64((uint64_t)v83, &qword_256D40610);
      goto LABEL_32;
    }
LABEL_30:
    v73 = &qword_256D45938;
    v88 = v83;
    goto LABEL_24;
  }
  v93 = v167;
  sub_23E1E7C20((uint64_t)v83, (uint64_t)v167, &qword_256D40610);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86)(v84, 1, v174) == 1)
  {
    sub_23E1E7C64((uint64_t)v183, &qword_256D40610);
    sub_23E1E7C64((uint64_t)v173, &qword_256D40610);
    (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v93, v174);
    goto LABEL_30;
  }
  v181 = v86;
  v94 = v165;
  v95 = v174;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v85 + 32))(v165, v84, v174);
  sub_23E1EE1C4(&qword_256D45948, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  LODWORD(v178) = sub_23E537514();
  v96 = (uint64_t)v83;
  v97 = *(void (**)(_BYTE *, uint64_t))(v85 + 8);
  v98 = v94;
  v79 = v153;
  v97(v98, v95);
  sub_23E1E7C64((uint64_t)v183, &qword_256D40610);
  sub_23E1E7C64((uint64_t)v173, &qword_256D40610);
  v97(v93, v95);
  sub_23E1E7C64(v96, &qword_256D40610);
  if ((v178 & 1) == 0)
    return 0;
LABEL_32:
  v99 = v169;
  sub_23E1E7C20(v80 + v79[12], (uint64_t)v169, &qword_256D40600);
  v100 = v168;
  sub_23E1E7C20(v81 + v79[12], (uint64_t)v168, &qword_256D40600);
  v101 = v166;
  v102 = &v166[*(int *)(v150 + 48)];
  sub_23E1E7C20((uint64_t)v99, (uint64_t)v166, &qword_256D40600);
  v183 = v102;
  sub_23E1E7C20((uint64_t)v100, (uint64_t)v102, &qword_256D40600);
  v103 = v149;
  v104 = v148;
  if (v148((uint64_t)v101, 1, v149) == 1)
  {
    sub_23E1E7C64((uint64_t)v100, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v99, &qword_256D40600);
    if (v104((uint64_t)v183, 1, v103) == 1)
      goto LABEL_41;
LABEL_37:
    v73 = &qword_256D45940;
    v88 = v101;
    goto LABEL_24;
  }
  v105 = v164;
  sub_23E1E7C20((uint64_t)v101, (uint64_t)v164, &qword_256D40600);
  v106 = v183;
  if (v104((uint64_t)v183, 1, v103) == 1)
  {
    sub_23E1E7C64((uint64_t)v168, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v169, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v105, &qword_254333F50);
    goto LABEL_37;
  }
  v107 = (uint64_t)v106;
  v108 = v161;
  sub_23E1E4E3C(v107, (uint64_t)v161, &qword_254333F50);
  v109 = v162;
  v110 = (uint64_t)&v162[*(int *)(v177 + 48)];
  sub_23E1E4E3C((uint64_t)v105, (uint64_t)v162, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v108, v110, &qword_254333F50);
  v111 = v179;
  v112 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
  if (v112((uint64_t)v109, 1, v179) == 1)
  {
    sub_23E1E7C64((uint64_t)v108, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v168, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v169, &qword_256D40600);
    if (v112(v110, 1, v111) == 1)
    {
      sub_23E1E7C64((uint64_t)v162, &qword_254333F50);
      v101 = v166;
LABEL_41:
      sub_23E1E7C64((uint64_t)v101, &qword_256D40600);
      goto LABEL_42;
    }
LABEL_48:
    sub_23E1E7C64((uint64_t)v162, &qword_254332798);
    v73 = &qword_256D40600;
    v88 = v166;
    goto LABEL_24;
  }
  v119 = v158;
  sub_23E1E7C20((uint64_t)v109, (uint64_t)v158, &qword_254333F50);
  v120 = v112(v110, 1, v111);
  v121 = v169;
  if (v120 == 1)
  {
    sub_23E1E7C64((uint64_t)v161, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v168, &qword_256D40600);
    sub_23E1E7C64((uint64_t)v121, &qword_256D40600);
    (*(void (**)(_BYTE *, uint64_t))(v180 + 8))(v119, v111);
    goto LABEL_48;
  }
  v123 = v180;
  v124 = v175;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v180 + 32))(v175, v110, v111);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v125 = sub_23E537514();
  v126 = *(void (**)(_BYTE *, uint64_t))(v123 + 8);
  v126(v124, v111);
  sub_23E1E7C64((uint64_t)v161, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v168, &qword_256D40600);
  sub_23E1E7C64((uint64_t)v121, &qword_256D40600);
  v126(v158, v111);
  v79 = v153;
  sub_23E1E7C64((uint64_t)v109, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v166, &qword_256D40600);
  if ((v125 & 1) == 0)
    return 0;
LABEL_42:
  v113 = v79[13];
  v83 = v160;
  v114 = v79;
  v115 = v163;
  v116 = v172;
  if (*(double *)(v80 + v113) != *(double *)(v81 + v113))
    return 0;
  sub_23E1E7C20(v80 + v114[14], (uint64_t)v163, &qword_256D40610);
  sub_23E1E7C20(v81 + v114[14], v72, &qword_256D40610);
  v117 = (uint64_t)&v83[*(int *)(v171 + 48)];
  sub_23E1E7C20((uint64_t)v115, (uint64_t)v83, &qword_256D40610);
  sub_23E1E7C20(v72, v117, &qword_256D40610);
  v118 = v181;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v181)(v83, 1, v174) == 1)
  {
    sub_23E1E7C64(v72, &qword_256D40610);
    sub_23E1E7C64((uint64_t)v115, &qword_256D40610);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v117, 1, v174) == 1)
    {
      v181 = v118;
      sub_23E1E7C64((uint64_t)v83, &qword_256D40610);
      goto LABEL_54;
    }
    goto LABEL_30;
  }
  v122 = v157;
  sub_23E1E7C20((uint64_t)v83, (uint64_t)v157, &qword_256D40610);
  v181 = v118;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v118)(v117, 1, v174) == 1)
  {
    sub_23E1E7C64(v72, &qword_256D40610);
    sub_23E1E7C64((uint64_t)v163, &qword_256D40610);
    (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v122, v174);
    goto LABEL_30;
  }
  v127 = v165;
  v128 = v174;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v116 + 32))(v165, v117, v174);
  sub_23E1EE1C4(&qword_256D45948, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  v129 = sub_23E537514();
  v130 = (uint64_t)v83;
  v131 = *(void (**)(_BYTE *, uint64_t))(v116 + 8);
  v131(v127, v128);
  sub_23E1E7C64(v72, &qword_256D40610);
  sub_23E1E7C64((uint64_t)v163, &qword_256D40610);
  v131(v157, v128);
  sub_23E1E7C64(v130, &qword_256D40610);
  if ((v129 & 1) == 0)
    return 0;
LABEL_54:
  v132 = v153;
  v133 = v156;
  sub_23E1E7C20(v80 + v153[15], (uint64_t)v156, &qword_256D40610);
  v134 = v81 + v132[15];
  v135 = v155;
  sub_23E1E7C20(v134, (uint64_t)v155, &qword_256D40610);
  v136 = v159;
  v137 = (uint64_t)&v159[*(int *)(v171 + 48)];
  sub_23E1E7C20((uint64_t)v133, (uint64_t)v159, &qword_256D40610);
  sub_23E1E7C20((uint64_t)v135, v137, &qword_256D40610);
  v138 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v181;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v181)(v136, 1, v174) != 1)
  {
    v139 = v154;
    sub_23E1E7C20((uint64_t)v159, (uint64_t)v154, &qword_256D40610);
    if (v138(v137, 1, v174) != 1)
    {
      v140 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v116 + 32);
      v141 = v116;
      v142 = v165;
      v143 = v174;
      v140(v165, v137, v174);
      sub_23E1EE1C4(&qword_256D45948, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
      v144 = sub_23E537514();
      v145 = *(void (**)(_BYTE *, uint64_t))(v141 + 8);
      v145(v142, v143);
      sub_23E1E7C64((uint64_t)v155, &qword_256D40610);
      sub_23E1E7C64((uint64_t)v156, &qword_256D40610);
      v145(v139, v143);
      sub_23E1E7C64((uint64_t)v159, &qword_256D40610);
      return (v144 & 1) != 0;
    }
    sub_23E1E7C64((uint64_t)v155, &qword_256D40610);
    sub_23E1E7C64((uint64_t)v156, &qword_256D40610);
    (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v139, v174);
    goto LABEL_59;
  }
  sub_23E1E7C64((uint64_t)v155, &qword_256D40610);
  sub_23E1E7C64((uint64_t)v156, &qword_256D40610);
  if (v138(v137, 1, v174) != 1)
  {
LABEL_59:
    v73 = &qword_256D45938;
    v88 = v159;
    goto LABEL_24;
  }
  sub_23E1E7C64((uint64_t)v159, &qword_256D40610);
  return 1;
}

uint64_t sub_23E3CC958()
{
  return sub_23E1EE1C4(&qword_256D45868, (uint64_t (*)(uint64_t))type metadata accessor for CameraClip, (uint64_t)&protocol conformance descriptor for CameraClip);
}

char *initializeBufferWithCopyOfBuffer for CameraClip(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v14 = *(_QWORD *)(v13 - 8);
    v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v45 = v14;
    v46 = v8;
    v44 = v9;
    v48 = v7;
    if (v47(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
      {
        memcpy(v11, v12, *(_QWORD *)(v14 + 64));
      }
      else
      {
        v9(v11, v12, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = a3[6];
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_23E536F20();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21(v18, v19, v20);
    v21(&a1[a3[7]], &a2[a3[7]], v20);
    v22 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    *(_QWORD *)&a1[v22] = *(_QWORD *)&a2[v22];
    v23 = a3[11];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23E536DE8();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    v49 = v27;
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v30 = a3[12];
    v31 = &a1[v30];
    v32 = &a2[v30];
    if (v47(&a2[v30], 1, v13))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v32, 1, v48))
      {
        v34 = v45;
        memcpy(v31, v32, *(_QWORD *)(v45 + 64));
      }
      else
      {
        v44(v31, v32, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v31, 0, 1, v48);
        v34 = v45;
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v13);
    }
    v35 = a3[14];
    *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
    v36 = &a1[v35];
    v37 = &a2[v35];
    if (v28(&a2[v35], 1, v26))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v36, v37, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v36, 0, 1, v26);
    }
    v39 = a3[15];
    v40 = &a1[v39];
    v41 = &a2[v39];
    if (v28(v41, 1, v26))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v40, v41, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v40, 0, 1, v26);
    }
  }
  return a1;
}

uint64_t destroy for CameraClip(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v21 = v6;
  v10 = a1 + a2[6];
  v11 = sub_23E536F20();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(a1 + a2[7], v11);
  swift_bridgeObjectRelease();
  v13 = a1 + a2[11];
  v14 = sub_23E536DE8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v16(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v17 = a1 + a2[12];
  if (!v9(v17, 1, v8) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4))
    v21(v17, v4);
  v18 = a1 + a2[14];
  if (!v16(v18, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  v19 = a1 + a2[15];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(v19, 1, v14);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v19, v14);
  return result;
}

char *initializeWithCopy for CameraClip(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v42)(void *, const void *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(const void *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = *(_QWORD *)(v12 - 8);
  v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v43 = v13;
  v44 = v7;
  v42 = v8;
  v46 = v6;
  if (v45(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
    {
      memcpy(v10, v11, *(_QWORD *)(v13 + 64));
    }
    else
    {
      v8(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23E536F20();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(v16, v17, v18);
  v19(&a1[a3[7]], &a2[a3[7]], v18);
  v20 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v21 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23E536DE8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  v47 = v25;
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = a3[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v45(&a2[v28], 1, v12))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v30, 1, v46))
    {
      v32 = v43;
      memcpy(v29, v30, *(_QWORD *)(v43 + 64));
    }
    else
    {
      v42(v29, v30, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v29, 0, 1, v46);
      v32 = v43;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v12);
  }
  v33 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (v26(&a2[v33], 1, v24))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v34, v35, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v24);
  }
  v37 = a3[15];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (v26(v39, 1, v24))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v38, v39, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v38, 0, 1, v24);
  }
  return a1;
}

uint64_t assignWithCopy for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  void *v46;
  void *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  int v54;
  int v55;
  uint64_t v56;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v58(a1, a2, v6);
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v61 = *(_QWORD *)(v11 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v13 = v12(v9, 1, v11);
  v14 = v12(v10, 1, v11);
  v59 = v6;
  v60 = v7;
  if (!v13)
  {
    if (!v14)
    {
      v18 = v7;
      v19 = v6;
      v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
      v21 = v20(v9, 1, v19);
      v22 = v20(v10, 1, v19);
      if (!v21)
      {
        if (!v22)
        {
          v58((uint64_t)v9, (uint64_t)v10, v59);
          goto LABEL_15;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v9, v59);
        v17 = *(_QWORD *)(v61 + 64);
LABEL_9:
        memcpy(v9, v10, v17);
        goto LABEL_15;
      }
      v16 = v61;
      if (!v22)
      {
        (*(void (**)(void *, void *, uint64_t))(v60 + 16))(v9, v10, v59);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v9, 0, 1, v59);
        goto LABEL_15;
      }
LABEL_8:
      v17 = *(_QWORD *)(v16 + 64);
      goto LABEL_9;
    }
    sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
LABEL_7:
    v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40600) - 8);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    v15 = v61;
    memcpy(v9, v10, *(_QWORD *)(v61 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v15 = v61;
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v11);
LABEL_15:
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_23E536F20();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24);
  v27(v24, v25, v26);
  v27(a1 + a3[7], a2 + a3[7], v26);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = (void *)(a1 + v28);
  v30 = (void *)(a2 + v28);
  v31 = sub_23E536DE8();
  v62 = *(_QWORD *)(v31 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  LODWORD(v27) = v32(v29, 1, v31);
  v33 = v32(v30, 1, v31);
  if ((_DWORD)v27)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v29, v30, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v31);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v29, v31);
LABEL_20:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v29, v30, v31);
LABEL_21:
  v35 = a3[12];
  v36 = (void *)(a1 + v35);
  v37 = (void *)(a2 + v35);
  v38 = v12((void *)(a1 + v35), 1, v11);
  v39 = v12(v37, 1, v11);
  if (!v38)
  {
    if (!v39)
    {
      v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
      v43 = v42(v36, 1, v59);
      v44 = v42(v37, 1, v59);
      if (v43)
      {
        if (!v44)
        {
          (*(void (**)(void *, void *, uint64_t))(v60 + 16))(v36, v37, v59);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v36, 0, 1, v59);
          goto LABEL_35;
        }
      }
      else
      {
        if (!v44)
        {
          v58((uint64_t)v36, (uint64_t)v37, v59);
          goto LABEL_35;
        }
        (*(void (**)(void *, uint64_t))(v60 + 8))(v36, v59);
      }
      v41 = v61;
LABEL_28:
      memcpy(v36, v37, *(_QWORD *)(v41 + 64));
      goto LABEL_35;
    }
    sub_23E1E7C64((uint64_t)v36, &qword_254333F50);
LABEL_27:
    v41 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40600) - 8);
    goto LABEL_28;
  }
  if (v39)
    goto LABEL_27;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v60 + 48))(v37, 1, v59))
  {
    v40 = v61;
    memcpy(v36, v37, *(_QWORD *)(v61 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v60 + 16))(v36, v37, v59);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v36, 0, 1, v59);
    v40 = v61;
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v11);
LABEL_35:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v45 = a3[14];
  v46 = (void *)(a1 + v45);
  v47 = (void *)(a2 + v45);
  v48 = v32((void *)(a1 + v45), 1, v31);
  v49 = v32(v47, 1, v31);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v46, v47, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v46, 0, 1, v31);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v62 + 8))(v46, v31);
LABEL_40:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v46, v47, v31);
LABEL_41:
  v51 = a3[15];
  v52 = (void *)(a1 + v51);
  v53 = (void *)(a2 + v51);
  v54 = v32((void *)(a1 + v51), 1, v31);
  v55 = v32(v53, 1, v31);
  if (!v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 24))(v52, v53, v31);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v52, v31);
    goto LABEL_46;
  }
  if (v55)
  {
LABEL_46:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v62 + 16))(v52, v53, v31);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v52, 0, 1, v31);
  return a1;
}

char *initializeWithTake for CameraClip(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v42)(void *, const void *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(const void *, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = *(_QWORD *)(v12 - 8);
  v45 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v43 = v13;
  v44 = v7;
  v42 = v8;
  if (v45(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
    {
      memcpy(v10, v11, *(_QWORD *)(v13 + 64));
    }
    else
    {
      v8(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23E536F20();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v19(&a1[a3[7]], &a2[a3[7]], v18);
  v20 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_QWORD *)&a1[v20] = *(_QWORD *)&a2[v20];
  v21 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23E536DE8();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = a3[12];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v45(&a2[v28], 1, v12))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v30, 1, v6))
    {
      v32 = v43;
      memcpy(v29, v30, *(_QWORD *)(v43 + 64));
    }
    else
    {
      v42(v29, v30, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v29, 0, 1, v6);
      v32 = v43;
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v12);
  }
  v33 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v34 = &a1[v33];
  v35 = &a2[v33];
  if (v26(&a2[v33], 1, v24))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v34, v35, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v34, 0, 1, v24);
  }
  v37 = a3[15];
  v38 = &a1[v37];
  v39 = &a2[v37];
  if (v26(v39, 1, v24))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v38, v39, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v38, 0, 1, v24);
  }
  return a1;
}

uint64_t assignWithTake for CameraClip(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t (*v33)(void *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  void *v47;
  void *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  int v55;
  int v56;
  uint64_t v57;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v59(a1, a2, v6);
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v62 = *(_QWORD *)(v11 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  v13 = v12(v9, 1, v11);
  v14 = v12(v10, 1, v11);
  v60 = v6;
  v61 = v7;
  if (!v13)
  {
    if (!v14)
    {
      v18 = v7;
      v19 = v6;
      v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
      v21 = v20(v9, 1, v19);
      v22 = v20(v10, 1, v19);
      if (!v21)
      {
        if (!v22)
        {
          v59((uint64_t)v9, (uint64_t)v10, v60);
          goto LABEL_15;
        }
        (*(void (**)(void *, uint64_t))(v61 + 8))(v9, v60);
        v17 = *(_QWORD *)(v62 + 64);
LABEL_9:
        memcpy(v9, v10, v17);
        goto LABEL_15;
      }
      v16 = v62;
      if (!v22)
      {
        (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v9, v10, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v9, 0, 1, v60);
        goto LABEL_15;
      }
LABEL_8:
      v17 = *(_QWORD *)(v16 + 64);
      goto LABEL_9;
    }
    sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
LABEL_7:
    v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40600) - 8);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    v15 = v62;
    memcpy(v9, v10, *(_QWORD *)(v62 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v15 = v62;
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v11);
LABEL_15:
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_23E536F20();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40);
  v27(v24, v25, v26);
  v27(a1 + a3[7], a2 + a3[7], v26);
  v28 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v29 = a3[11];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_23E536DE8();
  v63 = *(_QWORD *)(v32 - 8);
  v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  LODWORD(v27) = v33(v30, 1, v32);
  v34 = v33(v31, 1, v32);
  if ((_DWORD)v27)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v30, 0, 1, v32);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v30, v32);
LABEL_20:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v30, v31, v32);
LABEL_21:
  v36 = a3[12];
  v37 = (void *)(a1 + v36);
  v38 = (void *)(a2 + v36);
  v39 = v12((void *)(a1 + v36), 1, v11);
  v40 = v12(v38, 1, v11);
  if (!v39)
  {
    if (!v40)
    {
      v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
      v44 = v43(v37, 1, v60);
      v45 = v43(v38, 1, v60);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v37, v38, v60);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v37, 0, 1, v60);
          goto LABEL_35;
        }
      }
      else
      {
        if (!v45)
        {
          v59((uint64_t)v37, (uint64_t)v38, v60);
          goto LABEL_35;
        }
        (*(void (**)(void *, uint64_t))(v61 + 8))(v37, v60);
      }
      v42 = v62;
LABEL_28:
      memcpy(v37, v38, *(_QWORD *)(v42 + 64));
      goto LABEL_35;
    }
    sub_23E1E7C64((uint64_t)v37, &qword_254333F50);
LABEL_27:
    v42 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40600) - 8);
    goto LABEL_28;
  }
  if (v40)
    goto LABEL_27;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v61 + 48))(v38, 1, v60))
  {
    v41 = v62;
    memcpy(v37, v38, *(_QWORD *)(v62 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v37, v38, v60);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v37, 0, 1, v60);
    v41 = v62;
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v11);
LABEL_35:
  v46 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  v49 = v33((void *)(a1 + v46), 1, v32);
  v50 = v33(v48, 1, v32);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v47, v48, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v47, 0, 1, v32);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v47, v32);
LABEL_40:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v47, v48, v32);
LABEL_41:
  v52 = a3[15];
  v53 = (void *)(a1 + v52);
  v54 = (void *)(a2 + v52);
  v55 = v33((void *)(a1 + v52), 1, v32);
  v56 = v33(v54, 1, v32);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v53, v54, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v53, v32);
    goto LABEL_46;
  }
  if (v56)
  {
LABEL_46:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v53, v54, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v53, 0, 1, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraClip()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3CE47C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_23E536F20();
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_12;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[11];
    goto LABEL_12;
  }
  v15 = *(_QWORD *)(a1 + a3[10]);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraClip()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3CE580(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = sub_23E536F20();
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(a1 + a4[10]) = (a2 - 1);
          return result;
        }
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E3CE674()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E3CE768();
    if (v1 <= 0x3F)
    {
      sub_23E536F20();
      if (v2 <= 0x3F)
      {
        sub_23E3CE7C0();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_23E3CE768()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D458D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254333F50);
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D458D8);
  }
}

void sub_23E3CE7C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D458E0)
  {
    sub_23E536DE8();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D458E0);
  }
}

uint64_t sub_23E3CE814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  _QWORD *v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t i;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];
  uint64_t v31;

  v2 = type metadata accessor for StaticAccessory(0);
  v26 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - v6;
  v8 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v25 = (unint64_t)(v9 + 63) >> 6;
  v31 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v11)
    goto LABEL_31;
LABEL_6:
  v15 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v15 < v25)
    {
      v16 = *(_QWORD *)(v24 + 8 * v15);
      ++v13;
      if (v16)
        goto LABEL_21;
      v13 = v15 + 1;
      if (v15 + 1 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_21;
      v13 = v15 + 2;
      if (v15 + 2 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_21;
      v13 = v15 + 3;
      if (v15 + 3 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
      {
LABEL_21:
        v11 = (v16 - 1) & v16;
        for (i = __clz(__rbit64(v16)) + (v13 << 6); ; i = v22 | (v13 << 6))
        {
          sub_23E1E2F50(*(_QWORD *)(v31 + 48) + *(_QWORD *)(v26 + 72) * i, (uint64_t)v7, type metadata accessor for StaticAccessory);
          sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, type metadata accessor for StaticAccessory);
          if (v5[*(int *)(v2 + 72)] == 1)
          {
            v29 = 0;
            v27 = 0u;
            v28 = 0u;
          }
          else
          {
            *((_QWORD *)&v28 + 1) = v2;
            v29 = sub_23E1EE1C4(&qword_256D40F98, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
            sub_23E1E2F50((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
          }
          sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory);
          if (*((_QWORD *)&v28 + 1))
          {
            sub_23E1E6C84(&v27, (uint64_t)v30);
            sub_23E1E6C84(v30, (uint64_t)&v27);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v14 = sub_23E51FE20(0, v14[2] + 1, 1, v14);
            v21 = v14[2];
            v20 = v14[3];
            if (v21 >= v20 >> 1)
              v14 = sub_23E51FE20((_QWORD *)(v20 > 1), v21 + 1, 1, v14);
            v14[2] = v21 + 1;
            result = sub_23E1E6C84(&v27, (uint64_t)&v14[5 * v21 + 4]);
            if (!v11)
              goto LABEL_6;
          }
          else
          {
            result = sub_23E1E7C64((uint64_t)&v27, &qword_256D45A48);
            if (!v11)
              goto LABEL_6;
          }
LABEL_31:
          v22 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      v17 = v15 + 4;
      if (v17 < v25)
      {
        v16 = *(_QWORD *)(v24 + 8 * v17);
        if (v16)
        {
          v13 = v17;
          goto LABEL_21;
        }
        while (1)
        {
          v13 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_34;
          if (v13 >= v25)
            break;
          v16 = *(_QWORD *)(v24 + 8 * v13);
          ++v17;
          if (v16)
            goto LABEL_21;
        }
      }
    }
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E3CEB58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  _QWORD *v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t i;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];
  uint64_t v31;

  v2 = type metadata accessor for StaticService();
  v26 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - v6;
  v8 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v25 = (unint64_t)(v9 + 63) >> 6;
  v31 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v11)
    goto LABEL_31;
LABEL_6:
  v15 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v15 < v25)
    {
      v16 = *(_QWORD *)(v24 + 8 * v15);
      ++v13;
      if (v16)
        goto LABEL_21;
      v13 = v15 + 1;
      if (v15 + 1 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_21;
      v13 = v15 + 2;
      if (v15 + 2 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
        goto LABEL_21;
      v13 = v15 + 3;
      if (v15 + 3 >= v25)
        goto LABEL_32;
      v16 = *(_QWORD *)(v24 + 8 * v13);
      if (v16)
      {
LABEL_21:
        v11 = (v16 - 1) & v16;
        for (i = __clz(__rbit64(v16)) + (v13 << 6); ; i = v22 | (v13 << 6))
        {
          sub_23E1E2F50(*(_QWORD *)(v31 + 48) + *(_QWORD *)(v26 + 72) * i, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v5[*(int *)(v2 + 68)] == 1)
          {
            *((_QWORD *)&v28 + 1) = v2;
            v29 = sub_23E1EE1C4(&qword_256D40F80, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
            sub_23E1E2F50((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v29 = 0;
            v27 = 0u;
            v28 = 0u;
          }
          sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (*((_QWORD *)&v28 + 1))
          {
            sub_23E1E6C84(&v27, (uint64_t)v30);
            sub_23E1E6C84(v30, (uint64_t)&v27);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v14 = sub_23E51FE20(0, v14[2] + 1, 1, v14);
            v21 = v14[2];
            v20 = v14[3];
            if (v21 >= v20 >> 1)
              v14 = sub_23E51FE20((_QWORD *)(v20 > 1), v21 + 1, 1, v14);
            v14[2] = v21 + 1;
            result = sub_23E1E6C84(&v27, (uint64_t)&v14[5 * v21 + 4]);
            if (!v11)
              goto LABEL_6;
          }
          else
          {
            result = sub_23E1E7C64((uint64_t)&v27, &qword_256D45A48);
            if (!v11)
              goto LABEL_6;
          }
LABEL_31:
          v22 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      v17 = v15 + 4;
      if (v17 < v25)
      {
        v16 = *(_QWORD *)(v24 + 8 * v17);
        if (v16)
        {
          v13 = v17;
          goto LABEL_21;
        }
        while (1)
        {
          v13 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_34;
          if (v13 >= v25)
            break;
          v16 = *(_QWORD *)(v24 + 8 * v13);
          ++v17;
          if (v16)
            goto LABEL_21;
        }
      }
    }
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E3CEE9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for StaticMediaSystem();
  v23 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - v6;
  v24 = MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(a1 + 56);
  v21 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v22 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v22)
      goto LABEL_23;
    v18 = *(_QWORD *)(v21 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v22)
        goto LABEL_23;
      v18 = *(_QWORD *)(v21 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v22)
          goto LABEL_23;
        v18 = *(_QWORD *)(v21 + 8 * v13);
        if (!v18)
        {
          v13 = v17 + 3;
          if (v17 + 3 >= v22)
            goto LABEL_23;
          v18 = *(_QWORD *)(v21 + 8 * v13);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v16 = *(_QWORD *)&v5[*(int *)(v2 + 96)];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    result = sub_23E25A244(v16);
  }
  v19 = v17 + 4;
  if (v19 >= v22)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  v18 = *(_QWORD *)(v21 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v22)
      goto LABEL_23;
    v18 = *(_QWORD *)(v21 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E3CF0F4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E2CB0FC(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB0FC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23E2CB0FC(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      *(_QWORD *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23E3CF234(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E2CB1B0(0, v1, 0);
    v2 = v9;
    v4 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB1B0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23E2CB1B0(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 96;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_23E1EA76C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23E3CF3A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E2CB1B0(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB1B0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23E2CB1B0(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 24;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_23E1EA76C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23E3CF4D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[40];
  uint64_t v13;

  v2 = type metadata accessor for StaticActionSet();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23E2CB31C(0, v6, 0);
    v8 = a1 + 32;
    do
    {
      sub_23E1FF9C8(v8, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
      swift_dynamicCast();
      v7 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB31C(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v13;
      }
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_23E2CB31C(v9 > 1, v10 + 1, 1);
        v7 = v13;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      sub_23E1E2FDC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23E3CF650(uint64_t a1)
{
  return sub_23E3CF688(a1, type metadata accessor for StaticAccessory, &qword_256D40F98, (uint64_t)&protocol conformance descriptor for StaticAccessory);
}

uint64_t sub_23E3CF66C(uint64_t a1)
{
  return sub_23E3CF688(a1, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, &qword_256D40F80, (uint64_t)&protocol conformance descriptor for StaticService);
}

uint64_t sub_23E3CF688(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a4;
  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v24 = MEMORY[0x24BEE4AF8];
    sub_23E2CB468(0, v11, 0);
    v12 = v24;
    v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_23E1E2F50(v13, (uint64_t)v10, a2);
      v24 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_23E2CB468(v15 > 1, v16 + 1, 1);
        v12 = v24;
      }
      v22 = v7;
      v23 = sub_23E1EE1C4(a3, a2, v20);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_23E1E2F50((uint64_t)v10, (uint64_t)boxed_opaque_existential_1, a2);
      *(_QWORD *)(v12 + 16) = v16 + 1;
      sub_23E1E6C84(&v21, v12 + 40 * v16 + 32);
      sub_23E1E2FA0((uint64_t)v10, a2);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t StaticRoom.staticAccessories.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE2C(v0);
}

void RoomType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for StaticRoom(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for RoomType(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v1, (uint64_t)v6, v7);
  v8 = (char *)sub_23E3CF904
     + 4 * byte_23E54C8F8[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23E3CF904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E1E2FDC(v2, v0, type metadata accessor for StaticRoom);
  v3 = *(_QWORD *)(v0 + *(int *)(v1 + 20));
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v0, type metadata accessor for StaticRoom);
  return v3;
}

uint64_t sub_23E3CF9C0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, char *, uint64_t);
  uint64_t v52;
  int *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v60 = a8;
  v63 = a10;
  v72 = sub_23E536F80();
  v70 = *(_QWORD *)(v72 - 8);
  v18 = MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v66 = (char *)&v57 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v69 = (uint64_t)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v73 = (uint64_t)&v57 - v24;
  v67 = a1;
  v25 = objc_msgSend(a1, sel_zones);
  sub_23E1E335C(0, &qword_254333368);
  v26 = sub_23E5377F0();

  v27 = a2;
  v28 = sub_23E3D6500(v26);
  swift_bridgeObjectRelease();

  if (v28)
  {
    v29 = v73;
    sub_23E264038(v28, v73);
    v30 = type metadata accessor for StaticZone();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
  else
  {
    v31 = type metadata accessor for StaticZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v73, 1, 1, v31);
  }
  v32 = v27;
  swift_bridgeObjectRetain();
  v68 = sub_23E3D6D20(a3, v32, a6);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v33 = v32;
  v65 = sub_23E3D8CF0(a4, v33, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D6F20);
  swift_bridgeObjectRelease();

  v34 = v33;
  v64 = sub_23E3D8CF0(a5, v34, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D748C);
  swift_bridgeObjectRelease();

  v35 = v34;
  v62 = sub_23E3D8CF0(a6, v35, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D79F8);
  swift_bridgeObjectRelease();

  v36 = v35;
  v61 = sub_23E3D8CF0(a7, v36, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D7E08);
  swift_bridgeObjectRelease();

  v37 = v36;
  v59 = sub_23E3D8CF0(v60, v37, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D8218);
  swift_bridgeObjectRelease();

  v38 = v37;
  v60 = sub_23E3D8CF0(v63, v38, (uint64_t (*)(char *, unint64_t, uint64_t, id))sub_23E3D8784);
  swift_bridgeObjectRelease();

  v39 = objc_msgSend(v38, sel_uniqueIdentifier);
  v40 = v66;
  sub_23E536F68();

  v41 = objc_msgSend(v38, sel_name);
  v63 = sub_23E53755C();
  v58 = v42;

  sub_23E1E335C(0, (unint64_t *)&qword_254333370);
  v43 = v67;
  v44 = objc_msgSend(v67, sel_roomForEntireHome);
  LOBYTE(v32) = sub_23E537C58();

  v45 = v73;
  v46 = v69;
  sub_23E1E7C20(v73, v69, &qword_254333190);
  v47 = objc_msgSend(v43, sel_uniqueIdentifier);
  v48 = v71;
  sub_23E536F68();

  v49 = sub_23E1ED91C(0xD000000000000028, 0x800000023E568A80);
  v50 = sub_23E1ED91C(0xD000000000000026, 0x800000023E5680E0);

  sub_23E1E7C64(v45, &qword_254333190);
  v51 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 32);
  v52 = v72;
  v51(a9, v40, v72);
  v53 = (int *)type metadata accessor for StaticRoom(0);
  v54 = (_QWORD *)(a9 + v53[5]);
  v55 = v58;
  *v54 = v63;
  v54[1] = v55;
  *(_BYTE *)(a9 + v53[6]) = v32 & 1;
  sub_23E1E4E3C(v46, a9 + v53[7], &qword_254333190);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v51)(a9 + v53[8], v48, v52);
  *(_QWORD *)(a9 + v53[9]) = v68;
  *(_QWORD *)(a9 + v53[10]) = v65;
  *(_QWORD *)(a9 + v53[11]) = v64;
  *(_QWORD *)(a9 + v53[12]) = v62;
  *(_QWORD *)(a9 + v53[13]) = v61;
  *(_QWORD *)(a9 + v53[14]) = v59;
  *(_QWORD *)(a9 + v53[15]) = v60;
  *(_QWORD *)(a9 + v53[16]) = v49;
  *(_QWORD *)(a9 + v53[17]) = v50;
  return result;
}

uint64_t StaticRoom.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticRoom.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticRoom(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticRoom.isDefaultRoom.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticRoom(0) + 24));
}

uint64_t StaticRoom.staticZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticRoom(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 28), a1, &qword_254333190);
}

uint64_t StaticRoom.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticRoom(0) + 32);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticRoom.staticAccessoriesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for RoomType(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_256D45A20);
}

uint64_t StaticRoom.staticActionSetsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticCameraProfilesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticMediaSystemsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticMediaProfilesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticServiceGroupsDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.staticServicesDictionary.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.actionSetsSortOrder.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.accessoriesSortOrder.getter()
{
  type metadata accessor for StaticRoom(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticRoom.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v2 = v1;
  v4 = type metadata accessor for StaticZone();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v23[1] = v11;
  sub_23E5374D8();
  v12 = (int *)type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E1E7C20(v1 + v12[7], (uint64_t)v10, &qword_254333190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    sub_23E538474();
    sub_23E5374D8();
    sub_23E5375EC();
    sub_23E26140C(a1, *(_QWORD *)&v7[*(int *)(v4 + 24)]);
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
  }
  sub_23E5374D8();
  v13 = *(_QWORD *)(v1 + v12[9]);
  swift_bridgeObjectRetain();
  sub_23E238254(a1, v13);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v2 + v12[10]);
  swift_bridgeObjectRetain();
  sub_23E23B954(a1, v14);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v2 + v12[11]);
  swift_bridgeObjectRetain();
  sub_23E23B930(a1, v15);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v2 + v12[12]);
  swift_bridgeObjectRetain();
  sub_23E23B90C(a1, v16);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v2 + v12[13]);
  swift_bridgeObjectRetain();
  sub_23E23B8E8(a1, v17);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v2 + v12[14]);
  swift_bridgeObjectRetain();
  sub_23E237CF8(a1, v18);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v2 + v12[15]);
  swift_bridgeObjectRetain();
  sub_23E238230(a1, v19);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v2 + v12[16]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v20);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v2 + v12[17]);
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3D04C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3D04E8 + 4 * byte_23E54C8FD[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E3D04E8()
{
  return 1701667182;
}

uint64_t sub_23E3D04F8()
{
  return 0x6C75616665447369;
}

uint64_t sub_23E3D051C()
{
  return 0x6F5A636974617473;
}

uint64_t sub_23E3D0538()
{
  return 0x6449656D6F68;
}

unint64_t sub_23E3D054C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23E3D0624()
{
  unsigned __int8 *v0;

  return sub_23E3D04C0(*v0);
}

uint64_t sub_23E3D062C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3D97E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E3D0650(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_23E3D065C()
{
  sub_23E3D64BC();
  return sub_23E538570();
}

uint64_t sub_23E3D0684()
{
  sub_23E3D64BC();
  return sub_23E53857C();
}

uint64_t StaticRoom.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45980);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3D64BC();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticRoom(0);
    LOBYTE(v13) = 1;
    sub_23E538270();
    LOBYTE(v13) = 2;
    sub_23E53827C();
    v11 = v3 + v9[7];
    LOBYTE(v13) = 3;
    type metadata accessor for StaticZone();
    sub_23E1EE1C4(&qword_256D40D18, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, (uint64_t)&protocol conformance descriptor for StaticZone);
    sub_23E538234();
    LOBYTE(v13) = 4;
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[9]);
    v12 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
    sub_23E297A20();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[10]);
    v12 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D38);
    sub_23E297ABC();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[11]);
    v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D50);
    sub_23E297B58();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[12]);
    v12 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D68);
    sub_23E297BF4();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D80);
    sub_23E297C90();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[14]);
    v12 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
    sub_23E297DC8();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[15]);
    v12 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
    sub_23E297E64();
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[16]);
    v12 = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E264444(&qword_256D3FFA0, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[17]);
    v12 = 13;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticRoom.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticRoom.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t StaticRoom.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v36 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - v10;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45990);
  v12 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (int *)type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23E3D64BC();
  v30 = v14;
  v17 = v33;
  sub_23E5384E0();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  v18 = (uint64_t)v5;
  v33 = v12;
  LOBYTE(v38) = 0;
  v19 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v28 = v19;
  v20 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v21 = v34;
  v20(v34, v11, v6);
  LOBYTE(v38) = 1;
  v22 = sub_23E538144();
  v23 = v35;
  v24 = (uint64_t *)&v21[v35[5]];
  *v24 = v22;
  v24[1] = v25;
  LOBYTE(v38) = 2;
  v21[v23[6]] = sub_23E538150() & 1;
  type metadata accessor for StaticZone();
  LOBYTE(v38) = 3;
  sub_23E1EE1C4(&qword_256D40E68, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, (uint64_t)&protocol conformance descriptor for StaticZone);
  sub_23E538108();
  sub_23E1E4E3C(v18, (uint64_t)&v21[v23[7]], &qword_254333190);
  LOBYTE(v38) = 4;
  sub_23E538180();
  v20(&v21[v23[8]], v9, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
  v37 = 5;
  sub_23E298324();
  sub_23E538180();
  *(_QWORD *)&v21[v23[9]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D38);
  v37 = 6;
  sub_23E2983C0();
  sub_23E538180();
  *(_QWORD *)&v21[v23[10]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D50);
  v37 = 7;
  sub_23E29845C();
  sub_23E538180();
  *(_QWORD *)&v21[v23[11]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D68);
  v37 = 8;
  sub_23E2984F8();
  sub_23E538180();
  *(_QWORD *)&v21[v23[12]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D80);
  v37 = 9;
  sub_23E298594();
  sub_23E538180();
  *(_QWORD *)&v34[v35[13]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
  v37 = 10;
  sub_23E2986CC();
  sub_23E538180();
  *(_QWORD *)&v34[v35[14]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v37 = 11;
  sub_23E298768();
  sub_23E538180();
  *(_QWORD *)&v34[v35[15]] = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v37 = 12;
  sub_23E264444(&qword_256D3FFB0, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v34[v35[16]] = v38;
  v37 = 13;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v31);
  v26 = (uint64_t)v34;
  *(_QWORD *)&v34[v35[17]] = v38;
  sub_23E1E2F50(v26, v29, type metadata accessor for StaticRoom);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return sub_23E1E2FA0(v26, type metadata accessor for StaticRoom);
}

uint64_t sub_23E3D1594()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticRoom.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3D15D4()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticRoom.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3D160C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticRoom.init(from:)(a1, a2);
}

uint64_t sub_23E3D1620(_QWORD *a1)
{
  return StaticRoom.encode(to:)(a1);
}

uint64_t StaticRoom.staticActionSets.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE98(v0);
}

uint64_t StaticRoom.staticCameraProfiles.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBEBC(v0);
}

uint64_t StaticRoom.staticMediaSystems.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB764(v0);
}

uint64_t StaticRoom.staticMediaProfiles.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB740(v0);
}

uint64_t StaticRoom.staticServiceGroups.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBF04(v0);
}

uint64_t StaticRoom.staticServices.getter()
{
  uint64_t v0;

  type metadata accessor for StaticRoom(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB788(v0);
}

void RoomType.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for StaticRoom(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for RoomType(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_23E3D17F4
     + 4 * byte_23E54C90B[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 4, v1)];
  __asm { BR              X10 }
}

uint64_t sub_23E3D17F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticRoom);
  v2 = sub_23E536F38();
  sub_23E1E2FA0(v0, type metadata accessor for StaticRoom);
  return v2;
}

void RoomType.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for StaticRoom(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for RoomType(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v0, (uint64_t)v5, v6);
  v7 = (char *)sub_23E3D1968
     + 4 * byte_23E54C910[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v5, 4, v1)];
  __asm { BR              X10 }
}

uint64_t sub_23E3D1968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FDC(v2, v0, type metadata accessor for StaticRoom);
  sub_23E538468();
  StaticRoom.hash(into:)(v1);
  return sub_23E1E2FA0(v0, type metadata accessor for StaticRoom);
}

void RoomType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for StaticRoom(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = type metadata accessor for RoomType(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E2F50(v1, (uint64_t)v6, type metadata accessor for RoomType);
  v7 = (char *)sub_23E3D1ABC
     + 4 * byte_23E54C915[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23E3D1ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticRoom);
  sub_23E538468();
  StaticRoom.hash(into:)(v2 - 120);
  sub_23E1E2FA0(v0, type metadata accessor for StaticRoom);
  return sub_23E5384A4();
}

void sub_23E3D1B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for StaticRoom(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E2F50(v1, (uint64_t)v6, type metadata accessor for RoomType);
  v7 = (char *)sub_23E3D1C30
     + 4 * byte_23E54C91A[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23E3D1C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticRoom);
  sub_23E538468();
  StaticRoom.hash(into:)(v2 - 136);
  sub_23E1E2FA0(v0, type metadata accessor for StaticRoom);
  return sub_23E5384A4();
}

void sub_23E3D1CC4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  RoomType.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t StaticRoom.orderedStaticActionSets.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = type metadata accessor for StaticActionSet();
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StaticRoom(0);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E4FBE98(v4);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v23 = v3;
    v24 = v0;
    v32 = MEMORY[0x24BEE4AF8];
    sub_23E2CB468(0, v6, 0);
    v7 = v32;
    result = sub_23E26B68C(v5);
    v9 = result;
    v11 = v10;
    v13 = v12 & 1;
    v26 = v5 + 56;
    v14 = v25;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(_BYTE *)(v5 + 32))
    {
      if (((*(_QWORD *)(v26 + (((unint64_t)v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v5 + 36) != (_DWORD)v11)
        goto LABEL_15;
      v28 = v13;
      sub_23E1E2F50(*(_QWORD *)(v5 + 48) + *(_QWORD *)(v27 + 72) * v9, (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v32 = v7;
      v15 = v5;
      v17 = *(_QWORD *)(v7 + 16);
      v16 = *(_QWORD *)(v7 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_23E2CB468(v16 > 1, v17 + 1, 1);
        v14 = v25;
        v7 = v32;
      }
      v30 = v14;
      v31 = sub_23E1EE1C4(&qword_256D40F90, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v29);
      sub_23E1E2F50((uint64_t)v2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      *(_QWORD *)(v7 + 16) = v17 + 1;
      sub_23E1E6C84(&v29, v7 + 40 * v17 + 32);
      sub_23E1E2FA0((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      result = sub_23E2CD280(v9, v11, v28 & 1, v15);
      v9 = result;
      v11 = v19;
      v13 = v20 & 1;
      --v6;
      v5 = v15;
      if (!v6)
      {
        sub_23E23D578(result, v19, v13);
        swift_bridgeObjectRelease();
        v3 = v23;
        v0 = v24;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
LABEL_12:
    v21 = sub_23E3D1F78(*(_QWORD *)(v0 + *(int *)(v3 + 64)), v7);
    swift_bridgeObjectRelease();
    v22 = sub_23E3CF4D4((uint64_t)v21);
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

_QWORD *sub_23E3D1F78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;

  v42 = a1;
  v40 = sub_23E536F80();
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D4A0C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  v47 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23E2CB43C(0, v8, 0);
  v9 = v47;
  v41 = a2;
  if (v8)
  {
    v10 = a2 + 32;
    swift_bridgeObjectRetain();
    v11 = v8;
    do
    {
      sub_23E1FF9C8(v10, (uint64_t)&v45);
      v12 = (uint64_t)&v7[*(int *)(v4 + 48)];
      __swift_project_boxed_opaque_existential_1(&v45, v46);
      sub_23E537E80();
      sub_23E1E6C84(&v45, v12);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v47 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E2CB43C(0, v9[2] + 1, 1);
        v9 = v47;
      }
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_23E2CB43C(v14 > 1, v15 + 1, 1);
        v9 = v47;
      }
      v9[2] = v15 + 1;
      sub_23E1E4E3C((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15, (uint64_t *)&unk_256D4A0C0);
      v10 += 40;
      --v11;
    }
    while (v11);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v16 = v41;
  swift_bridgeObjectRelease();
  if (v9[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F250);
    v17 = sub_23E53806C();
  }
  else
  {
    v17 = MEMORY[0x24BEE4B00];
  }
  v18 = v40;
  *(_QWORD *)&v45 = v17;
  sub_23E51766C((uint64_t)v9, 1, (uint64_t *)&v45);
  swift_release();
  v19 = v45;
  v47 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23E2058F8(0, v8, 0);
  if (v8)
  {
    v20 = v16 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1FF9C8(v20, (uint64_t)&v45);
      __swift_project_boxed_opaque_existential_1(&v45, v46);
      sub_23E537E80();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
      v21 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, v21[2] + 1, 1);
        v21 = v47;
      }
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_23E2058F8(v22 > 1, v23 + 1, 1);
        v21 = v47;
      }
      v21[2] = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))((unint64_t)v21+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v23, v44, v18);
      v47 = v21;
      v20 += 40;
      --v8;
    }
    while (v8);
  }
  else
  {
    v21 = v47;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v24 = sub_23E4FD850((uint64_t)v21);
  swift_release();
  *(_QWORD *)&v45 = v24;
  v25 = v42;
  if (*(_QWORD *)(v42 + 16))
  {
    swift_bridgeObjectRetain();
    v26 = swift_bridgeObjectRetain();
    sub_23E517CC0(v26, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v27 = swift_retain();
    v28 = (_QWORD *)sub_23E24A8B4(v27);
    swift_release();
    v47 = v28;
    sub_23E519350(&v47, v25);
    swift_release();
    swift_bridgeObjectRelease();
    v29 = v47;
  }
  else
  {
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  sub_23E25B888((uint64_t)v29);
  swift_retain();
  v30 = swift_bridgeObjectRetain();
  sub_23E5196CC(v30, v19);
  swift_release();
  swift_retain();
  v31 = swift_retain();
  v32 = (_QWORD *)sub_23E24A8B4(v31);
  swift_release();
  v47 = v32;
  sub_23E51B070(&v47, v19);
  swift_release();
  swift_release();
  v33 = v47;
  sub_23E25B888((uint64_t)v47);
  v34 = v45;
  swift_bridgeObjectRetain_n();
  swift_retain();
  v35 = (_QWORD *)sub_23E24A8B4(v34);
  swift_bridgeObjectRelease();
  v47 = v35;
  sub_23E51C294(&v47, v19);
  swift_bridgeObjectRelease();
  swift_release();
  v36 = v47;
  v47 = v29;
  sub_23E259F3C((uint64_t)v33);
  sub_23E259F3C((uint64_t)v36);
  v37 = v47;
  swift_retain();
  v38 = sub_23E5173B4((uint64_t)v37, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  return v38;
}

uint64_t StaticRoom.orderedVisibleStaticActionSets(filterCategory:forDashboard:)(unsigned __int8 *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v44 = a2;
  v42 = type metadata accessor for StaticActionSet();
  v46 = *(_QWORD *)(v42 - 8);
  v3 = MEMORY[0x24BDAC7A8](v42);
  v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v39 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v39 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v39 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v39 - v13;
  v45 = *a1;
  result = StaticRoom.orderedStaticActionSets.getter();
  v16 = result;
  v17 = MEMORY[0x24BEE4AF8];
  v47 = MEMORY[0x24BEE4AF8];
  v43 = *(_QWORD *)(result + 16);
  if (v43)
  {
    v18 = 0;
    v19 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v18 >= *(_QWORD *)(v16 + 16))
      {
        __break(1u);
        goto LABEL_32;
      }
      v20 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v21 = *(_QWORD *)(v46 + 72);
      sub_23E1E2F50(v16 + v20 + v21 * v18, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      sub_23E1E2F50((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if ((v44 & 1) == 0)
        break;
      v22 = v12[*(int *)(v42 + 44)];
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if (v22 == 1)
        goto LABEL_10;
      result = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_3:
      if (v43 == ++v18)
      {
        v29 = v47;
        v30 = (uint64_t)v41;
        v17 = MEMORY[0x24BEE4AF8];
        goto LABEL_17;
      }
    }
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_10:
    v23 = v12;
    v24 = v16;
    v25 = (uint64_t)v9;
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_23E2CB31C(0, *(_QWORD *)(v19 + 16) + 1, 1);
    v19 = v47;
    v27 = *(_QWORD *)(v47 + 16);
    v26 = *(_QWORD *)(v47 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_23E2CB31C(v26 > 1, v27 + 1, 1);
      v19 = v47;
    }
    *(_QWORD *)(v19 + 16) = v27 + 1;
    v28 = v19 + v20 + v27 * v21;
    v9 = (char *)v25;
    result = sub_23E1E2FDC(v25, v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v16 = v24;
    v12 = v23;
    goto LABEL_3;
  }
  v29 = MEMORY[0x24BEE4AF8];
  v30 = (uint64_t)v41;
LABEL_17:
  result = swift_bridgeObjectRelease();
  v47 = v17;
  v31 = *(_QWORD *)(v29 + 16);
  if (v31)
  {
    v32 = 0;
    v33 = (uint64_t)v40;
    while (v32 < *(_QWORD *)(v29 + 16))
    {
      v34 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v35 = *(_QWORD *)(v46 + 72);
      sub_23E1E2F50(v29 + v34 + v35 * v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if (v45 == 6 || (sub_23E20F7BC(v45, *(_QWORD *)(v30 + *(int *)(v42 + 48))) & 1) != 0)
      {
        sub_23E1E2FDC(v30, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
        v36 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E2CB31C(0, *(_QWORD *)(v36 + 16) + 1, 1);
          v36 = v47;
        }
        v38 = *(_QWORD *)(v36 + 16);
        v37 = *(_QWORD *)(v36 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_23E2CB31C(v37 > 1, v38 + 1, 1);
          v36 = v47;
        }
        *(_QWORD *)(v36 + 16) = v38 + 1;
        result = sub_23E1E2FDC(v33, v36 + v34 + v38 * v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
        v30 = (uint64_t)v41;
      }
      else
      {
        result = sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      }
      if (v31 == ++v32)
      {
        v17 = v47;
        goto LABEL_30;
      }
    }
LABEL_32:
    __break(1u);
  }
  else
  {
LABEL_30:
    swift_release();
    return v17;
  }
  return result;
}

uint64_t StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:)(unsigned __int8 *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t result;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[2];
  __int128 v130;
  uint64_t v131;
  uint64_t v132;

  v3 = v2;
  v121 = a2;
  v113 = type metadata accessor for StaticMediaProfile();
  v120 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v112 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for StaticMediaSystem();
  v114 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v7 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticServiceGroup();
  v124 = *(_QWORD *)(v8 - 8);
  v125 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = *a1;
  v119 = type metadata accessor for StaticRoom(0);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_23E4FBF04(v11);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  v118 = v2;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    v115 = MEMORY[0x24BEE4AF8];
LABEL_12:
    v27 = v119;
    v28 = swift_bridgeObjectRetain();
    v29 = sub_23E4FBE2C(v28);
    v30 = 0;
    v31 = sub_23E33BEA8(v29, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5CF8);
    v32 = sub_23E33BEA8(v31, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5AD0);
    v33 = sub_23E33BEA8(v32, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5890);
    v34 = sub_23E33BEA8(v33, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5648);
    v116 = (char *)sub_23E3CE814(v34);
    swift_release();
    v35 = *(_QWORD *)(v3 + *(int *)(v27 + 48));
    v36 = swift_bridgeObjectRetain();
    v37 = sub_23E4FB764(v36);
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      v111 = v35;
      v123 = 0;
      v126[0] = v14;
      sub_23E2CB468(0, v38, 0);
      v39 = v126[0];
      v40 = sub_23E26B68C(v37);
      v42 = v41;
      v44 = v43 & 1;
      v124 = v37 + 56;
      v45 = v114;
      do
      {
        if (v40 < 0 || v40 >= 1 << *(_BYTE *)(v37 + 32))
          goto LABEL_66;
        if (((*(_QWORD *)(v124 + (((unint64_t)v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
          goto LABEL_67;
        if (*(_DWORD *)(v37 + 36) != (_DWORD)v42)
          goto LABEL_68;
        LODWORD(v125) = v44;
        sub_23E1E2F50(*(_QWORD *)(v37 + 48) + *(_QWORD *)(v45 + 72) * v40, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
        v126[0] = v39;
        v46 = v37;
        v48 = *(_QWORD *)(v39 + 16);
        v47 = *(_QWORD *)(v39 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_23E2CB468(v47 > 1, v48 + 1, 1);
          v45 = v114;
          v39 = v126[0];
        }
        v131 = v122;
        v132 = sub_23E1EE1C4(&qword_256D40F70, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v130);
        sub_23E1E2F50((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
        *(_QWORD *)(v39 + 16) = v48 + 1;
        sub_23E1E6C84(&v130, v39 + 40 * v48 + 32);
        sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
        v50 = sub_23E2CD280(v40, v42, v125 & 1, v46);
        v40 = v50;
        v42 = v51;
        v44 = v52 & 1;
        --v38;
        v37 = v46;
      }
      while (v38);
      sub_23E23D578(v50, v51, v44);
      swift_bridgeObjectRelease();
      v3 = v118;
      v14 = MEMORY[0x24BEE4AF8];
      v30 = v123;
    }
    else
    {
      swift_bridgeObjectRelease();
      v39 = MEMORY[0x24BEE4AF8];
    }
    v53 = swift_bridgeObjectRetain();
    v54 = sub_23E4FB764(v53);
    v55 = sub_23E3CEE9C(v54);
    swift_bridgeObjectRelease();
    v56 = swift_bridgeObjectRetain();
    v57 = sub_23E4FB740(v56);
    v58 = sub_23E33BEA8(v57, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5FAC);
    v59 = sub_23E3DA3D8(v58, v55);
    swift_bridgeObjectRelease();
    v60 = *(_QWORD *)(v59 + 16);
    if (v60)
    {
      v122 = v30;
      v126[0] = v14;
      sub_23E2CB468(0, v60, 0);
      v61 = v126[0];
      v62 = sub_23E26B68C(v59);
      v64 = v63;
      v66 = v65 & 1;
      v124 = v59 + 56;
      v67 = v113;
      v68 = (uint64_t)v112;
      v123 = v39;
      do
      {
        if (v62 < 0 || v62 >= 1 << *(_BYTE *)(v59 + 32))
          goto LABEL_70;
        if (((*(_QWORD *)(v124 + (((unint64_t)v62 >> 3) & 0xFFFFFFFFFFFFF8)) >> v62) & 1) == 0)
          goto LABEL_71;
        if (*(_DWORD *)(v59 + 36) != (_DWORD)v64)
          goto LABEL_72;
        LODWORD(v125) = v66;
        sub_23E1E2F50(*(_QWORD *)(v59 + 48) + *(_QWORD *)(v120 + 72) * v62, v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        v126[0] = v61;
        v70 = *(_QWORD *)(v61 + 16);
        v69 = *(_QWORD *)(v61 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_23E2CB468(v69 > 1, v70 + 1, 1);
          v67 = v113;
          v61 = v126[0];
        }
        v131 = v67;
        v132 = sub_23E1EE1C4(&qword_256D40F68, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
        v71 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v130);
        sub_23E1E2F50(v68, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        *(_QWORD *)(v61 + 16) = v70 + 1;
        sub_23E1E6C84(&v130, v61 + 40 * v70 + 32);
        sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        v72 = sub_23E2CD280(v62, v64, v125 & 1, v59);
        v62 = v72;
        v64 = v73;
        v66 = v74 & 1;
        --v60;
        v39 = v123;
      }
      while (v60);
      sub_23E23D578(v72, v73, v66);
      swift_release();
      v3 = v118;
      v14 = MEMORY[0x24BEE4AF8];
      v75 = v61;
      v30 = v122;
    }
    else
    {
      swift_release();
      v75 = MEMORY[0x24BEE4AF8];
    }
    v76 = swift_bridgeObjectRetain();
    v77 = sub_23E4FB788(v76);
    v78 = sub_23E3CEB58(v77);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v130 = v115;
    sub_23E25A0DC((uint64_t)v116);
    sub_23E25A0DC(v39);
    sub_23E25A0DC(v78);
    sub_23E25A0DC(v75);
    v79 = v130;
    v80 = *(_QWORD *)(v130 + 16);
    if (v80)
    {
      v126[0] = v14;
      sub_23E2CB468(0, v80, 0);
      v81 = v126[0];
      v82 = v79 + 32;
      do
      {
        sub_23E1FF9C8(v82, (uint64_t)&v130);
        v126[0] = v81;
        v84 = *(_QWORD *)(v81 + 16);
        v83 = *(_QWORD *)(v81 + 24);
        if (v84 >= v83 >> 1)
          sub_23E2CB468(v83 > 1, v84 + 1, 1);
        v85 = v131;
        v86 = v132;
        v87 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v130, v131);
        MEMORY[0x24BDAC7A8](v87);
        v89 = (char *)&v111 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v90 + 16))(v89);
        sub_23E3D61D4(v84, (uint64_t)v89, v126, v85, v86);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v130);
        v81 = v126[0];
        v82 += 40;
        --v80;
      }
      while (v80);
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v81 = MEMORY[0x24BEE4AF8];
    }
    v91 = v117;
    if (v117 != 6)
    {
      v126[0] = v14;
      v92 = *(_QWORD *)(v81 + 16);
      if (v92)
      {
        v93 = v81 + 32;
        swift_bridgeObjectRetain();
        do
        {
          sub_23E1FF9C8(v93, (uint64_t)&v130);
          sub_23E3D33E8((uint64_t)&v130, v91, v129);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v130);
          if (v30)
            goto LABEL_73;
          sub_23E25A0DC(v129[0]);
          v93 += 40;
          --v92;
        }
        while (v92);
        swift_bridgeObjectRelease_n();
        v81 = v126[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        v81 = MEMORY[0x24BEE4AF8];
      }
    }
    v129[0] = v14;
    v94 = *(_QWORD *)(v81 + 16);
    if (!v94)
    {
LABEL_62:
      swift_bridgeObjectRelease();
      v109 = sub_23E3D1F78(*(_QWORD *)(v3 + *(int *)(v119 + 68)), v129[0]);
      swift_release();
      return (uint64_t)v109;
    }
    v95 = 0;
    v96 = v81 + 32;
    while (1)
    {
      if (v95 >= *(_QWORD *)(v81 + 16))
        goto LABEL_69;
      sub_23E1FF9C8(v96, (uint64_t)&v130);
      sub_23E1FF9C8((uint64_t)&v130, (uint64_t)v126);
      if ((v121 & 1) == 0)
        break;
      v97 = v127;
      v98 = v128;
      __swift_project_boxed_opaque_existential_1(v126, v127);
      v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 128))(v97, v98);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
      if ((v99 & 1) != 0)
        goto LABEL_57;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v130);
LABEL_51:
      ++v95;
      v96 += 40;
      if (v94 == v95)
        goto LABEL_62;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
LABEL_57:
    sub_23E1E6C84(&v130, (uint64_t)v126);
    v100 = v129[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB468(0, *(_QWORD *)(v100 + 16) + 1, 1);
      v100 = v129[0];
    }
    v102 = *(_QWORD *)(v100 + 16);
    v101 = *(_QWORD *)(v100 + 24);
    if (v102 >= v101 >> 1)
      sub_23E2CB468(v101 > 1, v102 + 1, 1);
    v103 = v127;
    v104 = v128;
    v105 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v126, v127);
    MEMORY[0x24BDAC7A8](v105);
    v107 = (char *)&v111 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v108 + 16))(v107);
    sub_23E3D61D4(v102, (uint64_t)v107, v129, v103, v104);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v126);
    goto LABEL_51;
  }
  v116 = v7;
  v126[0] = MEMORY[0x24BEE4AF8];
  sub_23E2CB468(0, v13, 0);
  v15 = v126[0];
  v16 = sub_23E26B68C(v12);
  v18 = v17;
  v20 = v19 & 1;
  v123 = v12 + 56;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(_BYTE *)(v12 + 32))
  {
    if (((*(_QWORD *)(v123 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      goto LABEL_64;
    if (*(_DWORD *)(v12 + 36) != (_DWORD)v18)
      goto LABEL_65;
    sub_23E1E2F50(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v124 + 72) * v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v126[0] = v15;
    v22 = *(_QWORD *)(v15 + 16);
    v21 = *(_QWORD *)(v15 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_23E2CB468(v21 > 1, v22 + 1, 1);
      v15 = v126[0];
    }
    v131 = v125;
    v132 = sub_23E1EE1C4(&qword_256D40F88, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
    v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v130);
    sub_23E1E2F50((uint64_t)v10, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    *(_QWORD *)(v15 + 16) = v22 + 1;
    sub_23E1E6C84(&v130, v15 + 40 * v22 + 32);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v24 = sub_23E2CD280(v16, v18, v20 & 1, v12);
    v16 = v24;
    v18 = v25;
    v20 = v26 & 1;
    if (!--v13)
    {
      v115 = v15;
      sub_23E23D578(v24, v25, v26 & 1);
      swift_bridgeObjectRelease();
      v3 = v118;
      v14 = MEMORY[0x24BEE4AF8];
      v7 = v116;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_23E3D33E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)();
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v76)(_QWORD);
  uint64_t v77;
  char *v78;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char v83;
  char *v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[64];

  v103 = a2;
  v101 = a3;
  v91 = type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v91);
  v90 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x24BDAC7A8](v93);
  v92 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v6);
  v95 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for StaticServiceGroup();
  v8 = MEMORY[0x24BDAC7A8](v106);
  v94 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v104 = (char *)&v86 - v10;
  v100 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v100);
  v98 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for StaticActionSet();
  MEMORY[0x24BDAC7A8](v99);
  v108 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for StaticService();
  v107 = *(_QWORD *)(v109 - 8);
  v13 = MEMORY[0x24BDAC7A8](v109);
  v89 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v96 = (uint64_t)&v86 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v97 = (char *)&v86 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v86 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v86 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v86 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v86 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v86 - v31;
  v33 = type metadata accessor for StaticAccessory(0);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v86 - v37;
  sub_23E1FF9C8(a1, (uint64_t)v114);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  if (!swift_dynamicCast())
  {
    v40 = (uint64_t)v97;
    v41 = v109;
    v42 = v104;
    v43 = a1;
    if (swift_dynamicCast())
    {
      *v101 = MEMORY[0x24BEE4AF8];
      v44 = type metadata accessor for StaticActionSet;
      v45 = (uint64_t)v108;
    }
    else
    {
      if (swift_dynamicCast())
        __asm { BR              X10 }
      v46 = v21;
      v47 = v41;
      if (swift_dynamicCast())
      {
        v48 = v43;
        sub_23E1FF9C8(v43, (uint64_t)&v111);
        swift_dynamicCast();
        v49 = *(unsigned __int8 *)(v40 + *(int *)(v47 + 92));
        v50 = v96;
        sub_23E1E2F50(v40, v96, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v49 == 53)
          LOBYTE(v49) = *(_BYTE *)(v50 + *(int *)(v47 + 84));
        sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        LOBYTE(v110) = v49;
        ServiceKind.umbrellaCategory.getter(&v111);
        sub_23E5225C0(v111);
        if ((v51 & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D38);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_23E539650;
          sub_23E1FF9C8(v48, v52 + 32);
        }
        else
        {
          v52 = MEMORY[0x24BEE4AF8];
        }
        *v101 = v52;
        v76 = (uint64_t (*)(_QWORD))type metadata accessor for StaticService;
        sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v77 = (uint64_t)v46;
        goto LABEL_31;
      }
      if (swift_dynamicCast())
      {
        v53 = v43;
        sub_23E1FF9C8(v43, (uint64_t)&v111);
        v54 = (uint64_t)v94;
        swift_dynamicCast();
        v55 = swift_bridgeObjectRetain();
        v56 = sub_23E4FB788(v55);
        v57 = v95;
        sub_23E267938(v56, v95);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v57, 1, v47) == 1)
        {
          sub_23E1E7C64(v57, &qword_254332DE8);
          v58 = MEMORY[0x24BEE4AF8];
          v59 = v101;
        }
        else
        {
          v80 = v47;
          v81 = *(unsigned __int8 *)(v57 + *(int *)(v47 + 92));
          v82 = v89;
          sub_23E1E2F50(v57, v89, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v81 == 53)
            LOBYTE(v81) = *(_BYTE *)(v82 + *(int *)(v80 + 84));
          sub_23E1E2FA0(v82, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          LOBYTE(v110) = v81;
          ServiceKind.umbrellaCategory.getter(&v111);
          sub_23E5225C0(v111);
          if ((v83 & 1) != 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D38);
            v58 = swift_allocObject();
            *(_OWORD *)(v58 + 16) = xmmword_23E539650;
            sub_23E1FF9C8(v53, v58 + 32);
          }
          else
          {
            v58 = MEMORY[0x24BEE4AF8];
          }
          v59 = v101;
        }
        *v59 = v58;
        v76 = (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup;
        sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
        v77 = (uint64_t)v42;
        goto LABEL_31;
      }
      v78 = v92;
      if (swift_dynamicCast())
      {
        *v101 = MEMORY[0x24BEE4AF8];
        v44 = type metadata accessor for StaticMatterDevice;
        v45 = (uint64_t)v78;
      }
      else
      {
        v84 = v90;
        v85 = swift_dynamicCast();
        *v101 = MEMORY[0x24BEE4AF8];
        if (!v85)
          return __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
        v44 = type metadata accessor for StaticEndpoint;
        v45 = (uint64_t)v84;
      }
    }
    sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))v44);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
  }
  v106 = (uint64_t)v30;
  v108 = v27;
  v100 = (uint64_t)v24;
  sub_23E1FF9C8(a1, (uint64_t)&v111);
  v39 = swift_dynamicCast();
  if ((~*(unsigned __int16 *)&v36[*(int *)(v33 + 88)] & 0xFEFC) != 0)
    __asm { BR              X10 }
  v60 = *(_QWORD *)&v36[*(int *)(v33 + 80)];
  MEMORY[0x24BDAC7A8](v39);
  *(&v86 - 2) = (uint64_t)v36;
  swift_bridgeObjectRetain();
  v61 = v102;
  v62 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)(&v86 - 4), v60);
  swift_bridgeObjectRelease();
  v63 = (char *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v111 = MEMORY[0x24BEE4AF8];
  v105 = *(_QWORD *)(v62 + 16);
  v102 = v61;
  v87 = v38;
  v88 = v36;
  if (v105)
  {
    v103 = v103;
    v104 = (char *)v62;
    v64 = v109;
    v65 = v106;
    if (*(_QWORD *)(v62 + 16))
    {
      sub_23E1E2F50(v62 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80)), (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v66 = v32[*(int *)(v64 + 92)];
      sub_23E1E2F50((uint64_t)v32, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v66 == 53)
        LOBYTE(v66) = *(_BYTE *)(v65 + *(int *)(v64 + 84));
      sub_23E1E2FA0(v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v114[63] = v66;
      ServiceKind.umbrellaCategory.getter(&v110);
      __asm { BR              X9 }
    }
    __break(1u);
    JUMPOUT(0x23E3D42A8);
  }
  swift_bridgeObjectRelease();
  v67 = *((_QWORD *)v63 + 2);
  if (v67)
  {
    v110 = v63;
    sub_23E2CB468(0, v67, 0);
    v68 = (uint64_t)v110;
    v69 = *(unsigned __int8 *)(v107 + 80);
    v108 = v63;
    v70 = (uint64_t)&v63[(v69 + 32) & ~v69];
    v71 = *(_QWORD *)(v107 + 72);
    v72 = v100;
    do
    {
      sub_23E1E2F50(v70, v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v110 = (char *)v68;
      v74 = *(_QWORD *)(v68 + 16);
      v73 = *(_QWORD *)(v68 + 24);
      if (v74 >= v73 >> 1)
      {
        sub_23E2CB468(v73 > 1, v74 + 1, 1);
        v68 = (uint64_t)v110;
      }
      v112 = v109;
      v113 = sub_23E1EE1C4(&qword_256D40F80, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v111);
      sub_23E1E2F50(v72, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      *(_QWORD *)(v68 + 16) = v74 + 1;
      sub_23E1E6C84(&v111, v68 + 40 * v74 + 32);
      sub_23E1E2FA0(v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v70 += v71;
      --v67;
    }
    while (v67);
    swift_release();
    v36 = v88;
  }
  else
  {
    swift_release();
    v68 = MEMORY[0x24BEE4AF8];
  }
  *v101 = v68;
  v76 = type metadata accessor for StaticAccessory;
  sub_23E1E2FA0((uint64_t)v36, type metadata accessor for StaticAccessory);
  v77 = (uint64_t)v87;
LABEL_31:
  sub_23E1E2FA0(v77, v76);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v114);
}

Swift::Bool __swiftcall StaticRoom.hasContent(filterCategory:forDashboard:)(HomeDataModel::UmbrellaCategory_optional filterCategory, Swift::Bool forDashboard)
{
  uint64_t v2;
  unsigned __int8 v4;

  v4 = *(_BYTE *)filterCategory.value;
  v2 = *(_QWORD *)(StaticRoom.orderedVisibleTileInfos(filterCategory:forDashboard:)(&v4, forDashboard) + 16);
  swift_bridgeObjectRelease();
  return v2 != 0;
}

uint64_t StaticRoom.room.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E3D4360()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3D43CC()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3D4430()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3D4490()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3D44D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3D4540()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_roomFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t sub_23E3D459C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  type metadata accessor for StaticMediaSystem();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E4FBE50(v4);
  v7[2] = a1;
  result = sub_23E297284((uint64_t)sub_23E3DC7A0, (uint64_t)v7, v5);
  *a2 = result;
  return result;
}

uint64_t StaticRoom.copyReplacing(id:name:isDefaultRoom:staticZone:homeId:staticAccessoriesDictionary:staticActionSetsDictionary:staticCameraProfilesDictionary:staticMediaSystemsDictionary:staticMediaProfilesDictionary:staticServiceGroupsDictionary:staticServicesDictionary:actionSetsSortOrder:accessoriesSortOrder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned int (*a8)(_BYTE *, uint64_t, uint64_t)@<X7>, uint64_t a9@<X8>, _BYTE *a10, _BYTE *a11, _BYTE *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  unsigned int (*v64)(_BYTE *, uint64_t, uint64_t);
  unsigned int v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  unsigned int (*v81)(_BYTE *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  void (*v99)(uint64_t, _BYTE *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t result;
  _BYTE v105[12];
  int v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  unsigned int (*v117)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v118)(_BYTE *, uint64_t, uint64_t);
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;

  v17 = v16;
  v117 = a8;
  v115 = a7;
  v113 = a6;
  v119 = a5;
  v106 = a4;
  v108 = a3;
  v130 = a2;
  v121 = a1;
  v123 = a9;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v111 = &v105[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v133 = &v105[-v21];
  v22 = (int *)type metadata accessor for StaticRoom(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v129 = &v105[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v128 = &v105[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  v127 = &v105[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v125 = &v105[-v30];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v122 = &v105[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  v116 = &v105[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  v114 = &v105[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  v120 = &v105[-v38];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v112 = &v105[-v40];
  v41 = MEMORY[0x24BDAC7A8](v39);
  v110 = &v105[-v42];
  v43 = MEMORY[0x24BDAC7A8](v41);
  v107 = &v105[-v44];
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = &v105[-v46];
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = &v105[-v49];
  MEMORY[0x24BDAC7A8](v48);
  v52 = &v105[-v51];
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v109 = &v105[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v54);
  v57 = &v105[-v56];
  v58 = sub_23E536F80();
  v59 = *(_QWORD *)(v58 - 8);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v132 = &v105[-((v61 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v60);
  v63 = &v105[-v62];
  sub_23E1E7C20(v121, (uint64_t)v57, &qword_254333F50);
  sub_23E1E2F50(v17, (uint64_t)v52, type metadata accessor for StaticRoom);
  v64 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v59 + 48);
  v65 = v64(v57, 1, v58);
  v131 = v59;
  v124 = v63;
  v118 = v64;
  if (v65 == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v59 + 16))(v63, v52, v58);
    sub_23E1E2FA0((uint64_t)v52, type metadata accessor for StaticRoom);
    sub_23E1E7C64((uint64_t)v57, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v52, type metadata accessor for StaticRoom);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v59 + 32))(v63, v57, v58);
  }
  v66 = v116;
  v67 = v108;
  v68 = (uint64_t)v107;
  v69 = v106;
  sub_23E1E2F50(v17, (uint64_t)v50, type metadata accessor for StaticRoom);
  if (v67)
  {
    v121 = v67;
  }
  else
  {
    v70 = (uint64_t *)&v50[v22[5]];
    v71 = v70[1];
    v130 = *v70;
    v121 = v71;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, (uint64_t)v47, type metadata accessor for StaticRoom);
  v72 = v58;
  if (v69 == 2)
    v73 = v47[v22[6]];
  else
    v73 = v69 & 1;
  LODWORD(v116) = v73;
  v74 = (uint64_t)v114;
  v75 = (uint64_t)v111;
  sub_23E1E2FA0((uint64_t)v47, type metadata accessor for StaticRoom);
  sub_23E1E7C20(v119, v75, &qword_254333190);
  sub_23E1E2F50(v17, v68, type metadata accessor for StaticRoom);
  v76 = type metadata accessor for StaticZone();
  v77 = *(_QWORD *)(v76 - 8);
  v78 = (uint64_t)v66;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76) == 1)
  {
    sub_23E1E7C20(v68 + v22[7], (uint64_t)v133, &qword_254333190);
    sub_23E1E2FA0(v68, type metadata accessor for StaticRoom);
    sub_23E1E7C64(v75, &qword_254333190);
  }
  else
  {
    sub_23E1E2FA0(v68, type metadata accessor for StaticRoom);
    v79 = v75;
    v80 = v133;
    sub_23E1E2FDC(v79, (uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v80, 0, 1, v76);
  }
  v81 = v117;
  v82 = v115;
  v83 = (uint64_t)v110;
  v84 = v109;
  sub_23E1E7C20(v113, (uint64_t)v109, &qword_254333F50);
  sub_23E1E2F50(v17, v83, type metadata accessor for StaticRoom);
  if (v118(v84, 1, v72) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v131 + 16))(v132, v83 + v22[8], v72);
    sub_23E1E2FA0(v83, type metadata accessor for StaticRoom);
    sub_23E1E7C64((uint64_t)v84, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v83, type metadata accessor for StaticRoom);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v131 + 32))(v132, v84, v72);
  }
  v85 = v112;
  sub_23E1E2F50(v17, (uint64_t)v112, type metadata accessor for StaticRoom);
  if (v82)
  {
    v119 = v82;
  }
  else
  {
    v119 = *(_QWORD *)&v85[v22[9]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v85, type metadata accessor for StaticRoom);
  v86 = v120;
  sub_23E1E2F50(v17, (uint64_t)v120, type metadata accessor for StaticRoom);
  if (v81)
  {
    v118 = v81;
  }
  else
  {
    v118 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))&v86[v22[10]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v86, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, v74, type metadata accessor for StaticRoom);
  v126 = v72;
  if (a10)
  {
    v120 = a10;
  }
  else
  {
    v120 = *(_BYTE **)(v74 + v22[11]);
    swift_bridgeObjectRetain();
  }
  v87 = (uint64_t)v125;
  v88 = (uint64_t)v122;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v74, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, v78, type metadata accessor for StaticRoom);
  if (a11)
  {
    v125 = a11;
  }
  else
  {
    v125 = *(_BYTE **)(v78 + v22[12]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v78, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, v88, type metadata accessor for StaticRoom);
  if (a12)
  {
    v122 = a12;
  }
  else
  {
    v122 = *(_BYTE **)(v88 + v22[13]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v88, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, v87, type metadata accessor for StaticRoom);
  if (a13)
  {
    v89 = a13;
  }
  else
  {
    v89 = *(_QWORD *)(v87 + v22[14]);
    swift_bridgeObjectRetain();
  }
  v90 = (uint64_t)v127;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v87, type metadata accessor for StaticRoom);
  sub_23E1E2F50(v17, v90, type metadata accessor for StaticRoom);
  if (a14)
  {
    v91 = a14;
  }
  else
  {
    v91 = *(_QWORD *)(v90 + v22[15]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v90, type metadata accessor for StaticRoom);
  v92 = v128;
  sub_23E1E2F50(v17, (uint64_t)v128, type metadata accessor for StaticRoom);
  if (a15)
  {
    v93 = a15;
  }
  else
  {
    v93 = *(_QWORD *)&v92[v22[16]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v92, type metadata accessor for StaticRoom);
  v94 = v17;
  v95 = v129;
  sub_23E1E2F50(v94, (uint64_t)v129, type metadata accessor for StaticRoom);
  if (a16)
  {
    v96 = a16;
  }
  else
  {
    v96 = *(_QWORD *)&v95[v22[17]];
    swift_bridgeObjectRetain();
  }
  v97 = v131;
  v98 = v124;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v95, type metadata accessor for StaticRoom);
  v99 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v97 + 32);
  v100 = v123;
  v101 = v126;
  v99(v123, v98, v126);
  v102 = (_QWORD *)(v100 + v22[5]);
  v103 = v121;
  *v102 = v130;
  v102[1] = v103;
  *(_BYTE *)(v100 + v22[6]) = (_BYTE)v116;
  sub_23E1E4E3C((uint64_t)v133, v100 + v22[7], &qword_254333190);
  result = ((uint64_t (*)(uint64_t, _BYTE *, uint64_t))v99)(v100 + v22[8], v132, v101);
  *(_QWORD *)(v100 + v22[9]) = v119;
  *(_QWORD *)(v100 + v22[10]) = v118;
  *(_QWORD *)(v100 + v22[11]) = v120;
  *(_QWORD *)(v100 + v22[12]) = v125;
  *(_QWORD *)(v100 + v22[13]) = v122;
  *(_QWORD *)(v100 + v22[14]) = v89;
  *(_QWORD *)(v100 + v22[15]) = v91;
  *(_QWORD *)(v100 + v22[16]) = v93;
  *(_QWORD *)(v100 + v22[17]) = v96;
  return result;
}

uint64_t static StaticRoom.empty.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D529C(&qword_2543340B0, (uint64_t)qword_254333F20, a1);
}

uint64_t sub_23E3D500C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v0 = sub_23E536F80();
  v21 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for StaticRoom(0);
  __swift_allocate_value_buffer((uint64_t)v6, qword_256D45950);
  v7 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)qword_256D45950);
  if (qword_256D3EE58 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v0, (uint64_t)qword_256D45968);
  v8 = type metadata accessor for StaticZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_23E536F74();
  v9 = MEMORY[0x24BEE4AF8];
  v20 = sub_23E207388(MEMORY[0x24BEE4AF8]);
  v19 = sub_23E20736C(v9);
  v17 = sub_23E20D368(v9);
  v16 = sub_23E207334(v9);
  v10 = sub_23E207318(v9);
  v11 = sub_23E2072FC(v9);
  v12 = sub_23E2073C0(v9);
  v13 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v7, v18, v0);
  v14 = (_QWORD *)(v7 + v6[5]);
  *v14 = 0x5220656C706D6153;
  v14[1] = 0xEB000000006D6F6FLL;
  *(_BYTE *)(v7 + v6[6]) = 0;
  sub_23E1E4E3C((uint64_t)v5, v7 + v6[7], &qword_254333190);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v7 + v6[8], v2, v0);
  *(_QWORD *)(v7 + v6[9]) = v20;
  *(_QWORD *)(v7 + v6[10]) = v19;
  *(_QWORD *)(v7 + v6[11]) = v17;
  *(_QWORD *)(v7 + v6[12]) = v16;
  *(_QWORD *)(v7 + v6[13]) = v10;
  *(_QWORD *)(v7 + v6[14]) = v11;
  *(_QWORD *)(v7 + v6[15]) = v12;
  *(_QWORD *)(v7 + v6[16]) = v9;
  *(_QWORD *)(v7 + v6[17]) = v9;
  return result;
}

uint64_t static StaticRoom.sample.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D529C(&qword_256D3EE50, (uint64_t)qword_256D45950, a1);
}

uint64_t sub_23E3D529C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for StaticRoom(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_23E1E2F50(v6, a3, type metadata accessor for StaticRoom);
}

uint64_t sub_23E3D5300(uint64_t a1)
{
  return sub_23E375F34(a1, qword_254333BC8);
}

uint64_t static StaticRoom.emptyRoomId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D5370(&qword_254333BE0, (uint64_t)qword_254333BC8, a1);
}

uint64_t sub_23E3D5338(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D45968);
}

uint64_t static StaticRoom.sampleRoomId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D5370(&qword_256D3EE58, (uint64_t)qword_256D45968, a1);
}

uint64_t sub_23E3D5370@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23E536F80();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t StaticRoom.description.getter()
{
  sub_23E537E68();
  swift_bridgeObjectRelease();
  type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E536F80();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return 0x27206D6F6F52;
}

uint64_t sub_23E3D5558(uint64_t a1)
{
  return sub_23E33BEA8(a1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5AD0);
}

uint64_t sub_23E3D55A8(uint64_t a1)
{
  return sub_23E33BEA8(a1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5890);
}

uint64_t sub_23E3D55F8(uint64_t a1)
{
  return sub_23E33BEA8(a1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E3D5FAC);
}

uint64_t sub_23E3D5648(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unsigned int v15;
  BOOL v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unsigned int v22;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a2;
  v25 = a1;
  v4 = type metadata accessor for StaticAccessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v27 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      goto LABEL_25;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v14)
      goto LABEL_31;
    v20 = *(_QWORD *)(v27 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_31;
      v20 = *(_QWORD *)(v27 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_31;
        v20 = *(_QWORD *)(v27 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_24:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_25:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v18, (uint64_t)v8, type metadata accessor for StaticAccessory);
    v22 = *(unsigned __int16 *)&v8[*(int *)(v4 + 88)];
    if ((~v22 & 0xFEFC) != 0
      && (v22 >> 14 < 2 || v22 >> 14 == 2 && ((v15 = v22 - 0x8000, v15 <= 3) ? (v16 = v15 == 2) : (v16 = 1), !v16)))
    {
      result = sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory);
    }
    else
    {
      result = sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory);
      *(unint64_t *)((char *)v25 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_31:
        swift_retain();
        return sub_23E52515C(v25, v24, v26, a3);
      }
    }
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_31;
  v20 = *(_QWORD *)(v27 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v14)
      goto LABEL_31;
    v20 = *(_QWORD *)(v27 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_24;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D5890(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v23 = a2;
  v24 = a1;
  v5 = type metadata accessor for StaticAccessory(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 56);
  v25 = 0;
  v26 = a3 + 56;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * v16, (uint64_t)v9, type metadata accessor for StaticAccessory);
    v20 = sub_23E47E360((uint64_t)v9);
    result = sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v3)
      return result;
    if (v20)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v25++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v27)
  {
LABEL_27:
    v21 = v23;
    v22 = v25;
    swift_retain();
    return sub_23E52515C(v24, v21, v22, a3);
  }
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v27)
      goto LABEL_27;
    v18 = *(_QWORD *)(v26 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E3D5AD0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticAccessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, type metadata accessor for StaticAccessory);
    v16 = v8[*(int *)(v4 + 56)];
    result = sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory);
    if ((v16 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E52515C(v23, v22, v24, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E3D5CF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a2;
  v28 = a1;
  v4 = type metadata accessor for StaticAccessory(0);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v34 = a3;
  v9 = *(_QWORD *)(a3 + 56);
  v29 = 0;
  v30 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v31 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v14 = v13 | (v8 << 6);
LABEL_21:
    sub_23E1E2F50(*(_QWORD *)(v34 + 48) + *(_QWORD *)(v32 + 72) * v14, (uint64_t)v7, type metadata accessor for StaticAccessory);
    v18 = &v7[*(int *)(v33 + 92)];
    v19 = *(_QWORD *)v18;
    v20 = *((_QWORD *)v18 + 1);
    v21 = sub_23E53755C();
    if (v20)
    {
      if (v19 == v21 && v20 == v22)
      {
        swift_bridgeObjectRelease();
        result = sub_23E1E2FA0((uint64_t)v7, type metadata accessor for StaticAccessory);
      }
      else
      {
        v24 = sub_23E538354();
        swift_bridgeObjectRelease();
        result = sub_23E1E2FA0((uint64_t)v7, type metadata accessor for StaticAccessory);
        if ((v24 & 1) == 0)
          goto LABEL_29;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0((uint64_t)v7, type metadata accessor for StaticAccessory);
LABEL_29:
      *(unint64_t *)((char *)v28 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v29++, 1))
      {
        __break(1u);
LABEL_32:
        v26 = v34;
        swift_retain();
        return sub_23E52515C(v28, v27, v29, v26);
      }
    }
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v15 >= v31)
    goto LABEL_32;
  v16 = *(_QWORD *)(v30 + 8 * v15);
  ++v8;
  if (v16)
    goto LABEL_20;
  v8 = v15 + 1;
  if (v15 + 1 >= v31)
    goto LABEL_32;
  v16 = *(_QWORD *)(v30 + 8 * v8);
  if (v16)
    goto LABEL_20;
  v8 = v15 + 2;
  if (v15 + 2 >= v31)
    goto LABEL_32;
  v16 = *(_QWORD *)(v30 + 8 * v8);
  if (v16)
  {
LABEL_20:
    v12 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v8 << 6);
    goto LABEL_21;
  }
  v17 = v15 + 3;
  if (v17 >= v31)
    goto LABEL_32;
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v31)
      goto LABEL_32;
    v16 = *(_QWORD *)(v30 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E3D5FAC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticMediaProfile();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v16 = v8[*(int *)(v4 + 52)];
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    if ((v16 & 1) == 0)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E525A10(v23, v22, v24, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E3D61D4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_23E1E6C84(&v12, v10 + 40 * a1 + 32);
}

void _s13HomeDataModel8RoomTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for StaticRoom(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for RoomType(0);
  MEMORY[0x24BDAC7A8](v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E1E2F50(a1, (uint64_t)v10, type metadata accessor for RoomType);
  sub_23E1E2F50(a2, v11, type metadata accessor for RoomType);
  v12 = (char *)sub_23E3D6374
      + 4 * byte_23E54C91F[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 4, v4)];
  __asm { BR              X10 }
}

uint64_t sub_23E3D6374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  char v6;

  sub_23E1E2F50(v0, v3, type metadata accessor for RoomType);
  if (v4(v5, 4, v1))
  {
    sub_23E1E2FA0(v3, type metadata accessor for StaticRoom);
    sub_23E1E7C64(v0, &qword_256D40F50);
    v6 = 0;
  }
  else
  {
    sub_23E1E2FDC(v5, v2, type metadata accessor for StaticRoom);
    v6 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(v3, v2);
    sub_23E1E2FA0(v2, type metadata accessor for StaticRoom);
    sub_23E1E2FA0(v3, type metadata accessor for StaticRoom);
    sub_23E1E2FA0(v0, type metadata accessor for RoomType);
  }
  return v6 & 1;
}

unint64_t sub_23E3D64BC()
{
  unint64_t result;

  result = qword_256D45988;
  if (!qword_256D45988)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CCAC, &type metadata for StaticRoom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45988);
  }
  return result;
}

void *sub_23E3D6500(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 0;
      v23 = v1;
      v24 = v1 & 0xC000000000000001;
      v21 = v1 + 32;
      v22 = v2;
      do
      {
        if (v24)
          v4 = (id)MEMORY[0x24264F148](v3, v1);
        else
          v4 = *(id *)(v21 + 8 * v3);
        v5 = v4;
        if (__OFADD__(v3++, 1))
        {
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        v7 = objc_msgSend(v4, sel_rooms);
        v1 = sub_23E1E335C(0, &qword_254332C28);
        v8 = sub_23E5377F0();

        v25 = v5;
        if (v8 >> 62)
        {
          swift_bridgeObjectRetain();
          v9 = sub_23E53803C();
          if (!v9)
            goto LABEL_4;
        }
        else
        {
          v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v9)
            goto LABEL_4;
        }
        if ((v8 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x24264F148](0, v8);
        else
          v10 = *(id *)(v8 + 32);
        v11 = v10;
        v12 = sub_23E537C58();

        if ((v12 & 1) != 0)
        {
LABEL_29:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return v25;
        }
        if (v9 != 1)
        {
          if ((v8 & 0xC000000000000001) != 0)
          {
            v13 = 1;
            while (1)
            {
              MEMORY[0x24264F148](v13, v8);
              v14 = v13 + 1;
              if (__OFADD__(v13, 1))
                break;
              v15 = sub_23E537C58();
              swift_unknownObjectRelease();
              if ((v15 & 1) != 0)
                goto LABEL_29;
              ++v13;
              if (v14 == v9)
                goto LABEL_4;
            }
            __break(1u);
          }
          else
          {
            v16 = 5;
            while (1)
            {
              v17 = v16 - 3;
              if (__OFADD__(v16 - 4, 1))
                break;
              v18 = *(id *)(v8 + 8 * v16);
              v19 = sub_23E537C58();

              if ((v19 & 1) != 0)
                goto LABEL_29;
              ++v16;
              if (v17 == v9)
                goto LABEL_4;
            }
          }
          __break(1u);
          goto LABEL_33;
        }
LABEL_4:
        swift_bridgeObjectRelease_n();

        v1 = v23;
      }
      while (v3 != v22);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E3D67A4(unint64_t *a1, uint64_t a2, _QWORD *a3, void *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;

  v57 = a5;
  v66 = a4;
  v54 = a2;
  v55 = a1;
  v75 = sub_23E536F80();
  v74 = *(_QWORD **)(v75 - 8);
  v6 = MEMORY[0x24BDAC7A8](v75);
  v71 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v54 - v8;
  v68 = type metadata accessor for StaticAccessory(0);
  v65 = *(_QWORD *)(v68 - 8);
  v10 = MEMORY[0x24BDAC7A8](v68);
  v58 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v64 = (uint64_t)&v54 - v13;
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v54 - v15;
  v56 = 0;
  v17 = 0;
  v67 = a3;
  v20 = a3[8];
  v19 = a3 + 8;
  v18 = v20;
  v21 = 1 << *((_BYTE *)v19 - 32);
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  v61 = v19;
  v62 = (unint64_t)(v21 + 63) >> 6;
  v63 = (char *)&v54 - v15;
  while (1)
  {
    if (v23)
    {
      v25 = __clz(__rbit64(v23));
      v26 = (v23 - 1) & v23;
      v27 = v25 | (v17 << 6);
      goto LABEL_19;
    }
    v28 = __OFADD__(v17++, 1);
    if (v28)
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v17 >= v62)
      return sub_23E1EE2C0(v55, v54, v56, v67);
    v29 = v61[v17];
    if (!v29)
      break;
LABEL_18:
    v26 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v17 << 6);
LABEL_19:
    sub_23E1E2F50(v67[7] + *(_QWORD *)(v65 + 72) * v27, (uint64_t)v16, type metadata accessor for StaticAccessory);
    v31 = *(_QWORD *)&v16[*(int *)(v68 + 48)];
    v32 = objc_msgSend(v66, sel_uniqueIdentifier, v54);
    sub_23E536F68();

    v33 = *(_QWORD *)(v31 + 16);
    v69 = v26;
    v70 = v17;
    if (v33
      && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v34 = sub_23E5374CC(),
          v35 = -1 << *(_BYTE *)(v31 + 32),
          v36 = v34 & ~v35,
          v73 = v31 + 56,
          ((*(_QWORD *)(v31 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0))
    {
      v59 = v27;
      v72 = ~v35;
      v37 = v74[9];
      v38 = (void (*)(char *, unint64_t, uint64_t))v74[2];
      while (1)
      {
        v39 = v31;
        v40 = *(_QWORD *)(v31 + 48) + v37 * v36;
        v41 = v71;
        v42 = v75;
        v38(v71, v40, v75);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v43 = v9;
        v44 = sub_23E537514();
        v45 = (void (*)(char *, uint64_t))v74[1];
        v45(v41, v42);
        if ((v44 & 1) != 0)
          break;
        v36 = (v36 + 1) & v72;
        v9 = v43;
        v31 = v39;
        if (((*(_QWORD *)(v73 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          goto LABEL_5;
      }
      v9 = v43;
      v45(v43, v75);
      v16 = v63;
      v46 = v64;
      sub_23E1E2F50((uint64_t)v63, v64, type metadata accessor for StaticAccessory);
      v47 = *(unsigned __int16 *)(v46 + *(int *)(v68 + 88));
      v48 = v58;
      v49 = sub_23E1E2F50(v46, v58, type metadata accessor for StaticAccessory);
      if ((~v47 & 0xFEFC) != 0)
      {
        MEMORY[0x24BDAC7A8](v49);
        *(&v54 - 2) = v48;
        v50 = v57;
        swift_bridgeObjectRetain();
        v51 = v60;
        v52 = sub_23E289240((void (*)(int64_t *__return_ptr, char *))sub_23E3DC788, (uint64_t)(&v54 - 4), v50);
        v60 = v51;
        v9 = v43;
        swift_bridgeObjectRelease();
        v53 = *(_QWORD *)(v52 + 16);
        swift_bridgeObjectRelease();
        sub_23E1E2FA0(v46, type metadata accessor for StaticAccessory);
        sub_23E1E2FA0(v48, type metadata accessor for StaticAccessory);
        result = sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
        v23 = v69;
        v17 = v70;
        if (!v53)
          goto LABEL_33;
      }
      else
      {
        sub_23E1E2FA0(v46, type metadata accessor for StaticAccessory);
        sub_23E1E2FA0(v48, type metadata accessor for StaticAccessory);
        result = sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
        v23 = v69;
        v17 = v70;
LABEL_33:
        *(unint64_t *)((char *)v55 + ((v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v59;
        v28 = __OFADD__(v56++, 1);
        if (v28)
        {
          __break(1u);
          return sub_23E1EE2C0(v55, v54, v56, v67);
        }
      }
    }
    else
    {
LABEL_5:
      ((void (*)(char *, uint64_t))v74[1])(v9, v75);
      v16 = v63;
      v24 = v64;
      sub_23E1E2F50((uint64_t)v63, v64, type metadata accessor for StaticAccessory);
      sub_23E1E2FA0(v24, type metadata accessor for StaticAccessory);
      result = sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
      v23 = v69;
      v17 = v70;
    }
  }
  v30 = v17 + 1;
  if (v17 + 1 >= v62)
    return sub_23E1EE2C0(v55, v54, v56, v67);
  v29 = v61[v30];
  if (v29)
    goto LABEL_17;
  v30 = v17 + 2;
  if (v17 + 2 >= v62)
    return sub_23E1EE2C0(v55, v54, v56, v67);
  v29 = v61[v30];
  if (v29)
    goto LABEL_17;
  v30 = v17 + 3;
  if (v17 + 3 >= v62)
    return sub_23E1EE2C0(v55, v54, v56, v67);
  v29 = v61[v30];
  if (v29)
  {
LABEL_17:
    v17 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v17 >= v62)
      return sub_23E1EE2C0(v55, v54, v56, v67);
    v29 = v61[v17];
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23E3D6D20(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  id v9;
  uint64_t isStackAllocationSafe;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = a2;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = (uint64_t)v9;
  v11 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v12 = (char *)v18 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v12, 8 * v8);
    v13 = v11;
    swift_bridgeObjectRetain();
    v14 = sub_23E3D67A4((unint64_t *)v12, v8, (_QWORD *)a1, v13, a3);

    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease();

  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, 8 * v8);
    v16 = v11;
    swift_bridgeObjectRetain();
    v14 = sub_23E3D67A4((unint64_t *)v15, v8, (_QWORD *)a1, v16, a3);

    swift_bridgeObjectRelease();
    MEMORY[0x24264FEBC](v15, -1, -1);
    swift_bridgeObjectRelease();

  }
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_23E3D6F20(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;

  v51 = a2;
  v62 = a4;
  v52 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332750);
  v5 = MEMORY[0x24BDAC7A8](v61);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for StaticActionSet();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v69 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v50 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  v22 = 0;
  v63 = (_QWORD *)a3;
  v23 = *(_QWORD *)(a3 + 64);
  v53 = 0;
  v54 = a3 + 64;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v55 = (unint64_t)(v24 + 63) >> 6;
  v56 = v21;
  v67 = v7;
  v57 = v12;
  v58 = v9;
  while (1)
  {
    if (v26)
    {
      v65 = (v26 - 1) & v26;
      v66 = v22;
      v28 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_22;
    }
    v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v29 >= v55)
      return sub_23E1EE2AC(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v29);
    v31 = v22 + 1;
    if (!v30)
    {
      v31 = v22 + 2;
      if (v22 + 2 >= v55)
        return sub_23E1EE2AC(v52, v51, v53, v63);
      v30 = *(_QWORD *)(v54 + 8 * v31);
      if (!v30)
      {
        v31 = v22 + 3;
        if (v22 + 3 >= v55)
          return sub_23E1EE2AC(v52, v51, v53, v63);
        v30 = *(_QWORD *)(v54 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_21:
    v65 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    v33 = v63;
    v34 = v63[6];
    v68 = v69[9];
    v35 = (void (*)(void))v69[2];
    ((void (*)(char *, unint64_t, uint64_t))v35)(v21, v34 + v68 * v28, v13);
    v36 = v33[7];
    v37 = *(_QWORD *)(v59 + 72);
    v64 = v28;
    sub_23E1E2F50(v36 + v37 * v28, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v38 = v61;
    v39 = (uint64_t)&v9[*(int *)(v61 + 48)];
    ((void (*)(char *, char *, uint64_t))v35)(v9, v21, v13);
    sub_23E1E2F50((uint64_t)v12, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v40 = (uint64_t)&v67[*(int *)(v38 + 48)];
    v35();
    sub_23E1E2F50(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v41 = *(_QWORD *)(v40 + *(int *)(v60 + 40));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v42 = objc_msgSend(v62, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v41 + 16)
      && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v43 = sub_23E5374CC(),
          v44 = -1 << *(_BYTE *)(v41 + 32),
          v45 = v43 & ~v44,
          ((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0))
    {
      v46 = ~v44;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v35)(v16, *(_QWORD *)(v41 + 48) + v45 * v68, v13);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v47 = sub_23E537514();
        v48 = (void (*)(char *, uint64_t))v69[1];
        v48(v16, v13);
        if ((v47 & 1) != 0)
          break;
        v45 = (v45 + 1) & v46;
        if (((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      v48(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332750);
      v48(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v48)(v56, v13);
      *(unint64_t *)((char *)v52 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      v49 = __OFADD__(v53++, 1);
      v26 = v65;
      v22 = v66;
      if (v49)
      {
        __break(1u);
        return sub_23E1EE2AC(v52, v51, v53, v63);
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      v27 = (void (*)(char *, uint64_t))v69[1];
      v27(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332750);
      v27(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v27)(v56, v13);
      v26 = v65;
      v22 = v66;
    }
  }
  v32 = v22 + 4;
  if (v22 + 4 >= v55)
    return sub_23E1EE2AC(v52, v51, v53, v63);
  v30 = *(_QWORD *)(v54 + 8 * v32);
  if (v30)
  {
    v31 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v55)
      return sub_23E1EE2AC(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D748C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;

  v51 = a2;
  v62 = a4;
  v52 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333118);
  v5 = MEMORY[0x24BDAC7A8](v61);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for StaticCameraProfile();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v69 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v50 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  v22 = 0;
  v63 = (_QWORD *)a3;
  v23 = *(_QWORD *)(a3 + 64);
  v53 = 0;
  v54 = a3 + 64;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v55 = (unint64_t)(v24 + 63) >> 6;
  v56 = v21;
  v67 = v7;
  v57 = v12;
  v58 = v9;
  while (1)
  {
    if (v26)
    {
      v65 = (v26 - 1) & v26;
      v66 = v22;
      v28 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_22;
    }
    v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v29 >= v55)
      return sub_23E3614BC(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v29);
    v31 = v22 + 1;
    if (!v30)
    {
      v31 = v22 + 2;
      if (v22 + 2 >= v55)
        return sub_23E3614BC(v52, v51, v53, v63);
      v30 = *(_QWORD *)(v54 + 8 * v31);
      if (!v30)
      {
        v31 = v22 + 3;
        if (v22 + 3 >= v55)
          return sub_23E3614BC(v52, v51, v53, v63);
        v30 = *(_QWORD *)(v54 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_21:
    v65 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    v33 = v63;
    v34 = v63[6];
    v68 = v69[9];
    v35 = (void (*)(void))v69[2];
    ((void (*)(char *, unint64_t, uint64_t))v35)(v21, v34 + v68 * v28, v13);
    v36 = v33[7];
    v37 = *(_QWORD *)(v59 + 72);
    v64 = v28;
    sub_23E1E2F50(v36 + v37 * v28, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    v38 = v61;
    v39 = (uint64_t)&v9[*(int *)(v61 + 48)];
    ((void (*)(char *, char *, uint64_t))v35)(v9, v21, v13);
    sub_23E1E2F50((uint64_t)v12, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    v40 = (uint64_t)&v67[*(int *)(v38 + 48)];
    v35();
    sub_23E1E2F50(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    v41 = *(_QWORD *)(v40 + *(int *)(v60 + 24));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    v42 = objc_msgSend(v62, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v41 + 16)
      && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v43 = sub_23E5374CC(),
          v44 = -1 << *(_BYTE *)(v41 + 32),
          v45 = v43 & ~v44,
          ((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0))
    {
      v46 = ~v44;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v35)(v16, *(_QWORD *)(v41 + 48) + v45 * v68, v13);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v47 = sub_23E537514();
        v48 = (void (*)(char *, uint64_t))v69[1];
        v48(v16, v13);
        if ((v47 & 1) != 0)
          break;
        v45 = (v45 + 1) & v46;
        if (((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      v48(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254333118);
      v48(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v48)(v56, v13);
      *(unint64_t *)((char *)v52 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      v49 = __OFADD__(v53++, 1);
      v26 = v65;
      v22 = v66;
      if (v49)
      {
        __break(1u);
        return sub_23E3614BC(v52, v51, v53, v63);
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      v27 = (void (*)(char *, uint64_t))v69[1];
      v27(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254333118);
      v27(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v27)(v56, v13);
      v26 = v65;
      v22 = v66;
    }
  }
  v32 = v22 + 4;
  if (v22 + 4 >= v55)
    return sub_23E3614BC(v52, v51, v53, v63);
  v30 = *(_QWORD *)(v54 + 8 * v32);
  if (v30)
  {
    v31 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v55)
      return sub_23E3614BC(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D79F8(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  BOOL v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v39 = a2;
  v47 = a4;
  v40 = a1;
  v55 = sub_23E536F80();
  v53 = *(_QWORD **)(v55 - 8);
  v5 = MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v39 - v7;
  v8 = type metadata accessor for StaticMediaSystem();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v48 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v44 = v11;
  v17 = v52;
  while (1)
  {
    if (v16)
    {
      v50 = (v16 - 1) & v16;
      v51 = v12;
      v18 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_22;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v43)
      return sub_23E1EE298(v40, v39, v41, v48);
    v20 = *(_QWORD *)(v42 + 8 * v19);
    v21 = v12 + 1;
    if (!v20)
    {
      v21 = v12 + 2;
      if (v12 + 2 >= v43)
        return sub_23E1EE298(v40, v39, v41, v48);
      v20 = *(_QWORD *)(v42 + 8 * v21);
      if (!v20)
      {
        v21 = v12 + 3;
        if (v12 + 3 >= v43)
          return sub_23E1EE298(v40, v39, v41, v48);
        v20 = *(_QWORD *)(v42 + 8 * v21);
        if (!v20)
          break;
      }
    }
LABEL_21:
    v50 = (v20 - 1) & v20;
    v51 = v21;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    v23 = v48[7];
    v24 = *(_QWORD *)(v45 + 72);
    v49 = v18;
    sub_23E1E2F50(v23 + v24 * v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v25 = *(_QWORD *)&v11[*(int *)(v46 + 84)];
    v26 = objc_msgSend(v47, sel_uniqueIdentifier, v39);
    sub_23E536F68();

    v54 = v25;
    if (*(_QWORD *)(v25 + 16)
      && (v27 = v54,
          sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v28 = sub_23E5374CC(),
          v29 = -1 << *(_BYTE *)(v27 + 32),
          v30 = v28 & ~v29,
          v31 = v27 + 56,
          ((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0))
    {
      v32 = ~v29;
      v33 = v53[9];
      v34 = (void (*)(char *, unint64_t, uint64_t))v53[2];
      while (1)
      {
        v35 = v55;
        v34(v17, *(_QWORD *)(v54 + 48) + v33 * v30, v55);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v36 = sub_23E537514();
        v37 = (void (*)(char *, uint64_t))v53[1];
        v37(v17, v35);
        if ((v36 & 1) != 0)
          break;
        v30 = (v30 + 1) & v32;
        if (((*(_QWORD *)(v31 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
          goto LABEL_5;
      }
      v37(v56, v55);
      v11 = v44;
      result = sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      *(unint64_t *)((char *)v40 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
      v38 = __OFADD__(v41++, 1);
      v16 = v50;
      v12 = v51;
      if (v38)
      {
        __break(1u);
        return sub_23E1EE298(v40, v39, v41, v48);
      }
    }
    else
    {
LABEL_5:
      ((void (*)(char *, uint64_t))v53[1])(v56, v55);
      v11 = v44;
      result = sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      v16 = v50;
      v12 = v51;
    }
  }
  v22 = v12 + 4;
  if (v12 + 4 >= v43)
    return sub_23E1EE298(v40, v39, v41, v48);
  v20 = *(_QWORD *)(v42 + 8 * v22);
  if (v20)
  {
    v21 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v43)
      return sub_23E1EE298(v40, v39, v41, v48);
    v20 = *(_QWORD *)(v42 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D7E08(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  BOOL v38;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v39 = a2;
  v47 = a4;
  v40 = a1;
  v55 = sub_23E536F80();
  v53 = *(_QWORD **)(v55 - 8);
  v5 = MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)&v39 - v7;
  v8 = type metadata accessor for StaticMediaProfile();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  result = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v48 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v44 = v11;
  v17 = v52;
  while (1)
  {
    if (v16)
    {
      v50 = (v16 - 1) & v16;
      v51 = v12;
      v18 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_22;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v43)
      return sub_23E3614A8(v40, v39, v41, v48);
    v20 = *(_QWORD *)(v42 + 8 * v19);
    v21 = v12 + 1;
    if (!v20)
    {
      v21 = v12 + 2;
      if (v12 + 2 >= v43)
        return sub_23E3614A8(v40, v39, v41, v48);
      v20 = *(_QWORD *)(v42 + 8 * v21);
      if (!v20)
      {
        v21 = v12 + 3;
        if (v12 + 3 >= v43)
          return sub_23E3614A8(v40, v39, v41, v48);
        v20 = *(_QWORD *)(v42 + 8 * v21);
        if (!v20)
          break;
      }
    }
LABEL_21:
    v50 = (v20 - 1) & v20;
    v51 = v21;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    v23 = v48[7];
    v24 = *(_QWORD *)(v45 + 72);
    v49 = v18;
    sub_23E1E2F50(v23 + v24 * v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v25 = *(_QWORD *)&v11[*(int *)(v46 + 24)];
    v26 = objc_msgSend(v47, sel_uniqueIdentifier, v39);
    sub_23E536F68();

    v54 = v25;
    if (*(_QWORD *)(v25 + 16)
      && (v27 = v54,
          sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v28 = sub_23E5374CC(),
          v29 = -1 << *(_BYTE *)(v27 + 32),
          v30 = v28 & ~v29,
          v31 = v27 + 56,
          ((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0))
    {
      v32 = ~v29;
      v33 = v53[9];
      v34 = (void (*)(char *, unint64_t, uint64_t))v53[2];
      while (1)
      {
        v35 = v55;
        v34(v17, *(_QWORD *)(v54 + 48) + v33 * v30, v55);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v36 = sub_23E537514();
        v37 = (void (*)(char *, uint64_t))v53[1];
        v37(v17, v35);
        if ((v36 & 1) != 0)
          break;
        v30 = (v30 + 1) & v32;
        if (((*(_QWORD *)(v31 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
          goto LABEL_5;
      }
      v37(v56, v55);
      v11 = v44;
      result = sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      *(unint64_t *)((char *)v40 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
      v38 = __OFADD__(v41++, 1);
      v16 = v50;
      v12 = v51;
      if (v38)
      {
        __break(1u);
        return sub_23E3614A8(v40, v39, v41, v48);
      }
    }
    else
    {
LABEL_5:
      ((void (*)(char *, uint64_t))v53[1])(v56, v55);
      v11 = v44;
      result = sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      v16 = v50;
      v12 = v51;
    }
  }
  v22 = v12 + 4;
  if (v12 + 4 >= v43)
    return sub_23E3614A8(v40, v39, v41, v48);
  v20 = *(_QWORD *)(v42 + 8 * v22);
  if (v20)
  {
    v21 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v43)
      return sub_23E3614A8(v40, v39, v41, v48);
    v20 = *(_QWORD *)(v42 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D8218(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;

  v51 = a2;
  v62 = a4;
  v52 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
  v5 = MEMORY[0x24BDAC7A8](v61);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for StaticServiceGroup();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v69 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v50 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  v22 = 0;
  v63 = (_QWORD *)a3;
  v23 = *(_QWORD *)(a3 + 64);
  v53 = 0;
  v54 = a3 + 64;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v55 = (unint64_t)(v24 + 63) >> 6;
  v56 = v21;
  v67 = v7;
  v57 = v12;
  v58 = v9;
  while (1)
  {
    if (v26)
    {
      v65 = (v26 - 1) & v26;
      v66 = v22;
      v28 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_22;
    }
    v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v29 >= v55)
      return sub_23E1EE284(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v29);
    v31 = v22 + 1;
    if (!v30)
    {
      v31 = v22 + 2;
      if (v22 + 2 >= v55)
        return sub_23E1EE284(v52, v51, v53, v63);
      v30 = *(_QWORD *)(v54 + 8 * v31);
      if (!v30)
      {
        v31 = v22 + 3;
        if (v22 + 3 >= v55)
          return sub_23E1EE284(v52, v51, v53, v63);
        v30 = *(_QWORD *)(v54 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_21:
    v65 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    v33 = v63;
    v34 = v63[6];
    v68 = v69[9];
    v35 = (void (*)(void))v69[2];
    ((void (*)(char *, unint64_t, uint64_t))v35)(v21, v34 + v68 * v28, v13);
    v36 = v33[7];
    v37 = *(_QWORD *)(v59 + 72);
    v64 = v28;
    sub_23E1E2F50(v36 + v37 * v28, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v38 = v61;
    v39 = (uint64_t)&v9[*(int *)(v61 + 48)];
    ((void (*)(char *, char *, uint64_t))v35)(v9, v21, v13);
    sub_23E1E2F50((uint64_t)v12, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v40 = (uint64_t)&v67[*(int *)(v38 + 48)];
    v35();
    sub_23E1E2F50(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v41 = *(_QWORD *)(v40 + *(int *)(v60 + 32));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v42 = objc_msgSend(v62, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v41 + 16)
      && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v43 = sub_23E5374CC(),
          v44 = -1 << *(_BYTE *)(v41 + 32),
          v45 = v43 & ~v44,
          ((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0))
    {
      v46 = ~v44;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v35)(v16, *(_QWORD *)(v41 + 48) + v45 * v68, v13);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v47 = sub_23E537514();
        v48 = (void (*)(char *, uint64_t))v69[1];
        v48(v16, v13);
        if ((v47 & 1) != 0)
          break;
        v45 = (v45 + 1) & v46;
        if (((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      v48(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332778);
      v48(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v48)(v56, v13);
      *(unint64_t *)((char *)v52 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      v49 = __OFADD__(v53++, 1);
      v26 = v65;
      v22 = v66;
      if (v49)
      {
        __break(1u);
        return sub_23E1EE284(v52, v51, v53, v63);
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      v27 = (void (*)(char *, uint64_t))v69[1];
      v27(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332778);
      v27(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v27)(v56, v13);
      v26 = v65;
      v22 = v66;
    }
  }
  v32 = v22 + 4;
  if (v22 + 4 >= v55)
    return sub_23E1EE284(v52, v51, v53, v63);
  v30 = *(_QWORD *)(v54 + 8 * v32);
  if (v30)
  {
    v31 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v55)
      return sub_23E1EE284(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D8784(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;

  v51 = a2;
  v62 = a4;
  v52 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
  v5 = MEMORY[0x24BDAC7A8](v61);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for StaticService();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v69 = *(_QWORD **)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v70 = (char *)&v50 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  v22 = 0;
  v63 = (_QWORD *)a3;
  v23 = *(_QWORD *)(a3 + 64);
  v53 = 0;
  v54 = a3 + 64;
  v24 = 1 << *(_BYTE *)(a3 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v55 = (unint64_t)(v24 + 63) >> 6;
  v56 = v21;
  v67 = v7;
  v57 = v12;
  v58 = v9;
  while (1)
  {
    if (v26)
    {
      v65 = (v26 - 1) & v26;
      v66 = v22;
      v28 = __clz(__rbit64(v26)) | (v22 << 6);
      goto LABEL_22;
    }
    v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v29 >= v55)
      return sub_23E1EE2D4(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v29);
    v31 = v22 + 1;
    if (!v30)
    {
      v31 = v22 + 2;
      if (v22 + 2 >= v55)
        return sub_23E1EE2D4(v52, v51, v53, v63);
      v30 = *(_QWORD *)(v54 + 8 * v31);
      if (!v30)
      {
        v31 = v22 + 3;
        if (v22 + 3 >= v55)
          return sub_23E1EE2D4(v52, v51, v53, v63);
        v30 = *(_QWORD *)(v54 + 8 * v31);
        if (!v30)
          break;
      }
    }
LABEL_21:
    v65 = (v30 - 1) & v30;
    v66 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_22:
    v33 = v63;
    v34 = v63[6];
    v68 = v69[9];
    v35 = (void (*)(void))v69[2];
    ((void (*)(char *, unint64_t, uint64_t))v35)(v21, v34 + v68 * v28, v13);
    v36 = v33[7];
    v37 = *(_QWORD *)(v59 + 72);
    v64 = v28;
    sub_23E1E2F50(v36 + v37 * v28, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v38 = v61;
    v39 = (uint64_t)&v9[*(int *)(v61 + 48)];
    ((void (*)(char *, char *, uint64_t))v35)(v9, v21, v13);
    sub_23E1E2F50((uint64_t)v12, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v40 = (uint64_t)&v67[*(int *)(v38 + 48)];
    v35();
    sub_23E1E2F50(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v41 = *(_QWORD *)(v40 + *(int *)(v60 + 56));
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v42 = objc_msgSend(v62, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v41 + 16)
      && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
          v43 = sub_23E5374CC(),
          v44 = -1 << *(_BYTE *)(v41 + 32),
          v45 = v43 & ~v44,
          ((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0))
    {
      v46 = ~v44;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v35)(v16, *(_QWORD *)(v41 + 48) + v45 * v68, v13);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v47 = sub_23E537514();
        v48 = (void (*)(char *, uint64_t))v69[1];
        v48(v16, v13);
        if ((v47 & 1) != 0)
          break;
        v45 = (v45 + 1) & v46;
        if (((*(_QWORD *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      v48(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332738);
      v48(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v48)(v56, v13);
      *(unint64_t *)((char *)v52 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      v49 = __OFADD__(v53++, 1);
      v26 = v65;
      v22 = v66;
      if (v49)
      {
        __break(1u);
        return sub_23E1EE2D4(v52, v51, v53, v63);
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      v27 = (void (*)(char *, uint64_t))v69[1];
      v27(v70, v13);
      v9 = v58;
      sub_23E1E7C64((uint64_t)v58, &qword_254332738);
      v27(v67, v13);
      v12 = v57;
      sub_23E1E2FA0((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v21 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v27)(v56, v13);
      v26 = v65;
      v22 = v66;
    }
  }
  v32 = v22 + 4;
  if (v22 + 4 >= v55)
    return sub_23E1EE2D4(v52, v51, v53, v63);
  v30 = *(_QWORD *)(v54 + 8 * v32);
  if (v30)
  {
    v31 = v22 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v55)
      return sub_23E1EE2D4(v52, v51, v53, v63);
    v30 = *(_QWORD *)(v54 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_23E3D8CF0(uint64_t a1, void *a2, uint64_t (*a3)(char *, unint64_t, uint64_t, id))
{
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = a2;
  v10 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v11 = (char *)v17 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v11, 8 * v8);
    v12 = v10;
    v13 = a3(v11, v8, a1, v12);

    if (v3)
      swift_willThrow();

  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v8);
    v15 = v10;
    v13 = a3((char *)v14, v8, a1, v15);

    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  return v13;
}

uint64_t sub_23E3D8E90(unint64_t a1, void *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[2];
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v10 = v9;
  v41 = a7;
  v42 = a8;
  v39 = a5;
  v40 = a6;
  v37 = a3;
  v38 = a4;
  v36 = a2;
  v12 = type metadata accessor for StaticRoom(0);
  v35 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    if (!v15)
      return v16;
    v44 = MEMORY[0x24BEE4AF8];
    result = sub_23E1F9288(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
      break;
    v29[1] = v10;
    v10 = 0;
    v16 = v44;
    v30 = a1 & 0xC000000000000001;
    v31 = a9;
    v33 = v14;
    v34 = a1;
    v32 = v15;
    v14 = v37;
    v19 = v39;
    v18 = v40;
    v20 = v41;
    while (v15 != v10)
    {
      if (v30)
        v21 = (id)MEMORY[0x24264F148](v10, a1);
      else
        v21 = *(id *)(a1 + 8 * v10 + 32);
      v43 = v21;
      v22 = v36;
      swift_bridgeObjectRetain();
      v23 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v42;
      swift_bridgeObjectRetain();
      v25 = swift_bridgeObjectRetain();
      v26 = (uint64_t)v33;
      sub_23E3CF9C0(v22, v43, (uint64_t)v14, v23, v19, v18, v20, v24, (uint64_t)v33, v25);
      v44 = v16;
      v28 = *(_QWORD *)(v16 + 16);
      v27 = *(_QWORD *)(v16 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_23E1F9288(v27 > 1, v28 + 1, 1);
        v16 = v44;
      }
      ++v10;
      *(_QWORD *)(v16 + 16) = v28 + 1;
      sub_23E1E2FDC(v26, v16+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v28, type metadata accessor for StaticRoom);
      v15 = v32;
      a1 = v34;
      if (v32 == v10)
        return v16;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v15 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23E3D90F0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticRoom(0);
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F58);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticRoom;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333F58);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D98C();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212BD8(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E3DC744(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E3D9418(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a7;
  v43 = a8;
  v45 = a6;
  v41 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F58);
  v12 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_rooms);
  sub_23E1E335C(0, &qword_254332C28);
  v16 = sub_23E5377F0();

  v17 = objc_msgSend(a1, sel_roomForEntireHome);
  v47 = v16;
  swift_bridgeObjectRetain();
  v18 = v17;
  MEMORY[0x24264EA70]();
  if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23E537820();
  sub_23E53785C();
  sub_23E537808();
  v19 = v47;
  swift_bridgeObjectRelease();

  v20 = a1;
  v39 = v20;
  v21 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = a5;
  swift_bridgeObjectRetain();
  v22 = v42;
  swift_bridgeObjectRetain();
  v23 = v43;
  swift_bridgeObjectRetain();
  v24 = v20;
  v25 = 0;
  v44 = sub_23E3D8E90(v19, v24, v21, a3, a4, a5, v45, v22, v23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v44;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v45 = 0;
    v47 = MEMORY[0x24BEE4AF8];
    sub_23E1F925C(0, v27, 0);
    v28 = v47;
    v29 = *(_QWORD *)(type metadata accessor for StaticRoom(0) - 8);
    v30 = v26 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v31 = *(_QWORD *)(v29 + 72);
    do
    {
      v32 = (uint64_t)&v14[*(int *)(v46 + 48)];
      sub_23E1E2F50(v30, v32, type metadata accessor for StaticRoom);
      v33 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v14, v32, v33);
      v47 = v28;
      v35 = *(_QWORD *)(v28 + 16);
      v34 = *(_QWORD *)(v28 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_23E1F925C(v34 > 1, v35 + 1, 1);
        v28 = v47;
      }
      *(_QWORD *)(v28 + 16) = v35 + 1;
      sub_23E1E4E3C((uint64_t)v14, v28+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v35, &qword_254333F58);
      v30 += v31;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v25 = v45;
    if (*(_QWORD *)(v28 + 16))
      goto LABEL_9;
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332C50);
      v36 = sub_23E53806C();
      goto LABEL_12;
    }
  }
  v36 = MEMORY[0x24BEE4B00];
LABEL_12:
  v47 = v36;
  sub_23E3D90F0(v28, 1, &v47);
  swift_bridgeObjectRelease();
  if (!v25)
    return v47;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E3D97E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C75616665447369 && a2 == 0xED00006D6F6F5274 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F5A636974617473 && a2 == 0xEA0000000000656ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023E564650 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023E564670 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023E564690 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023E5646B0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023E5646D0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023E564710 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E564730 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E5688F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E5695B0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_23E3D9D1C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v56 = a2;
  v57 = a1;
  v6 = sub_23E536F80();
  v76 = *(_QWORD *)(v6 - 8);
  v77 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  MEMORY[0x24BDAC7A8](v74);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v68 = *(_QWORD *)(v79 - 8);
  v13 = MEMORY[0x24BDAC7A8](v79);
  v78 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v75 = (uint64_t *)((char *)&v55 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v55 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v55 - v20;
  v21 = type metadata accessor for StaticMediaProfile();
  v67 = *(_QWORD *)(v21 - 8);
  result = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v26 = *(_QWORD *)(a3 + 56);
  v63 = 0;
  v64 = a3 + 56;
  v27 = 1 << *(_BYTE *)(a3 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v26;
  v65 = (unint64_t)(v27 + 63) >> 6;
  v60 = a4;
  v61 = a3;
  v59 = v12;
  v72 = v9;
  v62 = result;
  v58 = v24;
  v71 = v19;
  while (1)
  {
    if (v29)
    {
      v69 = (v29 - 1) & v29;
      v70 = v25;
      v30 = __clz(__rbit64(v29)) | (v25 << 6);
      goto LABEL_22;
    }
    v31 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v31 >= v65)
      goto LABEL_46;
    v32 = *(_QWORD *)(v64 + 8 * v31);
    v33 = v25 + 1;
    if (!v32)
    {
      v33 = v25 + 2;
      if (v25 + 2 >= v65)
        goto LABEL_46;
      v32 = *(_QWORD *)(v64 + 8 * v33);
      if (!v32)
      {
        v33 = v25 + 3;
        if (v25 + 3 >= v65)
          goto LABEL_46;
        v32 = *(_QWORD *)(v64 + 8 * v33);
        if (!v32)
          break;
      }
    }
LABEL_21:
    v69 = (v32 - 1) & v32;
    v70 = v33;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_22:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v67 + 72) * v30, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C20((uint64_t)&v24[*(int *)(v21 + 72)], (uint64_t)v12, &qword_254333218);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v12, 1, v79) == 1)
    {
      sub_23E1E7C64((uint64_t)v12, &qword_254333218);
      goto LABEL_5;
    }
    v66 = v30;
    sub_23E1E2FDC((uint64_t)v12, v81, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v35 = *(_QWORD *)(a4 + 16);
    if (!v35)
    {
LABEL_41:
      sub_23E1E2FA0(v81, type metadata accessor for StaticAccessory.DeviceIdentifier);
      result = sub_23E1E2FA0((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      *(unint64_t *)((char *)v57 + ((v66 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v66;
      v21 = v62;
      v54 = __OFADD__(v63++, 1);
      v29 = v69;
      v25 = v70;
      if (!v54)
        continue;
      goto LABEL_48;
    }
    v36 = v68;
    v37 = a4 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
    swift_bridgeObjectRetain();
    v80 = *(_QWORD *)(v36 + 72);
    v38 = v74;
    v39 = (uint64_t)v78;
    while (1)
    {
      sub_23E1E2F50(v37, (uint64_t)v19, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v40 = &v9[*(int *)(v38 + 48)];
      sub_23E1E2F50((uint64_t)v19, (uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_23E1E2F50(v81, (uint64_t)v40, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      sub_23E1E2F50((uint64_t)v9, v39, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v41 = v39;
        v42 = v76;
        v43 = v77;
        v44 = v73;
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v73, v40, v77);
        v45 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v46 = *(void (**)(char *, uint64_t))(v42 + 8);
        v47 = v44;
        v38 = v74;
        v46(v47, v43);
        v48 = v41;
        v19 = v71;
        v9 = v72;
        v46((char *)v48, v43);
        if ((v45 & 1) != 0)
          goto LABEL_45;
LABEL_38:
        sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v39 = (uint64_t)v78;
        goto LABEL_27;
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v39, v77);
LABEL_26:
      sub_23E1E7C64((uint64_t)v9, &qword_254333228);
LABEL_27:
      sub_23E1E2FA0((uint64_t)v19, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v37 += v80;
      if (!--v35)
      {
        a4 = v60;
        swift_bridgeObjectRelease();
        a3 = v61;
        v12 = v59;
        v24 = v58;
        goto LABEL_41;
      }
    }
    v49 = v75;
    sub_23E1E2F50((uint64_t)v9, (uint64_t)v75, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v50 = *v49;
    v51 = v49[1];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v39 = (uint64_t)v78;
      goto LABEL_26;
    }
    if (v50 != *(_QWORD *)v40 || v51 != *((_QWORD *)v40 + 1))
    {
      v53 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
        goto LABEL_45;
      goto LABEL_38;
    }
    swift_bridgeObjectRelease_n();
LABEL_45:
    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2FA0((uint64_t)v19, type metadata accessor for StaticAccessory.DeviceIdentifier);
    a4 = v60;
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v81, type metadata accessor for StaticAccessory.DeviceIdentifier);
    a3 = v61;
    v21 = v62;
    v12 = v59;
    v24 = v58;
LABEL_5:
    result = sub_23E1E2FA0((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v29 = v69;
    v25 = v70;
  }
  v34 = v25 + 4;
  if (v25 + 4 >= v65)
  {
LABEL_46:
    swift_retain();
    return sub_23E525A10(v57, v56, v63, a3);
  }
  v32 = *(_QWORD *)(v64 + 8 * v34);
  if (v32)
  {
    v33 = v25 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v65)
      goto LABEL_46;
    v32 = *(_QWORD *)(v64 + 8 * v33);
    ++v34;
    if (v32)
      goto LABEL_21;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_23E3DA3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E3D9D1C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E3D9D1C((unint64_t *)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x24264FEBC](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23E3DA5C4()
{
  return sub_23E1EE1C4(&qword_256D459A0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
}

uint64_t sub_23E3DA5F0()
{
  return sub_23E1EE1C4(&qword_256D459A8, type metadata accessor for RoomType, (uint64_t)&protocol conformance descriptor for RoomType);
}

char *initializeBufferWithCopyOfBuffer for StaticRoom(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v32(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = &a1[v8];
    v11 = (uint64_t *)&a2[v8];
    v12 = *v11;
    v13 = v11[1];
    LOBYTE(v11) = a2[v9];
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    a1[v9] = (char)v11;
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = type metadata accessor for StaticZone();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    if (v19(v16, 1, v17))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v32(v15, v16, v7);
      v22 = *(int *)(v17 + 20);
      v23 = &v15[v22];
      v24 = &v16[v22];
      v25 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v25;
      *(_QWORD *)&v15[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
      v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v15, 0, 1, v17);
    }
    v32(&a1[a3[8]], &a2[a3[8]], v7);
    v27 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
    *(_QWORD *)&a1[v27] = *(_QWORD *)&a2[v27];
    v28 = a3[12];
    *(_QWORD *)&a1[a3[11]] = *(_QWORD *)&a2[a3[11]];
    *(_QWORD *)&a1[v28] = *(_QWORD *)&a2[v28];
    v29 = a3[14];
    *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
    *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];
    v30 = a3[16];
    *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
    *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
    *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v31 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v32 = v6;
  v31(a1, a2);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v11 = a3[7];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for StaticZone();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v26 = (void (*)(uint64_t, uint64_t, uint64_t))v31;
      v20 = v32;
      ((void (*)(char *, char *, uint64_t))v31)(v12, v13, v32);
      v28 = *(int *)(v14 + 20);
      v29 = &v12[v28];
      v30 = &v13[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v12[*(int *)(v14 + 24)] = *(_QWORD *)&v13[*(int *)(v14 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    v20 = v32;
    goto LABEL_7;
  }
  v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v20 = v32;
  v19(v12, v13, v32);
  v21 = *(int *)(v14 + 20);
  v22 = &v12[v21];
  v23 = &v13[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  *(_QWORD *)&v12[*(int *)(v14 + 24)] = *(_QWORD *)&v13[*(int *)(v14 + 24)];
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v12, 0, 1, v14);
LABEL_7:
  v26 = (void (*)(uint64_t, uint64_t, uint64_t))v31;
LABEL_8:
  v26(a1 + a3[8], a2 + a3[8], v20);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[7];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for StaticZone();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v12 + 20)] = *(_OWORD *)&v11[*(int *)(v12 + 20)];
    *(_QWORD *)&v10[*(int *)(v12 + 24)] = *(_QWORD *)&v11[*(int *)(v12 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v7(a1 + a3[8], a2 + a3[8], v6);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v30 = *(void (**)(uint64_t, uint64_t))(v7 + 40);
  v31 = v6;
  v30(a1, a2);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for StaticZone();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v23 = (void (*)(uint64_t, uint64_t, uint64_t))v30;
      v21 = v31;
      ((void (*)(char *, char *, uint64_t))v30)(v14, v15, v31);
      v25 = *(int *)(v16 + 20);
      v26 = &v14[v25];
      v27 = &v15[v25];
      v29 = *(_QWORD *)v27;
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    v21 = v31;
    goto LABEL_7;
  }
  v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v31);
  *(_OWORD *)&v14[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
  *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v23 = (void (*)(uint64_t, uint64_t, uint64_t))v30;
LABEL_8:
  v23(a1 + a3[8], a2 + a3[8], v21);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticRoom()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3DAF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticRoom()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3DB028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E3DB0D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254332DE0)
  {
    type metadata accessor for StaticZone();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254332DE0);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RoomType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  void (*v28)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD, uint64_t, int *);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for StaticRoom(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v29 = v8;
      v10 = sub_23E536F80();
      v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v28(a1, a2, v10);
      v11 = v7[5];
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)((char *)a2 + v11);
      v14 = v13[1];
      *v12 = *v13;
      v12[1] = v14;
      *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
      v15 = v7[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for StaticZone();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      if (v20(v17, 1, v18))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v28((uint64_t *)v16, (uint64_t *)v17, v10);
        v22 = *(int *)(v18 + 20);
        v23 = &v16[v22];
        v24 = &v17[v22];
        v25 = *((_QWORD *)v24 + 1);
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v25;
        *(_QWORD *)&v16[*(int *)(v18 + 24)] = *(_QWORD *)&v17[*(int *)(v18 + 24)];
        v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26(v16, 0, 1, v18);
      }
      v28((uint64_t *)((char *)a1 + v7[8]), (uint64_t *)((char *)a2 + v7[8]), v10);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      *(uint64_t *)((char *)a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      *(uint64_t *)((char *)a1 + v7[14]) = *(uint64_t *)((char *)a2 + v7[14]);
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      *(uint64_t *)((char *)a1 + v7[16]) = *(uint64_t *)((char *)a2 + v7[16]);
      *(uint64_t *)((char *)a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
      v30 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v29 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t destroy for RoomType(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for StaticRoom(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23E536F80();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    swift_bridgeObjectRelease();
    v6 = a1 + *(int *)(v2 + 28);
    v7 = type metadata accessor for StaticZone();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      v5(v6, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v5(a1 + *(int *)(v2 + 32), v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for RoomType(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, int *);

  v6 = (int *)type metadata accessor for StaticRoom(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v27 = v7;
    v8 = sub_23E536F80();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v26(a1, a2, v8);
    v9 = v6[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    a1[v6[6]] = a2[v6[6]];
    v13 = v6[7];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = type metadata accessor for StaticZone();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v26(v14, v15, v8);
      v20 = *(int *)(v16 + 20);
      v21 = &v14[v20];
      v22 = &v15[v20];
      v23 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v23;
      *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
      v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(v14, 0, 1, v16);
    }
    v26(&a1[v6[8]], &a2[v6[8]], v8);
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
    *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
    *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
    *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
    *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
    *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
    v28 = *(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(a1, 0, 4, v6);
  }
  return a1;
}

_BYTE *assignWithCopy for RoomType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(_BYTE *, _BYTE *);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_BYTE *, _QWORD, uint64_t, int *);

  v6 = (int *)type metadata accessor for StaticRoom(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticRoom);
      goto LABEL_7;
    }
    v22 = sub_23E536F80();
    v23 = *(_QWORD *)(v22 - 8);
    v52 = *(void (**)(_BYTE *, _BYTE *))(v23 + 24);
    v54 = v22;
    v52(a1, a2);
    v24 = v6[5];
    v25 = &a1[v24];
    v26 = &a2[v24];
    *v25 = *v26;
    v25[1] = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[v6[6]] = a2[v6[6]];
    v27 = v6[7];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = type metadata accessor for StaticZone();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
        v36 = v54;
        v35(v28, v29, v54);
        v37 = *(int *)(v30 + 20);
        v38 = &v28[v37];
        v39 = &v29[v37];
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
        *(_QWORD *)&v28[*(int *)(v30 + 24)] = *(_QWORD *)&v29[*(int *)(v30 + 24)];
        v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v28, 0, 1, v30);
LABEL_16:
        v46 = (void (*)(_BYTE *, _BYTE *, uint64_t))v52;
LABEL_17:
        v46(&a1[v6[8]], &a2[v6[8]], v36);
        *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v34)
      {
        v46 = (void (*)(_BYTE *, _BYTE *, uint64_t))v52;
        v36 = v54;
        ((void (*)(char *, char *, uint64_t))v52)(v28, v29, v54);
        v48 = *(int *)(v30 + 20);
        v49 = &v28[v48];
        v50 = &v29[v48];
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v28[*(int *)(v30 + 24)] = *(_QWORD *)&v29[*(int *)(v30 + 24)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_23E1E2FA0((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    v36 = v54;
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v53 = v7;
  v11 = sub_23E536F80();
  v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v51(a1, a2, v11);
  v12 = v6[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  v13[1] = v14[1];
  a1[v6[6]] = a2[v6[6]];
  v15 = v6[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for StaticZone();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v51(v16, v17, v11);
    v41 = *(int *)(v18 + 20);
    v42 = &v16[v41];
    v43 = &v17[v41];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    *(_QWORD *)&v16[*(int *)(v18 + 24)] = *(_QWORD *)&v17[*(int *)(v18 + 24)];
    v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44(v16, 0, 1, v18);
  }
  v51(&a1[v6[8]], &a2[v6[8]], v11);
  *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
  *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
  *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
  *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
  v55 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v53 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55(a1, 0, 4, v6);
  return a1;
}

char *initializeWithTake for RoomType(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = (int *)type metadata accessor for StaticRoom(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23E536F80();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    v10 = v6[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for StaticZone();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v8);
      *(_OWORD *)&v11[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
      *(_QWORD *)&v11[*(int *)(v13 + 24)] = *(_QWORD *)&v12[*(int *)(v13 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v9(&a1[v6[8]], &a2[v6[8]], v8);
    *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
    *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
    *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
    *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
    *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
    *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
    *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

_BYTE *assignWithTake for RoomType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _BYTE *);
  uint64_t v44;

  v6 = (int *)type metadata accessor for StaticRoom(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticRoom);
      goto LABEL_7;
    }
    v19 = sub_23E536F80();
    v20 = *(_QWORD *)(v19 - 8);
    v43 = *(void (**)(_BYTE *, _BYTE *))(v20 + 40);
    v44 = v19;
    v43(a1, a2);
    v21 = v6[5];
    v22 = &a1[v21];
    v23 = (uint64_t *)&a2[v21];
    v25 = *v23;
    v24 = v23[1];
    *v22 = v25;
    v22[1] = v24;
    swift_bridgeObjectRelease();
    a1[v6[6]] = a2[v6[6]];
    v26 = v6[7];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = type metadata accessor for StaticZone();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        v34 = v44;
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v28, v44);
        *(_OWORD *)&v27[*(int *)(v29 + 20)] = *(_OWORD *)&v28[*(int *)(v29 + 20)];
        *(_QWORD *)&v27[*(int *)(v29 + 24)] = *(_QWORD *)&v28[*(int *)(v29 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_16:
        v36 = (void (*)(_BYTE *, _BYTE *, uint64_t))v43;
LABEL_17:
        v36(&a1[v6[8]], &a2[v6[8]], v34);
        *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v33)
      {
        v36 = (void (*)(_BYTE *, _BYTE *, uint64_t))v43;
        v34 = v44;
        ((void (*)(char *, char *, uint64_t))v43)(v27, v28, v44);
        v38 = *(int *)(v29 + 20);
        v39 = &v27[v38];
        v40 = &v28[v38];
        v42 = *(_QWORD *)v40;
        v41 = *((_QWORD *)v40 + 1);
        *(_QWORD *)v39 = v42;
        *((_QWORD *)v39 + 1) = v41;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v27[*(int *)(v29 + 24)] = *(_QWORD *)&v28[*(int *)(v29 + 24)];
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v34 = v44;
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23E536F80();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(a1, a2, v11);
  *(_OWORD *)&a1[v6[5]] = *(_OWORD *)&a2[v6[5]];
  a1[v6[6]] = a2[v6[6]];
  v13 = v6[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for StaticZone();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    *(_OWORD *)&v14[*(int *)(v16 + 20)] = *(_OWORD *)&v15[*(int *)(v16 + 20)];
    *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v12(&a1[v6[8]], &a2[v6[8]], v11);
  *(_QWORD *)&a1[v6[9]] = *(_QWORD *)&a2[v6[9]];
  *(_QWORD *)&a1[v6[10]] = *(_QWORD *)&a2[v6[10]];
  *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
  *(_QWORD *)&a1[v6[12]] = *(_QWORD *)&a2[v6[12]];
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  *(_QWORD *)&a1[v6[14]] = *(_QWORD *)&a2[v6[14]];
  *(_QWORD *)&a1[v6[15]] = *(_QWORD *)&a2[v6[15]];
  *(_QWORD *)&a1[v6[16]] = *(_QWORD *)&a2[v6[16]];
  *(_QWORD *)&a1[v6[17]] = *(_QWORD *)&a2[v6[17]];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3DC398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for StaticRoom(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RoomType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3DC3F0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = type metadata accessor for StaticRoom(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23E3DC444(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticRoom(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_23E3DC47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticRoom(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t sub_23E3DC4BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StaticRoom(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticRoom.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticRoom.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_23E3DC5EC + 4 * byte_23E54C929[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_23E3DC620 + 4 * byte_23E54C924[v4]))();
}

uint64_t sub_23E3DC620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3DC628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3DC630);
  return result;
}

uint64_t sub_23E3DC63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3DC644);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_23E3DC648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3DC650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticRoom.CodingKeys()
{
  return &type metadata for StaticRoom.CodingKeys;
}

unint64_t sub_23E3DC670()
{
  unint64_t result;

  result = qword_256D45A30;
  if (!qword_256D45A30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CC84, &type metadata for StaticRoom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A30);
  }
  return result;
}

unint64_t sub_23E3DC6B8()
{
  unint64_t result;

  result = qword_256D45A38;
  if (!qword_256D45A38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CBF4, &type metadata for StaticRoom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A38);
  }
  return result;
}

unint64_t sub_23E3DC700()
{
  unint64_t result;

  result = qword_256D45A40;
  if (!qword_256D45A40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CC1C, &type metadata for StaticRoom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A40);
  }
  return result;
}

uint64_t sub_23E3DC744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3DC788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E3D459C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23E3DC7A0()
{
  type metadata accessor for StaticMediaSystemComponent();
  type metadata accessor for StaticMediaProfile();
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1;
}

uint64_t StaticDeviceMetadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticDeviceMetadata.manufacturer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.serialNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.firmwareVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticDeviceMetadata.isMatter.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 36));
}

uint64_t StaticDeviceMetadata.isCertified.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 40));
}

uint64_t StaticDeviceMetadata.isMFICertifiedACWG.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticDeviceMetadata() + 44));
}

uint64_t StaticDeviceMetadata.hash(into:)()
{
  uint64_t v0;
  int *v1;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = (int *)type metadata accessor for StaticDeviceMetadata();
  if (*(_QWORD *)(v0 + v1[5] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  if (*(_QWORD *)(v0 + v1[6] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  if (*(_QWORD *)(v0 + v1[7] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  if (*(_QWORD *)(v0 + v1[8] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E538474();
  sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E3DCB64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3DCB8C + 4 * byte_23E54CD00[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E3DCB8C()
{
  return 0x74636166756E616DLL;
}

uint64_t sub_23E3DCBAC()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_23E3DCBC0()
{
  return 0x754E6C6169726573;
}

uint64_t sub_23E3DCBE0()
{
  return 0x657261776D726966;
}

uint64_t sub_23E3DCC04()
{
  return 0x72657474614D7369;
}

uint64_t sub_23E3DCC1C()
{
  return 0x6669747265437369;
}

unint64_t sub_23E3DCC3C()
{
  return 0xD000000000000012;
}

uint64_t sub_23E3DCC58()
{
  unsigned __int8 *v0;

  return sub_23E3DCB64(*v0);
}

uint64_t sub_23E3DCC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3DE0AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E3DCC84(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_23E3DCC90()
{
  sub_23E3DD96C();
  return sub_23E538570();
}

uint64_t sub_23E3DCCB8()
{
  sub_23E3DD96C();
  return sub_23E53857C();
}

uint64_t StaticDeviceMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45A50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3DD96C();
  sub_23E5384EC();
  v8[15] = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v1)
  {
    type metadata accessor for StaticDeviceMetadata();
    v8[14] = 1;
    sub_23E5381EC();
    v8[13] = 2;
    sub_23E5381EC();
    v8[12] = 3;
    sub_23E5381EC();
    v8[11] = 4;
    sub_23E5381EC();
    v8[10] = 5;
    sub_23E53827C();
    v8[9] = 6;
    sub_23E53827C();
    v8[8] = 7;
    sub_23E53827C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticDeviceMetadata.hashValue.getter()
{
  sub_23E53845C();
  StaticDeviceMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticDeviceMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v32 = a2;
  v4 = sub_23E536F80();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45A60);
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for StaticDeviceMetadata();
  MEMORY[0x24BDAC7A8](v35);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23E3DD96C();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  v13 = v7;
  v44 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v11, v6, v4);
  v43 = 1;
  v14 = sub_23E5380D8();
  v15 = (int *)v35;
  v16 = (uint64_t *)&v11[*(int *)(v35 + 20)];
  *v16 = v14;
  v16[1] = v17;
  v42 = 2;
  v18 = sub_23E5380D8();
  v19 = (uint64_t)v36;
  v20 = (uint64_t *)&v11[v15[6]];
  *v20 = v18;
  v20[1] = v21;
  v41 = 3;
  v22 = sub_23E5380D8();
  v23 = (uint64_t *)&v11[v15[7]];
  *v23 = v22;
  v23[1] = v24;
  v40 = 4;
  v25 = sub_23E5380D8();
  v26 = (uint64_t *)&v11[v15[8]];
  *v26 = v25;
  v26[1] = v27;
  v39 = 5;
  v11[v15[9]] = sub_23E538150() & 1;
  v38 = 6;
  v11[v15[10]] = sub_23E538150() & 1;
  v37 = 7;
  v28 = v33;
  v29 = sub_23E538150();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v28);
  v11[*(int *)(v35 + 44)] = v29 & 1;
  sub_23E3DD9B0((uint64_t)v11, v32);
  __swift_destroy_boxed_opaque_existential_0(v19);
  return sub_23E3DD9F4((uint64_t)v11);
}

uint64_t sub_23E3DD454()
{
  sub_23E53845C();
  StaticDeviceMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E3DD494()
{
  sub_23E53845C();
  StaticDeviceMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E3DD4CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticDeviceMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E3DD4E0(_QWORD *a1)
{
  return StaticDeviceMetadata.encode(to:)(a1);
}

uint64_t StaticDeviceMetadata.copyReplacing(id:manufacturer:model:serialNumber:firmwareVersion:isMatter:isCertified:isMFICertifiedACWG:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v14 = v13;
  v85 = a8;
  v86 = a2;
  v78 = a5;
  v79 = a7;
  v87 = a4;
  v88 = a6;
  v73 = a3;
  v80 = a1;
  v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v84 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v83 = (char *)&v73 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v82 = (uint64_t)&v73 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v81 = (uint64_t)&v73 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v74 = (char *)&v73 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v73 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v73 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v73 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v73 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23E536F80();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v73 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1FC2F8(v80, (uint64_t)v37);
  sub_23E3DD9B0(v14, (uint64_t)v34);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
  v76 = v39;
  v77 = v38;
  v75 = v41;
  if (v42 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v41, v34, v38);
    sub_23E3DD9F4((uint64_t)v34);
    sub_23E273104((uint64_t)v37);
  }
  else
  {
    sub_23E3DD9F4((uint64_t)v34);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v37, v38);
  }
  v44 = v78;
  v43 = v79;
  v45 = v73;
  v46 = (uint64_t)v74;
  sub_23E3DD9B0(v14, (uint64_t)v32);
  v47 = v45;
  if (!v45)
  {
    v86 = *(_QWORD *)&v32[v16[5]];
    v47 = swift_bridgeObjectRetain();
  }
  v80 = v47;
  swift_bridgeObjectRetain();
  sub_23E3DD9F4((uint64_t)v32);
  sub_23E3DD9B0(v14, (uint64_t)v29);
  v48 = v44;
  if (!v44)
  {
    v87 = *(_QWORD *)&v29[v16[6]];
    v48 = swift_bridgeObjectRetain();
  }
  v79 = v48;
  swift_bridgeObjectRetain();
  sub_23E3DD9F4((uint64_t)v29);
  sub_23E3DD9B0(v14, v46);
  v49 = v43;
  v50 = (uint64_t)v83;
  if (!v43)
  {
    v88 = *(_QWORD *)(v46 + v16[7]);
    v49 = swift_bridgeObjectRetain();
  }
  v78 = v49;
  swift_bridgeObjectRetain();
  sub_23E3DD9F4(v46);
  v51 = v81;
  sub_23E3DD9B0(v14, v81);
  v52 = a10;
  if (!a10)
  {
    v53 = (uint64_t *)(v51 + v16[8]);
    v52 = v53[1];
    v85 = *v53;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E3DD9F4(v51);
  v54 = v82;
  sub_23E3DD9B0(v14, v82);
  if (a11 == 2)
    v55 = *(_BYTE *)(v54 + v16[9]);
  else
    v55 = a11 & 1;
  v56 = v54;
  v57 = v75;
  sub_23E3DD9F4(v56);
  sub_23E3DD9B0(v14, v50);
  if (a12 == 2)
    v58 = *(_BYTE *)(v50 + v16[10]);
  else
    v58 = a12 & 1;
  sub_23E3DD9F4(v50);
  v59 = v84;
  sub_23E3DD9B0(v14, v84);
  if (a13 == 2)
    v60 = *(_BYTE *)(v59 + v16[11]);
  else
    v60 = a13 & 1;
  v61 = v85;
  v62 = v59;
  v64 = v76;
  v63 = v77;
  sub_23E3DD9F4(v62);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(a9, v57, v63);
  v66 = (_QWORD *)(a9 + v16[5]);
  v67 = v80;
  *v66 = v86;
  v66[1] = v67;
  v68 = (_QWORD *)(a9 + v16[6]);
  v69 = v79;
  *v68 = v87;
  v68[1] = v69;
  v70 = (_QWORD *)(a9 + v16[7]);
  v71 = v78;
  *v70 = v88;
  v70[1] = v71;
  v72 = (_QWORD *)(a9 + v16[8]);
  *v72 = v61;
  v72[1] = v52;
  *(_BYTE *)(a9 + v16[9]) = v55;
  *(_BYTE *)(a9 + v16[10]) = v58;
  *(_BYTE *)(a9 + v16[11]) = v60;
  return result;
}

unint64_t sub_23E3DD96C()
{
  unint64_t result;

  result = qword_256D45A58;
  if (!qword_256D45A58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CF5C, &type metadata for StaticDeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A58);
  }
  return result;
}

uint64_t sub_23E3DD9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3DD9F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E3DDA30()
{
  return sub_23E1EE1C4(&qword_256D45A68, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticDeviceMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (_QWORD *)((char *)a1 + v16);
    v19 = (_QWORD *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (_QWORD *)((char *)a1 + v17);
    v22 = (_QWORD *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_23E3DDE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23E3DDE8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticDeviceMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E3DDF54 + 4 * byte_23E54CD0D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E3DDF88 + 4 * byte_23E54CD08[v4]))();
}

uint64_t sub_23E3DDF88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3DDF90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3DDF98);
  return result;
}

uint64_t sub_23E3DDFA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3DDFACLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E3DDFB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3DDFB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticDeviceMetadata.CodingKeys()
{
  return &type metadata for StaticDeviceMetadata.CodingKeys;
}

unint64_t sub_23E3DDFD8()
{
  unint64_t result;

  result = qword_256D45A70;
  if (!qword_256D45A70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CF34, &type metadata for StaticDeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A70);
  }
  return result;
}

unint64_t sub_23E3DE020()
{
  unint64_t result;

  result = qword_256D45A78;
  if (!qword_256D45A78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CEA4, &type metadata for StaticDeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A78);
  }
  return result;
}

unint64_t sub_23E3DE068()
{
  unint64_t result;

  result = qword_256D45A80;
  if (!qword_256D45A80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54CECC, &type metadata for StaticDeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A80);
  }
  return result;
}

uint64_t sub_23E3DE0AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74636166756E616DLL && a2 == 0xEC00000072657275 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72657474614D7369 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6669747265437369 && a2 == 0xEB00000000646569 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E569630)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t AnyTileInfoBearer.StorageBase.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1FF9C8(v1 + 16, a1);
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV11StorageBaseCfd_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return v0;
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV11StorageBaseCfD_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_23E3DE488(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[19];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D18);
  v17[17] = *(_QWORD *)(v3 - 8);
  v17[18] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[16] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D20);
  v17[14] = *(_QWORD *)(v5 - 8);
  v17[15] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[13] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D28);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D30);
  v17[8] = *(_QWORD *)(v9 - 8);
  v17[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[7] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D38);
  v17[5] = *(_QWORD *)(v11 - 8);
  v17[6] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[4] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D40);
  v17[2] = *(_QWORD *)(v13 - 8);
  v17[3] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v17[1] = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D48);
  MEMORY[0x24BDAC7A8](v17[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D50);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45D58);
  v19 = *(_QWORD *)(v16 - 8);
  v20 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3E3528();
  sub_23E5384EC();
  __asm { BR              X10 }
}

uint64_t sub_23E3DE748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_23E3E3748();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t sub_23E3DE994()
{
  sub_23E3E3748();
  return sub_23E538570();
}

uint64_t sub_23E3DE9BC()
{
  sub_23E3E3748();
  return sub_23E53857C();
}

uint64_t sub_23E3DE9E4()
{
  sub_23E3E3638();
  return sub_23E538570();
}

uint64_t sub_23E3DEA0C()
{
  sub_23E3E3638();
  return sub_23E53857C();
}

uint64_t sub_23E3DEA34()
{
  sub_23E3E367C();
  return sub_23E538570();
}

uint64_t sub_23E3DEA5C()
{
  sub_23E3E367C();
  return sub_23E53857C();
}

uint64_t sub_23E3DEA84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3DEABC + 4 * byte_23E54CFB8[*v0]))(0x726F737365636361, 0xE900000000000079);
}

uint64_t sub_23E3DEABC()
{
  return 0x65636976726573;
}

uint64_t sub_23E3DEAD4()
{
  return 0x4765636976726573;
}

uint64_t sub_23E3DEAF4()
{
  return 0x72506172656D6163;
}

uint64_t sub_23E3DEB18()
{
  return 0x65536E6F69746361;
}

uint64_t sub_23E3DEB34()
{
  return 0x737953616964656DLL;
}

uint64_t sub_23E3DEB54()
{
  return 0x6F7250616964656DLL;
}

uint64_t sub_23E3DEB74()
{
  return 0x634172657474616DLL;
}

uint64_t sub_23E3DEB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3E2978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3DEBBC()
{
  sub_23E3E3528();
  return sub_23E538570();
}

uint64_t sub_23E3DEBE4()
{
  sub_23E3E3528();
  return sub_23E53857C();
}

uint64_t sub_23E3DEC0C()
{
  sub_23E3E356C();
  return sub_23E538570();
}

uint64_t sub_23E3DEC34()
{
  sub_23E3E356C();
  return sub_23E53857C();
}

uint64_t sub_23E3DEC5C()
{
  sub_23E3E35B0();
  return sub_23E538570();
}

uint64_t sub_23E3DEC84()
{
  sub_23E3E35B0();
  return sub_23E53857C();
}

uint64_t sub_23E3DECAC()
{
  sub_23E3E35F4();
  return sub_23E538570();
}

uint64_t sub_23E3DECD4()
{
  sub_23E3E35F4();
  return sub_23E53857C();
}

uint64_t sub_23E3DECFC()
{
  sub_23E3E3704();
  return sub_23E538570();
}

uint64_t sub_23E3DED24()
{
  sub_23E3E3704();
  return sub_23E53857C();
}

uint64_t sub_23E3DED4C()
{
  sub_23E3E36C0();
  return sub_23E538570();
}

uint64_t sub_23E3DED74()
{
  sub_23E3E36C0();
  return sub_23E53857C();
}

uint64_t sub_23E3DED9C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23E3E2D64(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23E3DEDC4(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_23E3DE488(a1, *v1);
}

uint64_t sub_23E3DEDDC()
{
  return 0x6F666E49656C6974;
}

uint64_t sub_23E3DEE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3E3428(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3DEE30()
{
  sub_23E3E2354();
  return sub_23E538570();
}

uint64_t sub_23E3DEE58()
{
  sub_23E3E2354();
  return sub_23E53857C();
}

uint64_t AnyTileInfoBearer.tileInfo.getter()
{
  return swift_retain();
}

double AnyTileInfoBearer.init<A>(erasing:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double result;
  __int128 v12;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  AnyTileInfoBearer.init<A>(_:)((uint64_t)v10, a2, a3, (uint64_t **)&v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  result = *(double *)&v12;
  *a4 = v12;
  return result;
}

uint64_t AnyTileInfoBearer.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  ValueMetadata *v12;
  uint64_t result;
  uint64_t *v14;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v11 = v14;
    v12 = &type metadata for AnyTileInfoBearer;
  }
  else
  {
    type metadata accessor for AnyTileInfoBearer.TileStorage(0, a2, a3, v10);
    swift_allocObject();
    v11 = sub_23E3E22BC(a1);
    v12 = (ValueMetadata *)a2;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  *a4 = v11;
  a4[1] = &v12->Kind;
  return result;
}

uint64_t type metadata accessor for AnyTileInfoBearer.TileStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyTileInfoBearer.TileStorage);
}

uint64_t AnyTileInfoBearer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[11];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;

  v50 = a2;
  v36 = type metadata accessor for StaticMatterDevice();
  v3 = MEMORY[0x24BDAC7A8](v36);
  v35[9] = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)v35 - v5;
  v46 = type metadata accessor for StaticMediaProfile();
  v6 = MEMORY[0x24BDAC7A8](v46);
  v35[8] = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v35 - v8;
  v45 = type metadata accessor for StaticMediaSystem();
  v9 = MEMORY[0x24BDAC7A8](v45);
  v35[7] = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)v35 - v11;
  v43 = type metadata accessor for StaticActionSet();
  v12 = MEMORY[0x24BDAC7A8](v43);
  v35[6] = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)v35 - v14;
  v41 = type metadata accessor for StaticCameraProfile();
  v15 = MEMORY[0x24BDAC7A8](v41);
  v35[5] = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v40 = (char *)v35 - v17;
  v39 = type metadata accessor for StaticServiceGroup();
  v18 = MEMORY[0x24BDAC7A8](v39);
  v35[4] = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)v35 - v20;
  v37 = type metadata accessor for StaticService();
  v21 = MEMORY[0x24BDAC7A8](v37);
  v47 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v35[10] = (char *)v35 - v23;
  v24 = type metadata accessor for StaticAccessory(0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v35 - v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45A88);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_23E3E2354();
  v33 = v52;
  sub_23E5384E0();
  if (!v33)
  {
    v35[2] = v29;
    v35[1] = v27;
    v35[3] = v24;
    v52 = v31;
    v53 = 1;
    sub_23E3E2398();
    sub_23E538180();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
}

uint64_t AnyTileInfoBearer.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t (*v40)(_QWORD);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t (*v54)();
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  _BYTE v97[48];
  char v98;

  v2 = v1;
  v75 = type metadata accessor for StaticMatterDevice();
  v4 = MEMORY[0x24BDAC7A8](v75);
  v72 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v71 - v6;
  v78 = type metadata accessor for StaticMediaProfile();
  v7 = MEMORY[0x24BDAC7A8](v78);
  v74 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v76 = (char *)&v71 - v9;
  v81 = type metadata accessor for StaticMediaSystem();
  v10 = MEMORY[0x24BDAC7A8](v81);
  v77 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v79 = (char *)&v71 - v12;
  v84 = type metadata accessor for StaticActionSet();
  v13 = MEMORY[0x24BDAC7A8](v84);
  v80 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)&v71 - v15;
  v87 = type metadata accessor for StaticCameraProfile();
  v16 = MEMORY[0x24BDAC7A8](v87);
  v83 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v85 = (char *)&v71 - v18;
  v90 = type metadata accessor for StaticServiceGroup();
  v19 = MEMORY[0x24BDAC7A8](v90);
  v86 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v88 = (char *)&v71 - v21;
  v22 = type metadata accessor for StaticService();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v89 = (uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v91 = (char *)&v71 - v25;
  v26 = type metadata accessor for StaticAccessory(0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v92 = (uint64_t)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v71 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45AE0);
  v93 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v71 = sub_23E3E2354();
  sub_23E5384EC();
  v35 = v34;
  v36 = (_QWORD *)(v34 + 16);
  sub_23E1FF9C8((uint64_t)v36, (uint64_t)v97);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  if (!swift_dynamicCast())
  {
    v42 = v94;
    v43 = (uint64_t)v91;
    if (swift_dynamicCast())
    {
      v44 = v89;
      sub_23E1E2FDC(v43, v89, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v95) = 1;
      v98 = 1;
      sub_23E3E23DC();
      v38 = v33;
      sub_23E5382AC();
      if (v42)
      {
        v40 = (uint64_t (*)(_QWORD))type metadata accessor for StaticService;
        v41 = v44;
        goto LABEL_18;
      }
      LOBYTE(v95) = 0;
      v50 = (uint64_t (*)(_QWORD))type metadata accessor for StaticService;
      sub_23E1EE1C4(&qword_256D40DD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
      sub_23E5382AC();
      v41 = v44;
LABEL_17:
      v40 = v50;
      goto LABEL_18;
    }
    v45 = (uint64_t)v88;
    v46 = v31;
    if (swift_dynamicCast())
    {
      v47 = v86;
      sub_23E1E2FDC(v45, v86, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      LOBYTE(v95) = 2;
      v98 = 1;
      sub_23E3E23DC();
      sub_23E5382AC();
      if (!v42)
      {
        LOBYTE(v95) = 0;
        sub_23E1EE1C4(&qword_256D40DB8, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
        sub_23E5382AC();
      }
      sub_23E1E2FA0(v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v48 = *(void (**)(char *, uint64_t))(v93 + 8);
      v49 = v33;
      goto LABEL_37;
    }
    v51 = (uint64_t)v85;
    v52 = v33;
    if (swift_dynamicCast())
    {
      v53 = v83;
      sub_23E1E2FDC(v51, v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      LOBYTE(v95) = 3;
      v98 = 1;
      sub_23E3E23DC();
      sub_23E5382AC();
      if (!v42)
      {
        LOBYTE(v95) = 0;
        sub_23E1EE1C4(&qword_256D40D60, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
        sub_23E5382AC();
      }
      v54 = type metadata accessor for StaticCameraProfile;
      v55 = v53;
    }
    else
    {
      v56 = (uint64_t)v82;
      if (swift_dynamicCast())
      {
        v57 = v80;
        sub_23E1E2FDC(v56, v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
        LOBYTE(v95) = 4;
        v98 = 1;
        sub_23E3E23DC();
        sub_23E5382AC();
        if (!v42)
        {
          LOBYTE(v95) = 0;
          sub_23E1EE1C4(&qword_256D40D48, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
          sub_23E5382AC();
        }
        v54 = type metadata accessor for StaticActionSet;
      }
      else
      {
        v58 = (uint64_t)v79;
        if (swift_dynamicCast())
        {
          v57 = v77;
          sub_23E1E2FDC(v58, v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
          LOBYTE(v95) = 5;
          v98 = 1;
          sub_23E3E23DC();
          sub_23E5382AC();
          if (!v42)
          {
            LOBYTE(v95) = 0;
            sub_23E1EE1C4(&qword_256D40D78, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
            sub_23E5382AC();
          }
          v54 = type metadata accessor for StaticMediaSystem;
        }
        else
        {
          v59 = (uint64_t)v76;
          if (swift_dynamicCast())
          {
            v57 = v74;
            sub_23E1E2FDC(v59, v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
            LOBYTE(v95) = 6;
            v98 = 1;
            sub_23E3E23DC();
            sub_23E5382AC();
            if (!v42)
            {
              LOBYTE(v95) = 0;
              sub_23E1EE1C4(&qword_256D3FA90, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
              sub_23E5382AC();
            }
            v54 = type metadata accessor for StaticMediaProfile;
          }
          else
          {
            v60 = (uint64_t)v73;
            if (!swift_dynamicCast())
            {
              v62 = sub_23E537EEC();
              swift_allocError();
              v64 = v63;
              v92 = (uint64_t)v63 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D45AE8) + 48);
              v65 = *(_QWORD *)(v35 + 40);
              v66 = __swift_project_boxed_opaque_existential_1(v36, v65);
              v94 = v52;
              v67 = v66;
              v64[3] = v65;
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
              (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(boxed_opaque_existential_1, v67, v65);
              __swift_instantiateConcreteTypeFromMangledName(&qword_256D45AF0);
              v69 = swift_allocObject();
              *(_OWORD *)(v69 + 16) = xmmword_23E539650;
              v70 = v71;
              *(_QWORD *)(v69 + 56) = &type metadata for AnyTileInfoBearer.TileKeys;
              *(_QWORD *)(v69 + 64) = v70;
              *(_BYTE *)(v69 + 32) = 0;
              v95 = 0;
              v96 = 0xE000000000000000;
              sub_23E537E68();
              sub_23E537628();
              __swift_project_boxed_opaque_existential_1(v36, *(_QWORD *)(v35 + 40));
              sub_23E53833C();
              sub_23E537EC8();
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v64, *MEMORY[0x24BEE2728], v62);
              swift_willThrow();
              v49 = v94;
              v48 = *(void (**)(char *, uint64_t))(v93 + 8);
              goto LABEL_37;
            }
            v57 = v72;
            sub_23E1E2FDC(v60, v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
            LOBYTE(v95) = 7;
            v98 = 1;
            sub_23E3E23DC();
            sub_23E5382AC();
            if (!v42)
            {
              LOBYTE(v95) = 0;
              sub_23E1EE1C4(&qword_256D3F8E0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
              sub_23E5382AC();
            }
            v54 = type metadata accessor for StaticMatterDevice;
          }
        }
      }
      v55 = v57;
    }
    sub_23E1E2FA0(v55, (uint64_t (*)(_QWORD))v54);
    v48 = *(void (**)(char *, uint64_t))(v93 + 8);
    v49 = v52;
LABEL_37:
    v48(v49, v46);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
  }
  v37 = v92;
  sub_23E1E2FDC((uint64_t)v30, v92, type metadata accessor for StaticAccessory);
  LOBYTE(v95) = 0;
  v98 = 1;
  sub_23E3E23DC();
  v38 = v33;
  v39 = v94;
  sub_23E5382AC();
  if (!v39)
  {
    LOBYTE(v95) = 0;
    v50 = type metadata accessor for StaticAccessory;
    sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
    sub_23E5382AC();
    v41 = v37;
    goto LABEL_17;
  }
  v40 = type metadata accessor for StaticAccessory;
  v41 = v37;
LABEL_18:
  sub_23E1E2FA0(v41, v40);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v38, v31);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v97);
}

uint64_t AnyTileInfoBearer.unwrap<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  int v5;
  _BYTE v7[40];

  sub_23E1FF9C8(*v2 + 16, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v5 ^ 1u, 1, a1);
}

uint64_t AnyTileInfoBearer.id.getter()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_23E537E80();
}

uint64_t AnyTileInfoBearer.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t AnyTileInfoBearer.dateAdded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t AnyTileInfoBearer.tileIcon.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t AnyTileInfoBearer.foregroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t AnyTileInfoBearer.isDoubleHigh.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.primaryServiceKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t AnyTileInfoBearer.displayAsServiceKind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
}

uint64_t AnyTileInfoBearer.isFavorite.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.shouldShowInDashboard.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.roomIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t AnyTileInfoBearer.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(v1, v2);
}

uint64_t AnyTileInfoBearer.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.isReachable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(v1, v2) & 1;
}

uint64_t AnyTileInfoBearer.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
}

uint64_t AnyTileInfoBearer.toggle()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23E3E0C6C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 184) + *(_QWORD *)(v3 + 184));
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_23E3E0CF0;
  return v6(v0[2], v2, v3);
}

uint64_t sub_23E3E0CF0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t AnyTileInfoBearer.hash(into:)()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_23E5374D8();
}

uint64_t AnyTileInfoBearer.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E3E0DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

uint64_t sub_23E3E0E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t sub_23E3E0E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t sub_23E3E0ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t sub_23E3E0F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v2) & 1;
}

uint64_t sub_23E3E0F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

uint64_t sub_23E3E0FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 112))(v1, v2);
}

uint64_t sub_23E3E1008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2) & 1;
}

uint64_t sub_23E3E1054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 128))(v1, v2) & 1;
}

uint64_t sub_23E3E10A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 136))(v1, v2);
}

uint64_t sub_23E3E10E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(v1, v2);
}

uint64_t sub_23E3E1130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 152))(v1, v2) & 1;
}

uint64_t sub_23E3E117C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 160))(v1, v2) & 1;
}

uint64_t sub_23E3E11C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(v1, v2) & 1;
}

uint64_t sub_23E3E1214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
}

uint64_t sub_23E3E125C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23E3E1278()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 184) + *(_QWORD *)(v3 + 184));
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_23E3E3E34;
  return v6(v0[2], v2, v3);
}

uint64_t sub_23E3E12FC()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_23E537E80();
}

uint64_t sub_23E3E134C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E3E13B0()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_23E5374D8();
}

uint64_t sub_23E3E13FC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E3E145C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyTileInfoBearer.init(from:)(a1, a2);
}

uint64_t sub_23E3E1470(_QWORD *a1)
{
  return AnyTileInfoBearer.encode(to:)(a1);
}

unint64_t AnyTileInfoBearer.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)*v0;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_23E537E68();
  swift_bridgeObjectRelease();
  v18 = 0xD000000000000018;
  v19 = 0x800000023E569670;
  __swift_project_boxed_opaque_existential_1(v6 + 2, v6[5]);
  swift_retain();
  sub_23E537E80();
  swift_release();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, v2, MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  sub_23E537628();
  v7 = v6[5];
  v8 = v6[6];
  __swift_project_boxed_opaque_existential_1(v6 + 2, v7);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 56);
  swift_retain();
  v9(v7, v8);
  swift_release();
  v10 = sub_23E3E2234(16);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  MEMORY[0x24264E878](v10, v12, v14, v16);
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return v18;
}

uint64_t AnyTileInfoBearer.debugDescription.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void (*v11)(uint64_t, uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  int64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  _QWORD v73[3];
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  __int128 v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  __int128 v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  __int128 v105;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v80 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v73 - v5;
  *(_QWORD *)&v94 = 0;
  *((_QWORD *)&v94 + 1) = 0xE000000000000000;
  sub_23E537E68();
  v105 = v94;
  sub_23E537628();
  v77 = *v0;
  v7 = v77;
  v8 = *(_QWORD *)(v77 + 40);
  v9 = *(_QWORD *)(v77 + 48);
  v10 = (_QWORD *)(v77 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v77 + 16), v8);
  v11 = *(void (**)(uint64_t, uint64_t))(v9 + 144);
  swift_retain();
  v11(v8, v9);
  swift_release();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  __swift_project_boxed_opaque_existential_1(v10, *(_QWORD *)(v7 + 40));
  swift_retain();
  sub_23E537E80();
  swift_release();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v81 = v2;
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v79 = v6;
  v82 = v1;
  v78 = v12;
  v12(v6, v1);
  sub_23E537628();
  v13 = *(_QWORD *)(v7 + 40);
  v14 = *(_QWORD *)(v7 + 48);
  __swift_project_boxed_opaque_existential_1(v10, v13);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 56);
  swift_retain();
  v15(v13, v14);
  swift_release();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v16 = *(_QWORD *)(v7 + 40);
  v17 = *(_QWORD *)(v7 + 48);
  __swift_project_boxed_opaque_existential_1(v10, v16);
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 176);
  swift_retain();
  v19 = v18(v16, v17);
  v21 = v20;
  swift_release();
  *(_QWORD *)&v94 = v19;
  *((_QWORD *)&v94 + 1) = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v94 = v77;
  AnyTileInfoBearer.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v22 = *(_QWORD *)(v7 + 40);
  v23 = *(_QWORD *)(v7 + 48);
  __swift_project_boxed_opaque_existential_1(v10, v22);
  v24 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 72);
  swift_retain();
  v24(&v94, v22, v23);
  swift_release();
  v83 = v94;
  v84 = v95;
  v85 = v96;
  v86 = v97;
  v87 = v98;
  v88 = v99;
  v89 = v100;
  v90 = v101;
  v91 = v102;
  v92 = v103;
  v93 = v104;
  sub_23E537FDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v25 = *(_QWORD *)(v7 + 40);
  v26 = *(_QWORD *)(v7 + 48);
  v75 = v10;
  __swift_project_boxed_opaque_existential_1(v10, v25);
  v27 = *(void (**)(uint64_t, uint64_t))(v26 + 88);
  swift_retain();
  v27(v25, v26);
  swift_release();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v28 = *(_QWORD *)(v7 + 40);
  v29 = *(_QWORD *)(v7 + 48);
  __swift_project_boxed_opaque_existential_1(v10, v28);
  v30 = *(void (**)(uint64_t, uint64_t))(v29 + 168);
  swift_retain();
  v30(v28, v29);
  swift_release();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v31 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v94 = MEMORY[0x24BEE4AF8];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  v33 = sub_23E309770();
  sub_23E5374F0();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v34 = *(_QWORD *)(v7 + 40);
  v35 = *(_QWORD *)(v7 + 48);
  __swift_project_boxed_opaque_existential_1(v75, v34);
  v36 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 136);
  swift_retain();
  v37 = v36(v34, v35);
  v74 = v7;
  swift_release();
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v73[1] = v33;
    v73[2] = v32;
    *(_QWORD *)&v94 = v31;
    sub_23E2058B0(0, v38, 0);
    result = sub_23E26B68C(v37);
    v40 = result;
    v42 = v41;
    v44 = v43 & 1;
    *(_QWORD *)&v77 = v37 + 56;
    v76 = v37;
    while ((v40 & 0x8000000000000000) == 0 && v40 < 1 << *(_BYTE *)(v37 + 32))
    {
      if (((*(_QWORD *)(v77 + (((unint64_t)v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v37 + 36) != (_DWORD)v42)
        goto LABEL_17;
      v45 = v81;
      v46 = v79;
      v47 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v79, *(_QWORD *)(v37 + 48) + *(_QWORD *)(v81 + 72) * v40, v82);
      v48 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v49 = v80;
      v48(v80, v46, v47);
      v50 = sub_23E536F38();
      v52 = v51;
      v78(v49, v47);
      v53 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v53 + 16) + 1, 1);
        v53 = v94;
      }
      v55 = *(_QWORD *)(v53 + 16);
      v54 = *(_QWORD *)(v53 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_23E2058B0(v54 > 1, v55 + 1, 1);
        v53 = v94;
      }
      *(_QWORD *)(v53 + 16) = v55 + 1;
      v56 = v53 + 16 * v55;
      *(_QWORD *)(v56 + 32) = v50;
      *(_QWORD *)(v56 + 40) = v52;
      v37 = v76;
      result = sub_23E2CD280(v40, v42, v44 & 1, v76);
      v40 = result;
      v42 = v57;
      v44 = v58 & 1;
      if (!--v38)
      {
        sub_23E23D578(result, v57, v58 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x24BEE4AF8];
LABEL_14:
    *(_QWORD *)&v94 = v53;
    sub_23E5374F0();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v59 = v74;
    v60 = *(_QWORD *)(v74 + 40);
    v61 = *(_QWORD *)(v74 + 48);
    v62 = v75;
    __swift_project_boxed_opaque_existential_1(v75, v60);
    v63 = *(void (**)(uint64_t, uint64_t))(v61 + 120);
    swift_retain();
    v63(v60, v61);
    swift_release();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v64 = *(_QWORD *)(v59 + 40);
    v65 = *(_QWORD *)(v59 + 48);
    __swift_project_boxed_opaque_existential_1(v62, v64);
    v66 = *(void (**)(uint64_t, uint64_t))(v65 + 128);
    swift_retain();
    v66(v64, v65);
    swift_release();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v67 = *(_QWORD *)(v59 + 40);
    v68 = *(_QWORD *)(v59 + 48);
    __swift_project_boxed_opaque_existential_1(v62, v67);
    v69 = *(void (**)(uint64_t, uint64_t))(v68 + 160);
    swift_retain();
    v69(v67, v68);
    swift_release();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    v70 = *(_QWORD *)(v59 + 40);
    v71 = *(_QWORD *)(v59 + 48);
    __swift_project_boxed_opaque_existential_1(v62, v70);
    v72 = *(void (**)(uint64_t, uint64_t))(v71 + 152);
    swift_retain();
    v72(v70, v71);
    swift_release();
    sub_23E537628();
    swift_bridgeObjectRelease();
    return v105;
  }
  return result;
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  if (a1[1] == a2[1])
  {
    v12 = *a2;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*a1 + 16), *(_QWORD *)(*a1 + 40));
    sub_23E537E80();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 40));
    sub_23E537E80();
    v11 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_23E3E2234(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23E537610();
    return sub_23E5376B8();
  }
  return result;
}

uint64_t *sub_23E3E22BC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  v7 = *(_QWORD *)(v2 + 104);
  v1[5] = v3;
  v1[6] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 32))(boxed_opaque_existential_1, v6, v3);
  return v1;
}

unint64_t sub_23E3E2354()
{
  unint64_t result;

  result = qword_256D45A90;
  if (!qword_256D45A90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D360, &type metadata for AnyTileInfoBearer.TileKeys);
    atomic_store(result, (unint64_t *)&qword_256D45A90);
  }
  return result;
}

unint64_t sub_23E3E2398()
{
  unint64_t result;

  result = qword_256D45A98;
  if (!qword_256D45A98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D338, &type metadata for AnyTileInfoBearer.TileInfoTypes);
    atomic_store(result, (unint64_t *)&qword_256D45A98);
  }
  return result;
}

unint64_t sub_23E3E23DC()
{
  unint64_t result;

  result = qword_256D45AF8;
  if (!qword_256D45AF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D310, &type metadata for AnyTileInfoBearer.TileInfoTypes);
    atomic_store(result, (unint64_t *)&qword_256D45AF8);
  }
  return result;
}

unint64_t sub_23E3E2420(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_23E3E246C();
  a1[2] = sub_23E3E24B0();
  a1[3] = sub_23E3E24F4();
  a1[4] = sub_23E3E2538();
  a1[5] = sub_23E3E257C();
  result = sub_23E3E25C0();
  a1[6] = result;
  return result;
}

unint64_t sub_23E3E246C()
{
  unint64_t result;

  result = qword_256D45B10;
  if (!qword_256D45B10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B10);
  }
  return result;
}

unint64_t sub_23E3E24B0()
{
  unint64_t result;

  result = qword_256D45B18;
  if (!qword_256D45B18)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B18);
  }
  return result;
}

unint64_t sub_23E3E24F4()
{
  unint64_t result;

  result = qword_256D45B20;
  if (!qword_256D45B20)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B20);
  }
  return result;
}

unint64_t sub_23E3E2538()
{
  unint64_t result;

  result = qword_256D45B28;
  if (!qword_256D45B28)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B28);
  }
  return result;
}

unint64_t sub_23E3E257C()
{
  unint64_t result;

  result = qword_256D45B30;
  if (!qword_256D45B30)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B30);
  }
  return result;
}

unint64_t sub_23E3E25C0()
{
  unint64_t result;

  result = qword_256D45B38;
  if (!qword_256D45B38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B38);
  }
  return result;
}

unint64_t sub_23E3E2608()
{
  unint64_t result;

  result = qword_256D45B40;
  if (!qword_256D45B40)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for AnyTileInfoBearer, &type metadata for AnyTileInfoBearer);
    atomic_store(result, (unint64_t *)&qword_256D45B40);
  }
  return result;
}

_OWORD *initializeBufferWithCopyOfBuffer for AnyTileInfoBearer(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for AnyTileInfoBearer()
{
  return swift_release();
}

_QWORD *assignWithCopy for AnyTileInfoBearer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_OWORD *assignWithTake for AnyTileInfoBearer(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  return a1;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer()
{
  return &type metadata for AnyTileInfoBearer;
}

uint64_t type metadata accessor for AnyTileInfoBearer.StorageBase()
{
  return objc_opt_self();
}

uint64_t method lookup function for AnyTileInfoBearer.StorageBase()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E3E2740()
{
  return swift_initClassMetadata2();
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes;
}

uint64_t storeEnumTagSinglePayload for AnyTileInfoBearer.TileKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E3E27D8 + 4 * byte_23E54CFD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E3E280C + 4 * byte_23E54CFD0[v4]))();
}

uint64_t sub_23E3E280C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3E2814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3E281CLL);
  return result;
}

uint64_t sub_23E3E2828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3E2830);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E3E2834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3E283C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileKeys()
{
  return &type metadata for AnyTileInfoBearer.TileKeys;
}

unint64_t sub_23E3E285C()
{
  unint64_t result;

  result = qword_256D45C68;
  if (!qword_256D45C68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D280, &type metadata for AnyTileInfoBearer.TileKeys);
    atomic_store(result, (unint64_t *)&qword_256D45C68);
  }
  return result;
}

unint64_t sub_23E3E28A4()
{
  unint64_t result;

  result = qword_256D45C70;
  if (!qword_256D45C70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D2E8, &type metadata for AnyTileInfoBearer.TileInfoTypes);
    atomic_store(result, (unint64_t *)&qword_256D45C70);
  }
  return result;
}

unint64_t sub_23E3E28EC()
{
  unint64_t result;

  result = qword_256D45C78;
  if (!qword_256D45C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D1F0, &type metadata for AnyTileInfoBearer.TileKeys);
    atomic_store(result, (unint64_t *)&qword_256D45C78);
  }
  return result;
}

unint64_t sub_23E3E2934()
{
  unint64_t result;

  result = qword_256D45C80;
  if (!qword_256D45C80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D218, &type metadata for AnyTileInfoBearer.TileKeys);
    atomic_store(result, (unint64_t *)&qword_256D45C80);
  }
  return result;
}

uint64_t sub_23E3E2978(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x726F737365636361 && a2 == 0xE900000000000079 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636976726573 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xEC00000070756F72 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72506172656D6163 && a2 == 0xED0000656C69666FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xE900000000000074 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x737953616964656DLL && a2 == 0xEB000000006D6574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F7250616964656DLL && a2 == 0xEC000000656C6966 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x634172657474616DLL && a2 == 0xEF79726F73736563)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23E3E2D64(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45C88);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45C90);
  v31[4] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v51 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45C98);
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CA0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CA8);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CB0);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CB8);
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CC0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45CC8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23E3E3528();
  v23 = v53;
  sub_23E5384E0();
  if (!v23)
  {
    v31[3] = v17;
    v31[1] = v15;
    v31[2] = v14;
    v53 = v19;
    v24 = v21;
    v25 = sub_23E5381C8();
    v26 = v18;
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X9 }
    v27 = sub_23E537ED4();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v29 = &type metadata for AnyTileInfoBearer.TileInfoTypes;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v26);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
}

uint64_t sub_23E3E3428(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F666E49656C6974 && a2 == 0xE800000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F666E49656C6974 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23E3E3528()
{
  unint64_t result;

  result = qword_256D45CD0;
  if (!qword_256D45CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DA74, &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CD0);
  }
  return result;
}

unint64_t sub_23E3E356C()
{
  unint64_t result;

  result = qword_256D45CD8;
  if (!qword_256D45CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DA24, &type metadata for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CD8);
  }
  return result;
}

unint64_t sub_23E3E35B0()
{
  unint64_t result;

  result = qword_256D45CE0;
  if (!qword_256D45CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D9D4, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CE0);
  }
  return result;
}

unint64_t sub_23E3E35F4()
{
  unint64_t result;

  result = qword_256D45CE8;
  if (!qword_256D45CE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D984, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CE8);
  }
  return result;
}

unint64_t sub_23E3E3638()
{
  unint64_t result;

  result = qword_256D45CF0;
  if (!qword_256D45CF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D934, &type metadata for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CF0);
  }
  return result;
}

unint64_t sub_23E3E367C()
{
  unint64_t result;

  result = qword_256D45CF8;
  if (!qword_256D45CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D8E4, &type metadata for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45CF8);
  }
  return result;
}

unint64_t sub_23E3E36C0()
{
  unint64_t result;

  result = qword_256D45D00;
  if (!qword_256D45D00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D894, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D00);
  }
  return result;
}

unint64_t sub_23E3E3704()
{
  unint64_t result;

  result = qword_256D45D08;
  if (!qword_256D45D08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D844, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D08);
  }
  return result;
}

unint64_t sub_23E3E3748()
{
  unint64_t result;

  result = qword_256D45D10;
  if (!qword_256D45D10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D7F4, &type metadata for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D10);
  }
  return result;
}

uint64_t _s13HomeDataModel17AnyTileInfoBearerV13TileInfoTypesOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E3E37D8 + 4 * byte_23E54CFE7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E3E380C + 4 * byte_23E54CFE2[v4]))();
}

uint64_t sub_23E3E380C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3E3814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3E381CLL);
  return result;
}

uint64_t sub_23E3E3828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3E3830);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E3E3834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3E383C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.CodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys;
}

ValueMetadata *type metadata accessor for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys()
{
  return &type metadata for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys;
}

unint64_t sub_23E3E38DC()
{
  unint64_t result;

  result = qword_256D45D60;
  if (!qword_256D45D60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D7CC, &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D60);
  }
  return result;
}

unint64_t sub_23E3E3924()
{
  unint64_t result;

  result = qword_256D45D68;
  if (!qword_256D45D68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D6EC, &type metadata for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D68);
  }
  return result;
}

unint64_t sub_23E3E396C()
{
  unint64_t result;

  result = qword_256D45D70;
  if (!qword_256D45D70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D714, &type metadata for AnyTileInfoBearer.TileInfoTypes.AccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D70);
  }
  return result;
}

unint64_t sub_23E3E39B4()
{
  unint64_t result;

  result = qword_256D45D78;
  if (!qword_256D45D78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D69C, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D78);
  }
  return result;
}

unint64_t sub_23E3E39FC()
{
  unint64_t result;

  result = qword_256D45D80;
  if (!qword_256D45D80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D6C4, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D80);
  }
  return result;
}

unint64_t sub_23E3E3A44()
{
  unint64_t result;

  result = qword_256D45D88;
  if (!qword_256D45D88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D64C, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D88);
  }
  return result;
}

unint64_t sub_23E3E3A8C()
{
  unint64_t result;

  result = qword_256D45D90;
  if (!qword_256D45D90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D674, &type metadata for AnyTileInfoBearer.TileInfoTypes.ServiceGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D90);
  }
  return result;
}

unint64_t sub_23E3E3AD4()
{
  unint64_t result;

  result = qword_256D45D98;
  if (!qword_256D45D98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D5FC, &type metadata for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45D98);
  }
  return result;
}

unint64_t sub_23E3E3B1C()
{
  unint64_t result;

  result = qword_256D45DA0;
  if (!qword_256D45DA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D624, &type metadata for AnyTileInfoBearer.TileInfoTypes.CameraProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DA0);
  }
  return result;
}

unint64_t sub_23E3E3B64()
{
  unint64_t result;

  result = qword_256D45DA8;
  if (!qword_256D45DA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D5AC, &type metadata for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DA8);
  }
  return result;
}

unint64_t sub_23E3E3BAC()
{
  unint64_t result;

  result = qword_256D45DB0;
  if (!qword_256D45DB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D5D4, &type metadata for AnyTileInfoBearer.TileInfoTypes.ActionSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DB0);
  }
  return result;
}

unint64_t sub_23E3E3BF4()
{
  unint64_t result;

  result = qword_256D45DB8;
  if (!qword_256D45DB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D55C, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DB8);
  }
  return result;
}

unint64_t sub_23E3E3C3C()
{
  unint64_t result;

  result = qword_256D45DC0;
  if (!qword_256D45DC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D584, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaSystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DC0);
  }
  return result;
}

unint64_t sub_23E3E3C84()
{
  unint64_t result;

  result = qword_256D45DC8;
  if (!qword_256D45DC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D50C, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DC8);
  }
  return result;
}

unint64_t sub_23E3E3CCC()
{
  unint64_t result;

  result = qword_256D45DD0;
  if (!qword_256D45DD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D534, &type metadata for AnyTileInfoBearer.TileInfoTypes.MediaProfileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DD0);
  }
  return result;
}

unint64_t sub_23E3E3D14()
{
  unint64_t result;

  result = qword_256D45DD8;
  if (!qword_256D45DD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D4BC, &type metadata for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DD8);
  }
  return result;
}

unint64_t sub_23E3E3D5C()
{
  unint64_t result;

  result = qword_256D45DE0;
  if (!qword_256D45DE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D4E4, &type metadata for AnyTileInfoBearer.TileInfoTypes.MatterAccessoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DE0);
  }
  return result;
}

unint64_t sub_23E3E3DA4()
{
  unint64_t result;

  result = qword_256D45DE8;
  if (!qword_256D45DE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D73C, &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45DE8);
  }
  return result;
}

unint64_t sub_23E3E3DEC()
{
  unint64_t result;

  result = qword_256D45DF0;
  if (!qword_256D45DF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54D764, &type metadata for AnyTileInfoBearer.TileInfoTypes.CodingKeys);
    atomic_store(result, &qword_256D45DF0);
  }
  return result;
}

uint64_t sub_23E3E3E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;

  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v3, sel_applicationData);
  v41 = MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(a1 + 16);
  v37 = v13;
  v38 = v3;
  v35 = a2;
  v36 = a3;
  v33 = v17;
  v34 = a1;
  if (v18)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v39 = *(_QWORD *)(v8 + 72);
    v40 = v20;
    swift_bridgeObjectRetain();
    while (1)
    {
      v40(v16, v19, v7);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v21(v16, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v16, v7);
      sub_23E536F38();
      sub_23E537538();
      swift_bridgeObjectRelease();
      v22 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      MEMORY[0x24264EA70](v22);
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23E537820();
      sub_23E53785C();
      sub_23E537808();
      v19 += v39;
      if (!--v18)
        goto LABEL_9;
    }
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v21(v16, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  v23 = (void *)sub_23E5377E4();
  v24 = (void *)sub_23E537538();
  v25 = v33;
  objc_msgSend(v33, sel_setObject_forKeyedSubscript_, v23, v24);

  swift_bridgeObjectRelease();
  v26 = sub_23E537934();
  v27 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v37, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v29 = v38;
  v28[4] = v38;
  v30 = v29;
  sub_23E48BEFC(v27, (uint64_t)&unk_256D45E00, (uint64_t)v28);
  return swift_release();
}

uint64_t HMHome.colorPickerFavorites.setter(uint64_t a1)
{
  sub_23E3E4D34(a1);
  return swift_bridgeObjectRelease();
}

uint64_t HMHome.sidebarRoomsSortOrder.getter()
{
  return sub_23E1ED91C(0xD000000000000023, 0x800000023E568A50);
}

uint64_t HMHome.sectionsSortOrder.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_254332C48),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98),
        swift_dynamicCast()))
  {
    return v5;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t HMHome.actionSetsSortOrder.getter()
{
  return sub_23E1ED91C(0xD000000000000028, 0x800000023E568A80);
}

uint64_t HMHome.servicesSortOrder.getter()
{
  return sub_23E1ED91C(0xD000000000000026, 0x800000023E568AB0);
}

uint64_t HMHome.camerasSortOrder.getter()
{
  return sub_23E1ED91C(0xD000000000000025, 0x800000023E568AE0);
}

unint64_t HMHome.colorPickerFavorites.getter()
{
  unint64_t result;

  result = sub_23E205B48();
  if (!result)
  {
    result = sub_23E2061D8();
    if (!result)
      return MEMORY[0x24BEE4AF8];
  }
  return result;
}

unint64_t static HMHome.showPredictedScenesOnDashboard.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t static HMHome.userDetailsDictionaryKey.getter()
{
  return 0x6174654472657355;
}

unint64_t static HMHome.actionSetsSortedByKey.getter()
{
  return 0xD000000000000028;
}

unint64_t static HMHome.camerasSortedByKey.getter()
{
  return 0xD000000000000025;
}

unint64_t static HMHome.servicesSortedByKey.getter()
{
  return 0xD000000000000026;
}

unint64_t static HMHome.sectionsSortedByKey.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static HMHome.roomsSortedByKey.getter()
{
  return 0xD000000000000023;
}

unint64_t static HMHome.legacyRoomsSortedByKey.getter()
{
  return 0xD00000000000002ALL;
}

void HMHome.sectionsSortOrder.setter()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E5377E4();
  v3 = (void *)sub_23E537538();
  objc_msgSend(v1, sel_setObject_forKeyedSubscript_, v2, v3);

  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_applicationData);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v0;
  v8[4] = sub_23E3E54A4;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_23E50B358;
  v8[3] = &block_descriptor_25;
  v6 = _Block_copy(v8);
  v7 = v0;
  swift_release();
  objc_msgSend(v7, sel_updateApplicationData_completionHandler_, v4, v6);
  _Block_release(v6);

}

void (*HMHome.sectionsSortOrder.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = HMHome.sectionsSortOrder.getter();
  return sub_23E3E4574;
}

void sub_23E3E4574(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    HMHome.sectionsSortOrder.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    HMHome.sectionsSortOrder.setter();
  }
}

uint64_t HMHome.showPredictedScenesOnDashboard.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unsigned __int8 v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(&qword_254332C48), swift_dynamicCast()))
    return v5;
  else
    return 1;
}

void HMHome.showPredictedScenesOnDashboard.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E3E61D0;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_6_1;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t sub_23E3E47E4(uint64_t a1, void *a2)
{
  uint64_t updated;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_254333EE8);
  *v5 = a2;
  swift_storeEnumTagMultiPayload();
  v11 = a2;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*HMHome.showPredictedScenesOnDashboard.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMHome.showPredictedScenesOnDashboard.getter() & 1;
  return sub_23E3E494C;
}

void sub_23E3E494C(uint64_t a1)
{
  HMHome.showPredictedScenesOnDashboard.setter(*(_BYTE *)(a1 + 8));
}

uint64_t HMHome.actionSetsSortOrder.setter(uint64_t a1)
{
  sub_23E3E3E40(a1, 0xD000000000000028, 0x800000023E568A80);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.actionSetsSortOrder.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0xD000000000000028, 0x800000023E568A80);
  return sub_23E3E49F8;
}

uint64_t sub_23E3E49F8(uint64_t *a1, char a2)
{
  return sub_23E3E4C94(a1, a2, 0xD000000000000028, 0x800000023E568A80);
}

uint64_t HMHome.camerasSortOrder.setter(uint64_t a1)
{
  sub_23E3E3E40(a1, 0xD000000000000025, 0x800000023E568AE0);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.camerasSortOrder.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0xD000000000000025, 0x800000023E568AE0);
  return sub_23E3E4A9C;
}

uint64_t sub_23E3E4A9C(uint64_t *a1, char a2)
{
  return sub_23E3E4C94(a1, a2, 0xD000000000000025, 0x800000023E568AE0);
}

uint64_t HMHome.sidebarRoomsSortOrder.setter(uint64_t a1)
{
  sub_23E3E3E40(a1, 0xD000000000000023, 0x800000023E568A50);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.sidebarRoomsSortOrder.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0xD000000000000023, 0x800000023E568A50);
  return sub_23E3E4B40;
}

uint64_t sub_23E3E4B40(uint64_t *a1, char a2)
{
  return sub_23E3E4C94(a1, a2, 0xD000000000000023, 0x800000023E568A50);
}

uint64_t HMHome.servicesSortOrder.setter(uint64_t a1)
{
  sub_23E3E3E40(a1, 0xD000000000000026, 0x800000023E568AB0);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.servicesSortOrder.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0xD000000000000026, 0x800000023E568AB0);
  return sub_23E3E4BE4;
}

uint64_t sub_23E3E4BE4(uint64_t *a1, char a2)
{
  return sub_23E3E4C94(a1, a2, 0xD000000000000026, 0x800000023E568AB0);
}

uint64_t sub_23E3E4C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = swift_bridgeObjectRetain();
  sub_23E3E3E40(v8, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t (*HMHome.cameraProfilesSortOrder.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_23E1ED91C(0xD000000000000025, 0x800000023E568AE0);
  return sub_23E3E4A9C;
}

uint64_t sub_23E3E4C94(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  if ((a2 & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    sub_23E3E3E40(v7, a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E3E3E40(v6, a3, a4);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_23E3E4CF4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_23E205B48();
  if (!result)
  {
    result = sub_23E2061D8();
    if (!result)
      result = MEMORY[0x24BEE4AF8];
  }
  *a1 = result;
  return result;
}

void sub_23E3E4D34(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  _QWORD v38[3];
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  unint64_t v47;
  _QWORD aBlock[7];

  v2 = v1;
  v4 = type metadata accessor for ColorPickerFavorite();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, sel_applicationData);
  v39 = v2;
  v13 = objc_msgSend(v2, sel_currentUser);
  v14 = objc_msgSend(v13, sel_uniqueIdentifier);

  sub_23E536F68();
  v40 = sub_23E536F38();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v43 = sub_23E20E5A0(MEMORY[0x24BEE4AF8]);
  v17 = (void *)sub_23E537538();
  v42 = v12;
  v18 = objc_msgSend(v12, sel_objectForKeyedSubscript_, v17);

  v41 = v16;
  if (v18)
  {
    aBlock[0] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E10);
    if (swift_dynamicCast())
    {
      v19 = v47;
      swift_bridgeObjectRelease();
      v43 = v19;
    }
  }
  if (*(_QWORD *)(a1 + 16))
  {
    v38[1] = a1;
    v38[2] = "cameraProfilesSortOrder";
    v20 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    swift_bridgeObjectRetain();
    v46 = xmmword_23E53E0F0;
    v45 = xmmword_23E53B510;
    v44 = xmmword_23E539650;
    sub_23E3E6148(v20, (uint64_t)v7);
    __asm { BR              X9 }
  }
  v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v22 = v42;
  v23 = v43;
  v25 = v40;
  v24 = v41;
  if (!*(_QWORD *)(v43 + 16))
    goto LABEL_11;
  swift_bridgeObjectRetain();
  v26 = sub_23E211350(v25, v24);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v28 = *(_QWORD **)(*(_QWORD *)(v23 + 56) + 8 * v26);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v29 = sub_23E26301C(v28, v21);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v23;
    sub_23E21C0E0((uint64_t)v21, v25, v24, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E08);
    v31 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
    v32 = (void *)sub_23E537538();
    objc_msgSend(v22, sel_setObject_forKeyedSubscript_, v31, v32);

    v33 = swift_allocObject();
    v34 = v39;
    *(_QWORD *)(v33 + 16) = v39;
    aBlock[4] = sub_23E3E61C8;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E50B358;
    aBlock[3] = &block_descriptor_32;
    v35 = _Block_copy(aBlock);
    v36 = v22;
    v37 = v34;
    swift_release();
    objc_msgSend(v37, sel_updateApplicationData_completionHandler_, v36, v35);

    _Block_release(v35);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();

}

uint64_t sub_23E3E5480()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E3E54A4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E3E47E4(a1, *(void **)(v1 + 16));
}

uint64_t (*HMHome.colorPickerFavorites.modify(unint64_t *a1))(uint64_t *a1, char a2)
{
  unint64_t v1;
  unint64_t v3;

  a1[1] = v1;
  v3 = sub_23E205B48();
  if (!v3)
  {
    v3 = sub_23E2061D8();
    if (!v3)
      v3 = MEMORY[0x24BEE4AF8];
  }
  *a1 = v3;
  return sub_23E3E5508;
}

uint64_t sub_23E3E5508(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    sub_23E3E4D34(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E3E4D34(v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3E5548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = HMHome.sectionsSortOrder.getter();
  *a1 = result;
  return result;
}

void sub_23E3E5570()
{
  swift_bridgeObjectRetain();
  HMHome.sectionsSortOrder.setter();
}

uint64_t sub_23E3E5598@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMHome.showPredictedScenesOnDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E3E55C4(char *a1)
{
  HMHome.showPredictedScenesOnDashboard.setter(*a1);
}

uint64_t sub_23E3E55E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1ED91C(0xD000000000000028, 0x800000023E568A80);
  *a1 = result;
  return result;
}

uint64_t sub_23E3E5628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3E4C00(a1, a2, a3, a4, 0xD000000000000028, 0x800000023E568A80);
}

uint64_t sub_23E3E5654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1ED91C(0xD000000000000025, 0x800000023E568AE0);
  *a1 = result;
  return result;
}

uint64_t sub_23E3E5694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3E4C00(a1, a2, a3, a4, 0xD000000000000025, 0x800000023E568AE0);
}

uint64_t sub_23E3E56C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1ED91C(0xD000000000000023, 0x800000023E568A50);
  *a1 = result;
  return result;
}

uint64_t sub_23E3E5700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3E4C00(a1, a2, a3, a4, 0xD000000000000023, 0x800000023E568A50);
}

uint64_t sub_23E3E572C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1ED91C(0xD000000000000026, 0x800000023E568AB0);
  *a1 = result;
  return result;
}

uint64_t sub_23E3E576C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3E4C00(a1, a2, a3, a4, 0xD000000000000026, 0x800000023E568AB0);
}

uint64_t sub_23E3E5798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E3E4C00(a1, a2, a3, a4, 0xD000000000000025, 0x800000023E568AE0);
}

uint64_t sub_23E3E57C8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_23E3E4D34(v0);
  return swift_bridgeObjectRelease();
}

void sub_23E3E57F8(void *a1, void *a2)
{
  uint64_t updated;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26[2];

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v6 = (id *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = a1;
    if (qword_254333DB8 != -1)
      swift_once();
    v12 = sub_23E5371A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
    v13 = a1;
    v14 = a1;
    v26[0] = (id)sub_23E537190();
    v15 = sub_23E537B08();
    if (os_log_type_enabled((os_log_t)v26[0], v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = a1;
      v19 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v26[1] = v19;
      sub_23E537CF4();
      *v17 = v19;

      _os_log_impl(&dword_23E1DF000, (os_log_t)v26[0], v15, "Updating color picker favorites FAILED %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v17, -1, -1);
      MEMORY[0x24264FEBC](v16, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v20 = sub_23E5371A8();
    __swift_project_value_buffer(v20, (uint64_t)qword_254333D88);
    v21 = sub_23E537190();
    v22 = sub_23E537B20();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_23E1DF000, v21, v22, "Updated color picker favorites", v23, 2u);
      MEMORY[0x24264FEBC](v23, -1, -1);
    }

    if (qword_254334090 != -1)
      swift_once();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
    __swift_project_value_buffer(v24, (uint64_t)qword_254333EE8);
    *v6 = a2;
    swift_storeEnumTagMultiPayload();
    v25 = a2;
    sub_23E537940();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_23E3E5B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[15] = a4;
  v4[16] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[17] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v4[21] = v6;
  v4[22] = *(_QWORD *)(v6 - 8);
  v4[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3E5C3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23E5378F8();
  *(_QWORD *)(v0 + 200) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E5CA8()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E3E5D20()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E5D80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[26];
  v3 = v0[19];
  v2 = v0[20];
  v4 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E3E5DE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  v1 = v0[23];
  v2 = v0[21];
  v3 = v0[22];
  v5 = v0[19];
  v4 = v0[20];
  v6 = v0[18];
  v7 = (void *)v0[15];
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v8 = objc_msgSend(v7, sel_applicationData);
  v0[28] = v8;
  v0[2] = v0;
  v0[3] = sub_23E3E5F00;
  v9 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_23E267484;
  v0[13] = &block_descriptor_25_0;
  v0[14] = v9;
  objc_msgSend(v7, sel_updateApplicationData_completionHandler_, v8, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_23E3E5F00()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 232) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3E5F60()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E5FC0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 224);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E602C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E3E6058(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E3E5B88(a1, v4, v5, v6);
}

uint64_t sub_23E3E60C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E3E6104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3E6148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3E618C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ColorPickerFavorite();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23E3E61C8(void *a1)
{
  uint64_t v1;

  sub_23E3E57F8(a1, *(void **)(v1 + 16));
}

void sub_23E3E61F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E3E8810();
    sub_23E3E884C();
    sub_23E537A3C();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_23E537DD8())
      goto LABEL_39;
    sub_23E3E8810();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_39;
LABEL_28:
    objc_opt_self();
    v15 = (void *)swift_dynamicCastObjCClass();
    if (!v15)
    {

      goto LABEL_9;
    }
    v16 = objc_msgSend(v15, sel_characteristic);

    v3 = v11;
    v4 = v9;
    if (v16)
    {
      MEMORY[0x24264EA70]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23E537820();
      sub_23E53785C();
      sub_23E537808();
LABEL_9:
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_27:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_39;
    goto LABEL_28;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_39;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_25;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_25;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_39;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_25:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_39;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v17 = v3 + 6;
          while (v8 != v17)
          {
            v13 = *(_QWORD *)(v18 + 8 * v17++);
            if (v13)
            {
              v11 = v17 - 1;
              goto LABEL_26;
            }
          }
LABEL_39:
          sub_23E2261B0();
          return;
        }
      }
    }
LABEL_26:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t StaticActionSet.toggle()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E3E6534()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v1 = v0[3];
  if ((*(_BYTE *)(v1 + *(int *)(type metadata accessor for StaticActionSet() + 52)) & 1) != 0)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[5] = v2;
    *v2 = v0;
    v2[1] = sub_23E3E6628;
    return StaticActionSet.turnPowerAndActiveActionsOff()();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[4] = v4;
    *v4 = v0;
    v4[1] = sub_23E3E65C8;
    return StaticActionSet.execute()();
  }
}

uint64_t sub_23E3E65C8()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23E3E6628()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3E667C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_23E5378F8();
  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E66E8()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3E674C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E67AC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 72) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3E67F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = sub_23E536F44();
  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6860()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[10];
  v2 = (void *)v0[9];
  swift_release();
  v0[12] = objc_msgSend(v2, sel_actionSetFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3E68C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 96);
  if (v1
    && (v2 = objc_msgSend(*(id *)(v0 + 96), sel_home),
        *(_QWORD *)(v0 + 104) = v2,
        v1,
        v2))
  {
    *(_QWORD *)(v0 + 112) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 16);
    v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3E6990()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3E69CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 120) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6A2C()
{
  uint64_t *v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23E3E6A90;
  return DataModel.rebuildSnapshot(for:)(v0[2], v0[13]);
}

uint64_t sub_23E3E6A90()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3E6AE4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticActionSet.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[15] = v0;
  v1[16] = type metadata accessor for StateSnapshot.UpdateType(0);
  v1[17] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v1[18] = v2;
  v1[19] = *(_QWORD *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v1[21] = v3;
  v1[22] = *(_QWORD *)(v3 - 8);
  v1[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3E6BC8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23E5378F8();
  *(_QWORD *)(v0 + 200) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6C34()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3E6C98()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6CF8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3E6D40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E536F44();
  *(_QWORD *)(v0 + 232) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6DAC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[28];
  v2 = (void *)v0[27];
  swift_release();
  v0[30] = objc_msgSend(v2, sel_actionSetFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3E6E10()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 240);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 248) = v2;
    if (v2)
    {
      v3 = v2;
      v4 = *(_QWORD *)(v0 + 240);
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23E3E6F14;
      v5 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v6 = (_QWORD *)(v0 + 80);
      v6[1] = 0x40000000;
      v6[2] = sub_23E267484;
      v6[3] = &block_descriptor_26;
      v6[4] = v5;
      objc_msgSend(v3, sel_executeActionSet_completionHandler_, v4, v6);
      return swift_continuation_await();
    }

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E6F14()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3E6F74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 264) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E6FD4()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E3E704C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E70AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[34];
  v3 = v0[19];
  v2 = v0[20];
  v4 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E3E710C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(void **)(v0 + 240);
  v1 = *(void **)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 152);
  **(_QWORD **)(v0 + 136) = v1;
  swift_storeEnumTagMultiPayload();
  v9 = v1;
  sub_23E537940();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E71DC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 248);
  v2 = *(void **)(v0 + 240);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticActionSet.turnPowerAndActiveActionsOff()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[41] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v2 = sub_23E536F80();
  v1[44] = v2;
  v1[45] = *(_QWORD *)(v2 - 8);
  v1[46] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3E72EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 376) = sub_23E5378F8();
  *(_QWORD *)(v0 + 384) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E7358()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3E73BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 392) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E741C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 400) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3E7464()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 408) = sub_23E536F44();
  *(_QWORD *)(v0 + 416) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E74D0()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[51];
  v2 = (void *)v0[50];
  swift_release();
  v0[53] = objc_msgSend(v2, sel_actionSetFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3E7534()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  char **v24;
  id v25;
  int v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  void *v35;
  void *v36;
  Swift::String v37;
  char v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  char v51[15];
  unsigned __int8 v52;

  v2 = *(void **)(v0 + 424);
  if (!v2)
    goto LABEL_50;
  v3 = objc_msgSend(v2, sel_actions);
  sub_23E3E8810();
  sub_23E3E884C();
  v4 = sub_23E537A0C();

  sub_23E3E61F8(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)v51 = MEMORY[0x24BEE4AF8];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_17:
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
LABEL_18:
    *(_QWORD *)(v0 + 432) = v1;
    result = sub_23E20D354(MEMORY[0x24BEE4AF8]);
    *(_QWORD *)(v0 + 304) = result;
    *(_BYTE *)(v0 + 312) = 0;
    *(_QWORD *)(v0 + 320) = 2;
    if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
      goto LABEL_54;
    v17 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 440) = v17;
    if (v17)
      goto LABEL_21;
LABEL_55:
    swift_release();
    *(_QWORD *)(v0 + 480) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_17;
LABEL_4:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x24264F148](i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_characteristicType);
      v12 = sub_23E53755C();
      v14 = v13;

      v15._countAndFlagsBits = v12;
      v15._object = v14;
      CharacteristicKind.init(rawValue:)(v15);
      if (v52 != 174 && (v52 == 3 || v52 == 105))
      {
        sub_23E537F1C();
        sub_23E537F4C();
        sub_23E537F58();
        sub_23E537F28();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)v51;
    goto LABEL_18;
  }
  __break(1u);
  do
  {
    v18 = (id)MEMORY[0x24264F148](0, v1);
LABEL_24:
    v19 = v18;
    if ((sub_23E5379A0() & 1) != 0)
    {
LABEL_49:
      v43 = *(void **)(v0 + 424);

      swift_release();
      swift_bridgeObjectRelease();
LABEL_50:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v20 = v0 + 216;
    v21 = v0 + 304;
    v22 = (unsigned __int8 *)(v0 + 528);
    v23 = 1;
    v24 = &selRef_homeManager_didAddHome_;
    while (1)
    {
      *(_QWORD *)(v0 + 448) = v19;
      *(_QWORD *)(v0 + 456) = v23;
      v25 = objc_msgSend(v19, v24[104]);
      *(_QWORD *)(v0 + 464) = v25;
      if (v25)
      {
        sub_23E2E4310(v51);
        if (v51[0] != 192)
        {
          *(_QWORD *)(v0 + 16) = v0;
          *(_QWORD *)(v0 + 24) = sub_23E3E7B60;
          v44 = swift_continuation_init();
          *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
          v45 = (_QWORD *)(v0 + 80);
          v45[1] = 0x40000000;
          v45[2] = sub_23E267484;
          v45[3] = &block_descriptor_6_2;
          v45[4] = v44;
          objc_msgSend(v19, sel_readValueWithCompletionHandler_, v45);
          return swift_continuation_await();
        }
        if (objc_msgSend(v19, sel_value))
        {
          sub_23E537D24();
          swift_unknownObjectRelease();
        }
        else
        {
          *(_OWORD *)(v0 + 120) = 0u;
          *(_OWORD *)(v0 + 136) = 0u;
        }
        sub_23E1E4E3C(v0 + 120, v0 + 184, &qword_254332260);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
        if ((swift_dynamicCast() & 1) != 0 && (v26 = *v22, v26 != 2))
        {
          v28 = *(void **)(v0 + 464);
          v29 = *(void **)(v0 + 448);
          if ((v26 & 1) != 0)
          {
            v47 = *(_QWORD *)(v0 + 368);
            v49 = *(_QWORD *)(v0 + 360);
            v50 = *(_QWORD *)(v0 + 352);
            *(_QWORD *)(v0 + 240) = MEMORY[0x24BEE1328];
            *(_BYTE *)(v0 + 216) = 0;
            v48 = v29;
            v30 = objc_msgSend(v29, sel_characteristicType);
            v31 = v21;
            v32 = v20;
            v33 = sub_23E53755C();
            v34 = v22;
            v36 = v35;

            v37._countAndFlagsBits = v33;
            v20 = v32;
            v21 = v31;
            v37._object = v36;
            v22 = v34;
            CharacteristicKind.init(rawValue:)(v37);
            v38 = v51[0];
            if (v51[0] == 174)
              v38 = 0;
            v51[0] = v38;
            v39 = objc_msgSend(v28, sel_uniqueIdentifier);
            sub_23E536F68();

            CharacteristicValueSet.add(value:for:on:)(v20, (unsigned __int8 *)v51, v47);
            (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v50);

            __swift_destroy_boxed_opaque_existential_0(v20);
          }
          else
          {

          }
          v24 = &selRef_homeManager_didAddHome_;
        }
        else
        {
          v27 = *(void **)(v0 + 448);

        }
      }
      else
      {

      }
      v40 = *(_QWORD *)(v0 + 456);
      v1 = *(_QWORD *)(v0 + 432);
      if (v40 == *(_QWORD *)(v0 + 440))
        goto LABEL_55;
      if ((v1 & 0xC000000000000001) == 0)
        break;
      v19 = (id)MEMORY[0x24264F148](*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 432));
      v41 = *(_QWORD *)(v0 + 456);
      v42 = __OFADD__(v41, 1);
      v23 = v41 + 1;
      if (v42)
        goto LABEL_52;
LABEL_48:
      if ((sub_23E5379A0() & 1) != 0)
        goto LABEL_49;
    }
    if (v40 >= *(_QWORD *)(v1 + 16))
      goto LABEL_53;
    v19 = *(id *)(v1 + 8 * v40 + 32);
    v42 = __OFADD__(v40, 1);
    v23 = v40 + 1;
    if (!v42)
      goto LABEL_48;
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    v46 = sub_23E53803C();
    result = swift_release();
    *(_QWORD *)(v0 + 440) = v46;
    if (!v46)
      goto LABEL_55;
LABEL_21:
    ;
  }
  while ((v1 & 0xC000000000000001) != 0);
  if (*(_QWORD *)(v1 + 16))
  {
    v18 = *(id *)(v1 + 32);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E3E7B60()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 472) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_23E3E7BC0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  char **v3;
  _OWORD *v4;
  int v5;
  void *v6;
  char **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  unsigned __int8 v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;

  v1 = v0 + 184;
  v30 = v0 + 216;
  v2 = (_BYTE *)(v0 + 528);
  v3 = &selRef_homeManager_didAddHome_;
  if (objc_msgSend(*(id *)(v0 + 448), sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 248) = 0u;
    *(_OWORD *)(v0 + 264) = 0u;
  }
  v4 = (_OWORD *)(v0 + 120);
  sub_23E1E4E3C(v0 + 248, v0 + 152, &qword_254332260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  while (1)
  {
    if ((swift_dynamicCast() & 1) == 0)
      *v2 = 2;
    v5 = *v2;
    if (v5 == 2)
    {
      v6 = *(void **)(v0 + 448);

    }
    else
    {
      v31 = v4;
      v7 = v3;
      v8 = v1;
      v9 = *(void **)(v0 + 464);
      v10 = *(void **)(v0 + 448);
      if ((v5 & 1) != 0)
      {
        v11 = *(_QWORD *)(v0 + 368);
        v28 = *(_QWORD *)(v0 + 360);
        v29 = *(_QWORD *)(v0 + 352);
        *(_QWORD *)(v0 + 240) = MEMORY[0x24BEE1328];
        *(_BYTE *)(v0 + 216) = 0;
        v12 = objc_msgSend(v10, sel_characteristicType);
        v13 = sub_23E53755C();
        v15 = v14;

        v16._countAndFlagsBits = v13;
        v16._object = v15;
        CharacteristicKind.init(rawValue:)(v16);
        v17 = v33;
        if (v33 == 174)
          v17 = 0;
        v34 = v17;
        v18 = objc_msgSend(v9, sel_uniqueIdentifier);
        sub_23E536F68();

        CharacteristicValueSet.add(value:for:on:)(v30, &v34, v11);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v11, v29);

        __swift_destroy_boxed_opaque_existential_0(v30);
      }
      else
      {

      }
      v1 = v8;
      v3 = v7;
      v4 = v31;
    }
    v19 = *(_QWORD *)(v0 + 456);
    if (v19 == *(_QWORD *)(v0 + 440))
      break;
    while (1)
    {
      v20 = *(_QWORD *)(v0 + 432);
      if ((v20 & 0xC000000000000001) != 0)
      {
        v21 = (id)MEMORY[0x24264F148](v19);
        v22 = *(_QWORD *)(v0 + 456);
        v23 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_34;
      }
      else
      {
        if (v19 >= *(_QWORD *)(v20 + 16))
          goto LABEL_35;
        v21 = *(id *)(v20 + 8 * v19 + 32);
        v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          return;
        }
      }
      if ((sub_23E5379A0() & 1) != 0)
      {
        v25 = *(void **)(v0 + 424);

        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      *(_QWORD *)(v0 + 448) = v21;
      *(_QWORD *)(v0 + 456) = v23;
      v24 = objc_msgSend(v21, sel_service);
      *(_QWORD *)(v0 + 464) = v24;
      if (v24)
        break;

      v19 = *(_QWORD *)(v0 + 456);
      if (v19 == *(_QWORD *)(v0 + 440))
        goto LABEL_31;
    }
    sub_23E2E4310((char *)&v32);
    if (v32 != 192)
    {
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23E3E7B60;
      v26 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v27 = (_QWORD *)(v0 + 80);
      v27[1] = 0x40000000;
      v27[2] = sub_23E267484;
      v27[3] = &block_descriptor_6_2;
      v27[4] = v26;
      objc_msgSend(v21, sel_readValueWithCompletionHandler_, v27);
      swift_continuation_await();
      return;
    }
    if (objc_msgSend(v21, v3[145]))
    {
      sub_23E537D24();
      swift_unknownObjectRelease();
    }
    else
    {
      *v4 = 0u;
      v4[1] = 0u;
    }
    sub_23E1E4E3C((uint64_t)v4, v1, &qword_254332260);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  }
LABEL_31:
  swift_release();
  *(_QWORD *)(v0 + 480) = sub_23E5378EC();
  sub_23E5378B0();
  swift_task_switch();
}

void sub_23E3E800C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  void *v3;
  _OWORD *v4;
  uint64_t v5;
  int v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  unsigned __int8 v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35[9];

  v1 = v0 + 184;
  v31 = v0 + 216;
  v2 = (_BYTE *)(v0 + 528);
  v3 = *(void **)(v0 + 472);
  swift_willThrow();

  if (objc_msgSend(*(id *)(v0 + 448), sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 248) = 0u;
    *(_OWORD *)(v0 + 264) = 0u;
  }
  v4 = (_OWORD *)(v0 + 120);
  sub_23E1E4E3C(v0 + 248, v0 + 152, &qword_254332260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  v5 = MEMORY[0x24BEE1328];
  while (1)
  {
    if ((swift_dynamicCast() & 1) == 0)
      *v2 = 2;
    v6 = *v2;
    if (v6 == 2)
    {
      v7 = *(void **)(v0 + 448);

    }
    else
    {
      v32 = v4;
      v8 = *(void **)(v0 + 464);
      v9 = *(void **)(v0 + 448);
      if ((v6 & 1) != 0)
      {
        v10 = *(_QWORD *)(v0 + 368);
        v29 = *(_QWORD *)(v0 + 360);
        v30 = *(_QWORD *)(v0 + 352);
        *(_QWORD *)(v0 + 240) = v5;
        *(_BYTE *)(v0 + 216) = 0;
        v11 = objc_msgSend(v9, sel_characteristicType);
        v12 = v5;
        v13 = v1;
        v14 = sub_23E53755C();
        v16 = v15;

        v17._countAndFlagsBits = v14;
        v1 = v13;
        v5 = v12;
        v17._object = v16;
        CharacteristicKind.init(rawValue:)(v17);
        v18 = v34;
        if (v34 == 174)
          v18 = 0;
        v35[0] = v18;
        v19 = objc_msgSend(v8, sel_uniqueIdentifier);
        sub_23E536F68();

        CharacteristicValueSet.add(value:for:on:)(v31, v35, v10);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v10, v30);

        __swift_destroy_boxed_opaque_existential_0(v31);
      }
      else
      {

      }
      v4 = v32;
    }
    v20 = *(_QWORD *)(v0 + 456);
    if (v20 == *(_QWORD *)(v0 + 440))
      break;
    while (1)
    {
      v21 = *(_QWORD *)(v0 + 432);
      if ((v21 & 0xC000000000000001) != 0)
      {
        v22 = (id)MEMORY[0x24264F148](v20);
        v23 = *(_QWORD *)(v0 + 456);
        v24 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_34;
      }
      else
      {
        if (v20 >= *(_QWORD *)(v21 + 16))
          goto LABEL_35;
        v22 = *(id *)(v21 + 8 * v20 + 32);
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          return;
        }
      }
      if ((sub_23E5379A0() & 1) != 0)
      {
        v26 = *(void **)(v0 + 424);

        swift_release();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
      *(_QWORD *)(v0 + 448) = v22;
      *(_QWORD *)(v0 + 456) = v24;
      v25 = objc_msgSend(v22, sel_service);
      *(_QWORD *)(v0 + 464) = v25;
      if (v25)
        break;

      v20 = *(_QWORD *)(v0 + 456);
      if (v20 == *(_QWORD *)(v0 + 440))
        goto LABEL_31;
    }
    sub_23E2E4310((char *)&v33);
    if (v33 != 192)
    {
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_23E3E7B60;
      v27 = swift_continuation_init();
      *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
      v28 = (_QWORD *)(v0 + 80);
      v28[1] = 0x40000000;
      v28[2] = sub_23E267484;
      v28[3] = &block_descriptor_6_2;
      v28[4] = v27;
      objc_msgSend(v22, sel_readValueWithCompletionHandler_, v28);
      swift_continuation_await();
      return;
    }
    if (objc_msgSend(v22, sel_value))
    {
      sub_23E537D24();
      swift_unknownObjectRelease();
    }
    else
    {
      *v4 = 0u;
      v4[1] = 0u;
    }
    sub_23E1E4E3C((uint64_t)v4, v1, &qword_254332260);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  }
LABEL_31:
  swift_release();
  *(_QWORD *)(v0 + 480) = sub_23E5378EC();
  sub_23E5378B0();
  swift_task_switch();
}

uint64_t sub_23E3E846C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3E84A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 488) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3E8508()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 496) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3E8550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 504) = v1;
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 320);
    v3 = *(_BYTE *)(v0 + 312);
    *(_QWORD *)(v0 + 280) = v1;
    *(_BYTE *)(v0 + 288) = v3;
    *(_QWORD *)(v0 + 296) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v4;
    *v4 = v0;
    v4[1] = sub_23E3E864C;
    return DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:)(*(_QWORD *)(v0 + 336), (uint64_t *)(v0 + 280), 0, 0);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 344);
    v7 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    v8 = *(void **)(v0 + 424);
    v9 = *(_QWORD *)(v0 + 344);
    swift_bridgeObjectRelease();
    sub_23E3E8894(v9);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3E864C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3E86B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  sub_23E1E4E3C(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), &qword_254334340);
  v1 = *(void **)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRelease();
  sub_23E3E8894(v2);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E8720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 344);

  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(void **)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 344);
  swift_bridgeObjectRelease();
  sub_23E3E8894(v4);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3E87B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23C694;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

unint64_t sub_23E3E8810()
{
  unint64_t result;

  result = qword_254332C38;
  if (!qword_254332C38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254332C38);
  }
  return result;
}

unint64_t sub_23E3E884C()
{
  unint64_t result;
  unint64_t v1;

  result = qword_254332C40;
  if (!qword_254332C40)
  {
    v1 = sub_23E3E8810();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254332C40);
  }
  return result;
}

uint64_t sub_23E3E8894(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticAccessoryServiceCharacteristicTriplet() + 24);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StaticAccessoryServiceCharacteristicTriplet()
{
  uint64_t result;

  result = qword_256D45EB8;
  if (!qword_256D45EB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticAccessory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StaticAccessory);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.staticCharacteristic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
}

BOOL static StaticAccessoryServiceCharacteristicTriplet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet(),
        (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v4 + 20), a2 + *(int *)(v4 + 20)) & 1) != 0))
  {
    return _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

void StaticAccessoryServiceCharacteristicTriplet.hash(into:)(__int128 *a1)
{
  StaticAccessory.hash(into:)(a1);
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  StaticService.hash(into:)(a1);
  StaticCharacteristic.hash(into:)();
}

uint64_t sub_23E3E8ABC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6553636974617473;
  if (*v0 != 1)
    v1 = 0xD000000000000014;
  if (*v0)
    return v1;
  else
    return 0x6341636974617473;
}

uint64_t sub_23E3E8B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3F0464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3E8B58()
{
  sub_23E3E939C();
  return sub_23E538570();
}

uint64_t sub_23E3E8B80()
{
  sub_23E3E939C();
  return sub_23E53857C();
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3E939C();
  sub_23E5384EC();
  v8[15] = 0;
  type metadata accessor for StaticAccessory(0);
  sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  sub_23E5382AC();
  if (!v1)
  {
    type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    v8[14] = 1;
    type metadata accessor for StaticService();
    sub_23E1EE1C4(&qword_256D40DD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
    sub_23E5382AC();
    v8[13] = 2;
    type metadata accessor for StaticCharacteristic();
    sub_23E1EE1C4(&qword_256D41358, (uint64_t (*)(uint64_t))type metadata accessor for StaticCharacteristic, (uint64_t)&protocol conformance descriptor for StaticCharacteristic);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticAccessoryServiceCharacteristicTriplet.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v22 = a2;
  v24 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x24BDAC7A8](v24);
  v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E50);
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E3E939C();
  v27 = v10;
  v15 = v30;
  sub_23E5384E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  v16 = (uint64_t)v13;
  v33 = 0;
  sub_23E1EE1C4(&qword_256D40E78, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  v17 = (uint64_t)v26;
  v18 = v27;
  sub_23E538180();
  sub_23E1E2FDC(v17, v16, type metadata accessor for StaticAccessory);
  v32 = 1;
  sub_23E1EE1C4(&qword_256D40EE0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  sub_23E538180();
  sub_23E1E2FDC((uint64_t)v5, v16 + *(int *)(v11 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v31 = 2;
  sub_23E1EE1C4(&qword_256D41378, (uint64_t (*)(uint64_t))type metadata accessor for StaticCharacteristic, (uint64_t)&protocol conformance descriptor for StaticCharacteristic);
  v19 = (uint64_t)v23;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v28);
  sub_23E1E2FDC(v19, v16 + *(int *)(v11 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  sub_23E1E2F50(v16, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return sub_23E1E2FA0(v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

BOOL sub_23E3E91A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static StaticAccessory.== infix(_:_:)(a1, a2) & 1) != 0
      && (static StaticService.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0
      && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24));
}

uint64_t sub_23E3E9210()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

void sub_23E3E927C(__int128 *a1)
{
  StaticAccessory.hash(into:)(a1);
  StaticService.hash(into:)(a1);
  StaticCharacteristic.hash(into:)();
}

uint64_t sub_23E3E92CC()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  StaticService.hash(into:)(v1);
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E3E9334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_23E3E9374@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessoryServiceCharacteristicTriplet.init(from:)(a1, a2);
}

uint64_t sub_23E3E9388(_QWORD *a1)
{
  return StaticAccessoryServiceCharacteristicTriplet.encode(to:)(a1);
}

unint64_t sub_23E3E939C()
{
  unint64_t result;

  result = qword_256D45E48;
  if (!qword_256D45E48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DCF0, &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45E48);
  }
  return result;
}

uint64_t sub_23E3E93E0()
{
  return sub_23E1EE1C4(&qword_256D45E58, (uint64_t (*)(uint64_t))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, (uint64_t)&protocol conformance descriptor for StaticAccessoryServiceCharacteristicTriplet);
}

char *initializeBufferWithCopyOfBuffer for StaticAccessoryServiceCharacteristicTriplet(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, int *);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  unsigned int (*v60)(const void *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  __int16 v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int EnumCaseMultiPayload;
  char *v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, _QWORD, uint64_t, int *);
  uint64_t v145;
  char *v146;
  const void *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, const void *, uint64_t);
  uint64_t v171;
  char *v172;
  char *v173;
  int v174;
  int *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  const void *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  int *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  void (*v216)(uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  unint64_t v218;
  char v219;
  uint64_t v220;
  char *v221;
  uint64_t *v222;
  unint64_t v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  int *updated;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  unsigned int (*v234)(char *, uint64_t, uint64_t);
  char *v235;
  unsigned int (*v236)(char *, uint64_t, int *);
  char *v237;
  int *v238;
  uint64_t v239;
  unsigned int (*v240)(char *, uint64_t, uint64_t);
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int (*v246)(const void *, uint64_t, uint64_t);
  uint64_t v247;
  uint64_t v248;
  void (*v249)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v18 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v18;
  }
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for StaticAccessory(0);
  v10 = v9[5];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8(v15, v16, v6);
  }
  else
  {
    v19 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v19;
    swift_bridgeObjectRetain();
  }
  v20 = v8;
  swift_storeEnumTagMultiPayload();
  v21 = v9[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = (int *)type metadata accessor for StaticDeviceMetadata();
  v231 = *((_QWORD *)v24 - 1);
  v236 = *(unsigned int (**)(char *, uint64_t, int *))(v231 + 48);
  v249 = v8;
  v244 = v7;
  v248 = v6;
  v238 = v24;
  if (v236(v23, 1, v24))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v8(v22, v23, v6);
    v26 = v24[5];
    v27 = &v22[v26];
    v28 = &v23[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v24[6];
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v24[7];
    v35 = &v22[v34];
    v36 = &v23[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v24[8];
    v39 = &v22[v38];
    v40 = &v23[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v22[v24[9]] = v23[v24[9]];
    v22[v24[10]] = v23[v24[10]];
    v22[v24[11]] = v23[v24[11]];
    v42 = *(void (**)(char *, _QWORD, uint64_t, int *))(v231 + 56);
    swift_bridgeObjectRetain();
    v20 = v249;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v22, 0, 1, v24);
  }
  v43 = v9[8];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_23E536F20();
  v47 = *(_QWORD *)(v46 - 8);
  v240 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v247 = v46;
  v243 = v47;
  if (v240(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = v9[9];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v50[8] = v51[8];
  a1[v9[10]] = a2[v9[10]];
  v20(&a1[v9[11]], &a2[v9[11]], v248);
  *(_QWORD *)&a1[v9[12]] = *(_QWORD *)&a2[v9[12]];
  v52 = v9[13];
  v53 = &a1[v52];
  v54 = &a2[v52];
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = v55;
  a1[v9[14]] = a2[v9[14]];
  a1[v9[15]] = a2[v9[15]];
  a1[v9[16]] = a2[v9[16]];
  a1[v9[17]] = a2[v9[17]];
  a1[v9[18]] = a2[v9[18]];
  *(_QWORD *)&a1[v9[19]] = *(_QWORD *)&a2[v9[19]];
  *(_QWORD *)&a1[v9[20]] = *(_QWORD *)&a2[v9[20]];
  v56 = v9[21];
  v241 = a1;
  v57 = &a1[v56];
  v58 = a2;
  v59 = &a2[v56];
  v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v244 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v246 = v60;
  if (v60(v59, 1, v248))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v57, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v249(v57, v59, v248);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v57, 0, 1, v248);
  }
  v62 = v248;
  v63 = v9[22];
  v64 = v58;
  v65 = *(_WORD *)((char *)v58 + v63);
  v18 = v241;
  *(_WORD *)&v241[v63] = v65;
  v66 = v9[23];
  v67 = &v241[v66];
  v68 = (_QWORD *)((char *)v64 + v66);
  v69 = v68[1];
  *(_QWORD *)v67 = *v68;
  *((_QWORD *)v67 + 1) = v69;
  *(_QWORD *)&v241[v9[24]] = *(_QWORD *)((char *)v64 + v9[24]);
  v241[v9[25]] = *((_BYTE *)v64 + v9[25]);
  v70 = v9[26];
  v71 = &v241[v70];
  v72 = (char *)v64 + v70;
  v73 = type metadata accessor for StaticSoftwareUpdate(0);
  v233 = *(_QWORD *)(v73 - 8);
  v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v233 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v234 = v74;
  v242 = v73;
  if (v74(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    v76 = a3;
    v77 = (void (*)(char *, uint64_t, uint64_t))v249;
    goto LABEL_30;
  }
  v249(v71, v72, v248);
  v78 = *(int *)(v73 + 20);
  v79 = &v71[v78];
  v80 = &v72[v78];
  v81 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v83 = v71;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v93 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v93;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v94 = updated[5];
      v95 = &v79[v94];
      v96 = &v80[v94];
      swift_bridgeObjectRetain();
      if (v240(v96, 1, v247))
        goto LABEL_24;
      goto LABEL_26;
    case 1:
      v97 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = *(_QWORD *)v80;
      *((_QWORD *)v79 + 1) = v97;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v98 = updated[5];
      v95 = &v79[v98];
      v96 = &v80[v98];
      swift_bridgeObjectRetain();
      if (v240(v96, 1, v247))
      {
LABEL_24:
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
LABEL_27:
        v77 = (void (*)(char *, uint64_t, uint64_t))v249;
        v100 = updated[6];
        v101 = &v79[v100];
        v102 = &v80[v100];
        v103 = *((_QWORD *)v102 + 1);
        *(_QWORD *)v101 = *(_QWORD *)v102;
        *((_QWORD *)v101 + 1) = v103;
        v104 = updated[7];
        v105 = &v79[v104];
        v106 = &v80[v104];
        v107 = *((_QWORD *)v106 + 1);
        *(_QWORD *)v105 = *(_QWORD *)v106;
        *((_QWORD *)v105 + 1) = v107;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v79[*(int *)(v108 + 48)] = v80[*(int *)(v108 + 48)];
        goto LABEL_28;
      }
LABEL_26:
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v95, v96, v247);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v95, 0, 1, v247);
      goto LABEL_27;
    case 0:
      v77 = (void (*)(char *, uint64_t, uint64_t))v249;
      v249(v79, v80, v248);
      v84 = (int *)type metadata accessor for StaticHH2Update(0);
      v79[v84[5]] = v80[v84[5]];
      v85 = v84[6];
      v86 = &v79[v85];
      v87 = &v80[v85];
      v89 = *(_QWORD *)v87;
      v88 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = v89;
      *((_QWORD *)v86 + 1) = v88;
      v90 = v84[7];
      v91 = &v79[v90];
      v92 = &v80[v90];
      v91[8] = v92[8];
      *(_QWORD *)v91 = *(_QWORD *)v92;
      swift_bridgeObjectRetain();
LABEL_28:
      swift_storeEnumTagMultiPayload();
      v76 = a3;
      goto LABEL_29;
  }
  memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
  v76 = a3;
  v77 = (void (*)(char *, uint64_t, uint64_t))v249;
LABEL_29:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v233 + 56))(v83, 0, 1, v242);
LABEL_30:
  v241[v9[27]] = *((_BYTE *)v64 + v9[27]);
  v241[v9[28]] = *((_BYTE *)v64 + v9[28]);
  *(_QWORD *)&v241[v9[29]] = *(_QWORD *)((char *)v64 + v9[29]);
  v109 = *(int *)(v76 + 20);
  v110 = &v241[v109];
  v111 = (uint64_t)v64 + v109;
  swift_bridgeObjectRetain();
  v77(v110, v111, v248);
  v112 = (int *)type metadata accessor for StaticService();
  v113 = v112[5];
  v114 = &v110[v113];
  v115 = (_QWORD *)(v111 + v113);
  v116 = v115[1];
  *(_QWORD *)v114 = *v115;
  *((_QWORD *)v114 + 1) = v116;
  v110[v112[6]] = *(_BYTE *)(v111 + v112[6]);
  v110[v112[7]] = *(_BYTE *)(v111 + v112[7]);
  v110[v112[8]] = *(_BYTE *)(v111 + v112[8]);
  v110[v112[9]] = *(_BYTE *)(v111 + v112[9]);
  v117 = v112[10];
  v118 = &v110[v117];
  v119 = v111 + v117;
  swift_bridgeObjectRetain();
  v77(v118, v119, v248);
  v120 = v112[11];
  v121 = &v110[v120];
  v122 = v111 + v120;
  *(_QWORD *)v121 = *(_QWORD *)v122;
  v121[8] = *(_BYTE *)(v122 + 8);
  v123 = v112[12];
  v124 = &v110[v123];
  v125 = (char *)(v111 + v123);
  if (v236((char *)(v111 + v123), 1, v238))
  {
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    v77(v124, (uint64_t)v125, v248);
    v127 = v238[5];
    v128 = &v124[v127];
    v129 = &v125[v127];
    v130 = *((_QWORD *)v129 + 1);
    *(_QWORD *)v128 = *(_QWORD *)v129;
    *((_QWORD *)v128 + 1) = v130;
    v131 = v238[6];
    v132 = &v124[v131];
    v133 = &v125[v131];
    v134 = *((_QWORD *)v133 + 1);
    *(_QWORD *)v132 = *(_QWORD *)v133;
    *((_QWORD *)v132 + 1) = v134;
    v135 = v238[7];
    v136 = &v124[v135];
    v137 = &v125[v135];
    v138 = v64;
    v139 = *((_QWORD *)v137 + 1);
    *(_QWORD *)v136 = *(_QWORD *)v137;
    *((_QWORD *)v136 + 1) = v139;
    v140 = v238[8];
    v141 = &v124[v140];
    v142 = &v125[v140];
    v143 = *((_QWORD *)v142 + 1);
    *(_QWORD *)v141 = *(_QWORD *)v142;
    *((_QWORD *)v141 + 1) = v143;
    v124[v238[9]] = v125[v238[9]];
    v124[v238[10]] = v125[v238[10]];
    v124[v238[11]] = v125[v238[11]];
    v144 = *(void (**)(char *, _QWORD, uint64_t, int *))(v231 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = v138;
    v18 = v241;
    swift_bridgeObjectRetain();
    v62 = v248;
    swift_bridgeObjectRetain();
    v144(v124, 0, 1, v238);
  }
  v145 = v112[13];
  v146 = &v110[v145];
  v147 = (const void *)(v111 + v145);
  if (v240((char *)(v111 + v145), 1, v247))
  {
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v243 + 16))(v146, v147, v247);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v146, 0, 1, v247);
  }
  *(_QWORD *)&v110[v112[14]] = *(_QWORD *)(v111 + v112[14]);
  v149 = v112[15];
  v150 = &v110[v149];
  v151 = (_QWORD *)(v111 + v149);
  v152 = v151[1];
  *(_QWORD *)v150 = *v151;
  *((_QWORD *)v150 + 1) = v152;
  v110[v112[16]] = *(_BYTE *)(v111 + v112[16]);
  v110[v112[17]] = *(_BYTE *)(v111 + v112[17]);
  v110[v112[18]] = *(_BYTE *)(v111 + v112[18]);
  v110[v112[19]] = *(_BYTE *)(v111 + v112[19]);
  v153 = v112[20];
  v154 = &v110[v153];
  v155 = (_QWORD *)(v111 + v153);
  v156 = v155[1];
  *(_QWORD *)v154 = *v155;
  *((_QWORD *)v154 + 1) = v156;
  v110[v112[21]] = *(_BYTE *)(v111 + v112[21]);
  v110[v112[22]] = *(_BYTE *)(v111 + v112[22]);
  v110[v112[23]] = *(_BYTE *)(v111 + v112[23]);
  v157 = v112[24];
  v158 = &v110[v157];
  v159 = (void *)(v111 + v157);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v246(v159, 1, v62))
  {
    v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
  }
  else
  {
    v249(v158, (char *)v159, v62);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v158, 0, 1, v62);
  }
  *(_QWORD *)&v110[v112[25]] = *(_QWORD *)(v111 + v112[25]);
  *(_QWORD *)&v110[v112[26]] = *(_QWORD *)(v111 + v112[26]);
  v161 = v112[27];
  v162 = &v110[v161];
  v163 = (_QWORD *)(v111 + v161);
  v164 = v163[1];
  *(_QWORD *)v162 = *v163;
  *((_QWORD *)v162 + 1) = v164;
  v165 = v112[28];
  v166 = &v110[v165];
  v167 = (char *)(v111 + v165);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v168 = v242;
  if (!v234(v167, 1, v242))
  {
    v170 = (void (*)(char *, const void *, uint64_t))v249;
    v249(v166, v167, v248);
    v171 = *(int *)(v242 + 20);
    v172 = &v166[v171];
    v173 = &v167[v171];
    v239 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v174 = swift_getEnumCaseMultiPayload();
    if (v174 == 2)
    {
      v184 = *((_QWORD *)v173 + 1);
      *(_QWORD *)v172 = *(_QWORD *)v173;
      *((_QWORD *)v172 + 1) = v184;
      v232 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v185 = v232[5];
      v237 = &v172[v185];
      v186 = &v173[v185];
      swift_bridgeObjectRetain();
      v235 = v186;
      if (v240(v186, 1, v247))
      {
LABEL_48:
        v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v237, v235, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
LABEL_51:
        v190 = v232[6];
        v191 = &v172[v190];
        v192 = &v173[v190];
        v193 = *((_QWORD *)v192 + 1);
        *(_QWORD *)v191 = *(_QWORD *)v192;
        *((_QWORD *)v191 + 1) = v193;
        v194 = v232[7];
        v195 = &v172[v194];
        v196 = &v173[v194];
        v197 = *((_QWORD *)v196 + 1);
        *(_QWORD *)v195 = *(_QWORD *)v196;
        *((_QWORD *)v195 + 1) = v197;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v172[*(int *)(v198 + 48)] = v173[*(int *)(v198 + 48)];
        swift_storeEnumTagMultiPayload();
        v168 = v242;
LABEL_52:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v233 + 56))(v166, 0, 1, v168);
        goto LABEL_53;
      }
    }
    else
    {
      if (v174 != 1)
      {
        if (v174)
        {
          memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
        }
        else
        {
          v249(v172, v173, v248);
          v175 = (int *)type metadata accessor for StaticHH2Update(0);
          v172[v175[5]] = v173[v175[5]];
          v176 = v175[6];
          v177 = &v172[v176];
          v178 = &v173[v176];
          v180 = *(_QWORD *)v178;
          v179 = *((_QWORD *)v178 + 1);
          *(_QWORD *)v177 = v180;
          *((_QWORD *)v177 + 1) = v179;
          v181 = v175[7];
          v182 = &v172[v181];
          v183 = &v173[v181];
          v182[8] = v183[8];
          *(_QWORD *)v182 = *(_QWORD *)v183;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_52;
      }
      v187 = *((_QWORD *)v173 + 1);
      *(_QWORD *)v172 = *(_QWORD *)v173;
      *((_QWORD *)v172 + 1) = v187;
      v232 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v188 = v232[5];
      v237 = &v172[v188];
      v186 = &v173[v188];
      swift_bridgeObjectRetain();
      v235 = v186;
      if (v240(v186, 1, v247))
        goto LABEL_48;
    }
    (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v237, v186, v247);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v237, 0, 1, v247);
    goto LABEL_51;
  }
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
  v170 = (void (*)(char *, const void *, uint64_t))v249;
LABEL_53:
  v110[v112[29]] = *(_BYTE *)(v111 + v112[29]);
  *(_QWORD *)&v110[v112[30]] = *(_QWORD *)(v111 + v112[30]);
  v199 = v112[31];
  v200 = &v110[v199];
  v201 = (const void *)(v111 + v199);
  swift_bridgeObjectRetain();
  if (v246(v201, 1, v248))
  {
    v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
  }
  else
  {
    v170(v200, v201, v248);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v200, 0, 1, v248);
  }
  v203 = v112[32];
  v204 = &v110[v203];
  v205 = v111 + v203;
  *(_WORD *)v204 = *(_WORD *)v205;
  v204[2] = *(_BYTE *)(v205 + 2);
  v206 = v112[33];
  v207 = &v110[v206];
  v208 = v111 + v206;
  *(_DWORD *)(v207 + 7) = *(_DWORD *)(v208 + 7);
  *(_QWORD *)v207 = *(_QWORD *)v208;
  v209 = *(int *)(a3 + 24);
  v210 = &v18[v209];
  v211 = (char *)v64 + v209;
  v170(&v18[v209], v211, v248);
  v212 = (int *)type metadata accessor for StaticCharacteristic();
  v210[v212[5]] = v211[v212[5]];
  v213 = v212[6];
  v214 = &v210[v213];
  v215 = &v211[v213];
  v216 = (void (*)(uint64_t, uint64_t, uint64_t))v170;
  v217 = *(_QWORD *)v215;
  v218 = *((_QWORD *)v215 + 1);
  v219 = v215[16];
  sub_23E1E8058(*(_QWORD *)v215, v218, v219);
  *(_QWORD *)v214 = v217;
  *((_QWORD *)v214 + 1) = v218;
  v214[16] = v219;
  (*(void (**)(char *, char *, uint64_t))(v243 + 16))(&v210[v212[7]], &v211[v212[7]], v247);
  v210[v212[8]] = v211[v212[8]];
  *(_QWORD *)&v210[v212[9]] = *(_QWORD *)&v211[v212[9]];
  v216((uint64_t)&v210[v212[10]], (uint64_t)&v211[v212[10]], v248);
  v220 = v212[11];
  v221 = &v210[v220];
  v222 = (uint64_t *)&v211[v220];
  v223 = v222[3];
  if (v223 >> 8 == 0xFFFFFFFF)
  {
    v224 = *((_OWORD *)v222 + 1);
    *(_OWORD *)v221 = *(_OWORD *)v222;
    *((_OWORD *)v221 + 1) = v224;
    *((_QWORD *)v221 + 4) = v222[4];
  }
  else
  {
    v225 = *v222;
    v226 = v222[1];
    v227 = v222[2];
    v228 = v222[4];
    sub_23E1E80B8(*v222, v226, v227, v222[3]);
    *(_QWORD *)v221 = v225;
    *((_QWORD *)v221 + 1) = v226;
    *((_QWORD *)v221 + 2) = v227;
    *((_QWORD *)v221 + 3) = v223;
    *((_QWORD *)v221 + 4) = v228;
  }
  return v18;
}

uint64_t destroy for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t result;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v37)(void);
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = (int *)type metadata accessor for StaticAccessory(0);
  swift_bridgeObjectRelease();
  v8 = a1 + v7[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6(v8, v4);
  else
    swift_bridgeObjectRelease();
  v9 = a1 + v7[7];
  v10 = type metadata accessor for StaticDeviceMetadata();
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v36(v9, 1, v10))
  {
    v6(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = a1 + v7[8];
  v12 = sub_23E536F20();
  v39 = *(_QWORD *)(v12 - 8);
  v37 = *(unsigned int (**)(void))(v39 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v37)(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v11, v12);
  v6(a1 + v7[11], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + v7[21];
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v40(v13, 1, v4))
    v6(v13, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = a1 + v7[26];
  v15 = type metadata accessor for StaticSoftwareUpdate(0);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  v38 = a2;
  if (!v16(v14, 1, v15))
  {
    v6(v14, v4);
    v17 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v35 = v17 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v37())
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_19;
      v6(v17, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  v19 = a1 + *(int *)(a2 + 20);
  v6(v19, v4);
  v20 = (int *)type metadata accessor for StaticService();
  swift_bridgeObjectRelease();
  v6(v19 + v20[10], v4);
  v21 = v19 + v20[12];
  if (!v36(v21, 1, v10))
  {
    v6(v21, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v22 = v19 + v20[13];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v37)(v22, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v22, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v19 + v20[24];
  v24 = v38;
  if (!v40(v23, 1, v4))
    v6(v23, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v19 + v20[28];
  if (!v16(v25, 1, v15))
  {
    v6(v25, v4);
    v26 = v25 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v27 = swift_getEnumCaseMultiPayload();
    if (v27 == 2 || v27 == 1)
    {
      swift_bridgeObjectRelease();
      v28 = v26 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v37)(v28, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v28, v12);
      swift_bridgeObjectRelease();
      v24 = v38;
    }
    else
    {
      if (v27)
        goto LABEL_34;
      v6(v26, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_34:
  swift_bridgeObjectRelease();
  v29 = v19 + v20[31];
  if (!v40(v29, 1, v4))
    v6(v29, v4);
  v30 = a1 + *(int *)(v24 + 24);
  v6(v30, v4);
  v31 = (int *)type metadata accessor for StaticCharacteristic();
  sub_23E1EAB20(*(_QWORD *)(v30 + v31[6]), *(_QWORD *)(v30 + v31[6] + 8), *(_BYTE *)(v30 + v31[6] + 16));
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30 + v31[7], v12);
  result = ((uint64_t (*)(uint64_t, uint64_t))v6)(v30 + v31[10], v4);
  v33 = (uint64_t *)(v30 + v31[11]);
  v34 = v33[3];
  if (v34 >> 8 != 0xFFFFFFFF)
    return sub_23E1EAB4C(*v33, v33[1], v33[2], v34);
  return result;
}

uint64_t initializeWithCopy for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, int *);
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const void *v55;
  unsigned int (*v56)(const void *, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int EnumCaseMultiPayload;
  int *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, _QWORD, uint64_t, int *);
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(void *, const void *, uint64_t);
  uint64_t v164;
  char *v165;
  char *v166;
  int v167;
  int *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  int *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  void (*v220)(uint64_t, uint64_t, uint64_t);
  uint64_t v221;
  unint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  unint64_t v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int *updated;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  unsigned int (*v239)(char *, uint64_t, uint64_t);
  int *v240;
  int *v241;
  unsigned int (*v242)(char *, uint64_t, int *);
  int *v243;
  uint64_t v244;
  unsigned int (*v245)(const void *, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int (*v249)(const void *, uint64_t, uint64_t);
  uint64_t v251;
  uint64_t v252;
  void (*v253)(uint64_t, uint64_t, uint64_t);
  uint64_t v254;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for StaticAccessory(0);
  v9 = v8[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v8[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v14, (uint64_t)v15, v5);
  }
  else
  {
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  v17 = v7;
  swift_storeEnumTagMultiPayload();
  v18 = v8[7];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = (int *)type metadata accessor for StaticDeviceMetadata();
  v235 = *((_QWORD *)v21 - 1);
  v242 = *(unsigned int (**)(char *, uint64_t, int *))(v235 + 48);
  v253 = v7;
  v248 = v6;
  v254 = v5;
  v243 = v21;
  if (v242(v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v19, (uint64_t)v20, v5);
    v23 = v21[5];
    v24 = &v19[v23];
    v25 = &v20[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v21[6];
    v28 = &v19[v27];
    v29 = &v20[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = v21[7];
    v32 = &v19[v31];
    v33 = &v20[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = v21[8];
    v36 = &v19[v35];
    v37 = &v20[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v19[v21[9]] = v20[v21[9]];
    v19[v21[10]] = v20[v21[10]];
    v19[v21[11]] = v20[v21[11]];
    v39 = *(void (**)(char *, _QWORD, uint64_t, int *))(v235 + 56);
    swift_bridgeObjectRetain();
    v17 = v253;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v19, 0, 1, v21);
  }
  v40 = v8[8];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = sub_23E536F20();
  v44 = *(_QWORD *)(v43 - 8);
  v245 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
  v252 = v43;
  v247 = v44;
  if (v245(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = v8[9];
  v47 = a1 + v46;
  v48 = a2 + v46;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  v17(a1 + v8[11], a2 + v8[11], v254);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  v49 = v8[13];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  *(_BYTE *)(a1 + v8[18]) = *(_BYTE *)(a2 + v8[18]);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  *(_QWORD *)(a1 + v8[20]) = *(_QWORD *)(a2 + v8[20]);
  v53 = v8[21];
  v251 = a1;
  v54 = (void *)(a1 + v53);
  v55 = (const void *)(a2 + v53);
  v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v248 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v249 = v56;
  if (v56(v55, 1, v254))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = (void (*)(char *, char *, uint64_t))v253;
  }
  else
  {
    v58 = (void (*)(char *, char *, uint64_t))v253;
    v253((uint64_t)v54, (uint64_t)v55, v254);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v54, 0, 1, v254);
  }
  *(_WORD *)(v251 + v8[22]) = *(_WORD *)(a2 + v8[22]);
  v59 = v8[23];
  v60 = (_QWORD *)(v251 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  *(_QWORD *)(v251 + v8[24]) = *(_QWORD *)(a2 + v8[24]);
  *(_BYTE *)(v251 + v8[25]) = *(_BYTE *)(a2 + v8[25]);
  v63 = v8[26];
  v64 = (char *)(v251 + v63);
  v65 = (char *)(a2 + v63);
  v66 = type metadata accessor for StaticSoftwareUpdate(0);
  v238 = *(_QWORD *)(v66 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v239 = v67;
  v68 = v67(v65, 1, v66);
  v69 = v252;
  v246 = v66;
  if (v68)
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    v71 = v254;
    goto LABEL_28;
  }
  v58(v64, v65, v254);
  v72 = *(int *)(v66 + 20);
  v73 = &v64[v72];
  v74 = &v65[v72];
  v75 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v86 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v86;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v87 = updated[5];
      v88 = &v73[v87];
      v89 = &v74[v87];
      swift_bridgeObjectRetain();
      if (v245(v89, 1, v252))
        goto LABEL_22;
      goto LABEL_24;
    case 1:
      v90 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v90;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v91 = updated[5];
      v88 = &v73[v91];
      v89 = &v74[v91];
      swift_bridgeObjectRetain();
      if (v245(v89, 1, v252))
      {
LABEL_22:
        v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_25:
        v71 = v254;
        v93 = updated[6];
        v94 = &v73[v93];
        v95 = &v74[v93];
        v96 = *((_QWORD *)v95 + 1);
        *(_QWORD *)v94 = *(_QWORD *)v95;
        *((_QWORD *)v94 + 1) = v96;
        v97 = updated[7];
        v98 = &v73[v97];
        v99 = &v74[v97];
        v100 = *((_QWORD *)v99 + 1);
        *(_QWORD *)v98 = *(_QWORD *)v99;
        *((_QWORD *)v98 + 1) = v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v73[*(int *)(v101 + 48)] = v74[*(int *)(v101 + 48)];
        goto LABEL_26;
      }
LABEL_24:
      (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v88, v89, v252);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v88, 0, 1, v252);
      goto LABEL_25;
    case 0:
      v71 = v254;
      v58(v73, v74, v254);
      v77 = (int *)type metadata accessor for StaticHH2Update(0);
      v73[v77[5]] = v74[v77[5]];
      v78 = v77[6];
      v79 = &v73[v78];
      v80 = &v74[v78];
      v82 = *(_QWORD *)v80;
      v81 = *((_QWORD *)v80 + 1);
      *(_QWORD *)v79 = v82;
      *((_QWORD *)v79 + 1) = v81;
      v83 = v77[7];
      v84 = &v73[v83];
      v85 = &v74[v83];
      v84[8] = v85[8];
      *(_QWORD *)v84 = *(_QWORD *)v85;
      swift_bridgeObjectRetain();
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
  }
  memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  v71 = v254;
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v64, 0, 1, v246);
LABEL_28:
  *(_BYTE *)(v251 + v8[27]) = *(_BYTE *)(a2 + v8[27]);
  *(_BYTE *)(v251 + v8[28]) = *(_BYTE *)(a2 + v8[28]);
  *(_QWORD *)(v251 + v8[29]) = *(_QWORD *)(a2 + v8[29]);
  v102 = *(int *)(a3 + 20);
  v103 = (char *)(v251 + v102);
  v104 = a2;
  v105 = (char *)(a2 + v102);
  swift_bridgeObjectRetain();
  v58(v103, v105, v71);
  v106 = (int *)type metadata accessor for StaticService();
  v107 = v106[5];
  v108 = &v103[v107];
  v109 = &v105[v107];
  v110 = *((_QWORD *)v109 + 1);
  *(_QWORD *)v108 = *(_QWORD *)v109;
  *((_QWORD *)v108 + 1) = v110;
  v103[v106[6]] = v105[v106[6]];
  v103[v106[7]] = v105[v106[7]];
  v103[v106[8]] = v105[v106[8]];
  v103[v106[9]] = v105[v106[9]];
  v111 = v106[10];
  v112 = &v103[v111];
  v113 = &v105[v111];
  swift_bridgeObjectRetain();
  v58(v112, v113, v71);
  v114 = v106[11];
  v115 = &v103[v114];
  v116 = &v105[v114];
  *(_QWORD *)v115 = *(_QWORD *)v116;
  v115[8] = v116[8];
  v117 = v106[12];
  v118 = &v103[v117];
  v119 = &v105[v117];
  if (v242(&v105[v117], 1, v243))
  {
    v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    v58(v118, v119, v71);
    v121 = v243[5];
    v122 = &v118[v121];
    v123 = &v119[v121];
    v124 = *((_QWORD *)v123 + 1);
    *(_QWORD *)v122 = *(_QWORD *)v123;
    *((_QWORD *)v122 + 1) = v124;
    v125 = v243[6];
    v126 = &v118[v125];
    v127 = &v119[v125];
    v128 = *((_QWORD *)v127 + 1);
    *(_QWORD *)v126 = *(_QWORD *)v127;
    *((_QWORD *)v126 + 1) = v128;
    v129 = v243[7];
    v130 = &v118[v129];
    v131 = &v119[v129];
    v132 = *((_QWORD *)v131 + 1);
    *(_QWORD *)v130 = *(_QWORD *)v131;
    *((_QWORD *)v130 + 1) = v132;
    v133 = v243[8];
    v134 = &v118[v133];
    v135 = &v119[v133];
    v136 = *((_QWORD *)v135 + 1);
    *(_QWORD *)v134 = *(_QWORD *)v135;
    *((_QWORD *)v134 + 1) = v136;
    v118[v243[9]] = v119[v243[9]];
    v118[v243[10]] = v119[v243[10]];
    v118[v243[11]] = v119[v243[11]];
    v137 = *(void (**)(char *, _QWORD, uint64_t, int *))(v235 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69 = v252;
    swift_bridgeObjectRetain();
    v71 = v254;
    swift_bridgeObjectRetain();
    v137(v118, 0, 1, v243);
  }
  v138 = v106[13];
  v139 = &v103[v138];
  v140 = &v105[v138];
  if (v245(&v105[v138], 1, v69))
  {
    v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v139, v140, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v139, 0, 1, v69);
  }
  *(_QWORD *)&v103[v106[14]] = *(_QWORD *)&v105[v106[14]];
  v142 = v106[15];
  v143 = &v103[v142];
  v144 = &v105[v142];
  v145 = *((_QWORD *)v144 + 1);
  *(_QWORD *)v143 = *(_QWORD *)v144;
  *((_QWORD *)v143 + 1) = v145;
  v103[v106[16]] = v105[v106[16]];
  v103[v106[17]] = v105[v106[17]];
  v103[v106[18]] = v105[v106[18]];
  v103[v106[19]] = v105[v106[19]];
  v146 = v106[20];
  v147 = &v103[v146];
  v148 = &v105[v146];
  v149 = *((_QWORD *)v148 + 1);
  *(_QWORD *)v147 = *(_QWORD *)v148;
  *((_QWORD *)v147 + 1) = v149;
  v103[v106[21]] = v105[v106[21]];
  v103[v106[22]] = v105[v106[22]];
  v103[v106[23]] = v105[v106[23]];
  v150 = v106[24];
  v151 = &v103[v150];
  v152 = &v105[v150];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v249(v152, 1, v71))
  {
    v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
  }
  else
  {
    v253((uint64_t)v151, (uint64_t)v152, v71);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v151, 0, 1, v71);
  }
  *(_QWORD *)&v103[v106[25]] = *(_QWORD *)&v105[v106[25]];
  *(_QWORD *)&v103[v106[26]] = *(_QWORD *)&v105[v106[26]];
  v154 = v106[27];
  v155 = &v103[v154];
  v156 = &v105[v154];
  v157 = *((_QWORD *)v156 + 1);
  *(_QWORD *)v155 = *(_QWORD *)v156;
  *((_QWORD *)v155 + 1) = v157;
  v158 = v106[28];
  v159 = &v103[v158];
  v160 = &v105[v158];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v161 = v246;
  if (v239(v160, 1, v246))
  {
    v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
    v163 = (void (*)(void *, const void *, uint64_t))v253;
  }
  else
  {
    v163 = (void (*)(void *, const void *, uint64_t))v253;
    v253((uint64_t)v159, (uint64_t)v160, v254);
    v164 = *(int *)(v246 + 20);
    v165 = &v159[v164];
    v166 = &v160[v164];
    v244 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v167 = swift_getEnumCaseMultiPayload();
    if (v167 == 2)
    {
      v177 = *((_QWORD *)v166 + 1);
      *(_QWORD *)v165 = *(_QWORD *)v166;
      *((_QWORD *)v165 + 1) = v177;
      v240 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v178 = v240[5];
      v236 = &v165[v178];
      v179 = &v166[v178];
      swift_bridgeObjectRetain();
      if (v245(v179, 1, v252))
      {
        v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v236, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v236, v179, v252);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v236, 0, 1, v252);
      }
      a2 = v104;
      v185 = v240[6];
      v186 = &v165[v185];
      v187 = &v166[v185];
      v188 = *((_QWORD *)v187 + 1);
      *(_QWORD *)v186 = *(_QWORD *)v187;
      *((_QWORD *)v186 + 1) = v188;
      v189 = v240[7];
      v190 = &v165[v189];
      v191 = &v166[v189];
      v192 = *((_QWORD *)v191 + 1);
      *(_QWORD *)v190 = *(_QWORD *)v191;
      *((_QWORD *)v190 + 1) = v192;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v165[*(int *)(v193 + 48)] = v166[*(int *)(v193 + 48)];
      swift_storeEnumTagMultiPayload();
      v161 = v246;
    }
    else if (v167 == 1)
    {
      v181 = *((_QWORD *)v166 + 1);
      *(_QWORD *)v165 = *(_QWORD *)v166;
      *((_QWORD *)v165 + 1) = v181;
      v241 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v182 = v241[5];
      v237 = &v165[v182];
      v183 = &v166[v182];
      swift_bridgeObjectRetain();
      if (v245(v183, 1, v252))
      {
        v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v237, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v247 + 16))(v237, v183, v252);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v237, 0, 1, v252);
      }
      v194 = v241[6];
      v195 = &v165[v194];
      v196 = &v166[v194];
      v197 = *((_QWORD *)v196 + 1);
      *(_QWORD *)v195 = *(_QWORD *)v196;
      *((_QWORD *)v195 + 1) = v197;
      v198 = v241[7];
      v199 = &v165[v198];
      v200 = &v166[v198];
      v201 = *((_QWORD *)v200 + 1);
      *(_QWORD *)v199 = *(_QWORD *)v200;
      *((_QWORD *)v199 + 1) = v201;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v165[*(int *)(v202 + 48)] = v166[*(int *)(v202 + 48)];
      swift_storeEnumTagMultiPayload();
      v161 = v246;
      a2 = v104;
    }
    else if (v167)
    {
      memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
    }
    else
    {
      v253((uint64_t)v165, (uint64_t)v166, v254);
      v168 = (int *)type metadata accessor for StaticHH2Update(0);
      v165[v168[5]] = v166[v168[5]];
      v169 = v168[6];
      v170 = &v165[v169];
      v171 = &v166[v169];
      v173 = *(_QWORD *)v171;
      v172 = *((_QWORD *)v171 + 1);
      *(_QWORD *)v170 = v173;
      *((_QWORD *)v170 + 1) = v172;
      v174 = v168[7];
      v175 = &v165[v174];
      v176 = &v166[v174];
      v175[8] = v176[8];
      *(_QWORD *)v175 = *(_QWORD *)v176;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v159, 0, 1, v161);
  }
  v103[v106[29]] = v105[v106[29]];
  *(_QWORD *)&v103[v106[30]] = *(_QWORD *)&v105[v106[30]];
  v203 = v106[31];
  v204 = &v103[v203];
  v205 = &v105[v203];
  swift_bridgeObjectRetain();
  if (v249(v205, 1, v254))
  {
    v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
  }
  else
  {
    v163(v204, v205, v254);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v204, 0, 1, v254);
  }
  v207 = v106[32];
  v208 = &v103[v207];
  v209 = &v105[v207];
  *(_WORD *)v208 = *(_WORD *)v209;
  v208[2] = v209[2];
  v210 = v106[33];
  v211 = &v103[v210];
  v212 = &v105[v210];
  *(_DWORD *)(v211 + 7) = *(_DWORD *)(v212 + 7);
  *(_QWORD *)v211 = *(_QWORD *)v212;
  v213 = *(int *)(a3 + 24);
  v214 = v251 + v213;
  v215 = (char *)(a2 + v213);
  v163((void *)(v251 + v213), v215, v254);
  v216 = (int *)type metadata accessor for StaticCharacteristic();
  *(_BYTE *)(v214 + v216[5]) = v215[v216[5]];
  v217 = v216[6];
  v218 = v214 + v217;
  v219 = &v215[v217];
  v220 = (void (*)(uint64_t, uint64_t, uint64_t))v163;
  v221 = *(_QWORD *)v219;
  v222 = *((_QWORD *)v219 + 1);
  v223 = v219[16];
  sub_23E1E8058(*(_QWORD *)v219, v222, v223);
  *(_QWORD *)v218 = v221;
  *(_QWORD *)(v218 + 8) = v222;
  *(_BYTE *)(v218 + 16) = v223;
  (*(void (**)(uint64_t, char *, uint64_t))(v247 + 16))(v214 + v216[7], &v215[v216[7]], v252);
  *(_BYTE *)(v214 + v216[8]) = v215[v216[8]];
  *(_QWORD *)(v214 + v216[9]) = *(_QWORD *)&v215[v216[9]];
  v220(v214 + v216[10], (uint64_t)&v215[v216[10]], v254);
  v224 = v216[11];
  v225 = v214 + v224;
  v226 = (uint64_t *)&v215[v224];
  v227 = v226[3];
  if (v227 >> 8 == 0xFFFFFFFF)
  {
    v228 = *((_OWORD *)v226 + 1);
    *(_OWORD *)v225 = *(_OWORD *)v226;
    *(_OWORD *)(v225 + 16) = v228;
    *(_QWORD *)(v225 + 32) = v226[4];
  }
  else
  {
    v229 = *v226;
    v230 = v226[1];
    v231 = v226[2];
    v232 = v226[4];
    sub_23E1E80B8(*v226, v230, v231, v226[3]);
    *(_QWORD *)v225 = v229;
    *(_QWORD *)(v225 + 8) = v230;
    *(_QWORD *)(v225 + 16) = v231;
    *(_QWORD *)(v225 + 24) = v227;
    *(_QWORD *)(v225 + 32) = v232;
  }
  return v251;
}

uint64_t assignWithCopy for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  uint64_t (*v18)(uint64_t, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  unsigned int (*v39)(void *, uint64_t, uint64_t);
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char v107;
  uint64_t updated;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int *v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  int v141;
  int v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  void (*v155)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  char *v160;
  unsigned int v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  void *v171;
  const void *v172;
  int v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  int v182;
  int v183;
  void (*v184)(uint64_t, char *, uint64_t);
  uint64_t v185;
  _QWORD *v186;
  char *v187;
  uint64_t v188;
  int v189;
  int *v190;
  uint64_t v191;
  _QWORD *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char v197;
  size_t v198;
  void *v199;
  char *v200;
  uint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  _QWORD *v208;
  _QWORD *v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  _QWORD *v214;
  char *v215;
  uint64_t v216;
  int v217;
  int *v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  char *v238;
  uint64_t v239;
  _QWORD *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  char *v245;
  uint64_t v246;
  _QWORD *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  const void *v252;
  int v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __int16 *v258;
  __int16 v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  char v273;
  uint64_t v274;
  unint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t *v279;
  unint64_t v280;
  uint64_t v281;
  unint64_t v282;
  __int128 v283;
  __int128 v284;
  uint64_t v285;
  __int128 v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  char *v309;
  uint64_t v310;
  _QWORD *v311;
  char *v312;
  uint64_t v313;
  char *__dst;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t (*v321)(uint64_t, uint64_t, int *);
  uint64_t (*v322)(uint64_t, uint64_t, int *);
  char *v323;
  char *v324;
  unsigned int (*v325)(char *, uint64_t, uint64_t);
  int *v326;
  int *v327;
  int *v328;
  int *v329;
  uint64_t v330;
  uint64_t (*v331)(uint64_t, uint64_t, uint64_t);
  int *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void (*v338)(uint64_t, uint64_t, uint64_t);
  uint64_t v339;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v338 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v338(a1, a2, v5);
  v7 = (int *)type metadata accessor for StaticAccessory(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v11 = v7[6];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (_QWORD *)(a2 + v11);
    sub_23E1E2FA0(a1 + v11, type metadata accessor for StaticAccessory.DeviceIdentifier);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v12, v13, v5);
    }
    else
    {
      *v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v14 = v7[7];
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(a2 + v14);
  v17 = (int *)type metadata accessor for StaticDeviceMetadata();
  v320 = *((_QWORD *)v17 - 1);
  v18 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v320 + 48);
  v19 = v18((uint64_t)v15, 1, v17);
  v20 = v18((uint64_t)v16, 1, v17);
  v330 = v6;
  v339 = a2;
  v322 = v18;
  v326 = v17;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v15, v16, v5);
      v21 = v17[5];
      v22 = &v15[v21];
      v23 = &v16[v21];
      *v22 = *v23;
      v22[1] = v23[1];
      v24 = v17[6];
      v25 = &v15[v24];
      v26 = &v16[v24];
      *v25 = *v26;
      v25[1] = v26[1];
      v27 = v17[7];
      v28 = &v15[v27];
      v29 = &v16[v27];
      *v28 = *v29;
      v28[1] = v29[1];
      v30 = v17[8];
      v31 = &v15[v30];
      v32 = &v16[v30];
      *v31 = *v32;
      v31[1] = v32[1];
      v15[v17[9]] = v16[v17[9]];
      v15[v17[10]] = v16[v17[10]];
      v15[v17[11]] = v16[v17[11]];
      v33 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v320 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_11:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  v338((uint64_t)v15, (uint64_t)v16, v5);
  v83 = v17[5];
  v84 = &v15[v83];
  v85 = &v16[v83];
  *v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = v17[6];
  v87 = &v15[v86];
  v88 = &v16[v86];
  *v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v89 = v17[7];
  v90 = &v15[v89];
  v91 = &v16[v89];
  *v90 = *v91;
  v90[1] = v91[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v92 = v17[8];
  v93 = &v15[v92];
  v94 = &v16[v92];
  *v93 = *v94;
  v93[1] = v94[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v17[9]] = v16[v17[9]];
  v15[v17[10]] = v16[v17[10]];
  v15[v17[11]] = v16[v17[11]];
LABEL_12:
  v35 = v7[8];
  v36 = (void *)(a1 + v35);
  v37 = (void *)(a2 + v35);
  v38 = sub_23E536F20();
  v335 = *(_QWORD *)(v38 - 8);
  v39 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v335 + 48);
  v40 = v39(v36, 1, v38);
  v325 = (unsigned int (*)(char *, uint64_t, uint64_t))v39;
  v41 = v39(v37, 1, v38);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v335 + 16))(v36, v37, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v36, 0, 1, v38);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v335 + 8))(v36, v38);
LABEL_17:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v335 + 24))(v36, v37, v38);
LABEL_18:
  v43 = v7[9];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *v45;
  *(_BYTE *)(v44 + 8) = *((_BYTE *)v45 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(a1 + v7[10]) = *(_BYTE *)(a2 + v7[10]);
  v338(a1 + v7[11], a2 + v7[11], v5);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(a2 + v7[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = v7[13];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(a2 + v7[14]);
  *(_BYTE *)(a1 + v7[15]) = *(_BYTE *)(a2 + v7[15]);
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(a2 + v7[16]);
  *(_BYTE *)(a1 + v7[17]) = *(_BYTE *)(a2 + v7[17]);
  *(_BYTE *)(a1 + v7[18]) = *(_BYTE *)(a2 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(a2 + v7[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(a2 + v7[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v7[21];
  v51 = (void *)(a1 + v50);
  v52 = (const void *)(a2 + v50);
  v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v54 = v53(a1 + v50, 1, v5);
  v331 = v53;
  v55 = v53((uint64_t)v52, 1, v5);
  v337 = v38;
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v51, v52, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v51, 0, 1, v5);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v51, v5);
LABEL_23:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_24;
  }
  v338((uint64_t)v51, (uint64_t)v52, v5);
LABEL_24:
  *(_WORD *)(a1 + v7[22]) = *(_WORD *)(a2 + v7[22]);
  v57 = v7[23];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)(a2 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[24]) = *(_QWORD *)(a2 + v7[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[25]) = *(_BYTE *)(a2 + v7[25]);
  v60 = v7[26];
  v61 = (char *)(a1 + v60);
  v62 = (char *)(a2 + v60);
  v63 = type metadata accessor for StaticSoftwareUpdate(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v333 = (int *)v63;
  v321 = (uint64_t (*)(uint64_t, uint64_t, int *))v65;
  v67 = v65(v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      v68 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v68(v61, v62, v5);
      v69 = *(int *)(v63 + 20);
      v70 = &v61[v69];
      v71 = &v62[v69];
      v317 = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v73 = v339;
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v109 = *(int *)(updated + 20);
        __dst = &v70[v109];
        v315 = updated;
        v110 = &v71[v109];
        swift_bridgeObjectRetain();
        if (v325(v110, 1, v337))
        {
LABEL_44:
          v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
LABEL_52:
          v120 = *(int *)(v315 + 24);
          v121 = &v70[v120];
          v122 = &v71[v120];
          *(_QWORD *)v121 = *(_QWORD *)v122;
          *((_QWORD *)v121 + 1) = *((_QWORD *)v122 + 1);
          v123 = *(int *)(v315 + 28);
          v124 = &v70[v123];
          v125 = &v71[v123];
          *(_QWORD *)v124 = *(_QWORD *)v125;
          *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          v70[*(int *)(v126 + 48)] = v71[*(int *)(v126 + 48)];
          goto LABEL_53;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v70, v71, *(_QWORD *)(*(v317 - 1) + 64));
LABEL_54:
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v64 + 56))(v61, 0, 1, v333);
            goto LABEL_55;
          }
          v68(v70, v71, v5);
          v74 = (int *)type metadata accessor for StaticHH2Update(0);
          v70[v74[5]] = v71[v74[5]];
          v75 = v74[6];
          v76 = &v70[v75];
          v77 = &v71[v75];
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
          v78 = v74[7];
          v79 = &v70[v78];
          v80 = &v71[v78];
          v81 = v80[8];
          *(_QWORD *)v79 = *(_QWORD *)v80;
          v79[8] = v81;
          swift_bridgeObjectRetain();
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_54;
        }
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
        v111 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v112 = *(int *)(v111 + 20);
        __dst = &v70[v112];
        v315 = v111;
        v110 = &v71[v112];
        swift_bridgeObjectRetain();
        if (v325(v110, 1, v337))
          goto LABEL_44;
      }
      (*(void (**)(char *, char *, uint64_t))(v335 + 16))(__dst, v110, v337);
      v73 = v339;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(__dst, 0, 1, v337);
      goto LABEL_52;
    }
LABEL_32:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    v73 = v339;
    goto LABEL_55;
  }
  if (v67)
  {
    sub_23E1E2FA0((uint64_t)v61, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_32;
  }
  v338((uint64_t)v61, (uint64_t)v62, v5);
  v73 = v339;
  if (a1 == v339)
    goto LABEL_55;
  v95 = *(int *)(v63 + 20);
  v96 = &v61[v95];
  v97 = &v62[v95];
  sub_23E1E2FA0((uint64_t)v96, type metadata accessor for StaticSoftwareUpdate.Kind);
  v98 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v99 = swift_getEnumCaseMultiPayload();
  if (v99 == 2)
  {
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
    v114 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v115 = *(int *)(v114 + 20);
    v316 = v114;
    v318 = &v96[v115];
    v116 = &v97[v115];
    swift_bridgeObjectRetain();
    if (v325(v116, 1, v337))
    {
LABEL_47:
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v318, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
LABEL_124:
      v300 = *(int *)(v316 + 24);
      v301 = &v96[v300];
      v302 = &v97[v300];
      *(_QWORD *)v301 = *(_QWORD *)v302;
      *((_QWORD *)v301 + 1) = *((_QWORD *)v302 + 1);
      v303 = *(int *)(v316 + 28);
      v304 = &v96[v303];
      v305 = &v97[v303];
      *(_QWORD *)v304 = *(_QWORD *)v305;
      *((_QWORD *)v304 + 1) = *((_QWORD *)v305 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v96[*(int *)(v306 + 48)] = v97[*(int *)(v306 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_55;
    }
LABEL_123:
    (*(void (**)(char *, char *, uint64_t))(v335 + 16))(v318, v116, v337);
    v73 = v339;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v318, 0, 1, v337);
    goto LABEL_124;
  }
  if (v99 == 1)
  {
    *(_QWORD *)v96 = *(_QWORD *)v97;
    *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
    v118 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v119 = *(int *)(v118 + 20);
    v316 = v118;
    v318 = &v96[v119];
    v116 = &v97[v119];
    swift_bridgeObjectRetain();
    if (v325(v116, 1, v337))
      goto LABEL_47;
    goto LABEL_123;
  }
  if (v99)
  {
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v330 + 16))(v96, v97, v5);
    v100 = (int *)type metadata accessor for StaticHH2Update(0);
    v96[v100[5]] = v97[v100[5]];
    v101 = v100[6];
    v102 = &v96[v101];
    v103 = &v97[v101];
    *(_QWORD *)v102 = *(_QWORD *)v103;
    *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
    v104 = v100[7];
    v105 = &v96[v104];
    v106 = &v97[v104];
    v107 = v106[8];
    *(_QWORD *)v105 = *(_QWORD *)v106;
    v105[8] = v107;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_55:
  v319 = v64;
  *(_BYTE *)(a1 + v7[27]) = *(_BYTE *)(v73 + v7[27]);
  *(_BYTE *)(a1 + v7[28]) = *(_BYTE *)(v73 + v7[28]);
  *(_QWORD *)(a1 + v7[29]) = *(_QWORD *)(v73 + v7[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v127 = *(int *)(a3 + 20);
  v128 = a1 + v127;
  v129 = v73 + v127;
  v338(a1 + v127, v73 + v127, v5);
  v130 = (int *)type metadata accessor for StaticService();
  v131 = v130[5];
  v132 = (_QWORD *)(v128 + v131);
  v133 = (_QWORD *)(v129 + v131);
  *v132 = *v133;
  v132[1] = v133[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v128 + v130[6]) = *(_BYTE *)(v129 + v130[6]);
  *(_BYTE *)(v128 + v130[7]) = *(_BYTE *)(v129 + v130[7]);
  *(_BYTE *)(v128 + v130[8]) = *(_BYTE *)(v129 + v130[8]);
  *(_BYTE *)(v128 + v130[9]) = *(_BYTE *)(v129 + v130[9]);
  v338(v128 + v130[10], v129 + v130[10], v5);
  v134 = v130[11];
  v135 = v128 + v134;
  v136 = (uint64_t *)(v129 + v134);
  v137 = *v136;
  *(_BYTE *)(v135 + 8) = *((_BYTE *)v136 + 8);
  *(_QWORD *)v135 = v137;
  v138 = v130[12];
  v139 = (_BYTE *)(v128 + v138);
  v140 = (_BYTE *)(v129 + v138);
  v141 = v322(v128 + v138, 1, v326);
  v142 = v322((uint64_t)v140, 1, v326);
  v336 = v5;
  if (v141)
  {
    if (!v142)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v330 + 16))(v139, v140, v5);
      v143 = v326[5];
      v144 = &v139[v143];
      v145 = &v140[v143];
      *v144 = *v145;
      v144[1] = v145[1];
      v146 = v326[6];
      v147 = &v139[v146];
      v148 = &v140[v146];
      *v147 = *v148;
      v147[1] = v148[1];
      v149 = v326[7];
      v150 = &v139[v149];
      v151 = &v140[v149];
      *v150 = *v151;
      v150[1] = v151[1];
      v152 = v326[8];
      v153 = &v139[v152];
      v154 = &v140[v152];
      *v153 = *v154;
      v153[1] = v154[1];
      v139[v326[9]] = v140[v326[9]];
      v139[v326[10]] = v140[v326[10]];
      v139[v326[11]] = v140[v326[11]];
      v155 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v320 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v156 = v339;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v155(v139, 0, 1, v326);
      goto LABEL_62;
    }
  }
  else
  {
    if (!v142)
    {
      v338((uint64_t)v139, (uint64_t)v140, v5);
      v201 = v326[5];
      v202 = &v139[v201];
      v203 = &v140[v201];
      *v202 = *v203;
      v202[1] = v203[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v204 = v326[6];
      v205 = &v139[v204];
      v206 = &v140[v204];
      *v205 = *v206;
      v205[1] = v206[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v207 = v326[7];
      v208 = &v139[v207];
      v209 = &v140[v207];
      *v208 = *v209;
      v208[1] = v209[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v210 = v326[8];
      v211 = &v139[v210];
      v212 = &v140[v210];
      *v211 = *v212;
      v211[1] = v212[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v139[v326[9]] = v140[v326[9]];
      v139[v326[10]] = v140[v326[10]];
      v139[v326[11]] = v140[v326[11]];
      goto LABEL_61;
    }
    sub_23E1E2FA0((uint64_t)v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
LABEL_61:
  v156 = v339;
LABEL_62:
  v158 = v130[13];
  v159 = (void *)(v128 + v158);
  v160 = (char *)(v129 + v158);
  v161 = v325((char *)(v128 + v158), 1, v337);
  v162 = v325(v160, 1, v337);
  if (v161)
  {
    if (!v162)
    {
      (*(void (**)(void *, char *, uint64_t))(v335 + 16))(v159, v160, v337);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v159, 0, 1, v337);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  if (v162)
  {
    (*(void (**)(void *, uint64_t))(v335 + 8))(v159, v337);
LABEL_67:
    v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(void *, char *, uint64_t))(v335 + 24))(v159, v160, v337);
LABEL_68:
  *(_QWORD *)(v128 + v130[14]) = *(_QWORD *)(v129 + v130[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v164 = v130[15];
  v165 = (_QWORD *)(v128 + v164);
  v166 = (_QWORD *)(v129 + v164);
  *v165 = *v166;
  v165[1] = v166[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v128 + v130[16]) = *(_BYTE *)(v129 + v130[16]);
  *(_BYTE *)(v128 + v130[17]) = *(_BYTE *)(v129 + v130[17]);
  *(_BYTE *)(v128 + v130[18]) = *(_BYTE *)(v129 + v130[18]);
  *(_BYTE *)(v128 + v130[19]) = *(_BYTE *)(v129 + v130[19]);
  v167 = v130[20];
  v168 = (_QWORD *)(v128 + v167);
  v169 = (_QWORD *)(v129 + v167);
  *v168 = *v169;
  v168[1] = v169[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v128 + v130[21]) = *(_BYTE *)(v129 + v130[21]);
  *(_BYTE *)(v128 + v130[22]) = *(_BYTE *)(v129 + v130[22]);
  *(_BYTE *)(v128 + v130[23]) = *(_BYTE *)(v129 + v130[23]);
  v170 = v130[24];
  v171 = (void *)(v128 + v170);
  v172 = (const void *)(v129 + v170);
  v173 = v331(v128 + v170, 1, v5);
  v174 = v331((uint64_t)v172, 1, v5);
  if (v173)
  {
    if (!v174)
    {
      (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v171, v172, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v330 + 56))(v171, 0, 1, v5);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v174)
  {
    (*(void (**)(void *, uint64_t))(v330 + 8))(v171, v5);
LABEL_73:
    v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    goto LABEL_74;
  }
  v338((uint64_t)v171, (uint64_t)v172, v5);
LABEL_74:
  *(_QWORD *)(v128 + v130[25]) = *(_QWORD *)(v129 + v130[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v128 + v130[26]) = *(_QWORD *)(v129 + v130[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v176 = v130[27];
  v177 = v128 + v176;
  v178 = v129 + v176;
  *(_QWORD *)(v128 + v176) = *(_QWORD *)(v129 + v176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v177 + 8) = *(_QWORD *)(v178 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v179 = v130[28];
  v180 = v128 + v179;
  v181 = (char *)(v129 + v179);
  v182 = v321(v128 + v179, 1, v333);
  v183 = v321((uint64_t)v181, 1, v333);
  if (v182)
  {
    if (!v183)
    {
      v184 = *(void (**)(uint64_t, char *, uint64_t))(v330 + 16);
      v184(v180, v181, v336);
      v185 = v333[5];
      v186 = (_QWORD *)(v180 + v185);
      v187 = &v181[v185];
      v188 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v189 = swift_getEnumCaseMultiPayload();
      if (v189 == 2)
      {
        *v186 = *(_QWORD *)v187;
        v186[1] = *((_QWORD *)v187 + 1);
        v327 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v226 = v327[5];
        v323 = (char *)v186 + v226;
        v227 = &v187[v226];
        swift_bridgeObjectRetain();
        if (v325(v227, 1, v337))
        {
          v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v323, v227, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v335 + 16))(v323, v227, v337);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v323, 0, 1, v337);
        }
        v236 = v327[6];
        v237 = (_QWORD *)((char *)v186 + v236);
        v238 = &v187[v236];
        *v237 = *(_QWORD *)v238;
        v237[1] = *((_QWORD *)v238 + 1);
        v239 = v327[7];
        v240 = (_QWORD *)((char *)v186 + v239);
        v241 = &v187[v239];
        *v240 = *(_QWORD *)v241;
        v240[1] = *((_QWORD *)v241 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v186 + *(int *)(v242 + 48)) = v187[*(int *)(v242 + 48)];
        swift_storeEnumTagMultiPayload();
        v156 = v339;
        goto LABEL_107;
      }
      if (v189 == 1)
      {
        *v186 = *(_QWORD *)v187;
        v186[1] = *((_QWORD *)v187 + 1);
        v328 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v229 = v328[5];
        v324 = (char *)v186 + v229;
        v230 = &v187[v229];
        swift_bridgeObjectRetain();
        if (v325(v230, 1, v337))
        {
          v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v324, v230, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v335 + 16))(v324, v230, v337);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v324, 0, 1, v337);
        }
        v243 = v328[6];
        v244 = (_QWORD *)((char *)v186 + v243);
        v245 = &v187[v243];
        *v244 = *(_QWORD *)v245;
        v244[1] = *((_QWORD *)v245 + 1);
        v246 = v328[7];
        v247 = (_QWORD *)((char *)v186 + v246);
        v248 = &v187[v246];
        *v247 = *(_QWORD *)v248;
        v247[1] = *((_QWORD *)v248 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v186 + *(int *)(v249 + 48)) = v187[*(int *)(v249 + 48)];
      }
      else
      {
        if (v189)
        {
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
LABEL_107:
          (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v319 + 56))(v180, 0, 1, v333);
          goto LABEL_108;
        }
        v184((uint64_t)v186, v187, v336);
        v190 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v186 + v190[5]) = v187[v190[5]];
        v191 = v190[6];
        v192 = (_QWORD *)((char *)v186 + v191);
        v193 = &v187[v191];
        *v192 = *(_QWORD *)v193;
        v192[1] = *((_QWORD *)v193 + 1);
        v194 = v190[7];
        v195 = (char *)v186 + v194;
        v196 = &v187[v194];
        v197 = v196[8];
        *(_QWORD *)v195 = *(_QWORD *)v196;
        v195[8] = v197;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_107;
    }
    goto LABEL_82;
  }
  if (v183)
  {
    sub_23E1E2FA0(v180, type metadata accessor for StaticSoftwareUpdate);
LABEL_82:
    v198 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
    v199 = (void *)v180;
    v200 = v181;
    goto LABEL_83;
  }
  v338(v180, (uint64_t)v181, v336);
  if (a1 == v156)
    goto LABEL_108;
  v213 = v333[5];
  v214 = (_QWORD *)(v180 + v213);
  v215 = &v181[v213];
  sub_23E1E2FA0((uint64_t)v214, type metadata accessor for StaticSoftwareUpdate.Kind);
  v216 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v217 = swift_getEnumCaseMultiPayload();
  if (v217 != 2)
  {
    if (v217 != 1)
    {
      if (!v217)
      {
        (*(void (**)(_QWORD *, char *, uint64_t))(v330 + 16))(v214, v215, v336);
        v218 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v214 + v218[5]) = v215[v218[5]];
        v219 = v218[6];
        v220 = (_QWORD *)((char *)v214 + v219);
        v221 = &v215[v219];
        *v220 = *(_QWORD *)v221;
        v220[1] = *((_QWORD *)v221 + 1);
        v222 = v218[7];
        v223 = (char *)v214 + v222;
        v224 = &v215[v222];
        v225 = v224[8];
        *(_QWORD *)v223 = *(_QWORD *)v224;
        v223[8] = v225;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_108;
      }
      v198 = *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64);
      v199 = v214;
      v200 = v215;
LABEL_83:
      memcpy(v199, v200, v198);
      goto LABEL_108;
    }
    *v214 = *(_QWORD *)v215;
    v214[1] = *((_QWORD *)v215 + 1);
    v329 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v235 = v329[5];
    v334 = (char *)v214 + v235;
    v233 = &v215[v235];
    swift_bridgeObjectRetain();
    if (v325(v233, 1, v337))
      goto LABEL_98;
LABEL_126:
    (*(void (**)(char *, char *, uint64_t))(v335 + 16))(v334, v233, v337);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v334, 0, 1, v337);
    goto LABEL_127;
  }
  *v214 = *(_QWORD *)v215;
  v214[1] = *((_QWORD *)v215 + 1);
  v329 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v232 = v329[5];
  v334 = (char *)v214 + v232;
  v233 = &v215[v232];
  swift_bridgeObjectRetain();
  if (!v325(v233, 1, v337))
    goto LABEL_126;
LABEL_98:
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v334, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
LABEL_127:
  v307 = v329[6];
  v308 = (_QWORD *)((char *)v214 + v307);
  v309 = &v215[v307];
  *v308 = *(_QWORD *)v309;
  v308[1] = *((_QWORD *)v309 + 1);
  v310 = v329[7];
  v311 = (_QWORD *)((char *)v214 + v310);
  v312 = &v215[v310];
  *v311 = *(_QWORD *)v312;
  v311[1] = *((_QWORD *)v312 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v214 + *(int *)(v313 + 48)) = v215[*(int *)(v313 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_108:
  *(_BYTE *)(v128 + v130[29]) = *(_BYTE *)(v129 + v130[29]);
  *(_QWORD *)(v128 + v130[30]) = *(_QWORD *)(v129 + v130[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v250 = v130[31];
  v251 = (void *)(v128 + v250);
  v252 = (const void *)(v129 + v250);
  v253 = v331(v128 + v250, 1, v336);
  v254 = v331((uint64_t)v252, 1, v336);
  if (v253)
  {
    if (!v254)
    {
      (*(void (**)(void *, const void *, uint64_t))(v330 + 16))(v251, v252, v336);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v330 + 56))(v251, 0, 1, v336);
      goto LABEL_114;
    }
    goto LABEL_113;
  }
  if (v254)
  {
    (*(void (**)(void *, uint64_t))(v330 + 8))(v251, v336);
LABEL_113:
    v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
    goto LABEL_114;
  }
  v338((uint64_t)v251, (uint64_t)v252, v336);
LABEL_114:
  v256 = v130[32];
  v257 = v128 + v256;
  v258 = (__int16 *)(v129 + v256);
  v259 = *v258;
  *(_BYTE *)(v257 + 2) = *((_BYTE *)v258 + 2);
  *(_WORD *)v257 = v259;
  v260 = v130[33];
  v261 = v128 + v260;
  v262 = (uint64_t *)(v129 + v260);
  v263 = *v262;
  *(_DWORD *)(v261 + 7) = *(_DWORD *)((char *)v262 + 7);
  *(_QWORD *)v261 = v263;
  v264 = *(int *)(a3 + 24);
  v265 = a1 + v264;
  v266 = v156 + v264;
  v338(a1 + v264, v266, v336);
  v267 = (int *)type metadata accessor for StaticCharacteristic();
  *(_BYTE *)(v265 + v267[5]) = *(_BYTE *)(v266 + v267[5]);
  v268 = v267[6];
  v269 = v265 + v268;
  v270 = v266 + v268;
  v271 = *(_QWORD *)v270;
  v272 = *(_QWORD *)(v270 + 8);
  v273 = *(_BYTE *)(v270 + 16);
  sub_23E1E8058(*(_QWORD *)v270, v272, v273);
  v274 = *(_QWORD *)v269;
  v275 = *(_QWORD *)(v269 + 8);
  *(_QWORD *)v269 = v271;
  *(_QWORD *)(v269 + 8) = v272;
  v276 = *(_BYTE *)(v269 + 16);
  *(_BYTE *)(v269 + 16) = v273;
  sub_23E1EAB20(v274, v275, v276);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v335 + 24))(v265 + v267[7], v266 + v267[7], v337);
  *(_BYTE *)(v265 + v267[8]) = *(_BYTE *)(v266 + v267[8]);
  *(_QWORD *)(v265 + v267[9]) = *(_QWORD *)(v266 + v267[9]);
  v338(v265 + v267[10], v266 + v267[10], v336);
  v277 = v267[11];
  v278 = (uint64_t *)(v265 + v277);
  v279 = (uint64_t *)(v266 + v277);
  v280 = *(_QWORD *)(v265 + v277 + 24);
  v281 = *(_QWORD *)(v266 + v277 + 24);
  v282 = v281 & 0xFFFFFFFFFFFFFF00;
  if (v280 >> 8 == 0xFFFFFFFF)
  {
    if (v282 == 0xFFFFFFFF00)
    {
      v283 = *(_OWORD *)v279;
      v284 = *((_OWORD *)v279 + 1);
      v278[4] = v279[4];
      *(_OWORD *)v278 = v283;
      *((_OWORD *)v278 + 1) = v284;
    }
    else
    {
      v287 = *v279;
      v288 = v279[1];
      v289 = v279[2];
      v290 = v279[4];
      sub_23E1E80B8(v287, v288, v289, v281);
      *v278 = v287;
      v278[1] = v288;
      v278[2] = v289;
      v278[3] = v281;
      v278[4] = v290;
    }
  }
  else if (v282 == 0xFFFFFFFF00)
  {
    sub_23E3ED978(v278);
    v285 = v279[4];
    v286 = *((_OWORD *)v279 + 1);
    *(_OWORD *)v278 = *(_OWORD *)v279;
    *((_OWORD *)v278 + 1) = v286;
    v278[4] = v285;
  }
  else
  {
    v291 = *v279;
    v292 = v279[1];
    v293 = v279[2];
    v294 = v279[4];
    sub_23E1E80B8(v291, v292, v293, v281);
    v295 = *v278;
    v296 = v278[1];
    v297 = v278[2];
    v298 = v278[3];
    *v278 = v291;
    v278[1] = v292;
    v278[2] = v293;
    v278[3] = v281;
    v278[4] = v294;
    sub_23E1EAB4C(v295, v296, v297, v298);
  }
  return a1;
}

uint64_t *sub_23E3ED978(uint64_t *a1)
{
  destroy for StaticCharacteristicMetadata(a1);
  return a1;
}

uint64_t initializeWithTake for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int EnumCaseMultiPayload;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t updated;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  int *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  int v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const void *v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v113;
  char *__dst;
  char *__src;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  unsigned int (*v122)(char *, uint64_t, int *);
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(void);
  uint64_t v126;
  unsigned int (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = (int *)type metadata accessor for StaticAccessory(0);
  *(_OWORD *)(a1 + v8[5]) = *(_OWORD *)(a2 + v8[5]);
  v9 = v8[6];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v10, (uint64_t)v11, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v13 = v8[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  v17 = *((_QWORD *)v16 - 1);
  v122 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
  v124 = v5;
  v116 = v17;
  if (v122(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v5);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    v14[v16[9]] = v15[v16[9]];
    v14[v16[10]] = v15[v16[10]];
    v14[v16[11]] = v15[v16[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = v8[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_23E536F20();
  v23 = *(_QWORD *)(v22 - 8);
  v125 = *(unsigned int (**)(void))(v23 + 48);
  v130 = v23;
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v125)(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = v8[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  v28 = v124;
  v7(a1 + v8[11], a2 + v8[11], v124);
  *(_QWORD *)(a1 + v8[12]) = *(_QWORD *)(a2 + v8[12]);
  *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
  *(_BYTE *)(a1 + v8[14]) = *(_BYTE *)(a2 + v8[14]);
  *(_BYTE *)(a1 + v8[15]) = *(_BYTE *)(a2 + v8[15]);
  *(_BYTE *)(a1 + v8[16]) = *(_BYTE *)(a2 + v8[16]);
  *(_BYTE *)(a1 + v8[17]) = *(_BYTE *)(a2 + v8[17]);
  *(_BYTE *)(a1 + v8[18]) = *(_BYTE *)(a2 + v8[18]);
  *(_QWORD *)(a1 + v8[19]) = *(_QWORD *)(a2 + v8[19]);
  *(_QWORD *)(a1 + v8[20]) = *(_QWORD *)(a2 + v8[20]);
  v29 = v8[21];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v119 = v6;
  if (v127(a2 + v29, 1, v124))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v124);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v30, 0, 1, v124);
  }
  *(_WORD *)(a1 + v8[22]) = *(_WORD *)(a2 + v8[22]);
  *(_OWORD *)(a1 + v8[23]) = *(_OWORD *)(a2 + v8[23]);
  *(_QWORD *)(a1 + v8[24]) = *(_QWORD *)(a2 + v8[24]);
  *(_BYTE *)(a1 + v8[25]) = *(_BYTE *)(a2 + v8[25]);
  v33 = v8[26];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  v36 = type metadata accessor for StaticSoftwareUpdate(0);
  v118 = *(_QWORD *)(v36 - 8);
  v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
  v131 = v7;
  v128 = v22;
  v126 = v36;
  if (v120(v35, 1, v36))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_28;
  }
  v7((uint64_t)v34, (uint64_t)v35, v124);
  v38 = *(int *)(v36 + 20);
  v39 = &v34[v38];
  v40 = &v35[v38];
  v41 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
    updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v48 = *(int *)(updated + 20);
    v113 = updated;
    __dst = &v39[v48];
    v49 = &v40[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v125)(&v40[v48], 1, v22))
      goto LABEL_22;
    goto LABEL_24;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v50 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v51 = *(int *)(v50 + 20);
    v113 = v50;
    __dst = &v39[v51];
    v49 = &v40[v51];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v125)(&v40[v51], 1, v22))
    {
LABEL_22:
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_25:
      *(_OWORD *)&v39[*(int *)(v113 + 24)] = *(_OWORD *)&v40[*(int *)(v113 + 24)];
      *(_OWORD *)&v39[*(int *)(v113 + 28)] = *(_OWORD *)&v40[*(int *)(v113 + 28)];
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v39[*(int *)(v53 + 48)] = v40[*(int *)(v53 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
LABEL_24:
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(__dst, v49, v22);
    v28 = v124;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(__dst, 0, 1, v22);
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_26:
    v7 = v131;
    goto LABEL_27;
  }
  v131((uint64_t)v39, (uint64_t)v40, v124);
  v43 = (int *)type metadata accessor for StaticHH2Update(0);
  v39[v43[5]] = v40[v43[5]];
  *(_OWORD *)&v39[v43[6]] = *(_OWORD *)&v40[v43[6]];
  v44 = v43[7];
  v45 = &v39[v44];
  v46 = &v40[v44];
  v45[8] = v46[8];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v7 = v131;
  swift_storeEnumTagMultiPayload();
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v34, 0, 1, v126);
LABEL_28:
  *(_BYTE *)(a1 + v8[27]) = *(_BYTE *)(a2 + v8[27]);
  *(_BYTE *)(a1 + v8[28]) = *(_BYTE *)(a2 + v8[28]);
  *(_QWORD *)(a1 + v8[29]) = *(_QWORD *)(a2 + v8[29]);
  v54 = *(int *)(a3 + 20);
  v55 = a1 + v54;
  v56 = a2 + v54;
  v7(a1 + v54, a2 + v54, v28);
  v57 = v7;
  v58 = (int *)type metadata accessor for StaticService();
  *(_OWORD *)(v55 + v58[5]) = *(_OWORD *)(v56 + v58[5]);
  *(_BYTE *)(v55 + v58[6]) = *(_BYTE *)(v56 + v58[6]);
  *(_BYTE *)(v55 + v58[7]) = *(_BYTE *)(v56 + v58[7]);
  *(_BYTE *)(v55 + v58[8]) = *(_BYTE *)(v56 + v58[8]);
  *(_BYTE *)(v55 + v58[9]) = *(_BYTE *)(v56 + v58[9]);
  v57(v55 + v58[10], v56 + v58[10], v28);
  v59 = v58[11];
  v60 = v55 + v59;
  v61 = v56 + v59;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
  v62 = v58[12];
  v63 = (char *)(v55 + v62);
  v64 = (char *)(v56 + v62);
  if (v122((char *)(v56 + v62), 1, v16))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v57((uint64_t)v63, (uint64_t)v64, v28);
    *(_OWORD *)&v63[v16[5]] = *(_OWORD *)&v64[v16[5]];
    *(_OWORD *)&v63[v16[6]] = *(_OWORD *)&v64[v16[6]];
    *(_OWORD *)&v63[v16[7]] = *(_OWORD *)&v64[v16[7]];
    *(_OWORD *)&v63[v16[8]] = *(_OWORD *)&v64[v16[8]];
    v63[v16[9]] = v64[v16[9]];
    v63[v16[10]] = v64[v16[10]];
    v63[v16[11]] = v64[v16[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v116 + 56))(v63, 0, 1, v16);
  }
  v66 = v58[13];
  v67 = (void *)(v55 + v66);
  v68 = (const void *)(v56 + v66);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v56 + v66, 1, v128))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v130 + 32))(v67, v68, v128);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v67, 0, 1, v128);
  }
  *(_QWORD *)(v55 + v58[14]) = *(_QWORD *)(v56 + v58[14]);
  *(_OWORD *)(v55 + v58[15]) = *(_OWORD *)(v56 + v58[15]);
  *(_BYTE *)(v55 + v58[16]) = *(_BYTE *)(v56 + v58[16]);
  *(_BYTE *)(v55 + v58[17]) = *(_BYTE *)(v56 + v58[17]);
  *(_BYTE *)(v55 + v58[18]) = *(_BYTE *)(v56 + v58[18]);
  *(_BYTE *)(v55 + v58[19]) = *(_BYTE *)(v56 + v58[19]);
  *(_OWORD *)(v55 + v58[20]) = *(_OWORD *)(v56 + v58[20]);
  *(_BYTE *)(v55 + v58[21]) = *(_BYTE *)(v56 + v58[21]);
  *(_BYTE *)(v55 + v58[22]) = *(_BYTE *)(v56 + v58[22]);
  *(_BYTE *)(v55 + v58[23]) = *(_BYTE *)(v56 + v58[23]);
  v70 = v58[24];
  v71 = (void *)(v55 + v70);
  v72 = (const void *)(v56 + v70);
  if (v127(v56 + v70, 1, v28))
  {
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    v131((uint64_t)v71, (uint64_t)v72, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v71, 0, 1, v28);
  }
  *(_QWORD *)(v55 + v58[25]) = *(_QWORD *)(v56 + v58[25]);
  *(_QWORD *)(v55 + v58[26]) = *(_QWORD *)(v56 + v58[26]);
  *(_OWORD *)(v55 + v58[27]) = *(_OWORD *)(v56 + v58[27]);
  v74 = v58[28];
  v75 = (char *)(v55 + v74);
  v76 = (char *)(v56 + v74);
  if (v120((char *)(v56 + v74), 1, v126))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_52;
  }
  v131((uint64_t)v75, (uint64_t)v76, v28);
  v78 = *(int *)(v126 + 20);
  v79 = &v75[v78];
  v80 = &v76[v78];
  v123 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v81 = swift_getEnumCaseMultiPayload();
  switch(v81)
  {
    case 2:
      *(_OWORD *)v79 = *(_OWORD *)v80;
      v117 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v86 = v117[5];
      v121 = &v79[v86];
      __src = &v80[v86];
      if (v125())
        goto LABEL_46;
      goto LABEL_48;
    case 1:
      *(_OWORD *)v79 = *(_OWORD *)v80;
      v117 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v87 = v117[5];
      v121 = &v79[v87];
      __src = &v80[v87];
      if (v125())
      {
LABEL_46:
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v121, __src, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
LABEL_49:
        *(_OWORD *)&v79[v117[6]] = *(_OWORD *)&v80[v117[6]];
        *(_OWORD *)&v79[v117[7]] = *(_OWORD *)&v80[v117[7]];
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v79[*(int *)(v89 + 48)] = v80[*(int *)(v89 + 48)];
        goto LABEL_50;
      }
LABEL_48:
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v121, __src, v128);
      v28 = v124;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v121, 0, 1, v128);
      goto LABEL_49;
    case 0:
      v131((uint64_t)v79, (uint64_t)v80, v28);
      v82 = (int *)type metadata accessor for StaticHH2Update(0);
      v79[v82[5]] = v80[v82[5]];
      *(_OWORD *)&v79[v82[6]] = *(_OWORD *)&v80[v82[6]];
      v83 = v82[7];
      v84 = &v79[v83];
      v85 = &v80[v83];
      v84[8] = v85[8];
      *(_QWORD *)v84 = *(_QWORD *)v85;
LABEL_50:
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
  }
  memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
LABEL_51:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v75, 0, 1, v126);
LABEL_52:
  *(_BYTE *)(v55 + v58[29]) = *(_BYTE *)(v56 + v58[29]);
  *(_QWORD *)(v55 + v58[30]) = *(_QWORD *)(v56 + v58[30]);
  v90 = v58[31];
  v91 = (void *)(v55 + v90);
  v92 = (const void *)(v56 + v90);
  if (v127(v56 + v90, 1, v28))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    v94 = v131;
  }
  else
  {
    v94 = v131;
    v131((uint64_t)v91, (uint64_t)v92, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v91, 0, 1, v28);
  }
  v95 = v58[32];
  v96 = v55 + v95;
  v97 = v56 + v95;
  *(_WORD *)v96 = *(_WORD *)v97;
  *(_BYTE *)(v96 + 2) = *(_BYTE *)(v97 + 2);
  v98 = v58[33];
  v99 = v55 + v98;
  v100 = v56 + v98;
  *(_DWORD *)(v99 + 7) = *(_DWORD *)(v100 + 7);
  *(_QWORD *)v99 = *(_QWORD *)v100;
  v101 = *(int *)(a3 + 24);
  v102 = a1 + v101;
  v103 = a2 + v101;
  v94(a1 + v101, v103, v28);
  v104 = (int *)type metadata accessor for StaticCharacteristic();
  *(_BYTE *)(v102 + v104[5]) = *(_BYTE *)(v103 + v104[5]);
  v105 = v104[6];
  v106 = v102 + v105;
  v107 = v103 + v105;
  *(_BYTE *)(v106 + 16) = *(_BYTE *)(v107 + 16);
  *(_OWORD *)v106 = *(_OWORD *)v107;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 32))(v102 + v104[7], v103 + v104[7], v128);
  *(_BYTE *)(v102 + v104[8]) = *(_BYTE *)(v103 + v104[8]);
  *(_QWORD *)(v102 + v104[9]) = *(_QWORD *)(v103 + v104[9]);
  v94(v102 + v104[10], v103 + v104[10], v28);
  v108 = v104[11];
  v109 = v102 + v108;
  v110 = v103 + v108;
  v111 = *(_OWORD *)(v110 + 16);
  *(_OWORD *)v109 = *(_OWORD *)v110;
  *(_OWORD *)(v109 + 16) = v111;
  *(_QWORD *)(v109 + 32) = *(_QWORD *)(v110 + 32);
  return a1;
}

uint64_t assignWithTake for StaticAccessoryServiceCharacteristicTriplet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, int *);
  int v23;
  int *v24;
  int v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  unsigned int (*v34)(void);
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  int v63;
  int v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  _OWORD *v67;
  char *v68;
  uint64_t v69;
  int EnumCaseMultiPayload;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  size_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  char *v100;
  uint64_t v101;
  int v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t updated;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  const void *v139;
  unsigned int v140;
  unsigned int v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  const void *v155;
  int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  int v187;
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  uint64_t v190;
  char *v191;
  char *v192;
  int v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  int v204;
  int *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  const void *v221;
  int v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  unint64_t v243;
  char v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  __int128 v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v263;
  int *v264;
  uint64_t v265;
  uint64_t (*v266)(void);
  char *v267;
  int *v268;
  uint64_t (*v269)(uint64_t, uint64_t, int *);
  _QWORD *v270;
  char *v271;
  unsigned int (*v272)(void);
  uint64_t v273;
  uint64_t (*v274)(uint64_t, uint64_t, uint64_t);
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(uint64_t, uint64_t, uint64_t);
  uint64_t v281;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v280 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v280(a1, a2, v5);
  v7 = (int *)type metadata accessor for StaticAccessory(0);
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v13 = v7[6];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_23E1E2FA0(a1 + v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v16 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v14, v15, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v278 = v6;
  v17 = v7[7];
  v18 = (_BYTE *)(a1 + v17);
  v273 = a2;
  v19 = (_BYTE *)(a2 + v17);
  v20 = (int *)type metadata accessor for StaticDeviceMetadata();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  v23 = v22((uint64_t)v18, 1, v20);
  v24 = v20;
  v269 = v22;
  v25 = v22((uint64_t)v19, 1, v20);
  v281 = v5;
  v263 = v21;
  if (v23)
  {
    if (!v25)
    {
      v26 = v278;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v278 + 32))(v18, v19, v5);
      v27 = v24;
      *(_OWORD *)&v18[v24[5]] = *(_OWORD *)&v19[v24[5]];
      *(_OWORD *)&v18[v24[6]] = *(_OWORD *)&v19[v24[6]];
      *(_OWORD *)&v18[v24[7]] = *(_OWORD *)&v19[v24[7]];
      *(_OWORD *)&v18[v24[8]] = *(_OWORD *)&v19[v24[8]];
      v18[v24[9]] = v19[v24[9]];
      v18[v24[10]] = v19[v24[10]];
      v18[v24[11]] = v19[v24[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v24);
      v28 = v273;
      goto LABEL_12;
    }
  }
  else
  {
    if (!v25)
    {
      v280((uint64_t)v18, (uint64_t)v19, v5);
      v27 = v20;
      v78 = v20[5];
      v79 = &v18[v78];
      v80 = (uint64_t *)&v19[v78];
      v82 = *v80;
      v81 = v80[1];
      *v79 = v82;
      v79[1] = v81;
      swift_bridgeObjectRelease();
      v83 = v20[6];
      v84 = &v18[v83];
      v85 = (uint64_t *)&v19[v83];
      v87 = *v85;
      v86 = v85[1];
      *v84 = v87;
      v84[1] = v86;
      swift_bridgeObjectRelease();
      v88 = v20[7];
      v89 = &v18[v88];
      v90 = (uint64_t *)&v19[v88];
      v92 = *v90;
      v91 = v90[1];
      *v89 = v92;
      v89[1] = v91;
      swift_bridgeObjectRelease();
      v93 = v20[8];
      v94 = &v18[v93];
      v95 = (uint64_t *)&v19[v93];
      v97 = *v95;
      v96 = v95[1];
      *v94 = v97;
      v94[1] = v96;
      swift_bridgeObjectRelease();
      v18[v20[9]] = v19[v20[9]];
      v18[v20[10]] = v19[v20[10]];
      v18[v20[11]] = v19[v20[11]];
      goto LABEL_11;
    }
    sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  v27 = v20;
LABEL_11:
  v28 = v273;
  v26 = v278;
LABEL_12:
  v30 = v7[8];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(v28 + v30);
  v33 = sub_23E536F20();
  v277 = *(_QWORD *)(v33 - 8);
  v34 = *(unsigned int (**)(void))(v277 + 48);
  v35 = ((uint64_t (*)(void *, uint64_t, uint64_t))v34)(v31, 1, v33);
  v279 = v33;
  v272 = v34;
  v36 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v34)(v32, 1, v33);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(v277 + 32))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v31, 0, 1, v33);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v277 + 8))(v31, v33);
LABEL_17:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, const void *, uint64_t))(v277 + 40))(v31, v32, v33);
LABEL_18:
  v38 = v7[9];
  v39 = a1 + v38;
  v40 = v28 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  *(_BYTE *)(a1 + v7[10]) = *(_BYTE *)(v28 + v7[10]);
  v280(a1 + v7[11], v28 + v7[11], v281);
  *(_QWORD *)(a1 + v7[12]) = *(_QWORD *)(v28 + v7[12]);
  swift_bridgeObjectRelease();
  v41 = v7[13];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(v28 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[14]) = *(_BYTE *)(v28 + v7[14]);
  *(_BYTE *)(a1 + v7[15]) = *(_BYTE *)(v28 + v7[15]);
  *(_BYTE *)(a1 + v7[16]) = *(_BYTE *)(v28 + v7[16]);
  *(_BYTE *)(a1 + v7[17]) = *(_BYTE *)(v28 + v7[17]);
  *(_BYTE *)(a1 + v7[18]) = *(_BYTE *)(v28 + v7[18]);
  *(_QWORD *)(a1 + v7[19]) = *(_QWORD *)(v28 + v7[19]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[20]) = *(_QWORD *)(v28 + v7[20]);
  swift_bridgeObjectRelease();
  v46 = v7[21];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(v28 + v46);
  v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v50 = v49(a1 + v46, 1, v281);
  v274 = v49;
  v51 = v49((uint64_t)v48, 1, v281);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v47, v48, v281);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v47, 0, 1, v281);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v47, v281);
LABEL_23:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_24;
  }
  v280((uint64_t)v47, (uint64_t)v48, v281);
LABEL_24:
  *(_WORD *)(a1 + v7[22]) = *(_WORD *)(v28 + v7[22]);
  v53 = v7[23];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(v28 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v7[24]) = *(_QWORD *)(v28 + v7[24]);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v7[25]) = *(_BYTE *)(v28 + v7[25]);
  v58 = v7[26];
  v59 = a1 + v58;
  v60 = (char *)(v28 + v58);
  v61 = type metadata accessor for StaticSoftwareUpdate(0);
  v265 = *(_QWORD *)(v61 - 8);
  v62 = *(uint64_t (**)(void))(v265 + 48);
  v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v59, 1, v61);
  v276 = v61;
  v64 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v60, 1, v61);
  v266 = v62;
  if (v63)
  {
    if (!v64)
    {
      v65 = *(void (**)(uint64_t, char *, uint64_t))(v278 + 32);
      v65(v59, v60, v281);
      v66 = *(int *)(v61 + 20);
      v67 = (_OWORD *)(v59 + v66);
      v68 = &v60[v66];
      v69 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v67 = *(_OWORD *)v68;
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v108 = *(int *)(updated + 20);
        v259 = updated;
        __dst = (char *)v67 + v108;
        v109 = &v68[v108];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v68[v108], 1, v279))
        {
LABEL_45:
          v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
LABEL_53:
          *(_OWORD *)((char *)v67 + *(int *)(v259 + 24)) = *(_OWORD *)&v68[*(int *)(v259 + 24)];
          *(_OWORD *)((char *)v67 + *(int *)(v259 + 28)) = *(_OWORD *)&v68[*(int *)(v259 + 28)];
          v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v67 + *(int *)(v118 + 48)) = v68[*(int *)(v118 + 48)];
          goto LABEL_54;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
LABEL_55:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v265 + 56))(v59, 0, 1, v276);
            goto LABEL_56;
          }
          v65((uint64_t)v67, v68, v281);
          v71 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v67 + v71[5]) = v68[v71[5]];
          *(_OWORD *)((char *)v67 + v71[6]) = *(_OWORD *)&v68[v71[6]];
          v72 = v71[7];
          v73 = (char *)v67 + v72;
          v74 = &v68[v72];
          v73[8] = v74[8];
          *(_QWORD *)v73 = *(_QWORD *)v74;
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        *v67 = *(_OWORD *)v68;
        v110 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v111 = *(int *)(v110 + 20);
        v259 = v110;
        __dst = (char *)v67 + v111;
        v109 = &v68[v111];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v68[v111], 1, v279))
          goto LABEL_45;
      }
      (*(void (**)(char *, char *, uint64_t))(v277 + 32))(__dst, v109, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(__dst, 0, 1, v279);
      goto LABEL_53;
    }
    goto LABEL_32;
  }
  if (v64)
  {
    sub_23E1E2FA0(v59, type metadata accessor for StaticSoftwareUpdate);
LABEL_32:
    v75 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
    v76 = (void *)v59;
    v77 = v60;
    goto LABEL_33;
  }
  v280(v59, (uint64_t)v60, v281);
  if (a1 == v28)
    goto LABEL_56;
  v98 = *(int *)(v61 + 20);
  v99 = (_OWORD *)(v59 + v98);
  v100 = &v60[v98];
  sub_23E1E2FA0((uint64_t)v99, type metadata accessor for StaticSoftwareUpdate.Kind);
  v101 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v102 = swift_getEnumCaseMultiPayload();
  if (v102 != 2)
  {
    if (v102 != 1)
    {
      if (!v102)
      {
        (*(void (**)(_OWORD *, char *, uint64_t))(v278 + 32))(v99, v100, v281);
        v103 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v99 + v103[5]) = v100[v103[5]];
        *(_OWORD *)((char *)v99 + v103[6]) = *(_OWORD *)&v100[v103[6]];
        v104 = v103[7];
        v105 = (char *)v99 + v104;
        v106 = &v100[v104];
        v105[8] = v106[8];
        *(_QWORD *)v105 = *(_QWORD *)v106;
        swift_storeEnumTagMultiPayload();
        goto LABEL_56;
      }
      v75 = *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64);
      v76 = v99;
      v77 = v100;
LABEL_33:
      memcpy(v76, v77, v75);
      goto LABEL_56;
    }
    *v99 = *(_OWORD *)v100;
    v113 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v117 = v113[5];
    __dsta = (char *)v99 + v117;
    v115 = &v100[v117];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v100[v117], 1, v279))
      goto LABEL_48;
LABEL_118:
    (*(void (**)(char *, char *, uint64_t))(v277 + 32))(__dsta, v115, v279);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(__dsta, 0, 1, v279);
    goto LABEL_119;
  }
  *v99 = *(_OWORD *)v100;
  v113 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v114 = v113[5];
  __dsta = (char *)v99 + v114;
  v115 = &v100[v114];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v100[v114], 1, v279))
    goto LABEL_118;
LABEL_48:
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(__dsta, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
LABEL_119:
  *(_OWORD *)((char *)v99 + v113[6]) = *(_OWORD *)&v100[v113[6]];
  *(_OWORD *)((char *)v99 + v113[7]) = *(_OWORD *)&v100[v113[7]];
  v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v99 + *(int *)(v257 + 48)) = v100[*(int *)(v257 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_56:
  *(_BYTE *)(a1 + v7[27]) = *(_BYTE *)(v28 + v7[27]);
  *(_BYTE *)(a1 + v7[28]) = *(_BYTE *)(v28 + v7[28]);
  *(_QWORD *)(a1 + v7[29]) = *(_QWORD *)(v28 + v7[29]);
  swift_bridgeObjectRelease();
  v119 = *(int *)(a3 + 20);
  v120 = a1 + v119;
  v121 = v28 + v119;
  v280(a1 + v119, v28 + v119, v281);
  v122 = (int *)type metadata accessor for StaticService();
  v123 = v122[5];
  v124 = (_QWORD *)(v120 + v123);
  v125 = (uint64_t *)(v121 + v123);
  v127 = *v125;
  v126 = v125[1];
  *v124 = v127;
  v124[1] = v126;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v120 + v122[6]) = *(_BYTE *)(v121 + v122[6]);
  *(_BYTE *)(v120 + v122[7]) = *(_BYTE *)(v121 + v122[7]);
  *(_BYTE *)(v120 + v122[8]) = *(_BYTE *)(v121 + v122[8]);
  *(_BYTE *)(v120 + v122[9]) = *(_BYTE *)(v121 + v122[9]);
  v280(v120 + v122[10], v121 + v122[10], v281);
  v128 = v122[11];
  v129 = v120 + v128;
  v130 = v121 + v128;
  *(_QWORD *)v129 = *(_QWORD *)v130;
  *(_BYTE *)(v129 + 8) = *(_BYTE *)(v130 + 8);
  v131 = v122[12];
  v132 = (_BYTE *)(v120 + v131);
  v133 = (_BYTE *)(v121 + v131);
  v134 = v269(v120 + v131, 1, v27);
  v135 = v269((uint64_t)v133, 1, v27);
  if (v134)
  {
    if (!v135)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v278 + 32))(v132, v133, v281);
      *(_OWORD *)&v132[v27[5]] = *(_OWORD *)&v133[v27[5]];
      *(_OWORD *)&v132[v27[6]] = *(_OWORD *)&v133[v27[6]];
      *(_OWORD *)&v132[v27[7]] = *(_OWORD *)&v133[v27[7]];
      *(_OWORD *)&v132[v27[8]] = *(_OWORD *)&v133[v27[8]];
      v132[v27[9]] = v133[v27[9]];
      v132[v27[10]] = v133[v27[10]];
      v132[v27[11]] = v133[v27[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v263 + 56))(v132, 0, 1, v27);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v135)
  {
    sub_23E1E2FA0((uint64_t)v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_61:
    v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    goto LABEL_62;
  }
  v280((uint64_t)v132, (uint64_t)v133, v281);
  v161 = v27[5];
  v162 = &v132[v161];
  v163 = (uint64_t *)&v133[v161];
  v165 = *v163;
  v164 = v163[1];
  *v162 = v165;
  v162[1] = v164;
  swift_bridgeObjectRelease();
  v166 = v27[6];
  v167 = &v132[v166];
  v168 = (uint64_t *)&v133[v166];
  v170 = *v168;
  v169 = v168[1];
  *v167 = v170;
  v167[1] = v169;
  swift_bridgeObjectRelease();
  v171 = v27[7];
  v172 = &v132[v171];
  v173 = (uint64_t *)&v133[v171];
  v175 = *v173;
  v174 = v173[1];
  *v172 = v175;
  v172[1] = v174;
  swift_bridgeObjectRelease();
  v176 = v27[8];
  v177 = &v132[v176];
  v178 = (uint64_t *)&v133[v176];
  v180 = *v178;
  v179 = v178[1];
  *v177 = v180;
  v177[1] = v179;
  swift_bridgeObjectRelease();
  v132[v27[9]] = v133[v27[9]];
  v132[v27[10]] = v133[v27[10]];
  v132[v27[11]] = v133[v27[11]];
LABEL_62:
  v137 = v122[13];
  v138 = (void *)(v120 + v137);
  v139 = (const void *)(v121 + v137);
  v140 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v272)(v120 + v137, 1, v279);
  v141 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v272)(v139, 1, v279);
  if (v140)
  {
    if (!v141)
    {
      (*(void (**)(void *, const void *, uint64_t))(v277 + 32))(v138, v139, v279);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v138, 0, 1, v279);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  if (v141)
  {
    (*(void (**)(void *, uint64_t))(v277 + 8))(v138, v279);
LABEL_67:
    v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(void *, const void *, uint64_t))(v277 + 40))(v138, v139, v279);
LABEL_68:
  *(_QWORD *)(v120 + v122[14]) = *(_QWORD *)(v121 + v122[14]);
  swift_bridgeObjectRelease();
  v143 = v122[15];
  v144 = (_QWORD *)(v120 + v143);
  v145 = (uint64_t *)(v121 + v143);
  v147 = *v145;
  v146 = v145[1];
  *v144 = v147;
  v144[1] = v146;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v120 + v122[16]) = *(_BYTE *)(v121 + v122[16]);
  *(_BYTE *)(v120 + v122[17]) = *(_BYTE *)(v121 + v122[17]);
  *(_BYTE *)(v120 + v122[18]) = *(_BYTE *)(v121 + v122[18]);
  *(_BYTE *)(v120 + v122[19]) = *(_BYTE *)(v121 + v122[19]);
  v148 = v122[20];
  v149 = (_QWORD *)(v120 + v148);
  v150 = (uint64_t *)(v121 + v148);
  v152 = *v150;
  v151 = v150[1];
  *v149 = v152;
  v149[1] = v151;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v120 + v122[21]) = *(_BYTE *)(v121 + v122[21]);
  *(_BYTE *)(v120 + v122[22]) = *(_BYTE *)(v121 + v122[22]);
  *(_BYTE *)(v120 + v122[23]) = *(_BYTE *)(v121 + v122[23]);
  v153 = v122[24];
  v154 = (void *)(v120 + v153);
  v155 = (const void *)(v121 + v153);
  v156 = v274(v120 + v153, 1, v281);
  v157 = v274((uint64_t)v155, 1, v281);
  if (v156)
  {
    if (v157)
    {
      v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      v159 = v281;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v278 + 32))(v154, v155, v281);
      v159 = v281;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v278 + 56))(v154, 0, 1, v281);
    }
  }
  else
  {
    v159 = v281;
    if (v157)
    {
      (*(void (**)(void *))(v278 + 8))(v154);
      v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
    }
    else
    {
      ((void (*)(void *, const void *))v280)(v154, v155);
    }
  }
  *(_QWORD *)(v120 + v122[25]) = *(_QWORD *)(v121 + v122[25]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v120 + v122[26]) = *(_QWORD *)(v121 + v122[26]);
  swift_bridgeObjectRelease();
  v181 = v122[27];
  v182 = v120 + v181;
  v183 = v121 + v181;
  *(_QWORD *)(v120 + v181) = *(_QWORD *)(v121 + v181);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v182 + 8) = *(_QWORD *)(v183 + 8);
  swift_bridgeObjectRelease();
  v184 = v122[28];
  v185 = (char *)(v121 + v184);
  v186 = (char *)(v120 + v184);
  LODWORD(v182) = v266();
  v187 = ((uint64_t (*)(char *, uint64_t, uint64_t))v266)(v185, 1, v276);
  v188 = v159;
  if ((_DWORD)v182)
  {
    if (!v187)
    {
      v189 = *(void (**)(char *, char *, uint64_t))(v278 + 32);
      v189(v186, v185, v159);
      v190 = *(int *)(v276 + 20);
      v191 = &v186[v190];
      v192 = &v185[v190];
      v270 = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      v193 = swift_getEnumCaseMultiPayload();
      v194 = v273;
      if (v193 == 2)
      {
        *(_OWORD *)v191 = *(_OWORD *)v192;
        v264 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v209 = v264[5];
        v267 = &v191[v209];
        __dstb = &v192[v209];
        if (v272())
        {
LABEL_94:
          v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v267, __dstb, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
LABEL_102:
          *(_OWORD *)&v191[v264[6]] = *(_OWORD *)&v192[v264[6]];
          *(_OWORD *)&v191[v264[7]] = *(_OWORD *)&v192[v264[7]];
          v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          v191[*(int *)(v218 + 48)] = v192[*(int *)(v218 + 48)];
          goto LABEL_103;
        }
      }
      else
      {
        if (v193 != 1)
        {
          if (v193)
          {
            memcpy(v191, v192, *(_QWORD *)(*(v270 - 1) + 64));
LABEL_104:
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v186, 0, 1, v276);
            goto LABEL_105;
          }
          v189(v191, v192, v188);
          v195 = (int *)type metadata accessor for StaticHH2Update(0);
          v191[v195[5]] = v192[v195[5]];
          *(_OWORD *)&v191[v195[6]] = *(_OWORD *)&v192[v195[6]];
          v196 = v195[7];
          v197 = &v191[v196];
          v198 = &v192[v196];
          v197[8] = v198[8];
          *(_QWORD *)v197 = *(_QWORD *)v198;
LABEL_103:
          swift_storeEnumTagMultiPayload();
          goto LABEL_104;
        }
        *(_OWORD *)v191 = *(_OWORD *)v192;
        v264 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v210 = v264[5];
        v267 = &v191[v210];
        __dstb = &v192[v210];
        if (v272())
          goto LABEL_94;
      }
      (*(void (**)(char *, char *, uint64_t))(v277 + 32))(v267, __dstb, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v267, 0, 1, v279);
      goto LABEL_102;
    }
LABEL_85:
    v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v186, v185, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
    v194 = v273;
    goto LABEL_105;
  }
  if (v187)
  {
    sub_23E1E2FA0((uint64_t)v186, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_85;
  }
  v280((uint64_t)v186, (uint64_t)v185, v159);
  v194 = v273;
  if (a1 == v273)
    goto LABEL_105;
  v200 = *(int *)(v276 + 20);
  v201 = &v186[v200];
  v202 = &v185[v200];
  sub_23E1E2FA0((uint64_t)v201, type metadata accessor for StaticSoftwareUpdate.Kind);
  v203 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v204 = swift_getEnumCaseMultiPayload();
  if (v204 != 2)
  {
    if (v204 != 1)
    {
      if (v204)
      {
        memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v278 + 32))(v201, v202, v188);
        v205 = (int *)type metadata accessor for StaticHH2Update(0);
        v201[v205[5]] = v202[v205[5]];
        *(_OWORD *)&v201[v205[6]] = *(_OWORD *)&v202[v205[6]];
        v206 = v205[7];
        v207 = &v201[v206];
        v208 = &v202[v206];
        v207[8] = v208[8];
        *(_QWORD *)v207 = *(_QWORD *)v208;
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_105;
    }
    *(_OWORD *)v201 = *(_OWORD *)v202;
    v216 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v217 = *(int *)(v216 + 20);
    v268 = (int *)v216;
    v271 = &v201[v217];
    v214 = &v202[v217];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v202[v217], 1, v279))
      goto LABEL_97;
LABEL_121:
    (*(void (**)(char *, char *, uint64_t))(v277 + 32))(v271, v214, v279);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v271, 0, 1, v279);
    goto LABEL_122;
  }
  *(_OWORD *)v201 = *(_OWORD *)v202;
  v212 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v213 = *(int *)(v212 + 20);
  v268 = (int *)v212;
  v271 = &v201[v213];
  v214 = &v202[v213];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v272)(&v202[v213], 1, v279))
    goto LABEL_121;
LABEL_97:
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v271, v214, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
LABEL_122:
  *(_OWORD *)&v201[v268[6]] = *(_OWORD *)&v202[v268[6]];
  *(_OWORD *)&v201[v268[7]] = *(_OWORD *)&v202[v268[7]];
  v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  v201[*(int *)(v258 + 48)] = v202[*(int *)(v258 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_105:
  *(_BYTE *)(v120 + v122[29]) = *(_BYTE *)(v121 + v122[29]);
  *(_QWORD *)(v120 + v122[30]) = *(_QWORD *)(v121 + v122[30]);
  swift_bridgeObjectRelease();
  v219 = v122[31];
  v220 = (void *)(v120 + v219);
  v221 = (const void *)(v121 + v219);
  v222 = v274(v120 + v219, 1, v188);
  v223 = v274((uint64_t)v221, 1, v188);
  if (v222)
  {
    v224 = v279;
    if (v223)
    {
      v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
      v226 = v281;
    }
    else
    {
      v226 = v281;
      (*(void (**)(void *, const void *, uint64_t))(v278 + 32))(v220, v221, v281);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v278 + 56))(v220, 0, 1, v281);
    }
  }
  else
  {
    v224 = v279;
    v226 = v281;
    if (v223)
    {
      (*(void (**)(void *, uint64_t))(v278 + 8))(v220, v281);
      v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
    }
    else
    {
      v280((uint64_t)v220, (uint64_t)v221, v281);
    }
  }
  v228 = v122[32];
  v229 = v120 + v228;
  v230 = v121 + v228;
  *(_WORD *)v229 = *(_WORD *)v230;
  *(_BYTE *)(v229 + 2) = *(_BYTE *)(v230 + 2);
  v231 = v122[33];
  v232 = v120 + v231;
  v233 = v121 + v231;
  *(_DWORD *)(v232 + 7) = *(_DWORD *)(v233 + 7);
  *(_QWORD *)v232 = *(_QWORD *)v233;
  v234 = *(int *)(a3 + 24);
  v235 = a1 + v234;
  v236 = v194 + v234;
  v280(a1 + v234, v236, v226);
  v237 = (int *)type metadata accessor for StaticCharacteristic();
  *(_BYTE *)(v235 + v237[5]) = *(_BYTE *)(v236 + v237[5]);
  v238 = v237[6];
  v239 = v235 + v238;
  v240 = v236 + v238;
  v241 = *(_BYTE *)(v240 + 16);
  v242 = *(_QWORD *)v239;
  v243 = *(_QWORD *)(v239 + 8);
  *(_OWORD *)v239 = *(_OWORD *)v240;
  v244 = *(_BYTE *)(v239 + 16);
  *(_BYTE *)(v239 + 16) = v241;
  sub_23E1EAB20(v242, v243, v244);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 40))(v235 + v237[7], v236 + v237[7], v224);
  *(_BYTE *)(v235 + v237[8]) = *(_BYTE *)(v236 + v237[8]);
  *(_QWORD *)(v235 + v237[9]) = *(_QWORD *)(v236 + v237[9]);
  v280(v235 + v237[10], v236 + v237[10], v226);
  v245 = v237[11];
  v246 = (uint64_t *)(v235 + v245);
  v247 = v236 + v245;
  v248 = *(_QWORD *)(v235 + v245 + 24);
  if (v248 >> 8 != 0xFFFFFFFF)
  {
    v249 = *(_QWORD *)(v247 + 24);
    if (v249 >> 8 != 0xFFFFFFFF)
    {
      v251 = *(_QWORD *)(v247 + 16);
      v252 = *(_QWORD *)(v247 + 32);
      v253 = *v246;
      v254 = v246[1];
      v255 = v246[2];
      *(_OWORD *)v246 = *(_OWORD *)v247;
      v246[2] = v251;
      v246[3] = v249;
      v246[4] = v252;
      sub_23E1EAB4C(v253, v254, v255, v248);
      return a1;
    }
    sub_23E3ED978(v246);
  }
  v250 = *(_OWORD *)(v247 + 16);
  *(_OWORD *)v246 = *(_OWORD *)v247;
  *((_OWORD *)v246 + 1) = v250;
  v246[4] = *(_QWORD *)(v247 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3F00DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for StaticAccessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for StaticService();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = type metadata accessor for StaticCharacteristic();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E3F0180(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for StaticAccessory(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for StaticService();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for StaticCharacteristic();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E3F0220()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for StaticAccessory(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StaticService();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for StaticCharacteristic();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticAccessoryServiceCharacteristicTriplet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E3F030C + 4 * byte_23E54DAE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E3F0340 + 4 * byte_23E54DAE0[v4]))();
}

uint64_t sub_23E3F0340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3F0348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E3F0350);
  return result;
}

uint64_t sub_23E3F035C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3F0364);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E3F0368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3F0370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessoryServiceCharacteristicTriplet.CodingKeys()
{
  return &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys;
}

unint64_t sub_23E3F0390()
{
  unint64_t result;

  result = qword_256D45EF8;
  if (!qword_256D45EF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DCC8, &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45EF8);
  }
  return result;
}

unint64_t sub_23E3F03D8()
{
  unint64_t result;

  result = qword_256D45F00;
  if (!qword_256D45F00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DC38, &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45F00);
  }
  return result;
}

unint64_t sub_23E3F0420()
{
  unint64_t result;

  result = qword_256D45F08;
  if (!qword_256D45F08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54DC60, &type metadata for StaticAccessoryServiceCharacteristicTriplet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D45F08);
  }
  return result;
}

uint64_t sub_23E3F0464(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6341636974617473 && a2 == 0xEF79726F73736563;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553636974617473 && a2 == 0xED00006563697672 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E569890)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t (*sub_23E3F05FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F0638@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_23E3F06C0()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F0750@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 16);
  return result;
}

unint64_t sub_23E3F07E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D42AC8;
  if (!qword_256D42AC8)
  {
    v1 = type metadata accessor for CameraController.ViewState();
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraController.ViewState, v1);
    atomic_store(result, (unint64_t *)&qword_256D42AC8);
  }
  return result;
}

uint64_t type metadata accessor for CameraController.ViewState()
{
  uint64_t result;

  result = qword_256D45F40;
  if (!qword_256D45F40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E3F0864()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F08F4()
{
  return sub_23E3F1EF4();
}

void (*sub_23E3F0908(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E3F05FC();
  return sub_23E3F09D8;
}

void sub_23E3F09D8(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t (*sub_23E3F09E4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F0A20@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = *(_QWORD *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E3F0AAC()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3F0B50()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E3F0BE8()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3F0C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 32) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void (*sub_23E3F0CEC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E3F09E4();
  return sub_23E3F0DBC;
}

void sub_23E3F0DBC(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t (*sub_23E3F0DC8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F0E04@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_23E3F0E8C()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F0F1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 40);
  return result;
}

uint64_t sub_23E3F0FAC()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F103C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(a1 + 40) = a2;
  return result;
}

uint64_t sub_23E3F108C()
{
  return sub_23E3F1EA4();
}

void (*sub_23E3F10A0(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E3F0DC8();
  return sub_23E3F1170;
}

void sub_23E3F1170(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t (*sub_23E3F117C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23E3F11B8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return result;
}

uint64_t sub_23E3F1240()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F12CC()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_23E3F1354()
{
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537064();
  return swift_release();
}

uint64_t sub_23E3F13E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(a1 + 48) = a2;
  return result;
}

uint64_t sub_23E3F1430()
{
  return sub_23E3F1E58();
}

void (*sub_23E3F1444(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E3F117C();
  return sub_23E3F1514;
}

void sub_23E3F1514(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

void *sub_23E3F1520()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

id sub_23E3F1594@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  v4 = *(void **)(v3 + 56);
  *a2 = v4;
  return v4;
}

void sub_23E3F1608(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  v2 = v1;
  sub_23E537064();
  swift_release();

}

void sub_23E3F16A4(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = a2;
  v3 = a2;

}

void *sub_23E3F16D4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

id sub_23E3F1748@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  v4 = *(void **)(v3 + 64);
  *a2 = v4;
  return v4;
}

void sub_23E3F17BC(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_23E3F07E0();
  v2 = v1;
  sub_23E537064();
  swift_release();

}

void sub_23E3F1858(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = a2;
  v3 = a2;

}

uint64_t CameraController.ViewState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  v2 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t CameraController.ViewState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtCC13HomeDataModel16CameraController9ViewState___observationRegistrar;
  v2 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void *CameraController.ViewState.source.getter()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 != 3)
  {
    v2 = 0;
    if (v1 == 4)
      return v2;
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    v2 = *(void **)(v0 + 64);
    if (v2)
    {
LABEL_5:
      v3 = v2;
      return v2;
    }
  }
  swift_getKeyPath();
  sub_23E537070();
  swift_release();
  v2 = *(void **)(v0 + 56);
  if (v2)
    goto LABEL_5;
  return v2;
}

uint64_t CameraController.ViewState.dateOfLastSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v7;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  v3 = *(void **)(v1 + 56);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_captureDate);
    sub_23E536EFC();

    v5 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 0, 1, v5);
  }
  else
  {
    v7 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
}

void CameraController.ViewState.statusString.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23E3F07E0();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  if (*(_QWORD *)(v0 + 48) == 2
    || (swift_getKeyPath(), sub_23E537070(), swift_release(), swift_beginAccess(), *(_BYTE *)(v0 + 40) == 2)
    || (swift_getKeyPath(), sub_23E537070(), swift_release(), *(_BYTE *)(v0 + 40)))
  {
    static String.hfLocalized(_:)();
  }
}

uint64_t sub_23E3F1CA8()
{
  return type metadata accessor for CameraController.ViewState();
}

uint64_t sub_23E3F1CB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E5370A0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CameraController.ViewState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CameraController.ViewState.mode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of CameraController.ViewState.mode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CameraController.ViewState.mode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CameraController.ViewState.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of CameraController.ViewState.name.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of CameraController.ViewState.name.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of CameraController.ViewState.availability.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of CameraController.ViewState.availability.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of CameraController.ViewState.availability.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of CameraController.ViewState.streamState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of CameraController.ViewState.streamState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of CameraController.ViewState.streamState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

void sub_23E3F1DF0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = v2;
  v4 = v2;

}

void sub_23E3F1E24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v2;
  v4 = v2;

}

uint64_t sub_23E3F1E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  result = swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v1;
  return result;
}

uint64_t sub_23E3F1EA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t sub_23E3F1EF4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_23E3F1F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_23E537154();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = sub_23E53710C();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3F201C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  const char *v15;
  char v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  uint64_t result;
  uint64_t v22;
  void (*v23)(_QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t);
  uint8_t *v28;
  os_signpost_id_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char v41;
  NSObject *v42;
  os_signpost_type_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  const char *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  os_signpost_id_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(_QWORD, uint64_t, uint64_t);
  const char *v65;
  char v66;
  os_signpost_type_t v67;
  uint64_t v68;
  uint64_t v69;

  v1 = v0;
  if (qword_256D3ED18 != -1)
    swift_once();
  v2 = v0[21];
  v3 = v0[9];
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D40BD0);
  sub_23E282E54(v3, v2);
  swift_retain();
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[21];
  v9 = v0[11];
  if (v7)
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v69 = v11;
    *(_DWORD *)v10 = 134218242;
    v1[6] = *(_QWORD *)(v9 + 120);
    sub_23E537CF4();
    swift_release();
    *(_WORD *)(v10 + 12) = 2080;
    CoordinationSnapshot.UpdateType.description.getter();
    v1[7] = sub_23E1FD768(v12, v13, &v69);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E282E98(v8);
    _os_log_impl(&dword_23E1DF000, v5, v6, "new snapshot based on iteration %ld, %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);
  }
  else
  {
    swift_release();
    sub_23E282E98(v8);
  }

  sub_23E3F2CCC(v1[9]);
  v15 = v14;
  v17 = v16;
  if (qword_256D3EE60 != -1)
    swift_once();
  v18 = sub_23E537148();
  __swift_project_value_buffer(v18, (uint64_t)qword_256D897D8);
  sub_23E537100();
  v19 = sub_23E537130();
  v20 = sub_23E537B98();
  result = sub_23E537CA0();
  v65 = v15;
  v66 = v17;
  if ((result & 1) == 0)
    goto LABEL_12;
  if ((v17 & 1) != 0)
  {
    if ((unint64_t)v15 >> 32)
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v15 >> 11 == 27)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v15 >> 16 > 0x10)
      goto LABEL_37;
    v15 = (const char *)(v1 + 3);
  }
  else if (!v15)
  {
    __break(1u);
LABEL_12:
    v22 = v1[16];

    v23 = *(void (**)(_QWORD, uint64_t, uint64_t))(v22 + 16);
    goto LABEL_18;
  }
  v24 = v1[18];
  v26 = v1[15];
  v25 = v1[16];
  v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 16);
  v27(v24, v1[19], v26);
  v28 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v28 = 0;
  v29 = sub_23E5370F4();
  _os_signpost_emit_with_name_impl(&dword_23E1DF000, v19, v20, v29, v15, "", v28, 2u);
  MEMORY[0x24264FEBC](v28, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  v23 = v27;
LABEL_18:
  v30 = v1 + 18;
  v64 = v23;
  v32 = v1[19];
  v31 = v1[20];
  v33 = v1[15];
  v34 = v1[16];
  v35 = (unint64_t *)v1[10];
  v36 = v1[11];
  v37 = v1[9];
  v23(v1[18], v32, v33);
  sub_23E537178();
  swift_allocObject();
  v1[22] = sub_23E53716C();
  v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v38(v32, v33);
  sub_23E282E54(v37, v31);
  v69 = *(_QWORD *)(v36 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E419528(v31, v35, &v69, &v68);
  v39 = v68;
  v1[23] = v68;
  v63 = v36;
  v40 = swift_bridgeObjectRetain();
  v41 = sub_23E2AEE7C(v40, v39);
  swift_bridgeObjectRelease();
  v42 = sub_23E537130();
  sub_23E537160();
  v43 = sub_23E537B8C();
  result = sub_23E537CA0();
  if ((result & 1) == 0)
  {
LABEL_22:

    v30 = v1 + 17;
LABEL_31:
    result = ((uint64_t (*)(_QWORD, _QWORD))v38)(*v30, v1[15]);
    if ((v41 & 1) != 0)
    {
      swift_release();
      v55 = v1[11];
      *(_QWORD *)v1[8] = v1[23];
      v56 = *(_QWORD *)(v55 + 120);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return ((uint64_t (*)(uint64_t))v1[1])(v56);
    }
    v57 = v1[11];
    v58 = *(_QWORD *)(v57 + 120);
    v59 = __OFADD__(v58, 1);
    v60 = v58 + 1;
    if (!v59)
    {
      *(_QWORD *)(v57 + 120) = v60;
      *(_QWORD *)(v63 + 112) = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1[24] = sub_23E5378F8();
      v1[25] = sub_23E5378EC();
      sub_23E5378B0();
      return swift_task_switch();
    }
    __break(1u);
    goto LABEL_36;
  }
  v62 = v38;
  v61 = v41;
  if ((v66 & 1) == 0)
  {
    v44 = v65;
    if (!v65)
    {
      __break(1u);
      goto LABEL_22;
    }
LABEL_27:
    v67 = v43;
    v46 = v1[13];
    v45 = v1[14];
    v47 = v1[12];
    swift_retain();
    sub_23E537184();
    swift_release();
    v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 88))(v45, v47);
    v49 = v44;
    if (v48 == *MEMORY[0x24BEE7810])
    {
      v50 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v1[13] + 8))(v1[14], v1[12]);
      v50 = "";
    }
    v51 = v1[17];
    v52 = v1[15];
    v64(v1[18], v51, v52);
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    v54 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v42, v67, v54, v49, v50, v53, 2u);
    MEMORY[0x24264FEBC](v53, -1, -1);

    v38 = v62;
    v62(v51, v52);
    v41 = v61;
    goto LABEL_31;
  }
  if ((unint64_t)v65 >> 32)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v65 >> 11 != 27)
  {
    if (v65 >> 16 > 0x10)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v44 = (const char *)(v1 + 2);
    goto LABEL_27;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E3F26D8()
{
  swift_release();
  if (qword_2543327B8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3F273C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F279C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = qword_254332710;
  return swift_task_switch();
}

uint64_t sub_23E3F27E8()
{
  _QWORD *v0;

  v0[28] = *(_QWORD *)(v0[11] + 112);
  swift_bridgeObjectRetain();
  v0[29] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F2858()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[28];
  v2 = (void *)v0[27];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[4] = v1;
  swift_bridgeObjectRetain();
  v3 = v2;
  sub_23E53722C();
  if (qword_256D3ED10 != -1)
    swift_once();
  v0[5] = v0[28];
  sub_23E5371CC();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3F293C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 88);
  **(_QWORD **)(v0 + 64) = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v1 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t CoordinationSnapshotModerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CoordinationSnapshotModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CoordinationSnapshotModerator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E3F2A24()
{
  uint64_t v0;

  v0 = sub_23E537148();
  __swift_allocate_value_buffer(v0, qword_256D897D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D897D8);
  return sub_23E53713C();
}

uint64_t sub_23E3F2A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_23E536DE8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, qword_256D46128);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D46128);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = objc_msgSend(v7, sel_URLForUbiquityContainerIdentifier_, 0);

  if (v8)
  {
    sub_23E536DC4();

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if ((_DWORD)result != 1)
    {
      sub_23E536DAC();
      return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t static CoordinationSnapshotModerator.iCloudDocumentsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EE68 != -1)
    swift_once();
  v2 = sub_23E536DE8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D46128);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for CoordinationSnapshotModerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoordinationSnapshotModerator()
{
  return swift_lookUpClassMethod();
}

char *sub_23E3F2CBC()
{
  char v1;

  return &v1;
}

void sub_23E3F2CCC(uint64_t a1)
{
  uint64_t updated;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  sub_23E282E54(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23E3F2D5C + 4 * byte_23E54DF00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

const char *sub_23E3F2D5C()
{
  uint64_t v0;

  sub_23E282E98(v0);
  return "updateType: .data(_)";
}

void static String.hfLocalized(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, char *, uint64_t);
  _QWORD v8[9];
  char *v9;
  uint64_t v10;

  v0 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v0);
  v10 = sub_23E53752C();
  v1 = *(_QWORD *)(v10 - 8);
  v2 = MEMORY[0x24BDAC7A8](v10);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v8 - v5;
  swift_bridgeObjectRetain();
  v9 = v6;
  sub_23E537520();
  v8[0] = v1;
  v7 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v8[7] = 6;
  v8[8] = v7;
  v8[5] = "HFSensitiveStrings-WalletKeyUWB";
  v8[6] = "gs-NativeMatterSupport";
  v8[3] = "iveWidgets-RestrictedGuests";
  v8[4] = "gs-RestrictedGuest";
  v8[1] = "updateType: .all";
  v8[2] = "gs-ResidentSelection";
  v7(v4, v9, v10);
  JUMPOUT(0x23E3F30F8);
}

uint64_t static String.hfLocalizedPercentage(_:minValue:maxValue:)()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  sub_23E2AAFC4();
  v0 = (void *)sub_23E537C34();
  v1 = (void *)sub_23E537C34();
  v2 = (void *)sub_23E537C34();
  v3 = sub_23E3F3440(v0);

  return v3;
}

id sub_23E3F32CC()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s25_doNotTouchThisDummyClassCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_254334BC8 = (uint64_t)result;
  return result;
}

uint64_t static String.hfLocalizedWithFormat(_:_:)()
{
  uint64_t v0;

  static String.hfLocalized(_:)();
  swift_bridgeObjectRetain();
  v0 = sub_23E537580();
  swift_bridgeObjectRelease();
  return v0;
}

id static String.hfLocalizedWiFi(_:)()
{
  id result;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v1 = result;
    MobileGestalt_get_wapiCapability();

    swift_bridgeObjectRetain();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)();
    v3 = v2;
    swift_bridgeObjectRelease();
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23E3F3440(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = sub_23E536FB0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v6, sel_setNumberStyle_, 3);
  objc_msgSend(v6, sel_setUsesSignificantDigits_, 0);
  sub_23E2AAFC4();
  v7 = (void *)sub_23E537C40();
  objc_msgSend(v6, sel_setMultiplier_, v7);

  sub_23E536FA4();
  v8 = (void *)sub_23E536F8C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setLocale_, v8);

  v9 = objc_msgSend(v6, sel_stringFromNumber_, a1);
  if (v9)
  {
    v10 = v9;
    v11 = sub_23E53755C();

  }
  else
  {
    v12 = objc_msgSend(a1, sel_description);
    v13 = sub_23E53755C();
    v15 = v14;

    v17[0] = v13;
    v17[1] = v15;
    sub_23E537628();

    return v17[0];
  }
  return v11;
}

uint64_t _s25_doNotTouchThisDummyClassCMa()
{
  return objc_opt_self();
}

void MTAlarm.alarmRepeatSchedule.getter(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(v1, sel_repeatSchedule);
  type metadata accessor for MTAlarmRepeatSchedule(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTAlarmRepeatSchedule;
  *a1 = v3;
}

double MTAlarm.mutableCopy()@<D0>(uint64_t a1@<X8>)
{
  double result;
  objc_super v3;

  v3.super_class = (Class)MEMORY[0x24BE67818];
  objc_msgSendSuper2(&v3, sel_mutableCopy);
  sub_23E537D24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46228);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_23E3F36DC()
{
  id *v0;

  return objc_msgSend(*v0, sel_hour);
}

id sub_23E3F36EC()
{
  id *v0;

  return objc_msgSend(*v0, sel_minute);
}

uint64_t sub_23E3F36FC()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23E53755C();

  return v3;
}

id sub_23E3F3760()
{
  id *v0;

  return objc_msgSend(*v0, sel_isEnabled);
}

void sub_23E3F3780()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_alarmID);
  sub_23E536F68();

}

void sub_23E3F37CC(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*v1, sel_repeatSchedule);
  type metadata accessor for MTAlarmRepeatSchedule(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTAlarmRepeatSchedule;
  *a1 = v3;
}

double sub_23E3F3814@<D0>(uint64_t a1@<X8>)
{
  id *v1;
  double result;
  objc_super v4;

  v4.receiver = *v1;
  v4.super_class = (Class)MEMORY[0x24BE67818];
  objc_msgSendSuper2(&v4, sel_mutableCopy);
  sub_23E537D24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46228);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_23E3F38A8(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_setHour_, a1);
}

id (*sub_23E3F38BC(_QWORD *a1))(uint64_t a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  a1[1] = *v1;
  *a1 = objc_msgSend(v3, sel_hour);
  return sub_23E3F38FC;
}

id sub_23E3F38FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setHour_, *(_QWORD *)a1);
}

id sub_23E3F3910(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_setMinute_, a1);
}

id (*sub_23E3F3924(_QWORD *a1))(uint64_t a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  a1[1] = *v1;
  *a1 = objc_msgSend(v3, sel_minute);
  return sub_23E3F3964;
}

id sub_23E3F3964(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 8), sel_setMinute_, *(_QWORD *)a1);
}

void sub_23E3F3978(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  id v4;

  v3 = *v2;
  if (a2)
  {
    v4 = (id)sub_23E537538();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setTitle_, v4);

}

void (*sub_23E3F39DC(uint64_t **a1))(_QWORD *a1)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_23E3F3A24(v2);
  return sub_23E254EA0;
}

void (*sub_23E3F3A24(uint64_t *a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, sel_title);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23E53755C();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_23E3F3A98;
}

void sub_23E3F3A98(uint64_t a1, char a2)
{
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = (id)sub_23E537538();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v3)
  {
    v4 = (id)sub_23E537538();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, v4);
  }
  else
  {
    v4 = 0;
    objc_msgSend(*(id *)(a1 + 16), sel_setTitle_, 0);
  }

}

id sub_23E3F3B58(char a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_setEnabled_, a1 & 1);
}

id (*sub_23E3F3B70(uint64_t a1))(uint64_t a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  *(_QWORD *)a1 = *v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v3, sel_isEnabled);
  return sub_23E3F3BB0;
}

id sub_23E3F3BB0(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setEnabled_, *(unsigned __int8 *)(a1 + 8));
}

Swift::Bool __swiftcall MTAlarmRepeatSchedule.contains(_:)(Swift::UInt a1)
{
  uint64_t v1;

  return (v1 & a1) != 0;
}

uint64_t sub_23E3F3BD4(uint64_t a1)
{
  uint64_t result;

  result = sub_23E3F3C5C(&qword_256D46230, &qword_256D46238, 0x24BE67818, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E3F3C18(uint64_t a1)
{
  uint64_t result;

  result = sub_23E3F3C5C(&qword_256D46240, &qword_256D46248, 0x24BE67840, (uint64_t)&protocol conformance descriptor for MTAlarm);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E3F3C5C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_23E1E335C(255, a2);
    result = MEMORY[0x24264FDE4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E3F3C9C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t dispatch thunk of HomeAlarmRepeatSchedule.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeAlarmRepeatSchedule.contains(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeAlarm.hour.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HomeAlarm.minute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HomeAlarm.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HomeAlarm.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HomeAlarm.alarmID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HomeAlarm.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeAlarm.alarmRepeatSchedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HomeAlarm.mutableCopy()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeMutableAlarm.hour.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeMutableAlarm.hour.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HomeMutableAlarm.minute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HomeMutableAlarm.minute.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HomeMutableAlarm.title.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HomeMutableAlarm.title.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HomeMutableAlarm.isEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of HomeMutableAlarm.isEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

BOOL sub_23E3F3D34(uint64_t a1)
{
  _QWORD *v1;

  return (*v1 & a1) != 0;
}

uint64_t sub_23E3F3D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID;
  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23E3F3DA4()
{
  return type metadata accessor for MockAlarm();
}

uint64_t type metadata accessor for MockAlarm()
{
  uint64_t result;

  result = qword_256D46278;
  if (!qword_256D46278)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E3F3DE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23E3F3E84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 32) = a1;
  return result;
}

uint64_t (*sub_23E3F3EC4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23E3F3F04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 40) = a1;
  return result;
}

uint64_t (*sub_23E3F3F44())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F3F84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 48) = a1;
  *(_QWORD *)(v5 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23E3F3FD8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F4018(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 72) = a1;
  return result;
}

uint64_t (*sub_23E3F4058())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E3F4098()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_23E53845C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3F4178()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, *v0 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_23E3F4244()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, *v0 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3F4328()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 32);
}

uint64_t sub_23E3F4364()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 40);
}

uint64_t sub_23E3F43A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23E3F43EC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 72);
}

uint64_t sub_23E3F4428@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID;
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E3F4470()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23E3F44A0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  a1[3] = &type metadata for MockAlarmRepeatSchedule;
  a1[4] = &off_250EED060;
  *a1 = v2;
}

uint64_t sub_23E3F44C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = type metadata accessor for MockAlarm();
  a1[4] = sub_23E1EE1C4(&qword_256D46420, (uint64_t (*)(uint64_t))type metadata accessor for MockAlarm, (uint64_t)&unk_23E54E1F4);
  *a1 = v3;
  return swift_retain();
}

BOOL sub_23E3F4518(uint64_t *a1, uint64_t *a2)
{
  return sub_23E3F45C8(*a1, *a2);
}

uint64_t sub_23E3F4524(uint64_t a1)
{
  uint64_t result;

  result = sub_23E1EE1C4(&qword_256D46408, (uint64_t (*)(uint64_t))type metadata accessor for MockAlarm, (uint64_t)&unk_23E54E1B4);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E3F4560()
{
  return sub_23E1EE1C4(&qword_256D46410, (uint64_t (*)(uint64_t))type metadata accessor for MockAlarm, (uint64_t)&unk_23E54E170);
}

uint64_t sub_23E3F458C(uint64_t a1)
{
  uint64_t result;

  result = sub_23E1EE1C4(&qword_256D46418, (uint64_t (*)(uint64_t))type metadata accessor for MockAlarm, (uint64_t)&unk_23E54E198);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

BOOL sub_23E3F45C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  char v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  int v21;
  _BYTE v22[24];

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v22[-v9];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v11(&v22[-v9], a1 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v4);
  v11(v8, a2 + OBJC_IVAR____TtC13HomeDataModel9MockAlarm_alarmID, v4);
  v12 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  if ((v12 & 1) == 0)
    return 0;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  if (v14 != *(_QWORD *)(a2 + 32))
    return 0;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  if (v15 != *(_QWORD *)(a2 + 40))
    return 0;
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 56);
  if (!v17)
  {
    if (!v18)
      goto LABEL_11;
    return 0;
  }
  if (!v18)
    return 0;
  if (v16 == *(_QWORD *)(a2 + 48) && v17 == v18 || (v19 = sub_23E538354(), result = 0, (v19 & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    v21 = *(unsigned __int8 *)(a1 + 72);
    swift_beginAccess();
    if (v21 == *(unsigned __int8 *)(a2 + 72))
      return *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MockAlarmRepeatSchedule()
{
  return &type metadata for MockAlarmRepeatSchedule;
}

unint64_t sub_23E3F4808()
{
  unint64_t result;

  result = qword_256D46428;
  if (!qword_256D46428)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E268, &type metadata for MockAlarmRepeatSchedule);
    atomic_store(result, (unint64_t *)&qword_256D46428);
  }
  return result;
}

uint64_t sub_23E3F4850()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[16];
  _QWORD v5[2];

  if ((v0[2] & 1) != 0 || (*((_BYTE *)v0 + 17) & 1) != 0)
  {
    static String.hfLocalized(_:)();
    return v2;
  }
  else
  {
    if (v0[1])
    {
      v1 = *v0;
    }
    else
    {
      v1 = v0[3];
      if (v0[4])
      {
        sub_23E3F4974((uint64_t)(v0 + 5), (uint64_t)v4);
        sub_23E3F4974((uint64_t)v4, (uint64_t)v5);
        if (v5[1])
        {
          swift_bridgeObjectRetain();
          sub_23E537628();
          sub_23E537628();
          return v1;
        }
      }
      if (v0[6])
      {
        v1 = v0[5];
        swift_bridgeObjectRetain();
        return v1;
      }
    }
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_23E3F4974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E3F49C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  int *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t inited;
  unint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  char v96;
  id v97;
  void *v98;
  id v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int16 v112;
  id v113;
  id v114;
  void *v115;
  id v116;
  char v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  __int16 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t updated;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  id v151;
  uint64_t v152;
  void *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  uint64_t v159;
  unsigned __int16 v160;
  char v161;

  v151 = a3;
  v152 = a5;
  v157 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v9);
  v141 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v11);
  v148 = (uint64_t)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v146 = (_QWORD *)((char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v140 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v139 = (char *)&v132 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v149 = (uint64_t)&v132 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v147 = (char *)&v132 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v145 = (uint64_t)&v132 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v144 = (char *)&v132 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v143 = (uint64_t)&v132 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v142 = (uint64_t)&v132 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v132 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v159 = (uint64_t)&v132 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v132 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_23E536F80();
  v155 = *(_QWORD *)(v38 - 8);
  v156 = v38;
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v132 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v154 = (char *)&v132 - v42;
  v43 = (int *)type metadata accessor for StaticMediaProfile();
  v44 = *((_QWORD *)v43 - 1);
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v132 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = *a4;
  v158 = a1;
  v47 = objc_msgSend(a1, sel_accessory);
  if (!v47)
    goto LABEL_7;
  v48 = v47;
  v49 = objc_msgSend(v47, sel_home);
  if (!v49)
  {

LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v44 + 56))(a6, 1, 1, v43);
  }
  v137 = v49;
  v50 = objc_msgSend(v158, sel_accessory);
  v136 = a6;
  v135 = v44;
  v153 = v48;
  if (v50)
  {
    v51 = v50;
    v52 = objc_msgSend(v50, sel_uniqueIdentifier);

    sub_23E536F68();
    v54 = v155;
    v53 = v156;
    v55 = *(void (**)(char *, char *, uint64_t))(v155 + 32);
    v56 = v41;
    v55(v37, v41, v156);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v53);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v37, 1, v53) != 1)
    {
      v55(v154, v37, v156);
      goto LABEL_10;
    }
  }
  else
  {
    v56 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v37, 1, 1, v156);
  }
  sub_23E536F74();
  sub_23E1E7C64((uint64_t)v37, &qword_254333F50);
LABEL_10:
  v58 = v159;
  v59 = v157;
  if (*(_QWORD *)(v157 + 16) && (v60 = sub_23E1E3300((uint64_t)v154), (v61 & 1) != 0))
  {
    v62 = v60;
    v63 = *(_QWORD *)(v59 + 56);
    v64 = type metadata accessor for StaticAccessory(0);
    v65 = *(_QWORD *)(v64 - 8);
    sub_23E1E2F50(v63 + *(_QWORD *)(v65 + 72) * v62, v159, type metadata accessor for StaticAccessory);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v159, 0, 1, v64);
  }
  else
  {
    v66 = type metadata accessor for StaticAccessory(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v58, 1, 1, v66);
  }
  swift_bridgeObjectRelease();
  v67 = objc_msgSend(v153, sel_room);
  if (!v67)
    v67 = objc_msgSend(v137, sel_roomForEntireHome);
  v68 = objc_msgSend(v158, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E7C20(v159, (uint64_t)v33, &qword_254333468);
  v69 = (int *)type metadata accessor for StaticAccessory(0);
  v133 = *((_QWORD *)v69 - 1);
  v157 = *(_QWORD *)(v133 + 48);
  if (((unsigned int (*)(char *, uint64_t, int *))v157)(v33, 1, v69) == 1)
  {
    sub_23E1E7C64((uint64_t)v33, &qword_254333468);
    v70 = objc_msgSend(v67, sel_name);
    v71 = sub_23E53755C();
    v73 = v72;

  }
  else
  {
    v74 = (uint64_t *)&v33[v69[5]];
    v71 = *v74;
    v73 = v74[1];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v33, type metadata accessor for StaticAccessory);
  }
  v75 = (uint64_t *)&v46[v43[5]];
  *v75 = v71;
  v75[1] = v73;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v76 = v155;
  v77 = (*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
  v78 = swift_allocObject();
  v132 = xmmword_23E539650;
  *(_OWORD *)(v78 + 16) = xmmword_23E539650;
  v79 = objc_msgSend(v67, sel_uniqueIdentifier);
  sub_23E536F68();

  (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v78 + v77, v56, v156);
  v80 = sub_23E2CD9CC(v78);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)&v46[v43[6]] = v80;
  v134 = v67;
  v81 = objc_msgSend(v67, sel_name);
  v82 = sub_23E53755C();
  v84 = v83;

  v85 = (uint64_t *)&v46[v43[7]];
  *v85 = v82;
  v85[1] = v84;
  v86 = v153;
  HMAccessory.dateAdded.getter((uint64_t)&v46[v43[8]]);
  v46[v43[10]] = sub_23E47887C() & 1;
  v46[v43[11]] = HMAccessory.isFavorite.getter() & 1;
  v46[v43[12]] = HMAccessory.shouldShowInDashboard.getter() & 1;
  v46[v43[13]] = objc_msgSend(v86, sel_isCurrentAccessory);
  v87 = v159;
  v88 = v142;
  sub_23E1E7C20(v159, v142, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v88, 1, v69) == 1)
  {
    sub_23E1E7C64(v88, &qword_254333468);
    v89 = 0xEA00000000006C6CLL;
    v90 = 0x69662E6573756F68;
  }
  else
  {
    v91 = *(unsigned __int16 *)(v88 + v69[22]);
    sub_23E1E2FA0(v88, type metadata accessor for StaticAccessory);
    v89 = 0xEA00000000006C6CLL;
    v90 = 0x69662E6573756F68;
    if ((~v91 & 0xFEFC) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333430);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v132;
      *(_WORD *)(inited + 32) = v91;
      v90 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
      v89 = v93;
      swift_setDeallocating();
    }
  }
  v94 = (uint64_t *)&v46[v43[9]];
  *v94 = v90;
  v94[1] = v89;
  (*(void (**)(char *, char *, uint64_t))(v155 + 16))(&v46[v43[14]], v154, v156);
  v95 = v143;
  sub_23E1E7C20(v87, v143, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v95, 1, v69) == 1)
  {
    sub_23E1E7C64(v95, &qword_254333468);
    v96 = 0;
  }
  else
  {
    v96 = *(_BYTE *)(v95 + v69[27]);
    sub_23E1E2FA0(v95, type metadata accessor for StaticAccessory);
  }
  v46[v43[15]] = v96;
  v97 = objc_msgSend(v158, sel_settings);
  if (v97
    && (v98 = v97, v99 = objc_msgSend(v97, sel_rootGroup), v98, v99))
  {

    v100 = 1;
  }
  else
  {
    v100 = 0;
  }
  v101 = v133;
  v46[v43[16]] = v100;
  v102 = (uint64_t)v146;
  v103 = v137;
  *v146 = v137;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v160) = v150;
  v104 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v101 + 56))(v144, 1, 1, v69);
  v105 = v103;
  v106 = sub_23E44E320(v102, (uint64_t)v105, v153, (char *)&v160, 1, v104, v152);
  swift_bridgeObjectRelease();
  sub_23E1E7C64(v104, &qword_254333468);
  sub_23E1E2FA0(v102, type metadata accessor for StateSnapshot.UpdateType);
  *(_QWORD *)&v46[v43[17]] = v106;
  v107 = v145;
  sub_23E1E7C20(v87, v145, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v107, 1, v69) == 1)
  {
    sub_23E1E7C64(v107, &qword_254333468);
    v108 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    v109 = v148;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v148, 1, 1, v108);
  }
  else
  {
    v109 = v148;
    sub_23E1E2F50(v107 + v69[6], v148, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2FA0(v107, type metadata accessor for StaticAccessory);
    v110 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v109, 0, 1, v110);
  }
  v111 = (uint64_t)v147;
  sub_23E1E4E3C(v109, (uint64_t)&v46[v43[18]], &qword_254333218);
  sub_23E1E7C20(v87, v111, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v111, 1, v69) == 1)
  {
    sub_23E1E7C64(v111, &qword_254333468);
    v112 = -260;
  }
  else
  {
    v112 = *(_WORD *)(v111 + v69[22]);
    sub_23E1E2FA0(v111, type metadata accessor for StaticAccessory);
  }
  v160 = v112;
  v113 = v158;
  StaticMediaSystemComponent.PlaybackState.init(from:specialMediaCategory:)(v113, &v160, &v161);
  v46[v43[19]] = v161;
  v114 = objc_msgSend(v113, sel_mediaSession);
  if (v114
    && (v115 = v114, v116 = objc_msgSend(v114, sel_sleepWakeState), v115, (unint64_t)v116 <= 2))
  {
    v117 = 2 - (_BYTE)v116;
  }
  else
  {
    v117 = 3;
  }
  v46[v43[20]] = v117;
  v118 = objc_msgSend(v153, sel_audioDestinationIdentifier);
  if (v118)
  {
    v119 = v118;
    v120 = sub_23E53755C();
    v122 = v121;

  }
  else
  {

    v120 = 0;
    v122 = 0;
  }
  v123 = (uint64_t)v141;
  v124 = (uint64_t)v140;
  v125 = (uint64_t)v139;
  (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
  v126 = (uint64_t *)&v46[v43[21]];
  *v126 = v120;
  v126[1] = v122;
  v127 = v149;
  sub_23E1E7C20(v159, v149, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v127, 1, v69) == 1)
  {
    sub_23E1E7C64(v127, &qword_254333468);
    v128 = -260;
  }
  else
  {
    v128 = *(_WORD *)(v127 + v69[22]);
    sub_23E1E2FA0(v127, type metadata accessor for StaticAccessory);
  }
  v129 = v136;
  *(_WORD *)&v46[v43[22]] = v128;
  sub_23E1E7C20(v159, v125, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v125, 1, v69) == 1)
  {
    sub_23E1E7C64(v125, &qword_254333468);
    v130 = 0;
  }
  else
  {
    v130 = *(_QWORD *)(v125 + v69[29]);
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v125, type metadata accessor for StaticAccessory);
  }
  *(_QWORD *)&v46[v43[23]] = v130;
  sub_23E1E4E3C(v159, v124, &qword_254333468);
  if (((unsigned int (*)(uint64_t, uint64_t, int *))v157)(v124, 1, v69) == 1)
  {
    sub_23E1E7C64(v124, &qword_254333468);
    v131 = type metadata accessor for StaticSoftwareUpdate(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v123, 1, 1, v131);
  }
  else
  {
    sub_23E1E7C20(v124 + v69[26], v123, &qword_2543332B8);
    sub_23E1E2FA0(v124, type metadata accessor for StaticAccessory);
  }
  sub_23E1E4E3C(v123, (uint64_t)&v46[v43[24]], &qword_2543332B8);
  v46[v43[25]] = v150;
  sub_23E1E2FDC((uint64_t)v46, v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v135 + 56))(v129, 0, 1, v43);
}

uint64_t sub_23E3F585C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 168) = a3;
  *(_QWORD *)(v4 + 176) = a4;
  *(_BYTE *)(v4 + 460) = a2;
  *(_QWORD *)(v4 + 160) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  v5 = sub_23E536F80();
  *(_QWORD *)(v4 + 192) = v5;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  *(_QWORD *)(v4 + 216) = swift_task_alloc();
  v6 = type metadata accessor for StaticAccessory(0);
  *(_QWORD *)(v4 + 224) = v6;
  *(_QWORD *)(v4 + 232) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 240) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3F5944()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v0 + 256) = v1;
  *(_DWORD *)(v0 + 452) = *(_DWORD *)(v1 + 20);
  *(_QWORD *)(v0 + 264) = sub_23E5378F8();
  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F59C4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3F5A28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F5A88()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 288) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3F5AD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 296) = sub_23E536F44();
  *(_QWORD *)(v0 + 304) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F5B44()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[37];
  v2 = (void *)v0[36];
  swift_release();
  v0[39] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3F5BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, uint64_t, uint64_t, _QWORD);
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  NSObject *v52;
  uint64_t v53;
  uint8_t *v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (*(_QWORD *)(v0 + 312))
  {
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23E53803C())
    {
      sub_23E2D018C(MEMORY[0x24BEE4AF8]);
      v1 = v50;
    }
    else
    {
      v1 = MEMORY[0x24BEE4B08];
    }
    v2 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 136) = v1;
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v0 + 320) = v3;
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 200);
      *(_DWORD *)(v0 + 456) = *(_DWORD *)(v4 + 80);
      *(_QWORD *)(v0 + 328) = *(_QWORD *)(v4 + 72);
      *(_QWORD *)(v0 + 336) = *(_QWORD *)(v4 + 16);
      swift_bridgeObjectRetain();
      v5 = 0;
      while (1)
      {
        *(_QWORD *)(v0 + 344) = v5;
        v6 = *(_QWORD *)(v0 + 248);
        v7 = *(_QWORD *)(v0 + 192);
        v8 = *(_QWORD *)(v0 + 200);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 336))(v6, *(_QWORD *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 456) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 456))+ *(_QWORD *)(v0 + 328) * v5, v7);
        v9 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56);
        *(_QWORD *)(v0 + 352) = v9;
        v9(v6, 0, 1, v7);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          break;
        v10 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + *(int *)(*(_QWORD *)(v0 + 256) + 32));
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192));
        if (*(_QWORD *)(v10 + 16) && (v11 = sub_23E1E3300(*(_QWORD *)(v0 + 216)), (v12 & 1) != 0))
        {
          sub_23E1E2F50(*(_QWORD *)(v10 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 232) + 72) * v11, *(_QWORD *)(v0 + 184), type metadata accessor for StaticAccessory);
          v13 = 0;
        }
        else
        {
          v13 = 1;
        }
        v14 = *(_QWORD *)(v0 + 224);
        v15 = *(_QWORD *)(v0 + 232);
        v16 = *(_QWORD *)(v0 + 216);
        v17 = *(_QWORD *)(v0 + 192);
        v18 = *(_QWORD *)(v0 + 200);
        v19 = *(_QWORD *)(v0 + 184);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v19, v13, 1, v14);
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14) != 1)
        {
          sub_23E1E2FDC(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 240), type metadata accessor for StaticAccessory);
          *(_QWORD *)(v0 + 360) = sub_23E5378EC();
          sub_23E5378B0();
          return swift_task_switch();
        }
        sub_23E1E7C64(*(_QWORD *)(v0 + 184), &qword_254333468);
        v5 = *(_QWORD *)(v0 + 344) + 1;
        if (v5 == *(_QWORD *)(v0 + 320))
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 352))(*(_QWORD *)(v0 + 248), 1, 1, *(_QWORD *)(v0 + 192));
          break;
        }
      }
    }
    else
    {
      v41 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 200) + 56);
      swift_bridgeObjectRetain();
      v41(*(_QWORD *)(v0 + 248), 1, 1, *(_QWORD *)(v0 + 192));
    }
    v42 = *(void **)(v0 + 312);
    swift_bridgeObjectRelease();
    sub_23E3FB96C(*(_QWORD *)(v0 + 136));
    swift_bridgeObjectRelease();
    sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
    sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
    v43 = sub_23E537A00();
    *(_QWORD *)(v0 + 408) = v43;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E3F6838;
    v44 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v45 = (_QWORD *)(v0 + 80);
    v45[1] = 0x40000000;
    v45[2] = sub_23E267484;
    v45[3] = &block_descriptor_27;
    v45[4] = v44;
    objc_msgSend(v42, sel_executeActions_completionHandler_, v43, v45);
    return swift_continuation_await();
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v20 = sub_23E5371A8();
    __swift_project_value_buffer(v20, (uint64_t)qword_254333D88);
    swift_bridgeObjectRetain_n();
    v21 = sub_23E537190();
    v22 = sub_23E537B08();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 168);
    if (v23)
    {
      v25 = *(unsigned __int8 *)(v0 + 460);
      v26 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v57 = v53;
      *(_DWORD *)v26 = 136315650;
      *(_QWORD *)(v0 + 144) = sub_23E1FD768(0xD000000000000031, 0x800000023E569E10, &v57);
      sub_23E537CF4();
      *(_WORD *)(v26 + 12) = 1024;
      *(_DWORD *)(v0 + 448) = v25;
      sub_23E537CF4();
      v54 = (uint8_t *)v26;
      *(_WORD *)(v26 + 18) = 2080;
      v27 = *(_QWORD *)(v24 + 16);
      v28 = MEMORY[0x24BEE4AF8];
      if (v27)
      {
        v51 = v22;
        v52 = v21;
        v29 = *(_QWORD *)(v0 + 200);
        v30 = *(_QWORD *)(v0 + 168);
        v58 = MEMORY[0x24BEE4AF8];
        sub_23E2058B0(0, v27, 0);
        v31 = v30 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
        v32 = v29;
        v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
        v56 = *(_QWORD *)(v29 + 72);
        do
        {
          v33 = *(_QWORD *)(v0 + 208);
          v34 = *(_QWORD *)(v0 + 192);
          v55(v33, v31, v34);
          v35 = sub_23E536F38();
          v37 = v36;
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
          v28 = v58;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E2058B0(0, *(_QWORD *)(v28 + 16) + 1, 1);
            v28 = v58;
          }
          v39 = *(_QWORD *)(v28 + 16);
          v38 = *(_QWORD *)(v28 + 24);
          if (v39 >= v38 >> 1)
          {
            sub_23E2058B0(v38 > 1, v39 + 1, 1);
            v28 = v58;
          }
          *(_QWORD *)(v28 + 16) = v39 + 1;
          v40 = v28 + 16 * v39;
          *(_QWORD *)(v40 + 32) = v35;
          *(_QWORD *)(v40 + 40) = v37;
          v31 += v56;
          --v27;
        }
        while (v27);
        v21 = v52;
        v22 = v51;
      }
      *(_QWORD *)(v0 + 120) = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
      sub_23E309770();
      v47 = sub_23E5374F0();
      v49 = v48;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 128) = sub_23E1FD768(v47, v49, &v57);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v21, v22, "%s Home not found to set power state to %{BOOL}d for device idss %s.", v54, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v53, -1, -1);
      MEMORY[0x24264FEBC](v54, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 256) - 8) + 56))(*(_QWORD *)(v0 + 160), 1, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E3F62DC()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3F6318()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 368) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F6378()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 376) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3F63C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 384) = sub_23E536F44();
  *(_QWORD *)(v0 + 392) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F642C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[48];
  v2 = (void *)v0[47];
  swift_release();
  v0[50] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E3F6490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  id v26;

  v1 = *(_QWORD *)(v0 + 400);
  if (v1)
  {
    if (*(_BYTE *)(v0 + 460))
      v2 = 2;
    else
      v2 = 1;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7490]), sel_initWithAccessory_targetSleepWakeState_, v1, v2);
    v4 = *(void **)(v0 + 400);
    v5 = *(_QWORD *)(v0 + 240);
    if (v3)
    {
      sub_23E37FAC0(&v26, v3);

      sub_23E1E2FA0(v5, type metadata accessor for StaticAccessory);
    }
    else
    {
      sub_23E1E2FA0(*(_QWORD *)(v0 + 240), type metadata accessor for StaticAccessory);

    }
  }
  else
  {
    sub_23E1E2FA0(*(_QWORD *)(v0 + 240), type metadata accessor for StaticAccessory);
  }
  v6 = *(_QWORD *)(v0 + 344) + 1;
  if (v6 == *(_QWORD *)(v0 + 320))
  {
LABEL_17:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 352))(*(_QWORD *)(v0 + 248), 1, 1, *(_QWORD *)(v0 + 192));
  }
  else
  {
    while (1)
    {
      *(_QWORD *)(v0 + 344) = v6;
      v7 = *(_QWORD *)(v0 + 248);
      v8 = *(_QWORD *)(v0 + 192);
      v9 = *(_QWORD *)(v0 + 200);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 336))(v7, *(_QWORD *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 456) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 456))+ *(_QWORD *)(v0 + 328) * v6, v8);
      v10 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56);
      *(_QWORD *)(v0 + 352) = v10;
      v10(v7, 0, 1, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        break;
      v11 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + *(int *)(*(_QWORD *)(v0 + 256) + 32));
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192));
      if (*(_QWORD *)(v11 + 16) && (v12 = sub_23E1E3300(*(_QWORD *)(v0 + 216)), (v13 & 1) != 0))
      {
        sub_23E1E2F50(*(_QWORD *)(v11 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 232) + 72) * v12, *(_QWORD *)(v0 + 184), type metadata accessor for StaticAccessory);
        v14 = 0;
      }
      else
      {
        v14 = 1;
      }
      v15 = *(_QWORD *)(v0 + 224);
      v16 = *(_QWORD *)(v0 + 232);
      v17 = *(_QWORD *)(v0 + 216);
      v18 = *(_QWORD *)(v0 + 192);
      v19 = *(_QWORD *)(v0 + 200);
      v20 = *(_QWORD *)(v0 + 184);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v20, v14, 1, v15);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15) != 1)
      {
        sub_23E1E2FDC(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 240), type metadata accessor for StaticAccessory);
        *(_QWORD *)(v0 + 360) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }
      sub_23E1E7C64(*(_QWORD *)(v0 + 184), &qword_254333468);
      v6 = *(_QWORD *)(v0 + 344) + 1;
      if (v6 == *(_QWORD *)(v0 + 320))
        goto LABEL_17;
    }
  }
  v21 = *(void **)(v0 + 312);
  swift_bridgeObjectRelease();
  sub_23E3FB96C(*(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  sub_23E1E335C(0, (unint64_t *)&qword_254332C38);
  sub_23E1E6118((unint64_t *)&qword_254332C40, (unint64_t *)&qword_254332C38);
  v22 = sub_23E537A00();
  *(_QWORD *)(v0 + 408) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E3F6838;
  v23 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v24 = (_QWORD *)(v0 + 80);
  v24[1] = 0x40000000;
  v24[2] = sub_23E267484;
  v24[3] = &block_descriptor_27;
  v24[4] = v23;
  objc_msgSend(v21, sel_executeActions_completionHandler_, v22, v24);
  return swift_continuation_await();
}

uint64_t sub_23E3F6838()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 416) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3F6898()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 424) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F6900()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E3F693C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 432) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3F699C()
{
  uint64_t *v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  v0[55] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23E3F6A00;
  return DataModel.rebuildSnapshot(for:)(v0[20], v0[39]);
}

uint64_t sub_23E3F6A00()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3F6A54()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3F6AC0()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  v1 = (void *)v0[51];
  swift_willThrow();

  if (qword_254333DB8 != -1)
    swift_once();
  v2 = (void *)v0[52];
  v3 = sub_23E5371A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_254333D88);
  v4 = v2;
  v5 = v2;
  v6 = sub_23E537190();
  v7 = sub_23E537B08();
  v8 = os_log_type_enabled(v6, v7);
  v9 = (void *)v0[52];
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v13;
    sub_23E537CF4();
    *v11 = v13;

    _os_log_impl(&dword_23E1DF000, v6, v7, "Error executing power actions %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);

  }
  else
  {

  }
  v0[53] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t StaticMediaProfile.copyReplacing(id:name:roomIds:roomName:dateAdded:iconSymbol:isDoubleHigh:isCurrentAccessory:isFavorite:shouldShowInDashboard:staticAccessoryId:isReachable:hasValidSettings:staticServicesDictionary:deviceId:playbackState:sleepWakeState:audioDestinationId:specialMediaCategory:symptoms:softwareUpdate:homeNonResponsiveType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, uint64_t a14, char a15, char a16, uint64_t a17, uint64_t a18, unsigned __int8 *a19, uint64_t (*a20)(char *, uint64_t, uint64_t),uint64_t a21,uint64_t a22,unsigned __int16 *a23,uint64_t a24,uint64_t a25,unsigned __int8 *a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  unsigned __int8 *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  unsigned __int8 *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  __int16 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  char v158;
  char v159;
  char v160;
  uint64_t v161;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  unsigned __int8 *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  int v173;
  int v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  unsigned __int8 *v182;
  uint64_t (*v183)(char *, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned __int16 *v189;
  unsigned __int8 *v190;
  unsigned __int8 *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  char v206;
  __int16 v207;
  char v208;
  char v209;

  v27 = v26;
  v199 = a8;
  v169 = a7;
  v168 = a6;
  v200 = a5;
  v190 = a4;
  v164 = a3;
  v197 = a9;
  v198 = a2;
  v191 = a26;
  v192 = a1;
  v189 = a23;
  v183 = a20;
  v182 = a19;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v196 = (uint64_t)&v163 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v204 = (uint64_t)&v163 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v178 = (char *)&v163 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v203 = (uint64_t)&v163 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v186 = (uint64_t)&v163 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v202 = (uint64_t)&v163 - v39;
  v205 = (int *)type metadata accessor for StaticMediaProfile();
  v40 = MEMORY[0x24BDAC7A8](v205);
  v181 = (uint64_t)&v163 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v195 = (uint64_t)&v163 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v194 = (uint64_t)&v163 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v193 = (uint64_t)&v163 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v179 = (char *)&v163 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v177 = (char *)&v163 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v176 = (char *)&v163 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v175 = (char *)&v163 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v188 = (uint64_t)&v163 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v187 = (uint64_t)&v163 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v172 = (char *)&v163 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v171 = (char *)&v163 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v170 = (char *)&v163 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v184 = (uint64_t)&v163 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v166 = (char *)&v163 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v165 = (uint64_t)&v163 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v74 = (char *)&v163 - v73;
  v75 = MEMORY[0x24BDAC7A8](v72);
  v77 = (char *)&v163 - v76;
  v78 = MEMORY[0x24BDAC7A8](v75);
  v80 = (char *)&v163 - v79;
  v81 = MEMORY[0x24BDAC7A8](v78);
  v83 = (char *)&v163 - v82;
  MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v163 - v84;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v87 = MEMORY[0x24BDAC7A8](v86);
  v185 = (uint64_t)&v163 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v87);
  v90 = (char *)&v163 - v89;
  v91 = sub_23E536F80();
  v92 = MEMORY[0x24BDAC7A8](v91);
  v201 = (uint64_t)&v163 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v92);
  v95 = (char *)&v163 - v94;
  v173 = *v182;
  v174 = *(unsigned __int8 *)v183;
  LODWORD(v189) = *v189;
  LODWORD(v182) = *v191;
  v97 = v96;
  sub_23E1E7C20(v192, (uint64_t)v90, &qword_254333F50);
  sub_23E1E2F50(v27, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v183 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v98 = v183(v90, 1, v91);
  v180 = v95;
  v167 = v97;
  if (v98 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v85, v91);
    sub_23E1E2FA0((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C64((uint64_t)v90, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v95, v90, v91);
  }
  v99 = v169;
  v100 = v168;
  v101 = v164;
  sub_23E1E2F50(v27, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v101)
  {
    v102 = v101;
  }
  else
  {
    v103 = (uint64_t *)&v83[v205[5]];
    v102 = v103[1];
    v198 = *v103;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  sub_23E1E2F50(v27, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v190)
  {
    v191 = v190;
  }
  else
  {
    v191 = *(unsigned __int8 **)&v80[v205[6]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  sub_23E1E2F50(v27, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v104 = v100;
  v105 = v205;
  if (!v100)
  {
    v200 = *(_QWORD *)&v77[v205[7]];
    v104 = (unsigned __int8 *)swift_bridgeObjectRetain();
  }
  v190 = v104;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v106 = v99;
  v107 = v186;
  sub_23E1E7C20(v106, v186, &qword_2543330E0);
  sub_23E1E2F50(v27, (uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v108 = sub_23E536F20();
  v109 = *(_QWORD *)(v108 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108) == 1)
  {
    sub_23E1E7C20((uint64_t)&v74[v105[8]], v202, &qword_2543330E0);
    sub_23E1E2FA0((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C64(v107, &qword_2543330E0);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v110 = v202;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v202, v107, v108);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v110, 0, 1, v108);
  }
  v111 = (uint64_t)v166;
  v112 = v165;
  sub_23E1E2F50(v27, v165, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (a10)
  {
    v113 = a10;
  }
  else
  {
    v114 = (uint64_t *)(v112 + v105[9]);
    v113 = v114[1];
    v199 = *v114;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v112, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  sub_23E1E2F50(v27, v111, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v192 = v102;
  if (a11 == 2)
    v115 = *(unsigned __int8 *)(v111 + v105[10]);
  else
    v115 = a11 & 1;
  LODWORD(v169) = v115;
  v116 = (uint64_t)v172;
  sub_23E1E2FA0(v111, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v117 = v184;
  sub_23E1E2F50(v27, v184, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (a13 == 2)
    v118 = *(unsigned __int8 *)(v117 + v105[11]);
  else
    v118 = a13 & 1;
  LODWORD(v172) = v118;
  v119 = (uint64_t)v170;
  v120 = v117;
  v121 = v167;
  sub_23E1E2FA0(v120, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  sub_23E1E2F50(v27, v119, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (a12 == 2)
    v122 = *(unsigned __int8 *)(v119 + v105[13]);
  else
    v122 = a12 & 1;
  LODWORD(v184) = v122;
  v123 = (uint64_t)v171;
  sub_23E1E2FA0(v119, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v124 = v185;
  sub_23E1E7C20(a14, v185, &qword_254333F50);
  sub_23E1E2F50(v27, v123, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v183((char *)v124, 1, v91) == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16))(v201, v123 + v105[14], v91);
    sub_23E1E2FA0(v123, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C64(v124, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v123, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 32))(v201, v124, v91);
  }
  v125 = (uint64_t)v175;
  sub_23E1E2F50(v27, v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v186 = v113;
  if (a15 == 2)
    v126 = *(unsigned __int8 *)(v116 + v105[15]);
  else
    v126 = a15 & 1;
  LODWORD(v185) = v126;
  v127 = (uint64_t)v178;
  sub_23E1E2FA0(v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v128 = v187;
  sub_23E1E2F50(v27, v187, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v129 = (uint64_t)v179;
  if (a16 == 2)
    v130 = *(unsigned __int8 *)(v128 + v105[16]);
  else
    v130 = a16 & 1;
  LODWORD(v183) = v130;
  v131 = (uint64_t)v176;
  sub_23E1E2FA0(v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v132 = v188;
  sub_23E1E2F50(v27, v188, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (a17)
  {
    v133 = a17;
  }
  else
  {
    v133 = *(_QWORD *)(v132 + v105[17]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  sub_23E1E7C20(a18, v127, &qword_254333218);
  sub_23E1E2F50(v27, v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v134 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v135 = *(_QWORD *)(v134 - 8);
  v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v127, 1, v134);
  v187 = v133;
  if (v136 == 1)
  {
    sub_23E1E7C20(v125 + v105[18], v203, &qword_254333218);
    sub_23E1E2FA0(v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C64(v127, &qword_254333218);
  }
  else
  {
    sub_23E1E2FA0(v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v137 = v203;
    sub_23E1E2FDC(v127, v203, type metadata accessor for StaticAccessory.DeviceIdentifier);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v135 + 56))(v137, 0, 1, v134);
  }
  v138 = (uint64_t)v177;
  v139 = v174;
  v140 = v173;
  sub_23E1E2F50(v27, v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v140 == 6)
    LOBYTE(v140) = *(_BYTE *)(v131 + v105[19]);
  sub_23E1E2FA0(v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v209 = v140;
  sub_23E1E2F50(v27, v138, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v139 == 4)
    LOBYTE(v139) = *(_BYTE *)(v138 + v105[20]);
  sub_23E1E2FA0(v138, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v208 = v139;
  sub_23E1E2F50(v27, v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v142 = a22;
  if (!a22)
  {
    v143 = (uint64_t *)(v129 + v105[21]);
    a21 = *v143;
    v142 = v143[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v144 = v193;
  sub_23E1E2F50(v27, v193, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v145 = v144;
  v146 = (__int16)v189;
  if ((~(_DWORD)v189 & 0xFEFC) == 0)
    v146 = *(_WORD *)(v145 + v105[22]);
  sub_23E1E2FA0(v145, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v207 = v146;
  v147 = v194;
  sub_23E1E2F50(v27, v194, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v148 = a24;
  if (!a24)
  {
    v148 = *(_QWORD *)(v147 + v105[23]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v147, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v149 = v196;
  sub_23E1E7C20(a25, v196, &qword_2543332B8);
  v150 = v195;
  sub_23E1E2F50(v27, v195, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v151 = type metadata accessor for StaticSoftwareUpdate(0);
  v152 = *(_QWORD *)(v151 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v149, 1, v151) == 1)
  {
    sub_23E1E7C20(v150 + v205[24], v204, &qword_2543332B8);
    sub_23E1E2FA0(v150, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E7C64(v149, &qword_2543332B8);
  }
  else
  {
    sub_23E1E2FA0(v150, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v153 = v204;
    sub_23E1E2FDC(v149, v204, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v152 + 56))(v153, 0, 1, v151);
  }
  v154 = v198;
  v155 = v181;
  v156 = (uint64_t)v180;
  v157 = (int)v182;
  v158 = v169;
  v159 = (char)v172;
  sub_23E1E2F50(v27, v181, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (v157 == 2)
    v160 = *(_BYTE *)(v155 + v205[25]);
  else
    v160 = v157 & 1;
  v161 = v199;
  sub_23E1E2FA0(v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v206 = v160;
  return sub_23E3F9D58(v156, v154, v192, (uint64_t)v191, v200, (uint64_t)v190, v202, v161, v197, v186, v158, v159, 1, v184, v201, v185, (char)v183, v187, v203,
           &v209,
           &v208,
           a21,
           v142,
           &v207,
           v148,
           v204,
           &v206);
}

BOOL StaticMediaProfile.isActivated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 76)) == 1;
}

uint64_t Set<>.staticMediaProfilesIgnoringCurrentDevice.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_23E3D55F8(v0);
}

uint64_t StaticMediaProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticMediaProfile.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.roomIds.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 32), a1, &qword_2543330E0);
}

uint64_t StaticMediaProfile.iconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.isDoubleHigh.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 40));
}

uint64_t StaticMediaProfile.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 44));
}

uint64_t StaticMediaProfile.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 48));
}

uint64_t StaticMediaProfile.isCurrentAccessory.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 52));
}

uint64_t StaticMediaProfile.staticAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticMediaProfile() + 56);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticMediaProfile.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 60));
}

uint64_t StaticMediaProfile.hasValidSettings.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 64));
}

uint64_t StaticMediaProfile.staticServicesDictionary.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.deviceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 72), a1, &qword_254333218);
}

uint64_t StaticMediaProfile.playbackState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaProfile();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t StaticMediaProfile.sleepWakeState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaProfile();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 80));
  return result;
}

uint64_t StaticMediaProfile.audioDestinationId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaProfile() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaProfile.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaProfile();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticMediaProfile.symptoms.getter()
{
  type metadata accessor for StaticMediaProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaProfile.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 96), a1, &qword_2543332B8);
}

uint64_t StaticMediaProfile.homeNonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaProfile();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 100));
  return result;
}

uint64_t StaticMediaProfile.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;

  v2 = v1;
  v4 = type metadata accessor for StaticSoftwareUpdate(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v6);
  v48 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v41 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v46 = (uint64_t)&v39 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v15);
  v43 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F20();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23E1EE1C4(&qword_254333DA0, v9, MEMORY[0x24BDCEA88]);
  v49 = v8;
  v47 = v24;
  sub_23E5374D8();
  v25 = (int *)type metadata accessor for StaticMediaProfile();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v2 + v25[6]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v26);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v25[7] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E1E7C20(v2 + v25[8], (uint64_t)v23, &qword_2543330E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  v27 = v49;
  sub_23E5374D8();
  sub_23E538474();
  sub_23E538474();
  v28 = *(_QWORD *)(v2 + v25[17]);
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)a1, v28);
  swift_bridgeObjectRelease();
  v29 = v43;
  sub_23E1E7C20(v2 + v25[18], v43, &qword_254333218);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v29, 1, v45) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v30 = v46;
    sub_23E1E2FDC(v29, v46, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E538474();
    v31 = v41;
    sub_23E1E2F50(v30, v41, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = v39;
      v32 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v39, v31, v27);
      sub_23E538468();
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v27);
    }
    else
    {
      sub_23E538468();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    sub_23E1E2FA0(v46, type metadata accessor for StaticAccessory.DeviceIdentifier);
  }
  if (*(_BYTE *)(v2 + v25[19]) == 6)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  if (*(_BYTE *)(v2 + v25[20]) == 4)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  if (*(_QWORD *)(v2 + v25[21] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v34 = v51;
  if ((~*(unsigned __int16 *)(v2 + v25[22]) & 0xFEFC) != 0)
  {
    v52 = *(_WORD *)(v2 + v25[22]);
    sub_23E538474();
    StaticAccessory.SpecialMediaCategory.hash(into:)();
  }
  else
  {
    sub_23E538474();
  }
  v35 = *(_QWORD *)(v2 + v25[23]);
  sub_23E538474();
  if (v35)
  {
    swift_bridgeObjectRetain();
    sub_23E240D30((uint64_t)a1, v35);
    swift_bridgeObjectRelease();
  }
  v36 = v48;
  sub_23E1E7C20(v2 + v25[24], v48, &qword_2543332B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v36, 1, v34) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v37 = v42;
    sub_23E1E2FDC(v36, v42, type metadata accessor for StaticSoftwareUpdate);
    sub_23E538474();
    sub_23E5374D8();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_23E1E2FA0(v37, type metadata accessor for StaticSoftwareUpdate);
  }
  return sub_23E538468();
}

uint64_t sub_23E3F87D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3F87FC + 4 * byte_23E54E2B0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E3F87FC()
{
  return 1701667182;
}

uint64_t sub_23E3F880C()
{
  return 0x7364496D6F6F72;
}

uint64_t sub_23E3F8824()
{
  return 0x656D614E6D6F6F72;
}

uint64_t sub_23E3F883C()
{
  return 0x6564644165746164;
}

uint64_t sub_23E3F8858()
{
  return 0x626D79536E6F6369;
}

uint64_t sub_23E3F8878()
{
  return 0x656C62756F447369;
}

uint64_t sub_23E3F8898()
{
  return 0x69726F7661467369;
}

unint64_t sub_23E3F88B4()
{
  return 0xD000000000000015;
}

uint64_t sub_23E3F8A30()
{
  unsigned __int8 *v0;

  return sub_23E3F87D4(*v0);
}

uint64_t sub_23E3F8A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E3FD690(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E3F8A5C(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_23E3F8A68()
{
  sub_23E3FCA80();
  return sub_23E538570();
}

uint64_t sub_23E3F8A90()
{
  sub_23E3FCA80();
  return sub_23E53857C();
}

uint64_t StaticMediaProfile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46430);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3FCA80();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticMediaProfile();
    LOBYTE(v13) = 1;
    sub_23E538270();
    v13 = *(_QWORD *)(v3 + v9[6]);
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 3;
    sub_23E5381EC();
    v11 = v3 + v9[8];
    LOBYTE(v13) = 4;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
    LOBYTE(v13) = 5;
    sub_23E538270();
    LOBYTE(v13) = 6;
    sub_23E53827C();
    LOBYTE(v13) = 7;
    sub_23E53827C();
    LOBYTE(v13) = 8;
    sub_23E53827C();
    LOBYTE(v13) = 9;
    sub_23E53827C();
    LOBYTE(v13) = 10;
    sub_23E5382AC();
    LOBYTE(v13) = 11;
    sub_23E53827C();
    LOBYTE(v13) = 12;
    sub_23E53827C();
    v13 = *(_QWORD *)(v3 + v9[17]);
    v12 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
    sub_23E297E64();
    sub_23E5382AC();
    LOBYTE(v13) = 14;
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    sub_23E1EE1C4(&qword_256D46440, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
    sub_23E538234();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[19]);
    v12 = 15;
    sub_23E3FCAC4();
    sub_23E538234();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[20]);
    v12 = 16;
    sub_23E3FCB08();
    sub_23E538234();
    LOBYTE(v13) = 17;
    sub_23E5381EC();
    LOWORD(v13) = *(_WORD *)(v3 + v9[22]);
    v12 = 18;
    sub_23E39012C();
    sub_23E538234();
    v13 = *(_QWORD *)(v3 + v9[23]);
    v12 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
    sub_23E3FCC18(&qword_256D46460, (uint64_t (*)(void))sub_23E3FCB4C, MEMORY[0x24BEE1700]);
    sub_23E538234();
    LOBYTE(v13) = 20;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_23E1EE1C4(&qword_256D46470, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
    sub_23E538234();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[25]);
    v12 = 21;
    sub_23E3760D8();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaProfile.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticMediaProfile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  int *v52;
  char *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F80();
  v54 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - v14;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46478);
  v16 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = (int *)type metadata accessor for StaticMediaProfile();
  MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23E3FCA80();
  v48 = v18;
  v21 = v50;
  sub_23E5384E0();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  v22 = (uint64_t)v9;
  v50 = v13;
  LOBYTE(v56) = 0;
  v23 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v24 = v53;
  v25 = v15;
  v26 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v26(v53, v25, v10);
  LOBYTE(v56) = 1;
  v27 = sub_23E538144();
  v43 = v26;
  v44 = v23;
  v28 = v52;
  v29 = (uint64_t *)&v24[v52[5]];
  *v29 = v27;
  v29[1] = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v55 = 2;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v24[v28[6]] = v56;
  LOBYTE(v56) = 3;
  v31 = sub_23E5380D8();
  v32 = (uint64_t *)&v24[v28[7]];
  *v32 = v31;
  v32[1] = v33;
  sub_23E536F20();
  LOBYTE(v56) = 4;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538108();
  sub_23E1E4E3C(v22, (uint64_t)&v24[v28[8]], &qword_2543330E0);
  LOBYTE(v56) = 5;
  v34 = sub_23E538144();
  v35 = (uint64_t *)&v24[v28[9]];
  *v35 = v34;
  v35[1] = v36;
  LOBYTE(v56) = 6;
  v24[v28[10]] = sub_23E538150() & 1;
  LOBYTE(v56) = 7;
  v24[v28[11]] = sub_23E538150() & 1;
  LOBYTE(v56) = 8;
  v24[v28[12]] = sub_23E538150() & 1;
  LOBYTE(v56) = 9;
  v53[v52[13]] = sub_23E538150() & 1;
  LOBYTE(v56) = 10;
  sub_23E538180();
  v43(&v53[v52[14]], v50, v10);
  LOBYTE(v56) = 11;
  v53[v52[15]] = sub_23E538150() & 1;
  LOBYTE(v56) = 12;
  v53[v52[16]] = sub_23E538150() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v55 = 13;
  sub_23E298768();
  sub_23E538180();
  *(_QWORD *)&v53[v52[17]] = v56;
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  LOBYTE(v56) = 14;
  sub_23E1EE1C4(&qword_256D46480, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
  sub_23E538108();
  sub_23E1E4E3C(v47, (uint64_t)&v53[v52[18]], &qword_254333218);
  v55 = 15;
  sub_23E3FCB90();
  sub_23E538108();
  v53[v52[19]] = v56;
  v55 = 16;
  sub_23E3FCBD4();
  sub_23E538108();
  v53[v52[20]] = v56;
  LOBYTE(v56) = 17;
  v37 = sub_23E5380D8();
  v38 = (uint64_t *)&v53[v52[21]];
  *v38 = v37;
  v38[1] = v39;
  v55 = 18;
  sub_23E39025C();
  sub_23E538108();
  *(_WORD *)&v53[v52[22]] = v56;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
  v55 = 19;
  sub_23E3FCC18(&qword_256D46498, (uint64_t (*)(void))sub_23E3FCC80, MEMORY[0x24BEE1720]);
  sub_23E538108();
  *(_QWORD *)&v53[v52[23]] = v56;
  type metadata accessor for StaticSoftwareUpdate(0);
  LOBYTE(v56) = 20;
  sub_23E1EE1C4(&qword_256D464A8, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
  sub_23E538108();
  sub_23E1E4E3C(v45, (uint64_t)&v53[v52[24]], &qword_2543332B8);
  v55 = 21;
  sub_23E376160();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v48, v49);
  v40 = (uint64_t)v53;
  v53[v52[25]] = v56;
  sub_23E1E2F50(v40, v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
  return sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_23E3F9D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13, char a14, uint64_t a15, char a16, char a17, uint64_t a18, uint64_t a19, char *a20,char *a21,uint64_t a22,uint64_t a23,__int16 *a24,uint64_t a25,uint64_t a26,char *a27)
{
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  int *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t result;
  char v44;
  char v45;
  __int16 v46;
  char v47;

  v44 = *a20;
  v45 = *a21;
  v46 = *a24;
  v47 = *a27;
  v33 = sub_23E536F80();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32);
  v34(a9, a1, v33);
  v35 = (int *)type metadata accessor for StaticMediaProfile();
  v36 = (_QWORD *)(a9 + v35[5]);
  *v36 = a2;
  v36[1] = a3;
  *(_QWORD *)(a9 + v35[6]) = a4;
  v37 = (_QWORD *)(a9 + v35[7]);
  *v37 = a5;
  v37[1] = a6;
  sub_23E1E4E3C(a7, a9 + v35[8], &qword_2543330E0);
  v38 = (_QWORD *)(a9 + v35[9]);
  *v38 = a8;
  v38[1] = a10;
  *(_BYTE *)(a9 + v35[10]) = a11;
  *(_BYTE *)(a9 + v35[11]) = a12;
  *(_BYTE *)(a9 + v35[12]) = a13;
  *(_BYTE *)(a9 + v35[13]) = a14;
  v34(a9 + v35[14], a15, v33);
  *(_BYTE *)(a9 + v35[15]) = a16;
  *(_BYTE *)(a9 + v35[16]) = a17;
  *(_QWORD *)(a9 + v35[17]) = a18;
  sub_23E1E4E3C(a19, a9 + v35[18], &qword_254333218);
  *(_BYTE *)(a9 + v35[19]) = v44;
  *(_BYTE *)(a9 + v35[20]) = v45;
  v39 = (_QWORD *)(a9 + v35[21]);
  *v39 = a22;
  v39[1] = a23;
  *(_WORD *)(a9 + v35[22]) = v46;
  *(_QWORD *)(a9 + v35[23]) = a25;
  result = sub_23E1E4E3C(a26, a9 + v35[24], &qword_2543332B8);
  *(_BYTE *)(a9 + v35[25]) = v47;
  return result;
}

uint64_t sub_23E3F9FA8()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3F9FE8()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3FA020@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaProfile.init(from:)(a1, a2);
}

uint64_t sub_23E3FA034(_QWORD *a1)
{
  return StaticMediaProfile.encode(to:)(a1);
}

uint64_t StaticMediaProfile.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  unsigned int v8;
  BOOL v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v2, (uint64_t)v6, v7);
  v8 = *(unsigned __int16 *)&v6[*(int *)(v4 + 88)];
  if ((~v8 & 0xFEFC) == 0)
    goto LABEL_7;
  if (!(v8 >> 14))
  {
    v23 = *(_WORD *)&v6[*(int *)(v4 + 88)];
    v24 = 0x800000023E567830;
    v25 = v23 >= 2;
    v9 = v23 == 2;
    v26 = 0x2E646F70656D6F68;
    if (v9)
      v26 = 0xD000000000000010;
    else
      v24 = 0xEC0000006C6C6966;
    if (v25)
      v27 = v26;
    else
      v27 = 0x2E646F70656D6F68;
    if (v25)
      v10 = v24;
    else
      v10 = 0xEC0000006C6C6966;
    goto LABEL_20;
  }
  v9 = v8 >> 14 == 2 && v8 == 32769;
  if (v9)
  {
    v10 = 0xEC0000006C6C6966;
    v27 = 0x2E7674656C707061;
LABEL_20:
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    result = swift_bridgeObjectRetain_n();
    v21 = 0;
    v19 = 0;
    v14 = 0;
    v17 = 0;
    v22 = v27;
    v20 = v27;
    v11 = v10;
    v13 = v22;
    v12 = v10;
    v16 = v22;
    v15 = v10;
    goto LABEL_21;
  }
LABEL_7:
  if (qword_256D3ED80 != -1)
    swift_once();
  v10 = unk_256D42D60;
  v31 = qword_256D42D58;
  v30 = byte_256D42D68;
  v11 = unk_256D42D78;
  v29 = qword_256D42D70;
  HIDWORD(v28) = byte_256D42D80;
  v13 = qword_256D42D88;
  v12 = unk_256D42D90;
  v14 = byte_256D42D98;
  v16 = qword_256D42DA0;
  v15 = unk_256D42DA8;
  v17 = byte_256D42DB0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v19 = BYTE4(v28);
  v20 = v29;
  v21 = v30;
  v22 = v31;
LABEL_21:
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 80) = v15;
  *(_BYTE *)(a1 + 88) = v17;
  return result;
}

uint64_t StaticMediaProfile.foregroundColor.getter()
{
  return sub_23E537364();
}

void StaticMediaProfile.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMediaProfile.tileStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticMediaProfile();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = 0;
  v7 = 0;
  v8 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 60));
  if ((v8 & 1) == 0)
  {
    static String.hfLocalized(_:)();
    v6 = v9;
    v7 = v10;
  }
  v11 = 0;
  v12 = *(unsigned __int16 *)(v1 + v2[22]);
  if (v12 >> 14)
    v13 = 1;
  else
    v13 = (v12 & 0xFEFC) == 65276;
  if (!v13 && ((v8 ^ 1) & 1) == 0)
    v11 = *(_BYTE *)(v1 + v2[16]) ^ 1;
  if (*(_BYTE *)(v1 + v2[19]) == 6)
  {
    v14 = 0;
  }
  else
  {
    v21[15] = *(_BYTE *)(v1 + v2[19]);
    v14 = sub_23E23F874();
  }
  v15 = sub_23E34CB08(v1 + v2[24], 0);
  v17 = v16;
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (!v17)
  {
    v15 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v5[v2[23]]);
    v17 = v18;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if ((v11 & 1) != 0)
  {
    static String.hfLocalized(_:)();
    v6 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17)
      return v15;
    else
      return v14;
  }
  return v6;
}

uint64_t StaticMediaProfile.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticMediaProfile.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E3FA51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23E3FA550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E1E7C20(v2 + *(int *)(a1 + 32), a2, &qword_2543330E0);
}

uint64_t sub_23E3FA57C()
{
  return sub_23E537364();
}

uint64_t sub_23E3FA590(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_23E3FA59C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_23E3FA5A8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_23E3FA5B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL sub_23E3FA5E8(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(a1 + 76)) == 1;
}

uint64_t sub_23E3FA5FC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 60));
}

uint64_t StaticMediaProfile.mediaProfile.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E3FA628()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3FA694()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E3FA6F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3FA758()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E3FA7A0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3FA808()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_mediaProfileFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticMediaProfile.staticServices.getter()
{
  uint64_t v0;

  type metadata accessor for StaticMediaProfile();
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB788(v0);
}

uint64_t StaticMediaProfile.isConfiguring.getter()
{
  uint64_t v0;
  int *v1;
  unsigned int v2;
  BOOL v3;
  char v4;

  v1 = (int *)type metadata accessor for StaticMediaProfile();
  v2 = *(unsigned __int16 *)(v0 + v1[22]);
  if (v2 >> 14)
    v3 = 1;
  else
    v3 = (v2 & 0xFEFC) == 65276;
  if (v3 || *(_BYTE *)(v0 + v1[15]) != 1)
    v4 = 0;
  else
    v4 = *(_BYTE *)(v0 + v1[16]) ^ 1;
  return v4 & 1;
}

uint64_t StaticMediaProfile.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticMediaProfile();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  v7 = 0;
  v8 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 60));
  if ((v8 & 1) == 0)
  {
    static String.hfLocalized(_:)();
    v6 = v9;
    v7 = v10;
  }
  v11 = 0;
  v12 = *(unsigned __int16 *)(v1 + v2[22]);
  if (v12 >> 14)
    v13 = 1;
  else
    v13 = (v12 & 0xFEFC) == 65276;
  if (!v13 && ((v8 ^ 1) & 1) == 0)
    v11 = *(_BYTE *)(v1 + v2[16]) ^ 1;
  if (*(_BYTE *)(v1 + v2[19]) == 6)
  {
    v14 = 0;
    v15 = 0;
  }
  else
  {
    LOBYTE(v24) = *(_BYTE *)(v1 + v2[19]);
    v14 = sub_23E23F874();
    v15 = v16;
  }
  v17 = sub_23E34CB08(v1 + v2[24], 1);
  v19 = v18;
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (!v19)
  {
    v17 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v5[v2[23]]);
    v19 = v20;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v24 = v6;
  v25 = v7;
  v26 = 0;
  v27 = v11 & 1;
  v28 = v14;
  v29 = v15;
  v30 = v17;
  v31 = v19;
  v21 = sub_23E3F4850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

