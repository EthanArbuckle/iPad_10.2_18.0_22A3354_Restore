ValueMetadata *type metadata accessor for CharacteristicKind()
{
  return &type metadata for CharacteristicKind;
}

uint64_t type metadata accessor for DataModel()
{
  uint64_t result;

  result = qword_2543340A0;
  if (!qword_2543340A0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState()
{
  return &type metadata for StaticCharacteristic.LoadingState;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0x53)
    goto LABEL_17;
  if (a2 + 173 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 173) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 173;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 173;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 173;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xAE;
  v8 = v6 - 174;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

id static DataModel.shared.getter()
{
  if (qword_254334098 != -1)
    swift_once();
  return (id)qword_254333F18;
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t StaticCharacteristic.loadingState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCharacteristic();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

_BYTE *sub_23E1E1CA0(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = (a2 & 1 | ((a2 >> 1) << 6)) + 64;
  return result;
}

_BYTE *sub_23E1E1CD8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t _s13HomeDataModel20StaticCharacteristicV12LoadingStateO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_23E1E1D08 + 4 * byte_23E550CAC[*a1 >> 6]))();
}

BOOL sub_23E1E1D08@<W0>(unsigned int a1@<W8>)
{
  int v1;

  return a1 < 0x40 && ((a1 ^ v1) & 1) == 0;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t StaticCharacteristic.BOOLValue.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  result = type metadata accessor for StaticCharacteristic();
  v2 = (uint64_t *)(v0 + *(int *)(result + 24));
  v3 = *((unsigned __int8 *)v2 + 16);
  v4 = *v2;
  switch(v3)
  {
    case 0:
      return v4 & 1;
    case 1:
      v4 = v4;
      goto LABEL_9;
    case 2:
      v4 = (unsigned __int16)v4;
      goto LABEL_9;
    case 3:
      v4 = v4;
      goto LABEL_9;
    case 4:
      if ((v4 & 0x8000000000000000) == 0)
        goto LABEL_9;
      __break(1u);
      break;
    case 5:
    case 6:
      v4 = (int)v4;
LABEL_9:
      if (v4 == 1)
        v5 = 1;
      else
        v5 = 2;
      if (v4)
        result = v5;
      else
        result = 0;
      break;
    default:
      result = 2;
      break;
  }
  return result;
}

uint64_t StateSnapshot.staticServicesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

void sub_23E1E1E54(id *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  void *v80;
  char **v81;
  id v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  id v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(void);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[4];
  int *v152;
  unint64_t v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t *v162;
  char *v163;
  char *v164;
  char *v165;
  void (*v166)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v167;
  char **v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  void *v187;
  void (*v188)(char *, uint64_t);
  char *v189;
  int *v190;
  unint64_t v191;
  uint64_t v192;
  char *v193;
  char v194;
  void (*v195)(uint64_t, uint64_t, uint64_t);
  uint64_t v196;

  v162 = a6;
  v171 = a5;
  v191 = a4;
  v170 = a3;
  v185 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v8);
  v165 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v10);
  v173 = (uint64_t)&v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v12);
  v164 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v14);
  v163 = (char *)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v172 = (uint64_t)&v152 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v176 = (uint64_t)&v152 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v152 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332740);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v179 = (char *)&v152 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v175 = (uint64_t)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v152 - v34;
  v36 = sub_23E536F80();
  v192 = *(_QWORD *)(v36 - 8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v193 = (char *)&v152 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v189 = (char *)&v152 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v152 - v41;
  v43 = type metadata accessor for StaticAccessory(0);
  v180 = *(_QWORD *)(v43 - 8);
  v181 = v43;
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v152 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v177 = (uint64_t)&v152 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v184 = (uint64_t)&v152 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v168 = (char **)((char *)&v152 - v52);
  MEMORY[0x24BDAC7A8](v51);
  v167 = (uint64_t)&v152 - v53;
  v54 = objc_msgSend(*a1, sel_service);
  if (!v54)
    return;
  v55 = v54;
  v178 = v6;
  v56 = objc_msgSend(v54, sel_accessory);

  if (!v56)
    return;
  v159 = v19;
  v190 = (int *)type metadata accessor for StateSnapshot(0);
  v183 = v190[8];
  v57 = *(uint64_t *)((char *)v185 + v183);
  v187 = v56;
  v58 = objc_msgSend(v56, sel_uniqueIdentifier);
  sub_23E536F68();

  v59 = *(_QWORD *)(v57 + 16);
  v158 = v46;
  if (v59)
  {
    v60 = sub_23E1E3300((uint64_t)v42);
    v61 = v192;
    v63 = v180;
    if ((v62 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v57 + 56) + *(_QWORD *)(v180 + 72) * v60, (uint64_t)v35, type metadata accessor for StaticAccessory);
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
      v65 = v35;
      v66 = 0;
    }
    else
    {
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
      v65 = v35;
      v66 = 1;
    }
    v67 = v181;
    v166 = v64;
    v64(v65, v66, 1, v181);
  }
  else
  {
    v63 = v180;
    v67 = v181;
    v166 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
    v166(v35, 1, 1, v181);
    v61 = v192;
  }
  v188 = *(void (**)(char *, uint64_t))(v61 + 8);
  v188(v42, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v35, 1, v67) == 1)
  {

    sub_23E1E7C64((uint64_t)v35, &qword_254333468);
    return;
  }
  v68 = v167;
  sub_23E1E2FDC((uint64_t)v35, v167, type metadata accessor for StaticAccessory);
  v69 = v185;
  v70 = (char *)v185 + v190[5];
  v71 = *(int *)(type metadata accessor for StaticHome() + 40);
  v157 = v70;
  BYTE5(v195) = v70[v71];
  v72 = v175;
  sub_23E1E2F50(v68, v175, type metadata accessor for StaticAccessory);
  v166((char *)v72, 0, 1, v67);
  v73 = (void *)v191;
  v74 = v187;
  v75 = sub_23E44E320(v170, v191, v187, (char *)&v195 + 5, 1, v72, *v69);
  sub_23E1E7C64(v72, &qword_254333468);
  v196 = v75;
  v76 = v73;
  v77 = v74;
  v78 = objc_msgSend(v77, sel_room);
  if (!v78)
    v78 = objc_msgSend(v76, sel_roomForEntireHome);
  v156 = v71;
  BYTE4(v195) = v157[v71];
  v79 = *(uint64_t *)((char *)v185 + v190[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80 = v76;
  v81 = v168;
  v169 = v80;
  sub_23E1E35D0(v77, v80, v78, (unsigned __int8 *)&v195 + 4, v75, v79, v168);
  v155 = v77;
  v82 = objc_msgSend(v77, sel_uniqueIdentifier);
  v83 = (uint64_t)v189;
  sub_23E536F68();

  sub_23E1E7A30(v83, v72);
  v84 = (void (*)(uint64_t, uint64_t))v188;
  v188((char *)v83, v36);
  sub_23E1E7C64(v72, &qword_254333468);
  v187 = *(void **)(v192 + 16);
  ((void (*)(uint64_t, char **, uint64_t))v187)(v83, v81, v36);
  sub_23E1E2F50((uint64_t)v81, v72, type metadata accessor for StaticAccessory);
  v166((char *)v72, 0, 1, v181);
  sub_23E1E304C(v72, v83);
  v85 = *(_QWORD *)(v196 + 64);
  v174 = v196 + 64;
  v86 = 1 << *(_BYTE *)(v196 + 32);
  v87 = -1;
  if (v86 < 64)
    v87 = ~(-1 << v86);
  v191 = v87 & v85;
  v88 = (unint64_t)(v86 + 63) >> 6;
  v152 = (int *)(v88 - 1);
  v89 = swift_bridgeObjectRetain();
  v90 = 0;
  v182 = v88;
  v153 = v88 - 5;
  v186 = v89;
  v154 = v89 + 104;
  v91 = (uint64_t)v179;
  v92 = (uint64_t)v193;
  v161 = v25;
  v160 = v29;
  while (1)
  {
    if (v191)
    {
      v93 = __clz(__rbit64(v191));
      v190 = v90;
      v191 &= v191 - 1;
      v94 = v93 | ((_QWORD)v90 << 6);
LABEL_21:
      v95 = v186;
      ((void (*)(char *, unint64_t, uint64_t))v187)(v29, *(_QWORD *)(v186 + 48) + *(_QWORD *)(v192 + 72) * v94, v36);
      v96 = *(_QWORD *)(v95 + 56);
      v97 = v96 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for StaticService() - 8) + 72) * v94;
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
      sub_23E1E2F50(v97, (uint64_t)&v29[*(int *)(v98 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v29, 0, 1, v98);
      v92 = (uint64_t)v193;
      goto LABEL_28;
    }
    v99 = (int *)((char *)v90 + 1);
    if (__OFADD__(v90, 1))
      goto LABEL_65;
    if ((uint64_t)v99 >= v182)
    {
      v190 = v90;
    }
    else
    {
      v100 = *(_QWORD *)(v174 + 8 * (_QWORD)v99);
      if (v100)
        goto LABEL_25;
      if ((uint64_t)v90 + 2 >= v182)
      {
        v190 = (int *)((char *)v90 + 1);
      }
      else
      {
        v100 = *(_QWORD *)(v174 + 8 * ((_QWORD)v90 + 2));
        if (v100)
        {
          v99 = (int *)((char *)v90 + 2);
LABEL_25:
          v190 = v99;
          v191 = (v100 - 1) & v100;
          v94 = __clz(__rbit64(v100)) + ((_QWORD)v99 << 6);
          goto LABEL_21;
        }
        if ((uint64_t)v90 + 3 >= v182)
        {
          v190 = (int *)((char *)v90 + 2);
        }
        else
        {
          v100 = *(_QWORD *)(v174 + 8 * ((_QWORD)v90 + 3));
          if (v100)
          {
            v99 = (int *)((char *)v90 + 3);
            goto LABEL_25;
          }
          v99 = v90 + 1;
          if ((uint64_t)(v90 + 1) >= v182)
          {
            v190 = (int *)((char *)v90 + 3);
          }
          else
          {
            v100 = *(_QWORD *)(v174 + 8 * (_QWORD)v99);
            if (v100)
              goto LABEL_25;
            while ((int *)v153 != v90)
            {
              v100 = *(_QWORD *)(v154 + 8 * (_QWORD)v90);
              v90 = (int *)((char *)v90 + 1);
              if (v100)
              {
                v99 = v90 + 1;
                goto LABEL_25;
              }
            }
            v190 = v152;
          }
        }
      }
    }
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v29, 1, 1, v101);
    v191 = 0;
LABEL_28:
    sub_23E1E4E3C((uint64_t)v29, v91, &qword_254332740);
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v91, 1, v102) == 1)
    {
      swift_release();
      v143 = v167;
      v144 = swift_bridgeObjectRetain();
      v145 = v162;
      sub_23E1E7388(v144, v162);
      swift_bridgeObjectRelease();
      v146 = *v145;
      swift_bridgeObjectRetain();
      v147 = swift_bridgeObjectRetain();
      v148 = sub_23E1E7BA4(v147, v146);

      sub_23E1E2FA0((uint64_t)v168, type metadata accessor for StaticAccessory);
      sub_23E1E2FA0(v143, type metadata accessor for StaticAccessory);
      *v145 = v148;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v103 = v91 + *(int *)(v102 + 48);
    v104 = type metadata accessor for StaticService();
    sub_23E1E7C20(v103 + *(int *)(v104 + 124), (uint64_t)v25, &qword_254333F50);
    sub_23E1E2FA0(v103, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v105 = v192;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48))(v25, 1, v36) == 1)
    {
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      goto LABEL_18;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v92, v25, v36);
    v106 = *(uint64_t *)((char *)v185 + v183);
    if (!*(_QWORD *)(v106 + 16) || (v107 = sub_23E1E3300(v92), (v108 & 1) == 0))
    {
      v84(v92, v36);
      goto LABEL_18;
    }
    v109 = v177;
    sub_23E1E2F50(*(_QWORD *)(v106 + 56) + *(_QWORD *)(v180 + 72) * v107, v177, type metadata accessor for StaticAccessory);
    sub_23E1E2FDC(v109, v184, type metadata accessor for StaticAccessory);
    v110 = objc_msgSend(v169, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v111 = sub_23E5377F0();

    if (!(v111 >> 62))
    {
      v112 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v112)
        break;
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    v112 = sub_23E53803C();
    if (v112)
      break;
LABEL_41:
    swift_bridgeObjectRelease_n();
    v121 = v184;
LABEL_47:
    sub_23E1E2FA0(v121, type metadata accessor for StaticAccessory);
    v92 = (uint64_t)v193;
    v84((uint64_t)v193, v36);
    v25 = v161;
    v29 = v160;
    v91 = (uint64_t)v179;
LABEL_18:
    v90 = v190;
    v84(v91, v36);
  }
  v113 = 4;
  while (1)
  {
    v114 = (v111 & 0xC000000000000001) != 0
         ? (id)MEMORY[0x24264F148](v113 - 4, v111)
         : *(id *)(v111 + 8 * v113);
    v115 = v114;
    v116 = v113 - 3;
    if (__OFADD__(v113 - 4, 1))
      break;
    v117 = objc_msgSend(v114, sel_uniqueIdentifier);
    v118 = v36;
    v119 = v189;
    sub_23E536F68();

    LOBYTE(v117) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v120 = v119;
    v36 = v118;
    v84 = (void (*)(uint64_t, uint64_t))v188;
    v188(v120, v36);
    if ((v117 & 1) != 0)
    {
      swift_bridgeObjectRelease_n();
      BYTE3(v195) = v157[v156];
      v122 = v175;
      sub_23E1E2F50(v184, v175, type metadata accessor for StaticAccessory);
      v166((char *)v122, 0, 1, v181);
      v123 = v185;
      v124 = sub_23E44E320(v170, (uint64_t)v169, v115, (char *)&v195 + 3, 1, v122, *v185);
      v125 = sub_23E1E7C64(v122, &qword_254333468);
      MEMORY[0x24BDAC7A8](v125);
      v151[2] = v123;
      v151[3] = &v196;
      v126 = v178;
      sub_23E1E7104((void (*)(char *))sub_23E29BE28, (uint64_t)v151, v124);
      v178 = v126;
      v127 = *(void (**)(void))(v192 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v127)(v176, 1, 1, v36);
      v128 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      v129 = (uint64_t)v163;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v163, 1, 1, v128);
      v130 = type metadata accessor for StaticDeviceMetadata();
      v131 = v164;
      (*(void (**)(void))(*(_QWORD *)(v130 - 8) + 56))();
      v132 = sub_23E536F20();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v173, 1, 1, v132);
      v133 = v172;
      v127();
      v134 = (uint64_t)v159;
      v127();
      LOWORD(v195) = -260;
      v135 = type metadata accessor for StaticSoftwareUpdate(0);
      v136 = (uint64_t)v165;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v165, 1, 1, v135);
      v194 = 2;
      v150 = v134;
      v149 = v133;
      v137 = (uint64_t)v158;
      v138 = (uint64_t)v131;
      v139 = (uint64_t)v131;
      v140 = v173;
      StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)(v176, 0, 0, v129, v139, v173, 0, 1, (uint64_t)v158, 2, v149, 0, 0, 0, 2, 2, 2, 2, 2,
        v124,
        0,
        v150,
        &v195,
        0,
        0,
        0,
        2,
        0,
        v136,
        2,
        (uint64_t (*)(char *, uint64_t, uint64_t))&v194);
      swift_bridgeObjectRelease();
      sub_23E1E7C64(v136, &qword_2543332B8);
      sub_23E1E7C64((uint64_t)v159, &qword_254333F50);
      sub_23E1E7C64(v172, &qword_254333F50);
      sub_23E1E7C64(v140, &qword_2543330E0);
      sub_23E1E7C64(v138, &qword_2543332A8);
      sub_23E1E7C64(v129, &qword_254333218);
      sub_23E1E7C64(v176, &qword_254333F50);
      v141 = (uint64_t)v189;
      ((void (*)(char *, uint64_t, uint64_t))v187)(v189, v137, v36);
      v142 = v175;
      sub_23E1E2F50(v137, v175, type metadata accessor for StaticAccessory);
      v166((char *)v142, 0, 1, v181);
      sub_23E1E304C(v142, v141);

      v84 = (void (*)(uint64_t, uint64_t))v188;
      sub_23E1E2FA0(v137, type metadata accessor for StaticAccessory);
      v121 = v184;
      goto LABEL_47;
    }

    ++v113;
    if (v116 == v112)
      goto LABEL_41;
  }
  __break(1u);
LABEL_65:
  __break(1u);
}

uint64_t sub_23E1E2F50(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t storeEnumTagSinglePayload for StaticAccessory()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1E2FA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23E1E2FDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E1E3020(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_254333400, &qword_254333F70);
  *v3 = result;
  return result;
}

uint64_t sub_23E1E304C(uint64_t a1, uint64_t a2)
{
  return sub_23E20C644(a1, a2, &qword_254333468, type metadata accessor for StaticAccessory, &qword_2543333C8, (void (*)(uint64_t))sub_23E1E7A30);
}

uint64_t getEnumTagSinglePayload for StaticAccessory()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1E307C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, type metadata accessor for StaticAccessory, &qword_2543333C8);
}

uint64_t sub_23E1E3090(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_23E536F80();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_23E1E2FDC(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

unint64_t sub_23E1E3148(uint64_t a1)
{
  uint64_t v2;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23E5374CC();
  return sub_23E1E31C0(a1, v2);
}

unint64_t sub_23E1E31C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_23E537514();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_23E1E3304(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_23E473DA0(a1, a2, a3, &qword_254332DE8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (uint64_t)sub_23E1E3348);
}

uint64_t storeEnumTagSinglePayload for StaticService()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1E333C(uint64_t a1, uint64_t a2)
{
  return sub_23E1E91B4(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

uint64_t sub_23E1E3348(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254333420, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E1E335C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23E1E3394()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unsigned __int8 v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(&qword_254332C48), swift_dynamicCast()))
    return v5;
  else
    return 1;
}

void destroy for StateSnapshot.UpdateType(void **a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v2 = *a1;
      goto LABEL_7;
    case 1u:
      v3 = (uint64_t)a1;
      goto LABEL_10;
    case 2u:
    case 3u:
    case 6u:
      goto LABEL_12;
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 7u:
      v4 = sub_23E536F80();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);

      v2 = *(void **)((char *)a1 + v5[20]);
LABEL_7:

      return;
    case 8u:
      v6 = sub_23E536F80();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      return;
    case 9u:
      v7 = sub_23E536F80();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      v3 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
LABEL_10:
      __swift_destroy_boxed_opaque_existential_0(v3);
      break;
    case 0xAu:
      v8 = sub_23E536F80();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_23E1E35D0@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD **v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(uint64_t *, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  char v83;
  void (*v84)(uint64_t, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  int64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  id v98;
  _QWORD *v99;
  _QWORD *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  __int16 v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  __objc2_meth_list *v128;
  id v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  id v136;
  void *v137;
  unsigned __int16 v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  id v146;
  unint64_t v147;
  uint64_t v148;
  id v149;
  id v150;
  char *v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  void *v166;
  uint64_t v167;
  char v168;
  id v169;
  void *v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t result;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  id v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int16 v188;
  uint64_t v189;
  char v190;
  id v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  id v198;
  uint64_t v199;
  char v200;
  char v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  int v215;
  char **v216;
  uint64_t v217;
  id v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  id v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  __int128 v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  _QWORD *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  _QWORD *v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  void (*v244)(uint64_t, char *, uint64_t);
  uint64_t v245;
  _QWORD *v246;
  char v247;
  _QWORD *v248;
  unsigned __int8 v249;
  uint64_t v250;

  v217 = a6;
  v211 = a5;
  v224 = a3;
  v223 = a2;
  v250 = *MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v10);
  v227 = (uint64_t)&v206 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v12);
  v226 = (uint64_t)&v206 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v212);
  v225 = (uint64_t *)((char *)&v206 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v222 = (uint64_t)&v206 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v228 = (uint64_t)&v206 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v214 = (uint64_t)&v206 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v208 = (uint64_t)&v206 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v229 = (unint64_t)&v206 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  v240 = *(_QWORD *)(v25 - 8);
  v241 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v209 = (char *)&v206 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23E536F80();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v213 = (char *)&v206 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v221 = (uint64_t)&v206 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v207 = (char *)&v206 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v220 = (uint64_t)&v206 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v206 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (uint64_t *)((char *)&v206 - v41);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v206 - v43;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v219 = (uint64_t)&v206 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v236 = (char *)&v206 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v206 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v235 = (uint64_t)&v206 - v53;
  v215 = *a4;
  v218 = a1;
  v54 = objc_msgSend(a1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v55 = sub_23E5377F0();

  if (v55 >> 62)
  {
    swift_bridgeObjectRetain();
    v56 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v245 = v27;
  v246 = (_QWORD *)v28;
  v216 = a7;
  if (v56)
  {
    v248 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v57 = &v248;
    sub_23E2058F8(0, v56 & ~(v56 >> 63), 0);
    if (v56 < 0)
    {
      __break(1u);
      goto LABEL_114;
    }
    v58 = 0;
    v59 = v248;
    v243 = v42;
    v244 = (void (*)(uint64_t, char *, uint64_t))(v55 & 0xC000000000000001);
    v60 = v55;
    v61 = v56;
    do
    {
      if (v244)
        v62 = (id)MEMORY[0x24264F148](v58, v55);
      else
        v62 = *(id *)(v55 + 8 * v58 + 32);
      v63 = v62;
      v64 = objc_msgSend(v62, sel_uniqueIdentifier);
      sub_23E536F68();

      v65 = v59;
      v248 = v59;
      v67 = v59[2];
      v66 = v59[3];
      if (v67 >= v66 >> 1)
      {
        sub_23E2058F8(v66 > 1, v67 + 1, 1);
        v65 = v248;
      }
      ++v58;
      v65[2] = v67 + 1;
      v27 = v245;
      v59 = v65;
      ((void (*)(unint64_t, char *, uint64_t))v246[4])((unint64_t)v65+ ((*((unsigned __int8 *)v246 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v246 + 80))+ v246[9] * v67, v44, v245);
      v55 = v60;
    }
    while (v61 != v58);
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v246;
    v42 = v243;
    v68 = v59;
  }
  else
  {
    swift_bridgeObjectRelease();
    v68 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v248 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v44 = v236;
  v234 = (_QWORD *)v68[2];
  v210 = v68;
  if (v234)
  {
    v69 = *(unsigned __int8 *)(v28 + 80);
    v70 = (v69 + 32) & ~v69;
    v233 = (char *)v68 + v70;
    v71 = *(_QWORD *)(v28 + 72);
    v244 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 16);
    v237 = v70;
    v242 = v71;
    v231 = v69 | 7;
    v232 = v71 + v70;
    swift_bridgeObjectRetain();
    v72 = 0;
    v230 = xmmword_23E539650;
    while (1)
    {
      v76 = v235;
      v244(v235, &v233[v242 * (_QWORD)v72], v27);
      v243 = *(uint64_t **)(v28 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v243)(v76, 0, 1, v27);
      v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (v77(v76, 1, v27) == 1)
        break;
      v239 = v72;
      v78 = v76;
      v79 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v28 + 32);
      v79(v42, v78, v27);
      v80 = v248[2];
      v238 = v248;
      if (v80)
      {
        v81 = (char *)v248 + v237;
        swift_bridgeObjectRetain();
        while (1)
        {
          v244((uint64_t)v52, v81, v27);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v243)(v52, 0, 1, v27);
          if (v77((uint64_t)v52, 1, v27) == 1)
            break;
          v79((uint64_t *)v39, (uint64_t)v52, v27);
          sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v82 = v42;
          v83 = sub_23E537514();
          v75 = *(void (**)(char *, uint64_t))(v28 + 8);
          v75(v39, v27);
          if ((v83 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v74 = v245;
            v42 = v82;
            goto LABEL_19;
          }
          v81 += v242;
          --v80;
          v27 = v245;
          v28 = (uint64_t)v246;
          v42 = v82;
          if (!v80)
            goto LABEL_17;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_17:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v243)(v52, 1, 1, v27);
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v230;
      v244(v73 + v237, (char *)v42, v27);
      v74 = v27;
      sub_23E259F3C(v73);
      v75 = *(void (**)(char *, uint64_t))(v28 + 8);
LABEL_19:
      v72 = (_QWORD *)((char *)v239 + 1);
      v75((char *)v42, v74);
      v27 = v74;
      v28 = (uint64_t)v246;
      v44 = v236;
      if (v72 == v234)
        goto LABEL_29;
    }
  }
  else
  {
    v243 = *(uint64_t **)(v28 + 56);
    swift_bridgeObjectRetain();
LABEL_29:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v243)(v235, 1, 1, v27);
  }
  swift_bridgeObjectRelease_n();
  v84 = (void (*)(uint64_t, char *, uint64_t))v248;
  v85 = v211;
  swift_bridgeObjectRetain();
  v244 = v84;
  v86 = 0;
  v87 = (_QWORD *)sub_23E484FDC((uint64_t)v84, v85);
  swift_bridgeObjectRelease_n();
  v88 = v87[2];
  if (v88)
  {
    v242 = 0;
    v248 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23E1E3020(0, v88, 0);
    v89 = v248;
    v90 = *(_QWORD *)(type metadata accessor for StaticService() - 8);
    v91 = *(unsigned __int8 *)(v90 + 80);
    v239 = v87;
    v92 = (uint64_t)v87 + ((v91 + 32) & ~v91);
    v93 = *(_QWORD *)(v90 + 72);
    v94 = (uint64_t)v209;
    do
    {
      v95 = v94 + *(int *)(v241 + 48);
      sub_23E1E2F50(v92, v95, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v94, v95, v245);
      v248 = v89;
      v97 = v89[2];
      v96 = v89[3];
      if (v97 >= v96 >> 1)
      {
        sub_23E1E3020(v96 > 1, v97 + 1, 1);
        v89 = v248;
      }
      v89[2] = v97 + 1;
      sub_23E1E4E3C(v94, (uint64_t)v89+ ((*(unsigned __int8 *)(v240 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80))+ *(_QWORD *)(v240 + 72) * v97, &qword_254333F70);
      v92 += v93;
      --v88;
      v28 = (uint64_t)v246;
    }
    while (v88);
    swift_bridgeObjectRelease();
    v44 = v236;
    v86 = v242;
  }
  else
  {
    swift_bridgeObjectRelease();
    v89 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v42 = v225;
  v98 = v218;
  if (v89[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543333B8);
    v99 = (_QWORD *)sub_23E53806C();
  }
  else
  {
    v99 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v248 = v99;
  sub_23E45C714((uint64_t)v89, 1, (uint64_t *)&v248, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254333F70, (void (*)(void))sub_23E1FDD24, (void (*)(void))sub_23E1E70F0);
  if (v86)
  {
    swift_bridgeObjectRelease();
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v100 = v248;
  sub_23E480C40(v98, v248, v229);
  v101 = objc_msgSend(v98, sel_category);
  a7 = &selRef_homeManager_didAddHome_;
  v102 = objc_msgSend(v101, sel_categoryType);

  v103 = sub_23E53755C();
  v105 = v104;

  v106 = sub_23E53755C();
  v246 = v100;
  if (v103 == v106 && v105 == v107)
    goto LABEL_43;
  v108 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v108 & 1) != 0)
    goto LABEL_45;
  v129 = objc_msgSend(v98, sel_category);
  v130 = objc_msgSend(v129, sel_categoryType);

  v131 = sub_23E53755C();
  v133 = v132;

  if (v131 == sub_23E53755C() && v133 == v134)
  {
LABEL_43:
    swift_bridgeObjectRelease_n();
LABEL_45:
    v109 = -32765;
    goto LABEL_46;
  }
  v135 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v135 & 1) != 0)
    goto LABEL_45;
  v136 = objc_msgSend(v98, sel_siriEndpointProfile);
  if (v136)
  {
    v137 = v136;
    v138 = (unsigned __int16)objc_msgSend(v136, sel_supportsOnboarding);
    v139 = objc_msgSend(v98, sel_category);
    v140 = objc_msgSend(v139, sel_categoryType);

    v141 = sub_23E53755C();
    v143 = v142;

    if (v141 != sub_23E53755C() || v143 != v144)
    {
      v145 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v145 & 1) != 0)
      {
LABEL_63:

LABEL_87:
        v188 = 256;
LABEL_88:
        v109 = v188 | v138 | 0x4000;
        goto LABEL_89;
      }
      v182 = objc_msgSend(v218, sel_category);
      v183 = objc_msgSend(v182, sel_categoryType);

      v184 = sub_23E53755C();
      v186 = v185;

      if (v184 != sub_23E53755C() || v186 != v187)
      {
        v190 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v190 & 1) == 0)
        {
          v191 = objc_msgSend(v218, sel_category);
          v192 = objc_msgSend(v191, sel_categoryType);

          v193 = sub_23E53755C();
          v195 = v194;

          if (v193 != sub_23E53755C() || v195 != v196)
          {
            v200 = sub_23E538354();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((v200 & 1) != 0)
              v188 = 256;
            else
              v188 = 0;
            goto LABEL_88;
          }
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_63;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_87;
  }
  v177 = objc_msgSend(v98, sel_category);
  v178 = objc_msgSend(v177, sel_categoryType);

  v57 = (_QWORD **)sub_23E53755C();
  v56 = v179;

  if ((_QWORD **)sub_23E53755C() == v57 && v180 == v56)
  {
    swift_bridgeObjectRelease_n();
    v109 = -32767;
    goto LABEL_46;
  }
  v181 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v181 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v109 = -32767;
LABEL_89:
    v98 = v218;
    goto LABEL_46;
  }
  if ((_QWORD **)sub_23E53755C() == v57 && v189 == v56)
  {
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  v197 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v197 & 1) == 0)
  {
    if ((_QWORD **)sub_23E53755C() == v57 && v199 == v56)
    {
      swift_bridgeObjectRelease_n();
      v109 = -32512;
      goto LABEL_89;
    }
    v201 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v201 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v109 = -32512;
      goto LABEL_89;
    }
    if ((_QWORD **)sub_23E53755C() == v57 && v202 == v56)
    {
      swift_bridgeObjectRelease_n();
      v109 = 0x8000;
      goto LABEL_89;
    }
LABEL_114:
    v203 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v203 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v109 = 0x8000;
    }
    else if ((_QWORD **)sub_23E53755C() == v57 && v204 == v56)
    {
      swift_bridgeObjectRelease_n();
      v109 = -32766;
    }
    else
    {
      v205 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v205 & 1) != 0)
        v109 = -32766;
      else
        v109 = -260;
    }
    goto LABEL_89;
  }
LABEL_98:
  swift_bridgeObjectRelease();
  v98 = v218;
  v198 = objc_msgSend(v218, sel_homePodVariant);
  if ((unint64_t)v198 >= 4)
    v109 = 1;
  else
    v109 = (__int16)v198;
LABEL_46:
  sub_23E481538(v98, v217, v228);
  swift_bridgeObjectRelease();
  v110 = sub_23E4818E8(v98);
  v241 = v111;
  v242 = v110;
  v112 = objc_msgSend(v98, sel_hdm_matterNodeID);
  if (v112)
  {
    v113 = v112;
    v248 = 0;
    v249 = 1;
    sub_23E5384D4();

    v239 = v248;
    LODWORD(v240) = v249;
  }
  else
  {
    LODWORD(v240) = 1;
    v239 = 0;
  }
  LODWORD(v238) = sub_23E4819DC(v98);
  v114 = objc_msgSend(v98, sel_uniqueIdentifier);
  sub_23E536F68();

  v115 = objc_msgSend(v98, sel_deviceIdentifier);
  v116 = sub_23E53755C();
  v118 = v117;

  sub_23E536F2C();
  v119 = v245;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v44, 1, v245) == 1)
  {
    sub_23E1E7C64((uint64_t)v44, &qword_254333F50);
    *v42 = v116;
    v42[1] = v118;
  }
  else
  {
    swift_bridgeObjectRelease();
    v120 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v121 = v207;
    v120(v207, v44, v119);
    v120((char *)v42, v121, v119);
  }
  swift_storeEnumTagMultiPayload();
  v122 = v98;
  v123 = v226;
  sub_23E1E4FB8(v122, v226);
  v124 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v123, 0, 1, v124);
  HMAccessory.dateAdded.getter(v227);
  v125 = sub_23E1E4E80();
  if (v125 == 2)
  {
    v126 = v208;
    sub_23E1E7C20(v229, v208, &qword_254332DE8);
    v127 = type metadata accessor for StaticService();
    v128 = &OBJC_CATEGORY_INSTANCE_METHODS_MTRDevice___HomeDataModelExtensions;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 48))(v126, 1, v127) == 1)
    {
      sub_23E1E7C64(v126, &qword_254332DE8);
      LODWORD(v237) = 0;
    }
    else
    {
      LODWORD(v237) = *(unsigned __int8 *)(v126 + *(int *)(v127 + 28));
      sub_23E1E2FA0(v126, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
  }
  else
  {
    LODWORD(v237) = v125 & 1;
    v128 = &OBJC_CATEGORY_INSTANCE_METHODS_MTRDevice___HomeDataModelExtensions;
  }
  v146 = objc_msgSend(v223, sel_uniqueIdentifier);
  sub_23E536F68();

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v147 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v148 = swift_allocObject();
  *(_OWORD *)(v148 + 16) = *(_OWORD *)&v128[202].entrysize;
  v149 = v224;
  v150 = objc_msgSend(v224, sel_uniqueIdentifier);
  v151 = v213;
  sub_23E536F68();

  v152 = v245;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v148 + v147, v151, v245);
  v236 = (char *)sub_23E2CD9CC(v148);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v153 = objc_msgSend(v149, sel_name);
  v154 = sub_23E53755C();
  v234 = (_QWORD *)v155;
  v235 = v154;

  LODWORD(v233) = objc_msgSend(v122, sel_isCurrentAccessory);
  LODWORD(v232) = HMAccessory.isFavorite.getter();
  LODWORD(v231) = HMAccessory.shouldShowInDashboard.getter();
  LODWORD(v230) = HMAccessory.contributesToHomeStatus.getter();
  LODWORD(v218) = HMAccessory.showAsIndividualTiles.getter();
  v156 = v214;
  sub_23E1E7C20(v229, v214, &qword_254332DE8);
  v157 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 48))(v156, 1, v157) == 1)
  {
    sub_23E1E7C64(v156, &qword_254332DE8);
    v158 = 1;
    v159 = v219;
  }
  else
  {
    v159 = v219;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v219, v156, v152);
    sub_23E1E2FA0(v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v158 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v243)(v159, v158, 1, v152);
  LOWORD(v248) = v109;
  v160 = objc_msgSend(v122, sel_category);
  v161 = objc_msgSend(v160, a7[42]);

  v162 = sub_23E53755C();
  v164 = v163;

  v165 = objc_msgSend(v122, sel_uniqueIdentifiersForBridgedAccessories);
  if (v165)
  {
    v166 = v165;
    v167 = sub_23E5377F0();

  }
  else
  {
    v167 = 0;
  }
  sub_23E1E7C20(v228, v222, &qword_2543332B8);
  v168 = (objc_msgSend(v122, sel_isReachable) & 1) != 0
      || objc_msgSend(v122, sel_suspendedState) == (id)3
      || objc_msgSend(v122, sel_suspendedState) == (id)2;
  v247 = v215;
  v169 = objc_msgSend(v122, sel_symptomsHandler);
  if (v169)
  {
    v170 = v169;
    v171 = objc_msgSend(v169, sel_symptoms);

    sub_23E1E335C(0, &qword_254333380);
    sub_23E1E6118(&qword_254333388, &qword_254333380);
    v172 = sub_23E537A0C();

    sub_23E47436C(v172);
    v174 = v173;
    swift_bridgeObjectRelease();
    v175 = sub_23E4FD834(v174);

    swift_bridgeObjectRelease();
  }
  else
  {

    v175 = 0;
  }

  sub_23E1E7C64(v228, &qword_2543332B8);
  sub_23E1E7C64(v229, &qword_254332DE8);
  return sub_23E478894(v220, v242, v241, (uint64_t)v225, v226, v227, (uint64_t)v239, v240, (uint64_t)v216, v237, v221, (uint64_t)v236, v235, (uint64_t)v234, (char)v233, v232 & 1, v231 & 1, v230 & 1, v218 & 1,
           (uint64_t)v246,
           (uint64_t)v244,
           v219,
           (__int16 *)&v248,
           v162,
           v164,
           v167,
           v238 & 1,
           v222,
           v168,
           &v247,
           v175);
}

uint64_t getEnumTagSinglePayload for StaticService()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1E4E3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E1E4E80()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unsigned int v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    swift_dynamicCast();
  }
  v4 = sub_23E5380A8();
  swift_bridgeObjectRelease();
  if (v4 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (v4)
    return v5;
  else
    return 0;
}

uint64_t HMAccessory.showAsIndividualTiles.getter()
{
  return sub_23E50B948();
}

uint64_t HMAccessory.contributesToHomeStatus.getter()
{
  return sub_23E1E3394();
}

void sub_23E1E4FB8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned __int8 v30;

  v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v5 = objc_msgSend(a1, sel_manufacturer);
  if (v5)
  {
    v6 = v5;
    v7 = sub_23E53755C();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = (int *)type metadata accessor for StaticDeviceMetadata();
  v11 = (uint64_t *)(a2 + v10[5]);
  *v11 = v7;
  v11[1] = v9;
  v12 = objc_msgSend(a1, sel_model);
  if (v12)
  {
    v13 = v12;
    v14 = sub_23E53755C();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = (uint64_t *)(a2 + v10[6]);
  *v17 = v14;
  v17[1] = v16;
  v18 = objc_msgSend(a1, sel_serialNumber);
  if (v18)
  {
    v19 = v18;
    v20 = sub_23E53755C();
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  v23 = (uint64_t *)(a2 + v10[7]);
  *v23 = v20;
  v23[1] = v22;
  v24 = objc_msgSend(a1, sel_firmwareVersion);
  if (v24)
  {
    v25 = v24;
    v26 = sub_23E53755C();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = (uint64_t *)(a2 + v10[8]);
  *v29 = v26;
  v29[1] = v28;
  *(_BYTE *)(a2 + v10[9]) = objc_msgSend(a1, sel_supportsCHIP);
  *(_BYTE *)(a2 + v10[10]) = objc_msgSend(a1, sel_certificationStatus) == (id)2;
  v30 = objc_msgSend(a1, sel_mfiCertifiedACWG);

  *(_BYTE *)(a2 + v10[11]) = v30;
}

uint64_t HMAccessory.shouldShowInDashboard.getter()
{
  return sub_23E1E3394();
}

uint64_t HMAccessory.isFavorite.getter()
{
  return sub_23E50B948();
}

id HMAccessory.specialMediaCategory.getter@<X0>(__int16 *a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id result;
  __int16 v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_category);
  v5 = objc_msgSend(v4, sel_categoryType);

  v6 = sub_23E53755C();
  v8 = v7;

  if (sub_23E53755C() == v6 && v9 == v8)
  {
    result = (id)swift_bridgeObjectRelease_n();
    v13 = -32767;
    goto LABEL_20;
  }
  v11 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
    result = (id)swift_bridgeObjectRelease();
    v13 = -32767;
    goto LABEL_20;
  }
  if (sub_23E53755C() == v6 && v14 == v8)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    result = objc_msgSend(v2, sel_homePodVariant);
    if ((unint64_t)result >= 4)
      v13 = 1;
    else
      v13 = (__int16)result;
    goto LABEL_20;
  }
  v16 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_17;
  if (sub_23E53755C() == v6 && v17 == v8)
  {
    result = (id)swift_bridgeObjectRelease_n();
    v13 = -32512;
  }
  else
  {
    v18 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      result = (id)swift_bridgeObjectRelease();
      v13 = -32512;
    }
    else if (sub_23E53755C() == v6 && v19 == v8)
    {
      result = (id)swift_bridgeObjectRelease_n();
      v13 = -32766;
    }
    else
    {
      v20 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        result = (id)swift_bridgeObjectRelease();
        v13 = -32766;
      }
      else if (sub_23E53755C() == v6 && v21 == v8)
      {
        result = (id)swift_bridgeObjectRelease_n();
        v13 = 0x8000;
      }
      else
      {
        v22 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          result = (id)swift_bridgeObjectRelease();
          v13 = 0x8000;
        }
        else if (sub_23E53755C() == v6 && v23 == v8)
        {
          result = (id)swift_bridgeObjectRelease_n();
          v13 = -32765;
        }
        else
        {
          v24 = sub_23E538354();
          swift_bridgeObjectRelease();
          result = (id)swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
            v13 = -32765;
          else
            v13 = -260;
        }
      }
    }
  }
LABEL_20:
  *a1 = v13;
  return result;
}

uint64_t sub_23E1E54CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  id v22;
  _BYTE v24[16];

  v4 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23E53752C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v24[-v10];
  if (sub_23E53755C() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (sub_23E53755C() == a1 && v15 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          if (sub_23E53755C() == a1 && v18 == a2)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v20 = sub_23E538354();
            swift_bridgeObjectRelease();
            if ((v20 & 1) == 0)
              return 0;
          }
        }
      }
    }
  }
  sub_23E537520();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_254333338 != -1)
    swift_once();
  v22 = (id)qword_254334BC8;
  sub_23E536FA4();
  v21 = sub_23E5375A4();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v21;
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for StaticHH2Update()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for StaticHH2Update(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_2543346F8);
}

uint64_t storeEnumTagSinglePayload for StaticHH2Update()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t HMService.shouldShowInDashboard.getter()
{
  return sub_23E1E3394();
}

uint64_t HMService.customIconSymbol.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  char v16;
  void *v17;
  id v18;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    v18 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    if ((swift_dynamicCast() & 1) == 0)
      return 0;
    v3 = v17;
    if ((sub_23E53767C() & 1) != 0)
    {
      v4 = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0();
      if (v4 != 73)
      {
        v5 = v4;
        if (qword_256D3EEE8 != -1)
          swift_once();
        v6 = qword_256D89880;
        v7 = LegacyHFImageIdentifiers.rawValue.getter(v5);
        if (*(_QWORD *)(v6 + 16) && (v9 = sub_23E211350(v7, v8), (v10 & 1) != 0))
        {
          v11 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v9);
          v12 = *v11;
          v13 = (void *)v11[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v14._countAndFlagsBits = v12;
          v14._object = v13;
          HFCAPackageIconIdentifier.init(rawValue:)(v14);
          if (v17 != 58)
          {
            LOBYTE(v18) = (_BYTE)v17;
            static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)((char *)&v18, &v16);
            return IconSymbol.rawValue.getter();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      return 0;
    }
  }
  return (uint64_t)v3;
}

uint64_t HMService.contributesToHomeStatus.getter()
{
  return sub_23E1E3394();
}

uint64_t sub_23E1E59D0()
{
  return sub_23E1E4E80();
}

uint64_t sub_23E1E59DC@<X0>(id a1@<X2>, uint64_t a2@<X0>, void *a3@<X1>, void *a4@<X3>, uint64_t *a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  unint64_t v27;
  uint64_t result;
  void *v29;
  char v30[16];
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;

  v11 = *a5;
  v12 = a5[1];
  v13 = objc_msgSend(a1, sel_lightProfiles);
  sub_23E1E335C(0, &qword_254333340);
  sub_23E1E5D68();
  v14 = sub_23E537A0C();

  v15 = sub_23E1E6638(MEMORY[0x24BEE4AF8]);
  v31 = a3;
  v32 = v11;
  v33 = v12;
  v34 = a2;
  v35 = a1;
  v36 = a4;
  sub_23E1E5DC0(v15, (void (*)(uint64_t *, _QWORD *))sub_23E1ECAF0, (uint64_t)v30, v14);
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_23E1E6690(v11);
  v18 = objc_msgSend(a1, sel_televisionProfiles);
  if (v18)
  {
    v19 = v18;
    sub_23E1E335C(0, &qword_254333360);
    v20 = sub_23E5377F0();

    v21 = sub_23E1E661C(MEMORY[0x24BEE4AF8]);
    v22 = a3;
    v29 = a3;
    v23 = a2;
    v24 = v17;
    v25 = a6;
    v26 = a1;
    v27 = sub_23E1E6158(v21, v20, (uint64_t)v22, v26);

    swift_bridgeObjectRelease();
    a4 = v26;
    a6 = v25;
    v17 = v24;
    a2 = v23;
    a3 = v29;
  }
  else
  {
    v27 = sub_23E1E661C(MEMORY[0x24BEE4AF8]);
  }

  result = sub_23E1E2FA0(a2, type metadata accessor for StateSnapshot.UpdateType);
  *a6 = v17;
  a6[1] = v27;
  return result;
}

unint64_t sub_23E1E5BBC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t result;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v30 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_23E53806C();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v15 = v11 + 64;
  v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v29 = a1;
  v17 = a1 + v16;
  v18 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v17, (uint64_t)v10, v30);
    result = sub_23E1E3148((uint64_t)v10);
    if ((v20 & 1) != 0)
      break;
    v21 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v22 = v12[6];
    v23 = sub_23E536F80();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v10, v23);
    v24 = v12[7];
    v25 = a4(0);
    result = sub_23E1E2FDC(v14, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v21, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E1E5D68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254333348;
  if (!qword_254333348)
  {
    v1 = sub_23E1E335C(255, &qword_254333340);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254333348);
  }
  return result;
}

void sub_23E1E5DC0(uint64_t a1, void (*a2)(uint64_t *, _QWORD *), uint64_t a3, uint64_t a4)
{
  sub_23E1E5DEC(a1, a2, a3, a4, &qword_254333340, 0x24BDD7740, (unint64_t *)&qword_254333348);
}

void sub_23E1E5DEC(uint64_t a1, void (*a2)(uint64_t *, _QWORD *), uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v28;
  uint64_t v29;
  _QWORD v30[6];
  uint64_t v31;

  v8 = v7;
  v9 = a4;
  v31 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, a5);
    sub_23E1E6118(a7, a5);
    sub_23E537A3C();
    v9 = v30[1];
    v29 = v30[2];
    v13 = v30[3];
    v14 = v30[4];
    v15 = v30[5];
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a4 + 32);
    v29 = a4 + 56;
    v17 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & *(_QWORD *)(a4 + 56);
    swift_bridgeObjectRetain();
    v13 = v17;
    v14 = 0;
  }
  v28 = (unint64_t)(v13 + 64) >> 6;
  if ((v9 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_23E537DD8())
    goto LABEL_35;
  sub_23E1E335C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v20 = (id)v30[0];
  swift_unknownObjectRelease();
  v21 = v14;
  v22 = v15;
  if (!v20)
    goto LABEL_35;
  while (1)
  {
    v30[0] = v20;
    a2(&v31, v30);
    if (v8)
    {

      swift_bridgeObjectRelease();
      sub_23E2261B0();
      return;
    }

    v14 = v21;
    v15 = v22;
    if (v9 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v15)
      break;
    v22 = (v15 - 1) & v15;
    v23 = __clz(__rbit64(v15)) | (v14 << 6);
    v21 = v14;
LABEL_24:
    v20 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v23);
    if (!v20)
      goto LABEL_35;
  }
  v21 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    return;
  }
  if (v21 >= v28)
    goto LABEL_35;
  v24 = *(_QWORD *)(v29 + 8 * v21);
  if (v24)
  {
LABEL_23:
    v22 = (v24 - 1) & v24;
    v23 = __clz(__rbit64(v24)) + (v21 << 6);
    goto LABEL_24;
  }
  v25 = v14 + 2;
  if (v14 + 2 >= v28)
    goto LABEL_35;
  v24 = *(_QWORD *)(v29 + 8 * v25);
  if (v24)
    goto LABEL_22;
  v25 = v14 + 3;
  if (v14 + 3 >= v28)
    goto LABEL_35;
  v24 = *(_QWORD *)(v29 + 8 * v25);
  if (v24)
    goto LABEL_22;
  v25 = v14 + 4;
  if (v14 + 4 >= v28)
    goto LABEL_35;
  v24 = *(_QWORD *)(v29 + 8 * v25);
  if (v24)
  {
LABEL_22:
    v21 = v25;
    goto LABEL_23;
  }
  v21 = v14 + 5;
  if (v14 + 5 >= v28)
    goto LABEL_35;
  v24 = *(_QWORD *)(v29 + 8 * v21);
  if (v24)
    goto LABEL_23;
  v26 = v14 + 6;
  while (v28 != v26)
  {
    v24 = *(_QWORD *)(v29 + 8 * v26++);
    if (v24)
    {
      v21 = v26 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_23E2261B0();
}

uint64_t sub_23E1E6118(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23E1E335C(255, a2);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E1E6158(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  id v21;
  void *v22;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  unint64_t v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v5 = v4;
  v43 = a4;
  v50 = a3;
  v8 = type metadata accessor for StaticTelevisionProfile();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v42 = (unint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - v11;
  v13 = sub_23E536F80();
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v45 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    v15 = sub_23E53803C();
    if (v15)
      goto LABEL_3;
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
    {
LABEL_3:
      v37 = v5;
      v38 = v12;
      v16 = 0;
      v48 = v15;
      v49 = a2 & 0xC000000000000001;
      v46 = a2 + 32;
      v47 = a2;
      v39 = v8;
      do
      {
        v44 = a1;
        while (1)
        {
          if (v49)
            v21 = (id)MEMORY[0x24264F148](v16, v47);
          else
            v21 = *(id *)(v46 + 8 * v16);
          v22 = v21;
          if (__OFADD__(v16++, 1))
            goto LABEL_39;
          a2 = (unint64_t)objc_msgSend(v21, sel_services);
          a1 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
          v24 = sub_23E5377F0();

          if (v24 >> 62)
          {
            swift_bridgeObjectRetain();
            v25 = sub_23E53803C();
            if (!v25)
              goto LABEL_7;
          }
          else
          {
            v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v25)
              goto LABEL_7;
          }
          v5 = v24 & 0xC000000000000001;
          v26 = (v24 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](0, v24) : *(id *)(v24 + 32);
          a2 = (unint64_t)v26;
          v8 = sub_23E537C58();

          if ((v8 & 1) != 0)
            break;
          if (v25 != 1)
          {
            if (v5)
            {
              a2 = 1;
              while (1)
              {
                v27 = MEMORY[0x24264F148](a2, v24);
                v12 = (char *)(a2 + 1);
                if (__OFADD__(a2, 1))
                  break;
                v8 = v27;
                v5 = sub_23E537C58();
                swift_unknownObjectRelease();
                if ((v5 & 1) != 0)
                  goto LABEL_32;
                ++a2;
                if (v12 == (char *)v25)
                  goto LABEL_7;
              }
              __break(1u);
            }
            else
            {
              v5 = 5;
              while (1)
              {
                v12 = (char *)(v5 - 3);
                if (__OFADD__(v5 - 4, 1))
                  break;
                a2 = (unint64_t)*(id *)(v24 + 8 * v5);
                v8 = sub_23E537C58();

                if ((v8 & 1) != 0)
                  goto LABEL_32;
                ++v5;
                if (v12 == (char *)v25)
                  goto LABEL_7;
              }
            }
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_7:
          swift_bridgeObjectRelease_n();

          if (v16 == v48)
          {
            swift_bridgeObjectRelease();
            return v44;
          }
        }
LABEL_32:
        swift_bridgeObjectRelease_n();
        v28 = objc_msgSend(v22, sel_uniqueIdentifier);
        sub_23E536F68();

        v29 = v22;
        v30 = v43;
        v31 = objc_msgSend(v29, sel_uniqueIdentifier);
        v12 = v38;
        sub_23E536F68();

        v32 = objc_msgSend(v30, sel_uniqueIdentifier);
        v8 = v39;
        sub_23E536F68();

        v33 = objc_msgSend(v29, sel_mediaSourceDisplayOrder);
        if (v33
          && (v34 = v33,
              sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20),
              v35 = sub_23E5377F0(),
              v34,
              v17 = sub_23E360DBC(v35),
              swift_bridgeObjectRelease(),
              v17))
        {

        }
        else
        {
          swift_bridgeObjectRelease();

          v17 = MEMORY[0x24BEE4AF8];
        }
        v18 = v44;
        v19 = v48;
        *(_QWORD *)&v12[*(int *)(v8 + 20)] = v17;
        a2 = v42;
        sub_23E49ABB4((uint64_t)v12, v42);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v51 = v18;
        v5 = v45;
        sub_23E21C258(a2, v45, isUniquelyReferenced_nonNull_native);
        a1 = v51;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v5, v41);

      }
      while (v16 != v19);
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E1E661C(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333150, &qword_256D3F200, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
}

unint64_t sub_23E1E6638(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333148, &qword_256D3F2C8, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

uint64_t type metadata accessor for StaticTelevisionProfile()
{
  uint64_t result;

  result = qword_2543332C8;
  if (!qword_2543332C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E1E6690(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ServiceKind.isDoubleHighByDefault.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v1 = ServiceKind.rawValue.getter(a1);
  v3 = v2;
  ServiceKind.rawValue.getter(v1);
  if (v3 == v4)
    goto LABEL_15;
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v6 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return v5 & 1;
  v7 = ServiceKind.rawValue.getter(v6);
  v9 = v8;
  ServiceKind.rawValue.getter(v7);
  if (v9 == v10)
    goto LABEL_15;
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v11 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return v5 & 1;
  v12 = ServiceKind.rawValue.getter(v11);
  v14 = v13;
  ServiceKind.rawValue.getter(v12);
  if (v14 == v15)
    goto LABEL_15;
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v16 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return v5 & 1;
  v17 = ServiceKind.rawValue.getter(v16);
  v19 = v18;
  ServiceKind.rawValue.getter(v17);
  if (v19 == v20)
    goto LABEL_15;
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v21 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return v5 & 1;
  v22 = ServiceKind.rawValue.getter(v21);
  v24 = v23;
  ServiceKind.rawValue.getter(v22);
  if (v24 == v25)
    goto LABEL_15;
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return v5 & 1;
  v27 = ServiceKind.rawValue.getter(v26);
  v29 = v28;
  ServiceKind.rawValue.getter(v27);
  if (v29 == v30)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    v5 = 1;
    return v5 & 1;
  }
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  v31 = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    v32 = ServiceKind.rawValue.getter(v31);
    v34 = v33;
    ServiceKind.rawValue.getter(v32);
    if (v34 != v35)
    {
      v36 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v36 & 1;
    }
    goto LABEL_15;
  }
  return v5 & 1;
}

uint64_t ServiceKind.rawValue.getter(uint64_t a1)
{
  unsigned __int8 *v1;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E1E6A04 + 4 * byte_23E543811[*v1]))(a1, 0x800000023E55D6B0);
}

unint64_t sub_23E1E6A04()
{
  return 0xD000000000000024;
}

uint64_t sub_23E1E6C84(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23E1E6C9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);

  v10 = type metadata accessor for StaticService();
  v46 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v44 - v13;
  v15 = sub_23E536F80();
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333138);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = -1 << *(_BYTE *)(a1 + 32);
  v22 = ~v21;
  v23 = *(_QWORD *)(a1 + 64);
  v24 = -v21;
  v48 = a1;
  v49 = a1 + 64;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v50 = v22;
  v51 = 0;
  v52 = v25 & v23;
  v53 = a2;
  v54 = a3;
  v44[2] = a1;
  swift_bridgeObjectRetain();
  v44[1] = a3;
  swift_retain();
  sub_23E287634((uint64_t)v20);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  v55 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  while (1)
  {
    v29 = (uint64_t)&v20[*(int *)(v26 + 48)];
    v30 = v15;
    v55(v17, v20, v15);
    sub_23E1E2FDC(v29, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v31 = *a5;
    v33 = sub_23E1E3300((uint64_t)v17);
    v34 = *(_QWORD *)(v31 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (*(_QWORD *)(v31 + 24) >= v36)
    {
      if ((a4 & 1) != 0)
      {
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E1E70F0();
        if ((v37 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E1FDD24(v36, a4 & 1);
      v38 = sub_23E1E3300((uint64_t)v17);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_22;
      v33 = v38;
      if ((v37 & 1) != 0)
      {
LABEL_7:
        v28 = v45;
        sub_23E1E2F50((uint64_t)v14, v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v15 = v30;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v30);
        sub_23E1EA8B4(v28, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v46 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        goto LABEL_8;
      }
    }
    v40 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v33 >> 6) + 64) |= 1 << v33;
    v15 = v30;
    v55((char *)(v40[6] + *(_QWORD *)(v47 + 72) * v33), v17, v30);
    sub_23E1E2FDC((uint64_t)v14, v40[7] + *(_QWORD *)(v46 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v41 = v40[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_21;
    v40[2] = v43;
LABEL_8:
    sub_23E287634((uint64_t)v20);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v20, 1, v26) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E1E706C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254332738) + 48);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333F70) + 48);
  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_23E1E2F50(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

void *sub_23E1E70F0()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_2543333B8);
}

uint64_t sub_23E1E7104(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  void (*v29)(char *);

  v29 = a1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
  v5 = MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = *(_QWORD *)(a3 + 64);
  v26 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v27 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v15 << 6);
LABEL_5:
    v18 = *(_QWORD *)(a3 + 48);
    v19 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v19);
    v20 = *(_QWORD *)(a3 + 56);
    v21 = type metadata accessor for StaticService();
    sub_23E1E2F50(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17, (uint64_t)&v9[*(int *)(v28 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E4E3C((uint64_t)v9, (uint64_t)v7, &qword_254332738);
    v29(v7);
    result = sub_23E1E7C64((uint64_t)v7, &qword_254332738);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v15++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v15);
  if (v23)
  {
LABEL_19:
    v13 = (v23 - 1) & v23;
    v17 = __clz(__rbit64(v23)) + (v15 << 6);
    goto LABEL_5;
  }
  v24 = v15 + 1;
  if (v15 + 1 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v15 + 2;
  if (v15 + 2 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v15 + 3;
  if (v15 + 3 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v15 + 4;
  if (v15 + 4 >= v27)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_18:
    v15 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v27)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E1E7388(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v40 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v38 = a1;
  v41 = v12;
  v42 = v9;
  while (1)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v23 >= v40)
      goto LABEL_29;
    v24 = *(_QWORD *)(v39 + 8 * v23);
    ++v18;
    if (!v24)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_29;
      v24 = *(_QWORD *)(v39 + 8 * v18);
      if (!v24)
      {
        v18 = v23 + 2;
        if (v23 + 2 >= v40)
          goto LABEL_29;
        v24 = *(_QWORD *)(v39 + 8 * v18);
        if (!v24)
        {
          v18 = v23 + 3;
          if (v23 + 3 >= v40)
            goto LABEL_29;
          v24 = *(_QWORD *)(v39 + 8 * v18);
          if (!v24)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v7 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + v26 * v22, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
      return swift_release();
    v44 = v18;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    swift_bridgeObjectRetain();
    v27 = sub_23E1E3300((uint64_t)v9);
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = *a2;
      v45 = *a2;
      *a2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E1E70F0();
        v31 = v45;
      }
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(*(_QWORD *)(v31 + 48) + v27 * v26, v6);
      v32 = v45;
      v33 = *(_QWORD *)(v45 + 56);
      v34 = type metadata accessor for StaticService();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = v33 + *(_QWORD *)(v35 + 72) * v27;
      v20 = v43;
      sub_23E1E2FDC(v36, v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E7A24(v27, v32);
      *a2 = v32;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v20, 0, 1, v34);
      a1 = v38;
    }
    else
    {
      v19 = type metadata accessor for StaticService();
      v20 = v43;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v43, 1, 1, v19);
    }
    v18 = v44;
    sub_23E1E7C64(v20, &qword_254332DE8);
    v9 = v42;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v42, v6);
    v12 = v41;
  }
  v25 = v23 + 4;
  if (v25 >= v40)
  {
LABEL_29:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    return swift_release();
  }
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
  {
    v18 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v18 >= v40)
      goto LABEL_29;
    v24 = *(_QWORD *)(v39 + 8 * v18);
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_23E1E777C(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v5 = sub_23E536F80();
  v34 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v35 = a2 + 64;
    result = sub_23E537D48();
    v12 = v35;
    if ((*(_QWORD *)(v35 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (result + 1) & v11;
      v14 = *(_QWORD *)(v34 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      do
      {
        v15 = v14 * v10;
        v33(v8, *(_QWORD *)(a2 + 48) + v14 * v10, v5);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_23E5374CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v8, v5);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        if (v14 * a1 < v15 || *(_QWORD *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(v32(0) - 8) + 72);
        v22 = v21 * a1;
        result = v20 + v21 * a1;
        v23 = v21 * v10;
        v24 = v20 + v21 * v10 + v21;
        if (v22 < v23 || result >= v24)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v22 == v23)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
        v12 = v35;
      }
      while (((*(_QWORD *)(v35 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23E1E7A24(int64_t a1, uint64_t a2)
{
  return sub_23E1E777C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E1E7A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E1E7A4C(a1, type metadata accessor for StaticAccessory, (void (*)(unint64_t, uint64_t))sub_23E1E7B98, (void (*)(void))sub_23E1F1310, a2);
}

uint64_t sub_23E1E7A4C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v9;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v9 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_23E1E3300(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v9;
    v23 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v23;
    }
    v16 = *(_QWORD *)(v15 + 48);
    v17 = sub_23E536F80();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v12, v17);
    v18 = *(_QWORD *)(v15 + 56);
    v19 = a2(0);
    v20 = *(_QWORD *)(v19 - 8);
    sub_23E1E2FDC(v18 + *(_QWORD *)(v20 + 72) * v12, a5, a2);
    a3(v12, v15);
    *v9 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a5, 0, 1, v19);
  }
  else
  {
    v22 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a5, 1, 1, v22);
  }
}

unint64_t sub_23E1E7B98(int64_t a1, uint64_t a2)
{
  return sub_23E1E777C(a1, a2, type metadata accessor for StaticAccessory);
}

uint64_t sub_23E1E7BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23E1E6C9C(a1, (uint64_t)sub_23E1E706C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23E1E7C20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E1E7C64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_23E1E7CA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for StaticCharacteristic();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333D8);
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_23E1E2F50(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StaticService()
{
  uint64_t result;

  result = qword_2543343A0;
  if (!qword_2543343A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = *(_QWORD *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 8);
  v12 = *(_BYTE *)(a2 + v8 + 16);
  sub_23E1E8058(v10, v11, v12);
  *(_QWORD *)v9 = v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = v12;
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v18 = a3[11];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  v21 = v20[3];
  if (v21 >> 8 == 0xFFFFFFFF)
  {
    v22 = *((_OWORD *)v20 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v22;
    *(_QWORD *)(v19 + 32) = v20[4];
  }
  else
  {
    v23 = *v20;
    v24 = v20[1];
    v25 = v20[2];
    v26 = v20[4];
    sub_23E1E80B8(*v20, v24, v25, v20[3]);
    *(_QWORD *)v19 = v23;
    *(_QWORD *)(v19 + 8) = v24;
    *(_QWORD *)(v19 + 16) = v25;
    *(_QWORD *)(v19 + 24) = v21;
    *(_QWORD *)(v19 + 32) = v26;
  }
  return a1;
}

uint64_t sub_23E1E8058(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9)
    return sub_23E2B8BF8(result, a2);
  if (a3 == 8)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23E1E8084(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E1E80B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if ((a4 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23E1E80C8(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD *v38;
  id v39;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::String v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v48[4];
  int v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  _OWORD v53[2];

  v50 = a2;
  v51 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for StaticCharacteristic();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v48[-v16];
  v49 = *a5;
  v18 = objc_msgSend(a1, sel_service);
  if (!v18)
    goto LABEL_13;
  v19 = v18;
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v20 = a3;
  v21 = v19;
  v22 = sub_23E537C58();

  if ((v22 & 1) == 0)
    goto LABEL_13;
  v23 = HMService.supportedCharacteristicKinds.getter();
  v24 = objc_msgSend(a1, sel_characteristicType);
  v25 = sub_23E53755C();
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  CharacteristicKind.init(rawValue:)(v28);
  v29 = LOBYTE(v53[0]) == 174 ? 0 : LOBYTE(v53[0]);
  v30 = sub_23E20F7B0(v29, v23);
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
  {
    sub_23E1E7C20(v50, (uint64_t)v53, &qword_254332260);
    v52 = v49;
    v31 = v51;
    swift_bridgeObjectRetain();
    v32 = a1;
    StaticCharacteristic.init(from:value:overrideLoadingState:)(v32, (uint64_t)v53, &v52, (uint64_t)v10);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_23E1E7C64((uint64_t)v10, &qword_2543332A0);
      if (objc_msgSend(v32, sel_value))
      {
        sub_23E537D24();
        swift_unknownObjectRelease();
        sub_23E1E7C64((uint64_t)v53, &qword_254332260);
        if (qword_254333DB8 != -1)
          swift_once();
        v33 = sub_23E5371A8();
        __swift_project_value_buffer(v33, (uint64_t)qword_254333D88);
        v34 = v32;
        v35 = sub_23E537190();
        v36 = sub_23E537B08();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc();
          v38 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v37 = 138412290;
          *(_QWORD *)&v53[0] = v34;
          v39 = v34;
          v31 = v51;
          sub_23E537CF4();
          *v38 = v34;

          _os_log_impl(&dword_23E1DF000, v35, v36, "updatedCharacteristicValuesDictionary() unable to slurp value for characteristic %@", v37, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v38, -1, -1);
          MEMORY[0x24264FEBC](v37, -1, -1);

        }
        else
        {

        }
      }
      else
      {
        memset(v53, 0, sizeof(v53));
        sub_23E1E7C64((uint64_t)v53, &qword_254332260);
      }
    }
    else
    {
      sub_23E1E2FDC((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v41 = objc_msgSend(v32, sel_characteristicType);
      v42 = sub_23E53755C();
      v44 = v43;

      v45._countAndFlagsBits = v42;
      v45._object = v44;
      CharacteristicKind.init(rawValue:)(v45);
      if (LOBYTE(v53[0]) == 174)
        v46 = 0;
      else
        v46 = LOBYTE(v53[0]);
      sub_23E1E2F50((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v53[0] = v31;
      sub_23E1EA77C((uint64_t)v15, v46, isUniquelyReferenced_nonNull_native);
      v31 = *(_QWORD *)&v53[0];
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    }
  }
  else
  {
LABEL_13:
    v31 = v51;
    swift_bridgeObjectRetain();
  }
  return v31;
}

uint64_t type metadata accessor for StaticCharacteristic()
{
  uint64_t result;

  result = qword_254333290;
  if (!qword_254333290)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StateSnapshot(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_2543342D0);
}

HomeDataModel::CharacteristicKind_optional __swiftcall CharacteristicKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::CharacteristicKind_optional result;
  unint64_t v5;
  char v6;

  v2 = v1;
  v3 = sub_23E538384();
  result.value = swift_bridgeObjectRelease();
  v5 = v3 - 128;
  if (v3 >= 0x80)
  {
    v6 = -100;
    LOBYTE(v3) = 0x80;
    switch(v5)
    {
      case 0uLL:
        goto LABEL_2;
      case 1uLL:
        LOBYTE(v3) = -127;
        goto LABEL_2;
      case 2uLL:
        LOBYTE(v3) = -126;
        goto LABEL_2;
      case 3uLL:
        LOBYTE(v3) = -125;
        goto LABEL_2;
      case 4uLL:
        LOBYTE(v3) = -124;
        goto LABEL_2;
      case 5uLL:
        LOBYTE(v3) = -123;
        goto LABEL_2;
      case 6uLL:
        LOBYTE(v3) = -122;
        goto LABEL_2;
      case 7uLL:
        LOBYTE(v3) = -121;
        goto LABEL_2;
      case 8uLL:
        LOBYTE(v3) = -120;
        goto LABEL_2;
      case 9uLL:
        LOBYTE(v3) = -119;
        goto LABEL_2;
      case 0xAuLL:
        LOBYTE(v3) = -118;
        goto LABEL_2;
      case 0xBuLL:
        LOBYTE(v3) = -117;
        goto LABEL_2;
      case 0xCuLL:
        LOBYTE(v3) = -116;
        goto LABEL_2;
      case 0xDuLL:
        LOBYTE(v3) = -115;
        goto LABEL_2;
      case 0xEuLL:
        LOBYTE(v3) = -114;
        goto LABEL_2;
      case 0xFuLL:
        LOBYTE(v3) = -113;
        goto LABEL_2;
      case 0x10uLL:
        LOBYTE(v3) = -112;
        goto LABEL_2;
      case 0x11uLL:
        LOBYTE(v3) = -111;
        goto LABEL_2;
      case 0x12uLL:
        LOBYTE(v3) = -110;
        goto LABEL_2;
      case 0x13uLL:
        LOBYTE(v3) = -109;
        goto LABEL_2;
      case 0x14uLL:
        LOBYTE(v3) = -108;
        goto LABEL_2;
      case 0x15uLL:
        LOBYTE(v3) = -107;
        goto LABEL_2;
      case 0x16uLL:
        LOBYTE(v3) = -106;
        goto LABEL_2;
      case 0x17uLL:
        LOBYTE(v3) = -105;
        goto LABEL_2;
      case 0x18uLL:
        LOBYTE(v3) = -104;
        goto LABEL_2;
      case 0x19uLL:
        LOBYTE(v3) = -103;
        goto LABEL_2;
      case 0x1AuLL:
        LOBYTE(v3) = -102;
        goto LABEL_2;
      case 0x1BuLL:
        LOBYTE(v3) = -101;
        goto LABEL_2;
      case 0x1CuLL:
        break;
      case 0x1DuLL:
        v6 = -99;
        break;
      case 0x1EuLL:
        v6 = -98;
        break;
      case 0x1FuLL:
        v6 = -97;
        break;
      case 0x20uLL:
        v6 = -96;
        break;
      case 0x21uLL:
        v6 = -95;
        break;
      case 0x22uLL:
        v6 = -94;
        break;
      case 0x23uLL:
        v6 = -93;
        break;
      case 0x24uLL:
        v6 = -92;
        break;
      case 0x25uLL:
        v6 = -91;
        break;
      case 0x26uLL:
        v6 = -90;
        break;
      case 0x27uLL:
        v6 = -89;
        break;
      case 0x28uLL:
        v6 = -88;
        break;
      case 0x29uLL:
        v6 = -87;
        break;
      case 0x2AuLL:
        v6 = -86;
        break;
      case 0x2BuLL:
        v6 = -85;
        break;
      case 0x2CuLL:
        v6 = -84;
        break;
      case 0x2DuLL:
        v6 = -83;
        break;
      default:
        v6 = -82;
        break;
    }
  }
  else
  {
LABEL_2:
    v6 = v3;
  }
  *v2 = v6;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristic()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t destroy for StateSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E536F80();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v8 = v4 + v7[6];
  v6(v8, v5);
  v9 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v10 = v8 + *(int *)(v9 + 28);
  v11 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v6(v10, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v6(v8 + *(int *)(v9 + 32), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v4 + v7[7];
  v6(v12, v5);
  v13 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v6(v12 + *(int *)(v13 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v4 + v7[20];
  v15 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v6(v14, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v14 + *(int *)(v15 + 40), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StateSnapshot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  unsigned int (*v45)(char *, uint64_t, int *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  char *__dsta;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);

  *a1 = *a2;
  v3 = a3[5];
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_23E536F80();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  v8 = (int *)type metadata accessor for StaticHome();
  v9 = v8[5];
  v10 = &v4[v9];
  v11 = &v5[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &v4[v13];
  v15 = &v5[v13];
  swift_bridgeObjectRetain();
  v73 = v6;
  v74 = v7;
  v7(v14, v15, v6);
  v16 = (int *)type metadata accessor for StaticRoom(0);
  v17 = v16[5];
  v18 = &v14[v17];
  v19 = &v15[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v14[v16[6]] = v15[v16[6]];
  v21 = v16[7];
  __dst = &v14[v21];
  v22 = &v15[v21];
  v23 = type metadata accessor for StaticZone();
  v66 = *(_QWORD *)(v23 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
  swift_bridgeObjectRetain();
  if (v24(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v74(__dst, v22, v73);
    v26 = *(int *)(v23 + 20);
    v27 = &__dst[v26];
    v28 = &v22[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    *(_QWORD *)&__dst[*(int *)(v23 + 24)] = *(_QWORD *)&v22[*(int *)(v23 + 24)];
    v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(__dst, 0, 1, v23);
  }
  v74(&v14[v16[8]], &v15[v16[8]], v73);
  *(_QWORD *)&v14[v16[9]] = *(_QWORD *)&v15[v16[9]];
  *(_QWORD *)&v14[v16[10]] = *(_QWORD *)&v15[v16[10]];
  *(_QWORD *)&v14[v16[11]] = *(_QWORD *)&v15[v16[11]];
  *(_QWORD *)&v14[v16[12]] = *(_QWORD *)&v15[v16[12]];
  *(_QWORD *)&v14[v16[13]] = *(_QWORD *)&v15[v16[13]];
  *(_QWORD *)&v14[v16[14]] = *(_QWORD *)&v15[v16[14]];
  *(_QWORD *)&v14[v16[15]] = *(_QWORD *)&v15[v16[15]];
  *(_QWORD *)&v14[v16[16]] = *(_QWORD *)&v15[v16[16]];
  *(_QWORD *)&v14[v16[17]] = *(_QWORD *)&v15[v16[17]];
  v31 = v8[7];
  v32 = &v4[v31];
  v33 = &v5[v31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v74(v32, v33, v73);
  v34 = (int *)type metadata accessor for StaticUser();
  v35 = v34[5];
  v36 = &v32[v35];
  v37 = &v33[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v34[6];
  v40 = &v32[v39];
  v41 = &v33[v39];
  swift_bridgeObjectRetain();
  v74(v40, v41, v73);
  v32[v34[7]] = v33[v34[7]];
  v4[v8[8]] = v5[v8[8]];
  v4[v8[9]] = v5[v8[9]];
  v4[v8[10]] = v5[v8[10]];
  *(_QWORD *)&v4[v8[11]] = *(_QWORD *)&v5[v8[11]];
  *(_QWORD *)&v4[v8[12]] = *(_QWORD *)&v5[v8[12]];
  *(_QWORD *)&v4[v8[13]] = *(_QWORD *)&v5[v8[13]];
  *(_QWORD *)&v4[v8[14]] = *(_QWORD *)&v5[v8[14]];
  *(_QWORD *)&v4[v8[15]] = *(_QWORD *)&v5[v8[15]];
  *(_QWORD *)&v4[v8[16]] = *(_QWORD *)&v5[v8[16]];
  v4[v8[17]] = v5[v8[17]];
  *(_QWORD *)&v4[v8[18]] = *(_QWORD *)&v5[v8[18]];
  v4[v8[19]] = v5[v8[19]];
  v42 = v8[20];
  __dsta = &v4[v42];
  v43 = &v5[v42];
  v44 = (int *)type metadata accessor for StaticResident();
  v67 = *((_QWORD *)v44 - 1);
  v45 = *(unsigned int (**)(char *, uint64_t, int *))(v67 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(__dsta, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v74(__dsta, v43, v73);
    v47 = v44[5];
    v48 = &__dsta[v47];
    v49 = &v43[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = v44[6];
    v52 = &__dsta[v51];
    v53 = &v43[v51];
    v54 = *((_QWORD *)v53 + 1);
    *(_QWORD *)v52 = *(_QWORD *)v53;
    *((_QWORD *)v52 + 1) = v54;
    *(_QWORD *)&__dsta[v44[7]] = *(_QWORD *)&v43[v44[7]];
    *(_QWORD *)&__dsta[v44[8]] = *(_QWORD *)&v43[v44[8]];
    *(_WORD *)&__dsta[v44[9]] = *(_WORD *)&v43[v44[9]];
    v55 = v44[10];
    v56 = &__dsta[v55];
    v57 = &v43[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v74(v56, v57, v73);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v67 + 56))(__dsta, 0, 1, v44);
  }
  v58 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v58) = *(_QWORD *)((char *)a2 + v58);
  v59 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v59) = *(_QWORD *)((char *)a2 + v59);
  v60 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v60) = *(_QWORD *)((char *)a2 + v60);
  v61 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v61) = *(_QWORD *)((char *)a2 + v61);
  v62 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v62) = *(_QWORD *)((char *)a2 + v62);
  v63 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *(_QWORD *)((char *)a1 + v63) = *(_QWORD *)((char *)a2 + v63);
  v64 = a3[19];
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  *(_QWORD *)((char *)a1 + v64) = *(_QWORD *)((char *)a2 + v64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for StaticHome()
{
  uint64_t result;

  result = qword_254333FC0;
  if (!qword_254333FC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StaticRoom(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_2543340B8);
}

uint64_t getEnumTagSinglePayload for StaticResident()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for StaticResident()
{
  uint64_t result;

  result = qword_254333518;
  if (!qword_254333518)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StaticUser()
{
  uint64_t result;

  result = qword_254334180;
  if (!qword_254334180)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E1E91B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  if (*(_QWORD *)(a2 + 16)
    && (v5 = sub_23E53845C(),
        ((void (*)(uint64_t))a3)(v5),
        sub_23E5375EC(),
        swift_bridgeObjectRelease(),
        v6 = sub_23E5384A4(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    while (1)
    {
      v10 = a3();
      v12 = v11;
      if (v10 == a3() && v12 == v13)
        break;
      v15 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        v8 = (v8 + 1) & v9;
        if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
          continue;
      }
      return v15 & 1;
    }
    swift_bridgeObjectRelease_n();
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t StaticCharacteristic.init(from:value:overrideLoadingState:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unsigned int v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  int v27;
  id v28;
  char v29;
  id v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  __int128 v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87[2];

  v83 = a4;
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v81 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v67 - v14;
  v16 = *a3;
  v17 = objc_msgSend(a1, sel_service);
  if (v17)
  {
    v79 = v11;
    *(_QWORD *)&v72 = v17;
    v78 = v8;
    v80 = v7;
    *(_QWORD *)&v76 = a2;
    static CharacteristicKind.Value.typedValue(for:value:)(a1, a2, (uint64_t)&v84);
    v71 = v84;
    if (v85 == 255)
      v18 = 0;
    else
      v18 = v84;
    v70 = *((_QWORD *)&v84 + 1);
    if (v85 == 255)
      v19 = 0;
    else
      v19 = *((_QWORD *)&v84 + 1);
    v69 = v85;
    if (v85 == 255)
      v20 = 11;
    else
      v20 = v85;
    v21 = objc_msgSend(a1, sel_uniqueIdentifier);
    sub_23E536F68();

    v22 = objc_msgSend(a1, sel_characteristicType);
    v23 = sub_23E53755C();
    v25 = v24;

    v26._countAndFlagsBits = v23;
    v26._object = v25;
    CharacteristicKind.init(rawValue:)(v26);
    v27 = v84;
    if (v84 == 174)
      v27 = 0;
    v68 = v27;
    v74 = v19;
    v75 = v18;
    v73 = v20;
    sub_23E1E8058(v18, v19, v20);
    v28 = objc_msgSend(a1, sel_valueUpdatedTime);
    v77 = v10;
    sub_23E536EFC();

    v29 = v16;
    if (v16 > 0xFD)
    {
      v30 = a1;
      sub_23E2E4310((char *)&v84);

      v29 = v84;
    }
    v31 = v15;
    v32 = objc_msgSend(a1, sel_properties);
    v33 = sub_23E5377F0();

    v87[0] = 0;
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v35 = v76;
      swift_bridgeObjectRetain();
      v36 = (uint64_t *)(v33 + 40);
      do
      {
        v37 = *v36;
        *(_QWORD *)&v84 = *(v36 - 1);
        *((_QWORD *)&v84 + 1) = v37;
        sub_23E2E0770(v87, (uint64_t *)&v84);
        v36 += 2;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease_n();
      v38 = v87[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      v38 = 0;
      v35 = v76;
    }
    v52 = (void *)v72;
    v53 = objc_msgSend((id)v72, sel_uniqueIdentifier);
    v54 = v82;
    sub_23E536F68();

    v55 = objc_msgSend(a1, sel_metadata);
    LOBYTE(v87[0]) = 11;
    sub_23E1E9A04(v55, (unsigned __int8 *)v87, (uint64_t)&v84);

    sub_23E1E9B70(v71, v70, v69);
    sub_23E1E7C64(v35, &qword_254332260);
    v76 = v84;
    v72 = v85;
    v56 = v86;
    v57 = *(void (**)(uint64_t, char *, uint64_t))(v81 + 32);
    v58 = v83;
    v59 = v79;
    v57(v83, v31, v79);
    v60 = (int *)type metadata accessor for StaticCharacteristic();
    *(_BYTE *)(v58 + v60[5]) = v68;
    v61 = v58 + v60[6];
    v62 = v74;
    *(_QWORD *)v61 = v75;
    *(_QWORD *)(v61 + 8) = v62;
    *(_BYTE *)(v61 + 16) = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v58 + v60[7], v77, v80);
    *(_BYTE *)(v58 + v60[8]) = v29;
    *(_QWORD *)(v58 + v60[9]) = v38;
    v57(v58 + v60[10], v54, v59);
    v63 = v58 + v60[11];
    v64 = v72;
    *(_OWORD *)v63 = v76;
    *(_OWORD *)(v63 + 16) = v64;
    *(_QWORD *)(v63 + 32) = v56;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v60 - 1) + 56))(v58, 0, 1, v60);
  }
  else
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v39 = sub_23E5371A8();
    __swift_project_value_buffer(v39, (uint64_t)qword_254333D88);
    v40 = a1;
    v41 = sub_23E537190();
    v42 = sub_23E537B08();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_QWORD *)&v84 = v44;
      *(_DWORD *)v43 = 136315394;
      v45 = a2;
      v87[0] = sub_23E1FD768(0xD000000000000026, 0x800000023E56A270, (uint64_t *)&v84);
      sub_23E537CF4();
      *(_WORD *)(v43 + 12) = 2080;
      v82 = (char *)(v43 + 14);
      v46 = v40;
      v47 = objc_msgSend(v46, sel_description);
      v48 = sub_23E53755C();
      v50 = v49;

      v87[0] = sub_23E1FD768(v48, v50, (uint64_t *)&v84);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v41, v42, "%s unable to slurp value for characteristic %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v44, -1, -1);
      MEMORY[0x24264FEBC](v43, -1, -1);

      v51 = v45;
    }
    else
    {

      v51 = a2;
    }
    sub_23E1E7C64(v51, &qword_254332260);
    v66 = type metadata accessor for StaticCharacteristic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v83, 1, 1, v66);
  }
}

uint64_t sub_23E1E9988(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E1E99C8()
{
  unint64_t result;

  result = qword_254333358;
  if (!qword_254333358)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333358);
  }
  return result;
}

void sub_23E1E9A04(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;

  if (a1)
  {
    v4 = *a2;
    v5 = a1;
    v6 = objc_msgSend(v5, sel_format);
    if (v6)
    {
      v7 = v6;
      v8 = sub_23E53755C();
      v10 = v9;

      if (v4 == 11)
      {
        v11._countAndFlagsBits = v8;
        v11._object = v10;
        CharacteristicKind.Format.init(rawValue:)(v11);
        v4 = v19;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((v4 - 1) < 6)
      {
        sub_23E1EBB10(v5, (uint64_t)&v19);
        v12 = v20;
        v13 = v21;
        v14 = v22;
LABEL_8:
        *(_OWORD *)a3 = v19;
        *(_QWORD *)(a3 + 16) = v12;
        *(_QWORD *)(a3 + 24) = v13;
        *(_QWORD *)(a3 + 32) = v14;
        return;
      }
      if (v4 == 7)
      {
        sub_23E1EBCB8(v5, (uint64_t)&v19);
        v12 = v20;
        v14 = v22;
        v13 = v21 | 0x4000000000000000;
        goto LABEL_8;
      }
      if (v4 == 8)
      {
        v15 = objc_msgSend(v5, sel_maxLength);
        if (v15)
        {
          v16 = v15;
          v17 = (uint64_t)objc_msgSend(v15, sel_integerValue);

        }
        else
        {
          v17 = 0x7FFFFFFFFFFFFFFFLL;
        }

        *(_QWORD *)(a3 + 8) = 0;
        *(_QWORD *)(a3 + 16) = 0;
        *(_QWORD *)a3 = v17;
        v18 = xmmword_23E53F070;
        goto LABEL_15;
      }
    }

  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v18 = xmmword_23E53F080;
LABEL_15:
  *(_OWORD *)(a3 + 24) = v18;
}

uint64_t sub_23E1E9B70(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_23E1EAB20(result, a2, a3);
  return result;
}

void static CharacteristicKind.Value.typedValue(for:value:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v6 = objc_msgSend(a1, sel_metadata);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_format);
    if (v8)
    {
      v9 = v8;
      v10 = sub_23E53755C();
      v12 = v11;

      v13._countAndFlagsBits = v10;
      v13._object = v12;
      CharacteristicKind.Format.init(rawValue:)(v13);
      if (v23 != 11)
      {
        static CharacteristicKind.Value.typedValue(for:valueFormat:)(a2, (unsigned __int8 *)&v23, a3);

        return;
      }
    }

  }
  if (qword_254333DB8 != -1)
    swift_once();
  v14 = sub_23E5371A8();
  __swift_project_value_buffer(v14, (uint64_t)qword_254333D88);
  v15 = a1;
  v16 = sub_23E537190();
  v17 = sub_23E537B08();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v23 = v22;
    *(_DWORD *)v18 = 136315394;
    sub_23E1FD768(0xD000000000000016, 0x800000023E5651D0, &v23);
    sub_23E537CF4();
    *(_WORD *)(v18 + 12) = 2112;
    v20 = a3;
    v21 = v15;
    sub_23E537CF4();
    *v19 = v15;

    a3 = v20;
    _os_log_impl(&dword_23E1DF000, v16, v17, "%s unable to slurp value for characteristic %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v18, -1, -1);

  }
  else
  {

  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
}

HomeDataModel::CharacteristicKind::Format_optional __swiftcall CharacteristicKind.Format.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::CharacteristicKind::Format_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t static CharacteristicKind.Value.typedValue(for:valueFormat:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  char v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  char v22;
  unsigned __int8 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];

  v4 = *a2;
  sub_23E1EA5B8(a1, (uint64_t)&v34);
  if (!v35)
  {
    result = sub_23E1E9988((uint64_t)&v34);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 16) = -1;
    return result;
  }
  sub_23E1EA76C(&v34, v36);
  sub_23E1EA57C((uint64_t)v36, (uint64_t)&v34);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
      v7 = swift_dynamicCast();
      v8 = v29;
      if (!v7)
        v8 = 0;
      sub_23E2DD208(v8 | ((v7 ^ 1u) << 8), v4, a3);
      goto LABEL_43;
    }
    if (swift_dynamicCast())
    {
      sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
      v9 = swift_dynamicCast();
      v10 = (unsigned __int16)v29;
      if (!v9)
        v10 = 0;
      sub_23E2DD35C(v10 | ((v9 ^ 1u) << 16), v4, a3);
      goto LABEL_43;
    }
    if (swift_dynamicCast())
    {
      sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
      v11 = swift_dynamicCast();
      v12 = v29;
      LOBYTE(v29) = v11 ^ 1;
      if (!v11)
        v12 = 0;
      sub_23E2DD4C4(v12 | ((unint64_t)(v11 ^ 1u) << 32), v4, a3);
      goto LABEL_43;
    }
    if (!swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v13 = swift_dynamicCast();
        v14 = v29;
        if (!v13)
          v14 = 0;
        sub_23E2DD62C(v14 | ((v13 ^ 1u) << 8), v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v15 = swift_dynamicCast();
        v16 = (unsigned __int16)v29;
        if (!v15)
          v16 = 0;
        sub_23E2DD724(v16 | ((v15 ^ 1u) << 16), v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v17 = swift_dynamicCast();
        v18 = v29;
        LOBYTE(v29) = v17 ^ 1;
        if (!v17)
          v18 = 0;
        sub_23E2DD828(v18 | ((unint64_t)(v17 ^ 1u) << 32), v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v19 = swift_dynamicCast();
        sub_23E2DD940(v19 ^ 1, v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v20 = swift_dynamicCast();
        v21 = v29;
        LOBYTE(v29) = v20 ^ 1;
        if (!v20)
          v21 = 0;
        sub_23E2DDA4C(v21 | ((unint64_t)(v20 ^ 1u) << 32), v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        v22 = swift_dynamicCast();
        sub_23E2DDCBC(v22 ^ 1, v4, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
        if (swift_dynamicCast())
          v23 = v29;
        else
          v23 = 2;
        LOBYTE(v29) = v4;
        sub_23E2DDF24(v23, (unsigned __int8 *)&v29, a3);
        goto LABEL_43;
      }
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_23E1EA76C(v36, v31);
        if (swift_dynamicCast())
        {
          v24 = v29;
          v25 = v30;
          v26 = 8;
        }
        else
        {
          v24 = 0;
          v25 = 0;
          v26 = -1;
        }
        *(_QWORD *)a3 = v24;
        *(_QWORD *)(a3 + 8) = v25;
        *(_BYTE *)(a3 + 16) = v26;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
      }
      if (swift_dynamicCast())
      {
        sub_23E22C908(v32, v33);
        sub_23E1EA76C(v36, v31);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v27 = v30;
          if (v4 == 9)
          {
            *(_QWORD *)a3 = v29;
            *(_QWORD *)(a3 + 8) = v27;
            v28 = 9;
            goto LABEL_57;
          }
          if (v4 == 10)
          {
            *(_QWORD *)a3 = v29;
            *(_QWORD *)(a3 + 8) = v27;
            v28 = 10;
LABEL_57:
            *(_BYTE *)(a3 + 16) = v28;
            return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
          }
          sub_23E22C908(v29, v30);
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      }
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v28 = -1;
      goto LABEL_57;
    }
  }
  sub_23E1EA57C((uint64_t)v36, (uint64_t)v31);
  v5 = swift_dynamicCast() ^ 1;
  sub_23E1EA600(v5, v4, a3);
LABEL_43:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
}

uint64_t sub_23E1EA57C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23E1EA5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23E1EA600(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  if ((a1 & 1) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
}

void sub_23E1EA678(uint64_t a1)
{
  _QWORD *v1;

  if (a1 < 0)
  {
    sub_23E538000();
    __break(1u);
  }
  else
  {
    *v1 = a1;
    v1[1] = 0;
  }
  JUMPOUT(0x23E1EA664);
}

_OWORD *sub_23E1EA76C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23E1EA77C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for StaticCharacteristic();
        return sub_23E1EA8B4(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      }
      return sub_23E21D0A0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E1E7CA0();
      goto LABEL_7;
    }
    sub_23E217108(v13, a3 & 1);
    v20 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23E21D0A0(v10, a2, a1, v16);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E1EA8B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t assignWithTake for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 16);
  v12 = *(_QWORD *)v9;
  v13 = *(_QWORD *)(v9 + 8);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v14 = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v9 + 16) = v11;
  sub_23E1EAB20(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v20 = a3[11];
  v21 = (uint64_t *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a1 + v20 + 24);
  if (v23 >> 8 != 0xFFFFFFFF)
  {
    v24 = *(_QWORD *)(v22 + 24);
    if (v24 >> 8 != 0xFFFFFFFF)
    {
      v26 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 32);
      v28 = *v21;
      v29 = v21[1];
      v30 = v21[2];
      *(_OWORD *)v21 = *(_OWORD *)v22;
      v21[2] = v26;
      v21[3] = v24;
      v21[4] = v27;
      sub_23E1EAB4C(v28, v29, v30, v23);
      return a1;
    }
    sub_23E3ED978(v21);
  }
  v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v25;
  v21[4] = *(_QWORD *)(v22 + 32);
  return a1;
}

uint64_t destroy for StaticCharacteristic(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_23E1EAB20(*(_QWORD *)(a1 + a2[6]), *(_QWORD *)(a1 + a2[6] + 8), *(_BYTE *)(a1 + a2[6] + 16));
  v6 = a1 + a2[7];
  v7 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  result = ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + a2[10], v4);
  v9 = (uint64_t *)(a1 + a2[11]);
  v10 = v9[3];
  if (v10 >> 8 != 0xFFFFFFFF)
    return sub_23E1EAB4C(*v9, v9[1], v9[2], v10);
  return result;
}

uint64_t sub_23E1EAB20(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9)
    return sub_23E22C908(result, a2);
  if (a3 == 8)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E1EAB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if ((a4 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E1EAB5C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_23E1EAF90(&v14, *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t StaticService.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for StaticService() + 104));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *a1;
    swift_bridgeObjectRetain();
    v7 = sub_23E1EAF70(v6);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v5 + 56);
      v11 = type metadata accessor for StaticCharacteristic();
      v12 = *(_QWORD *)(v11 - 8);
      sub_23E1E2F50(v10 + *(_QWORD *)(v12 + 72) * v9, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      v15 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = type metadata accessor for StaticCharacteristic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristic()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t sub_23E1EADC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23E53845C();
  ((void (*)(uint64_t))a2)(v4);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v5 = sub_23E5384A4();
  return sub_23E1EAE50(a1, v5, a2);
}

unint64_t sub_23E1EAE50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v8 = ~v5;
    while (1)
    {
      v9 = a3();
      v11 = v10;
      if (v9 == a3() && v11 == v12)
        break;
      v14 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        v6 = (v6 + 1) & v8;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
          continue;
      }
      return v6;
    }
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

unint64_t sub_23E1EAF70(uint64_t a1)
{
  return sub_23E1EADC4(a1, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t type metadata accessor for StateSnapshot.UpdateType(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_254334218);
}

uint64_t sub_23E1EAF90(_BYTE *a1, uint64_t a2)
{
  return sub_23E380B84(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter, &qword_2543333B0);
}

uint64_t CharacteristicKind.rawValue.getter(uint64_t a1)
{
  unsigned __int8 *v1;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E1EAFD8 + 4 * word_23E5418AE[*v1]))(a1, 0x800000023E55D6B0);
}

unint64_t sub_23E1EAFD8()
{
  return 0xD000000000000024;
}

char *initializeWithCopy for StateSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = v6;
      goto LABEL_12;
    case 1u:
      v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(void *, const void *))(v8 - 8))(a1, a2);
      goto LABEL_12;
    case 2u:
    case 3u:
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      v9 = *(void **)a2;
      v10 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v11;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 7u:
      v12 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
      v14 = v13[12];
      v15 = *(void **)&a2[v14];
      *(_QWORD *)&a1[v14] = v15;
      v16 = v13[16];
      v17 = *(void **)&a2[v16];
      *(_QWORD *)&a1[v16] = v17;
      v18 = v13[20];
      v19 = *(void **)&a2[v18];
      *(_QWORD *)&a1[v18] = v19;
      v20 = v15;
      v21 = v17;
      v22 = v19;
      goto LABEL_12;
    case 8u:
      v23 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0);
      a1[*(int *)(v24 + 48)] = a2[*(int *)(v24 + 48)];
      goto LABEL_12;
    case 9u:
      v25 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
      v27 = *(_OWORD *)&a2[v26 + 24];
      *(_OWORD *)&a1[v26 + 24] = v27;
      (**(void (***)(void))(v27 - 8))();
      goto LABEL_12;
    case 0xAu:
      v28 = sub_23E536F80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
      *(_QWORD *)&a1[*(int *)(v29 + 48)] = *(_QWORD *)&a2[*(int *)(v29 + 48)];
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t type metadata accessor for StaticLightProfile()
{
  uint64_t result;

  result = qword_254333270;
  if (!qword_254333270)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E1EBB10(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  char v20;
  id v21;
  unint64_t v22;
  char v23;

  v4 = objc_msgSend(a1, sel_maximumValue);
  if (v4)
  {
    v5 = v4;
    v6 = (uint64_t)objc_msgSend(v4, sel_integerValue);

  }
  else
  {
    v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  v7 = objc_msgSend(a1, sel_minimumValue);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_integerValue);

  }
  else
  {
    v9 = (id)0x8000000000000000;
  }
  v10 = objc_msgSend(a1, sel_stepValue);
  if (v10)
  {
    v11 = v10;
    v12 = (uint64_t)objc_msgSend(v10, sel_integerValue);

    if (v12 <= 1)
      v13 = 1;
    else
      v13 = v12;
  }
  else
  {
    v13 = 1;
  }
  v14 = objc_msgSend(a1, sel_units);
  if (v14)
  {
    v15 = v14;
    v16 = sub_23E53755C();
    v18 = v17;

    v19._countAndFlagsBits = v16;
    v19._object = v18;
    StaticCharacteristicMetadata.Unit.init(rawValue:)(v19);
    v20 = v23;
  }
  else
  {
    v20 = 8;
  }
  v21 = objc_msgSend(a1, sel_validValues);
  if (v21)
  {
    sub_23E2AAFC4();
    v22 = sub_23E5377F0();

    v21 = (id)sub_23E2A64F0(v22);
    swift_bridgeObjectRelease();
  }

  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v13;
  *(_BYTE *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v21;
}

void sub_23E1EBCB8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  char v22;
  id v23;
  unint64_t v24;
  char v25;

  v4 = objc_msgSend(a1, sel_maximumValue);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    v7 = v6;

  }
  else
  {
    v7 = 0x7FEFFFFFFFFFFFFFLL;
  }
  v8 = objc_msgSend(a1, sel_minimumValue);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    v11 = v10;

  }
  else
  {
    v11 = 0x10000000000000;
  }
  v12 = objc_msgSend(a1, sel_stepValue);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_doubleValue);
    v15 = v14;

  }
  else
  {
    v15 = 1.0;
  }
  v16 = objc_msgSend(a1, sel_units);
  if (v16)
  {
    v17 = v16;
    v18 = sub_23E53755C();
    v20 = v19;

    v21._countAndFlagsBits = v18;
    v21._object = v20;
    StaticCharacteristicMetadata.Unit.init(rawValue:)(v21);
    v22 = v25;
  }
  else
  {
    v22 = 8;
  }
  v23 = objc_msgSend(a1, sel_validValues);
  if (v23)
  {
    sub_23E2AAFC4();
    v24 = sub_23E5377F0();

    v23 = (id)sub_23E2A6650(v24);
    swift_bridgeObjectRelease();
  }

  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v11;
  *(double *)(a2 + 16) = v15;
  *(_BYTE *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v23;
}

HomeDataModel::StaticCharacteristicMetadata::Unit_optional __swiftcall StaticCharacteristicMetadata.Unit.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::StaticCharacteristicMetadata::Unit_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t assignWithTake for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_BYTE *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(void *, uint64_t, uint64_t);
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  int v66;
  int v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  _OWORD *v70;
  char *v71;
  int EnumCaseMultiPayload;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  size_t v77;
  void *v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD *v101;
  char *v102;
  uint64_t v103;
  int v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t updated;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  char *__dst;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v129(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_23E1E2FA0(a1 + v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v16 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v14, v15, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v131 = v7;
  v17 = a3[7];
  v18 = (_BYTE *)(a1 + v17);
  v19 = (_BYTE *)(a2 + v17);
  v20 = (int *)type metadata accessor for StaticDeviceMetadata();
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v131 + 32))(v18, v19, v6);
      *(_OWORD *)&v18[v20[5]] = *(_OWORD *)&v19[v20[5]];
      *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
      *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
      *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
      v18[v20[9]] = v19[v20[9]];
      v18[v20[10]] = v19[v20[10]];
      v18[v20[11]] = v19[v20[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v24)
  {
    sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_10:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_11;
  }
  v129((uint64_t)v18, (uint64_t)v19, v6);
  v80 = v20[5];
  v81 = &v18[v80];
  v82 = (uint64_t *)&v19[v80];
  v84 = *v82;
  v83 = v82[1];
  *v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  v85 = v20[6];
  v86 = &v18[v85];
  v87 = (uint64_t *)&v19[v85];
  v89 = *v87;
  v88 = v87[1];
  *v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  v90 = v20[7];
  v91 = &v18[v90];
  v92 = (uint64_t *)&v19[v90];
  v94 = *v92;
  v93 = v92[1];
  *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  v95 = v20[8];
  v96 = &v18[v95];
  v97 = (uint64_t *)&v19[v95];
  v99 = *v97;
  v98 = v97[1];
  *v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  v18[v20[9]] = v19[v20[9]];
  v18[v20[10]] = v19[v20[10]];
  v18[v20[11]] = v19[v20[11]];
LABEL_11:
  v26 = a3[8];
  v27 = (void *)(a1 + v26);
  v28 = (void *)(a2 + v26);
  v29 = sub_23E536F20();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v127 = (unsigned int (*)(char *, uint64_t, uint64_t))v31;
  v33 = v31(v28, 1, v29);
  v125 = v30;
  v126 = v29;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
LABEL_16:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_17:
  v35 = a3[9];
  v36 = a3[10];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v39 = *(_BYTE *)(a2 + v36);
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = v39;
  v129(a1 + a3[11], a2 + a3[11], v6);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  v46 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  v47 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  v48 = a3[21];
  v49 = (void *)(a1 + v48);
  v50 = (const void *)(a2 + v48);
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
  v52 = v51(a1 + v48, 1, v6);
  v53 = v51((uint64_t)v50, 1, v6);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, const void *, uint64_t))(v131 + 32))(v49, v50, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v49, 0, 1, v6);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v131 + 8))(v49, v6);
LABEL_22:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_23;
  }
  v129((uint64_t)v49, (uint64_t)v50, v6);
LABEL_23:
  v55 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v56 = (_QWORD *)(a1 + v55);
  v57 = (uint64_t *)(a2 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  swift_bridgeObjectRelease();
  v60 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  v61 = a1 + v60;
  v62 = (char *)(a2 + v60);
  v63 = type metadata accessor for StaticSoftwareUpdate(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65((uint64_t)v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      v68 = *(void (**)(uint64_t, char *, uint64_t))(v131 + 32);
      v68(v61, v62, v6);
      v69 = *(int *)(v63 + 20);
      v70 = (_OWORD *)(v61 + v69);
      v71 = &v62[v69];
      v132 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v70 = *(_OWORD *)v71;
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v110 = *(int *)(updated + 20);
        __dst = (char *)v70 + v110;
        v130 = updated;
        v111 = &v71[v110];
        if (v127(&v71[v110], 1, v126))
        {
LABEL_44:
          v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
LABEL_52:
          *(_OWORD *)((char *)v70 + *(int *)(v130 + 24)) = *(_OWORD *)&v71[*(int *)(v130 + 24)];
          *(_OWORD *)((char *)v70 + *(int *)(v130 + 28)) = *(_OWORD *)&v71[*(int *)(v130 + 28)];
          v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v70 + *(int *)(v121 + 48)) = v71[*(int *)(v121 + 48)];
          goto LABEL_53;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
LABEL_54:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
            goto LABEL_55;
          }
          v68((uint64_t)v70, v71, v6);
          v73 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v70 + v73[5]) = v71[v73[5]];
          *(_OWORD *)((char *)v70 + v73[6]) = *(_OWORD *)&v71[v73[6]];
          v74 = v73[7];
          v75 = (char *)v70 + v74;
          v76 = &v71[v74];
          v75[8] = v76[8];
          *(_QWORD *)v75 = *(_QWORD *)v76;
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_54;
        }
        *v70 = *(_OWORD *)v71;
        v112 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v113 = *(int *)(v112 + 20);
        __dst = (char *)v70 + v113;
        v130 = v112;
        v111 = &v71[v113];
        if (v127(&v71[v113], 1, v126))
          goto LABEL_44;
      }
      (*(void (**)(char *, char *))(v125 + 32))(__dst, v111);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(__dst, 0, 1, v126);
      goto LABEL_52;
    }
    goto LABEL_31;
  }
  if (!v67)
  {
    v129(v61, (uint64_t)v62, v6);
    if (a1 == a2)
      goto LABEL_55;
    v100 = *(int *)(v63 + 20);
    v101 = (_OWORD *)(v61 + v100);
    v102 = &v62[v100];
    sub_23E1E2FA0((uint64_t)v101, type metadata accessor for StaticSoftwareUpdate.Kind);
    v103 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v104 = swift_getEnumCaseMultiPayload();
    switch(v104)
    {
      case 2:
        *v101 = *(_OWORD *)v102;
        v115 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v116 = v115[5];
        v117 = (char *)v101 + v116;
        v118 = &v102[v116];
        if (v127(&v102[v116], 1, v126))
        {
LABEL_47:
          v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
LABEL_57:
          *(_OWORD *)((char *)v101 + v115[6]) = *(_OWORD *)&v102[v115[6]];
          *(_OWORD *)((char *)v101 + v115[7]) = *(_OWORD *)&v102[v115[7]];
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v101 + *(int *)(v124 + 48)) = v102[*(int *)(v124 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        break;
      case 1:
        *v101 = *(_OWORD *)v102;
        v115 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v120 = v115[5];
        v117 = (char *)v101 + v120;
        v118 = &v102[v120];
        if (v127(&v102[v120], 1, v126))
          goto LABEL_47;
        break;
      case 0:
        (*(void (**)(_OWORD *, char *, uint64_t))(v131 + 32))(v101, v102, v6);
        v105 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v101 + v105[5]) = v102[v105[5]];
        *(_OWORD *)((char *)v101 + v105[6]) = *(_OWORD *)&v102[v105[6]];
        v106 = v105[7];
        v107 = (char *)v101 + v106;
        v108 = &v102[v106];
        v107[8] = v108[8];
        *(_QWORD *)v107 = *(_QWORD *)v108;
        swift_storeEnumTagMultiPayload();
        goto LABEL_55;
      default:
        v77 = *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64);
        v78 = v101;
        v79 = v102;
        goto LABEL_32;
    }
    (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v117, v118, v126);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v117, 0, 1, v126);
    goto LABEL_57;
  }
  sub_23E1E2FA0(v61, type metadata accessor for StaticSoftwareUpdate);
LABEL_31:
  v77 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
  v78 = (void *)v61;
  v79 = v62;
LABEL_32:
  memcpy(v78, v79, v77);
LABEL_55:
  v122 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v122) = *(_BYTE *)(a2 + v122);
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for StaticAccessory(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_254334550);
}

_QWORD *initializeWithCopy for StaticAccessory.DeviceIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t destroy for StaticAccessory.DeviceIdentifier(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23E1ECAF0(uint64_t a1, id *a2)
{
  uint64_t v2;

  return sub_23E1ECB10(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_23E1ECB10(uint64_t a1, id *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  char *v67;
  uint64_t v68;

  v65 = a7;
  v66 = a8;
  v63 = a6;
  v67 = (char *)a3;
  v68 = a4;
  v61 = a1;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v64 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticLightProfile();
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v62 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v55 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v55 - v24;
  v26 = *a2;
  v27 = objc_msgSend(*a2, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v28 = sub_23E5377F0();

  LOBYTE(v27) = sub_23E1ECF24((uint64_t)v67, v28);
  result = swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
    v57 = v17;
    v58 = v19;
    v55 = v14;
    v56 = v23;
    v67 = v25;
    v31 = v59;
    v30 = v60;
    if (v68)
    {
      v32 = v26;
      v33 = objc_msgSend(v26, sel_uniqueIdentifier);
      v34 = (uint64_t)v58;
      sub_23E536F68();

      v35 = v63;
      if (*(_QWORD *)(v68 + 16))
      {
        v36 = sub_23E1E3300(v34);
        v37 = v13;
        if ((v38 & 1) != 0)
        {
          v39 = (uint64_t)v67;
          sub_23E1E2F50(*(_QWORD *)(v68 + 56) + *(_QWORD *)(v31 + 72) * v36, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
          v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
          v41 = v39;
          v42 = 0;
        }
        else
        {
          v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
          v41 = (uint64_t)v67;
          v42 = 1;
        }
        v47 = v30;
        v43 = v40;
        v40((char *)v41, v42, 1, v30);
      }
      else
      {
        v47 = v30;
        v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
        v43(v67, 1, 1, v30);
        v37 = v13;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v37);
      v45 = (uint64_t)v62;
      v44 = (uint64_t)v67;
      v30 = v47;
      v46 = v65;
    }
    else
    {
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      v44 = (uint64_t)v67;
      v43(v67, 1, 1, v60);
      v45 = (uint64_t)v62;
      v46 = v65;
      v35 = v63;
      v32 = v26;
    }
    v48 = v43;
    v49 = v64;
    sub_23E1E2F50(v35, v64, type metadata accessor for StateSnapshot.UpdateType);
    v50 = (uint64_t)v56;
    sub_23E1ED128(v44, (uint64_t)v56);
    v51 = v32;
    v52 = v46;
    sub_23E1ED170(v49, v51, v52, v66, v50, v45);
    v53 = objc_msgSend(v51, sel_uniqueIdentifier);
    v54 = (uint64_t)v57;
    sub_23E536F68();

    sub_23E1E2F50(v45, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v48((char *)v50, 0, 1, v30);
    sub_23E1ED0E4(v50, v54);
    sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    return sub_23E1E7C64(v44, &qword_256D3F2D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticLightProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1ECF24(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E53803C())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x24264F148](0, a2);
LABEL_5:
      v6 = v5;
      sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v7 = sub_23E537C58();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_23E537C58();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x24264F148](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_23E537C58();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_23E1ED0A8()
{
  unint64_t result;

  result = qword_254333378;
  if (!qword_254333378)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333378);
  }
  return result;
}

uint64_t sub_23E1ED0E4(uint64_t a1, uint64_t a2)
{
  return sub_23E20C644(a1, a2, &qword_256D3F2D0, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile, &qword_256D3F2C8, (void (*)(uint64_t))sub_23E2DAA6C);
}

uint64_t sub_23E1ED108(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile, &qword_256D3F2C8);
}

uint64_t getEnumTagSinglePayload for StaticLightProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1ED128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E1ED170@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unsigned __int8 v20;
  char v21;
  id v22;
  uint64_t result;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_23E536F68();

  v16 = objc_msgSend(a3, sel_uniqueIdentifier);
  v17 = type metadata accessor for StaticLightProfile();
  sub_23E536F68();

  v18 = sub_23E1ED388(a2, a4);
  v26 = a5;
  if (v18)
  {
    sub_23E1E7C20(a5, (uint64_t)v14, &qword_256D3F2D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17) == 1)
    {
      sub_23E1E7C64((uint64_t)v14, &qword_256D3F2D0);
      v19 = 2;
    }
    else
    {
      v19 = v14[*(int *)(v17 + 24) + 1];
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    }
    v21 = sub_23E2EDEC4(a1, a2, v19);
    v22 = objc_msgSend(a2, sel_settings);
    v20 = objc_msgSend(v22, sel_isNaturalLightingEnabled);

  }
  else
  {

    v20 = 0;
    v21 = 2;
  }
  sub_23E1E7C64(v26, &qword_256D3F2D0);
  result = sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot.UpdateType);
  v24 = (unsigned __int8 *)(a6 + *(int *)(v17 + 24));
  *v24 = v20;
  v24[1] = v21;
  *(_BYTE *)(a6 + *(int *)(v17 + 20)) = v18;
  return result;
}

BOOL sub_23E1ED388(void *a1, void *a2)
{
  id v3;
  unsigned __int8 v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v3 = objc_msgSend(a1, sel_settings);
  v4 = objc_msgSend(v3, sel_supportedFeatures);

  v5 = objc_msgSend(a2, sel_residentDevices);
  sub_23E1E335C(0, (unint64_t *)&qword_254332C18);
  v6 = sub_23E5377F0();

  v14 = MEMORY[0x24BEE4AF8];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
    if ((v4 & 1) == 0)
    {
LABEL_14:
      swift_release();
      return 0;
    }
    goto LABEL_17;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_16;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v13 = sub_23E53803C();
    swift_release();
    goto LABEL_20;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x24264F148](i, v6);
    else
      v9 = *(id *)(v6 + 8 * i + 32);
    v10 = v9;
    if (objc_msgSend(v9, sel_isEnabled)
      && (objc_msgSend(v10, sel_capabilities) & 0x4000) != 0)
    {
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      sub_23E537F28();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
  if ((v4 & 1) == 0)
    goto LABEL_14;
LABEL_17:
  if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    goto LABEL_23;
  v13 = *(_QWORD *)(v11 + 16);
LABEL_20:
  swift_release();
  return v13 > 0;
}

uint64_t sub_23E1ED5A0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v26 = (char *)&v24 - v9;
  v10 = objc_msgSend(v1, sel_applicationData);
  v11 = (void *)sub_23E537538();
  v12 = objc_msgSend(v10, sel_objectForKeyedSubscript_, v11);

  if (!v12
    || (v29 = v12,
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48),
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB0),
        v27 = v13,
        (swift_dynamicCast() & 1) == 0))
  {

    return MEMORY[0x24BEE4AF8];
  }
  v14 = v30;

  if (!(v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_5;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v15 = result;
  if (!result)
  {
LABEL_23:
    swift_bridgeObjectRelease_n();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_5:
  if (v15 >= 1)
  {
    v17 = 0;
    v18 = MEMORY[0x24BEE4AF8];
    v25 = v15;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v19 = MEMORY[0x24264F148](v17, v14);
      }
      else
      {
        v19 = *(_QWORD *)(v14 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      v30 = v19;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      sub_23E536F2C();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_23E1E7C64((uint64_t)v4, &qword_254333F50);
      }
      else
      {
        v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v21 = v26;
        v20(v26, v4, v5);
        v20(v28, v21, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_23E51E540(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v23 = *(_QWORD *)(v18 + 16);
        v22 = *(_QWORD *)(v18 + 24);
        if (v23 >= v22 >> 1)
          v18 = sub_23E51E540(v22 > 1, v23 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v23 + 1;
        v20((char *)(v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v23), v28, v5);
        v15 = v25;
      }
      ++v17;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease_n();
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E1ED920(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD);

  v61 = a5;
  v11 = a5(0);
  v56 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v60 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v48 - v14;
  v15 = sub_23E536F80();
  v54 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v53 = (char *)&v48 - v18;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23E53806C();
  v20 = result;
  v49 = a1;
  v50 = a2;
  if (a2 < 1)
    v21 = 0;
  else
    v21 = *a1;
  v22 = 0;
  v23 = result + 64;
  v51 = a4;
  v52 = result;
  v24 = (uint64_t)v55;
  v25 = v59;
  while (1)
  {
    if (v21)
    {
      v57 = (v21 - 1) & v21;
      v58 = v22;
      v26 = __clz(__rbit64(v21)) | (v22 << 6);
    }
    else
    {
      v27 = v22 + 1;
      if (__OFADD__(v22, 1))
        goto LABEL_40;
      if (v27 >= v50)
        return v20;
      v28 = v49[v27];
      v29 = v22 + 1;
      if (!v28)
      {
        v29 = v22 + 2;
        if (v22 + 2 >= v50)
          return v20;
        v28 = v49[v29];
        if (!v28)
        {
          v29 = v22 + 3;
          if (v22 + 3 >= v50)
            return v20;
          v28 = v49[v29];
          if (!v28)
          {
            v30 = v22 + 4;
            if (v22 + 4 >= v50)
              return v20;
            v28 = v49[v30];
            if (!v28)
            {
              while (1)
              {
                v29 = v30 + 1;
                if (__OFADD__(v30, 1))
                  goto LABEL_41;
                if (v29 >= v50)
                  return v20;
                v28 = v49[v29];
                ++v30;
                if (v28)
                  goto LABEL_24;
              }
            }
            v29 = v22 + 4;
          }
        }
      }
LABEL_24:
      v57 = (v28 - 1) & v28;
      v58 = v29;
      v26 = __clz(__rbit64(v28)) + (v29 << 6);
    }
    v31 = v53;
    v32 = v54;
    v33 = *(_QWORD *)(v54 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v53, a4[6] + v33 * v26, v15);
    v34 = a4[7];
    v35 = *(_QWORD *)(v56 + 72);
    v36 = v34 + v35 * v26;
    v37 = v61;
    sub_23E1E2F50(v36, v24, v61);
    v38 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v38(v25, v31, v15);
    sub_23E1E2FDC(v24, v60, v37);
    v20 = v52;
    sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v39 = -1 << *(_BYTE *)(v20 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v23 + 8 * (v40 >> 6))) != 0)
    {
      v42 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v23 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v43 = 0;
      v44 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v45 = v41 == v44;
        if (v41 == v44)
          v41 = 0;
        v43 |= v45;
        v46 = *(_QWORD *)(v23 + 8 * v41);
      }
      while (v46 == -1);
      v42 = __clz(__rbit64(~v46)) + (v41 << 6);
    }
    *(_QWORD *)(v23 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
    v38((char *)(*(_QWORD *)(v20 + 48) + v42 * v33), v59, v15);
    result = sub_23E1E2FDC(v60, *(_QWORD *)(v20 + 56) + v42 * v35, v61);
    ++*(_QWORD *)(v20 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v51;
    v21 = v57;
    v22 = v58;
    if (!a3)
      return v20;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StaticServiceGroup()
{
  uint64_t result;

  result = qword_254334950;
  if (!qword_254334950)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StaticMediaSystem()
{
  uint64_t result;

  result = qword_254334790;
  if (!qword_254334790)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StaticActionSet()
{
  uint64_t result;

  result = qword_254334640;
  if (!qword_254334640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (uint64_t *)(a2 + v8);
  v13 = *v11;
  v12 = v11[1];
  LOBYTE(v11) = *(_BYTE *)(a2 + v9);
  *v10 = v13;
  v10[1] = v12;
  *(_BYTE *)(a1 + v9) = (_BYTE)v11;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  swift_bridgeObjectRetain();
  v7(v15, v16, v6);
  v17 = a3[8];
  v18 = a3[9];
  v19 = a1 + v17;
  v20 = a2 + v17;
  v21 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = v21;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  v22 = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 24);
  *(_QWORD *)(v19 + 32) = v22;
  *(_BYTE *)(v19 + 40) = *(_BYTE *)(v20 + 40);
  v23 = *(_QWORD *)(v20 + 56);
  *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
  *(_QWORD *)(v19 + 56) = v23;
  *(_BYTE *)(v19 + 64) = *(_BYTE *)(v20 + 64);
  v24 = *(_QWORD *)(v20 + 80);
  *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
  *(_QWORD *)(v19 + 80) = v24;
  *(_BYTE *)(v19 + 88) = *(_BYTE *)(v20 + 88);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v25 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for StaticRoom(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v30(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (uint64_t *)(a2 + v7);
  v11 = *v10;
  v12 = v10[1];
  LOBYTE(v10) = *(_BYTE *)(a2 + v8);
  *v9 = v11;
  v9[1] = v12;
  *(_BYTE *)(a1 + v8) = (_BYTE)v10;
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for StaticZone();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v30((uint64_t)v14, (uint64_t)v15, v6);
    v20 = *(int *)(v16 + 20);
    v21 = &v14[v20];
    v22 = &v15[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    *(_QWORD *)&v14[*(int *)(v16 + 24)] = *(_QWORD *)&v15[*(int *)(v16 + 24)];
    v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v14, 0, 1, v16);
  }
  v30(a1 + a3[8], a2 + a3[8], v6);
  v25 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v28 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StaticActionSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 28), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E1EE1C4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24264FDE4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E1EE204(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23E536F80();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E1EE244(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24264FDE4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E1EE284(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, &qword_256D3F238);
}

uint64_t sub_23E1EE298(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_256D3F240);
}

uint64_t sub_23E1EE2AC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_2543326A8);
}

uint64_t sub_23E1EE2C0(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, type metadata accessor for StaticAccessory, &qword_2543333C8);
}

uint64_t sub_23E1EE2D4(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_2543333B8);
}

uint64_t destroy for StaticDeviceMetadata(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E1EE360(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD v7[4];

  if (*(_QWORD *)(a1 + 24) == 1)
  {
    sub_23E1E7C64(a1, &qword_256D3F218);
    sub_23E2DA12C((uint64_t)a2, v7);

    return sub_23E1E7C64((uint64_t)v7, &qword_256D3F218);
  }
  else
  {
    sub_23E1E4E3C(a1, (uint64_t)v7, &qword_254332260);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E1EE424((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
}

id sub_23E1EE424(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id result;
  unint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_23E1EE554((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
        return (id)sub_23E223248(a1, v15[7] + 32 * v9, &qword_254332260);
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_23E21DC50();
      goto LABEL_7;
    }
    sub_23E1EFD84(v12, a3 & 1);
    v17 = sub_23E1EE554((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        return (id)sub_23E223248(a1, v15[7] + 32 * v9, &qword_254332260);
LABEL_11:
      sub_23E1EE69C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  result = (id)sub_23E5383C0();
  __break(1u);
  return result;
}

unint64_t sub_23E1EE554(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E537C4C();
  return sub_23E1EE584(a1, v2);
}

unint64_t sub_23E1EE584(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_23E537C58();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_23E537C58();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_23E1EE69C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_23E1E4E3C(a3, a4[7] + 32 * a1, &qword_254332260);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t initializeWithCopy for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, int *);
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const void *v60;
  unsigned int (*v61)(const void *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int EnumCaseMultiPayload;
  int *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t updated;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  unsigned int (*v109)(const void *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*__dst)(uint64_t, uint64_t, uint64_t);
  char *__dsta;
  uint64_t v115;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v9);
  v12 = (_QWORD *)(a2 + v9);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = (_QWORD *)(a1 + v10);
  v15 = (_QWORD *)(a2 + v10);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  v111 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
  }
  else
  {
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v17 = a3[7];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for StaticDeviceMetadata();
  v21 = *((_QWORD *)v20 - 1);
  __dst = v8;
  v115 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v18, (uint64_t)v19, v6);
    v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v20[6];
    v28 = &v18[v27];
    v29 = &v19[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = v20[7];
    v32 = &v18[v31];
    v33 = &v19[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = v20[8];
    v36 = &v18[v35];
    v37 = &v19[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v18[v20[9]] = v19[v20[9]];
    v18[v20[10]] = v19[v20[10]];
    v18[v20[11]] = v19[v20[11]];
    v39 = *(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = v115;
    swift_bridgeObjectRetain();
    v8 = __dst;
    swift_bridgeObjectRetain();
    v39(v18, 0, 1, v20);
  }
  v40 = a3[8];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = sub_23E536F20();
  v44 = *(_QWORD *)(v43 - 8);
  v109 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48);
  v110 = v43;
  v108 = v44;
  if (v109(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v46 = a3[9];
  v47 = a3[10];
  v48 = a1 + v46;
  v49 = a2 + v46;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v50 = *(_BYTE *)(a2 + v47);
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(_BYTE *)(a1 + v47) = v50;
  v8(a1 + a3[11], a2 + a3[11], v6);
  v51 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  v57 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  v58 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v59 = (void *)(a1 + v58);
  v60 = (const void *)(a2 + v58);
  v61 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61(v60, 1, v115))
  {
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    __dst((uint64_t)v59, (uint64_t)v60, v115);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v59, 0, 1, v115);
  }
  v63 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v64 = (_QWORD *)(a1 + v63);
  v65 = (_QWORD *)(a2 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = a3[25];
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[26];
  v69 = (char *)(a1 + v68);
  v70 = (char *)(a2 + v68);
  v71 = type metadata accessor for StaticSoftwareUpdate(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v73(v70, 1, v71))
  {
    __dst((uint64_t)v69, (uint64_t)v70, v115);
    v75 = *(int *)(v71 + 20);
    v76 = &v69[v75];
    v77 = &v70[v75];
    v78 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v89 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v89;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v91 = *(int *)(updated + 20);
      v112 = updated;
      __dsta = &v76[v91];
      v92 = &v77[v91];
      swift_bridgeObjectRetain();
      if (v109(v92, 1, v110))
      {
LABEL_22:
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dsta, v92, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
LABEL_25:
        v97 = *(int *)(v112 + 24);
        v98 = &v76[v97];
        v99 = &v77[v97];
        v100 = *((_QWORD *)v99 + 1);
        *(_QWORD *)v98 = *(_QWORD *)v99;
        *((_QWORD *)v98 + 1) = v100;
        v101 = *(int *)(v112 + 28);
        v102 = &v76[v101];
        v103 = &v77[v101];
        v104 = *((_QWORD *)v103 + 1);
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *((_QWORD *)v102 + 1) = v104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v76[*(int *)(v105 + 48)] = v77[*(int *)(v105 + 48)];
        goto LABEL_26;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_27:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
          goto LABEL_28;
        }
        __dst((uint64_t)v76, (uint64_t)v77, v115);
        v80 = (int *)type metadata accessor for StaticHH2Update(0);
        v76[v80[5]] = v77[v80[5]];
        v81 = v80[6];
        v82 = &v76[v81];
        v83 = &v77[v81];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        *(_QWORD *)v82 = v85;
        *((_QWORD *)v82 + 1) = v84;
        v86 = v80[7];
        v87 = &v76[v86];
        v88 = &v77[v86];
        v87[8] = v88[8];
        *(_QWORD *)v87 = *(_QWORD *)v88;
        swift_bridgeObjectRetain();
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      v93 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v93;
      v94 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v95 = *(int *)(v94 + 20);
      v112 = v94;
      __dsta = &v76[v95];
      v92 = &v77[v95];
      swift_bridgeObjectRetain();
      if (v109(v92, 1, v110))
        goto LABEL_22;
    }
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(__dsta, v92, v110);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(__dsta, 0, 1, v110);
    goto LABEL_25;
  }
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_28:
  v106 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + v106) = *(_BYTE *)(a2 + v106);
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, int *);
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  unsigned int (*v64)(const void *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  int *v78;
  unsigned int (*v79)(const void *, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int EnumCaseMultiPayload;
  char *v85;
  int *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  const void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *updated;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int (*v140)(const void *, uint64_t, uint64_t);
  uint64_t v141;
  int *v142;
  unsigned int (*v143)(const void *, uint64_t, uint64_t);
  char *__dst;
  void (*v145)(void *, const void *, uint64_t);
  uint64_t v146;
  uint64_t v147;

  v6 = sub_23E536F80();
  v146 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  swift_bridgeObjectRetain();
  v7(v15, v16, v6);
  v17 = a3[11];
  v18 = a3[12];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = (char *)(a1 + v18);
  v22 = (char *)(a2 + v18);
  v23 = (int *)type metadata accessor for StaticDeviceMetadata();
  v24 = *((_QWORD *)v23 - 1);
  v147 = v6;
  v145 = (void (*)(void *, const void *, uint64_t))v7;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v26 = v23[5];
    v27 = &v21[v26];
    v28 = &v22[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = v23[6];
    v31 = &v21[v30];
    v32 = &v22[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v23[7];
    v35 = &v21[v34];
    v36 = &v22[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v23[8];
    v39 = &v21[v38];
    v40 = &v22[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v21[v23[9]] = v22[v23[9]];
    v21[v23[10]] = v22[v23[10]];
    v21[v23[11]] = v22[v23[11]];
    v42 = *(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = v147;
    swift_bridgeObjectRetain();
    v42(v21, 0, 1, v23);
  }
  v43 = a3[13];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  v46 = sub_23E536F20();
  v47 = *(_QWORD *)(v46 - 8);
  v140 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48);
  v141 = v46;
  v139 = v47;
  if (v140(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v49 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  v53 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = a3[20];
  v56 = a3[21];
  v57 = (_QWORD *)(a1 + v55);
  v58 = (_QWORD *)(a2 + v55);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  v60 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v60) = *(_BYTE *)(a2 + v60);
  v61 = a3[24];
  v62 = (void *)(a1 + v61);
  v63 = (const void *)(a2 + v61);
  v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v146 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v143 = v64;
  if (v64(v63, 1, v6))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v145(v62, v63, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v62, 0, 1, v6);
  }
  v66 = a3[26];
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  *(_QWORD *)(a1 + v66) = *(_QWORD *)(a2 + v66);
  v67 = a3[27];
  v68 = a3[28];
  v142 = a3;
  v69 = (_QWORD *)(a1 + v67);
  v70 = (_QWORD *)(a2 + v67);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  __dst = (char *)(a1 + v68);
  v72 = (char *)(a2 + v68);
  v73 = type metadata accessor for StaticSoftwareUpdate(0);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75(v72, 1, v73))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(__dst, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    v77 = v147;
    v78 = v142;
    v79 = v143;
    goto LABEL_28;
  }
  v137 = v74;
  v145(__dst, v72, v147);
  v80 = *(int *)(v73 + 20);
  v81 = &__dst[v80];
  v82 = &v72[v80];
  v83 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v138 = v73;
  if (EnumCaseMultiPayload == 2)
  {
    v85 = __dst;
    v95 = *((_QWORD *)v82 + 1);
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *((_QWORD *)v81 + 1) = v95;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v96 = updated[5];
    v97 = &v81[v96];
    v98 = &v82[v96];
    swift_bridgeObjectRetain();
    if (v140(v98, 1, v141))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v97, v98, v141);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v97, 0, 1, v141);
    }
    v78 = v142;
    v79 = v143;
    v105 = updated[6];
    v106 = &v81[v105];
    v107 = &v82[v105];
    v108 = *((_QWORD *)v107 + 1);
    *(_QWORD *)v106 = *(_QWORD *)v107;
    *((_QWORD *)v106 + 1) = v108;
    v109 = updated[7];
    v110 = &v81[v109];
    v111 = &v82[v109];
    v112 = *((_QWORD *)v111 + 1);
    *(_QWORD *)v110 = *(_QWORD *)v111;
    *((_QWORD *)v110 + 1) = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
    v81[*(int *)(v113 + 48)] = v82[*(int *)(v113 + 48)];
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v85 = __dst;
      v78 = v142;
      if (EnumCaseMultiPayload)
      {
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        v77 = v147;
      }
      else
      {
        v77 = v147;
        v145(v81, v82, v147);
        v86 = (int *)type metadata accessor for StaticHH2Update(0);
        v81[v86[5]] = v82[v86[5]];
        v87 = v86[6];
        v88 = &v81[v87];
        v89 = &v82[v87];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        *(_QWORD *)v88 = v91;
        *((_QWORD *)v88 + 1) = v90;
        v92 = v86[7];
        v93 = &v81[v92];
        v94 = &v82[v92];
        v93[8] = v94[8];
        *(_QWORD *)v93 = *(_QWORD *)v94;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      v79 = v143;
      goto LABEL_27;
    }
    v85 = __dst;
    v100 = *((_QWORD *)v82 + 1);
    *(_QWORD *)v81 = *(_QWORD *)v82;
    *((_QWORD *)v81 + 1) = v100;
    v136 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v101 = v136[5];
    v102 = &v81[v101];
    v103 = &v82[v101];
    swift_bridgeObjectRetain();
    v78 = v142;
    if (v140(v103, 1, v141))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v102, v103, v141);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v102, 0, 1, v141);
    }
    v79 = v143;
    v114 = v136[6];
    v115 = &v81[v114];
    v116 = &v82[v114];
    v117 = *((_QWORD *)v116 + 1);
    *(_QWORD *)v115 = *(_QWORD *)v116;
    *((_QWORD *)v115 + 1) = v117;
    v118 = v136[7];
    v119 = &v81[v118];
    v120 = &v82[v118];
    v121 = *((_QWORD *)v120 + 1);
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *((_QWORD *)v119 + 1) = v121;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
    v81[*(int *)(v122 + 48)] = v82[*(int *)(v122 + 48)];
  }
  swift_storeEnumTagMultiPayload();
  v77 = v147;
LABEL_27:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v85, 0, 1, v138);
LABEL_28:
  v123 = v78[30];
  *(_BYTE *)(a1 + v78[29]) = *(_BYTE *)(a2 + v78[29]);
  *(_QWORD *)(a1 + v123) = *(_QWORD *)(a2 + v123);
  v124 = v78[31];
  v125 = (void *)(a1 + v124);
  v126 = (const void *)(a2 + v124);
  swift_bridgeObjectRetain();
  if (v79(v126, 1, v77))
  {
    v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
  }
  else
  {
    v145(v125, v126, v77);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v125, 0, 1, v77);
  }
  v128 = v78[32];
  v129 = v78[33];
  v130 = a1 + v128;
  v131 = a2 + v128;
  *(_WORD *)v130 = *(_WORD *)v131;
  *(_BYTE *)(v130 + 2) = *(_BYTE *)(v131 + 2);
  v132 = a1 + v129;
  v133 = a2 + v129;
  *(_QWORD *)v132 = *(_QWORD *)v133;
  *(_DWORD *)(v132 + 7) = *(_DWORD *)(v133 + 7);
  return a1;
}

uint64_t storeEnumTagSinglePayload for StaticDeviceMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for StaticService(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v21 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v21(a1, v4);
  swift_bridgeObjectRelease();
  v21(a1 + a2[10], v4);
  v6 = a1 + a2[12];
  v7 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v21(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = a1 + a2[13];
  v9 = sub_23E536F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[24];
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v13(v12, 1, v4))
    v21(v12, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = a1 + a2[28];
  v15 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v21(v14, v4);
    v16 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v11(v18, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_16;
      v21(v16, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v19 = a1 + a2[31];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v19, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(v19, v4);
  return result;
}

uint64_t type metadata accessor for StaticSoftwareUpdate.Kind(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_2543349F8);
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for StaticDeviceMetadata()
{
  uint64_t result;

  result = qword_254333C20;
  if (!qword_254333C20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for StaticSoftwareUpdate(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_254334AA0);
}

uint64_t getEnumTagSinglePayload for StaticDeviceMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t destroy for StaticAccessory(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6(v7, v4);
  else
    swift_bridgeObjectRelease();
  v8 = a1 + a2[7];
  v9 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = a1 + a2[8];
  v11 = sub_23E536F20();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v6(a1 + a2[11], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = a1 + a2[21];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    v6(v14, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1 + a2[26];
  v16 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v6(v15, v4);
    v17 = v15 + *(int *)(v16 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v19 = v17 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v13(v19, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v19, v11);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      v6(v17, v4);
      type metadata accessor for StaticHH2Update(0);
LABEL_18:
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for StaticAccessory.DeviceIdentifier(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_2543344A0);
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23E1EFD84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _BYTE v35[32];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F210);
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = *(_QWORD *)(v5 + 56) + 32 * v17;
    if ((a2 & 1) != 0)
    {
      sub_23E1E4E3C(v23, (uint64_t)v35, &qword_254332260);
    }
    else
    {
      sub_23E1E7C20(v23, (uint64_t)v35, &qword_254332260);
      v24 = v22;
    }
    result = sub_23E537C4C();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = sub_23E1E4E3C((uint64_t)v35, *(_QWORD *)(v7 + 56) + 32 * v15, &qword_254332260);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *HMService.subscript.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v1 = objc_msgSend(v0, sel_characteristics);
  sub_23E1E99C8();
  v2 = sub_23E5377F0();

  if (v2 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E53803C())
  {
    v4 = 4;
    while (1)
    {
      v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_characteristicType);
      v9 = sub_23E53755C();
      v11 = v10;

      v12._countAndFlagsBits = v9;
      v12._object = v11;
      LOBYTE(v13) = CharacteristicKind.init(rawValue:)(v12);
      v14 = CharacteristicKind.rawValue.getter(v13);
      v16 = v15;
      if (v14 == CharacteristicKind.rawValue.getter(v14) && v16 == v17)
      {
        swift_bridgeObjectRelease_n();
LABEL_14:
        swift_bridgeObjectRelease_n();
        return v6;
      }
      v18 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
        goto LABEL_14;

      ++v4;
      if (v7 == v3)
        goto LABEL_12;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_23E1F0250(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51F624(a1, a2, a3, a4, &qword_254333440, &qword_254333260);
}

uint64_t _s8IntervalVMa(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_254333CF8);
}

_QWORD *_s11IntervalKeyVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t initializeWithCopy for StaticHome(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int *v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, int *);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *__dst;
  char *__dsta;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v68 = a1;
  v13 = a1 + v9;
  v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v69 = (void (*)(char *, char *, uint64_t))v7;
  v70 = v6;
  v7(v13, v14, v6);
  v15 = (int *)type metadata accessor for StaticRoom(0);
  v16 = v15[5];
  v17 = (_QWORD *)(v13 + v16);
  v18 = (_QWORD *)(v14 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_BYTE *)(v13 + v15[6]) = *(_BYTE *)(v14 + v15[6]);
  v20 = v15[7];
  __dst = (char *)(v13 + v20);
  v21 = (char *)(v14 + v20);
  v22 = type metadata accessor for StaticZone();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v69(__dst, v21, v70);
    v26 = *(int *)(v22 + 20);
    v27 = &__dst[v26];
    v28 = &v21[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    *(_QWORD *)&__dst[*(int *)(v22 + 24)] = *(_QWORD *)&v21[*(int *)(v22 + 24)];
    v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(__dst, 0, 1, v22);
  }
  v69((char *)(v13 + v15[8]), (char *)(v14 + v15[8]), v70);
  *(_QWORD *)(v13 + v15[9]) = *(_QWORD *)(v14 + v15[9]);
  *(_QWORD *)(v13 + v15[10]) = *(_QWORD *)(v14 + v15[10]);
  *(_QWORD *)(v13 + v15[11]) = *(_QWORD *)(v14 + v15[11]);
  *(_QWORD *)(v13 + v15[12]) = *(_QWORD *)(v14 + v15[12]);
  *(_QWORD *)(v13 + v15[13]) = *(_QWORD *)(v14 + v15[13]);
  *(_QWORD *)(v13 + v15[14]) = *(_QWORD *)(v14 + v15[14]);
  *(_QWORD *)(v13 + v15[15]) = *(_QWORD *)(v14 + v15[15]);
  *(_QWORD *)(v13 + v15[16]) = *(_QWORD *)(v14 + v15[16]);
  *(_QWORD *)(v13 + v15[17]) = *(_QWORD *)(v14 + v15[17]);
  v31 = a3[7];
  v32 = (char *)(v68 + v31);
  v33 = (char *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69(v32, v33, v70);
  v34 = (int *)type metadata accessor for StaticUser();
  v35 = v34[5];
  v36 = &v32[v35];
  v37 = &v33[v35];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  v39 = v34[6];
  v40 = &v32[v39];
  v41 = &v33[v39];
  swift_bridgeObjectRetain();
  v69(v40, v41, v70);
  v32[v34[7]] = v33[v34[7]];
  v42 = a3[9];
  *(_BYTE *)(v68 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(v68 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[11];
  *(_BYTE *)(v68 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(v68 + v43) = *(_QWORD *)(a2 + v43);
  v44 = a3[13];
  *(_QWORD *)(v68 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(v68 + v44) = *(_QWORD *)(a2 + v44);
  v45 = a3[15];
  *(_QWORD *)(v68 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(v68 + v45) = *(_QWORD *)(a2 + v45);
  v46 = a3[17];
  *(_QWORD *)(v68 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_BYTE *)(v68 + v46) = *(_BYTE *)(a2 + v46);
  v47 = a3[19];
  *(_QWORD *)(v68 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  v48 = a3[20];
  __dsta = (char *)(v68 + v48);
  v49 = (char *)(a2 + v48);
  *(_BYTE *)(v68 + v47) = *(_BYTE *)(a2 + v47);
  v50 = (int *)type metadata accessor for StaticResident();
  v51 = *((_QWORD *)v50 - 1);
  v52 = *(unsigned int (**)(char *, uint64_t, int *))(v51 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52(v49, 1, v50))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(__dsta, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v69(__dsta, v49, v70);
    v54 = v50[5];
    v55 = &__dsta[v54];
    v56 = &v49[v54];
    v57 = *((_QWORD *)v56 + 1);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = v57;
    v58 = v50[6];
    v59 = &__dsta[v58];
    v60 = &v49[v58];
    v61 = *((_QWORD *)v60 + 1);
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *((_QWORD *)v59 + 1) = v61;
    *(_QWORD *)&__dsta[v50[7]] = *(_QWORD *)&v49[v50[7]];
    *(_QWORD *)&__dsta[v50[8]] = *(_QWORD *)&v49[v50[8]];
    *(_WORD *)&__dsta[v50[9]] = *(_WORD *)&v49[v50[9]];
    v62 = v50[10];
    v63 = &__dsta[v62];
    v64 = &v49[v62];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(v63, v64, v70);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v51 + 56))(__dsta, 0, 1, v50);
  }
  return v68;
}

char *sub_23E1F07E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23E537FAC();
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v17);
  return a1;
}

uint64_t type metadata accessor for PhoenixMetricsAggregator.IntervalKey(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_254333CC8);
}

_QWORD *assignWithTake for StateSnapshot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, int *);
  int v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  _QWORD *v76;
  void (*v77)(uint64_t, char *, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v75 = a3;
  v76 = a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v71 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v71 + 40);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for StaticHome();
  v12 = v11[5];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = v11[6];
  v18 = &v7[v17];
  v72 = v8;
  v19 = &v8[v17];
  v74 = v9;
  v77 = (void (*)(uint64_t, char *, uint64_t))v10;
  v10(&v7[v17], &v8[v17], v9);
  v20 = (int *)type metadata accessor for StaticRoom(0);
  v21 = v20[5];
  v22 = &v18[v21];
  v23 = &v19[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v18[v20[6]] = v19[v20[6]];
  v26 = v20[7];
  v27 = (uint64_t)&v18[v26];
  v28 = &v19[v26];
  v29 = type metadata accessor for StaticZone();
  v70 = *(_QWORD *)(v29 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  v73 = v27;
  LODWORD(v27) = v30(v27, 1, v29);
  v31 = v30((uint64_t)v28, 1, v29);
  if ((_DWORD)v27)
  {
    if (v31)
    {
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v33 = (void *)v73;
LABEL_6:
      memcpy(v33, v28, v32);
      v34 = v74;
      goto LABEL_9;
    }
    v34 = v74;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v73, v28, v74);
    *(_OWORD *)(v73 + *(int *)(v29 + 20)) = *(_OWORD *)&v28[*(int *)(v29 + 20)];
    *(_QWORD *)(v73 + *(int *)(v29 + 24)) = *(_QWORD *)&v28[*(int *)(v29 + 24)];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v73, 0, 1, v29);
  }
  else
  {
    if (v31)
    {
      sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v33 = (void *)v73;
      goto LABEL_6;
    }
    v34 = v74;
    v77(v73, v28, v74);
    v35 = *(int *)(v29 + 20);
    v36 = (_QWORD *)(v73 + v35);
    v37 = &v28[v35];
    v39 = *(_QWORD *)v37;
    v38 = *((_QWORD *)v37 + 1);
    *v36 = v39;
    v36[1] = v38;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v73 + *(int *)(v29 + 24)) = *(_QWORD *)&v28[*(int *)(v29 + 24)];
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v77((uint64_t)&v18[v20[8]], &v19[v20[8]], v34);
  *(_QWORD *)&v18[v20[9]] = *(_QWORD *)&v19[v20[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[10]] = *(_QWORD *)&v19[v20[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[11]] = *(_QWORD *)&v19[v20[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[12]] = *(_QWORD *)&v19[v20[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[13]] = *(_QWORD *)&v19[v20[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[14]] = *(_QWORD *)&v19[v20[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[15]] = *(_QWORD *)&v19[v20[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[16]] = *(_QWORD *)&v19[v20[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
  swift_bridgeObjectRelease();
  v40 = v11[7];
  v41 = &v7[v40];
  v42 = &v72[v40];
  v77((uint64_t)&v7[v40], &v72[v40], v34);
  v43 = v34;
  v44 = (int *)type metadata accessor for StaticUser();
  v45 = v44[5];
  v46 = &v41[v45];
  v47 = (uint64_t *)&v42[v45];
  v49 = *v47;
  v48 = v47[1];
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  v77((uint64_t)&v41[v44[6]], &v42[v44[6]], v43);
  v41[v44[7]] = v42[v44[7]];
  v7[v11[8]] = v72[v11[8]];
  v7[v11[9]] = v72[v11[9]];
  v7[v11[10]] = v72[v11[10]];
  *(_QWORD *)&v7[v11[11]] = *(_QWORD *)&v72[v11[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[12]] = *(_QWORD *)&v72[v11[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[13]] = *(_QWORD *)&v72[v11[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[14]] = *(_QWORD *)&v72[v11[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[15]] = *(_QWORD *)&v72[v11[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v11[16]] = *(_QWORD *)&v72[v11[16]];
  swift_bridgeObjectRelease();
  v7[v11[17]] = v72[v11[17]];
  *(_QWORD *)&v7[v11[18]] = *(_QWORD *)&v72[v11[18]];
  swift_bridgeObjectRelease();
  v7[v11[19]] = v72[v11[19]];
  v50 = v11[20];
  v51 = &v7[v50];
  v52 = &v72[v50];
  v53 = (int *)type metadata accessor for StaticResident();
  v54 = *((_QWORD *)v53 - 1);
  v55 = *(uint64_t (**)(char *, uint64_t, int *))(v54 + 48);
  LODWORD(v41) = v55(v51, 1, v53);
  v56 = v55(v52, 1, v53);
  if (!(_DWORD)v41)
  {
    if (!v56)
    {
      v77((uint64_t)v51, v52, v43);
      v60 = v53[5];
      v61 = &v51[v60];
      v62 = &v52[v60];
      v64 = *(_QWORD *)v62;
      v63 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = v64;
      *((_QWORD *)v61 + 1) = v63;
      swift_bridgeObjectRelease();
      v65 = v53[6];
      v66 = &v51[v65];
      v67 = &v52[v65];
      v69 = *(_QWORD *)v67;
      v68 = *((_QWORD *)v67 + 1);
      *(_QWORD *)v66 = v69;
      *((_QWORD *)v66 + 1) = v68;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v51[v53[7]] = *(_QWORD *)&v52[v53[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v51[v53[8]] = *(_QWORD *)&v52[v53[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v51[v53[9]] = *(_WORD *)&v52[v53[9]];
      v77((uint64_t)&v51[v53[10]], &v52[v53[10]], v43);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v56)
  {
LABEL_14:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_15;
  }
  v57 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  v57(v51, v52, v43);
  *(_OWORD *)&v51[v53[5]] = *(_OWORD *)&v52[v53[5]];
  *(_OWORD *)&v51[v53[6]] = *(_OWORD *)&v52[v53[6]];
  *(_QWORD *)&v51[v53[7]] = *(_QWORD *)&v52[v53[7]];
  *(_QWORD *)&v51[v53[8]] = *(_QWORD *)&v52[v53[8]];
  *(_WORD *)&v51[v53[9]] = *(_WORD *)&v52[v53[9]];
  v57(&v51[v53[10]], &v52[v53[10]], v43);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
LABEL_15:
  *(_QWORD *)((char *)a1 + v75[6]) = *(_QWORD *)((char *)v76 + v75[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[7]) = *(_QWORD *)((char *)v76 + v75[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[8]) = *(_QWORD *)((char *)v76 + v75[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[9]) = *(_QWORD *)((char *)v76 + v75[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[10]) = *(_QWORD *)((char *)v76 + v75[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[11]) = *(_QWORD *)((char *)v76 + v75[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[12]) = *(_QWORD *)((char *)v76 + v75[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[13]) = *(_QWORD *)((char *)v76 + v75[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[14]) = *(_QWORD *)((char *)v76 + v75[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[15]) = *(_QWORD *)((char *)v76 + v75[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[16]) = *(_QWORD *)((char *)v76 + v75[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[17]) = *(_QWORD *)((char *)v76 + v75[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[18]) = *(_QWORD *)((char *)v76 + v75[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v75[19]) = *(_QWORD *)((char *)v76 + v75[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for StaticHome(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  void (*v14)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v14(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + a2[6];
  v14(v5, v4);
  v6 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v7 = v5 + *(int *)(v6 + 28);
  v8 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v14(v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14(v5 + *(int *)(v6 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[7];
  v14(v9, v4);
  v10 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v14(v9 + *(int *)(v10 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1 + a2[20];
  v12 = type metadata accessor for StaticResident();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  if (!(_DWORD)result)
  {
    v14(v11, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v11 + *(int *)(v12 + 40), v4);
  }
  return result;
}

void *sub_23E1F1310()
{
  return sub_23E21D6B4(type metadata accessor for StaticAccessory, &qword_2543333C8);
}

uint64_t sub_23E1F1324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E2679FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, a2);
}

uint64_t initializeWithCopy for StaticDeviceMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t StaticCharacteristic.intValue.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  result = *v1;
  switch(*((_BYTE *)v1 + 16))
  {
    case 1:
      result = *v1;
      break;
    case 2:
      result = (unsigned __int16)*v1;
      break;
    case 3:
      result = *v1;
      break;
    case 4:
      if (result < 0)
        __break(1u);
      break;
    case 5:
    case 6:
      result = (int)result;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t StaticCharacteristic.floatValue.getter()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  if (v1[16] == 7)
    return *(_QWORD *)v1;
  else
    return 0;
}

void sub_23E1F14E8(id *a1)
{
  uint64_t v1;

  sub_23E1E1E54(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t getEnumTagSinglePayload for StaticMediaProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for StaticMediaProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for StaticRoom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5(a1 + *(int *)(a2 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_23E1F1650()
{
  unint64_t v0;

  sub_23E2075CC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for CoordinationSnapshot.UpdateType()
{
  uint64_t result;

  result = qword_2543329E0;
  if (!qword_2543329E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24264FDCC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23E1F17A0()
{
  uint64_t v0;

  return sub_23E1F17B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E1F17B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a2, (uint64_t)v6, v7);
  v8 = a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_23E1F186C((uint64_t)v6, v8);
  return swift_endAccess();
}

uint64_t sub_23E1F186C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CoordinationManagerObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CoordinationManagerObject);
}

void sub_23E1F18BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E1F1C1C(319, qword_254333C30, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
      {
        sub_23E1F1C1C(319, (unint64_t *)&qword_254333DB0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
        if (v3 <= 0x3F)
        {
          sub_23E1F1C1C(319, &qword_254334AD8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23E1F1A78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticAccessory.DeviceIdentifier(319);
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, qword_254333C30, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
      if (v2 <= 0x3F)
      {
        sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
        if (v3 <= 0x3F)
        {
          sub_23E1F1C1C(319, (unint64_t *)&qword_254333DB0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
          if (v4 <= 0x3F)
          {
            sub_23E1F1C1C(319, &qword_254334AD8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_23E1F1C1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23E537CC4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for CoordinationDataModel.Errors()
{
  return &type metadata for CoordinationDataModel.Errors;
}

uint64_t sub_23E1F1C78()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23E1F1C80()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, &qword_2543344D8, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (v2 <= 0x3F)
      {
        sub_23E1F1C1C(319, &qword_254334AD8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for StaticMediaProfile()
{
  uint64_t result;

  result = qword_254334870;
  if (!qword_254334870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E1F1E18()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 584) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E1F1E78()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 576) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E1F1EC4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 568) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E1F1F24()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E1F1F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[26] = a4;
  v5[27] = v4;
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v6 = sub_23E537154();
  v5[28] = v6;
  v5[29] = *(_QWORD *)(v6 - 8);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_2543331E0);
  v5[33] = swift_task_alloc();
  v7 = type metadata accessor for StateSnapshot(0);
  v5[34] = v7;
  v5[35] = *(_QWORD *)(v7 - 8);
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  v8 = sub_23E53710C();
  v5[39] = v8;
  v5[40] = *(_QWORD *)(v8 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5[50] = swift_task_alloc();
  v9 = sub_23E536F80();
  v5[51] = v9;
  v5[52] = *(_QWORD *)(v9 - 8);
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v5[57] = swift_task_alloc();
  v5[58] = swift_task_alloc();
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  v5[62] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E1F21E0()
{
  return 1;
}

ValueMetadata *type metadata accessor for ServiceKind()
{
  return &type metadata for ServiceKind;
}

unint64_t sub_23E1F21F8()
{
  unint64_t result;

  result = qword_2543331B0;
  if (!qword_2543331B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceKind, &type metadata for ServiceKind);
    atomic_store(result, (unint64_t *)&qword_2543331B0);
  }
  return result;
}

uint64_t sub_23E1F223C()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;

  type metadata accessor for SnapshotModerator();
  v0 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  v0[14] = sub_23E2073DC(MEMORY[0x24BEE4AF8]);
  v0[15] = sub_23E1F22D4(v1);
  v0[16] = sub_23E1F22D4(v1);
  v2 = (char *)v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  v3 = sub_23E536F80();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_254332718 = (uint64_t)v0;
  return result;
}

unint64_t sub_23E1F22D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C68);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_2543327A8);
    result = sub_23E1E3148((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E536F80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_23E1F2468()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;

  ObjectType = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel__currentStateSnapshot;
  v10 = qword_254332A90;
  v11 = v0;
  if (v10 != -1)
    swift_once();
  v29 = qword_254334BA8;
  swift_bridgeObjectRetain();
  sub_23E5371F0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v9], v8, v5);
  v12 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v11[v12] = sub_23E20DE2C(MEMORY[0x24BEE4AF8]);
  v14 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms;
  *(_QWORD *)&v11[v14] = sub_23E20E014(v13);
  v15 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers;
  *(_QWORD *)&v11[v15] = sub_23E20E028(v13);
  *(_QWORD *)&v11[OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome] = 0;
  v16 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  v18 = (void *)sub_23E537538();
  objc_msgSend(v17, sel_setName_, v18);

  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 1);
  *(_QWORD *)&v11[v16] = v17;

  v19 = (objc_class *)type metadata accessor for CoordinationDataModel();
  v28.receiver = v11;
  v28.super_class = v19;
  v20 = objc_msgSendSuper2(&v28, sel_init);
  v21 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_23E5378F8();
  v22 = v20;
  v23 = sub_23E5378EC();
  v24 = (_QWORD *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v22;
  v24[5] = ObjectType;
  sub_23E26D014((uint64_t)v4, (uint64_t)&unk_256D40C20, (uint64_t)v24);

  swift_release();
  return v22;
}

unint64_t sub_23E1F2714(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = sub_23E53806C();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v16, (uint64_t)v9, a2);
    result = sub_23E1E3148((uint64_t)v9);
    if ((v19 & 1) != 0)
      break;
    v20 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = v11[6];
    v22 = sub_23E536F80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v9, v22);
    *(_QWORD *)(v11[7] + 8 * v20) = *(_QWORD *)&v9[v13];
    v23 = v11[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23E1F28A0(void (*a1)(char *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24[2];
  uint64_t v25;

  v25 = a6;
  v12 = *(_QWORD *)(a5 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = sub_23E29B29C(a6, a5, a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (void (*)(BOOL, uint64_t, uint64_t))sub_23E1F8FA4);
    swift_bridgeObjectRelease();
    v24[0] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E29E8C8(v24, a5, (void (*)(uint64_t))a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (uint64_t (*)(uint64_t))sub_23E1F2B68, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_23E53088C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v24[0];
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v15 = sub_23E1F2B90((unint64_t *)&v25, v14);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v25 + 16);
  if (v16 < v15)
  {
    __break(1u);
  }
  else
  {
    sub_23E1F2B54(v15, v16);
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23E29B654(v17, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (void (*)(BOOL, uint64_t, uint64_t))sub_23E1F8FA4);
    swift_bridgeObjectRelease();
    v24[0] = v18;
    swift_bridgeObjectRetain();
    sub_23E2A0728(v24, (uint64_t)a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (uint64_t (*)(uint64_t))sub_23E1F2B68, (uint64_t)sub_23E53088C, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29CE24);
    swift_bridgeObjectRelease();
    v19 = v24[0];
    swift_retain();
    v20 = sub_23E1F2B90((unint64_t *)&v25, v19);
    swift_release();
    v21 = *(_QWORD *)(v25 + 16);
    if (v21 >= v20)
    {
      sub_23E1F2B54(v20, v21);
      v24[0] = v25;
      swift_bridgeObjectRetain_n();
      sub_23E2A0728(v24, (uint64_t)a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (uint64_t (*)(uint64_t))sub_23E1F2B68, (uint64_t)sub_23E53088C, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29DD3C);
      swift_bridgeObjectRelease_n();
      v22 = v24[0];
      v24[0] = v14;
      sub_23E1F2B40(v19);
      sub_23E1F2B40(v22);
      return v24[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E1F2B40(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E205950, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E1F2B54(uint64_t a1, uint64_t a2)
{
  return sub_23E461138(a1, a2, (uint64_t (*)(void))sub_23E205950, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E1F2B68(_QWORD *a1)
{
  return sub_23E1F2B7C(0, a1[2], 0, a1);
}

uint64_t sub_23E1F2B7C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_254332C88, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E1F2B90(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = type metadata accessor for StaticHome();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v52 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t)&v52 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v52 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v52 - v14;
  v60 = a1;
  v16 = *a1;
  v57 = *(_QWORD *)(*a1 + 16);
  if (!v57)
    return 0;
  v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v55 = v16 + v17;
  v65 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(v13 + 72);
  v59 = a2 + v17;
  v56 = a2 + v17 + v18;
  swift_bridgeObjectRetain();
  v19 = 0;
  v64 = v18;
  v52 = a2 + v17 + 2 * v18;
  v61 = a2;
  v58 = v17;
  while (1)
  {
    if (!v65)
      goto LABEL_4;
    v20 = v55 + v64 * v19;
    sub_23E1E2F50(v59, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    swift_bridgeObjectRetain();
    v21 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v15, v20);
    sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    if ((v21 & 1) != 0)
      goto LABEL_15;
    if (v65 != 1)
      break;
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v19 == v57)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v16 + 16);
    }
  }
  sub_23E1E2F50(v56, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v22 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v15, v20);
  sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  if ((v22 & 1) != 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v28 = v61;
    result = swift_bridgeObjectRelease();
    v29 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_55;
    v30 = *(_QWORD *)(v16 + 16);
    if (v29 == v30)
      return v19;
    v31 = v58;
    v32 = v28 + v58 + 2 * v64;
    while (1)
    {
      if (v29 >= v30)
        goto LABEL_47;
      v33 = v16 + v31;
      v34 = v63;
      v35 = v29 * v64;
      sub_23E1E2F50(v33 + v29 * v64, v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v36 = v62;
      sub_23E1E2F50(v59, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      swift_bridgeObjectRetain();
      v37 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0(v36, v34);
      sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      if ((v37 & 1) != 0)
        break;
      if (v65 != 1)
      {
        v43 = v62;
        sub_23E1E2F50(v56, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v44 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0(v43, v63);
        sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if ((v44 & 1) != 0)
          break;
        if (v65 != 2)
        {
          v45 = v32;
          v46 = 2;
          do
          {
            v47 = v62;
            result = sub_23E1E2F50(v45, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
            v48 = v46 + 1;
            if (__OFADD__(v46, 1))
              goto LABEL_46;
            v49 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0(v47, v63);
            v50 = v47;
            v51 = v49;
            sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
            if ((v51 & 1) != 0)
              goto LABEL_20;
            ++v46;
            v45 += v64;
          }
          while (v48 != v65);
        }
      }
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v31 = v58;
      if (v19 != v29)
      {
        if ((v19 & 0x8000000000000000) != 0)
          goto LABEL_50;
        v38 = *v60;
        v39 = *(_QWORD *)(*v60 + 16);
        if (v19 >= v39)
          goto LABEL_51;
        v40 = v38 + v58;
        v41 = v19 * v64;
        result = sub_23E1E2F50(v38 + v58 + v19 * v64, v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if (v29 >= v39)
          goto LABEL_52;
        sub_23E1E2F50(v40 + v35, v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        result = swift_isUniquelyReferenced_nonNull_native();
        *v60 = v38;
        if ((result & 1) == 0)
        {
          result = sub_23E24AB04(v38);
          v38 = result;
          *v60 = result;
        }
        v31 = v58;
        if (v19 >= *(_QWORD *)(v38 + 16))
          goto LABEL_53;
        result = sub_23E1EA8B4(v54, v38 + v58 + v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if (v29 >= *(_QWORD *)(*v60 + 16))
          goto LABEL_54;
        result = sub_23E1EA8B4(v53, *v60 + v31 + v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      }
      v42 = __OFADD__(v19++, 1);
      if (v42)
        goto LABEL_49;
LABEL_32:
      v42 = __OFADD__(v29++, 1);
      if (v42)
        goto LABEL_48;
      v16 = *v60;
      v30 = *(_QWORD *)(*v60 + 16);
      if (v29 == v30)
        return v19;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    result = sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v31 = v58;
    goto LABEL_32;
  }
  if (v65 == 2)
    goto LABEL_3;
  v23 = v52;
  v24 = 2;
  while (1)
  {
    result = sub_23E1E2F50(v23, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v26 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    v27 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v15, v20);
    sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    if ((v27 & 1) != 0)
      goto LABEL_15;
    ++v24;
    v23 += v64;
    if (v26 == v65)
      goto LABEL_3;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

void sub_23E1F30E0(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t *v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  id v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  id v66;
  int v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  char v84;

  v80 = a2;
  v5 = sub_23E536F80();
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v77);
  v78 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v79 = (uint64_t)&v72 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)&v72 - v13;
  v14 = objc_msgSend(a1, sel_uniqueIdentifier);
  v74 = a3;
  sub_23E536F68();

  v15 = objc_msgSend(a1, sel_name);
  v16 = sub_23E53755C();
  v18 = v17;

  v19 = (int *)type metadata accessor for StaticHome();
  v20 = (uint64_t *)(a3 + v19[5]);
  *v20 = v16;
  v20[1] = v18;
  v21 = a1;
  v22 = objc_msgSend(v21, sel_roomForEntireHome);
  v23 = MEMORY[0x24BEE4AF8];
  v24 = sub_23E207388(MEMORY[0x24BEE4AF8]);
  v25 = sub_23E20736C(v23);
  v26 = sub_23E20D368(v23);
  v27 = sub_23E207334(v23);
  v28 = sub_23E207318(v23);
  v29 = sub_23E2072FC(v23);
  v30 = v23;
  v31 = v74;
  v32 = sub_23E2073C0(v30);
  sub_23E3CF9C0(v21, v22, v24, v25, v26, v27, v28, v29, v31 + v19[6], v32);
  v33 = objc_msgSend(v21, sel_currentUser);
  v34 = v31 + v19[7];
  v35 = v21;
  v36 = objc_msgSend(v33, sel_uniqueIdentifier);
  sub_23E536F68();

  v37 = objc_msgSend(v33, sel_name);
  v38 = sub_23E53755C();
  v40 = v39;

  v41 = type metadata accessor for StaticUser();
  v42 = (uint64_t *)(v34 + *(int *)(v41 + 20));
  *v42 = v38;
  v42[1] = v40;
  v43 = objc_msgSend(v35, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E417DB4(v35, (uint64_t)v33, &v84);
  *(_BYTE *)(v34 + *(int *)(v41 + 28)) = v84;
  v76 = v35;
  v44 = objc_msgSend(v35, sel_uniqueIdentifier);
  v45 = v75;
  sub_23E536F68();

  v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
  v47 = 1;
  v48 = (uint64_t)v45;
  v46(v45, 0, 1, v82);
  v49 = objc_msgSend(v80, sel_currentHome);
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend(v49, sel_uniqueIdentifier);

    v52 = v79;
    sub_23E536F68();

    v47 = 0;
  }
  else
  {
    v52 = v79;
  }
  v53 = v82;
  v46((char *)v52, v47, 1, v82);
  v54 = v78;
  v55 = v78 + *(int *)(v77 + 48);
  v56 = &qword_254333F50;
  sub_23E1E7C20(v48, v78, &qword_254333F50);
  sub_23E1E7C20(v52, v55, &qword_254333F50);
  v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  if (v57(v54, 1, v53) == 1)
  {
    sub_23E1E7C64(v52, &qword_254333F50);
    sub_23E1E7C64(v48, &qword_254333F50);
    if (v57(v55, 1, v82) == 1)
    {
      v58 = -1;
    }
    else
    {
      v56 = &qword_254332798;
      v58 = 0;
    }
  }
  else
  {
    v59 = v73;
    sub_23E1E7C20(v54, v73, &qword_254333F50);
    if (v57(v55, 1, v82) == 1)
    {
      sub_23E1E7C64(v52, &qword_254333F50);
      sub_23E1E7C64(v48, &qword_254333F50);
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v59, v82);
      v58 = 0;
      v56 = &qword_254332798;
    }
    else
    {
      v60 = v81;
      v61 = v48;
      v62 = v59;
      v63 = v72;
      v64 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v72, v55, v82);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v58 = sub_23E537514();
      v65 = *(void (**)(char *, uint64_t))(v60 + 8);
      v65(v63, v64);
      v56 = &qword_254333F50;
      sub_23E1E7C64(v79, &qword_254333F50);
      sub_23E1E7C64(v61, &qword_254333F50);
      v65((char *)v62, v64);
    }
  }
  sub_23E1E7C64(v54, v56);
  *(_BYTE *)(v31 + v19[8]) = v58 & 1;
  v66 = v76;
  sub_23E20B940(v66, (char *)&v83);
  v67 = v83;
  *(_BYTE *)(v31 + v19[9]) = v83;
  *(_BYTE *)(v31 + v19[10]) = ((v67 - 1) < 2) & ~v58;
  *(_QWORD *)(v31 + v19[11]) = sub_23E1ED91C(0xD000000000000023, 0x800000023E568A50);
  *(_QWORD *)(v31 + v19[12]) = HMHome.sectionsSortOrder.getter();
  *(_QWORD *)(v31 + v19[13]) = sub_23E1ED91C(0xD000000000000028, 0x800000023E568A80);
  *(_QWORD *)(v31 + v19[14]) = sub_23E1ED91C(0xD000000000000026, 0x800000023E568AB0);
  *(_QWORD *)(v31 + v19[15]) = sub_23E1ED91C(0xD000000000000025, 0x800000023E568AE0);
  v68 = sub_23E205B48();
  if (!v68)
  {
    v68 = sub_23E2061D8();
    if (!v68)
      v68 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(v31 + v19[16]) = v68;
  *(_BYTE *)(v31 + v19[17]) = objc_msgSend(v66, sel_isAutomaticSoftwareUpdateEnabled);
  *(_QWORD *)(v31 + v19[18]) = sub_23E38FBBC(v66);
  *(_BYTE *)(v31 + v19[19]) = objc_msgSend(v66, sel_supportsResidentSelection);
  v69 = v31 + v19[20];
  v70 = objc_msgSend(v66, sel_userSelectedPreferredResident);
  if (v70)
  {
    StaticResident.init(with:home:)(v70, v66, v69);
  }
  else
  {
    v71 = type metadata accessor for StaticResident();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v69, 1, 1, v71);
  }

}

uint64_t _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;

  v4 = type metadata accessor for StaticResident();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332470);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v46 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v47 = v7;
  v48 = v4;
  v49 = v10;
  v20 = (int *)type metadata accessor for StaticHome();
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_23E538354(), result = 0, (v26 & 1) != 0))
  {
    if ((_s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(a1 + v20[6], a2 + v20[6]) & 1) == 0)
      return 0;
    v28 = v20[7];
    v29 = a1 + v28;
    v30 = a2 + v28;
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      return 0;
    v31 = type metadata accessor for StaticUser();
    v32 = *(int *)(v31 + 20);
    v33 = *(_QWORD *)(v29 + v32);
    v34 = *(_QWORD *)(v29 + v32 + 8);
    v35 = (_QWORD *)(v30 + v32);
    v36 = v35[1];
    v25 = v33 == *v35;
    v46 = v31;
    if (v25 && v34 == v36)
      goto LABEL_24;
    v37 = sub_23E538354();
    result = 0;
    if ((v37 & 1) != 0)
    {
LABEL_24:
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || *(unsigned __int8 *)(v29 + *(int *)(v46 + 28)) != *(unsigned __int8 *)(v30 + *(int *)(v46 + 28))
        || *(unsigned __int8 *)(a1 + v20[8]) != *(unsigned __int8 *)(a2 + v20[8])
        || *(unsigned __int8 *)(a1 + v20[9]) != *(unsigned __int8 *)(a2 + v20[9])
        || *(unsigned __int8 *)(a1 + v20[10]) != *(unsigned __int8 *)(a2 + v20[10])
        || (sub_23E1F3D38(*(_QWORD *)(a1 + v20[11]), *(_QWORD *)(a2 + v20[11])) & 1) == 0
        || (sub_23E262DB8(*(_QWORD **)(a1 + v20[12]), *(_QWORD **)(a2 + v20[12])) & 1) == 0
        || (sub_23E1F3D38(*(_QWORD *)(a1 + v20[13]), *(_QWORD *)(a2 + v20[13])) & 1) == 0
        || (sub_23E1F3D38(*(_QWORD *)(a1 + v20[14]), *(_QWORD *)(a2 + v20[14])) & 1) == 0
        || (sub_23E1F3D38(*(_QWORD *)(a1 + v20[15]), *(_QWORD *)(a2 + v20[15])) & 1) == 0
        || (sub_23E1F3EBC(*(_QWORD *)(a1 + v20[16]), *(_QWORD *)(a2 + v20[16])) & 1) == 0
        || *(unsigned __int8 *)(a1 + v20[17]) != *(unsigned __int8 *)(a2 + v20[17]))
      {
        return 0;
      }
      v38 = v20[18];
      v39 = *(_QWORD *)(a2 + v38);
      if (*(_QWORD *)(a1 + v38))
      {
        if (!v39)
          return 0;
        swift_bridgeObjectRetain();
        v40 = swift_bridgeObjectRetain();
        LODWORD(v46) = sub_23E1F3D38(v40, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0)
          return 0;
      }
      else if (v39)
      {
        return 0;
      }
      if (*(unsigned __int8 *)(a1 + v20[19]) == *(unsigned __int8 *)(a2 + v20[19]))
      {
        sub_23E1E7C20(a1 + v20[20], (uint64_t)v19, &qword_254333BF0);
        sub_23E1E7C20(a2 + v20[20], (uint64_t)v17, &qword_254333BF0);
        v41 = (uint64_t)v49;
        v42 = (uint64_t)&v49[*(int *)(v8 + 48)];
        sub_23E1E7C20((uint64_t)v19, (uint64_t)v49, &qword_254333BF0);
        sub_23E1E7C20((uint64_t)v17, v42, &qword_254333BF0);
        v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v43(v41, 1, v48) == 1)
        {
          sub_23E1E7C64((uint64_t)v17, &qword_254333BF0);
          sub_23E1E7C64((uint64_t)v19, &qword_254333BF0);
          if (v43(v42, 1, v48) == 1)
          {
            sub_23E1E7C64((uint64_t)v49, &qword_254333BF0);
            return 1;
          }
          goto LABEL_38;
        }
        sub_23E1E7C20((uint64_t)v49, (uint64_t)v14, &qword_254333BF0);
        if (v43(v42, 1, v48) == 1)
        {
          sub_23E1E7C64((uint64_t)v17, &qword_254333BF0);
          sub_23E1E7C64((uint64_t)v19, &qword_254333BF0);
          sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
LABEL_38:
          sub_23E1E7C64((uint64_t)v49, &qword_254332470);
          return 0;
        }
        v44 = (uint64_t)v47;
        sub_23E1E2FDC(v42, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        v45 = _s13HomeDataModel14StaticResidentV2eeoiySbAC_ACtFZ_0((uint64_t)v14, v44);
        sub_23E1E2FA0(v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        sub_23E1E7C64((uint64_t)v17, &qword_254333BF0);
        sub_23E1E7C64((uint64_t)v19, &qword_254333BF0);
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        sub_23E1E7C64((uint64_t)v49, &qword_254333BF0);
        if ((v45 & 1) != 0)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E1F3D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_23E536F80();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v17 = sub_23E537514();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_23E1F3EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  BOOL v22;
  __int128 v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  char v29;

  v4 = type metadata accessor for ColorPickerFavorite();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_15:
    v20 = 0;
    return v20 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_23E1E2F50(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      sub_23E1E2F50(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      v15 = *((_QWORD *)v10 + 2);
      v16 = v10[24];
      v27 = *(_OWORD *)v10;
      v28 = v15;
      v29 = v16;
      v17 = *((_QWORD *)v7 + 2);
      v18 = v7[24];
      v24 = *(_OWORD *)v7;
      v25 = v17;
      v26 = v18;
      static LightbulbColor.== infix(_:_:)((uint64_t)&v27);
      if ((v19 & 1) == 0 || *((double *)v10 + 4) != *((double *)v7 + 4))
        break;
      v20 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      v22 = v14-- != 0;
      if ((v20 & 1) != 0)
      {
        v12 += v13;
        if (v22)
          continue;
      }
      return v20 & 1;
    }
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
    goto LABEL_15;
  }
  v20 = 1;
  return v20 & 1;
}

uint64_t type metadata accessor for ColorPickerFavorite()
{
  uint64_t result;

  result = qword_254332940;
  if (!qword_254332940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  int *v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v4 = type metadata accessor for StaticZone();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333198);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v54 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v54 - v18;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    goto LABEL_32;
  v20 = (int *)type metadata accessor for StaticRoom(0);
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  if (v22 == *v24 && v23 == v24[1])
    goto LABEL_7;
  v57 = (char *)v8;
  v26 = v5;
  v27 = v17;
  v28 = v19;
  v29 = v4;
  v30 = v10;
  v31 = v7;
  v32 = v14;
  v33 = v20;
  v34 = sub_23E538354();
  v20 = v33;
  v14 = v32;
  v7 = v31;
  v10 = v30;
  v4 = v29;
  v19 = v28;
  v17 = v27;
  v5 = v26;
  v8 = (uint64_t)v57;
  v35 = v34;
  v36 = 0;
  if ((v35 & 1) != 0)
  {
LABEL_7:
    if (*(unsigned __int8 *)(a1 + v20[6]) != *(unsigned __int8 *)(a2 + v20[6]))
      goto LABEL_32;
    v57 = v14;
    v37 = v20[7];
    v55 = a1;
    v38 = v20;
    sub_23E1E7C20(a1 + v37, (uint64_t)v19, &qword_254333190);
    v54 = v38;
    v39 = v38[7];
    v56 = a2;
    sub_23E1E7C20(a2 + v39, (uint64_t)v17, &qword_254333190);
    v40 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E1E7C20((uint64_t)v19, (uint64_t)v10, &qword_254333190);
    sub_23E1E7C20((uint64_t)v17, v40, &qword_254333190);
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v41((uint64_t)v10, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_254333190);
      sub_23E1E7C64((uint64_t)v19, &qword_254333190);
      if (v41(v40, 1, v4) == 1)
      {
        sub_23E1E7C64((uint64_t)v10, &qword_254333190);
LABEL_11:
        v43 = v54;
        v42 = v55;
        v44 = v56;
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
          && (sub_23E1F8F68(*(_QWORD *)(v42 + v43[9]), *(_QWORD *)(v44 + v43[9])) & 1) != 0
          && (sub_23E1F4B54(*(_QWORD *)(v42 + v43[10]), *(_QWORD *)(v44 + v43[10])) & 1) != 0
          && (sub_23E2B2DA8(*(_QWORD *)(v42 + v43[11]), *(_QWORD *)(v44 + v43[11])) & 1) != 0
          && (sub_23E1F4B30(*(_QWORD *)(v42 + v43[12]), *(_QWORD *)(v44 + v43[12])) & 1) != 0
          && (sub_23E2B2DCC(*(_QWORD *)(v42 + v43[13]), *(_QWORD *)(v44 + v43[13])) & 1) != 0
          && (sub_23E1F45A0(*(_QWORD *)(v42 + v43[14]), *(_QWORD *)(v44 + v43[14])) & 1) != 0
          && (sub_23E1F8844(*(_QWORD *)(v42 + v43[15]), *(_QWORD *)(v44 + v43[15])) & 1) != 0
          && (sub_23E1F3D38(*(_QWORD *)(v42 + v43[16]), *(_QWORD *)(v44 + v43[16])) & 1) != 0)
        {
          v36 = sub_23E1F3D38(*(_QWORD *)(v42 + v43[17]), *(_QWORD *)(v44 + v43[17]));
          return v36 & 1;
        }
LABEL_32:
        v36 = 0;
        return v36 & 1;
      }
    }
    else
    {
      v45 = (uint64_t)v57;
      sub_23E1E7C20((uint64_t)v10, (uint64_t)v57, &qword_254333190);
      if (v41(v40, 1, v4) != 1)
      {
        sub_23E1E2FDC(v40, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          if ((v48 = *(int *)(v4 + 20),
                v49 = *(_QWORD *)(v45 + v48),
                v50 = *(_QWORD *)(v45 + v48 + 8),
                v51 = &v7[v48],
                v49 == *(_QWORD *)v51)
            && v50 == *((_QWORD *)v51 + 1)
            || (sub_23E538354() & 1) != 0)
          {
            v52 = sub_23E1F3D38(*(_QWORD *)(v45 + *(int *)(v4 + 24)), *(_QWORD *)&v7[*(int *)(v4 + 24)]);
            sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
            sub_23E1E7C64((uint64_t)v17, &qword_254333190);
            sub_23E1E7C64((uint64_t)v19, &qword_254333190);
            sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
            sub_23E1E7C64((uint64_t)v10, &qword_254333190);
            if ((v52 & 1) == 0)
              goto LABEL_32;
            goto LABEL_11;
          }
        }
        sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
        sub_23E1E7C64((uint64_t)v17, &qword_254333190);
        sub_23E1E7C64((uint64_t)v19, &qword_254333190);
        sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
        v47 = (uint64_t)v10;
        v46 = &qword_254333190;
LABEL_31:
        sub_23E1E7C64(v47, v46);
        goto LABEL_32;
      }
      sub_23E1E7C64((uint64_t)v17, &qword_254333190);
      sub_23E1E7C64((uint64_t)v19, &qword_254333190);
      sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    }
    v46 = &qword_254333198;
    v47 = (uint64_t)v10;
    goto LABEL_31;
  }
  return v36 & 1;
}

uint64_t sub_23E1F45A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  int64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  int *v63;
  int64_t v64;
  _BOOL4 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = type metadata accessor for StaticServiceGroup();
  v68 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v59 - v8;
  v10 = sub_23E536F80();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254332780);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v59 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v63 = (int *)v4;
  v64 = 0;
  v62 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v60 = v20;
  v61 = (unint64_t)(v22 + 63) >> 6;
  v59 = v61 - 1;
  while (1)
  {
    if (v24)
    {
      v25 = v9;
      v66 = (v24 - 1) & v24;
      v26 = __clz(__rbit64(v24)) | (v64 << 6);
LABEL_8:
      v27 = v62;
      (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v15, *(_QWORD *)(v62 + 48) + *(_QWORD *)(v69 + 72) * v26, v70);
      v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v68 + 72) * v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
      sub_23E1E2F50(v28, (uint64_t)&v15[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
      v9 = v25;
      goto LABEL_27;
    }
    v30 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v30 < v61)
    {
      v31 = *(_QWORD *)(v60 + 8 * v30);
      if (v31)
        goto LABEL_12;
      v32 = v64 + 2;
      ++v64;
      if (v30 + 1 < v61)
      {
        v31 = *(_QWORD *)(v60 + 8 * v32);
        if (v31)
          goto LABEL_15;
        v64 = v30 + 1;
        if (v30 + 2 < v61)
        {
          v31 = *(_QWORD *)(v60 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          v32 = v30 + 3;
          v64 = v30 + 2;
          if (v30 + 3 < v61)
            break;
        }
      }
    }
LABEL_26:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    v66 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v15, (uint64_t)v18, (uint64_t *)&unk_254332780);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
    v35 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v18, 1, v34) == 1;
    result = v35;
    if (v35)
      return result;
    v65 = v35;
    v36 = (uint64_t)v7;
    v37 = v15;
    v38 = (uint64_t)&v18[*(int *)(v34 + 48)];
    v39 = v18;
    v41 = v69;
    v40 = v70;
    v42 = (uint64_t)v67;
    v43 = v39;
    (*(void (**)(char *))(v69 + 32))(v67);
    sub_23E1E2FDC(v38, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v44 = sub_23E1E3300(v42);
    v46 = v45;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v40);
    if ((v46 & 1) == 0)
      goto LABEL_48;
    v7 = (char *)v36;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v68 + 72) * v44, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v47 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v15 = v37;
    v48 = v63;
    v18 = v43;
    if ((v47 & 1) == 0
      || ((v49 = v63[5],
           v50 = *(_QWORD *)(v36 + v49),
           v51 = *(_QWORD *)(v36 + v49 + 8),
           v52 = &v9[v49],
           v50 != *(_QWORD *)v52)
       || v51 != *((_QWORD *)v52 + 1))
      && (sub_23E538354() & 1) == 0
      || *(unsigned __int8 *)(v36 + v48[6]) != v9[v48[6]]
      || *(unsigned __int8 *)(v36 + v48[7]) != v9[v48[7]]
      || (sub_23E1F8470(*(_QWORD *)(v36 + v48[8]), *(_QWORD *)&v9[v48[8]]) & 1) == 0)
    {
LABEL_47:
      sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
LABEL_48:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      return 0;
    }
    v53 = v48[9];
    v54 = (_QWORD *)(v36 + v53);
    v55 = *(_QWORD *)(v36 + v53 + 8);
    v56 = &v9[v53];
    v57 = *((_QWORD *)v56 + 1);
    if (v55)
    {
      if (!v57 || (*v54 != *(_QWORD *)v56 || v55 != v57) && (sub_23E538354() & 1) == 0)
        goto LABEL_47;
    }
    else if (v57)
    {
      goto LABEL_47;
    }
    if (*(unsigned __int8 *)(v36 + v48[10]) != v9[v48[10]])
      goto LABEL_47;
    v58 = sub_23E2AFB04(*(_QWORD *)(v36 + v48[11]), *(_QWORD *)&v9[v48[11]], (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254332740, &qword_254332738, (uint64_t (*)(uint64_t, uint64_t))static StaticService.== infix(_:_:));
    sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v24 = v66;
    result = v65;
    if ((v58 & 1) == 0)
      return result;
  }
  v31 = *(_QWORD *)(v60 + 8 * v32);
  if (v31)
  {
LABEL_15:
    v30 = v32;
LABEL_12:
    v25 = v9;
    v66 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v64 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v61)
    {
      v64 = v59;
      goto LABEL_26;
    }
    v31 = *(_QWORD *)(v60 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_12;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_23E1F4B30(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_254332768, &qword_256D3F9F0, (uint64_t (*)(uint64_t, uint64_t))static StaticMediaSystem.== infix(_:_:));
}

uint64_t sub_23E1F4B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  int64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  int64_t v88;
  _BOOL4 v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[2];
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  _QWORD v106[2];
  char v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char v116;

  v4 = type metadata accessor for StaticActionSet();
  v92 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v82 - v8;
  v94 = sub_23E536F80();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v91 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332758);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v82 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v87 = a2;
  v88 = 0;
  v85 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v83 = a1 + 64;
  v19 = 1 << *(_BYTE *)(a1 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v84 = (unint64_t)(v19 + 63) >> 6;
  v82 = v84 - 1;
  v86 = (int *)v4;
  while (1)
  {
    if (v21)
    {
      v22 = v9;
      v90 = (v21 - 1) & v21;
      v23 = __clz(__rbit64(v21)) | (v88 << 6);
      v24 = v87;
LABEL_8:
      v25 = v85;
      (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v14, *(_QWORD *)(v85 + 48) + *(_QWORD *)(v93 + 72) * v23, v94);
      v26 = *(_QWORD *)(v25 + 56) + *(_QWORD *)(v92 + 72) * v23;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332750);
      sub_23E1E2F50(v26, (uint64_t)&v14[*(int *)(v27 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v14, 0, 1, v27);
      v9 = v22;
      goto LABEL_27;
    }
    v28 = v88 + 1;
    v24 = v87;
    if (__OFADD__(v88, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v28 < v84)
    {
      v29 = *(_QWORD *)(v83 + 8 * v28);
      if (v29)
        goto LABEL_12;
      v30 = v88 + 2;
      ++v88;
      if (v28 + 1 < v84)
      {
        v29 = *(_QWORD *)(v83 + 8 * v30);
        if (v29)
          goto LABEL_15;
        v88 = v28 + 1;
        if (v28 + 2 < v84)
        {
          v29 = *(_QWORD *)(v83 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          v30 = v28 + 3;
          v88 = v28 + 2;
          if (v28 + 3 < v84)
            break;
        }
      }
    }
LABEL_26:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 1, 1, v31);
    v90 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v14, (uint64_t)v17, &qword_254332758);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332750);
    v33 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v17, 1, v32) == 1;
    result = v33;
    if (v33)
      return result;
    v89 = v33;
    v34 = (uint64_t)v7;
    v35 = v14;
    v36 = (uint64_t)&v17[*(int *)(v32 + 48)];
    v37 = v93;
    v38 = (uint64_t)v91;
    v39 = v17;
    v40 = v17;
    v41 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v91, v40, v94);
    sub_23E1E2FDC(v36, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v42 = sub_23E1E3300(v38);
    v44 = v43;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v41);
    if ((v44 & 1) == 0)
      goto LABEL_49;
    v7 = (char *)v34;
    sub_23E1E2F50(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v92 + 72) * v42, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v45 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v17 = v39;
    v46 = v86;
    if ((v45 & 1) == 0
      || ((v14 = v35,
           v47 = v86[5],
           v48 = *(_QWORD *)(v34 + v47),
           v49 = *(_QWORD *)(v34 + v47 + 8),
           v50 = &v9[v47],
           v48 != *(_QWORD *)v50)
       || v49 != *((_QWORD *)v50 + 1))
      && (sub_23E538354() & 1) == 0)
    {
LABEL_48:
      sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_49:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      return 0;
    }
    v51 = v46[6];
    v52 = *(unsigned __int8 *)(v34 + v51);
    v53 = v9[v51];
    if (v52 == 7)
    {
      if (v53 != 7)
        goto LABEL_48;
    }
    else
    {
      if (v53 == 7)
        goto LABEL_48;
      sub_23E52398C(v52);
      if ((v54 & 1) == 0)
        goto LABEL_48;
    }
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      goto LABEL_48;
    v55 = v34 + v46[8];
    v56 = *(_QWORD *)v55;
    v57 = *(_QWORD *)(v55 + 8);
    v58 = *(_BYTE *)(v55 + 16);
    v59 = *(_QWORD *)(v55 + 24);
    v60 = *(_QWORD *)(v55 + 32);
    v61 = *(_BYTE *)(v55 + 40);
    v62 = *(_QWORD *)(v55 + 48);
    v63 = *(_QWORD *)(v55 + 56);
    v64 = *(_BYTE *)(v55 + 64);
    v65 = *(_QWORD *)(v55 + 72);
    v66 = *(_QWORD *)(v55 + 80);
    LOBYTE(v55) = *(_BYTE *)(v55 + 88);
    v106[0] = v56;
    v106[1] = v57;
    v107 = v58;
    v108 = v59;
    v109 = v60;
    v110 = v61;
    v111 = v62;
    v112 = v63;
    v113 = v64;
    v114 = v65;
    v115 = v66;
    v116 = v55;
    v67 = &v9[v46[8]];
    v68 = *(_QWORD *)v67;
    v69 = *((_QWORD *)v67 + 1);
    v70 = v67[16];
    v71 = *((_QWORD *)v67 + 3);
    v72 = *((_QWORD *)v67 + 4);
    v73 = v67[40];
    v74 = *((_QWORD *)v67 + 6);
    v75 = *((_QWORD *)v67 + 7);
    v76 = v67[64];
    v77 = *((_QWORD *)v67 + 9);
    v78 = *((_QWORD *)v67 + 10);
    LOBYTE(v67) = v67[88];
    v95[0] = v68;
    v95[1] = v69;
    v96 = v70;
    v97 = v71;
    v98 = v72;
    v99 = v73;
    v100 = v74;
    v101 = v75;
    v102 = v76;
    v103 = v77;
    v104 = v78;
    v105 = (char)v67;
    if (!_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)v106, (uint64_t)v95)
      || (sub_23E5372F8() & 1) == 0
      || (sub_23E1F8470(*(_QWORD *)(v34 + v46[10]), *(_QWORD *)&v9[v46[10]]) & 1) == 0
      || *(unsigned __int8 *)(v34 + v46[11]) != v9[v46[11]]
      || (sub_23E336E44(*(_QWORD *)(v34 + v46[12]), *(_QWORD *)&v9[v46[12]]) & 1) == 0
      || *(unsigned __int8 *)(v34 + v46[13]) != v9[v46[13]])
    {
      goto LABEL_48;
    }
    v79 = v46[14];
    v80 = *(unsigned __int8 *)(v34 + v79);
    v81 = v9[v79];
    sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v21 = v90;
    result = v89;
    if (v80 != v81)
      return result;
  }
  v29 = *(_QWORD *)(v83 + 8 * v30);
  if (v29)
  {
LABEL_15:
    v28 = v30;
LABEL_12:
    v22 = v9;
    v90 = (v29 - 1) & v29;
    v23 = __clz(__rbit64(v29)) + (v28 << 6);
    v88 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v84)
    {
      v88 = v82;
      goto LABEL_26;
    }
    v29 = *(_QWORD *)(v83 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_12;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  uint64_t result;
  uint64_t v59;
  int v60;
  int v61;
  _BOOL4 v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t, uint64_t, uint64_t);
  char v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  void (*v85)(char *, uint64_t);
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  char v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  void (*v146)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  int *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int (*v163)(uint64_t, uint64_t, uint64_t);
  int *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  void (*v178)(char *, uint64_t);
  uint64_t v179;
  unsigned __int16 *v180;
  char v181;
  unsigned __int16 *v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  char v221;
  char v222;
  char v223;

  v196 = type metadata accessor for StaticSoftwareUpdate(0);
  v4 = *(_QWORD *)(v196 - 8);
  MEMORY[0x24BDAC7A8](v196);
  v195 = (uint64_t)&v188 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332C0);
  MEMORY[0x24BDAC7A8](v192);
  v199 = (uint64_t)&v188 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v197 = (uint64_t)&v188 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v193 = (uint64_t)&v188 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v194 = (uint64_t)&v188 - v12;
  v210 = sub_23E536F80();
  v206 = *(_QWORD *)(v210 - 8);
  MEMORY[0x24BDAC7A8](v210);
  v203 = (char *)&v188 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  v14 = MEMORY[0x24BDAC7A8](v205);
  v202 = (uint64_t)&v188 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v209 = (uint64_t)&v188 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v201 = (uint64_t)&v188 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v198 = (uint64_t)&v188 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v200 = (uint64_t)&v188 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v204 = (uint64_t)&v188 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v207 = (uint64_t)&v188 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v208 = (uint64_t)&v188 - v28;
  v218 = sub_23E536F20();
  v216 = *(_QWORD *)(v218 - 8);
  MEMORY[0x24BDAC7A8](v218);
  v211 = (char *)&v188 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v213);
  v217 = (uint64_t)&v188 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v212 = (uint64_t)&v188 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v214 = (uint64_t)&v188 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v215 = (uint64_t)&v188 - v36;
  v37 = type metadata accessor for StaticDeviceMetadata();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v188 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B0);
  MEMORY[0x24BDAC7A8](v41);
  v219 = (uint64_t)&v188 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v188 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v188 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v188 - v50;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v191 = v4;
  v52 = (int *)type metadata accessor for StaticService();
  v53 = v52[5];
  v54 = *(_QWORD *)(a1 + v53);
  v55 = *(_QWORD *)(a1 + v53 + 8);
  v56 = (_QWORD *)(a2 + v53);
  if (v54 != *v56 || v55 != v56[1])
  {
    v57 = sub_23E538354();
    result = 0;
    if ((v57 & 1) == 0)
      return result;
  }
  if (*(unsigned __int8 *)(a1 + v52[6]) != *(unsigned __int8 *)(a2 + v52[6])
    || *(unsigned __int8 *)(a1 + v52[7]) != *(unsigned __int8 *)(a2 + v52[7])
    || *(unsigned __int8 *)(a1 + v52[8]) != *(unsigned __int8 *)(a2 + v52[8]))
  {
    return 0;
  }
  v59 = v52[9];
  v60 = *(unsigned __int8 *)(a1 + v59);
  v61 = *(unsigned __int8 *)(a2 + v59);
  if (v60 == 2)
  {
    if (v61 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v62 = (v60 & 1) == 0;
    if (v61 == 2 || ((v62 ^ v61) & 1) == 0)
      return result;
  }
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v63 = v52[11];
  v64 = (_QWORD *)(a1 + v63);
  v65 = *(_BYTE *)(a1 + v63 + 8);
  v66 = (_QWORD *)(a2 + v63);
  v67 = *(unsigned __int8 *)(a2 + v63 + 8);
  if ((v65 & 1) != 0)
  {
    if (!v67)
      return 0;
  }
  else
  {
    if (*v64 != *v66)
      LOBYTE(v67) = 1;
    if ((v67 & 1) != 0)
      return 0;
  }
  v68 = v52[12];
  v189 = a1;
  sub_23E1E7C20(a1 + v68, (uint64_t)v51, &qword_2543332A8);
  v188 = v52;
  v69 = v52[12];
  v190 = a2;
  sub_23E1E7C20(a2 + v69, (uint64_t)v49, &qword_2543332A8);
  v70 = v219;
  v71 = v219 + *(int *)(v41 + 48);
  sub_23E1E7C20((uint64_t)v51, v219, &qword_2543332A8);
  sub_23E1E7C20((uint64_t)v49, v71, &qword_2543332A8);
  v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v72(v70, 1, v37) == 1)
  {
    sub_23E1E7C64((uint64_t)v49, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v51, &qword_2543332A8);
    if (v72(v71, 1, v37) == 1)
    {
      sub_23E1E7C64(v70, &qword_2543332A8);
      goto LABEL_29;
    }
LABEL_27:
    sub_23E1E7C64(v70, &qword_2543332B0);
    return 0;
  }
  sub_23E1E7C20(v70, (uint64_t)v46, &qword_2543332A8);
  if (v72(v71, 1, v37) == 1)
  {
    sub_23E1E7C64((uint64_t)v49, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v51, &qword_2543332A8);
    sub_23E1E2FA0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_27;
  }
  sub_23E1E2FDC(v71, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  v73 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v46, (uint64_t)v40);
  sub_23E1E2FA0((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64((uint64_t)v49, &qword_2543332A8);
  sub_23E1E7C64((uint64_t)v51, &qword_2543332A8);
  sub_23E1E2FA0((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64(v70, &qword_2543332A8);
  if ((v73 & 1) == 0)
    return 0;
LABEL_29:
  v74 = v188;
  v75 = v215;
  sub_23E1E7C20(v189 + v188[13], v215, &qword_2543330E0);
  v76 = v214;
  sub_23E1E7C20(v190 + v74[13], v214, &qword_2543330E0);
  v77 = v217;
  v78 = v217 + *(int *)(v213 + 48);
  sub_23E1E7C20(v75, v217, &qword_2543330E0);
  sub_23E1E7C20(v76, v78, &qword_2543330E0);
  v79 = v216;
  v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v216 + 48);
  v81 = v218;
  if (v80(v77, 1, v218) == 1)
  {
    sub_23E1E7C64(v76, &qword_2543330E0);
    sub_23E1E7C64(v75, &qword_2543330E0);
    if (v80(v78, 1, v81) == 1)
    {
      sub_23E1E7C64(v77, &qword_2543330E0);
      goto LABEL_36;
    }
LABEL_34:
    sub_23E1E7C64(v77, &qword_2543330E8);
    return 0;
  }
  v82 = v212;
  sub_23E1E7C20(v77, v212, &qword_2543330E0);
  if (v80(v78, 1, v81) == 1)
  {
    sub_23E1E7C64(v76, &qword_2543330E0);
    sub_23E1E7C64(v75, &qword_2543330E0);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v82, v81);
    goto LABEL_34;
  }
  v83 = v211;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v211, v78, v81);
  sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v84 = sub_23E537514();
  v85 = *(void (**)(char *, uint64_t))(v79 + 8);
  v85(v83, v81);
  sub_23E1E7C64(v76, &qword_2543330E0);
  sub_23E1E7C64(v75, &qword_2543330E0);
  v85((char *)v82, v81);
  sub_23E1E7C64(v77, &qword_2543330E0);
  if ((v84 & 1) == 0)
    return 0;
LABEL_36:
  v86 = v188;
  v87 = v189;
  v88 = v190;
  result = sub_23E1F8470(*(_QWORD *)(v189 + v188[14]), *(_QWORD *)(v190 + v188[14]));
  if ((result & 1) == 0)
    return 0;
  v89 = v86[15];
  v90 = (uint64_t *)(v87 + v89);
  v91 = *(_QWORD *)(v87 + v89 + 8);
  v92 = (_QWORD *)(v88 + v89);
  v93 = v92[1];
  v94 = v88;
  v95 = v87;
  v96 = v86;
  if (v91)
  {
    if (!v93)
      return 0;
    result = *v90;
    if (*v90 != *v92 || v91 != v93)
    {
      v97 = sub_23E538354();
      v96 = v188;
      v95 = v189;
      v94 = v190;
      v98 = v97;
      result = 0;
      if ((v98 & 1) == 0)
        return result;
    }
  }
  else if (v93)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(v95 + v96[16]) != *(unsigned __int8 *)(v94 + v96[16])
    || *(unsigned __int8 *)(v95 + v96[17]) != *(unsigned __int8 *)(v94 + v96[17])
    || *(unsigned __int8 *)(v95 + v96[18]) != *(unsigned __int8 *)(v94 + v96[18])
    || *(unsigned __int8 *)(v189 + v188[19]) != *(unsigned __int8 *)(v190 + v188[19]))
  {
    return 0;
  }
  v99 = v188[20];
  v100 = (uint64_t *)(v189 + v99);
  v101 = *(_QWORD *)(v189 + v99 + 8);
  v102 = (_QWORD *)(v190 + v99);
  v103 = v102[1];
  if (v101)
  {
    if (!v103)
      return 0;
    result = *v100;
    v104 = *v100 == *v102;
    v105 = v190;
    v106 = v189;
    v107 = v188;
    if (!v104 || v101 != v103)
    {
      v108 = sub_23E538354();
      v107 = v188;
      v106 = v189;
      v105 = v190;
      v109 = v108;
      result = 0;
      if ((v109 & 1) == 0)
        return result;
    }
  }
  else
  {
    v105 = v190;
    v106 = v189;
    v107 = v188;
    if (v103)
      return 0;
  }
  v110 = v107[21];
  v111 = *(_BYTE *)(v106 + v110);
  LOBYTE(v110) = *(_BYTE *)(v105 + v110);
  v223 = v111;
  v222 = v110;
  v112 = ServiceKind.rawValue.getter(result);
  v114 = v113;
  if (v112 == ServiceKind.rawValue.getter(v112) && v114 == v115)
  {
    swift_bridgeObjectRelease_n();
    v116 = v190;
    v117 = v189;
    v118 = v188;
  }
  else
  {
    v119 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    v116 = v190;
    v117 = v189;
    v118 = v188;
    if ((v119 & 1) == 0)
      return result;
  }
  v120 = v118[22];
  v121 = *(unsigned __int8 *)(v117 + v120);
  v122 = *(unsigned __int8 *)(v116 + v120);
  if ((_DWORD)v121 == 5)
  {
    if (v122 != 5)
      return 0;
  }
  else
  {
    if (v122 == 5)
      return 0;
    sub_23E1F6874(v121);
    if ((v121 & 1) == 0)
      return 0;
  }
  v123 = v188[23];
  v124 = *(unsigned __int8 *)(v189 + v123);
  v125 = *(unsigned __int8 *)(v190 + v123);
  if (v124 == 53)
  {
    v126 = v190;
    v127 = v189;
    v128 = v188;
    if (v125 != 53)
      return 0;
    goto LABEL_73;
  }
  if (v125 == 53)
    return 0;
  v221 = v124;
  v220 = v125;
  v129 = ServiceKind.rawValue.getter(v121);
  v131 = v130;
  if (v129 == ServiceKind.rawValue.getter(v129) && v131 == v132)
  {
    swift_bridgeObjectRelease_n();
    v126 = v190;
    v127 = v189;
    v128 = v188;
    goto LABEL_73;
  }
  v133 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  v126 = v190;
  v127 = v189;
  v128 = v188;
  if ((v133 & 1) != 0)
  {
LABEL_73:
    v134 = v208;
    v135 = v126;
    v136 = v128;
    sub_23E1E7C20(v127 + v128[24], v208, &qword_254333F50);
    v137 = v207;
    sub_23E1E7C20(v135 + v136[24], v207, &qword_254333F50);
    v138 = v209;
    v139 = v209 + *(int *)(v205 + 48);
    sub_23E1E7C20(v134, v209, &qword_254333F50);
    sub_23E1E7C20(v137, v139, &qword_254333F50);
    v140 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v206 + 48);
    if (v140(v138, 1, v210) == 1)
    {
      sub_23E1E7C64(v207, &qword_254333F50);
      sub_23E1E7C64(v208, &qword_254333F50);
      if (v140(v139, 1, v210) == 1)
      {
        sub_23E1E7C64(v209, &qword_254333F50);
        goto LABEL_80;
      }
    }
    else
    {
      sub_23E1E7C20(v209, v204, &qword_254333F50);
      if (v140(v139, 1, v210) != 1)
      {
        v141 = v206;
        v142 = v203;
        v143 = v210;
        (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v203, v139, v210);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v144 = v204;
        v145 = sub_23E537514();
        v146 = *(void (**)(char *, uint64_t))(v141 + 8);
        v146(v142, v143);
        sub_23E1E7C64(v207, &qword_254333F50);
        sub_23E1E7C64(v208, &qword_254333F50);
        v146((char *)v144, v143);
        sub_23E1E7C64(v209, &qword_254333F50);
        if ((v145 & 1) == 0)
          return 0;
LABEL_80:
        if ((sub_23E1F6994(*(_QWORD *)(v189 + v188[25]), *(_QWORD *)(v190 + v188[25])) & 1) == 0)
          return 0;
        v147 = v188[26];
        v148 = *(_QWORD *)(v189 + v147);
        v149 = *(_QWORD *)(v190 + v147);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v150 = sub_23E1F69A8(v148, v149);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v150 & 1) == 0)
          return 0;
        v151 = v188[27];
        v152 = *(_QWORD *)(v189 + v151);
        v153 = *(_QWORD *)(v189 + v151 + 8);
        v154 = (uint64_t *)(v190 + v151);
        v155 = *v154;
        v156 = v154[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((sub_23E2B1D74(v152, v155) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        v157 = sub_23E2B2280(v153, v156);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v157 & 1) != 0)
        {
          v158 = v188;
          v159 = v194;
          sub_23E1E7C20(v189 + v188[28], v194, &qword_2543332B8);
          v160 = v193;
          sub_23E1E7C20(v190 + v158[28], v193, &qword_2543332B8);
          v161 = v199;
          v162 = v199 + *(int *)(v192 + 48);
          sub_23E1E7C20(v159, v199, &qword_2543332B8);
          sub_23E1E7C20(v160, v162, &qword_2543332B8);
          v163 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
          if (v163(v161, 1, v196) == 1)
          {
            sub_23E1E7C64(v193, &qword_2543332B8);
            sub_23E1E7C64(v194, &qword_2543332B8);
            if (v163(v162, 1, v196) == 1)
            {
              sub_23E1E7C64(v199, &qword_2543332B8);
              goto LABEL_87;
            }
LABEL_95:
            sub_23E1E7C64(v199, &qword_2543332C0);
            return 0;
          }
          sub_23E1E7C20(v199, v197, &qword_2543332B8);
          if (v163(v162, 1, v196) == 1)
          {
            sub_23E1E7C64(v193, &qword_2543332B8);
            sub_23E1E7C64(v194, &qword_2543332B8);
            sub_23E1E2FA0(v197, type metadata accessor for StaticSoftwareUpdate);
            goto LABEL_95;
          }
          sub_23E1E2FDC(v162, v195, type metadata accessor for StaticSoftwareUpdate);
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
          {
            sub_23E1E2FA0(v195, type metadata accessor for StaticSoftwareUpdate);
            sub_23E1E7C64(v193, &qword_2543332B8);
            sub_23E1E7C64(v194, &qword_2543332B8);
            sub_23E1E2FA0(v197, type metadata accessor for StaticSoftwareUpdate);
            sub_23E1E7C64(v199, &qword_2543332B8);
            return 0;
          }
          v169 = v197;
          v170 = v195;
          _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(v197 + *(int *)(v196 + 20), v195 + *(int *)(v196 + 20));
          v172 = v171;
          sub_23E1E2FA0(v170, type metadata accessor for StaticSoftwareUpdate);
          sub_23E1E7C64(v193, &qword_2543332B8);
          sub_23E1E7C64(v194, &qword_2543332B8);
          sub_23E1E2FA0(v169, type metadata accessor for StaticSoftwareUpdate);
          sub_23E1E7C64(v199, &qword_2543332B8);
          if ((v172 & 1) != 0)
          {
LABEL_87:
            if (*(unsigned __int8 *)(v189 + v188[29]) != *(unsigned __int8 *)(v190 + v188[29])
              || (sub_23E1F6994(*(_QWORD *)(v189 + v188[30]), *(_QWORD *)(v190 + v188[30])) & 1) == 0)
            {
              return 0;
            }
            v164 = v188;
            v165 = v200;
            sub_23E1E7C20(v189 + v188[31], v200, &qword_254333F50);
            v166 = v198;
            sub_23E1E7C20(v190 + v164[31], v198, &qword_254333F50);
            v167 = v202;
            v168 = v202 + *(int *)(v205 + 48);
            sub_23E1E7C20(v165, v202, &qword_254333F50);
            sub_23E1E7C20(v166, v168, &qword_254333F50);
            if (v140(v167, 1, v210) == 1)
            {
              sub_23E1E7C64(v198, &qword_254333F50);
              sub_23E1E7C64(v200, &qword_254333F50);
              if (v140(v168, 1, v210) == 1)
              {
                sub_23E1E7C64(v202, &qword_254333F50);
LABEL_104:
                v179 = v188[32];
                v180 = (unsigned __int16 *)(v189 + v179);
                v181 = *(_BYTE *)(v189 + v179 + 2);
                v182 = (unsigned __int16 *)(v190 + v179);
                v183 = *(unsigned __int8 *)(v190 + v179 + 2);
                if ((v181 & 1) != 0)
                {
                  if (!v183)
                    return 0;
                }
                else
                {
                  if (*v180 != *v182)
                    LOBYTE(v183) = 1;
                  if ((v183 & 1) != 0)
                    return 0;
                }
                v184 = v188[33];
                v185 = v189 + v184;
                v186 = *(_BYTE *)(v189 + v184 + 10);
                v187 = v190 + v184;
                if ((v186 & 1) != 0)
                {
                  if ((*(_BYTE *)(v187 + 10) & 1) != 0)
                    return 1;
                }
                else if ((*(_BYTE *)(v187 + 10) & 1) == 0
                       && *(_QWORD *)v185 == *(_QWORD *)v187
                       && *(unsigned __int16 *)(v185 + 8) == *(unsigned __int16 *)(v187 + 8))
                {
                  return 1;
                }
                return 0;
              }
            }
            else
            {
              sub_23E1E7C20(v202, v201, &qword_254333F50);
              if (v140(v168, 1, v210) != 1)
              {
                v173 = v206;
                v174 = v203;
                v175 = v210;
                (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v203, v168, v210);
                sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                v176 = v201;
                v177 = sub_23E537514();
                v178 = *(void (**)(char *, uint64_t))(v173 + 8);
                v178(v174, v175);
                sub_23E1E7C64(v198, &qword_254333F50);
                sub_23E1E7C64(v200, &qword_254333F50);
                v178((char *)v176, v175);
                sub_23E1E7C64(v202, &qword_254333F50);
                if ((v177 & 1) == 0)
                  return 0;
                goto LABEL_104;
              }
              sub_23E1E7C64(v198, &qword_254333F50);
              sub_23E1E7C64(v200, &qword_254333F50);
              (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v201, v210);
            }
            sub_23E1E7C64(v202, &qword_254332798);
          }
        }
        return 0;
      }
      sub_23E1E7C64(v207, &qword_254333F50);
      sub_23E1E7C64(v208, &qword_254333F50);
      (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v204, v210);
    }
    sub_23E1E7C64(v209, &qword_254332798);
    return 0;
  }
  return result;
}

void sub_23E1F6874(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23E1F68B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)())((char *)sub_23E1F6904 + 4 * byte_23E55BDDB[a2]))();
}

uint64_t sub_23E1F6904()
{
  uint64_t v0;
  char v1;

  if (v0 == 0x800000023E560C80)
    v1 = 1;
  else
    v1 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_23E1F6994(uint64_t a1, uint64_t a2)
{
  return sub_23E1F8E2C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (uint64_t (*)(char *, char *))static StaticService.== infix(_:_:));
}

uint64_t sub_23E1F69A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  _BOOL8 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  BOOL v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;

  v4 = type metadata accessor for StaticCharacteristic();
  v45 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333240);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (unsigned __int8 *)&v40 - v15;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v43 = a1;
  v44 = 0;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v41 = v18;
  v42 = (unint64_t)(v20 + 63) >> 6;
  v40 = v42 - 1;
  while (1)
  {
    if (v22)
    {
      v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v24 = v23 | (v44 << 6);
LABEL_8:
      v25 = *(_BYTE *)(*(_QWORD *)(v43 + 48) + v24);
      v26 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v45 + 72) * v24;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
      sub_23E1E2F50(v26, (uint64_t)&v13[*(int *)(v27 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      *v13 = v25;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
      goto LABEL_27;
    }
    v28 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v28 < v42)
    {
      v29 = *(_QWORD *)(v41 + 8 * v28);
      if (v29)
        goto LABEL_12;
      v30 = v44 + 2;
      ++v44;
      if (v28 + 1 < v42)
      {
        v29 = *(_QWORD *)(v41 + 8 * v30);
        if (v29)
          goto LABEL_15;
        v44 = v28 + 1;
        if (v28 + 2 < v42)
        {
          v29 = *(_QWORD *)(v41 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          v30 = v28 + 3;
          v44 = v28 + 2;
          if (v28 + 3 < v42)
            break;
        }
      }
    }
LABEL_26:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v13, 1, 1, v31);
    v22 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v13, (uint64_t)v16, &qword_254333240);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
    v33 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v16, 1, v32);
    v34 = v33 == 1;
    if (v33 == 1)
      return v34;
    v35 = (uint64_t)&v16[*(int *)(v32 + 48)];
    v36 = *v16;
    sub_23E1E2FDC(v35, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v37 = sub_23E1EAF70(v36);
    if ((v38 & 1) == 0)
    {
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      return 0;
    }
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v45 + 72) * v37, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v39 = _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    if (!v39)
      return v34;
  }
  v29 = *(_QWORD *)(v41 + 8 * v30);
  if (v29)
  {
LABEL_15:
    v28 = v30;
LABEL_12:
    v22 = (v29 - 1) & v29;
    v24 = __clz(__rbit64(v29)) + (v28 << 6);
    v44 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v42)
    {
      v44 = v40;
      goto LABEL_26;
    }
    v29 = *(_QWORD *)(v41 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

BOOL _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BOOL8 result;
  uint64_t v13;
  char v14;
  __int128 *v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for StaticCharacteristic();
  v5 = v4[5];
  v6 = *(_BYTE *)(a1 + v5);
  LOBYTE(v5) = *(_BYTE *)(a2 + v5);
  LOBYTE(v36) = v6;
  LOBYTE(v32) = v5;
  v7 = CharacteristicKind.rawValue.getter((uint64_t)v4);
  v9 = v8;
  if (v7 != CharacteristicKind.rawValue.getter(v7))
    goto LABEL_5;
  if (v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_5:
    v11 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v11 & 1) == 0)
      return result;
  }
  v13 = v4[6];
  v14 = *(_BYTE *)(a1 + v13 + 16);
  v36 = *(_OWORD *)(a1 + v13);
  LOBYTE(v37) = v14;
  v15 = (__int128 *)(a2 + v13);
  v16 = *((_BYTE *)v15 + 16);
  v32 = *v15;
  LOBYTE(v33) = v16;
  _s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v36);
  if ((v17 & 1) == 0)
    return 0;
  if ((sub_23E536EF0() & 1) == 0)
    return 0;
  v18 = v4[8];
  LOBYTE(v36) = *(_BYTE *)(a1 + v18);
  LOBYTE(v32) = *(_BYTE *)(a2 + v18);
  if ((_s13HomeDataModel20StaticCharacteristicV12LoadingStateO2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v36) & 1) == 0
    || *(_QWORD *)(a1 + v4[9]) != *(_QWORD *)(a2 + v4[9])
    || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
  {
    return 0;
  }
  v19 = v4[11];
  v21 = *(_QWORD *)(a1 + v19);
  v20 = *(_QWORD *)(a1 + v19 + 8);
  v23 = *(_QWORD *)(a1 + v19 + 16);
  v22 = *(_QWORD *)(a1 + v19 + 24);
  v24 = *(_QWORD *)(a1 + v19 + 32);
  v25 = (uint64_t *)(a2 + v19);
  v27 = *v25;
  v26 = v25[1];
  v29 = v25[2];
  v28 = v25[3];
  v30 = v25[4];
  if (v22 >> 8 == 0xFFFFFFFF)
  {
    if (v28 >> 8 == 0xFFFFFFFF)
      return 1;
    goto LABEL_16;
  }
  *(_QWORD *)&v36 = v21;
  *((_QWORD *)&v36 + 1) = v20;
  v37 = v23;
  v38 = v22;
  v39 = v24;
  if (v28 >> 8 == 0xFFFFFFFF)
  {
    sub_23E1E80B8(v21, v20, v23, v22);
    sub_23E1E80B8(v21, v20, v23, v22);
    sub_23E1EAB4C(v21, v20, v23, v22);
LABEL_16:
    sub_23E42D110(v27, v26, v29, v28);
    sub_23E23D564(v21, v20, v23, v22);
    sub_23E23D564(v27, v26, v29, v28);
    return 0;
  }
  *(_QWORD *)&v32 = v27;
  *((_QWORD *)&v32 + 1) = v26;
  v33 = v29;
  v34 = v28;
  v35 = v30;
  sub_23E42D110(v21, v20, v23, v22);
  sub_23E1E80B8(v21, v20, v23, v22);
  v31 = _s13HomeDataModel28StaticCharacteristicMetadataO2eeoiySbAC_ACtFZ_0((uint64_t *)&v36, (uint64_t *)&v32);
  sub_23E1EAB4C(v36, *((uint64_t *)&v36 + 1), v37, v38);
  sub_23E23D564(v21, v20, v23, v22);
  return v31;
}

void _s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_23E1F7090()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  int v5;
  char v6;

  if (v5)
  {
    sub_23E1E8058(v0, v1, v5);
    sub_23E1EAB20(v2, v3, v4);
    sub_23E1EAB20(v0, v1, v5);
    v6 = 0;
  }
  else
  {
    sub_23E1EAB20(v2, v3, 0);
    sub_23E1EAB20(v0, v1, 0);
    v6 = ((v2 & 1) == 0) ^ v0;
  }
  return v6 & 1;
}

uint64_t _s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  _QWORD *v75;
  char v76;
  _QWORD *v77;
  int v78;
  int *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  int *v85;
  char v86;
  char v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  int v101;
  int v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  unsigned __int16 v159;
  __int16 v160[5];

  v140 = type metadata accessor for StaticSoftwareUpdate(0);
  v136 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v139 = (uint64_t)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332C0);
  MEMORY[0x24BDAC7A8](v135);
  v142 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v141 = (uint64_t)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v137 = (uint64_t)&v131 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v138 = (uint64_t)&v131 - v11;
  v12 = sub_23E536F80();
  v146 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v143 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v144);
  v149 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v145 = (uint64_t)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v147 = (uint64_t)&v131 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v148 = (uint64_t)&v131 - v20;
  v156 = sub_23E536F20();
  v154 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v150 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v153);
  v155 = (uint64_t)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v151 = (uint64_t)&v131 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v157 = (char *)&v131 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v158 = (uint64_t)&v131 - v28;
  v29 = type metadata accessor for StaticDeviceMetadata();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v152 = (uint64_t)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B0);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)&v131 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v131 - v42;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v134 = v12;
  v44 = (int *)type metadata accessor for StaticAccessory(0);
  v45 = v44[5];
  v46 = *(_QWORD *)(a1 + v45);
  v47 = *(_QWORD *)(a1 + v45 + 8);
  v48 = (_QWORD *)(a2 + v45);
  if (v46 != *v48 || v47 != v48[1])
  {
    v49 = sub_23E538354();
    result = 0;
    if ((v49 & 1) == 0)
      return result;
  }
  if ((_s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0(a1 + v44[6], a2 + v44[6]) & 1) == 0)
    return 0;
  v51 = v44[7];
  v131 = a1;
  sub_23E1E7C20(a1 + v51, (uint64_t)v43, &qword_2543332A8);
  v133 = v44;
  v52 = v44[7];
  v132 = a2;
  sub_23E1E7C20(a2 + v52, (uint64_t)v41, &qword_2543332A8);
  v53 = (uint64_t)&v34[*(int *)(v32 + 48)];
  sub_23E1E7C20((uint64_t)v43, (uint64_t)v34, &qword_2543332A8);
  sub_23E1E7C20((uint64_t)v41, v53, &qword_2543332A8);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v54((uint64_t)v34, 1, v29) == 1)
  {
    sub_23E1E7C64((uint64_t)v41, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v43, &qword_2543332A8);
    v55 = v54(v53, 1, v29);
    v57 = (uint64_t)v157;
    v56 = v158;
    if (v55 == 1)
    {
      sub_23E1E7C64((uint64_t)v34, &qword_2543332A8);
      goto LABEL_13;
    }
LABEL_11:
    v59 = &qword_2543332B0;
    v60 = (uint64_t)v34;
LABEL_19:
    sub_23E1E7C64(v60, v59);
    return 0;
  }
  sub_23E1E7C20((uint64_t)v34, (uint64_t)v38, &qword_2543332A8);
  v58 = v54(v53, 1, v29);
  v57 = (uint64_t)v157;
  v56 = v158;
  if (v58 == 1)
  {
    sub_23E1E7C64((uint64_t)v41, &qword_2543332A8);
    sub_23E1E7C64((uint64_t)v43, &qword_2543332A8);
    sub_23E1E2FA0((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_11;
  }
  v61 = v152;
  sub_23E1E2FDC(v53, v152, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  v62 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v38, v61);
  sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64((uint64_t)v41, &qword_2543332A8);
  sub_23E1E7C64((uint64_t)v43, &qword_2543332A8);
  sub_23E1E2FA0((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  sub_23E1E7C64((uint64_t)v34, &qword_2543332A8);
  if ((v62 & 1) == 0)
    return 0;
LABEL_13:
  v63 = v133;
  v64 = v131;
  sub_23E1E7C20(v131 + v133[8], v56, &qword_2543330E0);
  v65 = v132;
  sub_23E1E7C20(v132 + v63[8], v57, &qword_2543330E0);
  v66 = v155;
  v67 = v155 + *(int *)(v153 + 48);
  sub_23E1E7C20(v56, v155, &qword_2543330E0);
  sub_23E1E7C20(v57, v67, &qword_2543330E0);
  v68 = v154;
  v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
  v70 = v156;
  if (v69(v66, 1, v156) == 1)
  {
    sub_23E1E7C64(v57, &qword_2543330E0);
    sub_23E1E7C64(v56, &qword_2543330E0);
    if (v69(v67, 1, v70) == 1)
    {
      sub_23E1E7C64(v66, &qword_2543330E0);
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  v71 = v151;
  sub_23E1E7C20(v66, v151, &qword_2543330E0);
  if (v69(v67, 1, v70) == 1)
  {
    sub_23E1E7C64(v57, &qword_2543330E0);
    sub_23E1E7C64(v56, &qword_2543330E0);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v71, v70);
LABEL_18:
    v59 = &qword_2543330E8;
    v60 = v66;
    goto LABEL_19;
  }
  v72 = v150;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v150, v67, v70);
  sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  LODWORD(v157) = sub_23E537514();
  v73 = *(void (**)(char *, uint64_t))(v68 + 8);
  v73(v72, v70);
  sub_23E1E7C64(v57, &qword_2543330E0);
  sub_23E1E7C64(v158, &qword_2543330E0);
  v73((char *)v71, v70);
  sub_23E1E7C64(v66, &qword_2543330E0);
  if ((v157 & 1) == 0)
    return 0;
LABEL_23:
  v74 = v133[9];
  v75 = (_QWORD *)(v64 + v74);
  v76 = *(_BYTE *)(v64 + v74 + 8);
  v77 = (_QWORD *)(v65 + v74);
  v78 = *(unsigned __int8 *)(v65 + v74 + 8);
  if ((v76 & 1) != 0)
  {
    if (!v78)
      return 0;
  }
  else
  {
    if (*v75 != *v77)
      LOBYTE(v78) = 1;
    if ((v78 & 1) != 0)
      return 0;
  }
  if (*(unsigned __int8 *)(v64 + v133[10]) != *(unsigned __int8 *)(v65 + v133[10]))
    return 0;
  v79 = v133;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
    || (sub_23E1F8470(*(_QWORD *)(v64 + v79[12]), *(_QWORD *)(v65 + v79[12])) & 1) == 0)
  {
    return 0;
  }
  v80 = v79[13];
  v81 = (_QWORD *)(v64 + v80);
  v82 = *(_QWORD *)(v64 + v80 + 8);
  v83 = (_QWORD *)(v65 + v80);
  v84 = v83[1];
  v85 = v79;
  if (v82)
  {
    if (!v84)
      return 0;
    if (*v81 != *v83 || v82 != v84)
    {
      v86 = sub_23E538354();
      v85 = v133;
      v87 = v86;
      result = 0;
      if ((v87 & 1) == 0)
        return result;
    }
  }
  else if (v84)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(v64 + v85[14]) != *(unsigned __int8 *)(v65 + v85[14])
    || *(unsigned __int8 *)(v64 + v85[15]) != *(unsigned __int8 *)(v65 + v85[15])
    || *(unsigned __int8 *)(v64 + v85[16]) != *(unsigned __int8 *)(v65 + v85[16])
    || *(unsigned __int8 *)(v64 + v85[17]) != *(unsigned __int8 *)(v65 + v85[17])
    || *(unsigned __int8 *)(v64 + v85[18]) != *(unsigned __int8 *)(v65 + v85[18])
    || (sub_23E1F8844(*(_QWORD *)(v131 + v133[19]), *(_QWORD *)(v132 + v133[19])) & 1) == 0
    || (sub_23E1F3D38(*(_QWORD *)(v131 + v133[20]), *(_QWORD *)(v132 + v133[20])) & 1) == 0)
  {
    return 0;
  }
  v88 = v133;
  v89 = v148;
  sub_23E1E7C20(v131 + v133[21], v148, &qword_254333F50);
  v90 = v147;
  sub_23E1E7C20(v132 + v88[21], v147, &qword_254333F50);
  v91 = v149;
  v92 = v149 + *(int *)(v144 + 48);
  sub_23E1E7C20(v89, v149, &qword_254333F50);
  sub_23E1E7C20(v90, v92, &qword_254333F50);
  v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  if (v93(v91, 1, v134) != 1)
  {
    sub_23E1E7C20(v149, v145, &qword_254333F50);
    if (v93(v92, 1, v134) != 1)
    {
      v94 = v146;
      v95 = v143;
      v96 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v146 + 32))(v143, v92, v134);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v97 = v145;
      v98 = sub_23E537514();
      v99 = *(void (**)(char *, uint64_t))(v94 + 8);
      v99(v95, v96);
      sub_23E1E7C64(v147, &qword_254333F50);
      sub_23E1E7C64(v148, &qword_254333F50);
      v99((char *)v97, v96);
      sub_23E1E7C64(v149, &qword_254333F50);
      if ((v98 & 1) == 0)
        return 0;
      goto LABEL_53;
    }
    sub_23E1E7C64(v147, &qword_254333F50);
    sub_23E1E7C64(v148, &qword_254333F50);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v145, v134);
    goto LABEL_51;
  }
  sub_23E1E7C64(v147, &qword_254333F50);
  sub_23E1E7C64(v148, &qword_254333F50);
  if (v93(v92, 1, v134) != 1)
  {
LABEL_51:
    v59 = &qword_254332798;
    v60 = v149;
    goto LABEL_19;
  }
  sub_23E1E7C64(v149, &qword_254333F50);
LABEL_53:
  v100 = v133[22];
  v101 = *(unsigned __int16 *)(v131 + v100);
  v102 = *(unsigned __int16 *)(v132 + v100);
  if ((~v101 & 0xFEFC) != 0)
  {
    v160[0] = v101;
    if ((~v102 & 0xFEFC) == 0)
      return 0;
    v159 = v102;
    if ((_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(v160, &v159) & 1) == 0)
      return 0;
  }
  else if ((~v102 & 0xFEFC) != 0)
  {
    return 0;
  }
  v103 = v133[23];
  v104 = (_QWORD *)(v131 + v103);
  v105 = *(_QWORD *)(v131 + v103 + 8);
  v106 = (_QWORD *)(v132 + v103);
  v107 = v106[1];
  if (!v105)
  {
    v109 = v132;
    v110 = v131;
    v111 = v133;
    if (v107)
      return 0;
LABEL_66:
    v114 = v111[24];
    v115 = *(_QWORD *)(v109 + v114);
    if (*(_QWORD *)(v110 + v114))
    {
      if (!v115)
        return 0;
      swift_bridgeObjectRetain();
      v116 = swift_bridgeObjectRetain();
      v117 = sub_23E1F3D38(v116, v115);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v117 & 1) == 0)
        return 0;
    }
    else if (v115)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(v131 + v133[25]) != *(unsigned __int8 *)(v132 + v133[25]))
      return 0;
    v118 = v133;
    v119 = v138;
    sub_23E1E7C20(v131 + v133[26], v138, &qword_2543332B8);
    v120 = v137;
    sub_23E1E7C20(v132 + v118[26], v137, &qword_2543332B8);
    v121 = v142;
    v122 = v142 + *(int *)(v135 + 48);
    sub_23E1E7C20(v119, v142, &qword_2543332B8);
    sub_23E1E7C20(v120, v122, &qword_2543332B8);
    v123 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
    if (v123(v121, 1, v140) == 1)
    {
      sub_23E1E7C64(v137, &qword_2543332B8);
      sub_23E1E7C64(v138, &qword_2543332B8);
      if (v123(v122, 1, v140) == 1)
      {
        sub_23E1E7C64(v142, &qword_2543332B8);
LABEL_80:
        if (*(unsigned __int8 *)(v131 + v133[27]) == *(unsigned __int8 *)(v132 + v133[27])
          && *(unsigned __int8 *)(v131 + v133[28]) == *(unsigned __int8 *)(v132 + v133[28]))
        {
          v128 = v133[29];
          v129 = *(_QWORD *)(v131 + v128);
          v130 = *(_QWORD *)(v132 + v128);
          if (v129)
          {
            if (v130 && (sub_23E3361B8(v129, v130) & 1) != 0)
              return 1;
          }
          else if (!v130)
          {
            return 1;
          }
        }
        return 0;
      }
      goto LABEL_77;
    }
    sub_23E1E7C20(v142, v141, &qword_2543332B8);
    if (v123(v122, 1, v140) == 1)
    {
      sub_23E1E7C64(v137, &qword_2543332B8);
      sub_23E1E7C64(v138, &qword_2543332B8);
      sub_23E1E2FA0(v141, type metadata accessor for StaticSoftwareUpdate);
LABEL_77:
      v59 = &qword_2543332C0;
      v60 = v142;
      goto LABEL_19;
    }
    sub_23E1E2FDC(v122, v139, type metadata accessor for StaticSoftwareUpdate);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    {
      sub_23E1E2FA0(v139, type metadata accessor for StaticSoftwareUpdate);
      sub_23E1E7C64(v137, &qword_2543332B8);
      sub_23E1E7C64(v138, &qword_2543332B8);
      sub_23E1E2FA0(v141, type metadata accessor for StaticSoftwareUpdate);
      v60 = v142;
      v59 = &qword_2543332B8;
      goto LABEL_19;
    }
    v124 = v141;
    v125 = v139;
    _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(v141 + *(int *)(v140 + 20), v139 + *(int *)(v140 + 20));
    v127 = v126;
    sub_23E1E2FA0(v125, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64(v137, &qword_2543332B8);
    sub_23E1E7C64(v138, &qword_2543332B8);
    sub_23E1E2FA0(v124, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64(v142, &qword_2543332B8);
    if ((v127 & 1) != 0)
      goto LABEL_80;
    return 0;
  }
  if (!v107)
    return 0;
  v108 = *v104 == *v106;
  v109 = v132;
  v110 = v131;
  v111 = v133;
  if (v108 && v105 == v107)
    goto LABEL_66;
  v112 = sub_23E538354();
  v111 = v133;
  v113 = v112;
  result = 0;
  if ((v113 & 1) != 0)
    goto LABEL_66;
  return result;
}

uint64_t sub_23E1F8470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  result = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v14 = 0;
    v15 = *(_QWORD *)(a1 + 56);
    v34 = a1;
    v35 = a1 + 56;
    v16 = 1 << *(_BYTE *)(a1 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v15;
    v36 = (unint64_t)(v16 + 63) >> 6;
    v39 = a2 + 56;
    v33 = v13;
    if (!v18)
      goto LABEL_8;
LABEL_7:
    v38 = (v18 - 1) & v18;
    for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v14 << 6))
    {
      v23 = *(_QWORD *)(v5 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      v24(v13, *(_QWORD *)(a1 + 48) + v23 * i, v4);
      v25 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
        return v25;
      v37 = v14;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v40, v13, v4);
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v26 = sub_23E5374CC();
      v27 = -1 << *(_BYTE *)(a2 + 32);
      v28 = v26 & ~v27;
      if (((*(_QWORD *)(v39 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
        break;
      v29 = a2;
      v30 = ~v27;
      while (1)
      {
        v24(v8, *(_QWORD *)(v29 + 48) + v28 * v23, v4);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v31 = sub_23E537514();
        v32 = *(void (**)(char *, uint64_t))(v5 + 8);
        v32(v8, v4);
        if ((v31 & 1) != 0)
          break;
        v28 = (v28 + 1) & v30;
        if (((*(_QWORD *)(v39 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
          goto LABEL_32;
      }
      result = ((uint64_t (*)(char *, uint64_t))v32)(v40, v4);
      a2 = v29;
      v13 = v33;
      a1 = v34;
      v14 = v37;
      v18 = v38;
      if (v38)
        goto LABEL_7;
LABEL_8:
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return result;
      }
      if (v20 >= v36)
        goto LABEL_35;
      v21 = *(_QWORD *)(v35 + 8 * v20);
      ++v14;
      if (!v21)
      {
        v14 = v20 + 1;
        if (v20 + 1 >= v36)
          goto LABEL_35;
        v21 = *(_QWORD *)(v35 + 8 * v14);
        if (!v21)
        {
          v14 = v20 + 2;
          if (v20 + 2 >= v36)
            goto LABEL_35;
          v21 = *(_QWORD *)(v35 + 8 * v14);
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v36)
            {
LABEL_35:
              v25 = 1;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
              return v25;
            }
            v21 = *(_QWORD *)(v35 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v14 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_37;
                if (v14 >= v36)
                  goto LABEL_35;
                v21 = *(_QWORD *)(v35 + 8 * v14);
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v14 = v22;
          }
        }
      }
LABEL_21:
      v38 = (v21 - 1) & v21;
    }
    v32 = *(void (**)(char *, uint64_t))(v5 + 8);
LABEL_32:
    v32(v40, v4);
  }
  return 0;
}

uint64_t sub_23E1F8844(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254332740, &qword_254332738, (uint64_t (*)(uint64_t, uint64_t))static StaticService.== infix(_:_:));
}

uint64_t _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    goto LABEL_38;
  v4 = (int *)type metadata accessor for StaticDeviceMetadata();
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (v7)
  {
    if (!v9)
      goto LABEL_38;
    if (*v6 != *v8 || v7 != v9)
    {
      v11 = sub_23E538354();
      v12 = 0;
      if ((v11 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v9)
  {
    goto LABEL_38;
  }
  v13 = v4[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  if (v15)
  {
    if (!v17)
      goto LABEL_38;
    if (*v14 != *v16 || v15 != v17)
    {
      v19 = sub_23E538354();
      v12 = 0;
      if ((v19 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v17)
  {
    goto LABEL_38;
  }
  v20 = v4[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  if (v22)
  {
    if (!v24)
      goto LABEL_38;
    if (*v21 != *v23 || v22 != v24)
    {
      v26 = sub_23E538354();
      v12 = 0;
      if ((v26 & 1) == 0)
        return v12 & 1;
    }
  }
  else if (v24)
  {
    goto LABEL_38;
  }
  v27 = v4[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = *(_QWORD *)(a1 + v27 + 8);
  v30 = (_QWORD *)(a2 + v27);
  v31 = v30[1];
  if (!v29)
  {
    if (!v31)
      goto LABEL_36;
LABEL_38:
    v12 = 0;
    return v12 & 1;
  }
  if (!v31)
    goto LABEL_38;
  if (*v28 == *v30 && v29 == v31 || (v32 = sub_23E538354(), v12 = 0, (v32 & 1) != 0))
  {
LABEL_36:
    if (*(unsigned __int8 *)(a1 + v4[9]) == *(unsigned __int8 *)(a2 + v4[9])
      && *(unsigned __int8 *)(a1 + v4[10]) == *(unsigned __int8 *)(a2 + v4[10]))
    {
      v12 = *(_BYTE *)(a1 + v4[11]) ^ *(_BYTE *)(a2 + v4[11]) ^ 1;
      return v12 & 1;
    }
    goto LABEL_38;
  }
  return v12 & 1;
}

uint64_t _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v26;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v26 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 48)];
  sub_23E1E2F50(a1, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E2F50(a2, (uint64_t)v18, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23E1E2F50((uint64_t)v17, (uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v22 = *v13;
    v21 = v13[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v22 == *(_QWORD *)v18 && v21 == *((_QWORD *)v18 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v24 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
          goto LABEL_8;
        }
      }
      sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v19 = 1;
      return v19 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    sub_23E1E7C64((uint64_t)v17, &qword_254333228);
LABEL_8:
    v19 = 0;
    return v19 & 1;
  }
  sub_23E1E2F50((uint64_t)v17, (uint64_t)v11, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
  v19 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
  sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return v19 & 1;
}

uint64_t _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  int *v4;

  if ((sub_23E262810(*a1, *a2) & 1) != 0
    && (v4 = (int *)type metadata accessor for StateSnapshot(0),
        (static StaticHome.== infix(_:_:)((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) != 0)
    && (sub_23E1F8F8C(*(uint64_t *)((char *)a1 + v4[6]), *(uint64_t *)((char *)a2 + v4[6])) & 1) != 0
    && (sub_23E2B2790(*(uint64_t *)((char *)a1 + v4[7]), *(uint64_t *)((char *)a2 + v4[7])) & 1) != 0
    && (sub_23E1F8F68(*(uint64_t *)((char *)a1 + v4[8]), *(uint64_t *)((char *)a2 + v4[8])) & 1) != 0
    && (sub_23E1F4B54(*(uint64_t *)((char *)a1 + v4[9]), *(uint64_t *)((char *)a2 + v4[9])) & 1) != 0
    && (sub_23E2B2DA8(*(uint64_t *)((char *)a1 + v4[10]), *(uint64_t *)((char *)a2 + v4[10])) & 1) != 0
    && (sub_23E1F4B30(*(uint64_t *)((char *)a1 + v4[11]), *(uint64_t *)((char *)a2 + v4[11])) & 1) != 0
    && (sub_23E2B2DCC(*(uint64_t *)((char *)a1 + v4[12]), *(uint64_t *)((char *)a2 + v4[12])) & 1) != 0
    && (sub_23E2B2DF0(*(uint64_t *)((char *)a1 + v4[13]), *(uint64_t *)((char *)a2 + v4[13])) & 1) != 0
    && (sub_23E1F45A0(*(uint64_t *)((char *)a1 + v4[14]), *(uint64_t *)((char *)a2 + v4[14])) & 1) != 0
    && (sub_23E1F8844(*(uint64_t *)((char *)a1 + v4[15]), *(uint64_t *)((char *)a2 + v4[15])) & 1) != 0
    && (sub_23E2B2E14(*(uint64_t *)((char *)a1 + v4[16]), *(uint64_t *)((char *)a2 + v4[16])) & 1) != 0
    && sub_23E2629DC(*(uint64_t *)((char *)a1 + v4[17]), *(uint64_t *)((char *)a2 + v4[17]))
    && (sub_23E2B32F0(*(uint64_t *)((char *)a1 + v4[18]), *(uint64_t *)((char *)a2 + v4[18])) & 1) != 0)
  {
    return sub_23E2B3898(*(uint64_t *)((char *)a1 + v4[19]), *(uint64_t *)((char *)a2 + v4[19]));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E1F8E2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_23E1E2F50(a1 + v16, (uint64_t)v14, a3);
        sub_23E1E2F50(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_23E1E2FA0((uint64_t)v11, a3);
        sub_23E1E2FA0((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_23E1F8F68(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, type metadata accessor for StaticAccessory, &qword_254332748, &qword_254333100, _s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_23E1F8F8C(uint64_t a1, uint64_t a2)
{
  return sub_23E1F8E2C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, (uint64_t (*)(char *, char *))static StaticHome.== infix(_:_:));
}

uint64_t sub_23E1F8FA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254332C88, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  *v3 = result;
  return result;
}

uint64_t sub_23E1F8FD0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v0 = type metadata accessor for StaticRoom(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for StaticHome();
  __swift_allocate_value_buffer((uint64_t)v7, qword_254334C48);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_254334C48);
  if (qword_254333B70 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_254334C08);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_2543340B0 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v0, (uint64_t)qword_254333F20);
  sub_23E1E2F50(v10, (uint64_t)v2, type metadata accessor for StaticRoom);
  if (qword_254334178 != -1)
    swift_once();
  v11 = type metadata accessor for StaticUser();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_254334C70);
  sub_23E1E2F50(v12, v8 + v7[7], (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  v13 = v8 + v7[20];
  v14 = type metadata accessor for StaticResident();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v6, v3);
  v15 = (_QWORD *)(v8 + v7[5]);
  *v15 = 0;
  v15[1] = 0xE000000000000000;
  result = sub_23E1E2FDC((uint64_t)v2, v8 + v7[6], type metadata accessor for StaticRoom);
  *(_BYTE *)(v8 + v7[8]) = 0;
  *(_BYTE *)(v8 + v7[9]) = 0;
  *(_BYTE *)(v8 + v7[10]) = 0;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + v7[11]) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + v7[12]) = v17;
  *(_QWORD *)(v8 + v7[13]) = v17;
  *(_QWORD *)(v8 + v7[14]) = v17;
  *(_QWORD *)(v8 + v7[15]) = v17;
  *(_QWORD *)(v8 + v7[18]) = 0;
  *(_QWORD *)(v8 + v7[16]) = v17;
  *(_BYTE *)(v8 + v7[17]) = 1;
  *(_BYTE *)(v8 + v7[19]) = 1;
  return result;
}

uint64_t sub_23E1F925C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_254332C80, &qword_254333F58);
  *v3 = result;
  return result;
}

uint64_t sub_23E1F9288(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254332C90, type metadata accessor for StaticRoom);
  *v3 = result;
  return result;
}

uint64_t sub_23E1F93C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1F93EC(a1, *(_QWORD *)(v1 + 16), &qword_254334B68, &qword_254334B60);
}

uint64_t sub_23E1F93EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_23E1E7C64(a2, a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_23E1F945C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char **, _QWORD);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char *v29;

  v3 = v2;
  v26 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DE8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333E00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DE0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27(v14, a1, v11);
  sub_23E1F9710(&qword_254333DF0, &qword_254333E00, MEMORY[0x24BEE3148]);
  sub_23E5376C4();
  v18 = &v17[*(int *)(v15 + 36)];
  sub_23E1F9710(&qword_254333DF8, &qword_254333E00, MEMORY[0x24BEE3150]);
  v29 = v18;
  v25 = *(char **)v18;
  sub_23E537A90();
  if (v25 != v28)
  {
    v25 = v14;
    do
    {
      v19 = (void (*)(char **, _QWORD))sub_23E537AB4();
      sub_23E1E7C20(v20, (uint64_t)v10, &qword_254333DE8);
      v19(&v28, 0);
      v21 = v25;
      v27(v25, (uint64_t)v17, v11);
      sub_23E537A9C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
      sub_23E204494((uint64_t)v10, (uint64_t)v8);
      sub_23E2098F8((uint64_t)v8, v26);
      sub_23E1E7C64((uint64_t)v8, &qword_254333DE8);
      if (v3)
        break;
      v22 = *(char **)v29;
      sub_23E537A90();
      v3 = 0;
    }
    while (v22 != v28);
  }
  return sub_23E1E7C64((uint64_t)v17, &qword_254333DE0);
}

uint64_t sub_23E1F9710(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24264FDE4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24264FDD8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23E1F9794()
{
  unint64_t *v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t *v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  uint64_t (*v25)(uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  unint64_t *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  unint64_t *v38;
  unint64_t *v39;

  v1 = v0;
  v36 = sub_23E536F80();
  v2 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333E00);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = objc_msgSend(v0, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v13 = sub_23E5377F0();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v34 = v11;
  v35 = v5;
  v32 = v9;
  v33 = v6;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v17 = (unint64_t *)MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_getKeyPath();
    v39 = v1;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    v23 = swift_bridgeObjectRetain();
    v24 = sub_23E204234(v23);
    swift_bridgeObjectRelease();
    v37 = v24;
    v38 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E1F9710(&qword_254333DC8, &qword_254333DC0, MEMORY[0x24BEE12B0]);
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v26 = v32;
    sub_23E5374E4();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23E1EE1C4(&qword_254333DA0, v25, MEMORY[0x24BDCEA88]);
    v28 = (uint64_t)v34;
    v27 = v35;
    sub_23E538084();
    v29 = *(void (**)(char *, uint64_t))(v33 + 8);
    v29(v26, v27);
    v30 = v1;
    sub_23E1F945C(v28, v30);

    return ((uint64_t (*)(uint64_t, uint64_t))v29)(v28, v27);
  }
  v39 = (unint64_t *)MEMORY[0x24BEE4AF8];
  result = sub_23E2058F8(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v31 = v1;
    v16 = 0;
    v17 = v39;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x24264F148](v16, v13);
      else
        v18 = *(id *)(v13 + 8 * v16 + 32);
      v19 = v18;
      v20 = objc_msgSend(v18, sel_uniqueIdentifier, v31);
      sub_23E536F68();

      v39 = v17;
      v22 = v17[2];
      v21 = v17[3];
      if (v22 >= v21 >> 1)
      {
        sub_23E2058F8(v21 > 1, v22 + 1, 1);
        v17 = v39;
      }
      ++v16;
      v17[2] = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v22, v4, v36);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    v1 = v31;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E1F9B94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_release();
  sub_23E201B18(v1);
  return swift_task_switch();
}

uint64_t sub_23E1F9BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_23E5371A8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E537148();
  __swift_allocate_value_buffer(v4, qword_254334B90);
  __swift_project_value_buffer(v4, (uint64_t)qword_254334B90);
  if (qword_254333DB8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_254333D88);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_23E537118();
}

char *DataModel.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  void (**v34)(char *, uint64_t, uint64_t);
  id v35;
  void **v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD *v43;
  void *v44;
  id v45;
  objc_class *v46;
  char *v47;
  void **v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v58;
  void **v59;
  void (**v60)(char *, uint64_t, uint64_t);
  objc_super v61;
  void *v62;
  NSObject *v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v1);
  v58 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  v60 = *(void (***)(char *, uint64_t, uint64_t))(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_2543342C8;
  v14 = v0;
  if (v13 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_254333F38);
  sub_23E1E2F50(v15, (uint64_t)v12, type metadata accessor for StateSnapshot);
  sub_23E1FDC80((uint64_t)v12, (uint64_t)v14 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot);
  v16 = MEMORY[0x24BEE4AF8];
  *(Class *)((char *)&v14->isa + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots) = (Class)sub_23E2073DC(MEMORY[0x24BEE4AF8]);
  if (qword_254333538 != -1)
    swift_once();
  v17 = unk_254334BF0;
  v18 = qword_254334BF8;
  v19 = unk_254334C00;
  v20 = (char *)v14 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  *(_QWORD *)v20 = qword_254334BE8;
  *((_QWORD *)v20 + 1) = v17;
  *((_QWORD *)v20 + 2) = v18;
  *((_QWORD *)v20 + 3) = v19;
  v21 = OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(Class *)((char *)&v14->isa + v21) = (Class)sub_23E20D904(v16);
  v59 = (void **)((char *)&v14->isa + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  *(Class *)((char *)&v14->isa + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager) = 0;
  *(Class *)((char *)&v14->isa + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome) = 0;
  v22 = OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator;
  type metadata accessor for PhoenixMetricsAggregator();
  v23 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23E537FB8();
  v24 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  *(_QWORD *)(v23 + v24) = sub_23E2072B0(v16);
  *(_QWORD *)(v23 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v16;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  *(Class *)((char *)&v14->isa + v22) = (Class)v23;
  v25 = OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager;
  if (qword_254334090 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v6, (uint64_t)qword_254333F00);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v26, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333CB8);
  swift_allocObject();
  *(Class *)((char *)&v14->isa + v25) = (Class)sub_23E2D739C((uint64_t)"SnapshotBatchManager", 20, 2, (uint64_t)v9, (uint64_t *)&unk_254334B50, &qword_254334B60, &qword_254334B78, (void (*)(char *, char *, _QWORD *))sub_23E1FABBC);
  v27 = OBJC_IVAR____TtC13HomeDataModel9DataModel_matterSnapshotBatchManager;
  if (qword_254333BB0 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v3, (uint64_t)qword_254333B40);
  v60[2](v5, v28, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333CC0);
  swift_allocObject();
  *(Class *)((char *)&v14->isa + v27) = (Class)sub_23E2D739C((uint64_t)"MatterSnapshotBatchManager", 26, 2, (uint64_t)v5, (uint64_t *)&unk_254333D50, &qword_254333D60, &qword_254333D70, (void (*)(char *, char *, _QWORD *))sub_23E300EB8);
  v29 = OBJC_IVAR____TtC13HomeDataModel9DataModel_incomingHomeKitMessagesQueue;
  v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1710]), sel_init);
  v31 = (void *)sub_23E537538();
  objc_msgSend(v30, sel_setName_, v31);

  objc_msgSend(v30, sel_setMaxConcurrentOperationCount_, 1);
  *(Class *)((char *)&v14->isa + v29) = (Class)v30;
  v32 = MEMORY[0x24BEE4AF8];
  *(Class *)((char *)&v14->isa
           + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary) = (Class)sub_23E2072D4(MEMORY[0x24BEE4AF8]);
  *(Class *)((char *)&v14->isa + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary) = (Class)sub_23E2072E8(v32);
  sub_23E537094();
  swift_beginAccess();
  v33 = v14;
  if (qword_254333470)
  {
    v34 = (void (**)(char *, uint64_t, uint64_t))(id)qword_254333470;
    objc_msgSend(v34, sel_mutableCopy);
    sub_23E537D24();
    swift_unknownObjectRelease();
    sub_23E1E335C(0, (unint64_t *)&unk_256D437C0);
    swift_dynamicCast();
    v33 = v63;
    -[NSObject setDelegateQueue:](v63, sel_setDelegateQueue_, *(Class *)((char *)&v14->isa + v29));
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, v33);
    v36 = v59;
    swift_beginAccess();
    v37 = *v36;
    *v36 = v35;

    if (qword_254333DB8 != -1)
      swift_once();
    v38 = sub_23E5371A8();
    __swift_project_value_buffer(v38, (uint64_t)qword_254333D88);
    v39 = v14;
    v40 = sub_23E537190();
    v41 = sub_23E537B20();
    if (os_log_type_enabled(v40, v41))
    {
      v60 = v34;
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v42 = 138412290;
      v44 = *v36;
      if (v44)
      {
        v59 = (void **)(v42 + 12);
        v62 = v44;
        v45 = v44;
      }
      else
      {
        v62 = 0;
      }
      sub_23E537CF4();
      *v43 = v44;

      _os_log_impl(&dword_23E1DF000, v40, v41, "self.homeManager is %@", v42, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v43, -1, -1);
      MEMORY[0x24264FEBC](v42, -1, -1);
      v39 = v40;
      v34 = v60;
    }
    else
    {

      v33 = v40;
    }

  }
  v46 = (objc_class *)type metadata accessor for DataModel();
  v61.receiver = v14;
  v61.super_class = v46;
  v47 = (char *)objc_msgSendSuper2(&v61, sel_init);
  swift_beginAccess();
  if (qword_254333510 != 3)
  {
    if (qword_254333470
      && (v48 = (void **)&v47[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager],
          swift_beginAccess(),
          (v49 = *v48) != 0))
    {
      objc_msgSend(v49, sel_setDelegate_, v47);
    }
    else
    {
      v50 = v47;
    }
    sub_23E20A9B4();
    sub_23E32744C();
    v51 = sub_23E537934();
    v52 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v58, 1, 1, v51);
    sub_23E5378F8();
    v53 = v47;
    v54 = sub_23E5378EC();
    v55 = (_QWORD *)swift_allocObject();
    v56 = MEMORY[0x24BEE6930];
    v55[2] = v54;
    v55[3] = v56;
    v55[4] = v53;
    sub_23E26D014(v52, (uint64_t)&unk_256D41E58, (uint64_t)v55);
    swift_release();

  }
  return v47;
}

uint64_t sub_23E1FA550()
{
  int *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v0 = (int *)type metadata accessor for StateSnapshot(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_254333F38);
  v1 = (_QWORD *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_254333F38);
  if (qword_2543331D8 != -1)
    swift_once();
  v2 = qword_254333FB8;
  v19 = qword_2543331D0;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = type metadata accessor for StaticHome();
  v17 = __swift_project_value_buffer(v3, (uint64_t)qword_254334C48);
  v4 = MEMORY[0x24BEE4AF8];
  v18 = sub_23E20D384(MEMORY[0x24BEE4AF8]);
  v16 = sub_23E207388(v4);
  v15 = sub_23E20736C(v4);
  v14 = sub_23E20D368(v4);
  v13 = sub_23E207334(v4);
  v5 = sub_23E207318(v4);
  v6 = sub_23E207414(v4);
  v7 = sub_23E2072FC(v4);
  v8 = sub_23E2073C0(v4);
  v9 = sub_23E2073F8(v4);
  v10 = sub_23E207350(v4);
  v11 = sub_23E2073A4(v4);
  *v1 = v19;
  result = sub_23E1E2F50(v17, (uint64_t)v1 + v0[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  *(_QWORD *)((char *)v1 + v0[6]) = v4;
  *(_QWORD *)((char *)v1 + v0[7]) = v18;
  *(_QWORD *)((char *)v1 + v0[8]) = v16;
  *(_QWORD *)((char *)v1 + v0[9]) = v15;
  *(_QWORD *)((char *)v1 + v0[10]) = v14;
  *(_QWORD *)((char *)v1 + v0[11]) = v13;
  *(_QWORD *)((char *)v1 + v0[12]) = v5;
  *(_QWORD *)((char *)v1 + v0[13]) = v6;
  *(_QWORD *)((char *)v1 + v0[14]) = v7;
  *(_QWORD *)((char *)v1 + v0[15]) = v8;
  *(_QWORD *)((char *)v1 + v0[16]) = v9;
  *(_QWORD *)((char *)v1 + v0[17]) = v4;
  *(_QWORD *)((char *)v1 + v0[18]) = v10;
  *(_QWORD *)((char *)v1 + v0[19]) = v11;
  return result;
}

uint64_t sub_23E1FA770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254334B50);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  __swift_allocate_value_buffer(v4, qword_254333F00);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_254333F00);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_allocate_value_buffer(v6, qword_254333EE8);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_254333EE8);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE6A10], v0);
  sub_23E1FABBC(v5, v7, (uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23E1FA874()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  os_signpost_id_t v16;
  uint64_t v18;

  v1 = sub_23E537130();
  sub_23E537160();
  v2 = sub_23E537B8C();
  if ((sub_23E537CA0() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 232);
    v3 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 224);
    swift_retain();
    sub_23E537184();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x24BEE7810])
    {
      v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v6 = "";
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    v18 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 352);
    v13 = *(_QWORD *)(v0 + 328);
    v14 = *(_QWORD *)(v0 + 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520))(v12, v13, v14);
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v1, v2, v16, "Pushing iteration to DataModel", v6, v15, 2u);
    MEMORY[0x24264FEBC](v15, -1, -1);

    swift_release();
    v11(v13, v14);
    sub_23E1E7C64(v18, &qword_254334340);
    swift_release();
    v11(v12, v14);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    v8 = *(_QWORD *)(v0 + 496);
    v9 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 312);

    swift_release();
    v7(v9, v10);
    sub_23E1E7C64(v8, &qword_254334340);
    swift_release();
  }
  sub_23E1FDC80(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 184));
  sub_23E22D1F8((uint64_t)sub_23E2E0A20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 504));
}

uint64_t sub_23E1FABBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;

  v20 = a2;
  v21 = a3;
  v22 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254334B50);
  v4 = *(_QWORD *)(v3 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  v8 = *(_QWORD *)(v7 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B68);
  v11 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v19 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v21, v3);
  v23 = v15;
  type metadata accessor for StateSnapshot.UpdateType(0);
  sub_23E537988();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v22, v10, v7);
  sub_23E1E7C20((uint64_t)v15, (uint64_t)v13, &qword_254334B68);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v13, v16);
    return sub_23E1E7C64((uint64_t)v15, &qword_254334B68);
  }
  return result;
}

uint64_t DataModel.refresh(for:)(uint64_t a1)
{
  uint64_t updated;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v14[3];
  uint64_t v15;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v4 = (_QWORD *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_254333DB8 != -1)
    swift_once();
  v5 = sub_23E5371A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_254333D88);
  swift_bridgeObjectRetain_n();
  v6 = sub_23E537190();
  v7 = sub_23E537B20();
  if (os_log_type_enabled(v6, v7))
  {
    v14[1] = updated;
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136315138;
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    sub_23E1FB040();
    swift_bridgeObjectRetain();
    v10 = sub_23E537A18();
    v12 = v11;
    swift_bridgeObjectRelease();
    v14[2] = sub_23E1FD768(v10, v12, &v15);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v6, v7, "on device update for: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44E08);
  v4[4] = sub_23E1F9710((unint64_t *)&unk_256D44E10, &qword_256D44E08, MEMORY[0x24BEE1718]);
  *v4 = a1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_23E1FE798((uint64_t)v4);
  return sub_23E1E2FA0((uint64_t)v4, type metadata accessor for StateSnapshot.UpdateType);
}

unint64_t sub_23E1FB040()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D44E20;
  if (!qword_256D44E20)
  {
    v1 = sub_23E1E335C(255, (unint64_t *)&qword_254333358);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256D44E20);
  }
  return result;
}

uint64_t sub_23E1FB098(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s8IntervalVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - v10;
  sub_23E1E2F50(a1, (uint64_t)&v20 - v10, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  v12 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0) + 20);
  v13 = &v11[*(int *)(v5 + 20)];
  v14 = sub_23E537FAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
  sub_23E537F88();
  v15 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  v16 = swift_allocObject();
  swift_weakInit();
  sub_23E1E2F50((uint64_t)v11, (uint64_t)v9, _s8IntervalVMa);
  v17 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v16;
  sub_23E1E2FDC((uint64_t)v9, (uint64_t)v18 + v17, _s8IntervalVMa);
  sub_23E26D160((uint64_t)v4, (uint64_t)&unk_256D41320, (uint64_t)v18);
  swift_release();
  return sub_23E1E2FA0((uint64_t)v11, _s8IntervalVMa);
}

uint64_t sub_23E1FB28C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E1FB2CC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v3 = *v1;
  v4 = _s8IntervalVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - v9;
  v11 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v40 - v15);
  sub_23E1E2F50((uint64_t)a1, (uint64_t)&v40 - v15, v17);
  v18 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer);
  swift_beginAccess();
  v19 = *v18;
  v20 = *(_QWORD *)(*v18 + 16);
  swift_bridgeObjectRetain();
  if (v20 && (v21 = sub_23E1FB994(v16), (v22 & 1) != 0))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  swift_bridgeObjectRetain();
  v24 = sub_23E1FBF14(a1, v23);
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    return swift_bridgeObjectRelease();
  sub_23E1E2F50((uint64_t)a1, (uint64_t)v10, _s8IntervalVMa);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_23E1FBF00(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
  v27 = *(_QWORD *)(v23 + 16);
  v26 = *(_QWORD *)(v23 + 24);
  if (v27 >= v26 >> 1)
    v23 = sub_23E1FBF00(v26 > 1, v27 + 1, 1, v23);
  v42 = v3;
  *(_QWORD *)(v23 + 16) = v27 + 1;
  sub_23E1E2FDC((uint64_t)v10, v23+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, _s8IntervalVMa);
  if (qword_254333D40 != -1)
    swift_once();
  v28 = sub_23E5371A8();
  __swift_project_value_buffer(v28, (uint64_t)qword_254333540);
  sub_23E1E2F50((uint64_t)a1, (uint64_t)v8, _s8IntervalVMa);
  v29 = sub_23E537190();
  v30 = sub_23E537AFC();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v41 = v14;
    v32 = v31;
    v40 = swift_slowAlloc();
    v44[0] = v40;
    *(_DWORD *)v32 = 136315394;
    v33 = sub_23E538588();
    v43 = sub_23E1FD768(v33, v34, v44);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    v35 = sub_23E228398();
    v43 = sub_23E1FD768(v35, v36, v44);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v8, _s8IntervalVMa);
    _os_log_impl(&dword_23E1DF000, v29, v30, "%s adding interval %s", (uint8_t *)v32, 0x16u);
    v37 = v40;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v37, -1, -1);
    v38 = v32;
    v14 = v41;
    MEMORY[0x24264FEBC](v38, -1, -1);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v8, _s8IntervalVMa);
  }

  sub_23E1E2F50((uint64_t)a1, (uint64_t)v14, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = *v18;
  *v18 = 0x8000000000000000;
  sub_23E1FB808(v23, v14, isUniquelyReferenced_nonNull_native);
  *v18 = v43;
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v14, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return swift_endAccess();
}

uint64_t sub_23E1FB740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23E537FAC();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v10(v7, v8);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1 + *(int *)(a2 + 24), v8);
}

uint64_t sub_23E1FB808(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23E1FB994(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_23E221A08(type metadata accessor for PhoenixMetricsAggregator.IntervalKey, &qword_2543326B0);
    goto LABEL_7;
  }
  sub_23E204F1C(v16, a3 & 1, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, &qword_2543326B0, (uint64_t (*)(char *, uint64_t, uint64_t))sub_23E21C564);
  v22 = sub_23E1FB994(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23E1E2F50((uint64_t)a2, (uint64_t)v10, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return sub_23E2047C4(v13, (uint64_t)v10, a1, v19, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

unint64_t sub_23E1FB994(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1E7C20((uint64_t)a1 + *(int *)(v9 + 20), (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = sub_23E5384A4();
  return sub_23E1FBB24(a1, v10);
}

unint64_t sub_23E1FBB24(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v37 = sub_23E536F80();
  v45 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v39);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - v12;
  v38 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x24BDAC7A8](v38);
  v16 = (char **)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = v2 + 64;
  v43 = v2;
  v17 = -1 << *(_BYTE *)(v2 + 32);
  v18 = a2 & ~v17;
  if (((*(_QWORD *)(v2 + 64 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    return v18;
  v44 = v13;
  v36 = v11;
  v40 = ~v17;
  v41 = *(_QWORD *)(v14 + 72);
  v19 = &qword_254333F50;
  v35 = a1;
  v20 = v37;
  while (1)
  {
    sub_23E1E2F50(*(_QWORD *)(v43 + 48) + v41 * v18, (uint64_t)v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    v21 = *v16 == *a1 && v16[1] == a1[1];
    if (!v21 && (sub_23E538354() & 1) == 0)
      goto LABEL_5;
    v22 = *(int *)(v38 + 20);
    v23 = (uint64_t)v16 + v22;
    v24 = (uint64_t)v44;
    sub_23E1E7C20((uint64_t)a1 + v22, (uint64_t)v44, v19);
    v25 = (uint64_t)&v7[*(int *)(v39 + 48)];
    sub_23E1E7C20(v23, (uint64_t)v7, v19);
    sub_23E1E7C20(v24, v25, v19);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    if (v26(v7, 1, v20) == 1)
      break;
    v27 = (uint64_t)v36;
    sub_23E1E7C20((uint64_t)v7, (uint64_t)v36, v19);
    if (v26((char *)v25, 1, v20) == 1)
    {
      sub_23E1E7C64((uint64_t)v44, v19);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v27, v20);
      a1 = v35;
      goto LABEL_4;
    }
    v28 = v19;
    v29 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v34, v25, v20);
    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v30 = sub_23E537514();
    v31 = *(void (**)(char *, uint64_t))(v45 + 8);
    v32 = v29;
    v19 = v28;
    v31(v32, v20);
    sub_23E1E7C64((uint64_t)v44, v28);
    v31((char *)v27, v20);
    sub_23E1E7C64((uint64_t)v7, v28);
    a1 = v35;
    if ((v30 & 1) != 0)
      goto LABEL_18;
LABEL_5:
    sub_23E1E2FA0((uint64_t)v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    v18 = (v18 + 1) & v40;
    if (((*(_QWORD *)(v42 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return v18;
  }
  sub_23E1E7C64(v24, v19);
  if (v26((char *)v25, 1, v20) != 1)
  {
LABEL_4:
    sub_23E1E7C64((uint64_t)v7, &qword_254332798);
    goto LABEL_5;
  }
  sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
LABEL_18:
  sub_23E1E2FA0((uint64_t)v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return v18;
}

uint64_t sub_23E1FBF00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_2543326F0, _s8IntervalVMa);
}

uint64_t sub_23E1FBF14(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_23E536F80();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v32 - v12;
  v37 = _s8IntervalVMa(0);
  MEMORY[0x24BDAC7A8](v37);
  v16 = (_QWORD *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)(a2 + 16);
  if (!v17)
    return 0;
  v36 = v11;
  v18 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v39 = *(_QWORD *)(v14 + 72);
  v32[1] = a2;
  swift_bridgeObjectRetain();
  v34 = v13;
  v35 = a1;
  do
  {
    sub_23E1E2F50(v18, (uint64_t)v16, _s8IntervalVMa);
    v19 = *v16 == *a1 && v16[1] == a1[1];
    if (!v19 && (sub_23E538354() & 1) == 0)
      goto LABEL_5;
    v20 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    v21 = (uint64_t)v16 + v20;
    sub_23E1FC2F8((uint64_t)a1 + v20, (uint64_t)v13);
    v22 = (uint64_t)&v7[*(int *)(v38 + 48)];
    sub_23E1FC2F8(v21, (uint64_t)v7);
    sub_23E1FC2F8((uint64_t)v13, v22);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    if (v23((uint64_t)v7, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v13, &qword_254333F50);
      if (v23(v22, 1, v4) != 1)
        goto LABEL_4;
      sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
LABEL_16:
      if ((sub_23E537F94() & 1) != 0 && (sub_23E537F94() & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v16, _s8IntervalVMa);
        v30 = 1;
        goto LABEL_20;
      }
      goto LABEL_5;
    }
    v24 = (uint64_t)v36;
    sub_23E1FC2F8((uint64_t)v7, (uint64_t)v36);
    if (v23(v22, 1, v4) == 1)
    {
      v13 = v34;
      sub_23E1E7C64((uint64_t)v34, &qword_254333F50);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v4);
      a1 = v35;
LABEL_4:
      sub_23E1E7C64((uint64_t)v7, &qword_254332798);
      goto LABEL_5;
    }
    v25 = v40;
    v26 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v33, v22, v4);
    sub_23E20BBB0();
    v27 = sub_23E537514();
    v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v26, v4);
    v29 = (uint64_t)v34;
    sub_23E1E7C64((uint64_t)v34, &qword_254333F50);
    v28((char *)v24, v4);
    v13 = (char *)v29;
    sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
    a1 = v35;
    if ((v27 & 1) != 0)
      goto LABEL_16;
LABEL_5:
    sub_23E1E2FA0((uint64_t)v16, _s8IntervalVMa);
    v18 += v39;
    --v17;
  }
  while (v17);
  v30 = 0;
LABEL_20:
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_23E1FC2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E1FC340(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v16 = a1;
  v6 = a1;
  if (a4 >> 62)
    goto LABEL_14;
  v7 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_23E53803C())
  {
    v8 = 4;
    while (1)
    {
      v9 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v8 - 4, a4) : *(id *)(a4 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      a2(&v14, &v16, &v15);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_bridgeObjectRelease();

        return v6;
      }

      v6 = v14;
      v16 = v14;
      ++v8;
      if (v11 == v7)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s11IntervalKeyVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t type metadata accessor for PhoenixMetricsAggregator.OpenInterval(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_2543324B8);
}

unint64_t sub_23E1FC514()
{
  unint64_t result;

  result = qword_254333DD0;
  if (!qword_254333DD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333DD0);
  }
  return result;
}

uint64_t _s12OpenIntervalVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23E537FAC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_23E1FC5F0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  char *v47;
  char *v48;
  char v49;
  char v50;
  uint64_t v51;
  NSObject *v52;
  os_signpost_type_t v53;
  uint64_t result;
  uint64_t v55;
  void (*v56)(_QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t);
  uint8_t *v61;
  os_signpost_id_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  char v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  NSObject *v95;
  os_signpost_type_t v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint8_t *v104;
  os_signpost_id_t v105;
  NSObject *v106;
  os_signpost_type_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD, uint64_t, uint64_t);
  uint8_t *v111;
  os_signpost_id_t v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v125;
  uint64_t v126;
  id v127;
  int v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  uint64_t v132;
  _BOOL8 v133;
  char v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  id v155;
  uint64_t *v156;
  void (*v157)(uint64_t, uint64_t);
  char v158;
  void (*v159)(_QWORD, uint64_t, uint64_t);
  void (*v160)(uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  char v165;
  char *v166;
  void (*v167)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171[2];

  v1 = *(_QWORD *)(v0 + 216);
  v2 = objc_msgSend(*(id *)(v0 + 208), sel_uniqueIdentifier);
  sub_23E536F68();

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v0 + 448);
    swift_bridgeObjectRetain();
    v5 = sub_23E1E3300(v4);
    v6 = *(_QWORD *)(v0 + 496);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    if ((v9 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v3 + 56) + *(_QWORD *)(v8 + 72) * v5, *(_QWORD *)(v0 + 496), type metadata accessor for StateSnapshot);
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v10(v6, 0, 1, v7);
    }
    else
    {
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v10(*(_QWORD *)(v0 + 496), 1, 1, v7);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 280) + 56);
    v10(*(_QWORD *)(v0 + 496), 1, 1, *(_QWORD *)(v0 + 272));
  }
  v11 = *(void **)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 416) + 8);
  v13(*(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 408));
  v14 = objc_msgSend(v11, sel_uniqueIdentifier);
  sub_23E536F68();

  v15 = (uint64_t *)(v12 + 120);
  swift_beginAccess();
  v16 = *(_QWORD *)(v12 + 120);
  if (*(_QWORD *)(v16 + 16))
  {
    v17 = *(_QWORD *)(v0 + 440);
    swift_bridgeObjectRetain();
    v18 = sub_23E1E3300(v17);
    if ((v19 & 1) != 0)
      v20 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
    else
      v20 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  v169 = v20;
  *(_QWORD *)(v0 + 504) = v20;
  v21 = *(_QWORD *)(v0 + 408);
  v22 = *(_QWORD *)(v0 + 416);
  v23 = *(_QWORD *)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 216);
  v13(*(_QWORD *)(v0 + 440), v21);
  v25 = v24 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  swift_beginAccess();
  sub_23E1E7C20(v25, v23, &qword_254333F50);
  LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21);
  sub_23E1E7C64(v23, &qword_254333F50);
  if ((_DWORD)v21 != 1)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v43 = sub_23E5371A8();
    __swift_project_value_buffer(v43, (uint64_t)qword_254333D88);
    v44 = sub_23E537190();
    v45 = sub_23E537B20();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_23E1DF000, v44, v45, "loading freeze dried home!!", v46, 2u);
      MEMORY[0x24264FEBC](v46, -1, -1);
    }

    *(_QWORD *)(v0 + 592) = sub_23E5378F8();
    *(_QWORD *)(v0 + 600) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  v156 = v15;
  if (qword_254333DB8 != -1)
    swift_once();
  v26 = *(_QWORD *)(v0 + 392);
  v27 = *(void **)(v0 + 208);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = sub_23E5371A8();
  __swift_project_value_buffer(v29, (uint64_t)qword_254333D88);
  sub_23E1E2F50(v28, v26, type metadata accessor for StateSnapshot.UpdateType);
  v30 = v27;
  v31 = sub_23E537190();
  v32 = sub_23E537B20();
  v33 = os_log_type_enabled(v31, v32);
  v34 = *(_QWORD *)(v0 + 392);
  v35 = *(void **)(v0 + 208);
  v167 = v10;
  v157 = v13;
  if (v33)
  {
    v36 = swift_slowAlloc();
    v168 = swift_slowAlloc();
    v171[0] = v168;
    *(_DWORD *)v36 = 136315650;
    v37 = objc_msgSend(v35, sel_name);
    v38 = sub_23E53755C();
    v40 = v39;

    *(_QWORD *)(v0 + 160) = sub_23E1FD768(v38, v40, v171);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v36 + 12) = 2048;
    *(_QWORD *)(v0 + 168) = v169;
    sub_23E537CF4();
    *(_WORD *)(v36 + 22) = 2080;
    StateSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v0 + 176) = sub_23E1FD768(v41, v42, v171);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v34, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_23E1DF000, v31, v32, "new snapshot for '%s' iteration %ld, %s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v168, -1, -1);
    MEMORY[0x24264FEBC](v36, -1, -1);
  }
  else
  {

    sub_23E1E2FA0(v34, type metadata accessor for StateSnapshot.UpdateType);
  }

  StateSnapshot.UpdateType.signpostID.getter();
  v48 = v47;
  v50 = v49;
  if (qword_2543327F8 != -1)
    swift_once();
  v51 = sub_23E537148();
  *(_QWORD *)(v0 + 512) = __swift_project_value_buffer(v51, (uint64_t)qword_254334B90);
  sub_23E537100();
  v52 = sub_23E537130();
  v53 = sub_23E537B98();
  result = sub_23E537CA0();
  v166 = v48;
  v158 = v50;
  if ((result & 1) != 0)
  {
    if ((v50 & 1) != 0)
    {
      if ((unint64_t)v48 >> 32)
      {
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      if (v48 >> 11 == 27)
      {
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      if (v48 >> 16 > 0x10)
        goto LABEL_83;
      v48 = sub_23E3F2CBC();
    }
    else if (!v48)
    {
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    v57 = *(_QWORD *)(v0 + 352);
    v59 = *(_QWORD *)(v0 + 312);
    v58 = *(_QWORD *)(v0 + 320);
    v60 = *(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 16);
    v60(v57, *(_QWORD *)(v0 + 360), v59);
    v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v61 = 0;
    v62 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v52, v53, v62, v48, "", v61, 2u);
    MEMORY[0x24264FEBC](v61, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    v56 = v60;
  }
  else
  {
    v55 = *(_QWORD *)(v0 + 320);

    v56 = *(void (**)(_QWORD, uint64_t, uint64_t))(v55 + 16);
  }
  *(_QWORD *)(v0 + 520) = v56;
  v64 = *(_QWORD *)(v0 + 488);
  v63 = *(_QWORD *)(v0 + 496);
  v65 = *(_QWORD *)(v0 + 384);
  v66 = *(_QWORD *)(v0 + 360);
  v68 = *(_QWORD *)(v0 + 312);
  v67 = *(_QWORD *)(v0 + 320);
  v69 = *(void **)(v0 + 208);
  v163 = *(void **)(v0 + 200);
  v70 = *(_QWORD *)(v0 + 192);
  v159 = v56;
  v56(*(_QWORD *)(v0 + 352), v66, v68);
  sub_23E537178();
  swift_allocObject();
  *(_QWORD *)(v0 + 528) = sub_23E53716C();
  v71 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  *(_QWORD *)(v0 + 536) = v71;
  v160 = v71;
  v71(v66, v68);
  sub_23E1E2F50(v70, v65, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E1E7C20(v63, v64, &qword_254334340);
  v72 = qword_2543331D8;
  v73 = v69;
  v74 = v163;
  if (v72 != -1)
    swift_once();
  v75 = *(_QWORD *)(v0 + 488);
  v76 = *(_QWORD *)(v0 + 480);
  v77 = *(_QWORD *)(v0 + 384);
  v78 = *(_QWORD **)(v0 + 304);
  v79 = *(_QWORD *)(v0 + 272);
  v162 = *(_QWORD *)(v0 + 496);
  v164 = *(_QWORD *)(v0 + 280);
  v80 = *(_QWORD *)(v0 + 264);
  v161 = *(_QWORD *)(v0 + 256);
  v82 = *(void **)(v0 + 200);
  v81 = *(void **)(v0 + 208);
  v83 = qword_2543331D0;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v77, v82, v81, v75, v83, v78);
  sub_23E1E2F50((uint64_t)v78, v76, type metadata accessor for StateSnapshot);
  v167(v76, 0, 1, v79);
  v84 = v80 + *(int *)(v161 + 48);
  sub_23E1E7C20(v162, v80, &qword_254334340);
  sub_23E1E7C20(v76, v84, &qword_254334340);
  v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
  if (v85(v80, 1, v79) == 1)
  {
    v86 = *(_QWORD *)(v0 + 272);
    sub_23E1E7C64(*(_QWORD *)(v0 + 480), &qword_254334340);
    v87 = v166;
    if (v85(v84, 1, v86) == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 264), &qword_254334340);
      v88 = 1;
      goto LABEL_45;
    }
    goto LABEL_43;
  }
  v89 = *(_QWORD *)(v0 + 272);
  sub_23E1E7C20(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 472), &qword_254334340);
  v90 = v85(v84, 1, v89);
  v91 = *(uint64_t **)(v0 + 472);
  v92 = *(_QWORD *)(v0 + 480);
  if (v90 == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 480), &qword_254334340);
    sub_23E1E2FA0((uint64_t)v91, type metadata accessor for StateSnapshot);
    v87 = v166;
LABEL_43:
    sub_23E1E7C64(*(_QWORD *)(v0 + 264), &qword_2543331E0);
    v88 = 0;
    goto LABEL_45;
  }
  v93 = *(uint64_t **)(v0 + 296);
  v94 = *(_QWORD *)(v0 + 264);
  sub_23E1FDC80(v84, (uint64_t)v93);
  v88 = _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(v91, v93);
  sub_23E1E2FA0((uint64_t)v93, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v92, &qword_254334340);
  sub_23E1E2FA0((uint64_t)v91, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v94, &qword_254334340);
  v87 = v166;
LABEL_45:
  v95 = sub_23E537130();
  sub_23E537160();
  v96 = sub_23E537B8C();
  result = sub_23E537CA0();
  if ((result & 1) == 0)
  {
LABEL_49:

    v97 = v160;
    v160(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 312));
LABEL_58:
    if ((v88 & 1) != 0)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 496), &qword_254334340);
      swift_release();
      sub_23E1FDC80(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 184));
      sub_23E22D1F8(0);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 504));
    }
    sub_23E537100();
    v106 = sub_23E537130();
    v107 = sub_23E537B98();
    if ((sub_23E537CA0() & 1) != 0)
    {
      v108 = *(_QWORD *)(v0 + 352);
      v109 = *(_QWORD *)(v0 + 312);
      v110 = v159;
      v159(v108, *(_QWORD *)(v0 + 336), v109);
      v111 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v111 = 0;
      v112 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v106, v107, v112, "Pushing iteration to DataModel", "", v111, 2u);
      MEMORY[0x24264FEBC](v111, -1, -1);

      v97(v108, v109);
      v113 = v157;
    }
    else
    {

      v113 = v157;
      v110 = v159;
    }
    v114 = *(_QWORD *)(v0 + 376);
    v115 = *(_QWORD *)(v0 + 336);
    v116 = *(_QWORD *)(v0 + 312);
    v117 = *(_QWORD *)(v0 + 192);
    v110(*(_QWORD *)(v0 + 352), v115, v116);
    swift_allocObject();
    *(_QWORD *)(v0 + 544) = sub_23E53716C();
    v97(v115, v116);
    sub_23E1E2F50(v117, v114, type metadata accessor for StateSnapshot.UpdateType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v118 = *(_QWORD *)(v0 + 432);
      v119 = *(_QWORD *)(v0 + 408);
      v120 = *(void **)(v0 + 208);
      v121 = *(_QWORD *)(v0 + 216);
      swift_bridgeObjectRelease();
      v122 = (uint64_t)&selRef_homeManager_didAddHome_;
      v123 = objc_msgSend(v120, sel_uniqueIdentifier);
      sub_23E536F68();

      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v171[0] = *(_QWORD *)(v121 + 128);
      *(_QWORD *)(v121 + 128) = 0x8000000000000000;
      sub_23E21A584(v169, v118, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v121 + 128) = v171[0];
      swift_bridgeObjectRelease();
      v113(v118, v119);
      swift_endAccess();
      v125 = v156;
    }
    else
    {
      sub_23E1E2FA0(*(_QWORD *)(v0 + 376), type metadata accessor for StateSnapshot.UpdateType);
      v125 = v156;
      v122 = (uint64_t)&selRef_homeManager_didAddHome_;
    }
    v126 = *(_QWORD *)(v0 + 424);
    v127 = objc_msgSend(*(id *)(v0 + 208), sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v128 = swift_isUniquelyReferenced_nonNull_native();
    v171[0] = *v125;
    v129 = v171[0];
    *v125 = 0x8000000000000000;
    v131 = sub_23E1E3300(v126);
    v132 = *(_QWORD *)(v129 + 16);
    v133 = (v130 & 1) == 0;
    result = v132 + v133;
    if (__OFADD__(v132, v133))
    {
      __break(1u);
    }
    else
    {
      v134 = v130;
      if (*(_QWORD *)(v129 + 24) >= result)
      {
        if ((v128 & 1) == 0)
        {
          sub_23E21DA18();
          v129 = v171[0];
        }
      }
      else
      {
        v135 = *(_QWORD *)(v0 + 424);
        sub_23E20517C(result, v128);
        v129 = v171[0];
        v136 = sub_23E1E3300(v135);
        if ((v134 & 1) != (v137 & 1))
          return sub_23E5383C0();
        v131 = v136;
      }
      *v125 = v129;
      swift_bridgeObjectRelease();
      v138 = (_QWORD *)*v125;
      if ((v134 & 1) != 0)
      {
        result = swift_bridgeObjectRetain();
      }
      else
      {
        v140 = *(_QWORD *)(v0 + 424);
        v139 = *(_QWORD *)(v0 + 432);
        v141 = *(_QWORD *)(v0 + 408);
        v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 416) + 16);
        swift_bridgeObjectRetain();
        v142(v139, v140, v141);
        v122 = 0x1F32C5000;
        result = sub_23E20485C(v131, v139, 0, v138);
      }
      v143 = v138[7];
      v144 = *(_QWORD *)(v143 + 8 * v131);
      v145 = __OFADD__(v144, 1);
      v146 = v144 + 1;
      if (!v145)
      {
        v147 = v113;
        v148 = v122;
        v149 = *(_QWORD *)(v0 + 488);
        v150 = *(_QWORD *)(v0 + 424);
        v151 = *(_QWORD *)(v0 + 432);
        v152 = *(_QWORD *)(v0 + 408);
        v153 = *(_QWORD *)(v0 + 304);
        v170 = *(_QWORD *)(v0 + 272);
        v154 = *(void **)(v0 + 208);
        *(_QWORD *)(v143 + 8 * v131) = v146;
        v147(v150, v152);
        swift_endAccess();
        swift_bridgeObjectRelease();
        v155 = objc_msgSend(v154, (SEL)(v148 + 3400));
        sub_23E536F68();

        sub_23E1E2F50(v153, v149, type metadata accessor for StateSnapshot);
        v167(v149, 0, 1, v170);
        swift_beginAccess();
        sub_23E1FDC5C(v149, v151);
        swift_endAccess();
        *(_QWORD *)(v0 + 552) = sub_23E5378F8();
        *(_QWORD *)(v0 + 560) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }
    }
    __break(1u);
    goto LABEL_81;
  }
  v165 = v88;
  if ((v158 & 1) == 0)
  {
    if (!v87)
    {
      __break(1u);
      goto LABEL_49;
    }
LABEL_54:
    v98 = *(_QWORD *)(v0 + 248);
    v99 = *(_QWORD *)(v0 + 224);
    v100 = *(_QWORD *)(v0 + 232);
    swift_retain();
    sub_23E537184();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v100 + 88))(v98, v99) == *MEMORY[0x24BEE7810])
    {
      v101 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
      v101 = "";
    }
    v102 = *(_QWORD *)(v0 + 344);
    v103 = *(_QWORD *)(v0 + 312);
    v159(*(_QWORD *)(v0 + 352), v102, v103);
    v104 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v104 = 0;
    v105 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v95, v96, v105, v87, v101, v104, 2u);
    MEMORY[0x24264FEBC](v104, -1, -1);

    v97 = v160;
    v160(v102, v103);
    v88 = v165;
    v160(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 312));
    goto LABEL_58;
  }
  if ((unint64_t)v87 >> 32)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v87 >> 11 != 27)
  {
    if (v87 >> 16 > 0x10)
    {
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    v87 = sub_23E3F2CBC();
    goto LABEL_54;
  }
LABEL_87:
  __break(1u);
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t storeEnumTagSinglePayload for StateSnapshot()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1FD768(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23E1FD838(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23E1EA57C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23E1EA57C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_23E1FD838(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23E537D00();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23E1FD9F0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23E537EF8();
  if (!v8)
  {
    sub_23E538000();
    __break(1u);
LABEL_17:
    result = sub_23E538078();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23E1FD9F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23E1FDA84(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E22F834(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23E22F834(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23E1FDA84(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23E1FDBF8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23E537E74();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23E538000();
      __break(1u);
LABEL_10:
      v2 = sub_23E537640();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23E538078();
    __break(1u);
LABEL_14:
    result = sub_23E538000();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23E1FDBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(qword_254333E08);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23E1FDC5C(uint64_t a1, uint64_t a2)
{
  return sub_23E20C644(a1, a2, &qword_254334340, type metadata accessor for StateSnapshot, &qword_254332C58, (void (*)(uint64_t))sub_23E2DA110);
}

uint64_t sub_23E1FDC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E1FDCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for StaticHome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for StateSnapshot()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1FDD24(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_2543333B8);
}

void StateSnapshot.UpdateType.metricsID.getter()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E1FDDCC + 4 * byte_23E53DBED[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

const char *sub_23E1FDDCC()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for StateSnapshot.UpdateType);
  return "StateSnapshot.all";
}

void StateSnapshot.UpdateType.signpostID.getter()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  sub_23E1E2F50(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_23E1FE074 + 4 * byte_23E53DBE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

const char *sub_23E1FE074()
{
  uint64_t v0;

  sub_23E1E2FA0(v0, type metadata accessor for StateSnapshot.UpdateType);
  return "updateType: .all(_)";
}

HMHome_optional __swiftcall StateSnapshot.UpdateType.relevantHome(in:)(Swift::OpaquePointer in)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t updated;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;
  HMHome_optional result;

  v2 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v2);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  sub_23E1E2F50(v1, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)&loc_23E1FE350 + dword_23E28F554[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
  return result;
}

uint64_t sub_23E1FE360()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_23E1FE798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  if (qword_254333DB8 != -1)
    swift_once();
  v12 = sub_23E5371A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
  sub_23E1E2F50(a1, (uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v24 = v9;
    v17 = v16;
    v28 = v16;
    v25 = v5;
    v26 = a1;
    *(_DWORD *)v15 = 136315138;
    StateSnapshot.UpdateType.description.getter();
    v27 = sub_23E1FD768(v18, v19, &v28);
    v5 = v25;
    a1 = v26;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_23E1DF000, v13, v14, "on device update for: %s", v15, 0xCu);
    swift_arrayDestroy();
    v20 = v17;
    v9 = v24;
    MEMORY[0x24264FEBC](v20, -1, -1);
    MEMORY[0x24264FEBC](v15, -1, -1);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  }

  if (qword_254334090 != -1)
    swift_once();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v21, (uint64_t)qword_254333EE8);
  sub_23E1E2F50(a1, (uint64_t)v9, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void StateSnapshot.UpdateType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t updated;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = sub_23E536F80();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  sub_23E1E2F50(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)&loc_23E1FEB64 + *((int *)qword_23E28F520 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23E1FEB74()
{
  void **v0;
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *v0;
  *(_QWORD *)(v1 - 120) = 543976513;
  *(_QWORD *)(v1 - 112) = 0xE400000000000000;
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_name);
    sub_23E53755C();

  }
  sub_23E537628();

  swift_bridgeObjectRelease();
  return *(_QWORD *)(v1 - 120);
}

uint64_t sub_23E1FF49C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t updated;
  uint64_t v9;
  __int128 *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unsigned __int8 v41[9];
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v10 = (__int128 *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E2F50(a1, (uint64_t)v10, v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_23E1E6C84(v10, (uint64_t)&v46);
      break;
    case 2u:
    case 3u:
      v12 = *(_QWORD *)v10;
      goto LABEL_6;
    case 4u:
      v12 = *(_QWORD *)v10;
      swift_bridgeObjectRelease();
LABEL_6:
      *((_QWORD *)&v47 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FF0);
      v48 = sub_23E1F9710(&qword_256D40FF8, &qword_256D40FF0, MEMORY[0x24BEE0310]);
      *(_QWORD *)&v46 = v12;
      break;
    default:
      v48 = 0;
      v46 = 0u;
      v47 = 0u;
      sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
      break;
  }
  if (!*((_QWORD *)&v47 + 1))
  {
    v49 = v46;
    v50 = (unint64_t)v47;
    v51 = v48;
LABEL_14:
    v43 = v49;
    v44 = v50;
    v45 = v51;
    if (*((_QWORD *)&v50 + 1))
      goto LABEL_10;
    goto LABEL_15;
  }
  sub_23E1E6C84(&v46, (uint64_t)&v49);
  if (!*((_QWORD *)&v50 + 1))
    goto LABEL_14;
  sub_23E1FF9C8((uint64_t)&v49, (uint64_t)&v43);
  if (*((_QWORD *)&v44 + 1))
  {
LABEL_10:
    sub_23E1E6C84(&v43, (uint64_t)&v46);
    v13 = (int *)type metadata accessor for StateSnapshot(0);
    v14 = *(uint64_t *)((char *)a3 + v13[8]);
    v42 = *(uint64_t *)((char *)a3 + v13[15]);
    *(_QWORD *)&v43 = v14;
    v40 = v48;
    v15 = __swift_project_boxed_opaque_existential_1(&v46, *((uint64_t *)&v47 + 1));
    v39 = &v36;
    MEMORY[0x24BDAC7A8](v15);
    *(&v36 - 6) = (uint64_t)a3;
    *(&v36 - 5) = a1;
    *(&v36 - 4) = (uint64_t)a2;
    *(&v36 - 3) = (uint64_t)&v43;
    *(&v36 - 2) = (uint64_t)&v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E53773C();
    v16 = v42;
    v17 = *a3;
    swift_bridgeObjectRetain();
    v40 = sub_23E4AFCE8(a1, a2, v16, v17);
    swift_bridgeObjectRelease();
    v18 = (uint64_t)a3 + v13[5];
    v19 = *(int *)(type metadata accessor for StaticHome() + 40);
    v38 = v18;
    LOBYTE(v18) = *(_BYTE *)(v18 + v19);
    v20 = (char *)v43;
    swift_bridgeObjectRetain();
    v21 = sub_23E4086E0(a2, (uint64_t)v41, (uint64_t)v20);
    swift_bridgeObjectRelease();
    v41[0] = v18;
    swift_bridgeObjectRetain();
    v22 = sub_23E1FFA0C(a2, v41, v16);
    swift_bridgeObjectRelease();
    v23 = *(uint64_t *)((char *)a3 + v13[11]);
    v24 = *(uint64_t *)((char *)a3 + v13[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = (uint64_t *)v21;
    v37 = v22;
    v36 = sub_23E3D9418(a2, v20, v40, v21, v23, v24, v22, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v50 + 1))
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    v25 = *a3;
    sub_23E1E2F50(v38, (uint64_t)a4 + v13[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v26 = *(uint64_t *)((char *)a3 + v13[6]);
    v27 = *(uint64_t *)((char *)a3 + v13[7]);
    v29 = v42;
    v28 = v43;
    v30 = *(uint64_t *)((char *)a3 + v13[16]);
    v31 = *(uint64_t *)((char *)a3 + v13[17]);
    v32 = *(uint64_t *)((char *)a3 + v13[18]);
    v33 = *(uint64_t *)((char *)a3 + v13[19]);
    *a4 = v25;
    *(uint64_t *)((char *)a4 + v13[6]) = v26;
    *(uint64_t *)((char *)a4 + v13[7]) = v27;
    *(uint64_t *)((char *)a4 + v13[8]) = v28;
    *(uint64_t *)((char *)a4 + v13[9]) = v40;
    *(uint64_t *)((char *)a4 + v13[10]) = (uint64_t)v39;
    *(uint64_t *)((char *)a4 + v13[11]) = v23;
    *(uint64_t *)((char *)a4 + v13[12]) = v24;
    *(uint64_t *)((char *)a4 + v13[13]) = v36;
    *(uint64_t *)((char *)a4 + v13[14]) = v37;
    *(uint64_t *)((char *)a4 + v13[15]) = v29;
    *(uint64_t *)((char *)a4 + v13[16]) = v30;
    *(uint64_t *)((char *)a4 + v13[17]) = v31;
    *(uint64_t *)((char *)a4 + v13[18]) = v32;
    *(uint64_t *)((char *)a4 + v13[19]) = v33;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(*((_QWORD *)v13 - 1) + 56))(a4, 0, 1, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
  }
LABEL_15:
  if (*((_QWORD *)&v50 + 1))
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    if (*((_QWORD *)&v44 + 1))
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v43);
  }
  v35 = type metadata accessor for StateSnapshot(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a4, 1, 1, v35);
}

uint64_t sub_23E1FF9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23E1FFA0C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  unint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;

  v25 = a3;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333FA0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a2;
  v24 = a1;
  v8 = objc_msgSend(a1, sel_serviceGroups);
  sub_23E1E335C(0, &qword_254332C10);
  v9 = sub_23E5377F0();

  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F238);
      v19 = sub_23E53806C();
LABEL_16:
      v27 = v19;
      sub_23E45C714(v12, 1, &v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, &qword_254333FA0, (void (*)(void))sub_23E212BC4, (void (*)(void))sub_23E21D978);
      swift_bridgeObjectRelease();
      return v27;
    }
LABEL_15:
    v19 = MEMORY[0x24BEE4B00];
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  v10 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
LABEL_3:
  v27 = MEMORY[0x24BEE4AF8];
  sub_23E2CAF4C(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v12 = v27;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x24264F148](v11, v9);
      else
        v13 = *(id *)(v9 + 8 * v11 + 32);
      v14 = v13;
      v15 = (unint64_t)&v7[*(int *)(v23 + 48)];
      v16 = objc_msgSend(v13, sel_uniqueIdentifier);
      sub_23E536F68();

      v26 = v22;
      sub_23E4595C4(v24, &v26, v14, v25, v15);

      v27 = v12;
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_23E2CAF4C(v17 > 1, v18 + 1, 1);
        v12 = v27;
      }
      ++v11;
      *(_QWORD *)(v12 + 16) = v18 + 1;
      sub_23E1E4E3C((uint64_t)v7, v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, &qword_254333FA0);
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 16))
      goto LABEL_12;
    goto LABEL_15;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t HMActionSet.ActionSetKind.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  v4 = 7;
  if (v2 < 7)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_23E1FFD40(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t HMActionSet.defaultTint.getter()
{
  void *v0;
  id v1;
  uint64_t result;
  char v3;

  v1 = objc_msgSend(v0, sel_actionSetType);
  sub_23E53755C();

  HMActionSet.ActionSetKind.init(rawValue:)(&v3);
  switch(v3)
  {
    case 0:
    case 1:
      result = sub_23E53737C();
      break;
    case 2:
      result = sub_23E537388();
      break;
    case 3:
      result = sub_23E537370();
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t Color.init(_:)(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  double v4;
  unint64_t v5;
  char v6;
  double v7;
  unint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  if (result)
  {
    v1 = result;
    if (*(_QWORD *)(result + 16)
      && (v2 = sub_23E211350(114, 0xE100000000000000), (v3 & 1) != 0)
      && *(_QWORD *)(v1 + 16)
      && (v4 = *(double *)(*(_QWORD *)(v1 + 56) + 8 * v2), v5 = sub_23E211350(103, 0xE100000000000000),
                                                           (v6 & 1) != 0)
      && *(_QWORD *)(v1 + 16)
      && (v7 = *(double *)(*(_QWORD *)(v1 + 56) + 8 * v5), v8 = sub_23E211350(98, 0xE100000000000000), (v9 & 1) != 0))
    {
      v10 = *(double *)(*(_QWORD *)(v1 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      v11 = sub_23E5372EC();
      MEMORY[0x24BDAC7A8](v11);
      v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD))(v14 + 104))(v13, *MEMORY[0x24BDF3C20]);
      return MEMORY[0x24264E65C](v13, v4, v7, v10, 1.0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticActionSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E1FFF40(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23E1EE1C4(&qword_254333DA0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_23E5374CC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_23E537514();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E2009CC((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

void _s13HomeDataModel20StaticCharacteristicV026typedValueIsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

void *sub_23E2001E4()
{
  int v0;
  void *result;

  objc_opt_self();
  result = (void *)swift_dynamicCastObjCClass();
  if (result)
    return (void *)(objc_msgSend(result, sel_integerValue) == (id)v0);
  return result;
}

void ServiceKind.umbrellaCategory.getter(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = byte_23E543CC2[*v1];
}

uint64_t sub_23E2005EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E200634(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_2543326D8, &qword_254333F80);
  *v3 = result;
  return result;
}

void *sub_23E200660(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_23E386650();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_23E38F56C();
LABEL_8:
      sub_23E53845C();
      __asm { BR              X10 }
    }
    result = sub_23E38BB68(&qword_256D44A40);
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x23E2009B0);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_23E2009CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_23E382F0C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_23E38ADBC();
      goto LABEL_12;
    }
    sub_23E200BD0();
  }
  v12 = *v3;
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v13 = sub_23E5374CC();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v18 = sub_23E537514();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_23E5383B4();
  __break(1u);
  return result;
}

uint64_t sub_23E200BD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332258);
  v7 = sub_23E537E44();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t HMActionSet.shouldShowInDashboard.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  unsigned __int8 v8;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    if (swift_dynamicCast())
      return v8;
  }
  v4 = objc_msgSend(v0, sel_applicationData);
  v5 = (void *)sub_23E537538();
  v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  if (v6 && (__swift_instantiateConcreteTypeFromMangledName(&qword_254332C48), swift_dynamicCast()))
    return v8;
  else
    return 1;
}

uint64_t getEnumTagSinglePayload for StaticActionSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E20106C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_2543326E0, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E201080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2010C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void **v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  int v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t updated;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char *v97;

  v89 = a4;
  v91 = a1;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v83 = (uint64_t *)((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v80 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v79 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v93 = (uint64_t *)((char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v10);
  v87 = (void (*)(char *, uint64_t, uint64_t))((char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v85);
  v86 = (uint64_t)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v84 = (uint64_t)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v76 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v76 - v19;
  v21 = sub_23E536F80();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v88 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v76 - v25;
  swift_beginAccess();
  v27 = MEMORY[0x24264FF70](a2 + 16);
  v92 = a3;
  v90 = v26;
  if (v27)
  {
    v28 = (char *)v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v26, a3, v21);
    swift_getKeyPath();
    v97 = v28;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    v78 = v8;
    v77 = v18;
    v29 = v20;
    v30 = v91;
    swift_bridgeObjectRetain();
    sub_23E537070();
    swift_release();
    v97 = v28;
    swift_getKeyPath();
    sub_23E537088();
    swift_release();
    v31 = (void **)&v28[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary];
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v96 = *v31;
    *v31 = (void *)0x8000000000000000;
    v33 = v30;
    v20 = v29;
    v18 = v77;
    sub_23E204648(v33, (uint64_t)v90, isUniquelyReferenced_nonNull_native);
    *v31 = v96;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v90, v21);
    swift_endAccess();
    v97 = v28;
    swift_getKeyPath();
    v8 = v78;
    a3 = v92;
    sub_23E53707C();

    swift_release();
  }
  swift_beginAccess();
  v34 = MEMORY[0x24264FF70](a2 + 16);
  if (v34)
  {
    v35 = (void *)v34;
    swift_getKeyPath();
    v96 = v35;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    v36 = (uint64_t)v35 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    v37 = v86;
    sub_23E1E2F50(v36, v86, type metadata accessor for StateSnapshot);

    v38 = (uint64_t)v87;
    sub_23E1E2F50(v37 + *(int *)(v85 + 20), (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    sub_23E1E2FA0(v37, type metadata accessor for StateSnapshot);
    v39 = (_QWORD *)v22;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v40(v20, v38, v21);
    v41 = v38;
    v42 = v40;
    sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v43(v20, 0, 1, v21);
  }
  else
  {
    v39 = (_QWORD *)v22;
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v43(v20, 1, 1, v21);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  }
  v42(v18, a3, v21);
  v43(v18, 0, 1, v21);
  v44 = *(int *)(v8 + 48);
  v45 = (uint64_t)v93;
  v46 = (uint64_t)v93 + v44;
  sub_23E1E7C20((uint64_t)v20, (uint64_t)v93, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v18, v46, &qword_254333F50);
  v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v39[6];
  v48 = v47(v45, 1, v21);
  v49 = v88;
  if (v48 != 1)
  {
    v53 = v84;
    sub_23E1E7C20(v45, v84, &qword_254333F50);
    if (v47(v46, 1, v21) != 1)
    {
      v54 = (void (*)(char *, uint64_t, uint64_t))v39[4];
      v87 = v42;
      v55 = v49;
      v56 = (uint64_t)v90;
      v54(v90, v46, v21);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      LODWORD(v86) = sub_23E537514();
      v57 = (void (*)(uint64_t, uint64_t))v39[1];
      v58 = v56;
      v49 = v55;
      v42 = v87;
      v57(v58, v21);
      sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
      v57(v53, v21);
      sub_23E1E7C64(v45, &qword_254333F50);
      v52 = v91;
      v51 = v92;
      if ((v86 & 1) == 0)
        goto LABEL_16;
      goto LABEL_13;
    }
    sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
    ((void (*)(uint64_t, uint64_t))v39[1])(v53, v21);
    v51 = v92;
LABEL_11:
    sub_23E1E7C64((uint64_t)v93, &qword_254332798);
    v52 = v91;
    goto LABEL_16;
  }
  sub_23E1E7C64((uint64_t)v18, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
  v50 = v47(v46, 1, v21);
  v51 = v92;
  if (v50 != 1)
    goto LABEL_11;
  sub_23E1E7C64((uint64_t)v93, &qword_254333F50);
  v52 = v91;
LABEL_13:
  if (qword_254334090 != -1)
    swift_once();
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  __swift_project_value_buffer(v59, (uint64_t)qword_254333EE8);
  *v83 = v52;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v60 = v79;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v82);
LABEL_16:
  if (qword_254333DB8 != -1)
    swift_once();
  v61 = sub_23E5371A8();
  __swift_project_value_buffer(v61, (uint64_t)qword_254333D88);
  v42(v49, v51, v21);
  swift_bridgeObjectRetain_n();
  v62 = sub_23E537190();
  v63 = sub_23E537B20();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = swift_slowAlloc();
    v65 = swift_slowAlloc();
    v95 = v65;
    *(_DWORD *)v64 = 136315394;
    v66 = sub_23E1E335C(0, &qword_254332C20);
    v93 = v39;
    v67 = v66;
    v68 = swift_bridgeObjectRetain();
    v69 = MEMORY[0x24264EA94](v68, v67);
    v70 = v49;
    v72 = v71;
    swift_bridgeObjectRelease();
    v94 = sub_23E1FD768(v69, v72, &v95);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v64 + 12) = 2080;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v73 = sub_23E538318();
    v94 = sub_23E1FD768(v73, v74, &v95);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v93[1])(v70, v21);
    _os_log_impl(&dword_23E1DF000, v62, v63, "RETURNING predictions = %s homeID = %s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v65, -1, -1);
    MEMORY[0x24264FEBC](v64, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v39[1])(v49, v21);
  }

  v95 = v52;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  return sub_23E5378C8();
}

uint64_t sub_23E201B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = v1;
  v47 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for StateSnapshot(0);
  v42 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v40 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  swift_getKeyPath();
  v20 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  v48 = v2;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  v45 = v20;
  sub_23E537070();
  swift_release();
  v21 = *(void **)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v21)
  {
    v22 = objc_msgSend(v21, sel_uniqueIdentifier);
    sub_23E536F68();

    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v23(v19, 0, 1, v6);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v23(v19, 1, 1, v6);
  }
  v24 = v47 + *(int *)(v46 + 20);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v41(v17, v24, v6);
  v23(v17, 0, 1, v6);
  v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_23E1E7C20((uint64_t)v19, (uint64_t)v11, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v17, v25, &qword_254333F50);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v26((uint64_t)v11, 1, v6) != 1)
  {
    v38 = v24;
    v29 = v40;
    sub_23E1E7C20((uint64_t)v11, v40, &qword_254333F50);
    if (v26(v25, 1, v6) != 1)
    {
      v30 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v44, v25, v6);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v31 = sub_23E537514();
      v32 = *(void (**)(char *, uint64_t))(v7 + 8);
      v32(v30, v6);
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
      v32((char *)v29, v6);
      sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
      v28 = v47;
      v24 = v38;
      if ((v31 & 1) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v6);
    v28 = v47;
    v24 = v38;
LABEL_9:
    sub_23E1E7C64((uint64_t)v11, &qword_254332798);
    goto LABEL_12;
  }
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
  v27 = v26(v25, 1, v6);
  v28 = v47;
  if (v27 != 1)
    goto LABEL_9;
  sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
LABEL_11:
  v33 = v39;
  sub_23E1E2F50(v28, v39, type metadata accessor for StateSnapshot);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v38 - 2) = v2;
  *(&v38 - 1) = v33;
  v48 = v2;
  sub_23E537064();
  swift_release();
  sub_23E1E2FA0(v33, type metadata accessor for StateSnapshot);
LABEL_12:
  v35 = (uint64_t)v44;
  v41(v44, v24, v6);
  v36 = v43;
  sub_23E1E2F50(v28, v43, type metadata accessor for StateSnapshot);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v46);
  swift_getKeyPath();
  v48 = v2;
  sub_23E537070();
  swift_release();
  v48 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  swift_beginAccess();
  sub_23E1FDC5C(v36, v35);
  swift_endAccess();
  v48 = v2;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  if (qword_254332450 != -1)
    swift_once();
  return sub_23E5371CC();
}

uint64_t sub_23E202154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  return sub_23E1E2F50(v3, a1, type metadata accessor for StateSnapshot);
}

id sub_23E20220C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v5 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23E202270(void (*a1)(_QWORD *))
{
  uint64_t v1;
  id *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;

  v3 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (!*v3)
    return MEMORY[0x24BEE4AF8];
  v4 = objc_msgSend(*v3, sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v5 = sub_23E5377F0();

  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v8 = swift_bridgeObjectRetain();
    v6 = (uint64_t)sub_23E24A08C(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v9 = v6;
  sub_23E20275C(&v9, a1);
  swift_bridgeObjectRelease();
  return v9;
}

_QWORD *sub_23E202378(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_23E202478(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23E24CF3C((unint64_t *)&unk_254332690, &qword_254332688);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254332688);
          v12 = sub_23E20269C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23E538078();
  __break(1u);
  return result;
}

void destroy for CameraClipsInternalPreferences(id *a1)
{

}

uint64_t (*sub_23E20269C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23E2026F0(v6, a2, a3);
  return sub_23E202698;
}

uint64_t (*sub_23E2026F0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24264F148](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_23E20268C;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E20275C(uint64_t *a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_23E531070();
  v6 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_23E537F28();
}

void sub_23E2027D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int v31;
  void *v32;
  id v33;
  id v34;
  unsigned int v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  id v59;
  unsigned __int8 v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  char v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  unint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int v144;
  uint64_t v145;
  void **v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v3 = a1[1];
  v4 = sub_23E53830C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_157;
    if (v3)
      sub_23E2031F0(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_165;
  v138 = v4;
  v143 = v3;
  v136 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v152 = MEMORY[0x24BEE4AF8];
    v146 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_123:
      if (v13 >= 2)
      {
        v126 = *v136;
        do
        {
          v127 = v13 - 2;
          if (v13 < 2)
            goto LABEL_152;
          if (!v126)
            goto LABEL_164;
          v128 = v8;
          v129 = v8 + 32;
          v130 = *(_QWORD *)&v8[16 * v127 + 32];
          v131 = *(_QWORD *)&v8[16 * v13 + 24];
          sub_23E25455C((void **)(v126 + 8 * v130), (id *)(v126 + 8 * *(_QWORD *)&v129[16 * v13 - 16]), v126 + 8 * v131, v146);
          if (v1)
            break;
          if (v131 < v130)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v128 = sub_23E530CC8((uint64_t)v128);
          if (v127 >= *((_QWORD *)v128 + 2))
            goto LABEL_154;
          v132 = v128;
          v133 = v128 + 32;
          v134 = &v128[16 * v127 + 32];
          *(_QWORD *)v134 = v130;
          *((_QWORD *)v134 + 1) = v131;
          v135 = *((_QWORD *)v128 + 2);
          if (v13 > v135)
            goto LABEL_155;
          v8 = v132;
          memmove(&v133[16 * v13 - 16], &v133[16 * v13], 16 * (v135 - v13));
          *((_QWORD *)v8 + 2) = v135 - 1;
          v13 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v152 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_23E537808();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v7 = sub_23E537844();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v146 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v152 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v137 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v11 = &selRef_homeManager_didAddHome_;
  v12 = v143;
  v147 = *a1;
  while (1)
  {
    v14 = v9++;
    if (v9 >= v12)
      goto LABEL_50;
    v139 = v8;
    v15 = *(void **)(v10 + 8 * v14);
    v16 = *(id *)(v10 + 8 * v9);
    v17 = v15;
    v18 = objc_msgSend(v16, v11[63]);
    if (v18 == objc_msgSend(v17, v11[63]))
    {
      v148 = v9;
      v21 = objc_msgSend(v16, sel_name);
      v22 = sub_23E53755C();
      v24 = v23;

      v25 = objc_msgSend(v17, sel_name);
      v26 = sub_23E53755C();
      v28 = v27;

      if (v22 == v26 && v24 == v28)
        v19 = 0;
      else
        v19 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v20 = v14 + 2;
      v11 = &selRef_homeManager_didAddHome_;
      v9 = v148;
      if (v14 + 2 < v143)
      {
LABEL_27:
        v30 = v20;
        v10 = v147;
        v144 = v19;
        do
        {
          v20 = v30;
          v32 = *(void **)(v10 + 8 * v9);
          v33 = *(id *)(v10 + 8 * v30);
          v34 = v32;
          v35 = objc_msgSend(v33, v11[63]);
          if (v35 == objc_msgSend(v34, v11[63]))
          {
            v149 = v20;
            v36 = objc_msgSend(v33, sel_name);
            v37 = sub_23E53755C();
            v39 = v38;

            v40 = objc_msgSend(v34, sel_name);
            v41 = sub_23E53755C();
            v43 = v42;

            if (v37 == v41 && v39 == v43)
            {

              swift_bridgeObjectRelease_n();
              v11 = &selRef_homeManager_didAddHome_;
              v20 = v149;
              v19 = v144;
              if ((v144 & 1) != 0)
              {
                v8 = v139;
                v10 = v147;
                goto LABEL_41;
              }
            }
            else
            {
              v45 = sub_23E538354();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v46 = v144 ^ v45;
              v19 = v144;
              v11 = &selRef_homeManager_didAddHome_;
              v20 = v149;
              if ((v46 & 1) != 0)
                goto LABEL_19;
            }
          }
          else
          {
            v31 = objc_msgSend(v33, v11[63]);

            if (((v19 ^ v31) & 1) != 0)
              goto LABEL_19;
          }
          v30 = v20 + 1;
          v9 = v20;
          v10 = v147;
        }
        while (v20 + 1 < v143);
        ++v20;
        goto LABEL_40;
      }
    }
    else
    {
      v19 = objc_msgSend(v16, v11[63]);

      v20 = v14 + 2;
      if (v14 + 2 < v143)
        goto LABEL_27;
    }
    LOBYTE(v144) = v19;
LABEL_19:
    v10 = v147;
LABEL_40:
    v9 = v20;
    v8 = v139;
    if ((v144 & 1) != 0)
    {
LABEL_41:
      if (v20 < v14)
        goto LABEL_158;
      if (v14 < v20)
      {
        v47 = (uint64_t *)(v137 + 8 * v20);
        v48 = v20;
        v49 = v14;
        v50 = (uint64_t *)(v10 + 8 * v14);
        do
        {
          if (v49 != --v48)
          {
            if (!v10)
              goto LABEL_163;
            v51 = *v50;
            *v50 = *v47;
            *v47 = v51;
          }
          ++v49;
          --v47;
          ++v50;
        }
        while (v49 < v48);
      }
      v9 = v20;
    }
LABEL_50:
    if (v9 >= v143)
      goto LABEL_74;
    if (__OFSUB__(v9, v14))
      goto LABEL_156;
    if (v9 - v14 >= v138)
      goto LABEL_74;
    if (__OFADD__(v14, v138))
      goto LABEL_159;
    v52 = v143;
    if (v14 + v138 < v143)
      v52 = v14 + v138;
    if (v52 < v14)
      break;
    if (v9 == v52)
      goto LABEL_74;
    v140 = v8;
    v141 = v52;
    v53 = v137 + 8 * v9;
    v142 = v14;
    while (2)
    {
      v54 = *(void **)(v10 + 8 * v9);
      v55 = v14;
      v145 = v53;
      v56 = v53;
      v150 = v9;
      while (1)
      {
        v57 = *(void **)v56;
        v58 = v54;
        v59 = v57;
        LODWORD(v57) = objc_msgSend(v58, v11[63]);
        if ((_DWORD)v57 == objc_msgSend(v59, v11[63]))
          break;
        v60 = objc_msgSend(v58, v11[63]);

        if ((v60 & 1) == 0)
          goto LABEL_60;
LABEL_70:
        if (!v10)
          goto LABEL_161;
        v71 = *(void **)v56;
        v54 = *(void **)(v56 + 8);
        *(_QWORD *)v56 = v54;
        *(_QWORD *)(v56 + 8) = v71;
        v56 -= 8;
        if (v9 == ++v55)
          goto LABEL_60;
      }
      v61 = objc_msgSend(v58, sel_name);
      v62 = sub_23E53755C();
      v64 = v63;

      v65 = objc_msgSend(v59, sel_name);
      v66 = sub_23E53755C();
      v68 = v67;

      if (v62 != v66 || v64 != v68)
      {
        v70 = sub_23E538354();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v147;
        v9 = v150;
        v11 = &selRef_homeManager_didAddHome_;
        if ((v70 & 1) == 0)
          goto LABEL_60;
        goto LABEL_70;
      }

      swift_bridgeObjectRelease_n();
      v10 = v147;
      v9 = v150;
      v11 = &selRef_homeManager_didAddHome_;
LABEL_60:
      ++v9;
      v53 = v145 + 8;
      v14 = v142;
      if (v9 != v141)
        continue;
      break;
    }
    v9 = v141;
    v8 = v140;
LABEL_74:
    if (v9 < v14)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_23E530794(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v73 = *((_QWORD *)v8 + 2);
    v72 = *((_QWORD *)v8 + 3);
    v13 = v73 + 1;
    if (v73 >= v72 >> 1)
      v8 = sub_23E530794((char *)(v72 > 1), v73 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v13;
    v74 = v8 + 32;
    v75 = &v8[16 * v73 + 32];
    *(_QWORD *)v75 = v14;
    *((_QWORD *)v75 + 1) = v9;
    if (v73)
    {
      v151 = v9;
      while (1)
      {
        v76 = v13 - 1;
        if (v13 >= 4)
        {
          v81 = &v74[16 * v13];
          v82 = *((_QWORD *)v81 - 8);
          v83 = *((_QWORD *)v81 - 7);
          v87 = __OFSUB__(v83, v82);
          v84 = v83 - v82;
          if (v87)
            goto LABEL_140;
          v86 = *((_QWORD *)v81 - 6);
          v85 = *((_QWORD *)v81 - 5);
          v87 = __OFSUB__(v85, v86);
          v79 = v85 - v86;
          v80 = v87;
          if (v87)
            goto LABEL_141;
          v88 = v13 - 2;
          v89 = &v74[16 * v13 - 32];
          v91 = *(_QWORD *)v89;
          v90 = *((_QWORD *)v89 + 1);
          v87 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          if (v87)
            goto LABEL_143;
          v87 = __OFADD__(v79, v92);
          v93 = v79 + v92;
          if (v87)
            goto LABEL_146;
          if (v93 >= v84)
          {
            v111 = &v74[16 * v76];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v87 = __OFSUB__(v112, v113);
            v114 = v112 - v113;
            if (v87)
              goto LABEL_150;
            v104 = v79 < v114;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v105 = *((_QWORD *)v8 + 4);
            v106 = *((_QWORD *)v8 + 5);
            v87 = __OFSUB__(v106, v105);
            v98 = v106 - v105;
            v99 = v87;
            goto LABEL_106;
          }
          v78 = *((_QWORD *)v8 + 4);
          v77 = *((_QWORD *)v8 + 5);
          v87 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          v80 = v87;
        }
        if ((v80 & 1) != 0)
          goto LABEL_142;
        v88 = v13 - 2;
        v94 = &v74[16 * v13 - 32];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v97 = __OFSUB__(v95, v96);
        v98 = v95 - v96;
        v99 = v97;
        if (v97)
          goto LABEL_145;
        v100 = &v74[16 * v76];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v87 = __OFSUB__(v101, v102);
        v103 = v101 - v102;
        if (v87)
          goto LABEL_148;
        if (__OFADD__(v98, v103))
          goto LABEL_149;
        if (v98 + v103 >= v79)
        {
          v104 = v79 < v103;
LABEL_112:
          if (v104)
            v76 = v88;
          goto LABEL_114;
        }
LABEL_106:
        if ((v99 & 1) != 0)
          goto LABEL_144;
        v107 = &v74[16 * v76];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v87 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v87)
          goto LABEL_147;
        if (v110 < v98)
          goto LABEL_14;
LABEL_114:
        v115 = v76 - 1;
        if (v76 - 1 >= v13)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!v10)
          goto LABEL_162;
        v116 = v8;
        v117 = v10;
        v118 = &v74[16 * v115];
        v119 = *(_QWORD *)v118;
        v120 = v74;
        v121 = v76;
        v122 = &v74[16 * v76];
        v123 = *((_QWORD *)v122 + 1);
        v124 = v117;
        sub_23E25455C((void **)(v117 + 8 * *(_QWORD *)v118), (id *)(v117 + 8 * *(_QWORD *)v122), v117 + 8 * v123, v146);
        if (v1)
          goto LABEL_134;
        if (v123 < v119)
          goto LABEL_137;
        if (v121 > *((_QWORD *)v116 + 2))
          goto LABEL_138;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v120[16 * v115 + 8] = v123;
        v125 = *((_QWORD *)v116 + 2);
        if (v121 >= v125)
          goto LABEL_139;
        v8 = v116;
        v13 = v125 - 1;
        memmove(v122, v122 + 16, 16 * (v125 - 1 - v121));
        v74 = v120;
        *((_QWORD *)v116 + 2) = v125 - 1;
        v11 = &selRef_homeManager_didAddHome_;
        v9 = v151;
        v10 = v124;
        if (v125 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v12 = v143;
    if (v9 >= v143)
      goto LABEL_123;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  sub_23E538000();
  __break(1u);
}

void sub_23E2031F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char **v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  void *v24;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
    v7 = &selRef_homeManager_didAddHome_;
    v28 = *a4;
LABEL_6:
    v8 = *(void **)(v5 + 8 * v4);
    v9 = a1;
    v27 = v6;
    v29 = v4;
    while (1)
    {
      v10 = *(void **)v6;
      v11 = v8;
      v12 = v10;
      LODWORD(v10) = objc_msgSend(v11, v7[63]);
      if ((_DWORD)v10 == objc_msgSend(v12, v7[63]))
      {
        v14 = objc_msgSend(v11, sel_name);
        v15 = sub_23E53755C();
        v17 = v16;

        v18 = objc_msgSend(v12, sel_name);
        v19 = sub_23E53755C();
        v21 = v20;

        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease_n();
          v4 = v29;
          v5 = v28;
          v7 = &selRef_homeManager_didAddHome_;
LABEL_5:
          ++v4;
          v6 = v27 + 8;
          if (v4 == a2)
            return;
          goto LABEL_6;
        }
        v23 = sub_23E538354();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v4 = v29;
        v5 = v28;
        v7 = &selRef_homeManager_didAddHome_;
        if ((v23 & 1) == 0)
          goto LABEL_5;
      }
      else
      {
        v13 = objc_msgSend(v11, v7[63]);

        if ((v13 & 1) == 0)
          goto LABEL_5;
      }
      if (!v5)
        break;
      v24 = *(void **)v6;
      v8 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v8;
      *(_QWORD *)(v6 + 8) = v24;
      v6 -= 8;
      if (v4 == ++v9)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t DataModel.sortedHomes.getter()
{
  return sub_23E202270(sub_23E2027D8);
}

id sub_23E2033D0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  HMCharacteristic.description.getter();

  v2 = (void *)sub_23E537538();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t HMCharacteristic.description.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  id v18;
  void *v19;
  id v20;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_service);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_accessory);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_home);

      if (v5)
      {
        v6 = objc_msgSend(v5, sel_name);

        sub_23E53755C();
      }
    }
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v7 = objc_msgSend(v1, sel_service);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_accessory);

    if (v9)
    {
      v10 = objc_msgSend(v9, sel_name);

      sub_23E53755C();
    }
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v11 = objc_msgSend(v1, sel_service);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_serviceType);
    v14 = sub_23E53755C();
    v16 = v15;

    v17._countAndFlagsBits = v14;
    v17._object = v16;
    ServiceKind.init(rawValue:)(v17);

    ServiceKind.localizedDescription.getter();
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v18 = objc_msgSend(v1, sel_metadata);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, sel_manufacturerDescription);

    if (v20)
    {
      sub_23E53755C();

    }
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  sub_23E5375BC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  return 0;
}

void ServiceKind.localizedDescription.getter()
{
  __asm { BR              X9 }
}

void sub_23E2037A0()
{
  static String.hfLocalized(_:)();
}

HomeDataModel::ServiceKind_optional __swiftcall ServiceKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeDataModel::ServiceKind_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_23E538384();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 35;
  switch(v3)
  {
    case 0:
      goto LABEL_37;
    case 1:
      v5 = 1;
      goto LABEL_37;
    case 2:
      v5 = 2;
      goto LABEL_37;
    case 3:
      v5 = 3;
      goto LABEL_37;
    case 4:
      v5 = 4;
      goto LABEL_37;
    case 5:
      v5 = 5;
      goto LABEL_37;
    case 6:
      v5 = 6;
      goto LABEL_37;
    case 7:
      v5 = 7;
      goto LABEL_37;
    case 8:
      v5 = 8;
      goto LABEL_37;
    case 9:
      v5 = 9;
      goto LABEL_37;
    case 10:
      v5 = 10;
      goto LABEL_37;
    case 11:
      v5 = 11;
      goto LABEL_37;
    case 12:
      v5 = 12;
      goto LABEL_37;
    case 13:
      v5 = 13;
      goto LABEL_37;
    case 14:
      v5 = 14;
      goto LABEL_37;
    case 15:
      v5 = 15;
      goto LABEL_37;
    case 16:
      v5 = 16;
      goto LABEL_37;
    case 17:
      v5 = 17;
      goto LABEL_37;
    case 18:
      v5 = 18;
      goto LABEL_37;
    case 19:
      v5 = 19;
      goto LABEL_37;
    case 20:
      v5 = 20;
      goto LABEL_37;
    case 21:
      v5 = 21;
      goto LABEL_37;
    case 22:
      v5 = 22;
      goto LABEL_37;
    case 23:
      v5 = 23;
      goto LABEL_37;
    case 24:
      v5 = 24;
      goto LABEL_37;
    case 25:
      v5 = 25;
      goto LABEL_37;
    case 26:
      v5 = 26;
      goto LABEL_37;
    case 27:
      v5 = 27;
      goto LABEL_37;
    case 28:
      v5 = 28;
      goto LABEL_37;
    case 29:
      v5 = 29;
      goto LABEL_37;
    case 30:
      v5 = 30;
      goto LABEL_37;
    case 31:
      v5 = 31;
      goto LABEL_37;
    case 32:
      v5 = 32;
      goto LABEL_37;
    case 33:
      v5 = 33;
      goto LABEL_37;
    case 34:
      v5 = 34;
LABEL_37:
      v6 = v5;
      break;
    case 35:
      break;
    case 36:
      v6 = 36;
      break;
    case 37:
      v6 = 37;
      break;
    case 38:
      v6 = 38;
      break;
    case 39:
      v6 = 39;
      break;
    case 40:
      v6 = 40;
      break;
    case 41:
      v6 = 41;
      break;
    case 42:
      v6 = 42;
      break;
    case 43:
      v6 = 43;
      break;
    case 44:
      v6 = 44;
      break;
    case 45:
      v6 = 45;
      break;
    case 46:
      v6 = 46;
      break;
    case 47:
      v6 = 47;
      break;
    case 48:
      v6 = 48;
      break;
    case 49:
      v6 = 49;
      break;
    case 50:
      v6 = 50;
      break;
    case 51:
      v6 = 51;
      break;
    case 52:
      v6 = 52;
      break;
    default:
      v6 = 53;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t ServiceKind.requiredCharacteristicKinds.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0 - 1;
  if (v1 <= 0x33 && ((0xCFFBFFEFFE7DFuLL >> v1) & 1) != 0)
    return sub_23E2CFF70((uint64_t)*(&off_250EE6240 + (char)v1));
  else
    return MEMORY[0x24BEE4B08];
}

uint64_t ServiceKind.optionalCharacteristicKinds.getter()
{
  unsigned __int8 *v0;
  unsigned int v1;

  v1 = *v0 - 1;
  if (v1 <= 0x33 && ((0xCF3BFFEFFE71DuLL >> v1) & 1) != 0)
    return sub_23E2CFF70((uint64_t)*(&off_250EE63E0 + (char)v1));
  else
    return MEMORY[0x24BEE4B08];
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24264FD54](a1, v6, a5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

size_t sub_23E204234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_23E24B948(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_23E2261B0();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E20432C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E204494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23E2044DC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23E1E3148(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_23E221588(&qword_254332C70);
    goto LABEL_7;
  }
  sub_23E2195A4(v17, a3 & 1, &qword_254332C70);
  v22 = sub_23E1E3148(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_23E5383C0();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_23E20485C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23E204648(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_254332C60);
}

uint64_t sub_23E204654(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD **v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (_QWORD **)v4;
  v27 = a1;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_23E1E3148(a2);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    v21 = *v6;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = v21[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v22 + 8 * v15) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_23E2217B0(a4);
    goto LABEL_7;
  }
  sub_23E205518(v18, a3 & 1, a4);
  v24 = sub_23E1E3148(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v6;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_23E20485C(v15, (uint64_t)v12, v27, v21);
}

uint64_t sub_23E2047C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = a5(0);
  result = sub_23E1E2FDC(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a5);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_23E20485C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23E536F80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23E2048F4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticResident();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333B60);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticResident;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333B60);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D9F0();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212C50(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E3914A8(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E204C1C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;

  v46 = a3;
  v6 = type metadata accessor for StaticUser();
  v42 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v39 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v38 - v9;
  v11 = sub_23E536F80();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F60);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v38[1] = a1;
  v38[2] = v3;
  v41 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v40 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23E419418(v19, (uint64_t)v17);
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
    v22 = (uint64_t)v45;
    v23 = v17;
    v21((uint64_t)v45, v17, v44);
    v24 = (uint64_t)v10;
    sub_23E419460((uint64_t)v41, (uint64_t)v10);
    v25 = *v46;
    v27 = sub_23E1E3300(v22);
    v28 = *(_QWORD *)(v25 + 16);
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (*(_QWORD *)(v25 + 24) >= v30)
    {
      if ((a2 & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D9C8();
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212C28(v30, a2 & 1);
      v32 = sub_23E1E3300((uint64_t)v45);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_20;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v20 = v39;
        sub_23E419460(v24, v39);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
        sub_23E4194A4(v20, *(_QWORD *)(*v46 + 56) + *(_QWORD *)(v42 + 72) * v27);
        goto LABEL_4;
      }
    }
    v34 = (_QWORD *)*v46;
    *(_QWORD *)(*v46 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v21(v34[6] + *(_QWORD *)(v43 + 72) * v27, v45, v44);
    v10 = (char *)v24;
    sub_23E419460(v24, v34[7] + *(_QWORD *)(v42 + 72) * v27);
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_19;
    v34[2] = v37;
LABEL_4:
    v19 += v40;
    a2 = 1;
    --v18;
    v17 = v23;
    if (!v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E204F1C(uint64_t a1, char a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t (*a5)(char *, uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;

  v32 = a5;
  v8 = v5;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - v12;
  v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v33 = sub_23E538060();
  if (*(_QWORD *)(v14 + 16))
  {
    v31 = v5;
    v15 = 1 << *(_BYTE *)(v14 + 32);
    v16 = (_QWORD *)(v14 + 64);
    v17 = -1;
    if (v15 < 64)
      v17 = ~(-1 << v15);
    v18 = v17 & *(_QWORD *)(v14 + 64);
    v19 = (unint64_t)(v15 + 63) >> 6;
    result = swift_retain();
    v21 = 0;
    while (1)
    {
      if (v18)
      {
        v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v24 = v23 | (v21 << 6);
      }
      else
      {
        v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v25 >= v19)
          goto LABEL_23;
        v26 = v16[v25];
        ++v21;
        if (!v26)
        {
          v21 = v25 + 1;
          if (v25 + 1 >= v19)
            goto LABEL_23;
          v26 = v16[v21];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v19)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v8 = v31;
                goto LABEL_30;
              }
              v29 = 1 << *(_BYTE *)(v14 + 32);
              if (v29 >= 64)
                bzero((void *)(v14 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v16 = -1 << v29;
              v8 = v31;
              *(_QWORD *)(v14 + 16) = 0;
              break;
            }
            v26 = v16[v27];
            if (!v26)
            {
              while (1)
              {
                v21 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_32;
                if (v21 >= v19)
                  goto LABEL_23;
                v26 = v16[v21];
                ++v27;
                if (v26)
                  goto LABEL_20;
              }
            }
            v21 = v27;
          }
        }
LABEL_20:
        v18 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      v28 = *(_QWORD *)(v14 + 48) + *(_QWORD *)(v11 + 72) * v24;
      if ((a2 & 1) != 0)
      {
        sub_23E1E2FDC(v28, (uint64_t)v13, a3);
        v22 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v24);
      }
      else
      {
        sub_23E1E2F50(v28, (uint64_t)v13, a3);
        v22 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v24);
        swift_bridgeObjectRetain();
      }
      result = v32(v13, v22, v33);
    }
  }
  result = swift_release();
LABEL_30:
  *v8 = v33;
  return result;
}

uint64_t sub_23E20517C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_23E536F80();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C68);
  v8 = sub_23E538060();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E205518(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = a2;
  v12 = sub_23E538060();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_23E2058B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E20432C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2058CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254333438, type metadata accessor for StaticAccessory);
  *v3 = result;
  return result;
}

uint64_t sub_23E2058F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254332C78, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_23E205924(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_254333410, &qword_254333F78);
  *v3 = result;
  return result;
}

uint64_t sub_23E205950(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23E51E30C(a1, a2, a3, a4, &qword_254332C88, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

unint64_t sub_23E205964()
{
  unint64_t result;

  result = qword_254333D78;
  if (!qword_254333D78)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333D78);
  }
  return result;
}

id sub_23E2059A0(_QWORD *a1, uint64_t a2, _QWORD *a3, char a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  id v20;
  _QWORD v22[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_23E538348();
  v11 = a3[3];
  if (v11)
  {
    v12 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v22[1] = v22;
    v13 = a4;
    v14 = a2;
    v15 = *(_QWORD *)(v11 - 8);
    MEMORY[0x24BDAC7A8](v12);
    v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = sub_23E538348();
    v19 = *(void (**)(char *, uint64_t))(v15 + 8);
    a2 = v14;
    a4 = v13;
    v19(v17, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  }
  else
  {
    v18 = 0;
  }
  v20 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v18, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v20;
}

unint64_t sub_23E205B0C()
{
  unint64_t result;

  result = qword_254332C30;
  if (!qword_254332C30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254332C30);
  }
  return result;
}

unint64_t sub_23E205B48()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  char v43;
  double v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  BOOL v52;
  unint64_t v53;
  char v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332980);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for ColorPickerFavorite();
  v75 = *(_QWORD *)(v70 - 8);
  v4 = MEMORY[0x24BDAC7A8](v70);
  v69 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v64 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v67 = (uint64_t)&v64 - v9;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(v0, sel_applicationData);
  v15 = objc_msgSend(v0, sel_currentUser);
  v16 = objc_msgSend(v15, sel_uniqueIdentifier);

  sub_23E536F68();
  v17 = sub_23E536F38();
  v19 = v18;
  v73 = *(void (**)(char *, uint64_t))(v11 + 8);
  v74 = v10;
  v73(v13, v10);
  v20 = (void *)sub_23E537538();
  v21 = objc_msgSend(v14, sel_objectForKeyedSubscript_, v20);

  if (!v21)
    goto LABEL_59;
  v68 = v14;
  v77 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  v22 = v76;
  v14 = v68;
  if (!*(_QWORD *)(v76 + 16) || (v23 = sub_23E211350(v17, v19), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();

    return 0;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v72 = *(_QWORD *)(v25 + 16);
  if (v72)
  {
    swift_bridgeObjectRetain();
    v26 = 0;
    v66 = MEMORY[0x24BEE4AF8];
    v27 = v70;
    v71 = v25;
    while (1)
    {
      v28 = *(_QWORD *)(v25 + 8 * v26 + 32);
      *((_QWORD *)v8 + 4) = 0x3FF0000000000000;
      v29 = &v8[*(int *)(v27 + 24)];
      swift_bridgeObjectRetain();
      sub_23E536F74();
      if (!*(_QWORD *)(v28 + 16))
      {
LABEL_7:
        swift_bridgeObjectRelease();
        v73(v29, v74);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v3, 1, 1, v27);
        goto LABEL_8;
      }
      swift_bridgeObjectRetain();
      v30 = sub_23E211350(114, 0xE100000000000000);
      if ((v31 & 1) != 0
        && *(_QWORD *)(v28 + 16)
        && (v32 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v30),
            v33 = sub_23E211350(103, 0xE100000000000000),
            (v34 & 1) != 0)
        && *(_QWORD *)(v28 + 16)
        && (v35 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v33),
            v36 = sub_23E211350(98, 0xE100000000000000),
            (v37 & 1) != 0))
      {
        v38 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v36);
        swift_bridgeObjectRelease();
        v39 = *(_QWORD *)(v28 + 16);
        if (!v39)
          goto LABEL_41;
        v40 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v28 + 16))
          goto LABEL_7;
        v38 = 0;
        v35 = 0;
        v32 = 0;
        v40 = 1;
      }
      v41 = sub_23E211350(0x74617265706D6574, 0xEB00000000657275);
      v43 = v42;
      v44 = 0.0;
      if ((v42 & 1) != 0)
        v44 = *(double *)(*(_QWORD *)(v28 + 56) + 8 * v41);
      if (*(_QWORD *)(v28 + 16)
        && (v45 = sub_23E211350(6649192, 0xE300000000000000), (v46 & 1) != 0)
        && *(_QWORD *)(v28 + 16)
        && (v65 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v45),
            v47 = sub_23E211350(0x6974617275746173, 0xEA00000000006E6FLL),
            (v48 & 1) != 0))
      {
        if ((v43 & 1) != 0)
          goto LABEL_29;
        v38 = 0;
        v35 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v47);
        LOBYTE(v39) = 1;
        v32 = v65;
        v27 = v70;
      }
      else
      {
        if ((v43 & 1) != 0)
        {
LABEL_29:
          v35 = 0;
          v38 = 0;
          v49 = round(v44);
          HIDWORD(v50) = 1089470464;
          v52 = v49 >= 65536.0 || v49 <= -1.0;
          LODWORD(v50) = llround(v44);
          if (v52)
            v32 = 100;
          else
            v32 = v50;
          LOBYTE(v39) = 2;
          v27 = v70;
          goto LABEL_41;
        }
        v27 = v70;
        if ((v40 & 1) != 0)
          goto LABEL_7;
        LOBYTE(v39) = 0;
      }
LABEL_41:
      *(_QWORD *)v8 = v32;
      *((_QWORD *)v8 + 1) = v35;
      *((_QWORD *)v8 + 2) = v38;
      v8[24] = v39;
      if (*(_QWORD *)(v28 + 16) && (v53 = sub_23E211350(0x656E746867697262, 0xEA00000000007373), (v54 & 1) != 0))
      {
        v55 = *(double *)(*(_QWORD *)(v28 + 56) + 8 * v53);
        swift_bridgeObjectRelease();
        if (v55 > 0.0)
          v56 = v55;
        else
          v56 = 0.0;
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = 1.0;
      }
      if (v56 > 1.0)
        v56 = 1.0;
      *((double *)v8 + 4) = v56;
      sub_23E3E6148((uint64_t)v8, (uint64_t)v3);
      v57 = v75;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v3, 0, 1, v27);
      sub_23E3E618C((uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v3, 1, v27) != 1)
      {
        v58 = v67;
        sub_23E3E6104((uint64_t)v3, v67);
        sub_23E3E6104(v58, v69);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v59 = v66;
        else
          v59 = sub_23E51E554(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
        v61 = *(_QWORD *)(v59 + 16);
        v60 = *(_QWORD *)(v59 + 24);
        if (v61 >= v60 >> 1)
          v59 = sub_23E51E554(v60 > 1, v61 + 1, 1, v59);
        *(_QWORD *)(v59 + 16) = v61 + 1;
        v62 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        v66 = v59;
        sub_23E3E6104(v69, v59 + v62 + *(_QWORD *)(v75 + 72) * v61);
        goto LABEL_9;
      }
LABEL_8:
      sub_23E3E60C4((uint64_t)v3);
LABEL_9:
      ++v26;
      v25 = v71;
      if (v72 == v26)
      {

        swift_bridgeObjectRelease_n();
        return v66;
      }
    }
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23E2061D8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t result;
  char v51;
  double v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332980);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v68 - v5;
  v7 = type metadata accessor for ColorPickerFavorite();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v72 = (uint64_t)&v68 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v73 = (unint64_t)&v68 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v71 = (char *)&v68 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v68 - v18;
  v20 = objc_msgSend(v0, sel_applicationData);
  v21 = (void *)sub_23E537538();
  v70 = v20;
  v22 = objc_msgSend(v20, sel_objectForKeyedSubscript_, v21);

  if (v22)
  {
    v75 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E08);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v23 = v74;
      v24 = *(_QWORD *)(v74 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        v25 = 0;
        v26 = MEMORY[0x24BEE4AF8];
        do
        {
          v27 = *(_QWORD *)(v23 + 8 * v25 + 32);
          v28 = *(_QWORD *)(v27 + 16);
          swift_bridgeObjectRetain();
          if (v28
            && (v29 = sub_23E211350(114, 0xE100000000000000), (v30 & 1) != 0)
            && *(_QWORD *)(v27 + 16)
            && (v31 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29),
                v32 = sub_23E211350(103, 0xE100000000000000),
                (v33 & 1) != 0)
            && *(_QWORD *)(v27 + 16)
            && (v72 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v32),
                v34 = sub_23E211350(98, 0xE100000000000000),
                (v35 & 1) != 0))
          {
            v36 = *(_QWORD **)(*(_QWORD *)(v27 + 56) + 8 * v34);
            v68 = v31;
            v69 = v36;
            v37 = (uint64_t)v71;
            sub_23E536F74();
            v38 = v72;
            *(_QWORD *)v37 = v68;
            *(_QWORD *)(v37 + 8) = v38;
            *(_QWORD *)(v37 + 16) = v69;
            *(_BYTE *)(v37 + 24) = 0;
            *(_QWORD *)(v37 + 32) = 0x3FF0000000000000;
            sub_23E3E6104(v37, (uint64_t)v6);
            v39 = 0;
          }
          else
          {
            v39 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v39, 1, v7);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          {
            sub_23E3E60C4((uint64_t)v6);
          }
          else
          {
            sub_23E3E6104((uint64_t)v6, (uint64_t)v19);
            sub_23E3E6104((uint64_t)v19, v73);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v26 = sub_23E51E554(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
            v41 = *(_QWORD *)(v26 + 16);
            v40 = *(_QWORD *)(v26 + 24);
            if (v41 >= v40 >> 1)
              v26 = sub_23E51E554(v40 > 1, v41 + 1, 1, v26);
            *(_QWORD *)(v26 + 16) = v41 + 1;
            sub_23E3E6104(v73, v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v41);
          }
          ++v25;
        }
        while (v24 != v25);
LABEL_46:

        swift_bridgeObjectRelease_n();
        return v26;
      }
      swift_bridgeObjectRelease();

      return MEMORY[0x24BEE4AF8];
    }
  }
  v42 = (void *)sub_23E537538();
  v43 = v70;
  v44 = objc_msgSend(v70, sel_objectForKeyedSubscript_, v42);

  if (!v44
    || (v75 = v44,
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48),
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D45E08),
        (swift_dynamicCast() & 1) == 0))
  {

    return 0;
  }
  v45 = v74;
  v46 = *(_QWORD *)(v74 + 16);
  if (!v46)
  {
    swift_bridgeObjectRelease();

    return MEMORY[0x24BEE4AF8];
  }
  v69 = v71 + 8;
  swift_bridgeObjectRetain();
  v47 = 0;
  v26 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v48 = *(_QWORD *)(v45 + 8 * v47 + 32);
    v49 = *(_QWORD *)(v48 + 16);
    swift_bridgeObjectRetain();
    if (!v49 || (result = sub_23E211350(1886217588, 0xE400000000000000), (v51 & 1) == 0))
    {
      v64 = 1;
      goto LABEL_39;
    }
    v52 = *(double *)(*(_QWORD *)(v48 + 56) + 8 * result);
    if ((~*(_QWORD *)&v52 & 0x7FF0000000000000) == 0)
      break;
    if (v52 <= -9.22337204e18)
      goto LABEL_52;
    if (v52 >= 9.22337204e18)
      goto LABEL_53;
    v53 = (uint64_t)v52;
    if ((uint64_t)v52 <= 1)
      v53 = 1;
    if (v53 >= 0x10)
      v54 = (unsigned __int16)(0xF4240 / v53);
    else
      v54 = 0xFFFFLL;
    v73 = v26;
    v55 = v8;
    v56 = v4;
    v57 = v7;
    v58 = v45;
    v59 = v46;
    v60 = v11;
    v61 = v71;
    sub_23E536F74();
    *(_QWORD *)v61 = v54;
    v62 = v69;
    *v69 = 0;
    v62[1] = 0;
    v61[24] = 2;
    *((_QWORD *)v61 + 4) = 0x3FF0000000000000;
    v63 = (uint64_t)v61;
    v11 = v60;
    v46 = v59;
    v45 = v58;
    v7 = v57;
    v4 = v56;
    v8 = v55;
    v26 = v73;
    sub_23E3E6104(v63, (uint64_t)v4);
    v64 = 0;
LABEL_39:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, v64, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {
      sub_23E3E60C4((uint64_t)v4);
    }
    else
    {
      v65 = v72;
      sub_23E3E6104((uint64_t)v4, v72);
      sub_23E3E6104(v65, (uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v26 = sub_23E51E554(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
      v67 = *(_QWORD *)(v26 + 16);
      v66 = *(_QWORD *)(v26 + 24);
      if (v67 >= v66 >> 1)
        v26 = sub_23E51E554(v66 > 1, v67 + 1, 1, v26);
      *(_QWORD *)(v26 + 16) = v67 + 1;
      sub_23E3E6104((uint64_t)v11, v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v67);
    }
    if (v46 == ++v47)
      goto LABEL_46;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

unint64_t sub_23E2068AC()
{
  unint64_t result;

  result = qword_254332C08;
  if (!qword_254332C08)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254332C08);
  }
  return result;
}

unint64_t sub_23E2068E8()
{
  unint64_t result;

  result = qword_254332BF0;
  if (!qword_254332BF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254332BF0);
  }
  return result;
}

uint64_t sub_23E206924(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1F93EC(a1, *(_QWORD *)(v1 + 16), &qword_254332BD0, &qword_254332BC8);
}

uint64_t sub_23E20694C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BE0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BD0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v22, v3);
  v24 = v16;
  type metadata accessor for CoordinationSnapshot.UpdateType();
  sub_23E537988();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v14, &qword_254332BD0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v14, v17);
    return sub_23E1E7C64((uint64_t)v16, &qword_254332BD0);
  }
  return result;
}

uint64_t sub_23E206B44(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_23E1E335C(0, &qword_254332C20);
  v2 = sub_23E5377F0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_23E206BB0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_23E24D560(a1, a2, a3);
}

unint64_t sub_23E206BC4(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id v24;
  id v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46[24];
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49;

  v3 = v2;
  v42 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticUser();
  v43 = *(_QWORD *)(v49 - 8);
  v8 = MEMORY[0x24BDAC7A8](v49);
  v41 = (uint64_t)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (uint64_t)v36 - v10;
  if (a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v11 = sub_23E53803C();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v36[1] = v3;
      v40 = a1 & 0xC000000000000001;
      v12 = MEMORY[0x24BEE4AF8];
      v13 = 4;
      v38 = a1;
      v39 = v11;
      while (1)
      {
        v3 = v13 - 4;
        if (v40)
        {
          v14 = (id)MEMORY[0x24264F148](v13 - 4, a1);
          v15 = v13 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_29;
        }
        else
        {
          v14 = *(id *)(a1 + 8 * v13);
          v15 = v13 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        v44 = v15;
        v45 = v12;
        v16 = v14;
        v17 = v42;
        v18 = objc_msgSend(v16, sel_uniqueIdentifier);
        sub_23E536F68();

        v19 = objc_msgSend(v16, sel_name);
        v20 = sub_23E53755C();
        v22 = v21;

        v23 = (uint64_t *)&v7[*(int *)(v49 + 20)];
        *v23 = v20;
        v23[1] = v22;
        v24 = objc_msgSend(v17, sel_uniqueIdentifier);
        sub_23E536F68();

        v25 = objc_msgSend(v17, sel_homeAccessControlForUser_, v16);
        if (objc_msgSend(v25, sel_isOwner))
        {

          v26 = 0;
          a1 = v38;
          v12 = v45;
        }
        else
        {
          v27 = objc_msgSend(v25, sel_isAdministrator);
          v12 = v45;
          if ((v27 & 1) == 0)
          {
            if (objc_msgSend(v25, sel_isRestrictedGuest))
            {
              v47 = &type metadata for HomeKitFeatures;
              v48 = sub_23E20B680();
              v46[0] = 1;
              v29 = sub_23E5370AC();
              __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);

              v28 = v44;
              if ((v29 & 1) != 0)
              {
                v26 = 3;
LABEL_21:
                a1 = v38;
                goto LABEL_22;
              }
            }
            else
            {

              v28 = v44;
            }
            v26 = 2;
            goto LABEL_21;
          }

          v26 = 1;
          a1 = v38;
        }
        v28 = v44;
LABEL_22:
        v30 = v49;
        v7[*(int *)(v49 + 28)] = v26;
        v31 = v43;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v7, 0, 1, v30);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v7, 1, v30) == 1)
        {
          sub_23E4194E8((uint64_t)v7);
        }
        else
        {
          v32 = v37;
          sub_23E419460((uint64_t)v7, v37);
          sub_23E419460(v32, v41);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_23E51E52C(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
          v34 = *(_QWORD *)(v12 + 16);
          v33 = *(_QWORD *)(v12 + 24);
          if (v34 >= v33 >> 1)
            v12 = sub_23E51E52C(v33 > 1, v34 + 1, 1, v12);
          *(_QWORD *)(v12 + 16) = v34 + 1;
          sub_23E419460(v41, v12+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v34);
        }
        ++v13;
        if (v28 == v39)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23E207008(unint64_t a1, void *a2)
{
  void *v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v3 = v2;
  v27 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for StaticResident();
  v8 = *(_QWORD *)(v26 - 8);
  v9 = MEMORY[0x24BDAC7A8](v26);
  v25 = (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v23 = (uint64_t)v22 - v11;
  if (a1 >> 62)
    goto LABEL_18;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; v12 = sub_23E53803C())
  {
    v22[1] = v3;
    v13 = MEMORY[0x24BEE4AF8];
    v24 = a1 & 0xC000000000000001;
    v14 = 4;
    v15 = a1;
    while (1)
    {
      v17 = v24 ? (id)MEMORY[0x24264F148](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      v3 = v17;
      a1 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      StaticResident.init(with:home:)(v17, v27, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v26) == 1)
      {
        sub_23E1E7C64((uint64_t)v7, &qword_254333BF0);
      }
      else
      {
        v18 = v23;
        sub_23E1E2FDC((uint64_t)v7, v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        sub_23E1E2FDC(v18, v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_23E51E5A4(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
        v20 = *(_QWORD *)(v13 + 16);
        v19 = *(_QWORD *)(v13 + 24);
        if (v20 >= v19 >> 1)
          v13 = sub_23E51E5A4(v19 > 1, v20 + 1, 1, v13);
        *(_QWORD *)(v13 + 16) = v20 + 1;
        sub_23E1E2FDC(v25, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      }
      ++v14;
      v16 = a1 == v12;
      a1 = v15;
      if (v16)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_23E2072B0(uint64_t a1)
{
  return sub_23E20E210(a1, &qword_254333CD8, &qword_2543326B0, (uint64_t (*)(char *))sub_23E1FB994, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

unint64_t sub_23E2072D4(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_254333FB0, &qword_254332C70);
}

unint64_t sub_23E2072E8(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_254333FA8, &qword_254332C60);
}

unint64_t sub_23E2072FC(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333FA0, &qword_256D3F238, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
}

unint64_t sub_23E207318(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F98, &qword_2543333D0, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
}

unint64_t sub_23E207334(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F90, &qword_256D3F240, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
}

unint64_t sub_23E207350(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F88, &qword_256D3F3C8, type metadata accessor for StaticHH2Update);
}

unint64_t sub_23E20736C(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F80, &qword_2543326A8, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

unint64_t sub_23E207388(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F78, &qword_2543333C8, type metadata accessor for StaticAccessory);
}

unint64_t sub_23E2073A4(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333B60, &qword_2543333C0, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

unint64_t sub_23E2073C0(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F70, &qword_2543333B8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

unint64_t sub_23E2073DC(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F68, &qword_254332C58, type metadata accessor for StateSnapshot);
}

unint64_t sub_23E2073F8(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F60, &qword_256D3F3B0, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
}

unint64_t sub_23E207414(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333F58, &qword_254332C50, type metadata accessor for StaticRoom);
}

unint64_t sub_23E207430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1D8);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_2543327A0);
    result = sub_23E1E3148((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E536F80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = (_OWORD *)(v7[7] + 32 * v16);
    v20 = *((_OWORD *)v9 + 1);
    *v19 = *(_OWORD *)v9;
    v19[1] = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_23E2075CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254332B90)
  {
    v0 = sub_23E537238();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254332B90);
  }
}

uint64_t sub_23E207620(uint64_t a1)
{
  return sub_23E30ACA8(a1, qword_254333540);
}

uint64_t sub_23E207640()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E537FC4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PhoenixMetricsAggregator()
{
  uint64_t result;

  result = qword_254333D08;
  if (!qword_254333D08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E20770C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    result = sub_23E537FAC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_23E207790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15[4];

  v1 = v0;
  v2 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer), sel_invalidate);
  if (qword_254333D40 != -1)
    swift_once();
  v3 = sub_23E5371A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_254333540);
  v4 = sub_23E537190();
  v5 = sub_23E537B20();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15[0] = v7;
    *(_DWORD *)v6 = 136315394;
    v8 = sub_23E538588();
    sub_23E1FD768(v8, v9, v15);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    *(_QWORD *)&v13 = 0x405E000000000000;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v4, v5, "%s beginning metrics aggregation with interval %f", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }

  sub_23E205964();
  v15[3] = type metadata accessor for PhoenixMetricsAggregator();
  v15[0] = v1;
  v13 = 0u;
  v14 = 0u;
  swift_retain();
  v10 = sub_23E2059A0(v15, (uint64_t)sel_timerFired, &v13, 1, 120.0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop, v13, v14);
  objc_msgSend(v11, sel_addTimer_forMode_, v10, *MEMORY[0x24BDBCB80]);

  v12 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v10;

}

uint64_t sub_23E2079EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    result = sub_23E537FAC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E207A70()
{
  return sub_23E1EE1C4(&qword_2543324B0, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, (uint64_t)&protocol conformance descriptor for PhoenixMetricsAggregator.IntervalKey);
}

void sub_23E207A9C()
{
  unint64_t v0;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E207B10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E207B88()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E53797C();
  if (v1 <= 0x3F)
  {
    result = sub_23E537958();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncStreamBatchManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncStreamBatchManager);
}

uint64_t sub_23E207C54()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for StaticSoftwareUpdate.Kind(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E207CD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char *v6;
  char *v7;

  result = type metadata accessor for StaticHH2Update(319);
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for StaticSoftwareUpdateMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v6 = &v4;
      swift_getTupleTypeLayout2();
      v7 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E207D94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E207E18()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = sub_23E536F20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoordinationSnapshot()
{
  return &type metadata for CoordinationSnapshot;
}

unint64_t sub_23E207EE4()
{
  unint64_t result;

  result = sub_23E207430(MEMORY[0x24BEE4AF8]);
  qword_254334BA8 = result;
  return result;
}

uint64_t sub_23E207F08()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  void *v12;

  v6 = MEMORY[0x24BEE0158] + 64;
  v7 = MEMORY[0x24BEE0158] + 64;
  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v8 = &v5;
    swift_getTupleTypeLayout2();
    v9 = &v4;
    swift_getTupleTypeLayout2();
    v10 = &v3;
    swift_getTupleTypeLayout2();
    v11 = &v2;
    v12 = &unk_23E557EB0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23E207FE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208068()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208100()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23E208180()
{
  unint64_t result;

  result = qword_254333258;
  if (!qword_254333258)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind, &type metadata for CharacteristicKind);
    atomic_store(result, (unint64_t *)&qword_254333258);
  }
  return result;
}

void sub_23E2081C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, &qword_254334AD8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23E2082E4()
{
  unint64_t v0;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for SnapshotModerator()
{
  uint64_t result;

  result = qword_254332800;
  if (!qword_254332800)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for UmbrellaCategory()
{
  return &type metadata for UmbrellaCategory;
}

unint64_t sub_23E2083BC()
{
  unint64_t result;

  result = qword_256D410F0;
  if (!qword_256D410F0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for UmbrellaCategory, &type metadata for UmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D410F0);
  }
  return result;
}

uint64_t sub_23E208400()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208484()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208540(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F78);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v11 = objc_msgSend(a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v12 = sub_23E5377F0();

  v13 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = sub_23E485534(v12, v13, (char)a2, a3, a4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v29 = 0;
    v31 = MEMORY[0x24BEE4AF8];
    sub_23E205924(0, v16, 0);
    v17 = v31;
    v18 = *(_QWORD *)(type metadata accessor for StaticAccessory(0) - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v28 = v15;
    v20 = v15 + ((v19 + 32) & ~v19);
    v21 = *(_QWORD *)(v18 + 72);
    do
    {
      v22 = (uint64_t)&v10[*(int *)(v30 + 48)];
      sub_23E1E2F50(v20, v22, type metadata accessor for StaticAccessory);
      v23 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v22, v23);
      v31 = v17;
      v25 = *(_QWORD *)(v17 + 16);
      v24 = *(_QWORD *)(v17 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23E205924(v24 > 1, v25 + 1, 1);
        v17 = v31;
      }
      *(_QWORD *)(v17 + 16) = v25 + 1;
      sub_23E1E4E3C((uint64_t)v10, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v25, &qword_254333F78);
      v20 += v21;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v14 = v29;
    if (*(_QWORD *)(v17 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543333C8);
      v26 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v26 = MEMORY[0x24BEE4B00];
LABEL_10:
  v31 = v26;
  sub_23E45C714(v17, 1, &v31, type metadata accessor for StaticAccessory, &qword_254333F78, (void (*)(void))sub_23E212C14, (void (*)(void))sub_23E1F1310);
  swift_bridgeObjectRelease();
  if (!v14)
    return v31;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E20881C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticResident()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23E208898()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254333BF8)
  {
    type metadata accessor for StaticResident();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254333BF8);
  }
}

uint64_t sub_23E2088EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208984(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  id v13;
  unint64_t v14;
  id v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t i;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333B60);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v43 - v7;
  if (!objc_msgSend(a1, sel_supportsResidentSelection))
  {
    v13 = objc_msgSend(a1, sel_residentDevices);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C18);
    v14 = sub_23E5377F0();

    v15 = a1;
    v16 = sub_23E207008(v14, v15);
    v44 = 0;
    swift_bridgeObjectRelease();

    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v45[0] = MEMORY[0x24BEE4AF8];
      sub_23E2CB028(0, v17, 0);
      v18 = v45[0];
      v19 = *(_QWORD *)(type metadata accessor for StaticResident() - 8);
      v20 = *(unsigned __int8 *)(v19 + 80);
      v43 = v16;
      v21 = v16 + ((v20 + 32) & ~v20);
      v22 = *(_QWORD *)(v19 + 72);
      do
      {
        v23 = (uint64_t)&v6[*(int *)(v2 + 48)];
        sub_23E1E2F50(v21, v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
        v24 = sub_23E536F80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v6, v23, v24);
        v45[0] = v18;
        v26 = *(_QWORD *)(v18 + 16);
        v25 = *(_QWORD *)(v18 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_23E2CB028(v25 > 1, v26 + 1, 1);
          v18 = v45[0];
        }
        *(_QWORD *)(v18 + 16) = v26 + 1;
        sub_23E391460((uint64_t)v6, v18+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v26);
        v21 += v22;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v18 + 16))
        goto LABEL_10;
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      {
LABEL_10:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543333C0);
        v27 = sub_23E53806C();
        goto LABEL_21;
      }
    }
    v27 = MEMORY[0x24BEE4B00];
LABEL_21:
    v45[0] = v27;
    v29 = v44;
    sub_23E2048F4(v18, 1, v45);
    if (v29)
      goto LABEL_22;
    goto LABEL_26;
  }
  v9 = objc_msgSend(a1, sel_autoSelectedPreferredResidents);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v11 = v9;
    sub_23E1E335C(0, (unint64_t *)&qword_254332C18);
    v12 = sub_23E5377F0();

  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
  }
  v28 = a1;
  v29 = 0;
  v30 = sub_23E207008(v12, v28);
  swift_bridgeObjectRelease();

  v31 = *(_QWORD *)(v30 + 16);
  if (!v31)
    goto LABEL_23;
  v44 = 0;
  v45[0] = v10;
  sub_23E2CB028(0, v31, 0);
  v32 = v45[0];
  v33 = *(_QWORD *)(type metadata accessor for StaticResident() - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v43 = v30;
  v35 = v30 + ((v34 + 32) & ~v34);
  v36 = *(_QWORD *)(v33 + 72);
  do
  {
    v37 = (uint64_t)&v8[*(int *)(v2 + 48)];
    sub_23E1E2F50(v35, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v38 = sub_23E536F80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v8, v37, v38);
    v45[0] = v32;
    v40 = *(_QWORD *)(v32 + 16);
    v39 = *(_QWORD *)(v32 + 24);
    if (v40 >= v39 >> 1)
    {
      sub_23E2CB028(v39 > 1, v40 + 1, 1);
      v32 = v45[0];
    }
    *(_QWORD *)(v32 + 16) = v40 + 1;
    sub_23E391460((uint64_t)v8, v32+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v40);
    v35 += v36;
    --v31;
  }
  while (v31);
  swift_bridgeObjectRelease();
  v29 = v44;
  if (!*(_QWORD *)(v32 + 16))
    goto LABEL_24;
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333C0);
  for (i = sub_23E53806C(); ; i = MEMORY[0x24BEE4B00])
  {
    v45[0] = i;
    sub_23E2048F4(v32, 1, v45);
    if (!v29)
      break;
LABEL_22:
    swift_bridgeObjectRelease();
    swift_release();
    __break(1u);
LABEL_23:
    swift_bridgeObjectRelease();
    v32 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_18;
LABEL_24:
    ;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return v45[0];
}

uint64_t sub_23E208DFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StaticHome();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E208E90()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  const char *v6;
  const char *v7;
  const char *v8;
  char v9;
  const char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  void *v21;

  v10 = "\b";
  v11 = &unk_23E53DF20;
  v12 = MEMORY[0x24BEE0158] + 64;
  v13 = MEMORY[0x24BEE0158] + 64;
  v14 = &unk_23E53DF38;
  v15 = &unk_23E53DF50;
  v16 = MEMORY[0x24BEE0158] + 64;
  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = "\b";
    v7 = "\b";
    v8 = "\b";
    swift_getTupleTypeLayout();
    v17 = &v9;
    swift_getTupleTypeLayout2();
    v18 = &v4;
    swift_getTupleTypeLayout2();
    v19 = &v3;
    swift_getTupleTypeLayout2();
    v20 = &v2;
    v21 = &unk_23E53DF80;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = a1 + v9;
  v14 = a2 + v9;
  swift_bridgeObjectRetain();
  v7(v13, v14, v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23E20905C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E2090D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;

  v0 = sub_23E536F80();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for StaticUser();
  __swift_allocate_value_buffer((uint64_t)v4, qword_254334C70);
  v5 = __swift_project_value_buffer((uint64_t)v4, (uint64_t)qword_254334C70);
  if (qword_254333BE8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_254334C30);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v7(v3, v6, v0);
  if (qword_254333B70 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v0, (uint64_t)qword_254334C08);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  v9 = (_QWORD *)(v5 + v4[5]);
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v5 + v4[6], v8, v0);
  *(_BYTE *)(v5 + v4[7]) = 0;
  return result;
}

uint64_t sub_23E209238(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F60);
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(a1, sel_users);
  sub_23E205B0C();
  v6 = sub_23E5377F0();

  v7 = a1;
  v8 = 0;
  v9 = sub_23E206BC4(v6, v7);
  swift_bridgeObjectRelease();

  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v21 = 0;
    v23 = MEMORY[0x24BEE4AF8];
    sub_23E2CAF78(0, v10, 0);
    v11 = v23;
    v12 = *(_QWORD *)(type metadata accessor for StaticUser() - 8);
    v13 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    do
    {
      v15 = (uint64_t)&v4[*(int *)(v22 + 48)];
      sub_23E418308(v13, v15);
      v16 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v4, v15, v16);
      v23 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_23E2CAF78(v17 > 1, v18 + 1, 1);
        v11 = v23;
      }
      *(_QWORD *)(v11 + 16) = v18 + 1;
      sub_23E4193D0((uint64_t)v4, v11+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v18);
      v13 += v14;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v8 = v21;
    if (*(_QWORD *)(v11 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3B0);
      v19 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v19 = MEMORY[0x24BEE4B00];
LABEL_10:
  v23 = v19;
  sub_23E204C1C(v11, 1, &v23);
  swift_bridgeObjectRelease();
  if (!v8)
    return v23;
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23E209490()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E3DB0D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23E209548()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v0 = sub_23E536F80();
  v21 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for StaticRoom(0);
  __swift_allocate_value_buffer((uint64_t)v6, qword_254333F20);
  v7 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)qword_254333F20);
  if (qword_254333BE0 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v0, (uint64_t)qword_254333BC8);
  v8 = type metadata accessor for StaticZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_23E536F74();
  v9 = MEMORY[0x24BEE4AF8];
  v20 = sub_23E207388(MEMORY[0x24BEE4AF8]);
  v19 = sub_23E20736C(v9);
  v17 = sub_23E20D368(v9);
  v16 = sub_23E207334(v9);
  v10 = sub_23E207318(v9);
  v11 = sub_23E2072FC(v9);
  v12 = sub_23E2073C0(v9);
  v13 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v7, v18, v0);
  v14 = (_QWORD *)(v7 + v6[5]);
  *v14 = 0x6F52207974706D45;
  v14[1] = 0xEA00000000006D6FLL;
  *(_BYTE *)(v7 + v6[6]) = 0;
  sub_23E1E4E3C((uint64_t)v5, v7 + v6[7], &qword_254333190);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v7 + v6[8], v2, v0);
  *(_QWORD *)(v7 + v6[9]) = v20;
  *(_QWORD *)(v7 + v6[10]) = v19;
  *(_QWORD *)(v7 + v6[11]) = v17;
  *(_QWORD *)(v7 + v6[12]) = v16;
  *(_QWORD *)(v7 + v6[13]) = v10;
  *(_QWORD *)(v7 + v6[14]) = v11;
  *(_QWORD *)(v7 + v6[15]) = v12;
  *(_QWORD *)(v7 + v6[16]) = v9;
  *(_QWORD *)(v7 + v6[17]) = v9;
  return result;
}

uint64_t sub_23E2097B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    result = sub_23E5370A0();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_23E209884()
{
  return type metadata accessor for DataModel();
}

id sub_23E2098AC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DataModel()), sel_init);
  qword_254333F18 = (uint64_t)result;
  return result;
}

uint64_t sub_23E2098DC(id *a1)
{
  return sub_23E2535CC(a1) & 1;
}

uint64_t sub_23E2098F8(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void *v19;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char *v28;
  id v29;
  void *v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD v49[2];
  void (*v50)(uint64_t, uint64_t);
  id v51;
  void (*v52)(uint64_t, char *, uint64_t);
  id v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23E536F80();
  v6 = *(_QWORD *)(v59 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v59);
  v9 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)v49 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v49 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DE8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v16, &qword_254333DE8);
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  v17 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254332BE8) + 48)];
  v57 = v6;
  v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  if ((_DWORD)a1 == 1)
  {
    v18(v9, v17, v59);
    swift_getKeyPath();
    v61 = a2;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    v61 = a2;
    swift_getKeyPath();
    sub_23E537088();
    swift_release();
    swift_beginAccess();
    v19 = (void *)sub_23E2DA994((uint64_t)v9);
    swift_endAccess();
    v61 = a2;
    swift_getKeyPath();
    sub_23E53707C();
    swift_release();
    if (v19)
    {
      objc_msgSend(v19, sel_setDelegate_, 0);
      swift_getKeyPath();
      v61 = a2;
      sub_23E537070();
      swift_release();
      v61 = a2;
      swift_getKeyPath();
      sub_23E537088();
      swift_release();
      swift_beginAccess();
      sub_23E2DA898((uint64_t)v9);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v61 = a2;
      swift_getKeyPath();
      sub_23E53707C();

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v9, v59);
  }
  v21 = v59;
  v18(v13, v17, v59);
  v22 = objc_msgSend(a2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v23 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v24);
  v49[-2] = v13;
  v25 = v58;
  v26 = sub_23E206BB0(sub_23E2098DC, (uint64_t)&v49[-4], v23);
  swift_bridgeObjectRelease();
  v27 = v26;
  v28 = v13;
  if (!v27)
    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v13, v21);
  v29 = objc_msgSend(v27, sel_userActionPredictionController);
  if (!v29)
  {

    return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v13, v21);
  }
  v30 = v29;
  v53 = v27;
  swift_beginAccess();
  if (qword_254333470)
    v31 = a2;
  else
    v31 = 0;
  objc_msgSend(v30, sel_setDelegate_, v31);
  v52 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
  v52((uint64_t)v56, v13, v21);
  swift_getKeyPath();
  v58 = v25;
  v32 = &a2[OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar];
  v60 = a2;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  v33 = v30;
  v54 = v28;
  v34 = (uint64_t)v33;
  v51 = v33;
  v49[1] = v32;
  sub_23E537070();
  swift_release();
  v60 = a2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v35 = &a2[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary];
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v62 = *(_QWORD *)v35;
  *(_QWORD *)v35 = 0x8000000000000000;
  v37 = (uint64_t)v56;
  sub_23E2044DC(v34, (uint64_t)v56, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v35 = v62;
  swift_bridgeObjectRelease();
  v38 = v57;
  v50 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v39 = v59;
  v50(v37, v59);
  swift_endAccess();
  v60 = a2;
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  v40 = sub_23E537934();
  v41 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v55, 1, 1, v40);
  v42 = v37;
  v43 = v39;
  v52(v42, v54, v39);
  sub_23E5378F8();
  v44 = a2;
  v45 = sub_23E5378EC();
  v46 = (*(unsigned __int8 *)(v38 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v47 = (char *)swift_allocObject();
  v48 = MEMORY[0x24BEE6930];
  *((_QWORD *)v47 + 2) = v45;
  *((_QWORD *)v47 + 3) = v48;
  *((_QWORD *)v47 + 4) = v44;
  v18(&v47[v46], v56, v43);
  sub_23E26D17C(v41, (uint64_t)&unk_256D41EF8, (uint64_t)v47);
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v50)(v54, v43);
}

uint64_t sub_23E209FD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8) - 8) + 80);
  return sub_23E2010C8(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v5 + v6) & ~v6));
}

void sub_23E20A05C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[6];

  v21 = a5;
  v22 = a2;
  v19 = a4;
  v20 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  v6 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v19, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v5);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  *(_QWORD *)(v15 + ((v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  aBlock[4] = sub_23E209FD8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E206B44;
  aBlock[3] = &block_descriptor_7;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v22, sel_fetchPredictionsWithCompletion_, v16);
  _Block_release(v16);
}

uint64_t sub_23E20A24C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_23E20A28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  int8x16_t v20;

  v1 = *(_QWORD *)(v0 + 96);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 64) = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    v5 = sub_23E1E3300(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  v8 = *(_QWORD *)(v0 + 96);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 72) = v8;
  sub_23E537070();
  swift_release();
  v9 = (uint64_t *)(v8 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary);
  swift_beginAccess();
  v10 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    v11 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    v12 = sub_23E1E3300(v11);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(v0 + 104);
      v15 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v12);
      *(_QWORD *)(v0 + 144) = v15;
      v16 = v15;
      v20 = *(int8x16_t *)(v0 + 88);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 152) = sub_23E5378EC();
      v17 = swift_task_alloc();
      *(_QWORD *)(v0 + 160) = v17;
      *(_QWORD *)(v17 + 16) = v16;
      *(int8x16_t *)(v17 + 24) = vextq_s8(v20, v20, 8uLL);
      *(_QWORD *)(v17 + 40) = v14;
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332BA8);
      *v18 = v0;
      v18[1] = sub_23E20A530;
      return sub_23E538324();
    }
    swift_bridgeObjectRelease();
  }
  v7 = MEMORY[0x24BEE4AF8];
LABEL_11:
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_23E20A530()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t DataModel.currentUserActionPredictions(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[11] = a1;
  v2[12] = v1;
  v2[13] = swift_getObjectType();
  v2[14] = sub_23E5378F8();
  v2[15] = sub_23E5378EC();
  v2[16] = sub_23E5378B0();
  v2[17] = v3;
  return swift_task_switch();
}

Swift::Void __swiftcall DataModel.homeManagerDidUpdateHomes(_:)(HMHomeManager a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254333DB8 != -1)
    swift_once();
  v8 = sub_23E5371A8();
  __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
  v9 = a1.super.isa;
  v10 = sub_23E537190();
  v11 = sub_23E537B20();
  if (os_log_type_enabled(v10, v11))
  {
    v27 = v2;
    v28 = ObjectType;
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v30 = v14;
    *(_DWORD *)v12 = 136315394;
    v15 = -[objc_class currentHome](v9, sel_currentHome);
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, sel_name);

      v18 = sub_23E53755C();
      v20 = v19;

    }
    else
    {
      v20 = 0xE400000000000000;
      v18 = 1701736302;
    }
    v29 = sub_23E1FD768(v18, v20, &v30);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    v21 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
    v29 = (uint64_t)v21;
    sub_23E537CF4();
    *v13 = v21;
    _os_log_impl(&dword_23E1DF000, v10, v11, "DataModel: homeManagerDidUpdateHomes(), current is: %s, current thread is %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v14, -1, -1);
    MEMORY[0x24264FEBC](v12, -1, -1);

    v2 = v27;
    ObjectType = v28;
  }
  else
  {

  }
  v22 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  sub_23E5378F8();
  v23 = v2;
  v24 = sub_23E5378EC();
  v25 = (_QWORD *)swift_allocObject();
  v26 = MEMORY[0x24BEE6930];
  v25[2] = v24;
  v25[3] = v26;
  v25[4] = v23;
  v25[5] = ObjectType;
  sub_23E26D014((uint64_t)v7, (uint64_t)&unk_256D44D70, (uint64_t)v25);
  swift_release();
}

uint64_t sub_23E20A9B4()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v19[24];
  ValueMetadata *v20;
  unint64_t v21;

  ObjectType = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!qword_254333B98)
  {
    v20 = &type metadata for HomeAppFeatures;
    v21 = sub_23E20B720();
    v19[0] = 3;
    v6 = sub_23E5370AC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    v7 = sub_23E537934();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
    if ((v6 & 1) != 0)
    {
      v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_23E5378F8();
      swift_retain();
      v9 = sub_23E5378EC();
      v10 = (_QWORD *)swift_allocObject();
      v11 = MEMORY[0x24BEE6930];
      v10[2] = v9;
      v10[3] = v11;
      v10[4] = v8;
      swift_release();
      v12 = &unk_256D43930;
      v13 = (uint64_t)v5;
      v14 = v10;
    }
    else
    {
      sub_23E5378F8();
      v15 = v0;
      v16 = sub_23E5378EC();
      v14 = (_QWORD *)swift_allocObject();
      v17 = MEMORY[0x24BEE6930];
      v14[2] = v16;
      v14[3] = v17;
      v14[4] = v15;
      v14[5] = ObjectType;
      v12 = &unk_256D43920;
      v13 = (uint64_t)v5;
    }
    qword_254333B98 = sub_23E26D014(v13, (uint64_t)v12, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E20AB78(uint64_t a1)
{
  return sub_23E2D7344(a1, &qword_254332520, &qword_254332240);
}

uint64_t sub_23E20AB98()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_254333D88);
  __swift_project_value_buffer(v0, (uint64_t)qword_254333D88);
  return sub_23E53719C();
}

void sub_23E20AC74(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23[3];

  v2 = v1;
  swift_getKeyPath();
  v23[0] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v4 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v5)
  {
    if (a1)
    {
      sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
      v6 = a1;
      v7 = v5;
      v8 = sub_23E537C58();

      if ((v8 & 1) != 0)
        return;
    }
  }
  else if (!a1)
  {
    return;
  }
  swift_getKeyPath();
  v23[0] = v2;
  sub_23E537070();
  swift_release();
  v9 = *(void **)(v2 + v4);
  if (v9)
  {
    v10 = qword_254333DB8;
    v11 = v9;
    if (v10 != -1)
      swift_once();
    v12 = sub_23E5371A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_254333D88);
    v13 = v11;
    v14 = sub_23E537190();
    v15 = sub_23E537B20();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v23[0] = v17;
      *(_DWORD *)v16 = 136315138;
      v18 = objc_msgSend(v13, sel_name);
      v19 = sub_23E53755C();
      v21 = v20;

      sub_23E1FD768(v19, v21, v23);
      sub_23E537CF4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23E1DF000, v14, v15, "DataModel: previous home is '%s'", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v17, -1, -1);
      MEMORY[0x24264FEBC](v16, -1, -1);
    }
    else
    {

    }
    swift_beginAccess();
    if (qword_254333470)
    {
      objc_msgSend(v13, sel_setDelegate_, 0);
      DataModel.unregisterForAllRelevantAccessories(_:)((HMHome)v13);
      v22 = objc_msgSend(v13, sel_hdm_sharedMatterController);
      objc_msgSend(v22, sel_shutdown);

    }
  }
}

void sub_23E20AFB0(void *a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  void **v35;
  void *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  id v40;
  id v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v2 = (char *)v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v54 = (char *)v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v7 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v8)
  {
    if (a1)
    {
      sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
      v9 = a1;
      v10 = v8;
      v11 = sub_23E537C58();

      if ((v11 & 1) != 0)
        return;
    }
  }
  else if (!a1)
  {
    return;
  }
  swift_getKeyPath();
  v54 = v2;
  sub_23E537070();
  swift_release();
  v12 = *(void **)&v2[v7];
  if (v12)
  {
    v13 = qword_254333DB8;
    v14 = v12;
    if (v13 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_254333D88);
    v16 = v14;
    v17 = sub_23E537190();
    v18 = sub_23E537B20();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v54 = (char *)v52;
      *(_DWORD *)v19 = 136315138;
      v51 = v19;
      v20 = objc_msgSend(v16, sel_name, v19 + 4);
      v21 = v12;
      v22 = v6;
      v23 = v20;
      v24 = sub_23E53755C();
      v26 = v25;

      v6 = v22;
      v12 = v21;
      v53 = sub_23E1FD768(v24, v26, (uint64_t *)&v54);
      sub_23E537CF4();
      swift_bridgeObjectRelease();

      v27 = v51;
      _os_log_impl(&dword_23E1DF000, v17, v18, "DataModel: current home is '%s'", v51, 0xCu);
      v28 = v52;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v28, -1, -1);
      MEMORY[0x24264FEBC](v27, -1, -1);
    }
    else
    {

    }
    if (qword_2543327B8 != -1)
      swift_once();
    v29 = qword_254332710;
    v30 = (void **)(qword_254332710 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
    swift_beginAccess();
    v31 = *v30;
    *v30 = v12;
    v32 = v16;

    v33 = (_QWORD *)(v29 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    v34 = swift_bridgeObjectRetain();
    sub_23E27E748(v34);
    swift_bridgeObjectRelease();
    *v33 = sub_23E20DE2C(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();

    swift_beginAccess();
    if (qword_254333470)
    {
      objc_msgSend(v32, sel_setDelegate_, v2);
      DataModel.registerForAllRelevantAccessories(_:)((HMHome)v32);
    }
    sub_23E4F80EC(v32);
    v35 = (void **)&v2[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
    swift_beginAccess();
    v36 = *v35;
    if (v36)
    {
      v37 = sub_23E537934();
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
      v38(v6, 1, 1, v37);
      sub_23E5378F8();
      v39 = v36;
      v40 = v32;
      v41 = v39;
      v42 = v2;
      v43 = sub_23E5378EC();
      v44 = (_QWORD *)swift_allocObject();
      v45 = MEMORY[0x24BEE6930];
      v44[2] = v43;
      v44[3] = v45;
      v44[4] = v40;
      v44[5] = v41;
      v44[6] = v42;
      sub_23E26D014((uint64_t)v6, (uint64_t)&unk_256D41ED8, (uint64_t)v44);
      swift_release();
      v38(v6, 1, 1, v37);
      v46 = v40;
      v47 = v42;
      v48 = sub_23E5378EC();
      v49 = (_QWORD *)swift_allocObject();
      v49[2] = v48;
      v49[3] = v45;
      v49[4] = v46;
      v49[5] = v47;
      sub_23E26D014((uint64_t)v6, (uint64_t)&unk_256D41EE8, (uint64_t)v49);

      swift_release();
    }

  }
}

void sub_23E20B518()
{
  uint64_t v0;

  sub_23E20B530(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_23E20B530(uint64_t a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v6 = v5;
  v7 = a2;
  sub_23E20AC74(a2);
  v8 = *(void **)(a1 + v4);
  *(_QWORD *)(a1 + v4) = a2;
  v9 = v7;

  sub_23E20AFB0(v5);
}

unint64_t sub_23E20B680()
{
  unint64_t result;

  result = qword_254333B88;
  if (!qword_254333B88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B47C, &type metadata for HomeKitFeatures);
    atomic_store(result, (unint64_t *)&qword_254333B88);
  }
  return result;
}

const char *sub_23E20B6C4()
{
  _BYTE *v0;
  const char *v1;

  v1 = "RestrictedGuest";
  if (*v0 != 1)
    v1 = "ResidentSelection";
  if (*v0)
    return v1;
  else
    return "d0d2700c4dee4686a15d55";
}

const char *sub_23E20B70C()
{
  return "Home";
}

unint64_t sub_23E20B720()
{
  unint64_t result;

  result = qword_254333B80;
  if (!qword_254333B80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B4AC, &type metadata for HomeAppFeatures);
    atomic_store(result, (unint64_t *)&qword_254333B80);
  }
  return result;
}

uint64_t sub_23E20B764()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_23E20B78C + 4 * byte_23E53B37C[*v0]))("redesign_media", 14);
}

const char *sub_23E20B78C()
{
  return "nativeMatter";
}

const char *sub_23E20B7A0()
{
  return "fullMatterSnapshots";
}

const char *sub_23E20B7E8()
{
  return "HomeApp";
}

uint64_t storeEnumTagSinglePayload for StaticHome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23E20B808()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticRoom(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for StaticUser();
      if (v2 <= 0x3F)
      {
        sub_23E208898();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_23E20B908@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for StaticHome() + 20));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E20B940@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  char *v13;

  v4 = objc_msgSend(a1, sel_residentDevices);
  sub_23E378EFC();
  v5 = sub_23E5377F0();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v13 = a2;
    if (v6)
      goto LABEL_3;
LABEL_17:
    v9 = 1;
LABEL_18:

    result = swift_bridgeObjectRelease_n();
    *v13 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v6 = result;
  v13 = a2;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    v9 = 1;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x24264F148](v8, v5);
      else
        v10 = *(id *)(v5 + 8 * v8 + 32);
      v11 = v10;
      if (objc_msgSend(v10, sel_isEnabled))
      {
        if (v9 == 3)
        {

          v9 = 3;
        }
        else
        {
          v12 = objc_msgSend(v11, sel_status);

          if ((v12 & 1) != 0)
            v9 = 3;
          else
            v9 = 2;
        }
      }
      else
      {

      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for StaticCoordinationData()
{
  return &type metadata for StaticCoordinationData;
}

uint64_t type metadata accessor for CoordinationDataModel()
{
  uint64_t result;

  result = qword_2543327C0;
  if (!qword_2543327C0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_23E20BB2C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoordinationDataModel()), sel_init);
  qword_254332710 = (uint64_t)result;
  return result;
}

void sub_23E20BB5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254333DB0)
  {
    sub_23E536F80();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254333DB0);
  }
}

unint64_t sub_23E20BBB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254333DA8;
  if (!qword_254333DA8)
  {
    v1 = sub_23E536F80();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_254333DA8);
  }
  return result;
}

uint64_t sub_23E20BBFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_23E20BC50@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t StaticService.set(for:options:context:)(uint64_t a1, uint64_t a2, uint64_t *a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)(v5 + 384) = a1;
  *(_QWORD *)(v5 + 392) = a2;
  v6 = *a3;
  *(_QWORD *)(v5 + 400) = v4;
  *(_QWORD *)(v5 + 408) = v6;
  v7 = a4[1];
  *(_OWORD *)(v5 + 416) = *a4;
  *(_OWORD *)(v5 + 432) = v7;
  return swift_task_switch();
}

uint64_t sub_23E20BCCC()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  unsigned __int8 v20;
  uint64_t v21;
  _OWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *v41;
  int64_t v42;
  _OWORD *v43;
  unsigned __int8 *v44;
  unsigned __int8 v45;
  _QWORD *v46;

  v44 = (unsigned __int8 *)(v0 + 56);
  v41 = (_OWORD *)(v0 + 216);
  v1 = (_OWORD *)(v0 + 248);
  v2 = (_OWORD *)(v0 + 280);
  v43 = (_OWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v3 + 64);
  v35 = v3 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & v4;
  v36 = (unint64_t)(63 - v6) >> 6;
  v39 = (_OWORD *)(v0 + 184);
  v37 = v0 + 144;
  v38 = v0 + 64;
  v34 = (_OWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 392);
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    *(_QWORD *)(v0 + 448) = v10;
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v42 = v9;
      v13 = v12 | (v9 << 6);
    }
    else
    {
      v14 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_44;
      if (v14 >= v36)
      {
LABEL_40:
        swift_release();
        *(_QWORD *)(v0 + 456) = sub_23E5378F8();
        *(_QWORD *)(v0 + 464) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }
      v15 = *(_QWORD *)(v35 + 8 * v14);
      v16 = v9 + 1;
      if (!v15)
      {
        v16 = v9 + 2;
        if (v9 + 2 >= v36)
          goto LABEL_40;
        v15 = *(_QWORD *)(v35 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 3;
          if (v9 + 3 >= v36)
            goto LABEL_40;
          v15 = *(_QWORD *)(v35 + 8 * v16);
          if (!v15)
          {
            v16 = v9 + 4;
            if (v9 + 4 >= v36)
              goto LABEL_40;
            v15 = *(_QWORD *)(v35 + 8 * v16);
            if (!v15)
            {
              v16 = v9 + 5;
              if (v9 + 5 >= v36)
                goto LABEL_40;
              v15 = *(_QWORD *)(v35 + 8 * v16);
              if (!v15)
              {
                v17 = v9 + 6;
                if (v9 + 6 >= v36)
                  goto LABEL_40;
                v15 = *(_QWORD *)(v35 + 8 * v17);
                if (!v15)
                {
                  while (1)
                  {
                    v16 = v17 + 1;
                    if (__OFADD__(v17, 1))
                      goto LABEL_45;
                    if (v16 >= v36)
                      goto LABEL_40;
                    v15 = *(_QWORD *)(v35 + 8 * v16);
                    ++v17;
                    if (v15)
                      goto LABEL_25;
                  }
                }
                v16 = v9 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v7 = (v15 - 1) & v15;
      v42 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = *(_BYTE *)(*(_QWORD *)(v40 + 48) + v13);
    sub_23E1EA57C(*(_QWORD *)(v40 + 56) + 32 * v13, v0 + 24);
    *(_BYTE *)(v0 + 16) = v18;
    v19 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)v44 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 72) = v19;
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 48);
    sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    v20 = *(_BYTE *)(v0 + 56);
    *(_BYTE *)(v0 + 176) = v20;
    sub_23E1EA57C(v38, (uint64_t)v39);
    sub_23E1EA76C(v39, v41);
    v45 = v20;
    static HMService.convert(_:characteristicKind:)((uint64_t)v41, &v45, (uint64_t)v1);
    sub_23E1E7C64((uint64_t)v41, &qword_254332260);
    *(_BYTE *)(v0 + 136) = *(_BYTE *)(v0 + 56);
    sub_23E1EA57C(v38, v37);
    if (*(_QWORD *)(v0 + 272))
    {
      sub_23E1EA76C(v1, v2);
    }
    else
    {
      sub_23E1EA57C(v37, (uint64_t)v34);
      sub_23E1EA76C(v34, v2);
      sub_23E1E7C64((uint64_t)v1, &qword_254332260);
    }
    sub_23E1E7C64(v0 + 136, &qword_256D3EFD0);
    v21 = *v44;
    v22 = v2;
    sub_23E1EA57C((uint64_t)v2, (uint64_t)v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v46 = v10;
    v25 = sub_23E1EADC4(v21, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    v26 = v10[2];
    v27 = (v24 & 1) == 0;
    result = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v28 = v24;
    if (v10[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v2 = v22;
        if ((v24 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_23E21ED48(&qword_256D3F458);
        v10 = v46;
        v2 = v22;
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_23E212890(result, isUniquelyReferenced_nonNull_native);
      v10 = v46;
      v29 = sub_23E1EADC4(v21, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
      if ((v28 & 1) != (v30 & 1))
        return sub_23E5383C0();
      v25 = v29;
      v2 = v22;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        v11 = (_OWORD *)(v10[7] + 32 * v25);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        sub_23E1EA76C(v43, v11);
        goto LABEL_5;
      }
    }
    v10[(v25 >> 6) + 8] |= 1 << v25;
    *(_BYTE *)(v10[6] + v25) = v21;
    result = (uint64_t)sub_23E1EA76C(v43, (_OWORD *)(v10[7] + 32 * v25));
    v31 = v10[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_43;
    v10[2] = v33;
LABEL_5:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
    result = sub_23E1E7C64((uint64_t)v44, &qword_256D3EFD0);
    v1 = (_OWORD *)(v0 + 248);
    v9 = v42;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_23E20C1BC()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E20C220()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 472) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E20C280()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 480) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E20C2C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 488) = sub_23E536F44();
  *(_QWORD *)(v0 + 496) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E20C334()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[61];
  v2 = (void *)v0[60];
  swift_release();
  v0[63] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E20C398()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 504);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 408);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_23E539640;
    *(_QWORD *)(v3 + 32) = v1;
    v11 = v3;
    sub_23E537808();
    *(_QWORD *)(v0 + 512) = v11;
    v4 = v1;
    swift_bridgeObjectRetain();
    if ((v2 & 0x402) == 2)
    {
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 528) = v5;
      *v5 = v0;
      v5[1] = sub_23E20C5B4;
      return sub_23E48A304(*(_QWORD *)(v0 + 384), v11, *(_QWORD *)(v0 + 448));
    }
    else
    {
      v9 = *(_OWORD *)(v0 + 432);
      *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 416);
      *(_OWORD *)(v0 + 360) = v9;
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 520) = v10;
      *v10 = v0;
      v10[1] = sub_23E20C510;
      return sub_23E48B088(*(_QWORD *)(v0 + 384), v0 + 376, (_OWORD *)(v0 + 344), v11, *(_QWORD *)(v0 + 448));
    }
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 384);
    v8 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E20C510()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E20C57C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 504);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E20C5B4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E20C620(uint64_t a1, uint64_t a2)
{
  return sub_23E20C644(a1, a2, &qword_254332DE8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_2543333B8, (void (*)(uint64_t))sub_23E2DA0F4);
}

uint64_t sub_23E20C644(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v11 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v25 - v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 48))(a1, 1) == 1)
  {
    sub_23E1E7C64(a1, a3);
    a6(a2);
    v21 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a2, v21);
    return sub_23E1E7C64((uint64_t)v16, a3);
  }
  else
  {
    sub_23E1E2FDC(a1, (uint64_t)v19, a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v11;
    *v11 = 0x8000000000000000;
    sub_23E21C26C((uint64_t)v19, a2, isUniquelyReferenced_nonNull_native, a4, a5);
    *v11 = v26;
    swift_bridgeObjectRelease();
    v24 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a2, v24);
  }
}

uint64_t sub_23E20C7D8(uint64_t a1, uint64_t a2)
{
  return sub_23E20CB2C(a1, a2, (void (*)(_OWORD *, uint64_t, uint64_t))sub_23E21A6D4, (void (*)(_OWORD *__return_ptr, uint64_t))sub_23E2DA20C);
}

uint64_t sub_23E20C7EC(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];
  char v15;

  v3 = v2;
  if (*(unsigned __int8 *)(a1 + 32) == 254)
  {
    sub_23E1E7C64(a1, &qword_256D3F398);
    v5 = sub_23E21140C(a2);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v12 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E21E384();
        v9 = v12;
      }
      sub_23E1E4E3C(*(_QWORD *)(v9 + 56) + 40 * v7, (uint64_t)v14, &qword_256D3F298);
      sub_23E49DFCC(v7, v9);
      *v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
      v15 = -2;
    }
    return sub_23E1E7C64((uint64_t)v14, &qword_256D3F398);
  }
  else
  {
    sub_23E1E4E3C(a1, (uint64_t)v14, &qword_256D3F298);
    v10 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E21AC1C((uint64_t)v14, a2, v10);
    *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E20C91C(uint64_t a1, __int16 a2)
{
  return sub_23E20CC0C(a1, a2, &qword_256D3F450, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3F448, (void (*)(unint64_t, uint64_t))sub_23E49E34C);
}

uint64_t sub_23E20C940(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333280);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticMatterDevice();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23E1E7C64(a1, (uint64_t *)&unk_254333280);
    v13 = sub_23E211288(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23E21E758();
        v17 = v22;
      }
      sub_23E1E2FDC(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      sub_23E49E358(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23E1E7C64((uint64_t)v8, (uint64_t *)&unk_254333280);
  }
  else
  {
    sub_23E1E2FDC(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E21AFA0((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E20CB18(uint64_t a1, uint64_t a2)
{
  return sub_23E20CB2C(a1, a2, (void (*)(_OWORD *, uint64_t, uint64_t))sub_23E21B3CC, (void (*)(_OWORD *__return_ptr, uint64_t))sub_23E2DA434);
}

uint64_t sub_23E20CB2C(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *, uint64_t, uint64_t), void (*a4)(_OWORD *__return_ptr, uint64_t))
{
  uint64_t *v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _OWORD v11[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23E1EA76C((_OWORD *)a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v4;
    *v4 = 0x8000000000000000;
    a3(v11, a2, isUniquelyReferenced_nonNull_native);
    *v4 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1E7C64(a1, &qword_254332260);
    a4(v11, a2);
    return sub_23E1E7C64((uint64_t)v11, &qword_254332260);
  }
}

uint64_t sub_23E20CBE8(uint64_t a1, __int16 a2)
{
  return sub_23E20CC0C(a1, a2, &qword_256D3F418, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint, &qword_256D3F420, (void (*)(unint64_t, uint64_t))sub_23E49EBC0);
}

uint64_t sub_23E20CC0C(uint64_t a1, __int16 a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(unint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v28)(unint64_t, uint64_t);
  uint64_t v29;

  v28 = a6;
  v10 = v6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a4(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a1, 1, v16) == 1)
  {
    sub_23E1E7C64(a1, a3);
    v20 = sub_23E2112B8(a2);
    if ((v21 & 1) != 0)
    {
      v22 = v20;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v24 = *v10;
      v29 = *v10;
      *v10 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23E21F458(a4, a5);
        v24 = v29;
      }
      sub_23E1E2FDC(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v17 + 72) * v22, (uint64_t)v15, a4);
      v28(v22, v24);
      *v10 = v24;
      swift_bridgeObjectRelease();
      v25 = 0;
    }
    else
    {
      v25 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v25, 1, v16);
    return sub_23E1E7C64((uint64_t)v15, a3);
  }
  else
  {
    sub_23E1E2FDC(a1, (uint64_t)v19, a4);
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v10;
    *v10 = 0x8000000000000000;
    sub_23E21B62C((uint64_t)v19, a2, v26, a4, a5);
    *v10 = v29;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E20CDF8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_23E1EA76C((_OWORD *)a1, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_23E21B8B4(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1E7C64(a1, &qword_254332260);
    v7 = sub_23E2113B4(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_23E21F828();
        v11 = v13;
      }
      sub_23E1EA76C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v9), v14);
      sub_23E49EF70(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_23E1E7C64((uint64_t)v14, &qword_254332260);
  }
}

uint64_t sub_23E20CF08(uint64_t a1, uint64_t a2)
{
  return sub_23E20C644(a1, a2, &qword_2543327E8, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_2543326A8, (void (*)(uint64_t))sub_23E2DA764);
}

uint64_t sub_23E20CF2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23E1E7C64(a1, &qword_2543332A0);
    sub_23E2DA780(a2, (uint64_t)v8);
    return sub_23E1E7C64((uint64_t)v8, &qword_2543332A0);
  }
  else
  {
    sub_23E1E2FDC(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E1EA77C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E20D074(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23E1E7C64(a1, &qword_256D3F310);
    sub_23E2DAA88(a2, (uint64_t)v8);
    sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    return sub_23E1E7C64((uint64_t)v8, &qword_256D3F310);
  }
  else
  {
    sub_23E1E2FDC(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E21C3F4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_23E1E2FA0(a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  }
}

uint64_t StaticService.set(_:for:options:context:)(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t *a4, _OWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 136) = a2;
  *(_BYTE *)(v6 + 208) = *a3;
  v7 = *a4;
  *(_QWORD *)(v6 + 144) = v5;
  *(_QWORD *)(v6 + 152) = v7;
  v8 = a5[1];
  *(_OWORD *)(v6 + 160) = *a5;
  *(_OWORD *)(v6 + 176) = v8;
  return swift_task_switch();
}

uint64_t sub_23E20D20C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v11 = *(_OWORD *)(v0 + 160);
  v12 = *(_OWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_BYTE *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_BYTE *)(inited + 32) = v2;
  sub_23E1EA57C(v3, inited + 40);
  v5 = sub_23E20D564(inited);
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v0 + 88) = v11;
  *(_OWORD *)(v0 + 104) = v12;
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v6;
  *(_QWORD *)v6 = v0;
  *(_QWORD *)(v6 + 8) = sub_23E20D304;
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v6 + 384) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v6 + 392) = v5;
  *(_QWORD *)(v6 + 400) = v7;
  *(_QWORD *)(v6 + 408) = v8;
  v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v6 + 416) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 432) = v9;
  return swift_task_switch();
}

uint64_t sub_23E20D304()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_23E20D354(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_256D3F3E8, &qword_256D3F3E0);
}

unint64_t sub_23E20D368(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333B68, &qword_256D3F248, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

unint64_t sub_23E20D384(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333130, &qword_256D3F3B8, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
}

unint64_t sub_23E20D3A0(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_256D3F268, &qword_256D3F260);
}

unint64_t sub_23E20D3B4(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_256D3F378, &qword_256D3F380, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

unint64_t sub_23E20D3D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F220);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F208);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_256D3F220);
    result = sub_23E1E3148((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E536F80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_BYTE *)(v7[7] + v16) = v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20D564(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _BYTE v13[8];
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F458);
  v2 = sub_23E53806C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v6, (uint64_t)v13, &qword_256D3F460);
    v7 = v13[0];
    result = sub_23E1EADC4(v13[0], (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v7;
    result = (unint64_t)sub_23E1EA76C(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20D69C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F320);
  v2 = sub_23E53806C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v6, (uint64_t)&v15, &qword_256D3F438);
    v7 = v15;
    v8 = v16;
    result = sub_23E211350(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23E1EA76C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20D7D0(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_254333140, &qword_256D3F270, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
}

unint64_t sub_23E20D7EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F430);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_23E211350(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20D904(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E0);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = a1 + 40;
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(_QWORD *)v4;
    v7 = *(_QWORD *)(v4 + 8);
    v16 = *(_OWORD *)(v4 + 16);
    v8 = *(_QWORD *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E211350(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 32 * result;
    *(_QWORD *)v12 = v7;
    *(_OWORD *)(v12 + 8) = v16;
    *(_QWORD *)(v12 + 24) = v8;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20DA58(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E8);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E211350(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20DB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F400);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D8);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_256D3F400);
    result = sub_23E1E3148((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E536F80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_BYTE *)(v7[7] + v16) = v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20DD04(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F258);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *((unsigned __int8 *)v4 - 8);
    v6 = *v4;
    v7 = *v4;
    result = sub_23E1EADC4(v5, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_QWORD *)(v2[7] + 8 * result) = v6;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20DE18(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_256D3F3F8, &qword_256D3F3F0);
}

_QWORD *sub_23E20DE2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  uint64_t v17;
  _QWORD *result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333158);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2C0);
  v6 = (_QWORD *)sub_23E53806C();
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v6;
  }
  v8 = *(int *)(v2 + 48);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v27 = *(_QWORD *)(v3 + 72);
  swift_retain();
  sub_23E1E7C20(a1 + v9, (uint64_t)v5, &qword_254333158);
  v10 = sub_23E1E3148((uint64_t)v5);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v12 = v10;
  v26 = &v5[v8];
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  v17 = v25 + v27 + v9;
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    v16(v6[6] + v15 * v12, v5, v13);
    result = memmove((void *)(v6[7] + (v12 << 7)), v26, 0x80uLL);
    v19 = v6[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      break;
    v6[2] = v21;
    if (!--v7)
      goto LABEL_9;
    v22 = v17 + v27;
    sub_23E1E7C20(v17, (uint64_t)v5, &qword_254333158);
    v12 = sub_23E1E3148((uint64_t)v5);
    v17 = v22;
    if ((v23 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E20E014(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_254333160, &qword_256D3F1C8);
}

unint64_t sub_23E20E028(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_254333168, &qword_256D3F1B8);
}

unint64_t sub_23E20E03C(uint64_t a1)
{
  return sub_23E20E5AC(a1, &qword_2543333F0);
}

unint64_t sub_23E20E048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333D8);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_254333260);
    v14 = *v5;
    result = sub_23E1EADC4(*v5, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v7[6] + result) = v14;
    v18 = v7[7];
    v19 = type metadata accessor for StaticCharacteristic();
    result = sub_23E1E2FDC(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20E1EC(uint64_t a1)
{
  return sub_23E20E210(a1, &qword_256D3F370, &qword_256D3F368, (uint64_t (*)(char *))sub_23E2114C8, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
}

unint64_t sub_23E20E210(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t *v30;
  uint64_t (*v31)(char *);

  v30 = a2;
  v31 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_23E53806C();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = *(int *)(v8 + 48);
  v16 = a1;
  v17 = v12 + 64;
  v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v29[1] = v16;
  v19 = v16 + v18;
  v20 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v11, v30);
    result = v31(v11);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = v13[6];
    v25 = a5(0);
    result = sub_23E1E2FDC((uint64_t)v11, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, a5);
    *(_QWORD *)(v13[7] + 8 * v23) = *(_QWORD *)&v11[v15];
    v26 = v13[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v13[2] = v28;
    v19 += v20;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20E3A4(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_256D3F340, &qword_256D3F348);
}

unint64_t sub_23E20E3B8(uint64_t a1)
{
  return sub_23E1F2714(a1, &qword_256D3F330, &qword_256D3F338);
}

unint64_t sub_23E20E3CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F308);
  v6 = sub_23E53806C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v12, (uint64_t)v5, &qword_256D3F318);
    result = sub_23E211680((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_23E1E2FDC((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v19 = v7[7];
    v20 = type metadata accessor for IconTextValueStringDataHolder();
    result = sub_23E1E2FDC(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20E584(uint64_t a1)
{
  return sub_23E1E5BBC(a1, &qword_256D3F2E8, &qword_256D3F2E0, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
}

unint64_t sub_23E20E5A0(uint64_t a1)
{
  return sub_23E20E5AC(a1, &qword_256D3F2B8);
}

unint64_t sub_23E20E5AC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23E53806C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E211350(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20E6C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2B0);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23E211350(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E20E7D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F228);
  v2 = (_QWORD *)sub_23E53806C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E211350(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_23E20E8F0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1F8),
        v2 = (_QWORD *)sub_23E53806C(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_23E2117D4(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v2[2] = v11;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_23E20E9F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1E8);
  v2 = sub_23E53806C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23E1E7C20(v6, (uint64_t)v15, &qword_256D3F1F0);
    result = sub_23E211498((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_23E1EA76C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StaticService.toggle(options:context:)(uint64_t a1, _QWORD *a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(v4 + 984) = v3;
  *(_QWORD *)(v4 + 976) = a1;
  *(_QWORD *)(v4 + 992) = *a2;
  v5 = a3[1];
  *(_OWORD *)(v4 + 1000) = *a3;
  *(_OWORD *)(v4 + 1016) = v5;
  return swift_task_switch();
}

uint64_t sub_23E20EB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  unsigned __int8 v73;
  Swift::Int_optional v74;
  Swift::Int_optional v75;
  Swift::Int_optional v76;
  Swift::Int_optional v77;
  Swift::Int_optional v78;
  Swift::Int_optional v79;

  v1 = *(_QWORD *)(v0 + 984);
  v2 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for StaticService() + 84));
  ServiceKind.togglingCharacteristicKind.getter(&v73);
  if (v73 != 174)
    goto LABEL_5;
  if (qword_256D3ED38 != -1)
    swift_once();
  swift_beginAccess();
  v3 = off_256D42460;
  swift_bridgeObjectRetain();
  v4 = sub_23E1E91B4(v2, (uint64_t)v3, (uint64_t (*)(void))ServiceKind.rawValue.getter);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_31:
    v57 = *(_QWORD *)(v0 + 976);
    v58 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
LABEL_5:
    ServiceKind.togglingCharacteristicKind.getter(&v73);
    v5 = v73;
    if (v73 == 174 || (v6 = sub_23E2B4680(&v73), v6 == 2))
    {
      switch((int)v2)
      {
        case 14:
          v73 = 40;
          v74 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v74.is_nil)
            goto LABEL_31;
          v7 = *(_QWORD *)(v0 + 1024);
          v8 = *(_QWORD *)(v0 + 1016);
          v66 = *(_OWORD *)(v0 + 1000);
          v9 = *(_QWORD *)(v0 + 992);
          v10 = 100;
          if (v74.value > 0)
            v10 = 0;
          *(_QWORD *)(v0 + 856) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 832) = v10;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_23E539650;
          *(_BYTE *)(inited + 32) = -98;
          sub_23E1EA57C(v0 + 832, inited + 40);
          v12 = sub_23E20D564(inited);
          *(_QWORD *)(v0 + 1048) = v12;
          *(_QWORD *)(v0 + 936) = v9;
          *(_OWORD *)(v0 + 736) = v66;
          *(_QWORD *)(v0 + 752) = v8;
          *(_QWORD *)(v0 + 760) = v7;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1056) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F46C;
          v14 = *(_QWORD *)(v0 + 984);
          v15 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v12;
          *(_QWORD *)(v13 + 400) = v14;
          *(_QWORD *)(v13 + 384) = v15;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 936);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 736);
          v16 = *(_OWORD *)(v0 + 752);
          break;
        case 19:
          v73 = 31;
          v75 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v75.is_nil)
            goto LABEL_31;
          if (v75.value > 4uLL)
            v25 = 0;
          else
            v25 = qword_23E53A678[v75.value];
          v59 = *(_QWORD *)(v0 + 1024);
          v60 = *(_QWORD *)(v0 + 1016);
          v72 = *(_OWORD *)(v0 + 1000);
          v61 = *(_QWORD *)(v0 + 992);
          *(_QWORD *)(v0 + 504) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 480) = v25;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          v62 = swift_initStackObject();
          *(_OWORD *)(v62 + 16) = xmmword_23E539650;
          *(_BYTE *)(v62 + 32) = -107;
          sub_23E1EA57C(v0 + 480, v62 + 40);
          v63 = sub_23E20D564(v62);
          *(_QWORD *)(v0 + 1064) = v63;
          *(_QWORD *)(v0 + 928) = v61;
          *(_OWORD *)(v0 + 864) = v72;
          *(_QWORD *)(v0 + 880) = v60;
          *(_QWORD *)(v0 + 888) = v59;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1072) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F4CC;
          v64 = *(_QWORD *)(v0 + 984);
          v65 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v63;
          *(_QWORD *)(v13 + 400) = v64;
          *(_QWORD *)(v13 + 384) = v65;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 928);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 864);
          v16 = *(_OWORD *)(v0 + 880);
          break;
        case 30:
          v73 = 38;
          v76 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v76.is_nil)
            goto LABEL_31;
          v26 = *(_QWORD *)(v0 + 1024);
          v27 = *(_QWORD *)(v0 + 1016);
          v68 = *(_OWORD *)(v0 + 1000);
          v28 = *(_QWORD *)(v0 + 992);
          *(_QWORD *)(v0 + 696) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 672) = v76.value != 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          v29 = swift_initStackObject();
          *(_OWORD *)(v29 + 16) = xmmword_23E539650;
          *(_BYTE *)(v29 + 32) = -100;
          sub_23E1EA57C(v0 + 672, v29 + 40);
          v30 = sub_23E20D564(v29);
          *(_QWORD *)(v0 + 1080) = v30;
          *(_QWORD *)(v0 + 944) = v28;
          *(_OWORD *)(v0 + 768) = v68;
          *(_QWORD *)(v0 + 784) = v27;
          *(_QWORD *)(v0 + 792) = v26;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1088) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F52C;
          v31 = *(_QWORD *)(v0 + 984);
          v32 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v30;
          *(_QWORD *)(v13 + 400) = v31;
          *(_QWORD *)(v13 + 384) = v32;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 944);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 768);
          v16 = *(_OWORD *)(v0 + 784);
          break;
        case 35:
          v73 = 42;
          v77 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v77.is_nil)
            goto LABEL_31;
          v33 = *(_QWORD *)(v0 + 1024);
          v34 = *(_QWORD *)(v0 + 1016);
          v69 = *(_OWORD *)(v0 + 1000);
          v35 = *(_QWORD *)(v0 + 992);
          v36 = 3;
          if (v77.value == 3)
            v36 = 0;
          *(_QWORD *)(v0 + 568) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 544) = v36;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          v37 = swift_initStackObject();
          *(_OWORD *)(v37 + 16) = xmmword_23E539650;
          *(_BYTE *)(v37 + 32) = -96;
          sub_23E1EA57C(v0 + 544, v37 + 40);
          v38 = sub_23E20D564(v37);
          *(_QWORD *)(v0 + 1096) = v38;
          *(_QWORD *)(v0 + 952) = v35;
          *(_OWORD *)(v0 + 640) = v69;
          *(_QWORD *)(v0 + 656) = v34;
          *(_QWORD *)(v0 + 664) = v33;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1104) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F58C;
          v39 = *(_QWORD *)(v0 + 984);
          v40 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v38;
          *(_QWORD *)(v13 + 400) = v39;
          *(_QWORD *)(v13 + 384) = v40;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 952);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 640);
          v16 = *(_OWORD *)(v0 + 656);
          break;
        case 51:
          v73 = 40;
          v78 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v78.is_nil)
            goto LABEL_31;
          v41 = *(_QWORD *)(v0 + 1024);
          v42 = *(_QWORD *)(v0 + 1016);
          v70 = *(_OWORD *)(v0 + 1000);
          v43 = *(_QWORD *)(v0 + 992);
          v44 = 100;
          if (v78.value > 0)
            v44 = 0;
          *(_QWORD *)(v0 + 472) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 448) = v44;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          v45 = swift_initStackObject();
          *(_OWORD *)(v45 + 16) = xmmword_23E539650;
          *(_BYTE *)(v45 + 32) = -98;
          sub_23E1EA57C(v0 + 448, v45 + 40);
          v46 = sub_23E20D564(v45);
          *(_QWORD *)(v0 + 1112) = v46;
          *(_QWORD *)(v0 + 968) = v43;
          *(_OWORD *)(v0 + 512) = v70;
          *(_QWORD *)(v0 + 528) = v42;
          *(_QWORD *)(v0 + 536) = v41;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1120) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F5EC;
          v47 = *(_QWORD *)(v0 + 984);
          v48 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v46;
          *(_QWORD *)(v13 + 400) = v47;
          *(_QWORD *)(v13 + 384) = v48;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 968);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 512);
          v16 = *(_OWORD *)(v0 + 528);
          break;
        case 52:
          v73 = 40;
          v79 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v73);
          if (v79.is_nil)
            goto LABEL_31;
          v49 = *(_QWORD *)(v0 + 1024);
          v50 = *(_QWORD *)(v0 + 1016);
          v71 = *(_OWORD *)(v0 + 1000);
          v51 = *(_QWORD *)(v0 + 992);
          v52 = 100;
          if (v79.value > 0)
            v52 = 0;
          *(_QWORD *)(v0 + 824) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v0 + 800) = v52;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
          v53 = swift_initStackObject();
          *(_OWORD *)(v53 + 16) = xmmword_23E539650;
          *(_BYTE *)(v53 + 32) = -98;
          sub_23E1EA57C(v0 + 800, v53 + 40);
          v54 = sub_23E20D564(v53);
          *(_QWORD *)(v0 + 1128) = v54;
          *(_QWORD *)(v0 + 920) = v51;
          *(_OWORD *)(v0 + 576) = v71;
          *(_QWORD *)(v0 + 592) = v50;
          *(_QWORD *)(v0 + 600) = v49;
          v13 = swift_task_alloc();
          *(_QWORD *)(v0 + 1136) = v13;
          *(_QWORD *)v13 = v0;
          *(_QWORD *)(v13 + 8) = sub_23E20F64C;
          v55 = *(_QWORD *)(v0 + 984);
          v56 = *(_QWORD *)(v0 + 976);
          *(_QWORD *)(v13 + 392) = v54;
          *(_QWORD *)(v13 + 400) = v55;
          *(_QWORD *)(v13 + 384) = v56;
          *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 920);
          *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 576);
          v16 = *(_OWORD *)(v0 + 592);
          break;
        default:
          goto LABEL_31;
      }
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 1024);
      v18 = *(_QWORD *)(v0 + 1016);
      v67 = *(_OWORD *)(v0 + 1000);
      v19 = *(_QWORD *)(v0 + 992);
      *(_QWORD *)(v0 + 632) = MEMORY[0x24BEE1328];
      *(_BYTE *)(v0 + 608) = (v6 & 1) == 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_23E539650;
      *(_BYTE *)(v20 + 32) = v5;
      sub_23E1EA57C(v0 + 608, v20 + 40);
      v21 = sub_23E20D564(v20);
      *(_QWORD *)(v0 + 1032) = v21;
      *(_QWORD *)(v0 + 960) = v19;
      *(_OWORD *)(v0 + 704) = v67;
      *(_QWORD *)(v0 + 720) = v18;
      *(_QWORD *)(v0 + 728) = v17;
      v13 = swift_task_alloc();
      *(_QWORD *)(v0 + 1040) = v13;
      *(_QWORD *)v13 = v0;
      *(_QWORD *)(v13 + 8) = sub_23E20F40C;
      v22 = *(_QWORD *)(v0 + 984);
      v23 = *(_QWORD *)(v0 + 976);
      *(_QWORD *)(v13 + 392) = v21;
      *(_QWORD *)(v13 + 400) = v22;
      *(_QWORD *)(v13 + 384) = v23;
      *(_QWORD *)(v13 + 408) = *(_QWORD *)(v0 + 960);
      *(_OWORD *)(v13 + 416) = *(_OWORD *)(v0 + 704);
      v16 = *(_OWORD *)(v0 + 720);
    }
    *(_OWORD *)(v13 + 432) = v16;
    return swift_task_switch();
  }
}

uint64_t sub_23E20F40C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 608;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F46C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 832;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F4CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 480;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F52C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 672;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F58C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 544;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F5EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 448;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E20F64C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 800;
  v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

BOOL sub_23E20F6AC(char a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  unint64_t v12;
  int v13;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_23E53845C();
  v4 = dword_23E53A708[a1];
  sub_23E53848C();
  v5 = sub_23E5384A4();
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = v5 & ~v6;
  v8 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(a2 + 48);
  if (dword_23E53A708[*(char *)(v9 + v7)] == v4)
    return 1;
  v11 = ~v6;
  v12 = (v7 + 1) & v11;
  if (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  do
  {
    v13 = dword_23E53A708[*(char *)(v9 + v12)];
    result = v13 == v4;
    if (v13 == v4)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_23E20F7B0(uint64_t a1, uint64_t a2)
{
  return sub_23E1E91B4(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_23E20F7BC(char a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_23E53845C();
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_23E20FAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_23E536F80();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_23E5374CC(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_23E537514();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_23E20FC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  MEMORY[0x24BDAC7A8](v54);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - v9;
  v11 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v45 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v45 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v45 - v21;
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_23E53845C();
  v50 = a1;
  sub_23E1E2F50(a1, (uint64_t)v22, type metadata accessor for StaticAccessory.DeviceIdentifier);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v49 = a2;
  if (EnumCaseMultiPayload == 1)
  {
    v25 = v46;
    v24 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v10, v22, v47);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {
    sub_23E538468();
    sub_23E5375EC();
    a2 = v49;
    swift_bridgeObjectRelease();
  }
  v26 = (uint64_t)v48;
  v27 = sub_23E5384A4();
  v28 = -1 << *(_BYTE *)(a2 + 32);
  v29 = v27 & ~v28;
  v53 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    return 0;
  v51 = ~v28;
  v52 = *(_QWORD *)(v12 + 72);
  v30 = v50;
  while (1)
  {
    sub_23E1E2F50(*(_QWORD *)(a2 + 48) + v52 * v29, (uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v31 = &v5[*(int *)(v54 + 48)];
    sub_23E1E2F50((uint64_t)v20, (uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2F50(v30, (uint64_t)v31, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() != 1)
      break;
    sub_23E1E2F50((uint64_t)v5, v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = v45;
      v33 = v46;
      v34 = v47;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v31, v47);
      v35 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v36 = *(void (**)(char *, uint64_t))(v33 + 8);
      v37 = v32;
      v26 = (uint64_t)v48;
      v36(v37, v34);
      v36((char *)v26, v34);
      if ((v35 & 1) != 0)
        goto LABEL_25;
LABEL_20:
      sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
      a2 = v49;
      v30 = v50;
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v26, v47);
LABEL_8:
    sub_23E1E7C64((uint64_t)v5, &qword_254333228);
LABEL_9:
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v29 = (v29 + 1) & v51;
    if (((*(_QWORD *)(v53 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      return 0;
  }
  sub_23E1E2F50((uint64_t)v5, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
  v39 = *v17;
  v38 = v17[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    a2 = v49;
    v30 = v50;
    goto LABEL_8;
  }
  v40 = *(_QWORD *)v31;
  v41 = *((_QWORD *)v31 + 1);
  if (v39 != v40 || v38 != v41)
  {
    v43 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) != 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return 1;
}

BOOL sub_23E2100B0(char a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  unint64_t v12;
  int v13;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_23E53845C();
  v4 = dword_23E53A6A0[a1];
  sub_23E53848C();
  v5 = sub_23E5384A4();
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = v5 & ~v6;
  v8 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(a2 + 48);
  if (dword_23E53A6A0[*(char *)(v9 + v7)] == v4)
    return 1;
  v11 = ~v6;
  v12 = (v7 + 1) & v11;
  if (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  do
  {
    v13 = dword_23E53A6A0[*(char *)(v9 + v12)];
    result = v13 == v4;
    if (v13 == v4)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

BOOL sub_23E2101B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_23E538450();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_23E21027C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  unsigned int v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v51);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = _s7MergeIdVMa();
  v6 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  if (*(_QWORD *)(a2 + 16))
  {
    v52 = a2;
    sub_23E53845C();
    sub_23E1E7C20(a1, (uint64_t)v19, &qword_254333F50);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    v21 = v20(v19, 1, v9);
    v43 = v10;
    if (v21 == 1)
    {
      sub_23E538474();
    }
    else
    {
      v22 = v41;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v19, v9);
      sub_23E538474();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    }
    v23 = v45;
    v24 = *(int *)(v44 + 20);
    v50 = a1;
    v42 = (_QWORD *)(a1 + v24);
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v25 = sub_23E5384A4();
    v26 = -1 << *(_BYTE *)(v52 + 32);
    v27 = v25 & ~v26;
    v49 = v52 + 56;
    if (((*(_QWORD *)(v52 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
    {
      v46 = ~v26;
      v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20;
      v48 = *(_QWORD *)(v6 + 72);
      v28 = _s7MergeIdVMa;
      do
      {
        v29 = (uint64_t)v23;
        v30 = v28;
        sub_23E1E2F50(*(_QWORD *)(v52 + 48) + v48 * v27, (uint64_t)v8, (uint64_t (*)(_QWORD))v28);
        sub_23E1E7C20(v50, (uint64_t)v17, &qword_254333F50);
        v31 = (uint64_t)&v5[*(int *)(v51 + 48)];
        sub_23E1E7C20((uint64_t)v8, (uint64_t)v5, &qword_254333F50);
        sub_23E1E7C20((uint64_t)v17, v31, &qword_254333F50);
        v32 = v47;
        if (v47((uint64_t)v5, 1, v9) == 1)
        {
          sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
          v33 = v32(v31, 1, v9);
          v23 = (char *)v29;
          if (v33 != 1)
            goto LABEL_14;
          sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
        }
        else
        {
          sub_23E1E7C20((uint64_t)v5, v29, &qword_254333F50);
          if (v32(v31, 1, v9) == 1)
          {
            sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v29, v9);
            v23 = (char *)v29;
LABEL_14:
            sub_23E1E7C64((uint64_t)v5, &qword_254332798);
            goto LABEL_8;
          }
          v34 = v43;
          v35 = v41;
          (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v41, v31, v9);
          sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v36 = sub_23E537514();
          v37 = *(void (**)(char *, uint64_t))(v34 + 8);
          v38 = v35;
          v23 = v45;
          v37(v38, v9);
          sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
          v37(v23, v9);
          sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
          if ((v36 & 1) == 0)
            goto LABEL_8;
        }
        v39 = &v8[*(int *)(v44 + 20)];
        if (*(_QWORD *)v39 == *v42 && *((_QWORD *)v39 + 1) == v42[1] || (sub_23E538354() & 1) != 0)
        {
          sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
          return 1;
        }
LABEL_8:
        v28 = v30;
        sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))v30);
        v27 = (v27 + 1) & v46;
      }
      while (((*(_QWORD *)(v49 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_23E210764()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E2107A8()
{
  return sub_23E53848C();
}

uint64_t sub_23E2107D0()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E210814()
{
  return sub_23E538468();
}

uint64_t sub_23E210840(uint64_t a1, uint64_t a2)
{
  return sub_23E210B44(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23E21084C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23E537544();
  *a2 = 0;
  return result;
}

uint64_t sub_23E2108C0(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23E537550();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23E21093C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23E53755C();
  v2 = sub_23E537538();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_23E21097C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

unsigned __int8 *sub_23E210990@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_23E2109A0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_DWORD *sub_23E2109AC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_23E2109BC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

id sub_23E2109C8()
{
  id *v0;

  return *v0;
}

uint64_t sub_23E2109D0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_23E2109D8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_23E2109E8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23E2109F8()
{
  return sub_23E538474();
}

_DWORD *sub_23E210A24@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23E210A30()
{
  sub_23E53845C();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E210A74()
{
  sub_23E53845C();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E210AB4()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E210AF8()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E210B38(uint64_t a1, uint64_t a2)
{
  return sub_23E210B44(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23E210B44(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23E53755C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23E210B80()
{
  sub_23E53755C();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E210BC0()
{
  uint64_t v0;

  sub_23E53755C();
  sub_23E53845C();
  sub_23E5375EC();
  v0 = sub_23E5384A4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23E210C30()
{
  return sub_23E53755C();
}

uint64_t sub_23E210C40()
{
  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  return sub_23E536CF8();
}

uint64_t sub_23E210C80()
{
  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  return sub_23E536CC8();
}

uint64_t sub_23E210CC0(void *a1)
{
  id v2;

  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  v2 = a1;
  return sub_23E536CBC();
}

uint64_t sub_23E210D24()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_23E537C70();

  return v2;
}

uint64_t sub_23E210D58()
{
  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  return sub_23E536CEC();
}

uint64_t sub_23E210DA8()
{
  sub_23E53845C();
  sub_23E5374D8();
  return sub_23E5384A4();
}

BOOL sub_23E210E04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_23E210E18(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_23E210E20@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_23E210E34@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_23E210E48@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23E210E5C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_23E210E8C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_23E210EB8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_23E210EDC(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_23E210EF0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_23E210F04(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_23E210F18@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23E210F2C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23E210F40(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23E210F54(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23E210F68()
{
  _DWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23E210F78()
{
  return sub_23E537D30();
}

_DWORD *sub_23E210F90(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_23E210FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23E53755C();
  v2 = v1;
  if (v0 == sub_23E53755C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_23E21102C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E537538();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23E211070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23E53755C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E211098()
{
  sub_23E1EE1C4(&qword_256D3F520, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23E53A4B4);
  sub_23E1EE1C4(&qword_256D3F528, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23E53A454);
  return sub_23E538090();
}

uint64_t sub_23E21111C()
{
  sub_23E1EE1C4(&qword_256D3F4E0, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A39C);
  return sub_23E5383D8();
}

uint64_t sub_23E21115C()
{
  sub_23E1EE1C4(&qword_256D3F4E0, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A39C);
  return sub_23E5383CC();
}

uint64_t sub_23E2111A0()
{
  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  return sub_23E536CB0();
}

uint64_t sub_23E2111E0()
{
  sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
  return sub_23E536CD4();
}

BOOL sub_23E211238(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23E21124C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_23E222150(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_23E211288(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E538450();
  return sub_23E2118C4(a1, v2);
}

unint64_t sub_23E2112B8(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24264F6DC](*(_QWORD *)(v1 + 40), a1, 2);
  return sub_23E211960(a1, v3);
}

unint64_t sub_23E2112EC(char a1)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E53848C();
  v2 = sub_23E5384A4();
  return sub_23E211A00(a1, v2);
}

unint64_t sub_23E211350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23E53845C();
  sub_23E5375EC();
  v4 = sub_23E5384A4();
  return sub_23E211AB4(a1, a2, v4);
}

unint64_t sub_23E2113B4(int a1)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E53848C();
  v2 = sub_23E5384A4();
  return sub_23E211B94(a1, v2);
}

unint64_t sub_23E21140C(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x24264F6DC](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_23E211B94(a1, v3);
}

uint64_t sub_23E211440(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_23E53845C();
  sub_23E2A6B28((uint64_t)v4, a1);
  v2 = sub_23E5384A4();
  return sub_23E211C30(a1, v2);
}

unint64_t sub_23E211498(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E537E08();
  return sub_23E211FD8(a1, v2);
}

unint64_t sub_23E2114C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E7C20(a1, (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s7MergeIdVMa();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v9 = sub_23E5384A4();
  return sub_23E21209C(a1, v9);
}

unint64_t sub_23E211674(uint64_t a1)
{
  return sub_23E1EADC4(a1, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

unint64_t sub_23E211680(uint64_t a1)
{
  uint64_t v2;
  __int128 v4[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v4);
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  StaticService.hash(into:)(v4);
  StaticCharacteristic.hash(into:)();
  v2 = sub_23E5384A4();
  return sub_23E212474(a1, v2);
}

unint64_t sub_23E21170C(uint64_t a1)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E538468();
  v2 = sub_23E5384A4();
  return sub_23E2118C4(a1, v2);
}

unint64_t sub_23E211770(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E538468();
  v2 = sub_23E5384A4();
  return sub_23E2125C0(a1, v2);
}

void sub_23E2117D4(char a1)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E21182C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v1 = sub_23E5384A4();
  return sub_23E212660(v0, v1);
}

unint64_t sub_23E2118C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23E211960(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23E211A00(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = dword_23E53A708[a1];
    v8 = *(_QWORD *)(v2 + 48);
    if (dword_23E53A708[*(char *)(v8 + result)] != v7)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if (dword_23E53A708[*(char *)(v8 + result)] == v7)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23E211AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23E538354() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23E538354() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23E211B94(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_23E211C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_23E211FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_23E222FFC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24264F0AC](v9, a1);
      sub_23E1FFD40((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_23E21209C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v3 = v2;
  v45 = a1;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v43);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  v38 = _s7MergeIdVMa();
  MEMORY[0x24BDAC7A8](v38);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v3 + 64;
  v44 = v3;
  v20 = -1 << *(_BYTE *)(v3 + 32);
  v21 = a2 & ~v20;
  if (((*(_QWORD *)(v3 + 64 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
  {
    v46 = v15;
    v40 = v13;
    v41 = ~v20;
    v42 = *(_QWORD *)(v16 + 72);
    v39 = v3 + 64;
    do
    {
      sub_23E1E2F50(*(_QWORD *)(v44 + 48) + v42 * v21, (uint64_t)v18, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      v22 = (uint64_t)v46;
      sub_23E1E7C20(v45, (uint64_t)v46, &qword_254333F50);
      v23 = (uint64_t)&v9[*(int *)(v43 + 48)];
      sub_23E1E7C20((uint64_t)v18, (uint64_t)v9, &qword_254333F50);
      sub_23E1E7C20(v22, v23, &qword_254333F50);
      v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
      if (v24((uint64_t)v9, 1, v5) == 1)
      {
        sub_23E1E7C64(v22, &qword_254333F50);
        if (v24(v23, 1, v5) != 1)
          goto LABEL_10;
        sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
      }
      else
      {
        v25 = (uint64_t)v40;
        sub_23E1E7C20((uint64_t)v9, (uint64_t)v40, &qword_254333F50);
        if (v24(v23, 1, v5) == 1)
        {
          sub_23E1E7C64((uint64_t)v46, &qword_254333F50);
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v5);
          v19 = v39;
LABEL_10:
          sub_23E1E7C64((uint64_t)v9, &qword_254332798);
          goto LABEL_4;
        }
        v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
        v27 = v6;
        v28 = v37;
        v26(v37, v23, v5);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v29 = sub_23E537514();
        v30 = *(void (**)(char *, uint64_t))(v27 + 8);
        v31 = v28;
        v6 = v27;
        v30(v31, v5);
        sub_23E1E7C64((uint64_t)v46, &qword_254333F50);
        v30((char *)v25, v5);
        sub_23E1E7C64((uint64_t)v9, &qword_254333F50);
        v19 = v39;
        if ((v29 & 1) == 0)
          goto LABEL_4;
      }
      v32 = *(int *)(v38 + 20);
      v33 = *(_QWORD *)&v18[v32];
      v34 = *(_QWORD *)&v18[v32 + 8];
      v35 = (_QWORD *)(v45 + v32);
      if (v33 == *v35 && v34 == v35[1] || (sub_23E538354() & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
        return v21;
      }
LABEL_4:
      sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
      v21 = (v21 + 1) & v41;
    }
    while (((*(_QWORD *)(v19 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
  }
  return v21;
}

unint64_t sub_23E212474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v8[*(int *)(v5 + 20)], a1 + *(int *)(v5 + 20)) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v8[*(int *)(v5 + 24)], a1 + *(int *)(v5 + 24)))
      {
        break;
      }
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  }
  return v10;
}

unint64_t sub_23E2125C0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_23E212660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_23E212884(uint64_t a1, int a2)
{
  return sub_23E205518(a1, a2, &qword_256D3F3E0);
}

uint64_t sub_23E212890(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F458);
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
      sub_23E1EA76C(v23, v35);
    else
      sub_23E1EA57C((uint64_t)v23, (uint64_t)v35);
    v24 = sub_23E53845C();
    CharacteristicKind.rawValue.getter(v24);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    result = (uint64_t)sub_23E1EA76C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E212B9C(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_2543326A8);
}

uint64_t sub_23E212BB0(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, &qword_256D3F248);
}

uint64_t sub_23E212BC4(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, &qword_256D3F238);
}

uint64_t sub_23E212BD8(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, type metadata accessor for StaticRoom, &qword_254332C50);
}

uint64_t sub_23E212BEC(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_256D3F240);
}

uint64_t sub_23E212C00(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_2543333D0);
}

uint64_t sub_23E212C14(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, type metadata accessor for StaticAccessory, &qword_2543333C8);
}

uint64_t sub_23E212C28(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser, &qword_256D3F3B0);
}

uint64_t sub_23E212C3C(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone, &qword_256D3F3B8);
}

uint64_t sub_23E212C50(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, &qword_2543333C0);
}

uint64_t sub_23E212C64(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome, &qword_256D3F380);
}

uint64_t sub_23E212C78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F430);
  v38 = a2;
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E212F84(uint64_t a1, char a2)
{
  return sub_23E2188F8(a1, a2, &qword_256D3F1B0);
}

uint64_t sub_23E212F90(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1A8);
  v38 = a2;
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E21329C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F280);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v9;
    v31 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero(v33, 8 * v32);
                else
                  *v33 = v30;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v29 = *(_QWORD *)v28;
      v34 = *(_OWORD *)(v28 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      result = sub_23E538450();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_QWORD *)v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E21357C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2A0);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23E213854(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64_t v30;
  _QWORD *v31;
  _BYTE v32[40];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F290);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = v3;
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v8 << 6);
      }
      else
      {
        v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v16 >= v30)
          goto LABEL_34;
        v17 = v31[v16];
        ++v8;
        if (!v17)
        {
          v8 = v16 + 1;
          if (v16 + 1 >= v30)
            goto LABEL_34;
          v17 = v31[v8];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v30)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v29;
                goto LABEL_41;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v28;
              v3 = v29;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v17 = v31[v18];
            if (!v17)
            {
              while (1)
              {
                v8 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_43;
                if (v8 >= v30)
                  goto LABEL_34;
                v17 = v31[v8];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v8 = v18;
          }
        }
LABEL_21:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      v19 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v15);
      v20 = *(_QWORD *)(v5 + 56) + 40 * v15;
      if ((a2 & 1) != 0)
        sub_23E1E4E3C(v20, (uint64_t)v32, &qword_256D3F298);
      else
        sub_23E1E7C20(v20, (uint64_t)v32, &qword_256D3F298);
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v7 + 40), v19, 4);
      v21 = -1 << *(_BYTE *)(v7 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v12 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v13) = v19;
      result = sub_23E1E4E3C((uint64_t)v32, *(_QWORD *)(v7 + 56) + 40 * v13, &qword_256D3F298);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_23E213B30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2A8);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23E213E08(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3F270);
}

uint64_t sub_23E213E1C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31[16];
  __int128 v32[16];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F410);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
        v17 = v16 << 8;
        if ((a2 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v12)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_22;
              }
            }
            v8 = v21;
          }
        }
LABEL_22:
        v11 = (v20 - 1) & v20;
        v16 = __clz(__rbit64(v20)) + (v8 << 6);
        v17 = v16 << 8;
        if ((a2 & 1) != 0)
        {
LABEL_10:
          v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
          sub_23E22328C((__int128 *)(*(_QWORD *)(v5 + 56) + v17), (uint64_t)v31);
          goto LABEL_24;
        }
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      sub_23E22328C((__int128 *)(*(_QWORD *)(v5 + 56) + v17), (uint64_t)v31);
      sub_23E223454((uint64_t)v31);
LABEL_24:
      sub_23E22328C(v31, (uint64_t)v32);
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v18;
      result = sub_23E22328C(v32, *(_QWORD *)(v7 + 56) + (v14 << 8));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23E214128(uint64_t a1, int a2)
{
  return sub_23E2157C0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3F448);
}

uint64_t sub_23E21413C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for StaticMatterDevice();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F278);
  v39 = a2;
  result = sub_23E538060();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_23E1E2FDC(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      else
        sub_23E1E2F50(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      result = sub_23E538450();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_23E1E2FDC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_23E21446C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E8);
  v36 = a2;
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E214780(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E0);
  v40 = a2;
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v41 = *(_OWORD *)(v33 + 8);
    v35 = *(_QWORD *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v41;
    *(_QWORD *)(v19 + 24) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E214ACC(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, &qword_256D3F3D0);
}

uint64_t sub_23E214AE0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1A0);
  v6 = sub_23E538060();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x23E214F0CLL);
            }
            if (v13 >= v10)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_23E1EA76C(v16, v20);
      else
        sub_23E1EA57C((uint64_t)v16, (uint64_t)v20);
      sub_23E53845C();
      __asm { BR              X8 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero(v19, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23E214F34(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F198);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(unsigned __int16 *)(*(_QWORD *)(v5 + 48) + 2 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v35 = *(_OWORD *)v28;
      v29 = *(_QWORD *)(v28 + 16);
      if ((a2 & 1) == 0)
      {
        v30 = (id)v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v7 + 40), v27, 2);
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_WORD *)(*(_QWORD *)(v7 + 48) + 2 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_OWORD *)v17 = v35;
      *(_QWORD *)(v17 + 16) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E215218(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23E538060();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v30 = -1 << v11;
    v31 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v32 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v32)
          goto LABEL_33;
        v22 = v10[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v32)
            goto LABEL_33;
          v22 = v10[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero((void *)(v6 + 64), 8 * v32);
                else
                  *v10 = v30;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v22 = v10[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v9 >= v32)
                  goto LABEL_33;
                v22 = v10[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned __int16 *)(*(_QWORD *)(v6 + 48) + 2 * v20);
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v8 + 40), v28, 2);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_WORD *)(*(_QWORD *)(v8 + 48) + 2 * v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23E2154C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F320);
  v6 = sub_23E538060();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23E1EA76C(v24, v35);
      }
      else
      {
        sub_23E1EA57C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_23E53845C();
      sub_23E5375EC();
      result = sub_23E5384A4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23E1EA76C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E2157C0(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v7 = v4;
  v9 = a3(0);
  v42 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - v10;
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v43 = a2;
  result = sub_23E538060();
  v14 = result;
  if (*(_QWORD *)(v12 + 16))
  {
    v39 = v7;
    v15 = 0;
    v16 = *(_QWORD *)(v12 + 64);
    v41 = (_QWORD *)(v12 + 64);
    v17 = 1 << *(_BYTE *)(v12 + 32);
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v19 = v18 & v16;
    v40 = (unint64_t)(v17 + 63) >> 6;
    v20 = result + 64;
    while (1)
    {
      if (v19)
      {
        v22 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        v23 = v22 | (v15 << 6);
      }
      else
      {
        v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v41;
        if (v24 >= v40)
          goto LABEL_34;
        v25 = v41[v24];
        ++v15;
        if (!v25)
        {
          v15 = v24 + 1;
          if (v24 + 1 >= v40)
            goto LABEL_34;
          v25 = v41[v15];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_34:
              if ((v43 & 1) == 0)
              {
                result = swift_release();
                v7 = v39;
                goto LABEL_41;
              }
              v37 = 1 << *(_BYTE *)(v12 + 32);
              if (v37 >= 64)
                bzero(v41, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v37;
              v7 = v39;
              *(_QWORD *)(v12 + 16) = 0;
              break;
            }
            v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                v15 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v15 >= v40)
                  goto LABEL_34;
                v25 = v41[v15];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v15 = v26;
          }
        }
LABEL_21:
        v19 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      v27 = *(unsigned __int16 *)(*(_QWORD *)(v12 + 48) + 2 * v23);
      v28 = *(_QWORD *)(v42 + 72);
      v29 = *(_QWORD *)(v12 + 56) + v28 * v23;
      if ((v43 & 1) != 0)
        sub_23E1E2FDC(v29, (uint64_t)v11, a3);
      else
        sub_23E1E2F50(v29, (uint64_t)v11, a3);
      result = MEMORY[0x24264F6DC](*(_QWORD *)(v14 + 40), v27, 2);
      v30 = -1 << *(_BYTE *)(v14 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v20 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v20 + 8 * v32);
        }
        while (v36 == -1);
        v21 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v20 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_WORD *)(*(_QWORD *)(v14 + 48) + 2 * v21) = v27;
      result = sub_23E1E2FDC((uint64_t)v11, *(_QWORD *)(v14 + 56) + v28 * v21, a3);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v7 = v14;
  return result;
}

uint64_t sub_23E215AEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F258);
  v6 = a2;
  v7 = sub_23E538060();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v21);
    v31 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v6 & 1) == 0)
      v32 = v31;
    v15 = sub_23E53845C();
    CharacteristicKind.rawValue.getter(v15);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v18 == v27;
        if (v18 == v27)
          v18 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v18);
      }
      while (v29 == -1);
      v19 = __clz(__rbit64(~v29)) + (v18 << 6);
    }
    *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19) = v30;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v31;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v34;
  v23 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_23E215DFC(uint64_t a1, int a2)
{
  return sub_23E205518(a1, a2, &qword_256D3F3F0);
}

uint64_t sub_23E215E08(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  _OWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _OWORD v31[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F188);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_34;
        v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_34;
          v18 = v30[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_41;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_43;
                if (v8 >= v12)
                  goto LABEL_34;
                v18 = v30[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v21 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
      if ((a2 & 1) != 0)
        sub_23E1EA76C(v21, v31);
      else
        sub_23E1EA57C((uint64_t)v21, (uint64_t)v31);
      sub_23E53845C();
      sub_23E53848C();
      result = sub_23E5384A4();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v14) = v20;
      result = (uint64_t)sub_23E1EA76C(v31, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_23E2160DC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t i;
  int v47;
  __int128 v48;

  v3 = v2;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1D8);
  v47 = a2;
  v10 = sub_23E538060();
  v11 = v10;
  if (*(_QWORD *)(v9 + 16))
  {
    v42 = v2;
    v12 = 1 << *(_BYTE *)(v9 + 32);
    v13 = *(_QWORD *)(v9 + 64);
    v44 = (_QWORD *)(v9 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v43 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    v45 = v6;
    for (i = v9; ; v9 = i)
    {
      if (v15)
      {
        v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v23 = v22 | (v18 << 6);
      }
      else
      {
        v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v43)
          goto LABEL_34;
        v25 = v44[v24];
        ++v18;
        if (!v25)
        {
          v18 = v24 + 1;
          if (v24 + 1 >= v43)
            goto LABEL_34;
          v25 = v44[v18];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v43)
            {
LABEL_34:
              swift_release();
              v3 = v42;
              if ((v47 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v9 + 32);
                if (v41 >= 64)
                  bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v44 = -1 << v41;
                *(_QWORD *)(v9 + 16) = 0;
              }
              break;
            }
            v25 = v44[v26];
            if (!v25)
            {
              while (1)
              {
                v18 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v18 >= v43)
                  goto LABEL_34;
                v25 = v44[v18];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v18 = v26;
          }
        }
LABEL_21:
        v15 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v18 << 6);
      }
      v27 = v6;
      v28 = *(_QWORD *)(v6 + 72);
      v29 = *(_QWORD *)(v9 + 48) + v28 * v23;
      if ((v47 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 32))(v8, v29, v5);
        v30 = *(_QWORD *)(v9 + 56) + 32 * v23;
        v48 = *(_OWORD *)v30;
        v31 = *(void **)(v30 + 16);
        v32 = *(void **)(v30 + 24);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v8, v29, v5);
        v33 = *(_QWORD *)(v9 + 56) + 32 * v23;
        v48 = *(_OWORD *)v33;
        v31 = *(void **)(v33 + 16);
        v32 = *(void **)(v33 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23E223038(v31);
        sub_23E223038(v32);
      }
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_23E5374CC();
      v34 = -1 << *(_BYTE *)(v11 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v16 + 8 * v36);
        }
        while (v40 == -1);
        v19 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = *(_QWORD *)(v11 + 48) + v28 * v19;
      v6 = v45;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(v20, v8, v5);
      v21 = *(_QWORD *)(v11 + 56) + 32 * v19;
      *(_OWORD *)v21 = v48;
      *(_QWORD *)(v21 + 16) = v31;
      *(_QWORD *)(v21 + 24) = v32;
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E2164A4(uint64_t a1, int a2)
{
  return sub_23E205518(a1, a2, &qword_256D3F1B8);
}

uint64_t sub_23E2164B0(uint64_t a1, int a2)
{
  return sub_23E218F20(a1, a2, &qword_256D3F1C0, (void (*)(unint64_t, _BYTE *))sub_23E1E6C84);
}

uint64_t sub_23E2164C4(uint64_t a1, int a2)
{
  return sub_23E205518(a1, a2, &qword_256D3F1C8);
}

uint64_t sub_23E2164D0(uint64_t a1, int a2)
{
  return sub_23E218F20(a1, a2, &qword_256D3F1D0, (void (*)(unint64_t, _BYTE *))sub_23E1E6C84);
}

uint64_t sub_23E2164E4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  int64_t v30;
  _QWORD *v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int64_t v57;
  _QWORD *v58;
  uint64_t i;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _OWORD v76[2];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

  v3 = v2;
  v5 = sub_23E536F80();
  v74 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2C0);
  v60 = a2;
  v9 = sub_23E538060();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v75 = v7;
  v56 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v58 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v57 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v27 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v28 = v27 | (v17 << 6);
      v29 = v75;
      goto LABEL_22;
    }
    v30 = v17 + 1;
    v29 = v75;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v30 >= v57)
      break;
    v31 = v58;
    v32 = v58[v30];
    ++v17;
    if (!v32)
    {
      v17 = v30 + 1;
      if (v30 + 1 >= v57)
        goto LABEL_34;
      v32 = v58[v17];
      if (!v32)
      {
        v33 = v30 + 2;
        if (v33 >= v57)
        {
LABEL_34:
          swift_release();
          v3 = v56;
          goto LABEL_36;
        }
        v32 = v58[v33];
        if (!v32)
        {
          while (1)
          {
            v17 = v33 + 1;
            if (__OFADD__(v33, 1))
              goto LABEL_43;
            if (v17 >= v57)
              goto LABEL_34;
            v32 = v58[v17];
            ++v33;
            if (v32)
              goto LABEL_21;
          }
        }
        v17 = v33;
      }
    }
LABEL_21:
    v14 = (v32 - 1) & v32;
    v28 = __clz(__rbit64(v32)) + (v17 << 6);
LABEL_22:
    v34 = *(_QWORD *)(v74 + 72);
    if ((v60 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v74 + 32))(v29, *(_QWORD *)(v8 + 48) + v34 * v28, v5);
      v35 = (uint64_t *)(*(_QWORD *)(v8 + 56) + (v28 << 7));
      v70 = *v35;
      v68 = v35[1];
      v66 = v35[2];
      v64 = v35[3];
      v62 = v35[4];
      v36 = v35[6];
      v61 = v35[5];
      v37 = v35[7];
      v73 = v35[8];
      v71 = v35[9];
      v69 = v35[10];
      v67 = v35[11];
      v65 = v35[12];
      v63 = v35[13];
      v39 = v35[14];
      v38 = v35[15];
      *(_QWORD *)&v72 = v39;
      *((_QWORD *)&v72 + 1) = v38;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v29, *(_QWORD *)(v8 + 48) + v34 * v28, v5);
      v40 = (__int128 *)(*(_QWORD *)(v8 + 56) + (v28 << 7));
      v41 = v40[4];
      v42 = v40[5];
      v43 = v40[7];
      v81 = v40[6];
      v82 = v43;
      v79 = v41;
      v80 = v42;
      v45 = *v40;
      v44 = v40[1];
      v46 = v40[3];
      v77 = v40[2];
      v78 = v46;
      v76[0] = v45;
      v76[1] = v44;
      v72 = v82;
      v71 = *((_QWORD *)&v79 + 1);
      v73 = v79;
      v67 = *((_QWORD *)&v80 + 1);
      v69 = v80;
      v63 = *((_QWORD *)&v81 + 1);
      v65 = v81;
      v68 = *((_QWORD *)&v45 + 1);
      v70 = v45;
      v64 = *((_QWORD *)&v44 + 1);
      v66 = v44;
      v62 = v77;
      v36 = v46;
      v61 = *((_QWORD *)&v77 + 1);
      v37 = *((_QWORD *)&v46 + 1);
      sub_23E223058((uint64_t)v76);
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v47 = -1 << *(_BYTE *)(v10 + 32);
    v48 = result & ~v47;
    v49 = v48 >> 6;
    if (((-1 << v48) & ~*(_QWORD *)(v15 + 8 * (v48 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v48) & ~*(_QWORD *)(v15 + 8 * (v48 >> 6)))) | v48 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v50 = 0;
      v51 = (unint64_t)(63 - v47) >> 6;
      do
      {
        if (++v49 == v51 && (v50 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v52 = v49 == v51;
        if (v49 == v51)
          v49 = 0;
        v50 |= v52;
        v53 = *(_QWORD *)(v15 + 8 * v49);
      }
      while (v53 == -1);
      v18 = __clz(__rbit64(~v53)) + (v49 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v74 + 32))(*(_QWORD *)(v10 + 48) + v34 * v18, v75, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + (v18 << 7));
    v20 = v68;
    *v19 = v70;
    v19[1] = v20;
    v21 = v64;
    v19[2] = v66;
    v19[3] = v21;
    v22 = v61;
    v19[4] = v62;
    v19[5] = v22;
    v19[6] = v36;
    v19[7] = v37;
    v23 = v71;
    v19[8] = v73;
    v19[9] = v23;
    v24 = v67;
    v19[10] = v69;
    v19[11] = v24;
    v25 = v63;
    v19[12] = v65;
    v19[13] = v25;
    v26 = *((_QWORD *)&v72 + 1);
    v19[14] = v72;
    v19[15] = v26;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v56;
  v31 = v58;
LABEL_36:
  if ((v60 & 1) != 0)
  {
    v54 = 1 << *(_BYTE *)(v8 + 32);
    if (v54 >= 64)
      bzero(v31, ((unint64_t)(v54 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v31 = -1 << v54;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23E216AB8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F408);
  v6 = sub_23E538060();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_34;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_34;
          v20 = v9[v15];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_41;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v15 >= v12)
                  goto LABEL_34;
                v20 = v9[v15];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v15 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_23E1EA76C(v23, v34);
      }
      else
      {
        sub_23E1EA57C((uint64_t)v23, (uint64_t)v34);
        v24 = v22;
      }
      result = sub_23E537C4C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v22;
      result = (uint64_t)sub_23E1EA76C(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v16));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_23E216D88(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for RoomType(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3D8);
  v43 = a2;
  v9 = sub_23E538060();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_23E1E2FDC(v30, (uint64_t)v7, type metadata accessor for RoomType);
    }
    else
    {
      sub_23E1E2F50(v30, (uint64_t)v7, type metadata accessor for RoomType);
      swift_bridgeObjectRetain();
    }
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_23E1E2FDC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, type metadata accessor for RoomType);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23E217108(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  char v42;

  v3 = v2;
  v5 = type metadata accessor for StaticCharacteristic();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333D8);
  v41 = a2;
  v9 = sub_23E538060();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v39 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = v2;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_34;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v38)
              goto LABEL_34;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v20);
    v26 = *(_QWORD *)(v40 + 72);
    v27 = *(_QWORD *)(v8 + 56) + v26 * v20;
    if ((v41 & 1) != 0)
      sub_23E1E2FDC(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    else
      sub_23E1E2F50(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v28 = sub_23E53845C();
    v42 = v25;
    CharacteristicKind.rawValue.getter(v28);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v29 = -1 << *(_BYTE *)(v10 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v10 + 48) + v18) = v25;
    result = sub_23E1E2FDC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v26 * v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v37;
  v22 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23E217490(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_23E536F80();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D8);
  v8 = sub_23E538060();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v20);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E21782C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  int v43;

  v3 = v2;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F388);
  v43 = a2;
  v10 = sub_23E538060();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v41 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v39 = v2;
  v40 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v40)
              goto LABEL_34;
            v24 = v41[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v43 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v21);
      v29 = v28;
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v19 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E217BC0(uint64_t a1, int a2)
{
  return sub_23E205518(a1, a2, &qword_256D3F390);
}

uint64_t sub_23E217BCC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_23E536F80();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F208);
  v8 = sub_23E538060();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v20);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_BYTE *)(*(_QWORD *)(v9 + 56) + v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E217F68(uint64_t a1, int a2)
{
  return sub_23E2195A4(a1, a2, &qword_256D3F360);
}

uint64_t sub_23E217F74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F350);
  v6 = a2;
  v7 = sub_23E538060();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v33 = v2;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v34)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v34)
        goto LABEL_33;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v34)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v34)
              goto LABEL_33;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v21);
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v6 & 1) == 0)
      swift_bridgeObjectRetain();
    v15 = sub_23E53845C();
    ServiceKind.rawValue.getter(v15);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v18 == v27;
        if (v18 == v27)
          v18 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v18);
      }
      while (v29 == -1);
      v19 = __clz(__rbit64(~v29)) + (v18 << 6);
    }
    *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19) = v30;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v31;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v33;
  v23 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v23, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_23E218284(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int64_t v43;
  __int128 v44[5];

  v3 = v2;
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v39 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F308);
  v42 = a2;
  v11 = sub_23E538060();
  v12 = (_QWORD *)v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v35 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v33 = v2;
    v34 = (unint64_t)(v13 + 63) >> 6;
    v36 = v11 + 64;
    result = swift_retain();
    v18 = 0;
    v37 = v10;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v18 << 6);
      }
      else
      {
        v24 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        v25 = v35;
        if (v24 >= v34)
          goto LABEL_24;
        v26 = v35[v24];
        ++v18;
        if (!v26)
        {
          v18 = v24 + 1;
          if (v24 + 1 >= v34)
            goto LABEL_24;
          v26 = v35[v18];
          if (!v26)
          {
            v27 = v24 + 2;
            if (v27 >= v34)
            {
LABEL_24:
              swift_release();
              if ((v42 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_31;
              }
              v31 = 1 << *(_BYTE *)(v10 + 32);
              if (v31 >= 64)
                bzero(v25, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v25 = -1 << v31;
              v3 = v33;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v26 = v35[v27];
            if (!v26)
            {
              while (1)
              {
                v18 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_33;
                if (v18 >= v34)
                  goto LABEL_24;
                v26 = v35[v18];
                ++v27;
                if (v26)
                  goto LABEL_21;
              }
            }
            v18 = v27;
          }
        }
LABEL_21:
        v16 = (v26 - 1) & v26;
        v23 = __clz(__rbit64(v26)) + (v18 << 6);
      }
      v28 = v39;
      v29 = *(_QWORD *)(v40 + 72);
      v30 = *(_QWORD *)(v10 + 48) + v29 * v23;
      v43 = v18;
      if ((v42 & 1) != 0)
      {
        sub_23E1E2FDC(v30, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v19 = *(_QWORD *)(v38 + 72);
        sub_23E1E2FDC(*(_QWORD *)(v10 + 56) + v19 * v23, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      }
      else
      {
        sub_23E1E2F50(v30, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        v19 = *(_QWORD *)(v38 + 72);
        sub_23E1E2F50(*(_QWORD *)(v10 + 56) + v19 * v23, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      }
      sub_23E53845C();
      StaticAccessory.hash(into:)(v44);
      StaticService.hash(into:)(v44);
      StaticCharacteristic.hash(into:)();
      sub_23E5384A4();
      v20 = v36;
      v21 = sub_23E537D60();
      *(_QWORD *)(v20 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      sub_23E1E2FDC(v28, v12[6] + v29 * v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      result = sub_23E1E2FDC((uint64_t)v7, v12[7] + v19 * v21, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      ++v12[2];
      v10 = v37;
      v18 = v43;
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v12;
  return result;
}

uint64_t sub_23E218628(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F300);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_23E2188EC(uint64_t a1, char a2)
{
  return sub_23E219F4C(a1, a2, &qword_256D3F2F0);
}

uint64_t sub_23E2188F8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_23E538060();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23E218C08(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2B0);
  v37 = a2;
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23E53845C();
    sub_23E5375EC();
    result = sub_23E5384A4();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E218F0C(uint64_t a1, int a2)
{
  return sub_23E218F20(a1, a2, &qword_256D3F250, (void (*)(unint64_t, _BYTE *))sub_23E1E6C84);
}

uint64_t sub_23E218F20(uint64_t a1, int a2, uint64_t *a3, void (*a4)(unint64_t, _BYTE *))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  int v42;
  void (*v43)(unint64_t, _BYTE *);
  _BYTE v44[40];

  v43 = a4;
  v6 = v4;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v42 = a2;
  v13 = sub_23E538060();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v41 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v39 = v4;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v40)
      break;
    v26 = v41;
    v27 = v41[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v40)
        goto LABEL_34;
      v27 = v41[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v40)
        {
LABEL_34:
          swift_release();
          v6 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v41[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v40)
              goto LABEL_34;
            v27 = v41[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v9 + 72);
    v30 = *(_QWORD *)(v12 + 48) + v29 * v24;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v30, v8);
      v43(*(_QWORD *)(v12 + 56) + 40 * v24, v44);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v30, v8);
      sub_23E1FF9C8(*(_QWORD *)(v12 + 56) + 40 * v24, (uint64_t)v44);
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v31 = -1 << *(_BYTE *)(v14 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v19 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v19 + 8 * v33);
      }
      while (v37 == -1);
      v22 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v11, v8);
    result = ((uint64_t (*)(_BYTE *, unint64_t))v43)(v44, *(_QWORD *)(v14 + 56) + 40 * v22);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v6 = v39;
  v26 = v41;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v12 + 32);
  if (v38 >= 64)
    bzero(v26, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v38;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v14;
  return result;
}

uint64_t sub_23E2192D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F230);
  result = sub_23E538060();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v30;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v29;
              v3 = v30;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v31 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
        swift_unknownObjectRetain();
      result = sub_23E538450();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23E219598(uint64_t a1, int a2)
{
  return sub_23E2195A4(a1, a2, &qword_256D3F3C0);
}

uint64_t sub_23E2195A4(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = a2;
  v12 = sub_23E538060();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_23E21993C(uint64_t a1, int a2)
{
  return sub_23E219950(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile, &qword_256D3F2C8);
}

uint64_t sub_23E219950(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_23E538060();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_23E1E2FDC(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_23E1E2F50(v35 + v34 * v26, v50, v51);
    }
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_23E1E2FDC(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

uint64_t sub_23E219D44(uint64_t a1, char a2)
{
  return sub_23E204F1C(a1, a2, (uint64_t (*)(_QWORD))_s7MergeIdVMa, &qword_256D3F368, (uint64_t (*)(char *, uint64_t, uint64_t))sub_23E21C764);
}

void sub_23E219D60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1F8);
  v6 = sub_23E538060();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23E21C97C(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_23E219F40(uint64_t a1, char a2)
{
  return sub_23E219F4C(a1, a2, &qword_256D3F2F8);
}

uint64_t sub_23E219F4C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23E538060();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v33 = a2;
    v9 = 0;
    v34 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v34[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v34[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_38;
              }
              v32 = 1 << *(_BYTE *)(v6 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v20 = v34[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v9 >= v13)
                  goto LABEL_31;
                v20 = v34[v9];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v9 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v22);
      sub_23E53845C();
      sub_23E538468();
      result = sub_23E5384A4();
      v25 = -1 << *(_BYTE *)(v8 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v16) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v4 = v8;
  return result;
}

uint64_t sub_23E21A214(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1E8);
  v6 = sub_23E538060();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_23E1EA76C((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_23E222FFC(v25, (uint64_t)&v38);
      sub_23E1EA57C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_23E537E08();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_23E1EA76C(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23E21A528(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F3E0);
}

uint64_t sub_23E21A534(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_2543333B8);
}

uint64_t sub_23E21A548(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_256D3F240);
}

uint64_t sub_23E21A55C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_2543333D0);
}

uint64_t sub_23E21A570(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, type metadata accessor for StaticHH2Update, &qword_256D3F3C8);
}

uint64_t sub_23E21A584(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23E1E3148(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23E21DA18();
    goto LABEL_7;
  }
  sub_23E20517C(result, a3 & 1);
  result = sub_23E1E3148(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23E20485C(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_23E21A6D4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_23E1EA76C(a1, v17);
      }
      return sub_23E21CC78(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21ED48(&qword_256D3F458);
      goto LABEL_7;
    }
    sub_23E212890(v13, a3 & 1);
    v19 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CC78(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_23E5383C0();
  __break(1u);
  return result;
}

void sub_23E21A808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23E211350(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23E21DE38();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_23E212C78(v15, a4 & 1);
  v20 = sub_23E211350(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23E5383C0();
  __break(1u);
}

uint64_t sub_23E21A964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_23E211288(a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 24 * v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        v21[2] = a3;
        return result;
      }
      return sub_23E21CAC4(v14, a4, a1, a2, a3, v20);
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_23E21E19C();
      goto LABEL_7;
    }
    sub_23E21329C(v17, a5 & 1);
    v23 = sub_23E211288(a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CAC4(v14, a4, a1, a2, a3, v20);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21AAB0(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_23E21AAC8(a1, a2, a3, &qword_256D3F3A8);
}

uint64_t sub_23E21AABC(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_23E21AAC8(a1, a2, a3, &qword_256D3F288);
}

uint64_t sub_23E21AAC8(uint64_t a1, unsigned __int16 a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v6 = v4;
  v10 = *v4;
  v12 = sub_23E2112B8(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23E21F0D8(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_WORD *)(v18[6] + 2 * v12) = a2;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_23E215218(result, a3 & 1, a4);
  result = sub_23E2112B8(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

int64_t sub_23E21AC08(uint64_t a1, char a2, char a3)
{
  return sub_23E21AD4C(a1, a2, a3, &qword_256D3F2A0, (void (*)(void))sub_23E21357C);
}

uint64_t sub_23E21AC1C(uint64_t a1, unsigned int a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E21140C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23E223248(a1, v16[7] + 40 * v10, &qword_256D3F298);
      return sub_23E21CB14(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21E384();
      goto LABEL_7;
    }
    sub_23E213854(v13, a3 & 1);
    v18 = sub_23E21140C(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23E223248(a1, v16[7] + 40 * v10, &qword_256D3F298);
      return sub_23E21CB14(v10, a2, a1, v16);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

int64_t sub_23E21AD38(uint64_t a1, char a2, char a3)
{
  return sub_23E21AD4C(a1, a2, a3, &qword_256D3F2A8, (void (*)(void))sub_23E213B30);
}

int64_t sub_23E21AD4C(uint64_t a1, char a2, char a3, uint64_t *a4, void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  int64_t result;
  char v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v8 = v5;
  v12 = *v5;
  v14 = sub_23E2112EC(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (int64_t)sub_23E221C44(a4);
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(_BYTE *)(v20[6] + v14) = a2;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v23 = v20[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  a5();
  result = sub_23E2112EC(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21AE94(__int128 *a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E2112EC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23E2234D4((uint64_t)a1, v16[7] + (v10 << 8));
      return sub_23E21CB88(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21E580();
      goto LABEL_7;
    }
    sub_23E213E1C(v13, a3 & 1);
    v18 = sub_23E2112EC(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_23E2234D4((uint64_t)a1, v16[7] + (v10 << 8));
      return sub_23E21CB88(v10, a2, a1, v16);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21AFA0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E211288(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for StaticMatterDevice();
        return sub_23E1EA8B4(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      }
      return sub_23E21CBEC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21E758();
      goto LABEL_7;
    }
    sub_23E21413C(v13, a3 & 1);
    v20 = sub_23E211288(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CBEC(v10, a2, a1, v16);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21B0C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23E211350(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23E21E984();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23E21446C(v15, a4 & 1);
  v21 = sub_23E211350(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21B224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_23E211350(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_23E21EB38();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23E214780(v20, a7 & 1);
  v26 = sub_23E211350(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

_OWORD *sub_23E21B3CC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E211440(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_23E1EA76C(a1, v17);
      }
      return sub_23E21CC78(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21ED48(&qword_256D3F1A0);
      goto LABEL_7;
    }
    sub_23E214AE0(v13, a3 & 1);
    v19 = sub_23E211440(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CC78(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21B4F0(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_23E21AAC8(a1, a2, a3, &qword_256D3F328);
}

_OWORD *sub_23E21B4FC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23E211350(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_23E1EA76C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23E21F274();
      goto LABEL_7;
    }
    sub_23E2154C4(v15, a4 & 1);
    v21 = sub_23E211350(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23E21CD2C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21B62C(uint64_t a1, __int16 a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v8;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;

  v8 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_23E2112B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v8;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = a4(0);
        return sub_23E1EA8B4(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a4);
      }
      return sub_23E21CD94(v14, a2, a1, v20, a4);
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23E21F458(a4, a5);
      goto LABEL_7;
    }
    sub_23E2157C0(v17, a3 & 1, a4, a5);
    v24 = sub_23E2112B8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v8;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CD94(v14, a2, a1, v20, a4);
    }
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21B764(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F260);
}

void sub_23E21B770(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_23E21F67C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_23E215AEC(v13, a3 & 1);
  v18 = sub_23E1EADC4(a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23E5383C0();
  __break(1u);
}

_OWORD *sub_23E21B8B4(_OWORD *a1, int a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23E2113B4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
        return sub_23E1EA76C(a1, v17);
      }
      return sub_23E21CE28(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23E21F828();
      goto LABEL_7;
    }
    sub_23E215E08(v13, a3 & 1);
    v19 = sub_23E2113B4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23E21CE28(v10, a2, a1, v16);
    }
  }
  type metadata accessor for MTRAttributeIDType(0);
  result = (_OWORD *)sub_23E5383C0();
  __break(1u);
  return result;
}

void sub_23E21B9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = (_QWORD **)v6;
  v33 = a3;
  v34 = a4;
  v32 = a2;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)*v6;
  v17 = sub_23E1E3148(a5);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    v23 = *v7;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (uint64_t *)(v23[7] + 32 * v17);
      v25 = (void *)v24[2];
      v26 = (void *)v24[3];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E223048(v25);
      sub_23E223048(v26);
      v27 = v32;
      *v24 = a1;
      v24[1] = v27;
      v28 = v34;
      v24[2] = v33;
      v24[3] = v28;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_23E21F9E8();
    goto LABEL_7;
  }
  sub_23E2160DC(v20, a6 & 1);
  v29 = sub_23E1E3148(a5);
  if ((v21 & 1) != (v30 & 1))
  {
LABEL_14:
    sub_23E5383C0();
    __break(1u);
    return;
  }
  v17 = v29;
  v23 = *v7;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  sub_23E21CE8C(v17, (uint64_t)v14, a1, v32, v33, v34, v23);
}

uint64_t sub_23E21BB68(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F1B8);
}

uint64_t sub_23E21BB74(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F1C8);
}

uint64_t sub_23E21BB80(_QWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD v61[8];
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v4 = v3;
  v7 = a1[1];
  *(_QWORD *)&v46 = *a1;
  *((_QWORD *)&v46 + 1) = v7;
  v8 = a1[3];
  v47 = a1[2];
  v48 = v8;
  v9 = a1[5];
  v49 = a1[4];
  v50 = v9;
  v10 = a1[7];
  v51 = a1[6];
  v52 = v10;
  v11 = a1[9];
  v53 = a1[8];
  v54 = v11;
  v12 = a1[11];
  v55 = a1[10];
  v56 = v12;
  v13 = a1[13];
  v57 = a1[12];
  v58 = v13;
  v14 = a1[15];
  v59 = a1[14];
  v60 = v14;
  v15 = sub_23E536F80();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v3;
  v21 = sub_23E1E3148(a2);
  v22 = *(_QWORD *)(v19 + 16);
  v23 = (v20 & 1) == 0;
  v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
    goto LABEL_14;
  }
  v25 = v20;
  v26 = *(_QWORD *)(v19 + 24);
  if (v26 >= v24 && (a3 & 1) != 0)
  {
LABEL_7:
    if ((v25 & 1) != 0)
    {
LABEL_8:
      v27 = *(_QWORD *)(*v4 + 56) + (v21 << 7);
      v28 = *(_OWORD *)(v27 + 48);
      v30 = *(_OWORD *)v27;
      v29 = *(_OWORD *)(v27 + 16);
      v61[2] = *(_OWORD *)(v27 + 32);
      v61[3] = v28;
      v61[0] = v30;
      v61[1] = v29;
      v31 = *(_OWORD *)(v27 + 112);
      v33 = *(_OWORD *)(v27 + 64);
      v32 = *(_OWORD *)(v27 + 80);
      v61[6] = *(_OWORD *)(v27 + 96);
      v61[7] = v31;
      v61[4] = v33;
      v61[5] = v32;
      result = sub_23E223150((uint64_t)v61);
      v35 = *((_QWORD *)&v46 + 1);
      *(_QWORD *)v27 = v46;
      *(_QWORD *)(v27 + 8) = v35;
      v36 = v48;
      *(_QWORD *)(v27 + 16) = v47;
      *(_QWORD *)(v27 + 24) = v36;
      v37 = v50;
      *(_QWORD *)(v27 + 32) = v49;
      *(_QWORD *)(v27 + 40) = v37;
      v38 = v52;
      *(_QWORD *)(v27 + 48) = v51;
      *(_QWORD *)(v27 + 56) = v38;
      v39 = v54;
      *(_QWORD *)(v27 + 64) = v53;
      *(_QWORD *)(v27 + 72) = v39;
      v40 = v56;
      *(_QWORD *)(v27 + 80) = v55;
      *(_QWORD *)(v27 + 88) = v40;
      v41 = v58;
      *(_QWORD *)(v27 + 96) = v57;
      *(_QWORD *)(v27 + 104) = v41;
      v42 = v60;
      *(_QWORD *)(v27 + 112) = v59;
      *(_QWORD *)(v27 + 120) = v42;
      return result;
    }
    goto LABEL_11;
  }
  if (v26 >= v24 && (a3 & 1) == 0)
  {
    sub_23E21FF0C();
    goto LABEL_7;
  }
  sub_23E2164E4(v24, a3 & 1);
  v43 = sub_23E1E3148(a2);
  if ((v25 & 1) != (v44 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v21 = v43;
  if ((v25 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v45 = (_QWORD *)*v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  v62 = v46;
  v63 = v47;
  v64 = v48;
  v65 = v49;
  v66 = v50;
  v67 = v51;
  v68 = v52;
  v69 = v53;
  v70 = v54;
  v71 = v55;
  v72 = v56;
  v73 = v57;
  v74 = v58;
  v75 = v59;
  v76 = v60;
  return sub_23E21CF40(v21, (uint64_t)v18, &v62, v45);
}

uint64_t sub_23E21BE1C(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23E1E3148(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23E2205A4();
    goto LABEL_7;
  }
  sub_23E217490(result, a3 & 1);
  result = sub_23E1E3148(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23E21D12C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_23E21BF6C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F390);
}

uint64_t sub_23E21BF78(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23E1E3148(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v20[7] + v14) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23E220A00();
    goto LABEL_7;
  }
  sub_23E217BCC(result, a3 & 1);
  result = sub_23E1E3148(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23E21D12C(v14, (uint64_t)v11, a1 & 1, v20);
}

uint64_t sub_23E21C0CC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, &qword_256D3F2E0);
}

uint64_t sub_23E21C0E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23E211350(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23E221068(&qword_256D3F2B8);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23E2188F8(v15, a4 & 1, &qword_256D3F2B8);
  v21 = sub_23E211350(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E21C24C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E204654(a1, a2, a3, &qword_256D3F358);
}

uint64_t sub_23E21C258(uint64_t a1, uint64_t a2, char a3)
{
  return sub_23E21C26C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile, &qword_256D3F200);
}

uint64_t sub_23E21C26C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;

  v28 = a5;
  v29 = a1;
  v7 = (_QWORD **)v5;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_23E1E3148(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a3 & 1) != 0)
  {
LABEL_7:
    v22 = *v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      v24 = a4(0);
      return sub_23E1EA8B4(v29, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a4);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a3 & 1) == 0)
  {
    sub_23E21D6B4(a4, v28);
    goto LABEL_7;
  }
  sub_23E219950(v19, a3 & 1, a4, v28);
  v26 = sub_23E1E3148(a2);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v7;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  return sub_23E1E3090(v16, (uint64_t)v13, v29, v22, a4);
}

uint64_t sub_23E21C3F4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23E211680(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      v21 = type metadata accessor for IconTextValueStringDataHolder();
      return sub_23E1EA8B4(a1, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_23E220C38();
    goto LABEL_7;
  }
  sub_23E218284(v16, a3 & 1);
  v23 = sub_23E211680(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_23E5383C0();
    __break(1u);
    return result;
  }
  v13 = v23;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23E1E2F50(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return sub_23E21D260(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_23E21C564(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v13 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1E7C20(a1 + *(int *)(v13 + 20), (uint64_t)v12, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_23E5384A4();
  v14 = sub_23E537D60();
  *(_QWORD *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  result = sub_23E1E2FDC(a1, a3[6] + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v14, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  *(_QWORD *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_23E21C764(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E7C20(a1, (uint64_t)v12, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v13 = _s7MergeIdVMa();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E5384A4();
  v14 = sub_23E537D60();
  *(_QWORD *)((char *)a3 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  result = sub_23E1E2FDC(a1, a3[6] + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v14, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
  *(_QWORD *)(a3[7] + 8 * v14) = a2;
  ++a3[2];
  return result;
}

void sub_23E21C97C(char a1)
{
  sub_23E53845C();
  __asm { BR              X10 }
}

unint64_t sub_23E21C9D8()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E5384A4();
  result = sub_23E537D60();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

unint64_t sub_23E21CAC4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = (_QWORD *)(a6[7] + 24 * result);
  *v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_23E21CB14(unint64_t a1, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  result = sub_23E1E4E3C(a3, a4[7] + 40 * a1, &qword_256D3F298);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_23E21CB88(unint64_t a1, char a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_23E22328C(a3, a4[7] + (a1 << 8));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_23E21CBEC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for StaticMatterDevice();
  result = sub_23E1E2FDC(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_23E21CC78(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_23E1EA76C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_23E21CCDC(unint64_t result, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a6[6] + 2 * result) = a2;
  v6 = (_QWORD *)(a6[7] + 24 * result);
  *v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

_OWORD *sub_23E21CD2C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23E1EA76C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23E21CD94(unint64_t a1, __int16 a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_WORD *)(a4[6] + 2 * a1) = a2;
  v9 = a4[7];
  v10 = a5(0);
  result = sub_23E1E2FDC(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a5);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

_OWORD *sub_23E21CE28(unint64_t a1, int a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  result = sub_23E1EA76C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_23E21CE8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a7[6];
  v15 = sub_23E536F80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = (_QWORD *)(a7[7] + 32 * a1);
  *v17 = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  v18 = a7[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a7[2] = v20;
  return result;
}

uint64_t sub_23E21CF40(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v22 = *a3;
  v20 = a3[2];
  v21 = a3[1];
  v18 = a3[4];
  v19 = a3[3];
  v16 = a3[6];
  v17 = a3[5];
  v7 = *((_QWORD *)a3 + 14);
  v8 = *((_QWORD *)a3 + 15);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = sub_23E536F80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  v12 = a4[7] + (a1 << 7);
  *(_OWORD *)v12 = v22;
  *(_OWORD *)(v12 + 16) = v21;
  *(_OWORD *)(v12 + 32) = v20;
  *(_OWORD *)(v12 + 48) = v19;
  *(_OWORD *)(v12 + 64) = v18;
  *(_OWORD *)(v12 + 80) = v17;
  *(_OWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 112) = v7;
  *(_QWORD *)(v12 + 120) = v8;
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

_OWORD *sub_23E21D03C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_23E1EA76C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_23E21D0A0(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for StaticCharacteristic();
  result = sub_23E1E2FDC(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_23E21D12C(unint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23E536F80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_BYTE *)(a4[7] + a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23E21D1C8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E2047C4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))_s7MergeIdVMa);
}

unint64_t sub_23E21D1D4(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_23E21D218(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_23E21D260(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  sub_23E1E2FDC(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  v10 = a4[7];
  v11 = type metadata accessor for IconTextValueStringDataHolder();
  result = sub_23E1E2FDC(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

void *sub_23E21D318()
{
  return sub_23E2217B0(&qword_256D3F3E0);
}

void *sub_23E21D324()
{
  return sub_23E21ED48(&qword_256D3F458);
}

void type metadata accessor for MTRCommandIDType(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0B0);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GaugeDataHolder(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GaugeDataHolder(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0B8);
}

void type metadata accessor for MTRBasicInformationColor(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0C0);
}

void type metadata accessor for MTRBasicInformationProductFinish(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0C8);
}

void type metadata accessor for MTRPowerSourceBatChargeState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0D0);
}

void type metadata accessor for MTRPowerSourceBatChargeLevel(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0D8);
}

void type metadata accessor for MTRPowerSourceFeature(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0E0);
}

void type metadata accessor for MTRPowerSourceStatus(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0E8);
}

void type metadata accessor for MTTimerState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0F0);
}

void type metadata accessor for MTAlarmRepeatSchedule(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F0F8);
}

void type metadata accessor for HMCameraStreamState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F100);
}

void type metadata accessor for MTRDeviceState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F108);
}

void type metadata accessor for MTRAttributeIDType(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F110);
}

void type metadata accessor for HMMediaSystemRoleType(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F118);
}

uint64_t sub_23E21D4A8()
{
  return sub_23E1EE1C4(&qword_256D3F120, (uint64_t (*)(uint64_t))type metadata accessor for MTRAttributeIDType, (uint64_t)&unk_23E5398F0);
}

uint64_t sub_23E21D4D4()
{
  return sub_23E1EE1C4(&qword_256D3F128, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&unk_23E539990);
}

uint64_t sub_23E21D500()
{
  return sub_23E1EE1C4(&qword_256D3F130, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceStatus, (uint64_t)&unk_23E539AD8);
}

uint64_t sub_23E21D52C()
{
  return sub_23E1EE1C4(&qword_256D3F138, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539F20);
}

uint64_t sub_23E21D558()
{
  return sub_23E1EE1C4(&qword_256D3F140, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539B38);
}

uint64_t sub_23E21D584()
{
  return sub_23E1EE1C4(&qword_256D3F148, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539B68);
}

uint64_t sub_23E21D5B0()
{
  return sub_23E1EE1C4(&qword_256D3F150, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539BA0);
}

uint64_t sub_23E21D5DC()
{
  return sub_23E1EE1C4(&qword_256D3F158, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeLevel, (uint64_t)&unk_23E539CE0);
}

uint64_t sub_23E21D608()
{
  return sub_23E1EE1C4(&qword_256D3F160, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeState, (uint64_t)&unk_23E539D80);
}

uint64_t sub_23E21D634()
{
  return sub_23E1EE1C4(&qword_256D3F168, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationProductFinish, (uint64_t)&unk_23E539E20);
}

uint64_t sub_23E21D660()
{
  return sub_23E1EE1C4(&qword_256D3F170, (uint64_t (*)(uint64_t))type metadata accessor for MTRBasicInformationColor, (uint64_t)&unk_23E539EC0);
}

void *sub_23E21D68C()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_2543326A8);
}

void *sub_23E21D6A0()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, &qword_256D3F248);
}

void *sub_23E21D6B4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_23E536F80();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_23E538054();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_23E1E2FDC(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_23E1E2F50(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23E21D978()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup, &qword_256D3F238);
}

void *sub_23E21D98C()
{
  return sub_23E21D6B4(type metadata accessor for StaticRoom, &qword_254332C50);
}

void *sub_23E21D9A0()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_256D3F240);
}

void *sub_23E21D9B4()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_2543333D0);
}

void *sub_23E21D9C8()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticUser, &qword_256D3F3B0);
}

void *sub_23E21D9DC()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticZone, &qword_256D3F3B8);
}

void *sub_23E21D9F0()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticResident, &qword_2543333C0);
}

void *sub_23E21DA04()
{
  return sub_23E21D6B4(type metadata accessor for StateSnapshot, &qword_254332C58);
}

void *sub_23E21DA18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C68);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21DC3C()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticHome, &qword_256D3F380);
}

id sub_23E21DC50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  _BYTE v23[32];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F210);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v22 = v1;
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_23E1E7C20(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v23, &qword_254332260);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_23E1E4E3C((uint64_t)v23, *(_QWORD *)(v4 + 56) + v18, &qword_254332260);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v22;
    goto LABEL_28;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23E21DE38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F430);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21DFE8()
{
  return sub_23E221068(&qword_256D3F1B0);
}

void *sub_23E21DFF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1A8);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21E19C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F280);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_OWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21E378()
{
  return sub_23E221C44(&qword_256D3F2A0);
}

void *sub_23E21E384()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  _BYTE v23[40];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F290);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v22 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 40 * v15;
    sub_23E1E7C20(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v23, &qword_256D3F298);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_23E1E4E3C((uint64_t)v23, *(_QWORD *)(v4 + 56) + v18, &qword_256D3F298);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v22;
    goto LABEL_28;
  }
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E21E56C()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3F270);
}

void *sub_23E21E580()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  __int128 v20[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F410);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_23E22328C((__int128 *)(*(_QWORD *)(v2 + 56) + (v15 << 8)), (uint64_t)v20);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    sub_23E22328C(v20, *(_QWORD *)(v4 + 56) + (v15 << 8));
    result = (void *)sub_23E223454((uint64_t)v20);
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21E744()
{
  return sub_23E21F458((uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3F448);
}

void *sub_23E21E758()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for StaticMatterDevice();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F278);
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_23E1E2F50(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E21E984()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E8);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21EB38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333E0);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 8);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(_QWORD *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21ED28()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, &qword_256D3F3D0);
}

void *sub_23E21ED3C()
{
  return sub_23E21ED48(&qword_256D3F1A0);
}

void *sub_23E21ED48(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _OWORD v21[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E538054();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    sub_23E1EA57C(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = v17;
    result = sub_23E1EA76C(v21, (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16));
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21EEFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F198);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 2 * v15;
    v17 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_OWORD *)v19;
    *(_WORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v22 = v21;
    *(_QWORD *)(v22 + 16) = v20;
    v23 = (id)v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21F0D8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E538054();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 2 * v16;
    v18 = *(_WORD *)(*(_QWORD *)(v3 + 48) + 2 * v16);
    v19 = 8 * v16;
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v19);
    *(_WORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21F274()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F320);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23E1EA57C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23E1EA76C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E21F458(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int16 v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_23E538054();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v29 = v5;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = 2 * v21;
    v23 = *(_WORD *)(*(_QWORD *)(v9 + 48) + 2 * v21);
    v24 = *(_QWORD *)(v31 + 72) * v21;
    sub_23E1E2F50(*(_QWORD *)(v9 + 56) + v24, (uint64_t)v8, a1);
    *(_WORD *)(*(_QWORD *)(v11 + 48) + v22) = v23;
    result = (void *)sub_23E1E2FDC((uint64_t)v8, *(_QWORD *)(v11 + 56) + v24, a1);
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23E21F67C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F258);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21F81C()
{
  return sub_23E2217B0(&qword_256D3F3F0);
}

void *sub_23E21F828()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F188);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 32 * v15;
    sub_23E1EA57C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = sub_23E1EA76C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E21F9E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;

  v39 = sub_23E536F80();
  v1 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1D8);
  v35 = v0;
  v3 = *v0;
  v4 = sub_23E538054();
  v5 = *(_QWORD *)(v3 + 16);
  v41 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v33 = v41;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    v6 = v41;
  }
  v36 = v3 + 64;
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v40 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v38;
  v14 = v39;
  v16 = v41;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v40;
      goto LABEL_12;
    }
    v29 = v10 + 1;
    v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v37)
      goto LABEL_26;
    v30 = *(_QWORD *)(v36 + 8 * v29);
    ++v10;
    if (!v30)
    {
      v10 = v29 + 1;
      if (v29 + 1 >= v37)
        goto LABEL_26;
      v30 = *(_QWORD *)(v36 + 8 * v10);
      if (!v30)
        break;
    }
LABEL_25:
    v13 = (v30 - 1) & v30;
    v18 = __clz(__rbit64(v30)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 32 * v18;
    v23 = (__int128 *)(v21 + 32 * v18);
    v24 = (void *)*((_QWORD *)v23 + 2);
    v25 = (void *)*((_QWORD *)v23 + 3);
    v26 = *(_QWORD *)(v16 + 48) + v20;
    v27 = *(void (**)(unint64_t, char *, uint64_t))(v1 + 32);
    v42 = *v23;
    v27(v26, v15, v14);
    v28 = *(_QWORD *)(v16 + 56) + v22;
    *(_OWORD *)v28 = v42;
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E223038(v24);
    result = sub_23E223038(v25);
  }
  v31 = v29 + 2;
  if (v31 >= v37)
  {
LABEL_26:
    result = (void *)swift_release();
    v32 = v35;
    v33 = v41;
    goto LABEL_28;
  }
  v30 = *(_QWORD *)(v36 + 8 * v31);
  if (v30)
  {
    v10 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v10 >= v37)
      goto LABEL_26;
    v30 = *(_QWORD *)(v36 + 8 * v10);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E21FC84()
{
  return sub_23E2217B0(&qword_256D3F1B8);
}

void *sub_23E21FC90()
{
  return sub_23E21FCC4(&qword_256D3F1C0, (uint64_t (*)(_BYTE *, uint64_t))sub_23E1E6C84);
}

void *sub_23E21FCA4()
{
  return sub_23E2217B0(&qword_256D3F1C8);
}

void *sub_23E21FCB0()
{
  return sub_23E21FCC4(&qword_256D3F1D0, (uint64_t (*)(_BYTE *, uint64_t))sub_23E1E6C84);
}

void *sub_23E21FCC4(uint64_t *a1, uint64_t (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t);
  _BYTE v30[40];

  v29 = a2;
  v4 = v2;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = *v2;
  v10 = sub_23E538054();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v4 = v11;
    return result;
  }
  v27 = v4;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v28 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v19)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v6 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v22, v5);
    v23 = 40 * v21;
    sub_23E1FF9C8(*(_QWORD *)(v9 + 56) + v23, (uint64_t)v30);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v22, v8, v5);
    result = (void *)v29(v30, *(_QWORD *)(v11 + 56) + v23);
  }
  v26 = v24 + 2;
  if (v26 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v4 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E21FF0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2C0);
  v6 = *v0;
  v7 = sub_23E538054();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v38 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v39 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v35 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v35 >= v16)
      goto LABEL_26;
    v36 = *(_QWORD *)(v39 + 8 * v35);
    ++v12;
    if (!v36)
    {
      v12 = v35 + 1;
      if (v35 + 1 >= v16)
        goto LABEL_26;
      v36 = *(_QWORD *)(v39 + 8 * v12);
      if (!v36)
        break;
    }
LABEL_25:
    v15 = (v36 - 1) & v36;
    v18 = __clz(__rbit64(v36)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = v18 << 7;
    v21 = (__int128 *)(*(_QWORD *)(v6 + 56) + v20);
    v23 = *v21;
    v22 = v21[1];
    v24 = v21[2];
    v43 = v21[3];
    v25 = v21[4];
    v26 = v21[5];
    v27 = v21[7];
    v46 = v21[6];
    v47 = v27;
    v44 = v25;
    v45 = v26;
    v41 = v22;
    v42 = v24;
    v40 = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    v28 = (_OWORD *)(*(_QWORD *)(v8 + 56) + v20);
    v29 = v44;
    v30 = v45;
    v31 = v47;
    v28[6] = v46;
    v28[7] = v31;
    v28[4] = v29;
    v28[5] = v30;
    v32 = v40;
    v33 = v41;
    v34 = v43;
    v28[2] = v42;
    v28[3] = v34;
    *v28 = v32;
    v28[1] = v33;
    result = (void *)sub_23E223058((uint64_t)&v40);
  }
  v37 = v35 + 2;
  if (v37 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v38;
    goto LABEL_28;
  }
  v36 = *(_QWORD *)(v39 + 8 * v37);
  if (v36)
  {
    v12 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v36 = *(_QWORD *)(v39 + 8 * v12);
    ++v37;
    if (v36)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23E220184()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F408);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_23E1EA57C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_23E1EA76C(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E220348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for RoomType(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3D8);
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_23E1E2F50(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for RoomType);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for RoomType);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E22058C()
{
  return sub_23E2217B0(&qword_254332C60);
}

id sub_23E220598()
{
  return sub_23E221588(&qword_254332C70);
}

void *sub_23E2205A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D8);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23E2207C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F388);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E2209F4()
{
  return sub_23E2217B0(&qword_256D3F390);
}

void *sub_23E220A00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F208);
  v23 = v0;
  v5 = *v0;
  v6 = sub_23E538054();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23E220C20()
{
  return sub_23E221588(&qword_256D3F360);
}

void *sub_23E220C2C()
{
  return sub_23E221C44(&qword_256D3F350);
}

void *sub_23E220C38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for IconTextValueStringDataHolder();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v28 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F308);
  v8 = *v0;
  v9 = sub_23E538054();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v10;
    return result;
  }
  v25 = v1;
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v26 = v8 + 64;
  v27 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_23;
      v22 = *(_QWORD *)(v26 + 8 * v13);
      if (!v22)
        break;
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v28 + 72) * v18;
    sub_23E1E2F50(*(_QWORD *)(v8 + 48) + v19, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v20 = *(_QWORD *)(v29 + 72) * v18;
    sub_23E1E2F50(*(_QWORD *)(v8 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FDC((uint64_t)v7, *(_QWORD *)(v10 + 48) + v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    result = (void *)sub_23E1E2FDC((uint64_t)v4, *(_QWORD *)(v10 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  }
  v23 = v21 + 2;
  if (v23 >= v27)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v27)
      goto LABEL_23;
    v22 = *(_QWORD *)(v26 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23E220ED0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F300);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E22105C()
{
  return sub_23E221DE8(&qword_256D3F2F0);
}

void *sub_23E221068(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E538054();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E221214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2B0);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E2213C0()
{
  return sub_23E21FCC4(&qword_256D3F250, (uint64_t (*)(_BYTE *, uint64_t))sub_23E1E6C84);
}

void *sub_23E2213D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F230);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23E22157C()
{
  return sub_23E221588(&qword_256D3F3C0);
}

id sub_23E221588(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_23E538054();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v26 = v9;
    return result;
  }
  result = (id)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v27 = v7 + 64;
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(void **)(*(_QWORD *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E2217B0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_23E538054();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E2219E0()
{
  return sub_23E21D6B4((uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile, &qword_256D3F2C8);
}

void *sub_23E2219F4()
{
  return sub_23E221A08((uint64_t (*)(_QWORD))_s7MergeIdVMa, &qword_256D3F368);
}

void *sub_23E221A08(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_23E538054();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v29 = v5;
  result = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v31 + 72) * v21;
    sub_23E1E2F50(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_23E1E2FDC((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E221C38()
{
  return sub_23E221C44(&qword_256D3F1F8);
}

void *sub_23E221C44(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E538054();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E221DDC()
{
  return sub_23E221DE8(&qword_256D3F2F8);
}

void *sub_23E221DE8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23E538054();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v13 = (v20 - 1) & v20;
    v16 = v22 + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E221F6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1E8);
  v2 = *v0;
  v3 = sub_23E538054();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_23E222FFC(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_23E1EA57C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_23E1EA76C(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E222150(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_23E222188(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F188);
    v3 = (_QWORD *)sub_23E53806C();
    for (i = a1 + 32; ; i += 40)
    {
      sub_23E1E7C20(i, (uint64_t)&v11, &qword_256D3F190);
      v5 = v11;
      result = sub_23E2113B4(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      result = (unint64_t)sub_23E1EA76C(&v12, (_OWORD *)(v3[7] + 32 * result));
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23E222288(uint64_t a1)
{
  return sub_23E222978(a1, &qword_256D3F3A8);
}

unint64_t sub_23E222294(uint64_t a1)
{
  return sub_23E222978(a1, &qword_256D3F288);
}

unint64_t sub_23E2222A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2A0);
  v3 = (_QWORD *)sub_23E53806C();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_23E2112EC(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_23E2112EC(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E2223A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F290);
    v3 = (_QWORD *)sub_23E53806C();
    for (i = a1 + 32; ; i += 48)
    {
      sub_23E1E7C20(i, (uint64_t)&v11, &qword_256D3F3A0);
      v5 = v11;
      result = sub_23E21140C(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      result = sub_23E1E4E3C((uint64_t)&v12, v3[7] + 40 * result, &qword_256D3F298);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23E2224B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  __int128 v7;
  char v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F280);
  v3 = (_QWORD *)sub_23E53806C();
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v18 = *(_OWORD *)(a1 + 48);
  result = sub_23E211288(v4);
  v7 = v18;
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_OWORD *)(a1 + 80);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = v3[7] + 24 * result;
    *(_QWORD *)v10 = v5;
    *(_OWORD *)(v10 + 8) = v7;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 2;
    v4 = *((_QWORD *)v9 - 2);
    v15 = *((_QWORD *)v9 - 1);
    v17 = *v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E211288(v4);
    v9 = v14;
    v5 = v15;
    v7 = v17;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E222614(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F278);
    v7 = (_QWORD *)sub_23E53806C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23E1E7C20(v9, (uint64_t)v5, &qword_254333D80);
      v11 = *v5;
      result = sub_23E211288(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for StaticMatterDevice();
      result = sub_23E1E2FDC(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23E222780(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  unint64_t result;
  __int128 v6;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _OWORD *v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F230);
  v3 = (_QWORD *)sub_23E53806C();
  v4 = *(_QWORD *)(a1 + 32);
  v14 = *(_OWORD *)(a1 + 40);
  result = sub_23E211288(v4);
  v6 = v14;
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = (_OWORD *)((char *)v8 + 24);
    v4 = *((_QWORD *)v8 - 1);
    v15 = *v8;
    swift_unknownObjectRetain();
    result = sub_23E211288(v4);
    v8 = v12;
    v6 = v15;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E22288C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  int v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F440);
    v3 = (_QWORD *)sub_23E53806C();
    for (i = (_BYTE *)(a1 + 48); ; i += 24)
    {
      v5 = *((_DWORD *)i - 4);
      v6 = *((_QWORD *)i - 1);
      v7 = *i;
      result = sub_23E2113B4(v5);
      if ((v9 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      v10 = v3[7] + 16 * result;
      *(_QWORD *)v10 = v6;
      *(_BYTE *)(v10 + 8) = v7;
      v11 = v3[2];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_10;
      v3[2] = v13;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23E22296C(uint64_t a1)
{
  return sub_23E222978(a1, &qword_256D3F328);
}

unint64_t sub_23E222978(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  unsigned __int16 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_23E53806C();
  v5 = *(_WORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  result = sub_23E2112B8(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v9 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_WORD *)(v4[6] + 2 * result) = v5;
    *(_QWORD *)(v4[7] + 8 * result) = v6;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    if (!--v2)
      goto LABEL_8;
    v13 = v9 + 2;
    v5 = *((_WORD *)v9 - 4);
    v14 = *v9;
    swift_bridgeObjectRetain();
    result = sub_23E2112B8(v5);
    v9 = v13;
    v6 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E222A74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F428);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned __int16 *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F420);
    v7 = (_QWORD *)sub_23E53806C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_23E1E7C20(v9, (uint64_t)v5, &qword_256D3F428);
      v11 = *v5;
      result = sub_23E2112B8(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_WORD *)(v7[6] + 2 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ActionEndpoint();
      result = sub_23E1E2FDC(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_23E222BE0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  unint64_t v5;
  char v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  _QWORD __dst[33];

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F410);
  v3 = (_QWORD *)sub_23E53806C();
  memcpy(__dst, a1 + 4, 0x104uLL);
  v4 = __dst[0];
  v5 = sub_23E2112EC(__dst[0]);
  if ((v6 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v7 = (char *)(a1 + 37);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v5;
    *(_BYTE *)(v3[6] + v5) = v4;
    result = sub_23E22328C((__int128 *)&__dst[1], v3[7] + (v5 << 8));
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    sub_23E2232C8((uint64_t)__dst);
    if (!--v1)
      return (uint64_t)v3;
    memcpy(__dst, v7, 0x104uLL);
    v4 = __dst[0];
    v5 = sub_23E2112EC(__dst[0]);
    v7 += 264;
    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E222D08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1E0);
  v3 = (_QWORD *)sub_23E53806C();
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_23E211770(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_QWORD *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((_BYTE *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_23E211770(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E222E14(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2F8);
    v3 = (_QWORD *)sub_23E53806C();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_23E21170C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_23E222EE8(uint64_t a1)
{
  return sub_23E222F00(a1, &qword_256D3F178);
}

unint64_t sub_23E222EF4(uint64_t a1)
{
  return sub_23E222F00(a1, &qword_256D3F180);
}

unint64_t sub_23E222F00(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_23E53806C();
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  result = sub_23E211770(v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v9 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v4[6] + result) = v5;
    *(_QWORD *)(v4[7] + 8 * result) = v6;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    if (!--v2)
      goto LABEL_8;
    v13 = v9 + 2;
    v5 = *((_BYTE *)v9 - 8);
    v14 = *v9;
    swift_bridgeObjectRetain();
    result = sub_23E211770(v5);
    v9 = v13;
    v6 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E222FFC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

id sub_23E223038(id result)
{
  if ((unint64_t)result >= 6)
    return result;
  return result;
}

void sub_23E223048(id a1)
{
  if ((unint64_t)a1 >= 6)

}

uint64_t sub_23E223058(uint64_t a1)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a1 + 112);
  v4 = *(void **)(a1 + 120);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_23E223038(v3);
  sub_23E223038(v4);
  return a1;
}

uint64_t sub_23E223150(uint64_t a1)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a1 + 112);
  v4 = *(void **)(a1 + 120);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23E223048(v3);
  sub_23E223048(v4);
  return a1;
}

uint64_t sub_23E223248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23E22328C(__int128 *a1, uint64_t a2)
{
  __swift_memcpy252_8(a2, a1);
  return a2;
}

uint64_t sub_23E2232C8(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 216);
  sub_23E22335C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    *(_DWORD *)(a1 + 256));
  return a1;
}

uint64_t sub_23E22335C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  uint64_t result;

  if (!(a32 >> 29))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23E223454(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 208);
  sub_23E22335C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

uint64_t sub_23E2234D4(uint64_t a1, uint64_t a2)
{
  assignWithTake for StaticCluster(a2, a1);
  return a2;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F468);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F470);
}

void type metadata accessor for HMError(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F478);
}

void type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F480);
}

void type metadata accessor for HMCharacteristicValueTargetLockMechanismState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F488);
}

void type metadata accessor for HMCharacteristicValueLockMechanismState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F490);
}

void type metadata accessor for HMCharacteristicValueDoorState(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F498);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F4A0);
}

uint64_t sub_23E2235B0()
{
  return sub_23E1EE1C4(&qword_256D3F4A8, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueDoorState, (uint64_t)&unk_23E53A0D0);
}

uint64_t sub_23E2235DC()
{
  return sub_23E1EE1C4(&qword_256D3F4B0, (uint64_t (*)(uint64_t))type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState, (uint64_t)&unk_23E53A24C);
}

uint64_t sub_23E223608()
{
  return sub_23E1EE1C4(&qword_256D3F4B8, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A2B4);
}

uint64_t sub_23E223634()
{
  return sub_23E1EE1C4(&qword_256D3F4C0, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A2E0);
}

uint64_t sub_23E223660()
{
  return sub_23E1EE1C4(&qword_256D3F4C8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23E53A418);
}

uint64_t sub_23E22368C()
{
  return sub_23E1EE1C4(&qword_256D3F4D0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23E53A3EC);
}

uint64_t sub_23E2236B8()
{
  return sub_23E1EE1C4(&qword_256D3F4D8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_23E53A488);
}

uint64_t sub_23E2236E4()
{
  return sub_23E1EE1C4(&qword_256D3F4E0, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A39C);
}

uint64_t sub_23E223710()
{
  return sub_23E1EE1C4(&qword_256D3F4E8, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A368);
}

uint64_t sub_23E22373C()
{
  return sub_23E1EE1C4(&qword_256D3F4F0, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A324);
}

uint64_t sub_23E223768()
{
  return sub_23E1EE1C4(&qword_256D3F4F8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E53A5EC);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_23E2237A8(a1, &qword_256D3F530);
}

void sub_23E2237A8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23E2237EC()
{
  return sub_23E1EE1C4(&qword_256D3F500, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E53A5B0);
}

unint64_t sub_23E22381C()
{
  unint64_t result;

  result = qword_256D3F508;
  if (!qword_256D3F508)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256D3F508);
  }
  return result;
}

uint64_t sub_23E223860()
{
  return sub_23E1EE1C4(&qword_256D3F510, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23E53A628);
}

uint64_t sub_23E22388C()
{
  return sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
}

uint64_t sub_23E2238EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23E223900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_250EE08D8 + (int)result - 1));
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E2239F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E223A14(uint64_t a1)
{
  destroy for IconTextValueStringDataHolder.AttachedData(a1);
  return a1;
}

uint64_t sub_23E223A50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E223A60()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for IrrigationStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D3F5A8);
}

uint64_t sub_23E223A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v7[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v7[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = (__int128 *)(a2 + v17);
  v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(__int128 *)((char *)v19 + 9);
      *(_OWORD *)v18 = v32;
      if (a1 == a2)
        return a1;
    }
    else
    {
      v28 = *(_QWORD *)v19;
      v29 = *((_QWORD *)v19 + 1);
      v30 = *((_QWORD *)v19 + 2);
      sub_23E2238EC(v28, v29, v30, v20);
      *(_QWORD *)v18 = v28;
      *(_QWORD *)(v18 + 8) = v29;
      *(_QWORD *)(v18 + 16) = v30;
      *(_BYTE *)(v18 + 24) = v20;
      if (a1 == a2)
        return a1;
    }
  }
  else if (v20 == 255)
  {
    sub_23E223A14(v18);
    v31 = *(__int128 *)((char *)v19 + 9);
    *(_OWORD *)v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2)
      return a1;
  }
  else
  {
    v21 = *(_QWORD *)v19;
    v22 = *((_QWORD *)v19 + 1);
    v23 = *((_QWORD *)v19 + 2);
    sub_23E2238EC(v21, v22, v23, v20);
    v24 = *(_QWORD *)v18;
    v25 = *(_QWORD *)(v18 + 8);
    v26 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v22;
    *(_QWORD *)(v18 + 16) = v23;
    v27 = *(_BYTE *)(v18 + 24);
    *(_BYTE *)(v18 + 24) = v20;
    sub_23E2239F8(v24, v25, v26, v27);
    if (a1 == a2)
      return a1;
  }
  v33 = *(int *)(a3 + 20);
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  sub_23E1E2FA0(a1 + v33, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
  v36 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v39 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E223D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = v7[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = v7[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2)
      return a1;
    goto LABEL_7;
  }
  v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_23E223A14(v24);
    goto LABEL_6;
  }
  v28 = *(_QWORD *)(v25 + 16);
  v29 = *(_QWORD *)v24;
  v30 = *(_QWORD *)(v24 + 8);
  v31 = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_QWORD *)(v24 + 16) = v28;
  *(_BYTE *)(v24 + 24) = v27;
  sub_23E2239F8(v29, v30, v31, v26);
  if (a1 == a2)
    return a1;
LABEL_7:
  v32 = *(int *)(a3 + 20);
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  sub_23E1E2FA0(a1 + v32, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
  v35 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v38 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E223F90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E223FA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ValveStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D3F638);
}

uint64_t *sub_23E223FC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    v9 = v8[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = v8[6];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v8[7];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v8[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      v26 = *(_QWORD *)v24;
      v27 = *((_QWORD *)v24 + 1);
      v28 = *((_QWORD *)v24 + 2);
      sub_23E2238EC(v26, v27, v28, v25);
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v27;
      *((_QWORD *)v23 + 2) = v28;
      v23[24] = v25;
    }
    v30 = *(int *)(a3 + 20);
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for TilesFilter();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v36 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v31, v32, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v31, v32, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v31, v32, v35);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_23E2241F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v8 = v7[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = v7[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v7[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    v25 = *(_QWORD *)v23;
    v26 = *(_QWORD *)(v23 + 8);
    v27 = *(_QWORD *)(v23 + 16);
    sub_23E2238EC(v25, v26, v27, v24);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v26;
    *(_QWORD *)(v22 + 16) = v27;
    *(_BYTE *)(v22 + 24) = v24;
  }
  v28 = *(int *)(a3 + 20);
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  v31 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v29, v30, v34);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v29, v30, v33);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E224400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  v8 = v7[8];
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  *v9 = *v10;
  v11 = *(int *)(a3 + 20);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = type metadata accessor for TilesFilter();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D3F548);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F540);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F538);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_23E224590()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for IconTextValueStringDataHolder();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for TilesFilter();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23E224614()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for TilesFilter();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FaucetStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D3F6C8);
}

uint64_t sub_23E2246B4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23E224738(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t *__return_ptr, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)(char *);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v4 = sub_23E536F80();
  v82 = *(_QWORD *)(v4 - 8);
  v83 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v81 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v80 = (uint64_t)&v61 - v7;
  v68 = type metadata accessor for StaticAccessory(0);
  v71 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v69 = (char *)&v61 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v61 - v17;
  v19 = type metadata accessor for StaticService();
  v88 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v78 = (uint64_t)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v61 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v77 = (uint64_t)&v61 - v25;
  v90 = a1;
  v26 = *a2;
  v66 = (void (*)(uint64_t *__return_ptr, uint64_t))a2[1];
  v27 = *(_QWORD *)(v26 + 56);
  v65 = v26 + 56;
  v91 = v26;
  v72 = v26;
  v28 = -1 << *(_BYTE *)(v26 + 32);
  if (-v28 < 64)
    v29 = ~(-1 << -(char)v28);
  else
    v29 = -1;
  v75 = v29 & v27;
  v30 = a2[2];
  v86 = (uint64_t (*)(char *))a2[3];
  v31 = a2[4];
  sub_23E226188((uint64_t)&v91);
  v64 = v28;
  v63 = (unint64_t)(63 - v28) >> 6;
  v62 = v63 - 1;
  v73 = v30;
  swift_retain();
  v87 = v31;
  result = swift_retain();
  v33 = 0;
  v74 = 0;
  v84 = v24;
  v79 = v19;
  v76 = v16;
LABEL_5:
  v34 = 0;
  v85 = v33;
  while (1)
  {
    if (!v33)
      goto LABEL_14;
    v35 = *(_QWORD *)(v33 + 16);
    if (v34 == v35)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v16, 1, 1, v19);
      result = sub_23E1E7C64((uint64_t)v16, &qword_254332DE8);
LABEL_14:
      if (v75)
      {
        v49 = (v75 - 1) & v75;
        v50 = __clz(__rbit64(v75)) | (v74 << 6);
        v52 = (uint64_t)v70;
        v51 = v71;
        v53 = (uint64_t)v69;
LABEL_16:
        sub_23E1E2F50(*(_QWORD *)(v72 + 48) + *(_QWORD *)(v51 + 72) * v50, v53, type metadata accessor for StaticAccessory);
        v54 = 0;
LABEL_30:
        v59 = v68;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v53, v54, 1, v68);
        sub_23E1E4E3C(v53, v52, &qword_254333468);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v52, 1, v59) != 1)
        {
          v75 = v49;
          v60 = v67;
          sub_23E1E2FDC(v52, v67, type metadata accessor for StaticAccessory);
          v66(&v89, v60);
          v33 = v89;
          sub_23E1E2FA0(v60, type metadata accessor for StaticAccessory);
          result = swift_bridgeObjectRelease();
          v24 = v84;
          goto LABEL_5;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56))(v18, 1, 1, v19);
LABEL_47:
        sub_23E1E7C64((uint64_t)v18, &qword_254332DE8);
        sub_23E2261B0();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return v90;
      }
      v55 = v74 + 1;
      v52 = (uint64_t)v70;
      v51 = v71;
      v53 = (uint64_t)v69;
      if (__OFADD__(v74, 1))
        goto LABEL_50;
      if (v55 < v63)
      {
        v56 = *(_QWORD *)(v65 + 8 * v55);
        if (v56)
        {
LABEL_20:
          v49 = (v56 - 1) & v56;
          v50 = __clz(__rbit64(v56)) + (v55 << 6);
          v74 = v55;
          goto LABEL_16;
        }
        v57 = v74 + 2;
        if (v74 + 2 >= v63)
        {
          v49 = 0;
          v54 = 1;
          ++v74;
          goto LABEL_30;
        }
        v56 = *(_QWORD *)(v65 + 8 * v57);
        if (v56)
        {
LABEL_23:
          v55 = v57;
          goto LABEL_20;
        }
        v58 = v74 + 3;
        if (v74 + 3 >= v63)
        {
          v74 += 2;
        }
        else
        {
          v56 = *(_QWORD *)(v65 + 8 * v58);
          if (v56)
            goto LABEL_27;
          if (v74 + 4 >= v63)
          {
            v49 = 0;
            v54 = 1;
            v74 += 3;
            goto LABEL_30;
          }
          v56 = *(_QWORD *)(v65 + 8 * (v74 + 4));
          if (v56)
          {
            v55 = v74 + 4;
            goto LABEL_20;
          }
          v57 = v74 + 5;
          if (v74 + 5 < v63)
          {
            v56 = *(_QWORD *)(v65 + 8 * v57);
            if (v56)
              goto LABEL_23;
            v58 = v74 + 6;
            if (v74 + 6 >= v63)
            {
              v49 = 0;
              v54 = 1;
              v74 += 5;
              goto LABEL_30;
            }
            v56 = *(_QWORD *)(v65 + 8 * v58);
            if (!v56)
            {
              while (1)
              {
                v55 = v58 + 1;
                if (__OFADD__(v58, 1))
                  goto LABEL_51;
                if (v55 >= v63)
                {
                  v49 = 0;
                  v54 = 1;
                  v74 = v62;
                  goto LABEL_30;
                }
                v56 = *(_QWORD *)(v65 + 8 * v55);
                ++v58;
                if (v56)
                  goto LABEL_20;
              }
            }
LABEL_27:
            v55 = v58;
            goto LABEL_20;
          }
          v74 += 4;
        }
      }
      v49 = 0;
      v54 = 1;
      goto LABEL_30;
    }
    if (v34 >= v35)
      break;
    v36 = v88;
    sub_23E1E2F50(v33+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v88 + 72) * v34, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v16, 0, 1, v19);
    sub_23E1E4E3C((uint64_t)v16, (uint64_t)v18, &qword_254332DE8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, v19) == 1)
      goto LABEL_47;
    sub_23E1E2FDC((uint64_t)v18, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v86(v24);
    v38 = (uint64_t)v24;
    if ((v37 & 1) != 0)
    {
      v39 = v77;
      sub_23E1E2FDC((uint64_t)v24, v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v40 = v78;
      sub_23E1E2FDC(v39, v78, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v41 = v81;
      v42 = v82;
      v43 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v40, v83);
      v44 = v18;
      v45 = v80;
      sub_23E1FFF40(v80, v41);
      v46 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v33 = v85;
      v47 = v45;
      v18 = v44;
      v48 = v43;
      v16 = v76;
      v19 = v79;
      v46(v47, v48);
      v38 = v40;
      v24 = v84;
    }
    result = sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    ++v34;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_23E224ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[5];

  v52 = a2;
  v3 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for IrrigationStatusItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v50 = (uint64_t)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54[0] = a1;
  v54[1] = (uint64_t)sub_23E22536C;
  v54[2] = 0;
  v54[3] = (uint64_t)sub_23E2253E0;
  v54[4] = 0;
  v19 = sub_23E224738(MEMORY[0x24BEE4B08], v54);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v19 + 16))
  {
    v45 = v17;
    v46 = v16;
    v47 = v3;
    v20 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v15, 1, 1, v5);
    static String.hfLocalized(_:)();
    v43 = v22;
    v44 = v21;
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_23E539650;
    v24 = *(_QWORD *)(v19 + 16);
    v25 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v23 + 64) = v25;
    *(_QWORD *)(v23 + 32) = v24;
    v26 = sub_23E537574();
    v42 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E1FC2F8((uint64_t)v15, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v5) == 1)
    {
      v28 = v48;
      sub_23E536F74();
      sub_23E1E7C64((uint64_t)v15, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v13, &qword_254333F50);
      v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v15, &qword_254333F50);
      v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v28 = v48;
      v29(v48, v13, v5);
    }
    v31 = v46;
    v29(v9, v28, v5);
    v32 = &v9[v7[5]];
    *(_QWORD *)v32 = 0;
    *((_QWORD *)v32 + 1) = 0xE000000000000000;
    v33 = &v9[v7[6]];
    v34 = v43;
    *(_QWORD *)v33 = v44;
    *((_QWORD *)v33 + 1) = v34;
    v35 = (uint64_t *)&v9[v7[7]];
    v36 = v42;
    *v35 = v26;
    v35[1] = v36;
    v37 = &v9[v7[8]];
    *(_QWORD *)v37 = 0;
    *((_QWORD *)v37 + 1) = 0;
    *((_QWORD *)v37 + 2) = 0;
    v37[24] = -1;
    v38 = v50;
    v39 = sub_23E1E2FDC((uint64_t)v9, v50, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v39);
    *(&v42 - 2) = v19;
    v53 = type metadata accessor for StaticService();
    v40 = (uint64_t)v51;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    sub_23E1E2FDC(v40, v38 + *(int *)(v31 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    v41 = v52;
    sub_23E1E2FDC(v38, v52, type metadata accessor for IrrigationStatusItem);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v31);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v52, 1, 1, v16);
  }
}

uint64_t sub_23E22536C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  _QWORD v7[4];

  v4 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v7[2] = a1;
  swift_bridgeObjectRetain();
  v5 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)v7, v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_23E2253E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  char v13;

  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_BYTE *)(a1 + *(int *)(v3 + 84));
  if (ServiceKind.rawValue.getter(v3) == 0xD000000000000024 && v6 == 0x800000023E55FBA0)
  {
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
    v12 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
    v11 = 65;
    v8 = sub_23E2B4680(&v11);
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return v8 & 1;
  }
  v7 = sub_23E538354();
  swift_bridgeObjectRelease();
  sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v7 & 1) != 0)
    goto LABEL_5;
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return 0;
}

uint64_t sub_23E22553C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F708);
  v9 = *(_QWORD *)(v8 - 8);
  v18 = v8;
  v19 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F710);
  v17 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  sub_23E536C98();
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F728);
  a2[4] = sub_23E225F3C();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23E1F9710(&qword_256D3F768, &qword_256D3F710, MEMORY[0x24BDCD130]);
  sub_23E1F9710(&qword_256D3F770, &qword_256D3F708, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D3F778, &qword_256D3F718, MEMORY[0x24BEE1718]);
  sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
  v15 = v18;
  sub_23E536C50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, v12);
}

uint64_t sub_23E2257C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_23E2257EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E1E2F50(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
}

uint64_t sub_23E225814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v14[7];
  unsigned __int8 v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v16) = *(_BYTE *)(a1 + *(int *)(v7 + 84));
  if (ServiceKind.rawValue.getter(v7) == 0xD000000000000024 && v10 == 0x800000023E55FA50)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_7;
  }
  sub_23E2259E4(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_23E1E2FDC((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v16 = *(_QWORD *)&v9[*(int *)(v5 + 104)];
    v15 = 65;
    v12 = sub_23E2B4680(&v15);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return v12 & 1;
  }
  sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
LABEL_7:
  v16 = *(_QWORD *)(a1 + *(int *)(v5 + 104));
  v15 = 3;
  v12 = sub_23E2B4680(&v15);
  return v12 & 1;
}

uint64_t sub_23E2259E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = type metadata accessor for StaticService();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + *(int *)(v6 + 100));
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v19 = v5;
    v20 = a2;
    v11 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v12 = *(_QWORD *)(v5 + 72);
    v18 = v9;
    swift_bridgeObjectRetain();
    while (1)
    {
      v13 = sub_23E1E2F50(v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v21 = v8[*(int *)(v4 + 84)];
      if (ServiceKind.rawValue.getter(v13) == 0xD000000000000024 && v14 == 0x800000023E55FFF0)
        break;
      v15 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v11 += v12;
      if (!--v10)
      {
        v16 = 1;
        a2 = v20;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    a2 = v20;
    sub_23E1E2FDC((uint64_t)v8, v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v16 = 0;
LABEL_11:
    v5 = v19;
  }
  else
  {
    swift_bridgeObjectRetain();
    v16 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v16, 1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E225B90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  _BYTE v17[7];
  unsigned __int8 v18;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v19) = *(_BYTE *)(a1 + *(int *)(v7 + 84));
  if (ServiceKind.rawValue.getter(v7) == 0xD000000000000024 && v10 == 0x800000023E55FA50)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_23E538354();
    swift_bridgeObjectRelease();
    v12 = 0;
    if ((v11 & 1) == 0)
      return v12 & 1;
  }
  sub_23E2259E4(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    v12 = 0;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v19 = *(_QWORD *)(a1 + *(int *)(v5 + 104));
    v18 = 3;
    v13 = sub_23E2B4680(&v18);
    v19 = *(_QWORD *)&v9[*(int *)(v5 + 104)];
    v18 = 65;
    v14 = sub_23E2B4680(&v18);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v15 = v13 == 2;
    if (v14 != 2)
      v15 = 0;
    if (v13 != 2 && v14 != 2)
      v15 = ((v14 & 1) == 0) ^ v13;
    v12 = v15 ^ 1;
  }
  return v12 & 1;
}

uint64_t sub_23E225D9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v14) = *(_BYTE *)(a1 + *(int *)(v3 + 84));
  if (ServiceKind.rawValue.getter(v3) == 0xD000000000000024 && v6 == 0x800000023E55FFF0)
  {
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v7 = sub_23E538354();
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v7 & 1) == 0)
    {
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v12 = 0;
      return v12 & 1;
    }
  }
  v14 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
  v8 = v14;
  HIBYTE(v13) = 65;
  v9 = sub_23E2B4680((unsigned __int8 *)&v13 + 7);
  v14 = v8;
  HIBYTE(v13) = 3;
  result = sub_23E2B4680((unsigned __int8 *)&v13 + 7);
  if (result != 2)
  {
    v11 = result;
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v12 = v11 ^ v9;
    if (v9 == 2)
      v12 = 1;
    return v12 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E225F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E22553C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23E225F3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D3F730;
  if (!qword_256D3F730)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F728);
    v2[0] = sub_23E225FA8();
    v2[1] = sub_23E2260D0();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCEF0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D3F730);
  }
  return result;
}

unint64_t sub_23E225FA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D3F738;
  if (!qword_256D3F738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F710);
    v2[0] = sub_23E226054(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
    v2[1] = sub_23E226054(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D3F738);
  }
  return result;
}

uint64_t sub_23E226054(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F718);
    v10 = sub_23E1EE204(a2, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E2260D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D3F758;
  if (!qword_256D3F758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F708);
    v2 = sub_23E1F9710(&qword_256D3F760, &qword_256D3F700, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D3F758);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23E226188(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E2261B0()
{
  return swift_release();
}

uint64_t sub_23E2261B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E47D308(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E2261D4()
{
  uint64_t result;

  sub_23E226238();
  result = sub_23E537CAC();
  qword_254334BD0 = result;
  return result;
}

unint64_t sub_23E226238()
{
  unint64_t result;

  result = qword_254333398;
  if (!qword_254333398)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333398);
  }
  return result;
}

uint64_t sub_23E226274()
{
  uint64_t result;

  sub_23E226238();
  result = sub_23E537CAC();
  qword_256D896F0 = result;
  return result;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  return sub_23E1FC2F8(v3, a1);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8((uint64_t)v0 + *(int *)(v8 + 20), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254333F50);
    v9 = *v0;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v10 = v0[1];
    v12[0] = *v0;
    v12[1] = v10;
    swift_bridgeObjectRetain();
    sub_23E537628();
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_23E538318();
    sub_23E537628();
    swift_bridgeObjectRelease();
    v9 = v12[0];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.init(identifier:homeId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  return sub_23E201080(a3, v5);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_23E538474();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

BOOL sub_23E226664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23E226680()
{
  return sub_23E538468();
}

uint64_t sub_23E2266AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6449656D6F68;
  else
    return 0x696669746E656469;
}

uint64_t sub_23E2266E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E22C2DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E22670C()
{
  return 0;
}

void sub_23E226718(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23E226724()
{
  sub_23E22A830();
  return sub_23E538570();
}

uint64_t sub_23E22674C()
{
  sub_23E22A830();
  return sub_23E53857C();
}

uint64_t PhoenixMetricsAggregator.IntervalKey.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22A830();
  sub_23E5384EC();
  v8[15] = 0;
  sub_23E538270();
  if (!v1)
  {
    type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
    v8[14] = 1;
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_23E5384A4();
}

uint64_t PhoenixMetricsAggregator.IntervalKey.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;

  v17 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F780);
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22A830();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v16 = a1;
  v13 = (uint64_t)v18;
  v12 = v19;
  v21 = 0;
  *v11 = sub_23E538144();
  v11[1] = v14;
  sub_23E536F80();
  v20 = 1;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v12);
  sub_23E201080(v13, (uint64_t)v11 + *(int *)(v9 + 20));
  sub_23E1E2F50((uint64_t)v11, v17, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  return sub_23E1E2FA0((uint64_t)v11, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

uint64_t sub_23E226C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E5375EC();
  sub_23E1FC2F8(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_23E538474();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E226DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  sub_23E1FC2F8(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_23E5384A4();
}

uint64_t sub_23E226F54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoenixMetricsAggregator.IntervalKey.init(from:)(a1, a2);
}

uint64_t sub_23E226F68(_QWORD *a1)
{
  return PhoenixMetricsAggregator.IntervalKey.encode(to:)(a1);
}

uint64_t PhoenixMetricsAggregator.OpenInterval.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  return sub_23E5374D8();
}

uint64_t static PhoenixMetricsAggregator.OpenInterval.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (!_s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(a1, a2))
    return 0;
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  return sub_23E537F94();
}

uint64_t PhoenixMetricsAggregator.OpenInterval.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E22731C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E2274D4(_QWORD *a1, _QWORD *a2)
{
  if (static PhoenixMetricsAggregator.IntervalKey.== infix(_:_:)(a1, a2))
    return sub_23E537F94();
  else
    return 0;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.eventName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.domainPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.modify())()
{
  return nullsub_1;
}

double PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.isPhoenixEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.processName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.init(totalSnapshotTime:aggregationInterval:maxSnapshotTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  *(_BYTE *)(v8 + 184) = a8;
  *(_QWORD *)(v8 + 96) = a6;
  *(_QWORD *)(v8 + 104) = a7;
  *(_QWORD *)(v8 + 80) = a4;
  *(_QWORD *)(v8 + 88) = a5;
  *(_QWORD *)(v8 + 64) = a2;
  *(_QWORD *)(v8 + 72) = a3;
  *(_QWORD *)(v8 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2276AC()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v13;

  *(_QWORD *)(v0 + 40) = &type metadata for HomeAppFeatures;
  v1 = sub_23E20B720();
  *(_BYTE *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 48) = v1;
  *(_BYTE *)(v0 + 185) = sub_23E5370AC() & 1;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v3 = objc_msgSend(v2, sel_processName);

  v4 = sub_23E53755C();
  v6 = v5;

  *(_QWORD *)(v0 + 112) = v4;
  *(_QWORD *)(v0 + 120) = v6;
  swift_bridgeObjectRetain();
  v7 = sub_23E5384F8();
  *(_QWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v0 + 136) = v8;
  v9 = (double)v7 * 1000000000.0 + (double)v8 * 0.000000001;
  v10 = sub_23E5384F8();
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 152) = v11;
  if (v9 / ((double)v10 * 1000000000.0 + (double)v11 * 0.000000001) <= 0.1)
  {
    v13 = *(_OWORD **)(v0 + 56);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13[5] = 0u;
    v13[6] = 0u;
    v13[3] = 0u;
    v13[4] = 0u;
    v13[1] = 0u;
    v13[2] = 0u;
    *v13 = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23E5378F8();
    *(_QWORD *)(v0 + 160) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E2278C0()
{
  uint64_t v0;

  swift_release();
  sub_23E227B7C((uint64_t *)(v0 + 16));
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_23E22791C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  double v15;
  __int128 v16;

  result = sub_23E5384F8();
  v3 = round(((double)result * 1000000000.0 + (double)v2 * 0.000000001) / 1000000.0);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v3 <= -1.0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v3 >= 1.84467441e19)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  result = sub_23E5384F8();
  v5 = round(((double)result * 1000000000.0 + (double)v4 * 0.000000001) / 1000000.0);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v5 <= -1.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v5 >= 1.84467441e19)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((*(_BYTE *)(v0 + 184) & 1) != 0)
  {
    v8 = 0;
    v9 = 1;
    goto LABEL_13;
  }
  result = sub_23E5384F8();
  v7 = round(((double)result * 1000000000.0 + (double)v6 * 0.000000001) / 1000000.0);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
    goto LABEL_20;
  if (v7 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v7 < 1.84467441e19)
  {
    v8 = (unint64_t)v7;
    v9 = *(_BYTE *)(v0 + 184) & 1;
LABEL_13:
    v10 = (double)*(uint64_t *)(v0 + 136) * 0.000000001 + (double)*(uint64_t *)(v0 + 128) * 1000000000.0;
    v12 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);
    v13 = *(_BYTE *)(v0 + 185);
    v14 = *(_QWORD *)(v0 + 56);
    v15 = (double)*(uint64_t *)(v0 + 152) * 0.000000001 + (double)*(uint64_t *)(v0 + 144) * 1000000000.0;
    v16 = *(_OWORD *)(v0 + 168);
    *(_QWORD *)v14 = 0xD000000000000014;
    *(_QWORD *)(v14 + 8) = 0x800000023E562BD0;
    *(_QWORD *)(v14 + 16) = 0xD000000000000018;
    *(_QWORD *)(v14 + 24) = 0x800000023E562BF0;
    *(_QWORD *)(v14 + 32) = (unint64_t)v3;
    *(_QWORD *)(v14 + 40) = (unint64_t)v5;
    *(_QWORD *)(v14 + 48) = v8;
    *(_BYTE *)(v14 + 56) = v9;
    *(double *)(v14 + 64) = v10 / v15;
    *(_OWORD *)(v14 + 72) = v16;
    *(_BYTE *)(v14 + 88) = v13;
    *(_QWORD *)(v14 + 96) = v12;
    *(_QWORD *)(v14 + 104) = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23E227B7C@<X0>(uint64_t *a1@<X8>)
{
  id *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (qword_254334098 != -1)
    swift_once();
  v2 = (id *)(qword_254333F18 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (!*v2)
  {
    v5 = 0;
    goto LABEL_7;
  }
  v3 = objc_msgSend(*v2, sel_homes);
  sub_23E1FC514();
  v4 = sub_23E5377F0();

  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
LABEL_7:
    swift_getKeyPath();
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    result = sub_23E42F1BC();
    *a1 = v5;
    a1[1] = result;
    return result;
  }
  swift_bridgeObjectRetain();
  v5 = sub_23E53803C();
  swift_bridgeObjectRelease_n();
  if ((v5 & 0x8000000000000000) == 0)
    goto LABEL_7;
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E227D60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E227D98 + 4 * byte_23E53A860[a1]))(0x6D614E746E657665, 0xE900000000000065);
}

uint64_t sub_23E227D98()
{
  return 0x72506E69616D6F64;
}

unint64_t sub_23E227DB8()
{
  return 0xD000000000000011;
}

unint64_t sub_23E227E6C()
{
  return 0xD000000000000010;
}

uint64_t sub_23E227E88()
{
  return 0x4E737365636F7270;
}

uint64_t _s13HomeDataModel16SignificantEventV6ReasonO9hashValueSivg_0()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E227EEC()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E227F2C()
{
  unsigned __int8 *v0;

  return sub_23E227D60(*v0);
}

uint64_t sub_23E227F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E22C3D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E227F58(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23E227F64()
{
  sub_23E22A874();
  return sub_23E538570();
}

uint64_t sub_23E227F8C()
{
  sub_23E22A874();
  return sub_23E53857C();
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD v15[3];
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F798);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = *(_QWORD *)(v1 + 16);
  v23 = *(_QWORD *)(v1 + 24);
  v24 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v21 = *(_QWORD *)(v1 + 40);
  v22 = v8;
  v20 = *(_QWORD *)(v1 + 48);
  v19 = *(unsigned __int8 *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 72);
  v17 = *(_QWORD *)(v1 + 80);
  v18 = v9;
  v16 = *(unsigned __int8 *)(v1 + 88);
  v10 = *(_QWORD *)(v1 + 96);
  v15[1] = *(_QWORD *)(v1 + 104);
  v15[2] = v10;
  v11 = a1[3];
  v12 = a1;
  v13 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_23E22A874();
  sub_23E5384EC();
  v34 = 0;
  sub_23E538270();
  if (!v2)
  {
    v33 = 1;
    sub_23E5381EC();
    v32 = 2;
    sub_23E5382A0();
    v31 = 3;
    sub_23E5382A0();
    v30 = 4;
    sub_23E538228();
    v29 = 5;
    sub_23E538288();
    v28 = 6;
    sub_23E5382A0();
    v27 = 7;
    sub_23E5382A0();
    v26 = 8;
    sub_23E53827C();
    v25 = 9;
    sub_23E538270();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v4);
}

uint64_t sub_23E228280()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E2282AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E2282D8(_QWORD *a1)
{
  return PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.encode(to:)(a1);
}

uint64_t sub_23E2282EC()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E22832C()
{
  return sub_23E538468();
}

uint64_t sub_23E228350()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E228398()
{
  sub_23E537628();
  PhoenixMetricsAggregator.IntervalKey.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  _s8IntervalVMa(0);
  sub_23E537FAC();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FA0();
  sub_23E5384F8();
  sub_23E5379D0();
  sub_23E537628();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return 0;
}

uint64_t sub_23E228538(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_23E2CB0A8(0, v2, 0);
    result = v9;
    v4 = a1 + 40;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      v6 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 16);
      v10 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_23E2CB0A8(v7 > 1, v8 + 1, 1);
        result = v10;
      }
      *(_QWORD *)(result + 16) = v8 + 1;
      *(double *)(result + 8 * v8 + 32) = -(1.0 - (double)v5 / (double)v6);
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_23E228620()
{
  _QWORD v1[2];

  sub_23E537E68();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[Aggregation-");
  PhoenixMetricsAggregator.IntervalKey.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  _s8IntervalV11AggregationVMa(0);
  sub_23E228728();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return v1[0];
}

uint64_t sub_23E228728()
{
  sub_23E537E68();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  return 0;
}

uint64_t sub_23E228908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = v1 + *(int *)(_s8IntervalV11AggregationVMa(0) + 20);
  v11 = *(_QWORD *)(v10 + 72);
  v13[0] = *(_QWORD *)(v10 + 80);
  v13[1] = v11;
  sub_23E538468();
  sub_23E538540();
  sub_23E538540();
  sub_23E538540();
  sub_23E538540();
  return sub_23E538540();
}

uint64_t sub_23E228AF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _BYTE v14[16];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22DD64();
  sub_23E5384EC();
  LOBYTE(v15) = 0;
  type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1EE1C4(&qword_2543324A8, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, (uint64_t)&protocol conformance descriptor for PhoenixMetricsAggregator.IntervalKey);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(_s8IntervalV11AggregationVMa(0) + 20));
    v10 = *((_QWORD *)v9 + 10);
    v11 = v9[1];
    v15 = *v9;
    v16 = v11;
    v12 = v9[3];
    v17 = v9[2];
    v18 = v12;
    v19 = v9[4];
    v20 = v10;
    v14[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332660);
    sub_23E1F9710(&qword_254332658, &qword_254332660, (uint64_t)&unk_23E551B60);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E228C98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;

  v21 = a2;
  v22 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F838);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s8IntervalV11AggregationVMa(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22DD64();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = a1;
  v11 = (uint64_t)v10;
  LOBYTE(v25) = 0;
  sub_23E1EE1C4(&qword_256D3F840, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, (uint64_t)&protocol conformance descriptor for PhoenixMetricsAggregator.IntervalKey);
  v12 = (uint64_t)v23;
  v13 = v24;
  sub_23E538180();
  sub_23E22E364(v12, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332660);
  v31 = 1;
  sub_23E1F9710(&qword_256D3F848, &qword_254332660, (uint64_t)&unk_23E551B38);
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  v14 = v30;
  v15 = v11 + *(int *)(v8 + 20);
  v16 = v26;
  *(_OWORD *)v15 = v25;
  *(_OWORD *)(v15 + 16) = v16;
  v17 = v28;
  *(_OWORD *)(v15 + 32) = v27;
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = v29;
  *(_QWORD *)(v15 + 80) = v14;
  sub_23E1E2F50(v11, v21, _s8IntervalV11AggregationVMa);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  return sub_23E1E2FA0(v11, _s8IntervalV11AggregationVMa);
}

uint64_t sub_23E228F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s8IntervalVMa(0);
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t sub_23E2290F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  _s8IntervalVMa(0);
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E2292C8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7363697274656DLL;
  else
    return 7955819;
}

uint64_t sub_23E2292FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E22C94C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E229320()
{
  sub_23E22DD64();
  return sub_23E538570();
}

uint64_t sub_23E229348()
{
  sub_23E22DD64();
  return sub_23E53857C();
}

uint64_t sub_23E229370()
{
  sub_23E53845C();
  sub_23E228908();
  return sub_23E5384A4();
}

uint64_t sub_23E2293B0()
{
  sub_23E53845C();
  sub_23E228908();
  return sub_23E5384A4();
}

uint64_t sub_23E2293F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E228C98(a1, a2);
}

uint64_t sub_23E229404(_QWORD *a1)
{
  return sub_23E228AF0(a1);
}

uint64_t sub_23E229420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E5375EC();
  v9 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_23E1FC2F8(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538474();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_23E537FAC();
  sub_23E1EE1C4(&qword_256D3F788, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6DE0]);
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E2295F4(_QWORD *a1, _QWORD *a2)
{
  if (static PhoenixMetricsAggregator.IntervalKey.== infix(_:_:)(a1, a2) && (sub_23E537F94() & 1) != 0)
    return sub_23E537F94();
  else
    return 0;
}

uint64_t sub_23E229660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 48);
  v29 = v0;
  v30 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  sub_23E22C830(v1);
  v31 = (unint64_t)(v3 + 63) >> 6;
  v32 = v2;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  v9 = MEMORY[0x24BEE4AF8];
  do
  {
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v13 = v12 | (v7 << 6);
    }
    else
    {
      v14 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_42;
      if (v14 >= v31)
        goto LABEL_39;
      v15 = *(_QWORD *)(v30 + 8 * v14);
      ++v7;
      if (!v15)
      {
        v7 = v14 + 1;
        if (v14 + 1 >= v31)
          goto LABEL_39;
        v15 = *(_QWORD *)(v30 + 8 * v7);
        if (!v15)
        {
          v7 = v14 + 2;
          if (v14 + 2 >= v31)
            goto LABEL_39;
          v15 = *(_QWORD *)(v30 + 8 * v7);
          if (!v15)
          {
            v7 = v14 + 3;
            if (v14 + 3 >= v31)
              goto LABEL_39;
            v15 = *(_QWORD *)(v30 + 8 * v7);
            if (!v15)
            {
              v7 = v14 + 4;
              if (v14 + 4 >= v31)
                goto LABEL_39;
              v15 = *(_QWORD *)(v30 + 8 * v7);
              if (!v15)
              {
                v16 = v14 + 5;
                if (v16 >= v31)
                  goto LABEL_39;
                v15 = *(_QWORD *)(v30 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    v7 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_43;
                    if (v7 >= v31)
                      goto LABEL_39;
                    v15 = *(_QWORD *)(v30 + 8 * v7);
                    ++v16;
                    if (v15)
                      goto LABEL_25;
                  }
                }
                v7 = v16;
              }
            }
          }
        }
      }
LABEL_25:
      v5 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v7 << 6);
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v13);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = v9;
      sub_23E2CB08C(0, v18, 0);
      result = v9;
      v20 = (uint64_t *)(v17 + 32);
      v21 = *(_QWORD *)(v9 + 16);
      do
      {
        v23 = *v20;
        v20 += 2;
        v22 = v23;
        v33 = result;
        v24 = *(_QWORD *)(result + 24);
        v25 = v21 + 1;
        if (v21 >= v24 >> 1)
        {
          sub_23E2CB08C(v24 > 1, v21 + 1, 1);
          result = v33;
        }
        *(_QWORD *)(result + 16) = v25;
        *(_QWORD *)(result + 8 * v21++ + 32) = v22;
        --v18;
      }
      while (v18);
      v9 = v19;
LABEL_34:
      v26 = 0;
      v10 = 0;
      do
      {
        v27 = *(_QWORD *)(result + 8 * v26 + 32);
        v28 = __OFADD__(v10, v27);
        v10 += v27;
        if (v28)
        {
          __break(1u);
          goto LABEL_41;
        }
        ++v26;
      }
      while (v25 != v26);
      result = swift_bridgeObjectRelease();
      if ((v10 & 0x8000000000000000) == 0)
        goto LABEL_5;
      sub_23E538000();
      __break(1u);
LABEL_39:
      swift_release();
      sub_23E22C858(v29);
      return v8;
    }
    v25 = *(_QWORD *)(v9 + 16);
    if (v25)
    {
      result = v9;
      goto LABEL_34;
    }
    result = swift_bridgeObjectRelease();
    v10 = 0;
LABEL_5:
    v11 = __CFADD__(v8, v10);
    v8 += v10;
  }
  while (!v11);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void sub_23E22995C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_23E229964(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E229974(char *a1, char *a2)
{
  return sub_23E522918(*a1, *a2);
}

uint64_t sub_23E229980()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E229A04()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E229A64()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E229AE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F808);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22E004();
  sub_23E5384EC();
  v10 = 0;
  sub_23E538294();
  if (!v1)
  {
    v9 = 1;
    sub_23E538294();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23E229C00@<X0>(char *a1@<X8>)
{
  return sub_23E22A1F4(a1);
}

void sub_23E229C0C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746E756F635F30;
  if (*v1)
    v2 = 0x7265746C69665F31;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA00000000006465;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23E229C50()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746C69665F31;
  else
    return 0x746E756F635F30;
}

uint64_t sub_23E229C90@<X0>(char *a1@<X8>)
{
  return sub_23E22A2EC(a1);
}

uint64_t sub_23E229C9C()
{
  sub_23E22E004();
  return sub_23E538570();
}

uint64_t sub_23E229CC4()
{
  sub_23E22E004();
  return sub_23E53857C();
}

uint64_t sub_23E229CEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_23E22DEB4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_23E229D14(_QWORD *a1)
{
  return sub_23E229AE4(a1);
}

char *sub_23E229D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v19[3];
  uint64_t v20;

  v4 = sub_23E537598();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E5369EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_23E5369F8();
  v11 = *(_OWORD *)(v1 + 16);
  v19[0] = *(_OWORD *)v1;
  v19[1] = v11;
  v19[2] = *(_OWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 48);
  sub_23E22C880();
  v12 = sub_23E536A04();
  if (!v2)
  {
    v14 = v12;
    v15 = v13;
    sub_23E53758C();
    v16 = sub_23E537568();
    if (v17)
    {
      v6 = (char *)v16;
      sub_23E22C908(v14, v15);
      swift_release();
      return v6;
    }
    sub_23E22C8C4();
    swift_allocError();
    swift_willThrow();
    sub_23E22C908(v14, v15);
  }
  swift_release();
  return v6;
}

uint64_t sub_23E229EE4(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22DDA8();
  sub_23E5384EC();
  v9 = v3[1];
  v13 = *v3;
  v14 = v9;
  v15 = v3[2];
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332650);
  sub_23E1F9710(&qword_254332648, &qword_254332650, (uint64_t)&unk_23E551B60);
  sub_23E5382AC();
  if (!v2)
  {
    *(_QWORD *)&v13 = *((_QWORD *)v3 + 6);
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332538);
    sub_23E22DDEC();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E22A060(char *a1, char *a2)
{
  return sub_23E5229C0(*a1, *a2);
}

uint64_t sub_23E22A06C()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E22A0F8()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E22A160()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E22A1E8@<X0>(char *a1@<X8>)
{
  return sub_23E22A1F4(a1);
}

uint64_t sub_23E22A1F4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23E22A24C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x4D6F697461725F30;
  if (*v1)
    v2 = 0x73746E756F635F31;
  v3 = 0xEE00736369727465;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23E22A298()
{
  _BYTE *v0;

  if (*v0)
    return 0x73746E756F635F31;
  else
    return 0x4D6F697461725F30;
}

uint64_t sub_23E22A2E0@<X0>(char *a1@<X8>)
{
  return sub_23E22A2EC(a1);
}

uint64_t sub_23E22A2EC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23E22A348()
{
  sub_23E22DDA8();
  return sub_23E538570();
}

uint64_t sub_23E22A370()
{
  sub_23E22DDA8();
  return sub_23E53857C();
}

double sub_23E22A398@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_23E22E048(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_23E22A3E4(_QWORD *a1)
{
  return sub_23E229EE4(a1);
}

BOOL sub_23E22A3F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _BOOL8 result;

  result = 0;
  if (_s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(a1, a2))
  {
    v4 = *(int *)(_s8IntervalV11AggregationVMa(0) + 20);
    if (*(_QWORD *)((char *)a1 + v4) == *(_QWORD *)((char *)a2 + v4)
      && (sub_23E538534() & 1) != 0
      && (sub_23E538534() & 1) != 0
      && (sub_23E538534() & 1) != 0
      && (sub_23E538534() & 1) != 0
      && (sub_23E538534() & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

BOOL _s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_23E538354(), result = 0, (v20 & 1) != 0))
  {
    v29 = v7;
    v22 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
    sub_23E1FC2F8((uint64_t)a1 + *(int *)(v22 + 20), (uint64_t)v19);
    sub_23E1FC2F8((uint64_t)a2 + *(int *)(v22 + 20), (uint64_t)v17);
    v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E1FC2F8((uint64_t)v19, (uint64_t)v10);
    sub_23E1FC2F8((uint64_t)v17, v23);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v24((uint64_t)v10, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
      if (v24(v23, 1, v4) == 1)
      {
        sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
        return 1;
      }
    }
    else
    {
      sub_23E1FC2F8((uint64_t)v10, (uint64_t)v14);
      if (v24(v23, 1, v4) != 1)
      {
        v25 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v23, v4);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v26 = sub_23E537514();
        v27 = *(void (**)(char *, uint64_t))(v5 + 8);
        v27(v25, v4);
        sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
        sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
        v27(v14, v4);
        sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
        return (v26 & 1) != 0;
      }
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_23E1E7C64((uint64_t)v10, &qword_254332798);
    return 0;
  }
  return result;
}

unint64_t sub_23E22A830()
{
  unint64_t result;

  result = qword_254332480;
  if (!qword_254332480)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AD10, &_s11IntervalKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254332480);
  }
  return result;
}

unint64_t sub_23E22A874()
{
  unint64_t result;

  result = qword_256D3F7A0;
  if (!qword_256D3F7A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53ACC0, &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F7A0);
  }
  return result;
}

uint64_t sub_23E22A8B8()
{
  return sub_23E1EE1C4(&qword_256D3F7A8, type metadata accessor for PhoenixMetricsAggregator.OpenInterval, (uint64_t)&protocol conformance descriptor for PhoenixMetricsAggregator.OpenInterval);
}

unint64_t sub_23E22A8E4(uint64_t a1)
{
  unint64_t result;

  result = sub_23E22A908();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23E22A908()
{
  unint64_t result;

  result = qword_256D3F7B0;
  if (!qword_256D3F7B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent, &type metadata for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent);
    atomic_store(result, (unint64_t *)&qword_256D3F7B0);
  }
  return result;
}

uint64_t *_s11IntervalKeyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E536F80();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

_QWORD *_s11IntervalKeyVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *_s11IntervalKeyVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *_s11IntervalKeyVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s11IntervalKeyVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E22AD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s11IntervalKeyVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E22ADD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t *_s12OpenIntervalVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F80();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23E537FAC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v4;
}

_QWORD *_s12OpenIntervalVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23E537FAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *_s12OpenIntervalVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23E537FAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *_s12OpenIntervalVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23E537FAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_QWORD *_s12OpenIntervalVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23E537FAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t _s12OpenIntervalVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t _s12OpenIntervalVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for IconTextValueStringDataHolder.AttachedData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent()
{
  return &type metadata for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent;
}

uint64_t _s5BatchVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s5BatchVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5BatchVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *_s5BatchVwta(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5BatchVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5BatchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5BatchVMa()
{
  return &_s5BatchVN;
}

char *sub_23E22B918(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    v9 = &v4[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F80();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 20);
    v17 = &v4[v16];
    v18 = (char *)a2 + v16;
    v19 = sub_23E537FAC();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&v4[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v19);
  }
  return v4;
}

char *sub_23E22BA6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23E537FAC();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v18);
  return a1;
}

char *sub_23E22BBE8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23E537FAC();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v15);
  return a1;
}

char *sub_23E22BD00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23E537FAC();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v19);
  return a1;
}

uint64_t sub_23E22BE6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23E537FAC();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23E22BEF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23E537FAC();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s34HighSnapshotActivityAnalyticsEventV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s34HighSnapshotActivityAnalyticsEventV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E22C058 + 4 * byte_23E53A86F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E22C08C + 4 * byte_23E53A86A[v4]))();
}

uint64_t sub_23E22C08C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22C094(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E22C09CLL);
  return result;
}

uint64_t sub_23E22C0A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E22C0B0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E22C0B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22C0BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22C0C8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23E22C0D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s34HighSnapshotActivityAnalyticsEventV10CodingKeysOMa()
{
  return &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON;
}

ValueMetadata *_s11IntervalKeyV10CodingKeysOMa()
{
  return &_s11IntervalKeyV10CodingKeysON;
}

unint64_t sub_23E22C104()
{
  unint64_t result;

  result = qword_256D3F7B8;
  if (!qword_256D3F7B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AB50, &_s11IntervalKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F7B8);
  }
  return result;
}

unint64_t sub_23E22C14C()
{
  unint64_t result;

  result = qword_256D3F7C0;
  if (!qword_256D3F7C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AC08, &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F7C0);
  }
  return result;
}

uint64_t sub_23E22C190()
{
  return sub_23E1EE1C4(&qword_256D3F7C8, _s8IntervalVMa, (uint64_t)&unk_23E53AC58);
}

unint64_t sub_23E22C1C0()
{
  unint64_t result;

  result = qword_256D3F7D0;
  if (!qword_256D3F7D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AB78, &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F7D0);
  }
  return result;
}

unint64_t sub_23E22C208()
{
  unint64_t result;

  result = qword_256D3F7D8;
  if (!qword_256D3F7D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53ABA0, &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F7D8);
  }
  return result;
}

unint64_t sub_23E22C250()
{
  unint64_t result;

  result = qword_254332490;
  if (!qword_254332490)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AAC0, &_s11IntervalKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254332490);
  }
  return result;
}

unint64_t sub_23E22C298()
{
  unint64_t result;

  result = qword_254332488;
  if (!qword_254332488)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AAE8, &_s11IntervalKeyV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254332488);
  }
  return result;
}

uint64_t sub_23E22C2DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E22C3D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E69616D6F64 && a2 == 0xEC00000078696665 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E562C10 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E562C30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7370616E5378616DLL && a2 == 0xEF656D6954746F68 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023E562C50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xED000073656D6F48 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E562C70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E562C90 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23E22C830(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E22C858(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E22C880()
{
  unint64_t result;

  result = qword_2543324E8;
  if (!qword_2543324E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AF50, &_s5BatchV11AggregationVN);
    atomic_store(result, (unint64_t *)&qword_2543324E8);
  }
  return result;
}

unint64_t sub_23E22C8C4()
{
  unint64_t result;

  result = qword_256D3F7E0;
  if (!qword_256D3F7E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AF78, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_256D3F7E0);
  }
  return result;
}

uint64_t sub_23E22C908(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23E22C94C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E22CA2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *@<X8>);
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *@<X8>);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(_QWORD *@<X8>);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD *@<X8>);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  _QWORD *v95;
  char v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t result;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_QWORD *@<X8>);
  unint64_t v108;
  unint64_t v109;
  void (*v110)(_QWORD *@<X8>);
  void (*v111)(_QWORD *@<X8>);
  uint64_t v112;
  int64_t v113;
  void (*v114)(_QWORD *@<X8>);
  uint64_t v115;
  uint64_t v116;
  int64_t v117;
  _QWORD v118[7];

  v2 = a1;
  v3 = sub_23E228538(a1);
  sub_23E42F728(v3, (uint64_t)v118);
  swift_bridgeObjectRelease();
  v102 = v118[0];
  v4 = v118[1];
  v5 = v118[2];
  v6 = v118[3];
  v7 = v118[4];
  v8 = v118[5];
  v105 = *(_QWORD *)(v2 + 16);
  if (!v105)
  {
    swift_bridgeObjectRelease();
    v100 = 0;
    v9 = 0;
    v10 = 0;
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_80:
    sub_23E22D1F8(v100);
    sub_23E22D1F8(v9);
    result = sub_23E22D1F8((uint64_t)v10);
    *a2 = v102;
    a2[1] = v4;
    a2[2] = v5;
    a2[3] = v6;
    a2[4] = v7;
    a2[5] = v8;
    a2[6] = v12;
    return result;
  }
  v107 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x24BEE4B00];
  v106 = v2 + 32;
  v104 = v2;
LABEL_4:
  if (v11 < *(_QWORD *)(v2 + 16))
  {
    v108 = v11;
    v110 = (void (*)(_QWORD *@<X8>))v9;
    v13 = (_QWORD *)(v106 + 16 * v11);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(_QWORD *)(*v13 + 16);
    v114 = v10;
    v116 = v14;
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v17 = v15 + 48;
      v18 = MEMORY[0x24BEE4B00];
      v19 = v107;
      while (1)
      {
        v20 = sub_23E537E8C();
        v22 = v21;
        sub_23E22D1F8((uint64_t)v19);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v25 = sub_23E211350(v20, v22);
        v26 = *(_QWORD *)(v18 + 16);
        v27 = (v24 & 1) == 0;
        v28 = v26 + v27;
        if (__OFADD__(v26, v27))
          break;
        v29 = v24;
        if (*(_QWORD *)(v18 + 24) >= v28)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_23E21DFF4();
        }
        else
        {
          sub_23E212F90(v28, isUniquelyReferenced_nonNull_native);
          v30 = sub_23E211350(v20, v22);
          if ((v29 & 1) != (v31 & 1))
            goto LABEL_92;
          v25 = v30;
        }
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          *(_QWORD *)(v18 + 8 * (v25 >> 6) + 64) |= 1 << v25;
          v32 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v25);
          *v32 = v20;
          v32[1] = v22;
          v33 = (_QWORD *)(*(_QWORD *)(v18 + 56) + 16 * v25);
          *v33 = 0;
          v33[1] = 0;
          v34 = *(_QWORD *)(v18 + 16);
          v35 = v34 + 1;
          v36 = __OFADD__(v34, 1);
          swift_bridgeObjectRetain();
          if (v36)
            goto LABEL_88;
          *(_QWORD *)(v18 + 16) = v35;
        }
        swift_bridgeObjectRetain();
        v37 = *(_QWORD *)(v18 + 56);
        swift_bridgeObjectRelease();
        v38 = (_QWORD *)(v37 + 16 * v25);
        if (__OFADD__(*v38, 1))
          goto LABEL_84;
        v17 += 24;
        ++*v38;
        swift_bridgeObjectRelease();
        v19 = sub_23E22995C;
        if (!--v16)
        {
          swift_bridgeObjectRelease_n();
          v39 = sub_23E22995C;
          v14 = v116;
          goto LABEL_23;
        }
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      v18 = MEMORY[0x24BEE4B00];
      v39 = v107;
LABEL_23:
      v107 = v39;
      v40 = *(_QWORD *)(v14 + 16);
      if (!v40)
      {
        v42 = v110;
LABEL_41:
        v109 = v108 + 1;
        v111 = v42;
        swift_bridgeObjectRelease();
        v65 = 0;
        v112 = v18 + 64;
        v66 = 1 << *(_BYTE *)(v18 + 32);
        if (v66 < 64)
          v67 = ~(-1 << v66);
        else
          v67 = -1;
        v68 = v67 & *(_QWORD *)(v18 + 64);
        v113 = (unint64_t)(v66 + 63) >> 6;
        v10 = v114;
        if (v68)
        {
LABEL_45:
          v115 = (v68 - 1) & v68;
          v117 = v65;
          v69 = __clz(__rbit64(v68)) | (v65 << 6);
          goto LABEL_60;
        }
        while (1)
        {
          v70 = v65 + 1;
          if (__OFADD__(v65, 1))
            break;
          if (v70 >= v113)
            goto LABEL_3;
          v71 = *(_QWORD *)(v112 + 8 * v70);
          v72 = v65 + 1;
          if (!v71)
          {
            v72 = v65 + 2;
            if (v65 + 2 >= v113)
              goto LABEL_3;
            v71 = *(_QWORD *)(v112 + 8 * v72);
            if (!v71)
            {
              v72 = v65 + 3;
              if (v65 + 3 >= v113)
                goto LABEL_3;
              v71 = *(_QWORD *)(v112 + 8 * v72);
              if (!v71)
              {
                v73 = v65 + 4;
                if (v65 + 4 >= v113)
                {
LABEL_3:
                  swift_release();
                  v2 = v104;
                  v11 = v109;
                  v9 = (uint64_t)v111;
                  if (v109 != v105)
                    goto LABEL_4;
                  swift_bridgeObjectRelease();
                  v100 = (uint64_t)v107;
                  goto LABEL_80;
                }
                v71 = *(_QWORD *)(v112 + 8 * v73);
                if (!v71)
                {
                  while (1)
                  {
                    v72 = v73 + 1;
                    if (__OFADD__(v73, 1))
                      goto LABEL_90;
                    if (v72 >= v113)
                      goto LABEL_3;
                    v71 = *(_QWORD *)(v112 + 8 * v72);
                    ++v73;
                    if (v71)
                      goto LABEL_59;
                  }
                }
                v72 = v65 + 4;
              }
            }
          }
LABEL_59:
          v115 = (v71 - 1) & v71;
          v117 = v72;
          v69 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_60:
          v74 = 16 * v69;
          v75 = (uint64_t *)(*(_QWORD *)(v18 + 48) + v74);
          v76 = *v75;
          v77 = v75[1];
          v78 = (uint64_t *)(*(_QWORD *)(v18 + 56) + v74);
          v80 = *v78;
          v79 = v78[1];
          swift_bridgeObjectRetain();
          sub_23E22D1F8((uint64_t)v10);
          v81 = swift_isUniquelyReferenced_nonNull_native();
          v83 = sub_23E211350(v76, v77);
          v84 = v12[2];
          v85 = (v82 & 1) == 0;
          v86 = v84 + v85;
          if (__OFADD__(v84, v85))
          {
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          }
          v87 = v82;
          if (v12[3] >= v86)
          {
            if ((v81 & 1) == 0)
              sub_23E21DFE8();
          }
          else
          {
            sub_23E212F84(v86, v81);
            v88 = sub_23E211350(v76, v77);
            if ((v87 & 1) != (v89 & 1))
              goto LABEL_92;
            v83 = v88;
          }
          swift_bridgeObjectRelease();
          if ((v87 & 1) == 0)
          {
            v12[(v83 >> 6) + 8] |= 1 << v83;
            v90 = (uint64_t *)(v12[6] + 16 * v83);
            *v90 = v76;
            v90[1] = v77;
            *(_QWORD *)(v12[7] + 8 * v83) = MEMORY[0x24BEE4AF8];
            v91 = v12[2];
            v92 = v91 + 1;
            v93 = __OFADD__(v91, 1);
            swift_bridgeObjectRetain();
            if (v93)
              goto LABEL_82;
            v12[2] = v92;
          }
          swift_bridgeObjectRetain();
          v94 = v12[7];
          swift_bridgeObjectRelease();
          v95 = *(_QWORD **)(v94 + 8 * v83);
          v96 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v94 + 8 * v83) = v95;
          if ((v96 & 1) == 0)
          {
            v95 = sub_23E51EE6C(0, v95[2] + 1, 1, v95);
            *(_QWORD *)(v94 + 8 * v83) = v95;
          }
          v98 = v95[2];
          v97 = v95[3];
          if (v98 >= v97 >> 1)
          {
            v95 = sub_23E51EE6C((_QWORD *)(v97 > 1), v98 + 1, 1, v95);
            *(_QWORD *)(v94 + 8 * v83) = v95;
          }
          v95[2] = v98 + 1;
          v99 = &v95[2 * v98];
          v99[4] = v80;
          v99[5] = v79;
          swift_bridgeObjectRelease();
          v10 = sub_23E229964;
          v68 = v115;
          v65 = v117;
          if (v115)
            goto LABEL_45;
        }
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
      v41 = v14 + 48;
      v42 = v110;
      while (1)
      {
        v43 = sub_23E537E8C();
        v45 = v44;
        sub_23E22D1F8((uint64_t)v42);
        v46 = swift_isUniquelyReferenced_nonNull_native();
        v48 = sub_23E211350(v43, v45);
        v49 = *(_QWORD *)(v18 + 16);
        v50 = (v47 & 1) == 0;
        v51 = v49 + v50;
        if (__OFADD__(v49, v50))
          break;
        v52 = v47;
        if (*(_QWORD *)(v18 + 24) >= v51)
        {
          if ((v46 & 1) == 0)
            sub_23E21DFF4();
        }
        else
        {
          sub_23E212F90(v51, v46);
          v53 = sub_23E211350(v43, v45);
          if ((v52 & 1) != (v54 & 1))
            goto LABEL_92;
          v48 = v53;
        }
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          *(_QWORD *)(v18 + 8 * (v48 >> 6) + 64) |= 1 << v48;
          v55 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v48);
          *v55 = v43;
          v55[1] = v45;
          v56 = (_QWORD *)(*(_QWORD *)(v18 + 56) + 16 * v48);
          *v56 = 0;
          v56[1] = 0;
          v57 = *(_QWORD *)(v18 + 16);
          v58 = v57 + 1;
          v59 = __OFADD__(v57, 1);
          swift_bridgeObjectRetain();
          if (v59)
            goto LABEL_89;
          *(_QWORD *)(v18 + 16) = v58;
        }
        swift_bridgeObjectRetain();
        v60 = *(_QWORD *)(v18 + 56);
        swift_bridgeObjectRelease();
        v61 = v60 + 16 * v48;
        v63 = *(_QWORD *)(v61 + 8);
        v62 = (_QWORD *)(v61 + 8);
        v64 = v63 + 1;
        if (__OFADD__(v63, 1))
          goto LABEL_86;
        v41 += 24;
        *v62 = v64;
        swift_bridgeObjectRelease();
        v42 = sub_23E22995C;
        if (!--v40)
          goto LABEL_41;
      }
    }
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_91:
  __break(1u);
LABEL_92:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E22D1F8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t _s5BatchV11AggregationV5CountVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s5BatchV11AggregationV5CountVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s5BatchV11AggregationV5CountVMa()
{
  return &_s5BatchV11AggregationV5CountVN;
}

uint64_t _s5BatchV11AggregationVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5BatchV11AggregationVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s5BatchV11AggregationVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5BatchV11AggregationVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5BatchV11AggregationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5BatchV11AggregationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5BatchV11AggregationVMa()
{
  return &_s5BatchV11AggregationVN;
}

uint64_t _s5ErrorOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s5ErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E22D4B8 + 4 * byte_23E53A874[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E22D4D8 + 4 * byte_23E53A879[v4]))();
}

_BYTE *sub_23E22D4B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E22D4D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E22D4E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E22D4E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E22D4F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E22D4F8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23E22D504()
{
  return 0;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

uint64_t *sub_23E22D51C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F80();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v19;
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((_QWORD *)v17 + 10) = *((_QWORD *)v18 + 10);
    v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
  }
  return v4;
}

uint64_t sub_23E22D658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *sub_23E22D6D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *((_OWORD *)v16 + 3);
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  *((_OWORD *)v15 + 3) = v17;
  *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
  *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
  v18 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v18;
  return a1;
}

_QWORD *sub_23E22D7E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  v16[2] = v17[2];
  v16[3] = v17[3];
  v16[4] = v17[4];
  v16[5] = v17[5];
  v16[6] = v17[6];
  v16[7] = v17[7];
  v16[8] = v17[8];
  v16[9] = v17[9];
  v16[10] = v17[10];
  return a1;
}

_OWORD *sub_23E22D984(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;

  *a1 = *a2;
  v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((_QWORD *)v13 + 10) = *((_QWORD *)v14 + 10);
  v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  return a1;
}

_QWORD *sub_23E22DA84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  v20 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v20;
  *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
  *((_QWORD *)v17 + 10) = *((_QWORD *)v18 + 10);
  return a1;
}

uint64_t sub_23E22DBD8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E22DBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23E22DC20()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E22DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t _s8IntervalV11AggregationVMa(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_254332510);
}

uint64_t sub_23E22DC80()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E22DCF0()
{
  return sub_23E1EE1C4(&qword_256D3F7E8, _s8IntervalV11AggregationVMa, (uint64_t)&unk_23E53AE08);
}

unint64_t sub_23E22DD20()
{
  unint64_t result;

  result = qword_256D3F7F0;
  if (!qword_256D3F7F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AEB0, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_256D3F7F0);
  }
  return result;
}

unint64_t sub_23E22DD64()
{
  unint64_t result;

  result = qword_2543324F0;
  if (!qword_2543324F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B318, &_s8IntervalV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2543324F0);
  }
  return result;
}

unint64_t sub_23E22DDA8()
{
  unint64_t result;

  result = qword_2543324C8;
  if (!qword_2543324C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B2C8, &_s5BatchV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2543324C8);
  }
  return result;
}

unint64_t sub_23E22DDEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254332540[0];
  if (!qword_254332540[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254332538);
    v2 = sub_23E22E2B8(&qword_254332680, (uint64_t (*)(void))sub_23E22DE70, MEMORY[0x24BEE12A0]);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, qword_254332540);
  }
  return result;
}

unint64_t sub_23E22DE70()
{
  unint64_t result;

  result = qword_2543324E0;
  if (!qword_2543324E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AF00, &_s5BatchV11AggregationV5CountVN);
    atomic_store(result, (unint64_t *)&qword_2543324E0);
  }
  return result;
}

uint64_t sub_23E22DEB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F7F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_23E22E004();
  sub_23E5384E0();
  if (!v1)
  {
    v9[15] = 0;
    v7 = sub_23E538168();
    v9[14] = 1;
    sub_23E538168();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

unint64_t sub_23E22E004()
{
  unint64_t result;

  result = qword_256D3F800;
  if (!qword_256D3F800)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B278, &_s5BatchV11AggregationV5CountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F800);
  }
  return result;
}

uint64_t sub_23E22E048@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F810);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E22DDA8();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332650);
  v18 = 0;
  sub_23E1F9710(&qword_256D3F818, &qword_254332650, (uint64_t)&unk_23E551B38);
  sub_23E538180();
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  v13 = v23;
  v14 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332538);
  v18 = 1;
  sub_23E22E234();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  return result;
}

unint64_t sub_23E22E234()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D3F820;
  if (!qword_256D3F820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254332538);
    v2 = sub_23E22E2B8(&qword_256D3F828, (uint64_t (*)(void))sub_23E22E320, MEMORY[0x24BEE12D0]);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D3F820);
  }
  return result;
}

uint64_t sub_23E22E2B8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254332678);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E22E320()
{
  unint64_t result;

  result = qword_256D3F830;
  if (!qword_256D3F830)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AF28, &_s5BatchV11AggregationV5CountVN);
    atomic_store(result, (unint64_t *)&qword_256D3F830);
  }
  return result;
}

uint64_t sub_23E22E364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s5BatchV11AggregationV5CountV10CodingKeysOMa()
{
  return &_s5BatchV11AggregationV5CountV10CodingKeysON;
}

ValueMetadata *_s5BatchV11AggregationV10CodingKeysOMa()
{
  return &_s5BatchV11AggregationV10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for TileSize(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11IntervalKeyV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E22E4A4 + 4 * byte_23E53A883[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E22E4D8 + 4 * byte_23E53A87E[v4]))();
}

uint64_t sub_23E22E4D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22E4E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E22E4E8);
  return result;
}

uint64_t sub_23E22E4F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E22E4FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E22E500(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22E508(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8IntervalV11AggregationV10CodingKeysOMa()
{
  return &_s8IntervalV11AggregationV10CodingKeysON;
}

unint64_t sub_23E22E528()
{
  unint64_t result;

  result = qword_256D3F850;
  if (!qword_256D3F850)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B070, &_s8IntervalV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F850);
  }
  return result;
}

unint64_t sub_23E22E570()
{
  unint64_t result;

  result = qword_256D3F858;
  if (!qword_256D3F858)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B160, &_s5BatchV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F858);
  }
  return result;
}

unint64_t sub_23E22E5B8()
{
  unint64_t result;

  result = qword_256D3F860;
  if (!qword_256D3F860)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B250, &_s5BatchV11AggregationV5CountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F860);
  }
  return result;
}

unint64_t sub_23E22E600()
{
  unint64_t result;

  result = qword_256D3F868;
  if (!qword_256D3F868)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B188, &_s5BatchV11AggregationV5CountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F868);
  }
  return result;
}

unint64_t sub_23E22E648()
{
  unint64_t result;

  result = qword_256D3F870;
  if (!qword_256D3F870)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B1B0, &_s5BatchV11AggregationV5CountV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D3F870);
  }
  return result;
}

unint64_t sub_23E22E690()
{
  unint64_t result;

  result = qword_2543324D8;
  if (!qword_2543324D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B098, &_s5BatchV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2543324D8);
  }
  return result;
}

unint64_t sub_23E22E6D8()
{
  unint64_t result;

  result = qword_2543324D0;
  if (!qword_2543324D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B0C0, &_s5BatchV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2543324D0);
  }
  return result;
}

unint64_t sub_23E22E720()
{
  unint64_t result;

  result = qword_254332500;
  if (!qword_254332500)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53AFE0, &_s8IntervalV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_254332500);
  }
  return result;
}

unint64_t sub_23E22E768()
{
  unint64_t result;

  result = qword_2543324F8;
  if (!qword_2543324F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B008, &_s8IntervalV11AggregationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_2543324F8);
  }
  return result;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  return v3 & 1;
}

uint64_t getEnumTagSinglePayload for HomeKitFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeKitFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E22E8F4 + 4 * byte_23E53B36D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E22E928 + 4 * byte_23E53B368[v4]))();
}

uint64_t sub_23E22E928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22E930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E22E938);
  return result;
}

uint64_t sub_23E22E944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E22E94CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E22E950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22E958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeKitFeatures()
{
  return &type metadata for HomeKitFeatures;
}

uint64_t getEnumTagSinglePayload for UmbrellaCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeAppFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E22EA50 + 4 * byte_23E53B377[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E22EA84 + 4 * byte_23E53B372[v4]))();
}

uint64_t sub_23E22EA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22EA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E22EA94);
  return result;
}

uint64_t sub_23E22EAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E22EAA8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E22EAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E22EAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeAppFeatures()
{
  return &type metadata for HomeAppFeatures;
}

unint64_t sub_23E22EAD4()
{
  unint64_t result;

  result = qword_256D3F878;
  if (!qword_256D3F878)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B3EC, &type metadata for HomeAppFeatures);
    atomic_store(result, (unint64_t *)&qword_256D3F878);
  }
  return result;
}

unint64_t sub_23E22EB1C()
{
  unint64_t result;

  result = qword_256D3F880;
  if (!qword_256D3F880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B454, &type metadata for HomeKitFeatures);
    atomic_store(result, (unint64_t *)&qword_256D3F880);
  }
  return result;
}

Swift::Bool __swiftcall HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)(HMUser forRestrictedUser)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD *v21;
  void *v22;
  void (*v23)(_QWORD *, uint64_t);
  unsigned int v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  id v28;
  id v29;
  objc_class *v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  _QWORD *v45;
  id v46;
  id v47;
  id v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  os_log_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  objc_class *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  objc_class *v68;
  id v69;
  objc_class *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  objc_class *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  objc_class *v82;
  id v83;
  id v84;
  objc_class *v85;
  id v86;
  id v87;
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  id v97;
  _QWORD *v98;
  id v99;
  uint64_t v100;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  void (*v106)(_QWORD *, uint64_t);
  os_log_t v107;
  int v108;
  uint64_t v109;
  _QWORD *v110;
  id v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115[5];

  v2 = v1;
  v4 = sub_23E537034();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115[3] = (uint64_t)&type metadata for HomeKitFeatures;
  v115[4] = sub_23E20B680();
  LOBYTE(v115[0]) = 1;
  v12 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
  if ((v12 & 1) == 0)
  {
    if (qword_256D3ED68 != -1)
      swift_once();
    v57 = sub_23E5371A8();
    __swift_project_value_buffer(v57, (uint64_t)qword_256D42C08);
    v58 = forRestrictedUser.super.isa;
    v59 = sub_23E537190();
    v60 = sub_23E537B20();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v115[0] = v62;
      *(_DWORD *)v61 = 136315394;
      v114 = sub_23E1FD768(0xD000000000000037, 0x800000023E562DC0, v115);
      sub_23E537CF4();
      *(_WORD *)(v61 + 12) = 2080;
      v63 = -[objc_class name](v58, sel_name);
      v64 = sub_23E53755C();
      v66 = v65;

      v114 = sub_23E1FD768(v64, v66, v115);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v59, v60, "%s: user = %s. Returning false because feature flag is NOT enabled", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v62, -1, -1);
      MEMORY[0x24264FEBC](v61, -1, -1);

LABEL_24:
      LOBYTE(v24) = 0;
      return v24;
    }

LABEL_23:
    goto LABEL_24;
  }
  v113 = v4;
  v13 = objc_msgSend(v2, sel_homeAccessControlForUser_, forRestrictedUser.super.isa);
  v14 = objc_msgSend(v13, sel_restrictedGuestAccessSettings);
  if (!v14)
  {
    if (qword_256D3ED68 != -1)
      swift_once();
    v67 = sub_23E5371A8();
    __swift_project_value_buffer(v67, (uint64_t)qword_256D42C08);
    v68 = forRestrictedUser.super.isa;
    v69 = v13;
    v70 = v68;
    v58 = (objc_class *)v69;
    v71 = sub_23E537190();
    v72 = sub_23E537B20();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = swift_slowAlloc();
      v112 = (_QWORD *)swift_slowAlloc();
      v113 = swift_slowAlloc();
      v115[0] = v113;
      *(_DWORD *)v73 = 136315650;
      v114 = sub_23E1FD768(0xD000000000000037, 0x800000023E562DC0, v115);
      sub_23E537CF4();
      *(_WORD *)(v73 + 12) = 2080;
      v74 = -[objc_class name](v70, sel_name);
      v75 = sub_23E53755C();
      v77 = v76;

      v114 = sub_23E1FD768(v75, v77, v115);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 22) = 2112;
      v114 = (uint64_t)v58;
      v78 = v58;
      sub_23E537CF4();
      v79 = v112;
      *v112 = v58;

      _os_log_impl(&dword_23E1DF000, v71, v72, "%s: user = %s. Returning false because restrictedGuestAccessSettings is nil. accessControl = %@", (uint8_t *)v73, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v79, -1, -1);
      v80 = v113;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v80, -1, -1);
      MEMORY[0x24264FEBC](v73, -1, -1);

      goto LABEL_24;
    }

    goto LABEL_23;
  }
  v15 = v14;
  v112 = v7;
  v16 = objc_msgSend(v14, sel_guestAccessSchedule);
  if (!v16)
  {
    if (qword_256D3ED68 != -1)
      swift_once();
    v81 = sub_23E5371A8();
    __swift_project_value_buffer(v81, (uint64_t)qword_256D42C08);
    v82 = forRestrictedUser.super.isa;
    v83 = v13;
    v84 = v15;
    v85 = v82;
    v86 = v83;
    v87 = v84;
    v88 = sub_23E537190();
    v89 = sub_23E537B20();
    v90 = v89;
    if (os_log_type_enabled(v88, v89))
    {
      v91 = swift_slowAlloc();
      v112 = (_QWORD *)swift_slowAlloc();
      v113 = swift_slowAlloc();
      v115[0] = v113;
      *(_DWORD *)v91 = 136315906;
      v111 = v15;
      v114 = sub_23E1FD768(0xD000000000000037, 0x800000023E562DC0, v115);
      sub_23E537CF4();
      *(_WORD *)(v91 + 12) = 2080;
      v92 = -[objc_class name](v85, sel_name);
      LODWORD(v110) = v90;
      v93 = v92;
      v94 = sub_23E53755C();
      v96 = v95;

      v114 = sub_23E1FD768(v94, v96, v115);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v91 + 22) = 2112;
      v114 = (uint64_t)v86;
      v97 = v86;
      sub_23E537CF4();
      v98 = v112;
      *v112 = v86;

      *(_WORD *)(v91 + 32) = 2112;
      v114 = (uint64_t)v87;
      v99 = v87;
      sub_23E537CF4();
      v98[1] = v111;

      _os_log_impl(&dword_23E1DF000, v88, (os_log_type_t)v110, "%s: user = %s. Returning false because rgAccessSchedule is nil. accessControl = %@. rgAccessSettings = %@.", (uint8_t *)v91, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v98, -1, -1);
      v100 = v113;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v100, -1, -1);
      MEMORY[0x24264FEBC](v91, -1, -1);

    }
    else
    {

    }
    goto LABEL_24;
  }
  v17 = v16;
  v111 = v15;
  v18 = (void *)objc_opt_self();
  sub_23E536F08();
  v19 = (void *)sub_23E536EA8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = objc_msgSend(v2, sel_timeZone);
  v21 = v112;
  sub_23E537028();

  v22 = (void *)sub_23E53701C();
  v23 = *(void (**)(_QWORD *, uint64_t))(v5 + 8);
  v23(v21, v113);
  LODWORD(v21) = objc_msgSend(v18, sel_isDate_withinAllowedTimeForSchedule_forHomeInTimeZone_, v19, v17, v22);

  v24 = v21 ^ 1;
  if (qword_256D3ED68 != -1)
    swift_once();
  v25 = sub_23E5371A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_256D42C08);
  v26 = forRestrictedUser.super.isa;
  v27 = v13;
  v28 = v17;
  v29 = v2;
  v30 = v26;
  v31 = v27;
  v32 = v28;
  v33 = v29;
  v34 = sub_23E537190();
  v35 = sub_23E537B20();
  v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc();
    v110 = (_QWORD *)swift_slowAlloc();
    v109 = swift_slowAlloc();
    v115[0] = v109;
    *(_DWORD *)v37 = 136316418;
    v108 = v36;
    v114 = sub_23E1FD768(0xD000000000000037, 0x800000023E562DC0, v115);
    v104 = v17;
    v106 = v23;
    sub_23E537CF4();
    *(_WORD *)(v37 + 12) = 2080;
    v38 = -[objc_class name](v30, sel_name);
    v103 = v33;
    v39 = v38;
    v40 = v32;
    v41 = sub_23E53755C();
    v107 = v34;
    v43 = v42;

    v114 = sub_23E1FD768(v41, v43, v115);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 1024;
    LODWORD(v114) = v24;
    sub_23E537CF4();
    *(_WORD *)(v37 + 28) = 2112;
    v114 = (uint64_t)v31;
    v44 = v31;
    v105 = v44;
    sub_23E537CF4();
    v45 = v110;
    *v110 = v31;

    *(_WORD *)(v37 + 38) = 2112;
    v114 = (uint64_t)v40;
    v46 = v40;
    sub_23E537CF4();
    v45[1] = v104;

    *(_WORD *)(v37 + 48) = 2080;
    v47 = v103;
    v48 = objc_msgSend(v103, sel_timeZone);
    v49 = v112;
    sub_23E537028();

    sub_23E22F980();
    v50 = v113;
    v51 = sub_23E538318();
    v53 = v52;
    v106(v49, v50);
    v114 = sub_23E1FD768(v51, v53, v115);
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    v54 = v107;
    _os_log_impl(&dword_23E1DF000, v107, (os_log_type_t)v108, "%s: user = %s. Returning %{BOOL}d. accessControl = %@. guestAccessSchedule = %@. timeZone = %s", (uint8_t *)v37, 0x3Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    v55 = v110;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v55, -1, -1);
    v56 = v109;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v56, -1, -1);
    MEMORY[0x24264FEBC](v37, -1, -1);

  }
  else
  {

  }
  return v24;
}

uint64_t sub_23E22F834(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254333E08);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

unint64_t sub_23E22F980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D3F888;
  if (!qword_256D3F888)
  {
    v1 = sub_23E537034();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCF548], v1);
    atomic_store(result, (unint64_t *)&qword_256D3F888);
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterSnapshotModerator.LimitedSnapshotController()
{
  return &type metadata for MatterSnapshotModerator.LimitedSnapshotController;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVMa()
{
  return &_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateVN;
}

uint64_t sub_23E22FBC4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  char v34;
  os_log_t log;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;

  ObjectType = swift_getObjectType();
  v7 = a2;
  v38 = sub_23E2312E0(a1, v3, ObjectType, a2);
  v9 = v8;
  v11 = v10;
  if (!*(_QWORD *)(v8 + 16)
    || (v12 = sub_23E2112B8(a3), (v13 & 1) == 0)
    || (v14 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v12), !*(_QWORD *)(v14 + 16)))
  {
    if (qword_254332E00 != -1)
      swift_once();
    v23 = sub_23E5371A8();
    __swift_project_value_buffer(v23, (uint64_t)qword_254333308);
    swift_unknownObjectRetain();
    v24 = sub_23E537190();
    v25 = sub_23E537B20();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      log = (os_log_t)swift_slowAlloc();
      v40 = (uint64_t)log;
      *(_DWORD *)v26 = 136315650;
      sub_23E1FD768(0xD00000000000001DLL, 0x800000023E563070, &v40);
      sub_23E537CF4();
      *(_WORD *)(v26 + 12) = 512;
      v27 = a3;
      sub_23E537CF4();
      *(_WORD *)(v26 + 16) = 2048;
      (*(void (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
      sub_23E537CF4();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_23E1DF000, v24, v25, "%s Reading clusterKinds for endpoint:%hu device:%llu", (uint8_t *)v26, 0x1Au);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](log, -1, -1);
      MEMORY[0x24264FEBC](v26, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease();
      v27 = a3;
    }
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v27, ObjectType, v7))
    {
      v29 = v28;
      v30 = swift_getObjectType();
      v14 = MatterDescriptorCluster.availableClusterKinds.getter(v30, v29);
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = MEMORY[0x24BEE4B08];
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40 = v9;
    sub_23E21AAB0(v14, v27, isUniquelyReferenced_nonNull_native);
    v32 = v40;
    swift_bridgeObjectRelease();
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    v34 = swift_isUniquelyReferenced_nonNull_native();
    v40 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E21A964(v38, v32, v11, v33, v34);
    *v3 = v40;
    goto LABEL_17;
  }
  v15 = qword_254332E00;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_23E5371A8();
  __swift_project_value_buffer(v16, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  v17 = sub_23E537190();
  v18 = sub_23E537B20();
  if (!os_log_type_enabled(v17, v18))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();

LABEL_17:
    swift_bridgeObjectRelease();
    return v14;
  }
  v19 = swift_slowAlloc();
  v37 = swift_slowAlloc();
  v40 = v37;
  *(_DWORD *)v19 = 136315906;
  sub_23E1FD768(0xD00000000000001DLL, 0x800000023E563070, &v40);
  sub_23E537CF4();
  *(_WORD *)(v19 + 12) = 512;
  sub_23E537CF4();
  *(_WORD *)(v19 + 16) = 2048;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  sub_23E537CF4();
  swift_unknownObjectRelease();
  *(_WORD *)(v19 + 26) = 2080;
  sub_23E23168C();
  swift_bridgeObjectRetain();
  v20 = sub_23E537A18();
  v22 = v21;
  swift_bridgeObjectRelease();
  sub_23E1FD768(v20, v22, &v40);
  sub_23E537CF4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23E1DF000, v17, v18, "%s Using cached clusterKinds value for endpoint:%hu device:%llu: %s", (uint8_t *)v19, 0x24u);
  swift_arrayDestroy();
  MEMORY[0x24264FEBC](v37, -1, -1);
  MEMORY[0x24264FEBC](v19, -1, -1);

  return v14;
}

uint64_t sub_23E230198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  uint64_t v20;

  v3 = *(_QWORD *)a3;
  v4 = *(_WORD *)(a3 + 8);
  v5 = *(_BYTE *)(a3 + 10);
  v14 = *(_QWORD *)a3;
  v15 = v4;
  v16 = v5;
  sub_23E2303A0(a1, a2, (uint64_t)&v14, 0xFFFBu, (uint64_t)&v17);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F898);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8B0);
    if (swift_dynamicCast())
      return v14;
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v17, &qword_256D3F8A8);
  }
  if (qword_254332E00 != -1)
    swift_once();
  v7 = sub_23E5371A8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254333308);
  v8 = sub_23E537190();
  v9 = sub_23E537B08();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v14 = v11;
    v17 = v3;
    v18 = v4;
    v19 = v5;
    v12 = ClusterPath.description.getter();
    v17 = sub_23E1FD768(v12, v13, &v14);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v8, v9, "Failed to get attribute list for cluster %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);
  }

  return MEMORY[0x24BEE4AF8];
}

void sub_23E2303A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  unsigned __int16 v8;
  char v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unsigned __int16 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  char v48;
  void *v49;
  void *v50;
  uint64_t v51;
  char v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v61;
  unsigned __int16 v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  _OWORD v67[2];
  __int128 v68;
  uint64_t v69;
  unsigned __int8 v70;

  v58 = *(_QWORD *)a3;
  v8 = *(_WORD *)(a3 + 8);
  v9 = *(_BYTE *)(a3 + 10);
  ObjectType = swift_getObjectType();
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  v12 = v11(ObjectType, a2);
  v56 = v5;
  sub_23E2D0D3C(v12, *v5);
  v55 = v11;
  if (!v14)
    goto LABEL_16;
  v15 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v15 + 16)
    || (v16 = sub_23E2112B8(v8), (v17 & 1) == 0)
    || (v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !*(_QWORD *)(v18 + 16))
    || (v19 = sub_23E2112EC(v9), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v21 = v8;
    goto LABEL_17;
  }
  v21 = v8;
  v22 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_17;
  if (!*(_QWORD *)(v22 + 16) || (v23 = sub_23E21140C(a4), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_23E1E7C20(*(_QWORD *)(v22 + 56) + 40 * v23, (uint64_t)&v68, &qword_256D3F298);
  swift_bridgeObjectRelease();
  if (v70 > 0xFDu)
  {
LABEL_17:
    if (qword_254332E00 != -1)
      swift_once();
    v34 = sub_23E5371A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_254333308);
    swift_unknownObjectRetain_n();
    v35 = sub_23E537190();
    v36 = sub_23E537B20();
    if (os_log_type_enabled(v35, v36))
    {
      v53 = v36;
      v37 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      *(_QWORD *)&v67[0] = v54;
      *(_DWORD *)v37 = 136315906;
      *(_QWORD *)&v68 = sub_23E1FD768(0xD000000000000027, 0x800000023E563040, (uint64_t *)v67);
      sub_23E537CF4();
      *(_WORD *)(v37 + 12) = 2080;
      v38 = v58;
      *(_QWORD *)&v68 = v58;
      WORD4(v68) = v21;
      BYTE10(v68) = v9;
      v39 = ClusterPath.description.getter();
      *(_QWORD *)&v68 = sub_23E1FD768(v39, v40, (uint64_t *)v67);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 1024;
      LODWORD(v68) = a4;
      sub_23E537CF4();
      *(_WORD *)(v37 + 28) = 2048;
      v41 = v55(ObjectType, a2);
      swift_unknownObjectRelease();
      *(_QWORD *)&v68 = v41;
      sub_23E537CF4();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_23E1DF000, v35, v53, "%s Reading attribute for clusterPath:%s attributeID: %u device:%llu", (uint8_t *)v37, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v54, -1, -1);
      MEMORY[0x24264FEBC](v37, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
      v38 = v58;
    }
    *(_QWORD *)&v68 = v38;
    WORD4(v68) = v21;
    BYTE10(v68) = v9;
    (*(void (**)(_OWORD *__return_ptr, __int128 *, _QWORD, uint64_t, uint64_t))(a2 + 56))(v67, &v68, a4, ObjectType, a2);
    sub_23E1E7C20((uint64_t)v67, (uint64_t)&v68, &qword_254332260);
    if (v69)
    {
      sub_23E1EA76C(&v68, &v65);
      v61 = v38;
      v62 = v21;
      v63 = v9;
      v42 = v66;
      v43 = __swift_project_boxed_opaque_existential_1(&v65, v66);
      v69 = v42;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v68);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(boxed_opaque_existential_1, v43, v42);
      v70 = 0;
      sub_23E23140C(a1, (uint64_t)&v61, a4, (uint64_t *)&v68, v56, ObjectType, a2);
      sub_23E23162C((uint64_t)&v68);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    }
    else
    {
      sub_23E1E7C64((uint64_t)&v68, &qword_254332260);
    }
    sub_23E1E7C20((uint64_t)v67, (uint64_t)&v68, &qword_254332260);
    v45 = v69;
    if (v69)
    {
      v46 = __swift_project_boxed_opaque_existential_1(&v68, v69);
      *(_QWORD *)(a5 + 24) = v45;
      v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v47, v46, v45);
      sub_23E1E7C64((uint64_t)v67, &qword_254332260);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v68);
      return;
    }
    sub_23E1E7C64((uint64_t)v67, &qword_254332260);
    sub_23E1E7C64((uint64_t)&v68, &qword_254332260);
    goto LABEL_28;
  }
  if ((v70 & 1) != 0)
  {
    v48 = v9;
    v49 = (void *)v68;
    v50 = (void *)sub_23E536D04();
    if (qword_256D3ECF8 != -1)
      swift_once();
    v51 = qword_256D3F890;
    swift_bridgeObjectRetain();
    v52 = sub_23E41E968((uint64_t)objc_msgSend(v50, sel_code), v51);

    swift_bridgeObjectRelease();
    v9 = v48;
    if ((v52 & 1) != 0)
    {
LABEL_28:
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      return;
    }
    goto LABEL_17;
  }
  sub_23E1EA76C(&v68, v67);
  if (qword_254332E00 != -1)
    swift_once();
  v25 = sub_23E5371A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_254333308);
  sub_23E1EA57C((uint64_t)v67, (uint64_t)&v65);
  swift_unknownObjectRetain_n();
  v26 = sub_23E537190();
  v27 = sub_23E537B20();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v64 = v57;
    *(_DWORD *)v28 = 136316162;
    sub_23E1FD768(0xD000000000000027, 0x800000023E563040, &v64);
    sub_23E537CF4();
    *(_WORD *)(v28 + 12) = 2080;
    v62 = v21;
    v63 = v9;
    v29 = ClusterPath.description.getter();
    sub_23E1FD768(v29, v30, &v64);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 1024;
    sub_23E537CF4();
    *(_WORD *)(v28 + 28) = 2048;
    v31 = v55(ObjectType, a2);
    swift_unknownObjectRelease();
    v61 = v31;
    sub_23E537CF4();
    swift_unknownObjectRelease();
    *(_WORD *)(v28 + 38) = 2080;
    sub_23E1EA57C((uint64_t)&v65, (uint64_t)&v61);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F898);
    v32 = sub_23E5375D4();
    v61 = sub_23E1FD768(v32, v33, &v64);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    _os_log_impl(&dword_23E1DF000, v26, v27, "%s Using cached attribute value for clusterPath:%s attributeID: %u device:%llu: %s", (uint8_t *)v28, 0x30u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v57, -1, -1);
    MEMORY[0x24264FEBC](v28, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
  }

  sub_23E1EA76C(v67, (_OWORD *)a5);
}

double sub_23E230BF4()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8A0);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_23E53B510;
  *(_OWORD *)(v0 + 32) = xmmword_23E53B520;
  qword_256D3F890 = v0;
  return result;
}

uint64_t sub_23E230C38(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_23E2312E0(a1, v3, ObjectType, a2);
  v9 = v8;
  v11 = v10;
  if (v7)
  {
    v12 = v7;
  }
  else
  {
    v12 = MatterDevice.allEndpointIDs.getter(ObjectType, a2);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    swift_bridgeObjectRetain();
    v14 = v13(ObjectType, a2);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_23E21A964(v12, v9, v11, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23E230D3C(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  char v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  unint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  unsigned __int16 v64;
  uint64_t v65;
  int64_t v66;
  _OWORD v67[2];
  char v68;

  v2 = *v1;
  if (!*(_QWORD *)(v2 + 16))
    return result;
  v55 = result;
  result = sub_23E211288(result);
  if ((v3 & 1) == 0)
    return result;
  v4 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 24 * result);
  v5 = v4[1];
  v6 = v4[2];
  v54 = *v4;
  swift_bridgeObjectRetain();
  v53 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_23E421F28();
  v8 = v7;
  v57 = v6 + 64;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v58 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_bridgeObjectRetain();
  v13 = 0;
  v60 = v12;
  v61 = v6;
  v59 = v8;
  while (2)
  {
    if (!v11)
    {
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_74;
      if (v16 >= v58)
        goto LABEL_68;
      v17 = *(_QWORD *)(v57 + 8 * v16);
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v58)
          goto LABEL_68;
        v17 = *(_QWORD *)(v57 + 8 * v13);
        if (!v17)
        {
          v13 = v16 + 2;
          if (v16 + 2 >= v58)
            goto LABEL_68;
          v17 = *(_QWORD *)(v57 + 8 * v13);
          if (!v17)
          {
            v18 = v16 + 3;
            if (v18 < v58)
            {
              v17 = *(_QWORD *)(v57 + 8 * v18);
              if (v17)
              {
                v13 = v18;
                goto LABEL_23;
              }
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_75;
                if (v13 >= v58)
                  break;
                v17 = *(_QWORD *)(v57 + 8 * v13);
                ++v18;
                if (v17)
                  goto LABEL_23;
              }
            }
LABEL_68:
            swift_bridgeObjectRelease();
            swift_release();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v67[0] = *v56;
            *v56 = 0x8000000000000000;
            sub_23E21A964(v54, v53, v6, v55, isUniquelyReferenced_nonNull_native);
            *v56 = *(_QWORD *)&v67[0];
            return swift_bridgeObjectRelease();
          }
        }
      }
LABEL_23:
      v65 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v13 << 6);
      goto LABEL_24;
    }
    v65 = (v11 - 1) & v11;
    v15 = __clz(__rbit64(v11)) | (v13 << 6);
LABEL_24:
    v64 = *(_WORD *)(*(_QWORD *)(v61 + 48) + 2 * v15);
    v19 = *(_QWORD **)(*(_QWORD *)(v61 + 56) + 8 * v15);
    v20 = 1 << *(_BYTE *)(v8 + 32);
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v22 = v21 & *(_QWORD *)(v8 + 64);
    v66 = (unint64_t)(v20 + 63) >> 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = 0;
    while (1)
    {
      while (v22)
      {
        v24 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        v25 = v24 | (v23 << 6);
        if (v19[2])
        {
LABEL_45:
          v29 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v25);
          v30 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + v25);
          v31 = sub_23E2112EC(v30);
          if ((v32 & 1) != 0)
          {
            v63 = v13;
            v33 = *(_QWORD *)(v19[7] + 8 * v31);
            v34 = *(_QWORD *)(v29 + 16);
            if (v34)
            {
              v62 = v6;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              for (i = 0; i != v34; ++i)
              {
                v36 = sub_23E21140C(*(_DWORD *)(v29 + 4 * i + 32));
                if ((v37 & 1) != 0)
                {
                  v38 = v36;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    sub_23E21E384();
                  sub_23E2315E4(*(_QWORD *)(v33 + 56) + 40 * v38, (uint64_t)v67);
                  sub_23E49DFCC(v38, v33);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  memset(v67, 0, sizeof(v67));
                  v68 = -2;
                }
                sub_23E1E7C64((uint64_t)v67, &qword_256D3F398);
              }
              swift_bridgeObjectRelease();
              v6 = v62;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            v39 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v67[0] = v19;
            v41 = sub_23E2112EC(v30);
            v42 = v19[2];
            v43 = (v40 & 1) == 0;
            v44 = v42 + v43;
            v13 = v63;
            if (__OFADD__(v42, v43))
              goto LABEL_72;
            if (v19[3] < v44)
            {
              v45 = v40;
              sub_23E21357C(v44, v39);
              v46 = sub_23E2112EC(v30);
              if ((v45 & 1) != (v47 & 1))
                goto LABEL_76;
              v41 = v46;
              goto LABEL_60;
            }
            if ((v39 & 1) == 0)
            {
              v45 = v40;
              sub_23E21E378();
LABEL_60:
              v40 = v45;
            }
            v12 = v60;
            v19 = *(_QWORD **)&v67[0];
            if ((v40 & 1) != 0)
            {
              v48 = *(_QWORD *)(*(_QWORD *)&v67[0] + 56);
              swift_bridgeObjectRelease();
              *(_QWORD *)(v48 + 8 * v41) = v33;
            }
            else
            {
              *(_QWORD *)(*(_QWORD *)&v67[0] + 8 * (v41 >> 6) + 64) |= 1 << v41;
              *(_BYTE *)(v19[6] + v41) = v30;
              *(_QWORD *)(v19[7] + 8 * v41) = v33;
              v49 = v19[2];
              v50 = __OFADD__(v49, 1);
              v51 = v49 + 1;
              if (v50)
                goto LABEL_73;
              v19[2] = v51;
            }
            swift_bridgeObjectRelease();
            v8 = v59;
          }
        }
      }
      v26 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_71;
      }
      if (v26 >= v66)
        goto LABEL_7;
      v27 = *(_QWORD *)(v12 + 8 * v26);
      ++v23;
      if (!v27)
      {
        v23 = v26 + 1;
        if (v26 + 1 >= v66)
          goto LABEL_7;
        v27 = *(_QWORD *)(v12 + 8 * v23);
        if (!v27)
        {
          v23 = v26 + 2;
          if (v26 + 2 >= v66)
            goto LABEL_7;
          v27 = *(_QWORD *)(v12 + 8 * v23);
          if (!v27)
            break;
        }
      }
LABEL_44:
      v22 = (v27 - 1) & v27;
      v25 = __clz(__rbit64(v27)) + (v23 << 6);
      if (v19[2])
        goto LABEL_45;
    }
    v28 = v26 + 3;
    if (v28 >= v66)
    {
LABEL_7:
      swift_release();
      swift_bridgeObjectRetain();
      v14 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v67[0] = v6;
      sub_23E21AABC((uint64_t)v19, v64, v14);
      v6 = *(_QWORD *)&v67[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v65;
      continue;
    }
    break;
  }
  v27 = *(_QWORD *)(v12 + 8 * v28);
  if (v27)
  {
    v23 = v28;
    goto LABEL_44;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v66)
      goto LABEL_7;
    v27 = *(_QWORD *)(v12 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_44;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E2312E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v7 = v6(a3, a4);
  result = sub_23E2D0D3C(v7, *a2);
  if (!v9)
  {
    ObjectType = swift_getObjectType();
    v11 = MEMORY[0x24BEE4AF8];
    v12 = sub_23E222288(MEMORY[0x24BEE4AF8]);
    v13 = sub_23E222294(v11);
    v14 = v6(ObjectType, a4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *a2;
    *a2 = 0x8000000000000000;
    sub_23E21A964(0, v12, v13, v14, isUniquelyReferenced_nonNull_native);
    *a2 = v16;
    swift_bridgeObjectRelease();
    MatterDevice.prefetch()();
    return 0;
  }
  return result;
}

uint64_t sub_23E23140C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  unsigned __int16 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  unint64_t v34;

  v11 = *(_WORD *)(a2 + 8);
  v12 = *(_BYTE *)(a2 + 10);
  v13 = sub_23E2312E0(a1, a5, a6, a7);
  v31 = v14;
  v32 = v13;
  v16 = v15;
  if (*(_QWORD *)(v15 + 16) && (v17 = sub_23E2112B8(v11), (v18 & 1) != 0))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    if (!*(_QWORD *)(v19 + 16))
      goto LABEL_8;
  }
  else
  {
    v19 = sub_23E2222A0(MEMORY[0x24BEE4AF8]);
    if (!*(_QWORD *)(v19 + 16))
    {
LABEL_8:
      v34 = sub_23E2223A0(MEMORY[0x24BEE4AF8]);
      goto LABEL_9;
    }
  }
  v20 = sub_23E2112EC(v12);
  if ((v21 & 1) == 0)
    goto LABEL_8;
  v34 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v20);
  swift_bridgeObjectRetain();
LABEL_9:
  sub_23E231658(a4, (uint64_t)v33);
  sub_23E20C7EC((uint64_t)v33, a3);
  v22 = v34;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = v19;
  sub_23E21AC08(v22, v12, isUniquelyReferenced_nonNull_native);
  v24 = v33[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v25 = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = v16;
  sub_23E21AABC(v24, v11, v25);
  v26 = v33[0];
  swift_bridgeObjectRelease();
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a6, a7);
  v28 = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = *a5;
  *a5 = 0x8000000000000000;
  sub_23E21A964(v32, v31, v26, v27, v28);
  *a5 = v33[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2315E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E23162C(uint64_t a1)
{
  _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwxx(a1);
  return a1;
}

uint64_t sub_23E231658(uint64_t *a1, uint64_t a2)
{
  _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwcp(a2, a1);
  return a2;
}

unint64_t sub_23E23168C()
{
  unint64_t result;

  result = qword_256D3F8B8;
  if (!qword_256D3F8B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterKind, &type metadata for ClusterKind);
    atomic_store(result, (unint64_t *)&qword_256D3F8B8);
  }
  return result;
}

void _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwxx(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)

  else
    __swift_destroy_boxed_opaque_existential_0(a1);
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwcp(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;

  v3 = *((unsigned __int8 *)a2 + 32);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *a2;
    v5 = (id)*a2;
    *(_QWORD *)a1 = v4;
    v6 = 1;
  }
  else
  {
    v7 = a2[3];
    *(_QWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    v6 = 0;
  }
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(void **)a2;
      v7 = v6;
      *(_QWORD *)a1 = v6;
      v8 = 1;
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
      v8 = 0;
    }
    *(_BYTE *)(a1 + 32) = v8;
  }
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    *(_BYTE *)(a1 + 32) = v6;
  }
  return a1;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t _s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E231954(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_23E231970(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOMa()
{
  return &_s14descr250EE1269C25LimitedSnapshotControllerV11DeviceStateV14AttributeValueON;
}

uint64_t sub_23E2319A4@<X0>(uint64_t a1@<X0>, unsigned __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  int v30;

  v27 = a3;
  v30 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
  v26 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (unsigned __int16 *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (_WORD *)((char *)&v25 - v8);
  v10 = *(_QWORD *)(a1 + 64);
  v28 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v29 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(a1 + 56);
    v22 = *(_WORD *)(*(_QWORD *)(a1 + 48) + 2 * i);
    v23 = type metadata accessor for StaticEndpoint();
    sub_23E1E2F50(v21 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * i, (uint64_t)v9 + *(int *)(v4 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    *v9 = v22;
    sub_23E1E4E3C((uint64_t)v9, (uint64_t)v7, &qword_254333460);
    if (*v7 == v30)
    {
      swift_release();
      v24 = v27;
      sub_23E1E4E3C((uint64_t)v7, v27, &qword_254333460);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v4);
    }
    result = sub_23E1E7C64((uint64_t)v7, &qword_254333460);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v29)
      goto LABEL_25;
    v19 = *(_QWORD *)(v28 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v29)
        goto LABEL_25;
      v19 = *(_QWORD *)(v28 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v29)
          goto LABEL_25;
        v19 = *(_QWORD *)(v28 + 8 * v15);
        if (!v19)
        {
          v15 = v18 + 3;
          if (v18 + 3 >= v29)
            goto LABEL_25;
          v19 = *(_QWORD *)(v28 + 8 * v15);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v29)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v27, 1, 1, v4);
  }
  v19 = *(_QWORD *)(v28 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v29)
      goto LABEL_25;
    v19 = *(_QWORD *)(v28 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E231C54(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v36 = *(_QWORD *)(a1 + 16);
  v38 = MEMORY[0x24BEE4AF8];
  sub_23E2CB118(0, v1, 0);
  v2 = v38;
  result = sub_23E23E40C(a1);
  v5 = result;
  v7 = v36;
  v6 = a1;
  v8 = 0;
  v10 = v9 & 1;
  v11 = a1 + 64;
  v12 = v4;
  v13 = a1 + 88;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v6 + 32))
  {
    v15 = (unint64_t)v5 >> 6;
    if ((*(_QWORD *)(v11 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_28;
    v16 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v5);
    v18 = *(_QWORD *)(v38 + 16);
    v17 = *(_QWORD *)(v38 + 24);
    if (v18 >= v17 >> 1)
    {
      v32 = v4;
      v33 = v13;
      v34 = v12;
      v35 = v11;
      result = sub_23E2CB118(v17 > 1, v18 + 1, 1);
      v4 = v32;
      v13 = v33;
      v12 = v34;
      v11 = v35;
      v7 = v36;
      v6 = a1;
    }
    *(_QWORD *)(v38 + 16) = v18 + 1;
    v19 = v38 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v16;
    *(_WORD *)(v19 + 40) = 0;
    *(_BYTE *)(v19 + 42) = 1;
    if ((v10 & 1) != 0)
      goto LABEL_32;
    v14 = 1 << *(_BYTE *)(v6 + 32);
    if (v5 >= v14)
      goto LABEL_29;
    v20 = *(_QWORD *)(v11 + 8 * v15);
    if ((v20 & (1 << v5)) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_31;
    v21 = v20 & (-2 << (v5 & 0x3F));
    if (v21)
    {
      v14 = __clz(__rbit64(v21)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = v15 + 1;
      v23 = (unint64_t)(v14 + 63) >> 6;
      if (v15 + 1 < v23)
      {
        v24 = *(_QWORD *)(v11 + 8 * v22);
        if (!v24)
        {
          v22 = v15 + 2;
          if (v15 + 2 >= v23)
            goto LABEL_4;
          v24 = *(_QWORD *)(v11 + 8 * v22);
          if (!v24)
          {
            while (v23 - 3 != v15)
            {
              v24 = *(_QWORD *)(v13 + 8 * v15++);
              if (v24)
              {
                v25 = v5;
                v26 = v11;
                v27 = v12;
                v28 = v13;
                result = sub_23E23D578(v25, v4, 0);
                v13 = v28;
                v12 = v27;
                v11 = v26;
                v7 = v36;
                v6 = a1;
                v22 = v15 + 2;
                goto LABEL_18;
              }
            }
            v29 = v11;
            v30 = v12;
            v31 = v13;
            result = sub_23E23D578(v5, v4, 0);
            v13 = v31;
            v12 = v30;
            v11 = v29;
            v7 = v36;
            v6 = a1;
            goto LABEL_4;
          }
        }
LABEL_18:
        v14 = __clz(__rbit64(v24)) + (v22 << 6);
      }
    }
LABEL_4:
    v10 = 0;
    ++v8;
    v4 = v12;
    v5 = v14;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.controllerID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterStateSnapshot.staticDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MatterStateSnapshot.staticEndpointsDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MatterStateSnapshot.staticEndpointsDictionary.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MatterStateSnapshot.staticEndpointsDictionary.modify())()
{
  return nullsub_1;
}

uint64_t sub_23E231F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t i;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  _WORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  int isUniquelyReferenced_nonNull_native;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t result;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int64_t v98;
  char *v99;
  __int128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  char *v110;
  char *v111;
  _QWORD *v112;

  v86 = a2;
  v85 = a1;
  v87 = a4;
  v5 = type metadata accessor for StaticEndpoint();
  v105 = *(_QWORD *)(v5 - 8);
  v106 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v104 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23E536F80();
  v108 = *(_QWORD *)(v103 - 8);
  v7 = MEMORY[0x24BDAC7A8](v103);
  v110 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v111 = (char *)&v84 - v9;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
  v10 = MEMORY[0x24BDAC7A8](v102);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v101 = (char *)&v84 - v13;
  v92 = type metadata accessor for StaticMatterDevice();
  v91 = *(_QWORD *)(v92 - 8);
  v14 = MEMORY[0x24BDAC7A8](v92);
  v95 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v90 = (uint64_t)&v84 - v16;
  swift_bridgeObjectRetain();
  v17 = (_QWORD *)sub_23E20D7D0(MEMORY[0x24BEE4AF8]);
  v18 = *(_QWORD *)(a3 + 64);
  v88 = a3 + 64;
  v19 = 1 << *(_BYTE *)(a3 + 32);
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v96 = v20 & v18;
  v89 = (unint64_t)(v19 + 63) >> 6;
  v93 = a3;
  swift_bridgeObjectRetain();
  v21 = 0;
  v100 = xmmword_23E539650;
  v99 = v12;
LABEL_6:
  if (!v96)
  {
    v25 = v21 + 1;
    v24 = v93;
    if (__OFADD__(v21, 1))
      goto LABEL_70;
    if (v25 >= v89)
      goto LABEL_66;
    v26 = *(_QWORD *)(v88 + 8 * v25);
    v27 = v21 + 1;
    if (!v26)
    {
      v27 = v21 + 2;
      if (v21 + 2 >= v89)
        goto LABEL_66;
      v26 = *(_QWORD *)(v88 + 8 * v27);
      if (!v26)
      {
        v27 = v21 + 3;
        if (v21 + 3 >= v89)
          goto LABEL_66;
        v26 = *(_QWORD *)(v88 + 8 * v27);
        if (!v26)
        {
          v27 = v21 + 4;
          if (v21 + 4 >= v89)
            goto LABEL_66;
          v26 = *(_QWORD *)(v88 + 8 * v27);
          if (!v26)
          {
            v27 = v21 + 5;
            if (v21 + 5 >= v89)
              goto LABEL_66;
            v26 = *(_QWORD *)(v88 + 8 * v27);
            if (!v26)
            {
              v28 = v21 + 6;
              if (v21 + 6 < v89)
              {
                v26 = *(_QWORD *)(v88 + 8 * v28);
                if (v26)
                {
                  v27 = v21 + 6;
                  goto LABEL_25;
                }
                while (1)
                {
                  v27 = v28 + 1;
                  if (__OFADD__(v28, 1))
                    goto LABEL_71;
                  if (v27 >= v89)
                    break;
                  v26 = *(_QWORD *)(v88 + 8 * v27);
                  ++v28;
                  if (v26)
                    goto LABEL_25;
                }
              }
LABEL_66:
              swift_release();
              result = swift_bridgeObjectRelease();
              v82 = v87;
              v83 = v86;
              *v87 = v85;
              v82[1] = v83;
              v82[2] = v24;
              v82[3] = v17;
              return result;
            }
          }
        }
      }
    }
LABEL_25:
    v96 = (v26 - 1) & v26;
    v94 = v27;
    v23 = __clz(__rbit64(v26)) + (v27 << 6);
    goto LABEL_26;
  }
  v22 = __clz(__rbit64(v96));
  v96 &= v96 - 1;
  v94 = v21;
  v23 = v22 | (v21 << 6);
  v24 = v93;
LABEL_26:
  v29 = *(_QWORD *)(v24 + 56) + *(_QWORD *)(v91 + 72) * v23;
  v30 = v90;
  sub_23E1E2F50(v29, v90, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v31 = v30;
  v32 = v95;
  sub_23E1E2FDC(v31, v95, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v33 = *(_QWORD *)(v32 + *(int *)(v92 + 44));
  v34 = *(_QWORD *)(v33 + 64);
  v97 = v33 + 64;
  v35 = 1 << *(_BYTE *)(v33 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & v34;
  v98 = (unint64_t)(v35 + 63) >> 6;
  v107 = v33;
  swift_bridgeObjectRetain_n();
  for (i = 0; ; i = v109)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v109 = i;
      v40 = v39 | (i << 6);
    }
    else
    {
      v41 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_68;
      if (v41 >= v98)
      {
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        sub_23E1E2FA0(v95, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
        v21 = v94;
        goto LABEL_6;
      }
      v42 = *(_QWORD *)(v97 + 8 * v41);
      v43 = i + 1;
      if (!v42)
      {
        v43 = i + 2;
        if (i + 2 >= v98)
          goto LABEL_5;
        v42 = *(_QWORD *)(v97 + 8 * v43);
        if (!v42)
        {
          v43 = i + 3;
          if (i + 3 >= v98)
            goto LABEL_5;
          v42 = *(_QWORD *)(v97 + 8 * v43);
          if (!v42)
          {
            v43 = i + 4;
            if (i + 4 >= v98)
              goto LABEL_5;
            v42 = *(_QWORD *)(v97 + 8 * v43);
            if (!v42)
            {
              v43 = i + 5;
              if (i + 5 >= v98)
                goto LABEL_5;
              v42 = *(_QWORD *)(v97 + 8 * v43);
              if (!v42)
              {
                v44 = i + 6;
                if (i + 6 >= v98)
                  goto LABEL_5;
                v42 = *(_QWORD *)(v97 + 8 * v44);
                if (!v42)
                {
                  while (1)
                  {
                    v43 = v44 + 1;
                    if (__OFADD__(v44, 1))
                      goto LABEL_69;
                    if (v43 >= v98)
                      goto LABEL_5;
                    v42 = *(_QWORD *)(v97 + 8 * v43);
                    ++v44;
                    if (v42)
                      goto LABEL_51;
                  }
                }
                v43 = i + 6;
              }
            }
          }
        }
      }
LABEL_51:
      v37 = (v42 - 1) & v42;
      v109 = v43;
      v40 = __clz(__rbit64(v42)) + (v43 << 6);
    }
    v45 = *(_WORD *)(*(_QWORD *)(v107 + 48) + 2 * v40);
    v46 = *(_QWORD *)(v105 + 72);
    v48 = v101;
    v47 = v102;
    sub_23E1E2F50(*(_QWORD *)(v107 + 56) + v46 * v40, (uint64_t)&v101[*(int *)(v102 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    *v48 = v45;
    sub_23E1E4E3C((uint64_t)v48, (uint64_t)v12, &qword_254333460);
    v49 = (uint64_t)&v12[*(int *)(v47 + 48)];
    v50 = v49 + *(int *)(v106 + 20);
    v51 = *(_QWORD **)v50;
    LOWORD(v47) = *(_WORD *)(v50 + 8);
    v52 = (void *)objc_opt_self();
    v53 = objc_msgSend(v52, sel_hmf_zeroUUID);
    sub_23E536F68();

    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v100;
    v112 = v51;
    *(_QWORD *)(v54 + 32) = sub_23E538318();
    *(_QWORD *)(v54 + 40) = v55;
    LOWORD(v112) = v47;
    v56 = sub_23E538318();
    v58 = v57;
    v60 = *(_QWORD *)(v54 + 16);
    v59 = *(_QWORD *)(v54 + 24);
    if (v60 >= v59 >> 1)
      v54 = (uint64_t)sub_23E51E6C4((_QWORD *)(v59 > 1), v60 + 1, 1, (_QWORD *)v54);
    *(_QWORD *)(v54 + 16) = v60 + 1;
    v61 = v54 + 16 * v60;
    *(_QWORD *)(v61 + 32) = v56;
    *(_QWORD *)(v61 + 40) = v58;
    v62 = v110;
    v63 = (void *)sub_23E536F44();
    v64 = (void *)sub_23E5377E4();
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(v52, sel_hmf_UUIDWithNamespace_data_salts_, v63, 0, v64);

    v66 = (uint64_t)v111;
    sub_23E536F68();

    v67 = *(void (**)(char *, uint64_t))(v108 + 8);
    v68 = v103;
    v67(v62, v103);
    v24 = v104;
    sub_23E1E2F50(v49, v104, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v112 = v17;
    v71 = sub_23E1E3300(v66);
    v72 = v17[2];
    v73 = (v70 & 1) == 0;
    v74 = v72 + v73;
    if (__OFADD__(v72, v73))
    {
      __break(1u);
      goto LABEL_66;
    }
    v75 = v70;
    if (v17[3] >= v74)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v17 = v112;
        if ((v70 & 1) != 0)
          goto LABEL_30;
      }
      else
      {
        sub_23E21E56C();
        v17 = v112;
        if ((v75 & 1) != 0)
          goto LABEL_30;
      }
    }
    else
    {
      sub_23E213E08(v74, isUniquelyReferenced_nonNull_native);
      v76 = sub_23E1E3300((uint64_t)v111);
      if ((v75 & 1) != (v77 & 1))
        goto LABEL_72;
      v71 = v76;
      v17 = v112;
      if ((v75 & 1) != 0)
      {
LABEL_30:
        sub_23E23D368(v24, v17[7] + v71 * v46);
        goto LABEL_31;
      }
    }
    v17[(v71 >> 6) + 8] |= 1 << v71;
    (*(void (**)(unint64_t, char *, uint64_t))(v108 + 16))(v17[6] + *(_QWORD *)(v108 + 72) * v71, v111, v68);
    sub_23E1E2FDC(v24, v17[7] + v71 * v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v78 = v17[2];
    v79 = __OFADD__(v78, 1);
    v80 = v78 + 1;
    if (v79)
      break;
    v17[2] = v80;
    v17 = v112;
LABEL_31:
    swift_bridgeObjectRelease();
    v67(v111, v68);
    v12 = v99;
    sub_23E1E7C64((uint64_t)v99, &qword_254333460);
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238678(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238278(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3FA20, &qword_256D3FA28, (void (*)(_OWORD *))StaticEndpoint.hash(into:));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2328FC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6544636974617473;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0x6C6C6F72746E6F63;
}

uint64_t sub_23E232970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E23C6DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E232994(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23E2329A0()
{
  sub_23E23BFC8();
  return sub_23E538570();
}

uint64_t sub_23E2329C8()
{
  sub_23E23BFC8();
  return sub_23E53857C();
}

uint64_t MatterStateSnapshot.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E23BFC8();
  sub_23E5384EC();
  LOBYTE(v15) = 0;
  v8 = v13;
  sub_23E538270();
  if (!v8)
  {
    v9 = v11;
    v15 = v12;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8D0);
    sub_23E23C00C();
    sub_23E5382AC();
    v15 = v9;
    v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8E8);
    sub_23E23C090();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MatterStateSnapshot.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238678((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238278((uint64_t)v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3FA20, &qword_256D3FA28, (void (*)(_OWORD *))StaticEndpoint.hash(into:));
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t MatterStateSnapshot.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F900);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E23BFC8();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  LOBYTE(v20) = 0;
  v9 = sub_23E538144();
  v11 = v10;
  v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8D0);
  v19 = 1;
  sub_23E23C12C();
  swift_bridgeObjectRetain();
  sub_23E538180();
  v12 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8E8);
  v19 = 2;
  sub_23E23C1B0();
  v17 = v12;
  swift_bridgeObjectRetain();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v17;
  *a2 = v18;
  a2[1] = v11;
  a2[2] = v14;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E232EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238678((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238278((uint64_t)v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3FA20, &qword_256D3FA28, (void (*)(_OWORD *))StaticEndpoint.hash(into:));
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E232F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238678(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238278(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3FA20, &qword_256D3FA28, (void (*)(_OWORD *))StaticEndpoint.hash(into:));
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E233028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238678((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238278((uint64_t)v4, v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, &qword_256D3FA20, &qword_256D3FA28, (void (*)(_OWORD *))StaticEndpoint.hash(into:));
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2330E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MatterStateSnapshot.init(from:)(a1, a2);
}

uint64_t sub_23E2330F4(_QWORD *a1)
{
  return MatterStateSnapshot.encode(to:)(a1);
}

void MatterStateSnapshot.UpdateType.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23E23314C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  void *v21;
  id v22;

  sub_23E23C270(v21, v20, 0);
  v22 = objc_msgSend(v21, sel_name);
  sub_23E53755C();

  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E23C24C(v21, v20, 0);
  return 0x28656D6F68;
}

uint64_t MatterStateSnapshot.UpdateType.metricsID.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_23E2333F4
                                                        + 4 * byte_23E53B570[*(unsigned __int8 *)(v0 + 16)]))("MatterStateSnapshot.all", 23);
}

const char *sub_23E2333F4()
{
  return "MatterStateSnapshot.home";
}

const char *sub_23E233408()
{
  return "MatterStateSnapshot.limitedDevice";
}

const char *sub_23E23341C()
{
  return "MatterStateSnapshot.device";
}

__n128 sub_23E233434@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 result;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;

  v8 = *(void **)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(unsigned __int8 *)(a1 + 16);
  v12 = *a4;
  v11 = a4[1];
  v13 = a4[2];
  v33 = a4[3];
  if (!v11)
    goto LABEL_8;
  if (v10 == 2)
  {
    v31 = v9;
    sub_23E230D3C((uint64_t)v8);
    v34 = v12;
    v35.n128_u64[0] = v11;
    v35.n128_u64[1] = v13;
    v36 = v33;
    v14 = sub_23E23C868(a2, a3, (uint64_t)&v34, (uint64_t)v8, v31);
    sub_23E23C24C(v8, v9, 2);
    if (v14)
    {
      v15 = 2;
      goto LABEL_9;
    }
LABEL_8:
    sub_23E428A78();
    v32 = v11;
    v16 = v8;
    v17 = a5;
    v18 = v9;
    v19 = v12;
    v21 = v20;
    v22 = sub_23E222614(MEMORY[0x24BEE4AF8]);
    v23 = a2;
    v24 = a2;
    v14 = sub_23E39FB6C(v22, v21, (uint64_t)v24, a3);
    v12 = v19;
    v9 = v18;
    a5 = v17;
    v8 = v16;
    v15 = v10;
    v11 = v32;
    swift_bridgeObjectRelease();

    a2 = v23;
    goto LABEL_9;
  }
  if (v10 != 1)
    goto LABEL_8;
  v34 = *a4;
  v35.n128_u64[0] = v11;
  v35.n128_u64[1] = v13;
  v36 = v33;
  sub_23E23C270(v8, v9, 1);
  v14 = sub_23E23C868(a2, a3, (uint64_t)&v34, (uint64_t)v8, v9);
  sub_23E23C24C(v8, v9, 1);
  if (!v14)
    goto LABEL_8;
  v15 = 1;
LABEL_9:
  sub_23E23D3AC(v12, v11);
  sub_23E23C24C(v8, v9, v15);
  v25 = objc_msgSend(a2, sel_matterControllerID);
  v26 = sub_23E53755C();
  v28 = v27;

  sub_23E231F58(v26, v28, v14, &v34);
  v29 = v36;
  result = v35;
  *(_QWORD *)a5 = v34;
  *(__n128 *)(a5 + 8) = result;
  *(_QWORD *)(a5 + 24) = v29;
  return result;
}

BOOL static MatterStateSnapshot.CommandPayload.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MatterStateSnapshot.CommandPayload.hash(into:)()
{
  sub_23E538468();
  return sub_23E538474();
}

uint64_t MatterStateSnapshot.CommandPayload.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E233704()
{
  sub_23E53845C();
  sub_23E538468();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t sub_23E233754()
{
  sub_23E538468();
  return sub_23E538474();
}

uint64_t sub_23E233790()
{
  sub_23E53845C();
  sub_23E538468();
  sub_23E538474();
  return sub_23E5384A4();
}

uint64_t MatterStateSnapshot.write(commandPayloads:for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[145] = a4;
  v4[144] = a3;
  v4[143] = a2;
  v4[142] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543327D0);
  v4[146] = swift_task_alloc();
  v4[147] = swift_task_alloc();
  v4[148] = swift_task_alloc();
  v5 = type metadata accessor for StaticEndpoint();
  v4[149] = v5;
  v4[150] = *(_QWORD *)(v5 - 8);
  v4[151] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E233888()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 1144) + 16);
  *(_QWORD *)(v0 + 1216) = v1;
  if (v1)
  {
    v2 = (char *)(v0 + 780);
    v49 = (__int128 *)(v0 + 16);
    v50 = v0 + 272;
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 1152) + 16);
    *(_QWORD *)(v0 + 1224) = v3;
    v4 = swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 1232) = v5;
      v6 = *(_BYTE *)(v4 + v5 + 32);
      *v2 = v6;
      if (v3)
      {
        v7 = *(_QWORD *)(v0 + 1200);
        v8 = *(_DWORD *)(v7 + 80);
        *(_DWORD *)(v0 + 268) = v8;
        v9 = *(_QWORD *)(v7 + 72);
        *(_QWORD *)(v0 + 1240) = v9;
        v10 = swift_bridgeObjectRetain();
        v11 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 1248) = v11;
          v12 = *(_QWORD *)(v0 + 1208);
          v13 = *(_QWORD *)(v0 + 1192);
          sub_23E1E2F50(v10 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
          v14 = *(_QWORD *)(v12 + *(int *)(v13 + 36));
          v15 = *(_QWORD *)(v14 + 16);
          if ((v6 & 1) != 0)
          {
            if (v15)
            {
              v16 = sub_23E2112EC(10);
              if ((v17 & 1) != 0)
              {
                sub_23E22328C((__int128 *)(*(_QWORD *)(v14 + 56) + (v16 << 8)), v0 + 528);
                sub_23E22328C((__int128 *)(v0 + 528), v0 + 784);
                if (sub_23E23C5D0(v0 + 784) == 1)
                {
                  v22 = sub_23E23C5DC(v0 + 784);
                  *(_QWORD *)(v0 + 1256) = *(_QWORD *)v22;
                  *(_WORD *)(v0 + 524) = *(_WORD *)(v22 + 8);
                  *(_BYTE *)(v0 + 781) = *(_BYTE *)(v22 + 10);
                  *(_BYTE *)(v0 + 782) = *(_BYTE *)(v22 + 11);
                  v23 = sub_23E22288C((uint64_t)&unk_250EDD010);
                  sub_23E235698(v23);
                  *(_QWORD *)(v0 + 1264) = v24;
                  swift_bridgeObjectRelease();
                  sub_23E5378F8();
                  *(_QWORD *)(v0 + 1272) = sub_23E5378EC();
                  sub_23E5378B0();
                  return swift_task_switch();
                }
              }
            }
          }
          else if (v15)
          {
            v18 = sub_23E2112EC(10);
            if ((v19 & 1) != 0)
            {
              sub_23E22328C((__int128 *)(*(_QWORD *)(v14 + 56) + (v18 << 8)), (uint64_t)v49);
              sub_23E22328C(v49, v50);
              if (sub_23E23C5D0(v50) == 1)
              {
                v25 = sub_23E23C5DC(v50);
                *(_QWORD *)(v0 + 1304) = *(_QWORD *)v25;
                *(_WORD *)(v0 + 526) = *(_WORD *)(v25 + 8);
                *(_BYTE *)(v0 + 783) = *(_BYTE *)(v25 + 10);
                *(_BYTE *)(v0 + 1036) = *(_BYTE *)(v25 + 11);
                v26 = sub_23E22288C((uint64_t)&unk_250EDD048);
                sub_23E235698(v26);
                *(_QWORD *)(v0 + 1312) = v27;
                swift_bridgeObjectRelease();
                sub_23E5378F8();
                *(_QWORD *)(v0 + 1320) = sub_23E5378EC();
                sub_23E5378B0();
                return swift_task_switch();
              }
            }
          }
          v20 = *(_QWORD *)(v0 + 1224);
          v21 = *(_QWORD *)(v0 + 1248) + 1;
          sub_23E1E2FA0(*(_QWORD *)(v0 + 1208), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
          if (v21 == v20)
          {
            swift_bridgeObjectRelease();
            v5 = *(_QWORD *)(v0 + 1232);
            v1 = *(_QWORD *)(v0 + 1216);
            break;
          }
          v11 = *(_QWORD *)(v0 + 1248) + 1;
          v9 = *(_QWORD *)(v0 + 1240);
          LOBYTE(v8) = *(_BYTE *)(v0 + 268);
          v6 = *v2;
          v10 = *(_QWORD *)(v0 + 1152);
        }
      }
      if (++v5 == v1)
        break;
      v3 = *(_QWORD *)(v0 + 1224);
      v4 = *(_QWORD *)(v0 + 1144);
    }
    swift_bridgeObjectRelease();
  }
  v28 = *(_QWORD *)(v0 + 1184);
  sub_23E1E7C20(*(_QWORD *)(v0 + 1160), v28, &qword_2543327D0);
  v29 = type metadata accessor for StaticHome();
  *(_QWORD *)(v0 + 1352) = v29;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
  *(_QWORD *)(v0 + 1360) = v30;
  if (v30(v28, 1, v29) == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 1184), &qword_2543327D0);
    if (qword_254332E00 != -1)
      swift_once();
    v31 = *(_QWORD *)(v0 + 1176);
    v32 = *(_QWORD *)(v0 + 1160);
    v33 = sub_23E5371A8();
    __swift_project_value_buffer(v33, (uint64_t)qword_254333308);
    sub_23E1E7C20(v32, v31, &qword_2543327D0);
    v34 = sub_23E537190();
    v35 = sub_23E537B08();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
      v37 = *(_QWORD *)(v0 + 1352);
      v38 = *(_QWORD *)(v0 + 1176);
      v39 = *(_QWORD *)(v0 + 1168);
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v51 = v41;
      *(_DWORD *)v40 = 136315138;
      sub_23E1E7C20(v38, v39, &qword_2543327D0);
      if (v36(v39, 1, v37) == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 1168), &qword_2543327D0);
        v42 = 0;
        v43 = 0xE000000000000000;
      }
      else
      {
        v45 = *(_QWORD *)(v0 + 1168);
        v46 = (uint64_t *)(v45 + *(int *)(*(_QWORD *)(v0 + 1352) + 20));
        v42 = *v46;
        v43 = v46[1];
        swift_bridgeObjectRetain();
        sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      }
      v47 = *(_QWORD *)(v0 + 1176);
      *(_QWORD *)(v0 + 1128) = sub_23E1FD768(v42, v43, &v51);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E7C64(v47, &qword_2543327D0);
      _os_log_impl(&dword_23E1DF000, v34, v35, "Not able to get HMHome for %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v41, -1, -1);
      MEMORY[0x24264FEBC](v40, -1, -1);
    }
    else
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 1176), &qword_2543327D0);
    }

    v48 = *(_OWORD **)(v0 + 1136);
    *v48 = 0u;
    v48[1] = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 1368) = sub_23E5378F8();
    *(_QWORD *)(v0 + 1376) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E233EA8()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 781);
  v2 = *(_WORD *)(v0 + 524);
  v3 = *(_QWORD *)(v0 + 1256);
  swift_release();
  sub_23E1E335C(0, (unint64_t *)&qword_256D3F930);
  *(_QWORD *)(v0 + 1112) = v3;
  *(_WORD *)(v0 + 1120) = v2;
  *(_BYTE *)(v0 + 1122) = v1;
  *(_QWORD *)(v0 + 1280) = sub_23E34F1E8(v0 + 1112);
  return swift_task_switch();
}

uint64_t sub_23E233F34()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int);

  v1 = *(_QWORD *)(v0 + 1264);
  v2 = *(unsigned __int8 *)(v0 + 782);
  v3 = *(unsigned __int8 *)(v0 + 781);
  v4 = *(unsigned __int16 *)(v0 + 524);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 1288) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))((char *)&dword_256D3F940
                                                                                         + dword_256D3F940);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1296) = v6;
  *v6 = v0;
  v6[1] = sub_23E233FF0;
  if (v2)
    v7 = 0x1000000;
  else
    v7 = 0;
  return v9(28271, 0xE200000000000000, *(_QWORD *)(v0 + 1280), (uint64_t)&unk_256D3F948, v5, *(_QWORD *)(v0 + 1256), v7 | v4 | (v3 << 16));
}

uint64_t sub_23E233FF0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 1280);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E23406C()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = (_BYTE *)(v0 + 780);
  v49 = (__int128 *)(v0 + 16);
  v50 = v0 + 272;
  while (1)
  {
    v2 = *(_QWORD *)(v0 + 1224);
    v3 = *(_QWORD *)(v0 + 1248) + 1;
    sub_23E1E2FA0(*(_QWORD *)(v0 + 1208), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    if (v3 == v2)
      break;
    v13 = *(_QWORD *)(v0 + 1248) + 1;
    v11 = *(_QWORD *)(v0 + 1240);
    LOBYTE(v10) = *(_BYTE *)(v0 + 268);
    v8 = *v1;
    v12 = *(_QWORD *)(v0 + 1152);
LABEL_8:
    *(_QWORD *)(v0 + 1248) = v13;
    v14 = *(_QWORD *)(v0 + 1208);
    v15 = *(_QWORD *)(v0 + 1192);
    sub_23E1E2F50(v12 + ((v10 + 32) & ~(unint64_t)v10) + v11 * v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v16 = *(_QWORD *)(v14 + *(int *)(v15 + 36));
    v17 = *(_QWORD *)(v16 + 16);
    if (v8)
    {
      if (v17)
      {
        v18 = sub_23E2112EC(10);
        if ((v19 & 1) != 0)
        {
          sub_23E22328C((__int128 *)(*(_QWORD *)(v16 + 56) + (v18 << 8)), v0 + 528);
          sub_23E22328C((__int128 *)(v0 + 528), v0 + 784);
          if (sub_23E23C5D0(v0 + 784) == 1)
          {
            v46 = sub_23E23C5DC(v0 + 784);
            *(_QWORD *)(v0 + 1256) = *(_QWORD *)v46;
            *(_WORD *)(v0 + 524) = *(_WORD *)(v46 + 8);
            *(_BYTE *)(v0 + 781) = *(_BYTE *)(v46 + 10);
            *(_BYTE *)(v0 + 782) = *(_BYTE *)(v46 + 11);
            v47 = sub_23E22288C((uint64_t)&unk_250EDD010);
            sub_23E235698(v47);
            *(_QWORD *)(v0 + 1264) = v48;
            swift_bridgeObjectRelease();
            sub_23E5378F8();
            *(_QWORD *)(v0 + 1272) = sub_23E5378EC();
            sub_23E5378B0();
            return swift_task_switch();
          }
        }
      }
    }
    else if (v17)
    {
      v20 = sub_23E2112EC(10);
      if ((v21 & 1) != 0)
      {
        sub_23E22328C((__int128 *)(*(_QWORD *)(v16 + 56) + (v20 << 8)), (uint64_t)v49);
        sub_23E22328C(v49, v50);
        if (sub_23E23C5D0(v50) == 1)
        {
          v22 = sub_23E23C5DC(v50);
          *(_QWORD *)(v0 + 1304) = *(_QWORD *)v22;
          *(_WORD *)(v0 + 526) = *(_WORD *)(v22 + 8);
          *(_BYTE *)(v0 + 783) = *(_BYTE *)(v22 + 10);
          *(_BYTE *)(v0 + 1036) = *(_BYTE *)(v22 + 11);
          v23 = sub_23E22288C((uint64_t)&unk_250EDD048);
          sub_23E235698(v23);
          *(_QWORD *)(v0 + 1312) = v24;
          swift_bridgeObjectRelease();
          sub_23E5378F8();
          *(_QWORD *)(v0 + 1320) = sub_23E5378EC();
          sub_23E5378B0();
          return swift_task_switch();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 1232);
  v5 = *(_QWORD *)(v0 + 1216) - 1;
  while (v5 != v4)
  {
    v6 = *(_QWORD *)(v0 + 1144) + v4++;
    *(_QWORD *)(v0 + 1232) = v4;
    v7 = *(_QWORD *)(v0 + 1224);
    v8 = *(unsigned __int8 *)(v6 + 33);
    *v1 = v8;
    if (v7)
    {
      v9 = *(_QWORD *)(v0 + 1200);
      v10 = *(_DWORD *)(v9 + 80);
      *(_DWORD *)(v0 + 268) = v10;
      v11 = *(_QWORD *)(v9 + 72);
      *(_QWORD *)(v0 + 1240) = v11;
      v12 = swift_bridgeObjectRetain();
      v13 = 0;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v0 + 1184);
  sub_23E1E7C20(*(_QWORD *)(v0 + 1160), v25, &qword_2543327D0);
  v26 = type metadata accessor for StaticHome();
  *(_QWORD *)(v0 + 1352) = v26;
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48);
  *(_QWORD *)(v0 + 1360) = v27;
  if (v27(v25, 1, v26) != 1)
  {
    *(_QWORD *)(v0 + 1368) = sub_23E5378F8();
    *(_QWORD *)(v0 + 1376) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  sub_23E1E7C64(*(_QWORD *)(v0 + 1184), &qword_2543327D0);
  if (qword_254332E00 != -1)
    swift_once();
  v28 = *(_QWORD *)(v0 + 1176);
  v29 = *(_QWORD *)(v0 + 1160);
  v30 = sub_23E5371A8();
  __swift_project_value_buffer(v30, (uint64_t)qword_254333308);
  sub_23E1E7C20(v29, v28, &qword_2543327D0);
  v31 = sub_23E537190();
  v32 = sub_23E537B08();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
    v34 = *(_QWORD *)(v0 + 1352);
    v35 = *(_QWORD *)(v0 + 1176);
    v36 = *(_QWORD *)(v0 + 1168);
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v51 = v38;
    *(_DWORD *)v37 = 136315138;
    sub_23E1E7C20(v35, v36, &qword_2543327D0);
    if (v33(v36, 1, v34) == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 1168), &qword_2543327D0);
      v39 = 0;
      v40 = 0xE000000000000000;
    }
    else
    {
      v42 = *(_QWORD *)(v0 + 1168);
      v43 = (uint64_t *)(v42 + *(int *)(*(_QWORD *)(v0 + 1352) + 20));
      v39 = *v43;
      v40 = v43[1];
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    }
    v44 = *(_QWORD *)(v0 + 1176);
    *(_QWORD *)(v0 + 1128) = sub_23E1FD768(v39, v40, &v51);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E7C64(v44, &qword_2543327D0);
    _os_log_impl(&dword_23E1DF000, v31, v32, "Not able to get HMHome for %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v38, -1, -1);
    MEMORY[0x24264FEBC](v37, -1, -1);
  }
  else
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 1176), &qword_2543327D0);
  }

  v45 = *(_OWORD **)(v0 + 1136);
  *v45 = 0u;
  v45[1] = 0u;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E23466C()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 783);
  v2 = *(_WORD *)(v0 + 526);
  v3 = *(_QWORD *)(v0 + 1304);
  swift_release();
  sub_23E1E335C(0, (unint64_t *)&qword_256D3F930);
  *(_QWORD *)(v0 + 1096) = v3;
  *(_WORD *)(v0 + 1104) = v2;
  *(_BYTE *)(v0 + 1106) = v1;
  *(_QWORD *)(v0 + 1328) = sub_23E34F1E8(v0 + 1096);
  return swift_task_switch();
}

uint64_t sub_23E2346F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int);

  v1 = *(_QWORD *)(v0 + 1312);
  v2 = *(unsigned __int8 *)(v0 + 1036);
  v3 = *(unsigned __int8 *)(v0 + 783);
  v4 = *(unsigned __int16 *)(v0 + 526);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 1336) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))((char *)&dword_256D3F940
                                                                                         + dword_256D3F940);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1344) = v6;
  *v6 = v0;
  v6[1] = sub_23E2347B8;
  if (v2)
    v7 = 0x1000000;
  else
    v7 = 0;
  return v9(6710895, 0xE300000000000000, *(_QWORD *)(v0 + 1328), (uint64_t)&unk_256D3F938, v5, *(_QWORD *)(v0 + 1304), v7 | v4 | (v3 << 16));
}

uint64_t sub_23E2347B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 1328);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E234834()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E234898()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1384) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2348F8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 1392) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E234940()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1400) = sub_23E536F44();
  *(_QWORD *)(v0 + 1408) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2349AC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[175];
  v2 = (void *)v0[174];
  swift_release();
  v0[177] = objc_msgSend(v2, sel_homeFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E234A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 1416);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 1184), (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  if (v1)
  {
    *(_QWORD *)(v0 + 1424) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    if (qword_254332E00 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 1176);
    v4 = *(_QWORD *)(v0 + 1160);
    v5 = sub_23E5371A8();
    __swift_project_value_buffer(v5, (uint64_t)qword_254333308);
    sub_23E1E7C20(v4, v3, &qword_2543327D0);
    v6 = sub_23E537190();
    v7 = sub_23E537B08();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
      v9 = *(_QWORD *)(v0 + 1352);
      v10 = *(_QWORD *)(v0 + 1176);
      v11 = *(_QWORD *)(v0 + 1168);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_23E1E7C20(v10, v11, &qword_2543327D0);
      if (v8(v11, 1, v9) == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 1168), &qword_2543327D0);
        v14 = 0;
        v15 = 0xE000000000000000;
      }
      else
      {
        v16 = *(_QWORD *)(v0 + 1168);
        v17 = (uint64_t *)(v16 + *(int *)(*(_QWORD *)(v0 + 1352) + 20));
        v14 = *v17;
        v15 = v17[1];
        swift_bridgeObjectRetain();
        sub_23E1E2FA0(v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      }
      v18 = *(_QWORD *)(v0 + 1176);
      *(_QWORD *)(v0 + 1128) = sub_23E1FD768(v14, v15, &v20);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E7C64(v18, &qword_2543327D0);
      _os_log_impl(&dword_23E1DF000, v6, v7, "Not able to get HMHome for %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);
    }
    else
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 1176), &qword_2543327D0);
    }

    v19 = *(_OWORD **)(v0 + 1136);
    *v19 = 0u;
    v19[1] = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E234CFC()
{
  swift_release();
  if (qword_254332458 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E234D60()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 1432) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E234DC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = *(void **)(v0 + 1416);
  swift_release();
  *(_QWORD *)(v0 + 1072) = v1;
  *(_QWORD *)(v0 + 1080) = 0;
  *(_BYTE *)(v0 + 1088) = 0;
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1440) = v3;
  *v3 = v0;
  v3[1] = sub_23E234E54;
  return sub_23E2C2960(v0 + 1040, v0 + 1072, *(_QWORD *)(v0 + 1416));
}

uint64_t sub_23E234E54()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 1416);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E234EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 1136);

  v2 = *(_QWORD *)(v0 + 1064);
  v3 = *(_OWORD *)(v0 + 1048);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 1040);
  *(_OWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 24) = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void MatterStateSnapshot.tileInfo(for:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v48;
  uint64_t *v49;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t *v56;
  uint64_t v57;
  __int16 v58;
  char v59;
  uint64_t v60;

  v56 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F950);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v50[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = type metadata accessor for StaticEndpoint();
  v7 = MEMORY[0x24BDAC7A8](v53);
  v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v50[-v10];
  v54 = type metadata accessor for StaticMatterDevice();
  v12 = *(_QWORD *)(v54 - 8);
  v13 = MEMORY[0x24BDAC7A8](v54);
  v15 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v50[-v16];
  v18 = *(_QWORD *)a1;
  v55 = *(unsigned __int16 *)(a1 + 8);
  v19 = *(_BYTE *)(a1 + 10);
  v20 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_23E211288(v18), (v22 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v12 + 72) * v21, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    sub_23E1E2FDC((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    if ((v19 & 1) == 0)
    {
      v23 = swift_bridgeObjectRetain();
      v24 = v55;
      sub_23E2319A4(v23, v55, (uint64_t)v6);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v6, 1, v25) != 1)
      {
        sub_23E1E2FDC((uint64_t)&v6[*(int *)(v25 + 48)], (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        swift_bridgeObjectRelease();
        sub_23E1E2FDC((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        v46 = v56;
        v56[3] = v53;
        v46[4] = sub_23E1EE1C4(&qword_256D3F960, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v46);
        sub_23E1E2FDC((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
        return;
      }
      sub_23E1E7C64((uint64_t)v6, &qword_256D3F950);
      if (qword_254332E00 != -1)
        swift_once();
      v26 = sub_23E5371A8();
      __swift_project_value_buffer(v26, (uint64_t)qword_254333308);
      swift_bridgeObjectRetain();
      v27 = sub_23E537190();
      v28 = sub_23E537B08();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        v60 = v52;
        *(_DWORD *)v30 = 136315650;
        v51 = v29;
        v57 = sub_23E1FD768(0x6F666E49656C6974, 0xEE00293A726F6628, &v60);
        sub_23E537CF4();
        *(_WORD *)(v30 + 12) = 2080;
        v57 = v18;
        v58 = v24;
        v59 = 0;
        v31 = MatterTilePath.description.getter();
        v57 = sub_23E1FD768(v31, v32, &v60);
        sub_23E537CF4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        v33 = sub_23E53746C();
        v35 = v34;
        swift_bridgeObjectRelease();
        v57 = sub_23E1FD768(v33, v35, &v60);
        sub_23E537CF4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23E1DF000, v27, (os_log_type_t)v51, "%s Failed to find static endpoint for path %s in endpoints %s", (uint8_t *)v30, 0x20u);
        v36 = v52;
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v36, -1, -1);
        MEMORY[0x24264FEBC](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    v48 = v56;
    v56[3] = v54;
    v48[4] = sub_23E1EE1C4(&qword_256D3F958, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
    v49 = __swift_allocate_boxed_opaque_existential_1(v48);
    sub_23E1E2FDC((uint64_t)v17, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  }
  else
  {
    v37 = v18;
    if (qword_254332E00 != -1)
      swift_once();
    v38 = sub_23E5371A8();
    __swift_project_value_buffer(v38, (uint64_t)qword_254333308);
    v39 = sub_23E537190();
    v40 = sub_23E537B08();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v60 = v42;
      *(_DWORD *)v41 = 136315394;
      v57 = sub_23E1FD768(0x6F666E49656C6974, 0xEE00293A726F6628, &v60);
      sub_23E537CF4();
      *(_WORD *)(v41 + 12) = 2080;
      v57 = v37;
      v58 = v55;
      v59 = v19;
      v43 = MatterTilePath.description.getter();
      v57 = sub_23E1FD768(v43, v44, &v60);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v39, v40, "%s Failed to get static device for path %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v42, -1, -1);
      MEMORY[0x24264FEBC](v41, -1, -1);
    }

    v45 = v56;
    v56[4] = 0;
    *(_OWORD *)v45 = 0u;
    *((_OWORD *)v45 + 1) = 0u;
  }
}

uint64_t MatterStateSnapshot.accessoryDetails(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryDetails(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t MatterStateSnapshot.tilePaths.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E231C54(v0);
  swift_bridgeObjectRelease();
  v2 = sub_23E4FDB48(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23E235660()
{
  unint64_t v0;

  v0 = sub_23E222614(MEMORY[0x24BEE4AF8]);
  return sub_23E231F58(0x7974706D65, 0xE500000000000000, v0, &qword_254334BE8);
}

void sub_23E235698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;

  v27 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v7 | (v5 << 6); ; i = __clz(__rbit64(v10)) + (v5 << 6))
  {
    v12 = *(_QWORD *)(a1 + 56) + 16 * i;
    v13 = *(_QWORD *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    v15 = (void *)sub_23E5384B0();
    v16 = (void *)sub_23E5384C8();
    v17 = (void *)sub_23E5384C8();
    v18 = objc_msgSend((id)objc_opt_self(), sel_attributePathWithEndpointID_clusterID_attributeID_, v15, v16, v17);

    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v20;
    *(_QWORD *)(inited + 48) = v18;
    *(_QWORD *)(inited + 56) = sub_23E53755C();
    *(_QWORD *)(inited + 64) = v21;
    v22 = v18;
    sub_23E255778(v13, v14);
    sub_23E1E335C(0, (unint64_t *)&qword_254333370);
    v23 = sub_23E537454();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 72) = v23;
    v24 = sub_23E20D7EC(inited);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_23E51EF84(0, v6[2] + 1, 1, v6);
    v26 = v6[2];
    v25 = v6[3];
    if (v26 >= v25 >> 1)
      v6 = sub_23E51EF84((_QWORD *)(v25 > 1), v26 + 1, 1, v6);
    v6[2] = v26 + 1;
    v6[v26 + 4] = v24;

    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v28)
      goto LABEL_27;
    v10 = *(_QWORD *)(v27 + 8 * v9);
    ++v5;
    if (!v10)
    {
      v5 = v9 + 1;
      if (v9 + 1 >= v28)
        goto LABEL_27;
      v10 = *(_QWORD *)(v27 + 8 * v5);
      if (!v10)
      {
        v5 = v9 + 2;
        if (v9 + 2 >= v28)
          goto LABEL_27;
        v10 = *(_QWORD *)(v27 + 8 * v5);
        if (!v10)
        {
          v5 = v9 + 3;
          if (v9 + 3 >= v28)
            goto LABEL_27;
          v10 = *(_QWORD *)(v27 + 8 * v5);
          if (!v10)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v10 - 1) & v10;
  }
  v11 = v9 + 4;
  if (v11 >= v28)
  {
LABEL_27:
    swift_release();
    sub_23E3CF0F4((uint64_t)v6);
    swift_bridgeObjectRelease();
    return;
  }
  v10 = *(_QWORD *)(v27 + 8 * v11);
  if (v10)
  {
    v5 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v5 >= v28)
      goto LABEL_27;
    v10 = *(_QWORD *)(v27 + 8 * v5);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_23E235A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;

  v26 = a1 + 64;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v3)
    goto LABEL_5;
LABEL_4:
  v6 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  for (i = v6 | (v4 << 6); ; i = __clz(__rbit64(v9)) + (v4 << 6))
  {
    v11 = *(_QWORD *)(a1 + 56) + 16 * i;
    v12 = *(_QWORD *)v11;
    v13 = *(_BYTE *)(v11 + 8);
    v14 = (void *)sub_23E5384B0();
    v15 = (void *)sub_23E5384C8();
    v16 = (void *)sub_23E5384C8();
    v17 = objc_msgSend((id)objc_opt_self(), sel_attributePathWithEndpointID_clusterID_attributeID_, v14, v15, v16);

    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v19;
    *(_QWORD *)(inited + 48) = v17;
    *(_QWORD *)(inited + 56) = sub_23E53755C();
    *(_QWORD *)(inited + 64) = v20;
    v21 = v17;
    sub_23E255778(v12, v13);
    sub_23E1E335C(0, (unint64_t *)&qword_254333370);
    v22 = sub_23E537454();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 72) = v22;
    v23 = sub_23E20D7EC(inited);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_23E51EF84(0, v5[2] + 1, 1, v5);
    v25 = v5[2];
    v24 = v5[3];
    if (v25 >= v24 >> 1)
      v5 = sub_23E51EF84((_QWORD *)(v24 > 1), v25 + 1, 1, v5);
    v5[2] = v25 + 1;
    v5[v25 + 4] = v23;

    if (v3)
      goto LABEL_4;
LABEL_5:
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v27)
      goto LABEL_27;
    v9 = *(_QWORD *)(v26 + 8 * v8);
    ++v4;
    if (!v9)
    {
      v4 = v8 + 1;
      if (v8 + 1 >= v27)
        goto LABEL_27;
      v9 = *(_QWORD *)(v26 + 8 * v4);
      if (!v9)
      {
        v4 = v8 + 2;
        if (v8 + 2 >= v27)
          goto LABEL_27;
        v9 = *(_QWORD *)(v26 + 8 * v4);
        if (!v9)
        {
          v4 = v8 + 3;
          if (v8 + 3 >= v27)
            goto LABEL_27;
          v9 = *(_QWORD *)(v26 + 8 * v4);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    v3 = (v9 - 1) & v9;
  }
  v10 = v8 + 4;
  if (v10 >= v27)
  {
LABEL_27:
    swift_release();
    sub_23E3CF0F4((uint64_t)v5);
    swift_bridgeObjectRelease();
    return;
  }
  v9 = *(_QWORD *)(v26 + 8 * v10);
  if (v9)
  {
    v4 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v4 >= v27)
      goto LABEL_27;
    v9 = *(_QWORD *)(v26 + 8 * v4);
    ++v10;
    if (v9)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_23E235DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  *(_DWORD *)(v7 + 160) = a7;
  *(_QWORD *)(v7 + 120) = a5;
  *(_QWORD *)(v7 + 128) = a6;
  *(_QWORD *)(v7 + 104) = a3;
  *(_QWORD *)(v7 + 112) = a4;
  *(_QWORD *)(v7 + 88) = a1;
  *(_QWORD *)(v7 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_23E235DCC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD *v10;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(id);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int16 v27;
  char v28;

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v19 = *(_QWORD *)(v0 + 88);
    v4 = *(_DWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315394;
    v23 = v20;
    v24 = 0xD000000000000013;
    v25 = 0x800000023E563160;
    v26 = v5;
    v27 = v4;
    v28 = BYTE2(v4);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_23E1FD768(0xD000000000000013, 0x800000023E563160, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v19, v6, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v20, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v8 = *(void **)(v0 + 104);
  if (v8)
  {
    v21 = (uint64_t (*)(id))(**(int **)(v0 + 112) + *(_QWORD *)(v0 + 112));
    v9 = v8;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v10;
    *v10 = v0;
    v10[1] = sub_23E236230;
    return v21(v9);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v12 = sub_23E537190();
    v13 = sub_23E537B08();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = *(_DWORD *)(v0 + 160);
      v15 = *(_QWORD *)(v0 + 128);
      v16 = *(_QWORD *)(v0 + 96);
      v22 = *(_QWORD *)(v0 + 88);
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v23 = v18;
      v24 = 0xD000000000000013;
      v25 = 0x800000023E563160;
      v26 = v15;
      v27 = v14;
      v28 = BYTE2(v14);
      ClusterPath.description.getter();
      sub_23E537628();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = sub_23E1FD768(v24, v25, &v23);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 24) = sub_23E1FD768(v22, v16, &v23);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v12, v13, "%s: tried running command %s but cluster was nil", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v18, -1, -1);
      MEMORY[0x24264FEBC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E236230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E236294()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v11;
  uint64_t v12[4];
  __int16 v13;
  char v14;

  swift_bridgeObjectRetain_n();
  v1 = sub_23E537190();
  v2 = sub_23E537B20();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_DWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 96);
    v11 = *(void **)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 88);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315394;
    v12[0] = v8;
    v12[1] = 0xD000000000000013;
    v12[2] = 0x800000023E563160;
    v12[3] = v4;
    v13 = v3;
    v14 = BYTE2(v3);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = sub_23E1FD768(0xD000000000000013, 0x800000023E563160, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_23E1FD768(v6, v5, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);

  }
  else
  {
    v9 = *(void **)(v0 + 104);
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E236494()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19[4];
  __int16 v20;
  char v21;

  v1 = *(void **)(v0 + 152);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = *(_DWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 96);
    v18 = *(void **)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    v10 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315650;
    v19[0] = v17;
    v19[1] = 0xD000000000000013;
    v19[2] = 0x800000023E563160;
    v19[3] = v8;
    v20 = v7;
    v21 = BYTE2(v7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23E1FD768(0xD000000000000013, 0x800000023E563160, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_23E1FD768(v15, v9, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 22) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v12;
    sub_23E537CF4();
    *v16 = v12;

    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 152);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E236774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[15] = a5;
  v6[16] = v5;
  v6[13] = a3;
  v6[14] = a4;
  v6[11] = a1;
  v6[12] = a2;
  return swift_task_switch();
}

uint64_t sub_23E236794()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(id);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[2];

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 136) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v20 = *(_QWORD *)(v0 + 88);
    v4 = *(uint64_t **)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v23 = v7;
    v24 = 0xD00000000000001ALL;
    v8 = *v4;
    v25 = 0x800000023E563140;
    v26[0] = v8;
    *(_DWORD *)((char *)v26 + 7) = *(_DWORD *)((char *)v4 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v20, v5, &v23);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 104);
  if (v9)
  {
    v21 = (uint64_t (*)(id))(**(int **)(v0 + 112) + *(_QWORD *)(v0 + 112));
    v10 = v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v11;
    *v11 = v0;
    v11[1] = sub_23E236BE8;
    return v21(v10);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_23E537190();
    v14 = sub_23E537B08();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(uint64_t **)(v0 + 128);
      v16 = *(_QWORD *)(v0 + 96);
      v22 = *(_QWORD *)(v0 + 88);
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v23 = v18;
      v24 = 0xD00000000000001ALL;
      v19 = *v15;
      v25 = 0x800000023E563140;
      v26[0] = v19;
      *(_DWORD *)((char *)v26 + 7) = *(_DWORD *)((char *)v15 + 7);
      ClusterPath.description.getter();
      sub_23E537628();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = sub_23E1FD768(v24, v25, &v23);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 24) = sub_23E1FD768(v22, v16, &v23);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v13, v14, "%s: tried running command %s but cluster was nil", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v18, -1, -1);
      MEMORY[0x24264FEBC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E236BE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E236C4C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v11;
  uint64_t v12[3];
  _QWORD v13[2];

  swift_bridgeObjectRetain_n();
  v1 = sub_23E537190();
  v2 = sub_23E537B20();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(uint64_t **)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 96);
    v11 = *(void **)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v12[0] = v7;
    v12[1] = 0xD00000000000001ALL;
    v8 = *v3;
    v12[2] = 0x800000023E563140;
    v13[0] = v8;
    *(_DWORD *)((char *)v13 + 7) = *(_DWORD *)((char *)v3 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 64) = sub_23E1FD768(v5, v4, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);

  }
  else
  {
    v9 = *(void **)(v0 + 104);
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E236E48()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19[3];
  _QWORD v20[2];

  v1 = *(void **)(v0 + 152);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = *(uint64_t **)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 96);
    v18 = *(void **)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 88);
    v9 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315650;
    v19[0] = v17;
    v19[1] = 0xD00000000000001ALL;
    v10 = *v7;
    v19[2] = 0x800000023E563140;
    v20[0] = v10;
    *(_DWORD *)((char *)v20 + 7) = *(_DWORD *)((char *)v7 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_23E1FD768(v15, v8, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v12;
    sub_23E537CF4();
    *v16 = v12;

    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 152);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E237124(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char v35;
  int64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v4 = type metadata accessor for StaticCharacteristic();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333240);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v46 = v15 & v13;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v37 = v41 - 1;
  v43 = a2;
  swift_bridgeObjectRetain();
  v44 = 0;
  v40 = v10;
  v39 = v12;
  if (v46)
  {
    v16 = __clz(__rbit64(v46));
    v46 &= v46 - 1;
    v17 = v16 | (v44 << 6);
LABEL_5:
    v18 = *(_BYTE *)(*(_QWORD *)(v43 + 48) + v17);
    v19 = *(_QWORD *)(v43 + 56) + *(_QWORD *)(v42 + 72) * v17;
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
    sub_23E1E2F50(v19, (uint64_t)&v10[*(int *)(v20 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    *v10 = v18;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 0, 1, v20);
    goto LABEL_22;
  }
  v21 = v44 + 1;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
LABEL_26:
    __break(1u);
    JUMPOUT(0x23E237740);
  }
  if (v21 < v41)
  {
    v22 = *(_QWORD *)(v38 + 8 * v21);
    if (v22)
    {
LABEL_9:
      v46 = (v22 - 1) & v22;
      v17 = __clz(__rbit64(v22)) + (v21 << 6);
      v44 = v21;
      goto LABEL_5;
    }
    v23 = v44 + 2;
    ++v44;
    if (v21 + 1 < v41)
    {
      v22 = *(_QWORD *)(v38 + 8 * v23);
      if (v22)
      {
        ++v21;
        goto LABEL_9;
      }
      v24 = v21 + 2;
      v44 = v21 + 1;
      if (v21 + 2 < v41)
      {
        v22 = *(_QWORD *)(v38 + 8 * v24);
        if (v22)
        {
          v21 += 2;
          goto LABEL_9;
        }
        while (1)
        {
          v21 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_26;
          if (v21 >= v41)
            break;
          v22 = *(_QWORD *)(v38 + 8 * v21);
          ++v24;
          if (v22)
            goto LABEL_9;
        }
        v44 = v37;
      }
    }
  }
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
  v46 = 0;
LABEL_22:
  sub_23E1E4E3C((uint64_t)v10, (uint64_t)v12, &qword_254333240);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v12, 1, v26) != 1)
  {
    v45 = 0;
    v27 = (uint64_t)&v12[*(int *)(v26 + 48)];
    v28 = *v12;
    v29 = sub_23E1E2FDC(v27, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v30 = *((_QWORD *)a1 + 8);
    v31 = a1[1];
    v49 = *a1;
    v50 = v31;
    v32 = a1[3];
    v51 = a1[2];
    v52 = v32;
    v53 = v30;
    LOBYTE(v47) = v28;
    CharacteristicKind.rawValue.getter(v29);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v33 = sub_23E5374D8();
    LOBYTE(v47) = v6[*(int *)(v4 + 20)];
    CharacteristicKind.rawValue.getter(v33);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v34 = &v6[*(int *)(v4 + 24)];
    v35 = v34[16];
    v47 = *(_OWORD *)v34;
    LOBYTE(v48) = v35;
    CharacteristicKind.Value.hash(into:)();
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    __asm { BR              X10 }
  }
  swift_release();
  return sub_23E538468();
}

uint64_t sub_23E237750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _OWORD v64[4];
  uint64_t v65;

  v58 = a1;
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v61 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F990);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v52 - v10;
  v12 = *(_QWORD *)(a2 + 64);
  v54 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v55 = (unint64_t)(v13 + 63) >> 6;
  v56 = a2;
  v53 = v55 - 1;
  swift_bridgeObjectRetain();
  v16 = 0;
  v59 = 0;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v19 = (v15 - 1) & v15;
      v20 = v18 | (v59 << 6);
LABEL_8:
      v21 = v56;
      (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v9, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v61 + 72) * v20, v60);
      v22 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 32 * v20);
      v23 = *v22;
      v24 = v22[1];
      v25 = (void *)v22[2];
      v26 = (void *)v22[3];
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
      v28 = &v9[*(int *)(v27 + 48)];
      *(_QWORD *)v28 = v23;
      *((_QWORD *)v28 + 1) = v24;
      *((_QWORD *)v28 + 2) = v25;
      *((_QWORD *)v28 + 3) = v26;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v9, 0, 1, v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23E223038(v25);
      sub_23E223038(v26);
      goto LABEL_25;
    }
    v29 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      JUMPOUT(0x23E237CC8);
    }
    if (v29 < v55)
    {
      v30 = *(_QWORD *)(v54 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v59 + 2;
      ++v59;
      if (v29 + 1 < v55)
      {
        v30 = *(_QWORD *)(v54 + 8 * v31);
        if (v30)
        {
          ++v29;
LABEL_12:
          v19 = (v30 - 1) & v30;
          v20 = __clz(__rbit64(v30)) + (v29 << 6);
          v59 = v29;
          goto LABEL_8;
        }
        v32 = v29 + 2;
        v59 = v29 + 1;
        if (v29 + 2 < v55)
        {
          v30 = *(_QWORD *)(v54 + 8 * v32);
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          while (1)
          {
            v29 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_38;
            if (v29 >= v55)
              break;
            v30 = *(_QWORD *)(v54 + 8 * v29);
            ++v32;
            if (v30)
              goto LABEL_12;
          }
          v59 = v53;
        }
      }
    }
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
    v19 = 0;
LABEL_25:
    sub_23E1E4E3C((uint64_t)v9, (uint64_t)v11, &qword_256D3F990);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v11, 1, v34) == 1)
      break;
    v62 = v19;
    v63 = v16;
    v35 = v9;
    v36 = (uint64_t *)&v11[*(int *)(v34 + 48)];
    v37 = v61;
    v38 = v57;
    v39 = v11;
    v40 = v11;
    v41 = v60;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v57, v40, v60);
    v43 = *v36;
    v42 = v36[1];
    v44 = (void *)v36[2];
    v17 = v36[3];
    v45 = *(_QWORD *)(v58 + 64);
    v46 = *(_OWORD *)(v58 + 16);
    v64[0] = *(_OWORD *)v58;
    v64[1] = v46;
    v47 = *(_OWORD *)(v58 + 48);
    v64[2] = *(_OWORD *)(v58 + 32);
    v64[3] = v47;
    v65 = v45;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v41);
    swift_bridgeObjectRetain();
    sub_23E26121C((uint64_t)v64, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23E261010((uint64_t)v64, v42);
    swift_bridgeObjectRelease();
    switch((unint64_t)v44)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
        sub_23E538468();
        break;
      default:
        sub_23E538468();
        v48 = v44;
        sub_23E537C64();
        sub_23E223048(v44);
        break;
    }
    v9 = v35;
    v11 = v39;
    v15 = v62;
    v49 = v63;
    switch(v17)
    {
      case 0:
        sub_23E538468();
        v17 = 0;
        break;
      case 1:
        sub_23E538468();
        v17 = 1;
        break;
      case 2:
        sub_23E538468();
        v17 = 2;
        break;
      case 3:
        sub_23E538468();
        v17 = 3;
        break;
      case 4:
        sub_23E538468();
        v17 = 4;
        break;
      case 5:
        sub_23E538468();
        v17 = 5;
        break;
      default:
        sub_23E538468();
        v50 = (id)v17;
        sub_23E537C64();
        sub_23E223048((id)v17);
        break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E223048(v44);
    sub_23E223048((id)v17);
    v16 = sub_23E5384A4() ^ v49;
  }
  swift_release();
  return sub_23E538468();
}

uint64_t sub_23E237CF8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int64_t v48;
  char *v49;
  uint64_t v50;
  __int128 v51[4];
  uint64_t v52;

  v4 = (int *)type metadata accessor for StaticServiceGroup();
  v45 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254332780);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - v14;
  v16 = *(_QWORD *)(a2 + 64);
  v43 = a2 + 64;
  v17 = 1 << *(_BYTE *)(a2 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v44 = (unint64_t)(v17 + 63) >> 6;
  v42 = v44 - 1;
  v46 = a2;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v48 = 0;
  v49 = v15;
  while (1)
  {
    v50 = v21;
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v48 << 6);
      goto LABEL_8;
    }
    v28 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 < v44)
    {
      v29 = *(_QWORD *)(v43 + 8 * v28);
      if (v29)
        goto LABEL_12;
      v30 = v48 + 2;
      ++v48;
      if (v28 + 1 < v44)
      {
        v29 = *(_QWORD *)(v43 + 8 * v30);
        if (v29)
        {
          ++v28;
          goto LABEL_12;
        }
        v31 = v28 + 2;
        v48 = v28 + 1;
        if (v28 + 2 < v44)
          break;
      }
    }
LABEL_24:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 1, 1, v32);
    v19 = 0;
LABEL_25:
    sub_23E1E4E3C((uint64_t)v13, (uint64_t)v15, (uint64_t *)&unk_254332780);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v15, 1, v33) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v34 = v13;
    v35 = (uint64_t)&v15[*(int *)(v33 + 48)];
    v36 = v47;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v47, v15, v7);
    sub_23E1E2FDC(v35, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v37 = *(_QWORD *)(a1 + 64);
    v38 = *(_OWORD *)(a1 + 16);
    v51[0] = *(_OWORD *)a1;
    v51[1] = v38;
    v39 = *(_OWORD *)(a1 + 48);
    v51[2] = *(_OWORD *)(a1 + 32);
    v51[3] = v39;
    v52 = v37;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v36, v7);
    sub_23E5374D8();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    sub_23E538474();
    sub_23E538468();
    v40 = *(_QWORD *)&v6[v4[8]];
    swift_bridgeObjectRetain();
    sub_23E240740(v51, v40);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v6[v4[9] + 8])
    {
      sub_23E538474();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E538474();
    }
    sub_23E538474();
    v22 = *(_QWORD *)&v6[v4[11]];
    swift_bridgeObjectRetain();
    sub_23E238278((uint64_t)v51, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254332740, &qword_254332738, (void (*)(_OWORD *))StaticService.hash(into:));
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    result = sub_23E5384A4();
    v15 = v49;
    v21 = result ^ v50;
    v13 = v34;
  }
  v29 = *(_QWORD *)(v43 + 8 * v31);
  if (v29)
  {
    v28 += 2;
LABEL_12:
    v19 = (v29 - 1) & v29;
    v24 = __clz(__rbit64(v29)) + (v28 << 6);
    v48 = v28;
LABEL_8:
    v25 = v46;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v8 + 72) * v24, v7);
    v26 = *(_QWORD *)(v25 + 56) + *(_QWORD *)(v45 + 72) * v24;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332778);
    sub_23E1E2F50(v26, (uint64_t)&v13[*(int *)(v27 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
    v15 = v49;
    goto LABEL_25;
  }
  while (1)
  {
    v28 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v28 >= v44)
    {
      v48 = v42;
      goto LABEL_24;
    }
    v29 = *(_QWORD *)(v43 + 8 * v28);
    ++v31;
    if (v29)
      goto LABEL_12;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E238230(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254332740, &qword_254332738, (void (*)(_OWORD *))StaticService.hash(into:));
}

uint64_t sub_23E238254(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, type metadata accessor for StaticAccessory, &qword_254332748, &qword_254333100, (void (*)(_OWORD *))StaticAccessory.hash(into:));
}

uint64_t sub_23E238278(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5, void (*a6)(_OWORD *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(_OWORD *);
  uint64_t *v54;
  int64_t v55;
  uint64_t (*v56)(_QWORD);
  uint64_t *v57;
  _OWORD v58[4];
  uint64_t v59;

  v53 = a6;
  v56 = a3;
  v57 = a5;
  v9 = a3(0);
  v49 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t)&v46 - v10;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v51 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = a4;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  v20 = *(_QWORD *)(a2 + 64);
  v47 = a2 + 64;
  v21 = 1 << *(_BYTE *)(a2 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v48 = (unint64_t)(v21 + 63) >> 6;
  v46 = v48 - 1;
  v50 = a2;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v55 = 0;
  if (!v23)
    goto LABEL_6;
LABEL_4:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v55 << 6);
LABEL_5:
  v28 = v50;
  (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v17, *(_QWORD *)(v50 + 48) + *(_QWORD *)(v12 + 72) * v27, v11);
  v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v49 + 72) * v27;
  v30 = __swift_instantiateConcreteTypeFromMangledName(v57);
  sub_23E1E2F50(v29, (uint64_t)&v17[*(int *)(v30 + 48)], v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 0, 1, v30);
  while (1)
  {
    sub_23E1E4E3C((uint64_t)v17, (uint64_t)v19, v54);
    v36 = __swift_instantiateConcreteTypeFromMangledName(v57);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v19, 1, v36) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v37 = &v19[*(int *)(v36 + 48)];
    v38 = v51;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v51, v19, v11);
    v39 = (uint64_t)v37;
    v40 = v25;
    v41 = v52;
    v42 = v56;
    sub_23E1E2FDC(v39, v52, v56);
    v43 = *(_QWORD *)(a1 + 64);
    v44 = *(_OWORD *)(a1 + 16);
    v58[0] = *(_OWORD *)a1;
    v58[1] = v44;
    v45 = *(_OWORD *)(a1 + 48);
    v58[2] = *(_OWORD *)(a1 + 32);
    v58[3] = v45;
    v59 = v43;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v11);
    v53(v58);
    sub_23E1E2FA0(v41, v42);
    result = sub_23E5384A4();
    v25 = result ^ v40;
    if (v23)
      goto LABEL_4;
LABEL_6:
    v31 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v31 < v48)
    {
      v32 = *(_QWORD *)(v47 + 8 * v31);
      if (v32)
        goto LABEL_9;
      v33 = v55 + 2;
      ++v55;
      if (v31 + 1 < v48)
      {
        v32 = *(_QWORD *)(v47 + 8 * v33);
        if (v32)
        {
          ++v31;
LABEL_9:
          v23 = (v32 - 1) & v32;
          v27 = __clz(__rbit64(v32)) + (v31 << 6);
          v55 = v31;
          goto LABEL_5;
        }
        v34 = v31 + 2;
        v55 = v31 + 1;
        if (v31 + 2 < v48)
          break;
      }
    }
LABEL_21:
    v35 = __swift_instantiateConcreteTypeFromMangledName(v57);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v17, 1, 1, v35);
    v23 = 0;
  }
  v32 = *(_QWORD *)(v47 + 8 * v34);
  if (v32)
  {
    v31 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v31 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v31 >= v48)
    {
      v55 = v46;
      goto LABEL_21;
    }
    v32 = *(_QWORD *)(v47 + 8 * v31);
    ++v34;
    if (v32)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E238678(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char *i;
  _OWORD v44[4];
  uint64_t v45;

  v4 = (int *)type metadata accessor for StaticMatterDevice();
  v40 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA30);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  v37 = v39 - 1;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v42 = 0;
  for (i = v12; ; v12 = i)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v42 << 6);
      goto LABEL_7;
    }
    v24 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v24 < v39)
    {
      v25 = *(_QWORD *)(v38 + 8 * v24);
      if (v25)
        goto LABEL_11;
      v26 = v42 + 2;
      ++v42;
      if (v24 + 1 < v39)
      {
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (v25)
        {
          ++v24;
          goto LABEL_11;
        }
        v27 = v24 + 2;
        v42 = v24 + 1;
        if (v24 + 2 < v39)
          break;
      }
    }
LABEL_23:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    v16 = 0;
LABEL_24:
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v12, &qword_256D3FA30);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    sub_23E1E2FDC((uint64_t)&v12[*(int *)(v29 + 48)], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    v30 = *(_QWORD *)(a1 + 64);
    v31 = *(_OWORD *)(a1 + 16);
    v44[0] = *(_OWORD *)a1;
    v44[1] = v31;
    v32 = *(_OWORD *)(a1 + 48);
    v44[2] = *(_OWORD *)(a1 + 32);
    v44[3] = v32;
    v45 = v30;
    sub_23E538498();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    sub_23E538498();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    sub_23E538468();
    v33 = *(_QWORD *)&v6[v4[8]];
    swift_bridgeObjectRetain();
    sub_23E240BC0((uint64_t)v44, v33);
    swift_bridgeObjectRelease();
    sub_23E5374D8();
    sub_23E5374D8();
    v34 = *(_QWORD *)&v6[v4[11]];
    swift_bridgeObjectRetain();
    sub_23E239008((uint64_t)v44, v34);
    swift_bridgeObjectRelease();
    MatterTileMetadata.hash(into:)();
    v35 = *(_QWORD *)&v6[v4[13]];
    sub_23E538474();
    if (v35)
    {
      swift_bridgeObjectRetain();
      sub_23E238B40((uint64_t)v44, v35);
      swift_bridgeObjectRelease();
    }
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    result = sub_23E5384A4();
    v18 ^= result;
  }
  v25 = *(_QWORD *)(v38 + 8 * v27);
  if (v25)
  {
    v24 += 2;
LABEL_11:
    v16 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v24 << 6);
    v42 = v24;
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(v41 + 48) + 8 * v20);
    v22 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v40 + 72) * v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
    sub_23E1E2F50(v22, (uint64_t)v10 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    *v10 = v21;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
    v12 = i;
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v39)
    {
      v42 = v37;
      goto LABEL_23;
    }
    v25 = *(_QWORD *)(v38 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23E238B40(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int64_t v44;
  __int128 v45[4];
  uint64_t v46;

  v4 = (int *)type metadata accessor for ActionEndpoint();
  v41 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA00);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (_WORD *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v42 = a2;
  v43 = (char *)&v37 - v11;
  v12 = *(_QWORD *)(a2 + 64);
  v39 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v38 = v40 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v44 = 0;
  if (!v15)
    goto LABEL_6;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v19 = (uint64_t)v43;
  v20 = v18 | (v44 << 6);
LABEL_5:
  v21 = *(_WORD *)(*(_QWORD *)(v42 + 48) + 2 * v20);
  v22 = *(_QWORD *)(v42 + 56) + *(_QWORD *)(v41 + 72) * v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
  sub_23E1E2F50(v22, (uint64_t)v10 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
  *v10 = v21;
  (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
  while (1)
  {
    sub_23E1E4E3C((uint64_t)v10, v19, &qword_256D3FA00);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v19, 1, v29) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    sub_23E1E2FDC(v19 + *(int *)(v29 + 48), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    v30 = *(_QWORD *)(a1 + 64);
    v31 = *(_OWORD *)(a1 + 16);
    v45[0] = *(_OWORD *)a1;
    v45[1] = v31;
    v32 = *(_OWORD *)(a1 + 48);
    v45[2] = *(_OWORD *)(a1 + 32);
    v45[3] = v32;
    v46 = v30;
    sub_23E538480();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    sub_23E5374D8();
    v33 = *(_QWORD *)&v6[v4[6]];
    swift_bridgeObjectRetain();
    sub_23E240740(v45, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    sub_23E538474();
    sub_23E538498();
    sub_23E538480();
    MatterTileMetadata.hash(into:)();
    v34 = *(_QWORD *)&v6[v4[11]];
    swift_bridgeObjectRetain();
    sub_23E240BC0((uint64_t)v45, v34);
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)&v6[v4[12]];
    swift_bridgeObjectRetain();
    sub_23E23A220((uint64_t)v45, v35);
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)&v6[v4[13]];
    swift_bridgeObjectRetain();
    sub_23E24157C((uint64_t)v45, v36);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    result = sub_23E5384A4();
    v17 ^= result;
    if (v15)
      goto LABEL_4;
LABEL_6:
    v19 = (uint64_t)v43;
    v24 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v40)
    {
      v25 = *(_QWORD *)(v39 + 8 * v24);
      if (v25)
        goto LABEL_9;
      v26 = v44 + 2;
      ++v44;
      if (v24 + 1 < v40)
      {
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          v15 = (v25 - 1) & v25;
          v20 = __clz(__rbit64(v25)) + (v24 << 6);
          v44 = v24;
          goto LABEL_5;
        }
        v27 = v24 + 2;
        v44 = v24 + 1;
        if (v24 + 2 < v40)
          break;
      }
    }
LABEL_21:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    v15 = 0;
  }
  v25 = *(_QWORD *)(v39 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v40)
    {
      v44 = v38;
      goto LABEL_21;
    }
    v25 = *(_QWORD *)(v39 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E239008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _WORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40[4];
  uint64_t v41;

  v4 = type metadata accessor for StaticEndpoint();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F950);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (_WORD *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v36 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v37 = (unint64_t)(v14 + 63) >> 6;
  v35 = v37 - 1;
  v39 = a2;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v19 = 0;
  if (!v16)
    goto LABEL_6;
LABEL_4:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v21 = v20 | (v19 << 6);
LABEL_5:
  v22 = *(_WORD *)(*(_QWORD *)(v39 + 48) + 2 * v21);
  v23 = *(_QWORD *)(v39 + 56) + *(_QWORD *)(v38 + 72) * v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
  sub_23E1E2F50(v23, (uint64_t)v10 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  *v10 = v22;
  (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 0, 1, v24);
  while (1)
  {
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v12, &qword_256D3F950);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v12, 1, v30) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    sub_23E1E2FDC((uint64_t)&v12[*(int *)(v30 + 48)], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v31 = *(_QWORD *)(a1 + 64);
    v32 = *(_OWORD *)(a1 + 16);
    v40[0] = *(_OWORD *)a1;
    v40[1] = v32;
    v33 = *(_OWORD *)(a1 + 48);
    v40[2] = *(_OWORD *)(a1 + 32);
    v40[3] = v33;
    v41 = v31;
    sub_23E538480();
    StaticEndpoint.hash(into:)(v40);
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    result = sub_23E5384A4();
    v18 ^= result;
    if (v16)
      goto LABEL_4;
LABEL_6:
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v37)
    {
      v26 = *(_QWORD *)(v36 + 8 * v25);
      if (v26)
        goto LABEL_9;
      v27 = v19 + 2;
      ++v19;
      if (v25 + 1 < v37)
      {
        v26 = *(_QWORD *)(v36 + 8 * v27);
        if (v26)
        {
          ++v25;
LABEL_9:
          v16 = (v26 - 1) & v26;
          v21 = __clz(__rbit64(v26)) + (v25 << 6);
          v19 = v25;
          goto LABEL_5;
        }
        v28 = v25 + 2;
        v19 = v25 + 1;
        if (v25 + 2 < v37)
          break;
      }
    }
LABEL_21:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 1, 1, v29);
    v16 = 0;
  }
  v26 = *(_QWORD *)(v36 + 8 * v28);
  if (v26)
  {
    v25 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v25 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v25 >= v37)
    {
      v19 = v35;
      goto LABEL_21;
    }
    v26 = *(_QWORD *)(v36 + 8 * v25);
    ++v28;
    if (v26)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E23936C(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, &qword_256D3F9C0, &qword_256D3F9C8, (void (*)(_OWORD *))ActionService.hash(into:));
}

uint64_t sub_23E239390(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  char *v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *i;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  __int128 v62[4];
  uint64_t v63;

  v59 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for StaticMediaSystemComponent();
  v52 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v61 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v48 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v48 - v15;
  v17 = *(_QWORD *)(a2 + 64);
  v49 = a2 + 64;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v51 = (unint64_t)(v18 + 63) >> 6;
  v48 = v51 - 1;
  v53 = a2;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v60 = 0;
  v54 = v16;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v25 = v24 | (v60 << 6);
      goto LABEL_8;
    }
    v29 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 < v51)
    {
      v30 = *(_QWORD *)(v49 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v60 + 2;
      ++v60;
      if (v29 + 1 < v51)
      {
        v30 = *(_QWORD *)(v49 + 8 * v31);
        if (v30)
        {
          ++v29;
          goto LABEL_12;
        }
        v32 = v29 + 2;
        v60 = v29 + 1;
        if (v29 + 2 < v51)
          break;
      }
    }
LABEL_24:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v14, 1, 1, v33);
    v20 = 0;
LABEL_25:
    sub_23E1E4E3C((uint64_t)v14, (uint64_t)v16, &qword_256D3F9A0);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v16, 1, v34) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v35 = v22;
    v36 = (uint64_t)&v16[*(int *)(v34 + 48)];
    v37 = v16;
    v38 = v61;
    v39 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    v40 = v56;
    v39(v56, v37, v7);
    sub_23E1E2FDC(v36, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v41 = *(_QWORD *)(v59 + 64);
    v42 = *(_OWORD *)(v59 + 16);
    v62[0] = *(_OWORD *)v59;
    v62[1] = v42;
    v43 = *(_OWORD *)(v59 + 48);
    v62[2] = *(_OWORD *)(v59 + 32);
    v62[3] = v43;
    v63 = v41;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    v44 = *(void (**)(char *, uint64_t))(v38 + 8);
    v44(v40, v7);
    sub_23E5374D8();
    v45 = v57;
    StaticMediaProfile.hash(into:)(v62);
    sub_23E538468();
    v46 = *(_QWORD *)&v6[*(int *)(v45 + 28)];
    swift_bridgeObjectRetain();
    sub_23E240740(v62, v46);
    swift_bridgeObjectRelease();
    v47 = v58;
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v45 + 32)], v58, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v47, 1, v7) == 1)
    {
      sub_23E538474();
    }
    else
    {
      v23 = v50;
      v39(v50, (char *)v47, v7);
      sub_23E538474();
      sub_23E5374D8();
      v44(v23, v7);
    }
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    result = sub_23E5384A4();
    v22 = result ^ v35;
    v16 = v54;
  }
  v30 = *(_QWORD *)(v49 + 8 * v32);
  if (v30)
  {
    v29 += 2;
LABEL_12:
    v20 = (v30 - 1) & v30;
    v25 = __clz(__rbit64(v30)) + (v29 << 6);
    v60 = v29;
LABEL_8:
    v26 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v14, *(_QWORD *)(v53 + 48) + *(_QWORD *)(v61 + 72) * v25, v7);
    v27 = *(_QWORD *)(v26 + 56) + *(_QWORD *)(v52 + 72) * v25;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
    sub_23E1E2F50(v27, (uint64_t)&v14[*(int *)(v28 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
    goto LABEL_25;
  }
  while (1)
  {
    v29 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v29 >= v51)
    {
      v60 = v48;
      goto LABEL_24;
    }
    v30 = *(_QWORD *)(v49 + 8 * v29);
    ++v32;
    if (v30)
      goto LABEL_12;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E239908(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 *v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v49 = a1;
  v47 = type metadata accessor for StaticTelevisionProfile();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v52 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333120);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  v12 = *(_QWORD *)(a2 + 64);
  v43 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v44 = (unint64_t)(v13 + 63) >> 6;
  v42 = v44 - 1;
  v46 = a2;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v50 = 0;
  while (1)
  {
    v53 = v17;
    if (v15)
    {
      v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v20 = v19 | (v50 << 6);
      goto LABEL_7;
    }
    v24 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 < v44)
    {
      v25 = *(_QWORD *)(v43 + 8 * v24);
      if (v25)
        goto LABEL_11;
      v26 = v50 + 2;
      ++v50;
      if (v24 + 1 < v44)
      {
        v25 = *(_QWORD *)(v43 + 8 * v26);
        if (v25)
        {
          ++v24;
          goto LABEL_11;
        }
        v27 = v24 + 2;
        v50 = v24 + 1;
        if (v24 + 2 < v44)
          break;
      }
    }
LABEL_23:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 1, 1, v28);
    v15 = 0;
LABEL_24:
    sub_23E1E4E3C((uint64_t)v9, (uint64_t)v11, &qword_254333120);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v11, 1, v29) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v30 = (uint64_t)&v11[*(int *)(v29 + 48)];
    v31 = v51;
    v32 = v11;
    v33 = v48;
    v34 = v32;
    (*(void (**)(char *))(v51 + 32))(v48);
    v35 = v52;
    sub_23E1E2FDC(v30, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    v36 = *((_QWORD *)v49 + 8);
    v37 = v49[1];
    v54 = *v49;
    v55 = v37;
    v38 = v49[3];
    v56 = v49[2];
    v57 = v38;
    v58 = v36;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v4);
    sub_23E5374D8();
    v39 = *(_QWORD *)(v35 + *(int *)(v47 + 20));
    sub_23E538468();
    v40 = *(_QWORD *)(v39 + 16);
    if (v40)
    {
      v41 = v39 + 32;
      do
      {
        v41 += 8;
        sub_23E538468();
        --v40;
      }
      while (v40);
    }
    v18 = v52;
    sub_23E5374D8();
    sub_23E1E2FA0(v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    result = sub_23E5384A4();
    v17 = result ^ v53;
    v11 = v34;
  }
  v25 = *(_QWORD *)(v43 + 8 * v27);
  if (v25)
  {
    v24 += 2;
LABEL_11:
    v15 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v24 << 6);
    v50 = v24;
LABEL_7:
    v21 = v46;
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v9, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v51 + 72) * v20, v4);
    v22 = *(_QWORD *)(v21 + 56) + *(_QWORD *)(v45 + 72) * v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
    sub_23E1E2F50(v22, (uint64_t)&v9[*(int *)(v23 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 0, 1, v23);
    goto LABEL_24;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v44)
    {
      v50 = v42;
      goto LABEL_23;
    }
    v25 = *(_QWORD *)(v43 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_11;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E239D94(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 *v48;
  int64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v48 = a1;
  v3 = type metadata accessor for StaticLightProfile();
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v50 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333108);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  v14 = *(_QWORD *)(a2 + 64);
  v43 = a2 + 64;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v42 = v44 - 1;
  v46 = a2;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v49 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v49 << 6);
      goto LABEL_8;
    }
    v25 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 < v44)
    {
      v26 = *(_QWORD *)(v43 + 8 * v25);
      if (v26)
        goto LABEL_12;
      v27 = v49 + 2;
      ++v49;
      if (v25 + 1 < v44)
      {
        v26 = *(_QWORD *)(v43 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_12;
        }
        v28 = v25 + 2;
        v49 = v25 + 1;
        if (v25 + 2 < v44)
          break;
      }
    }
LABEL_24:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
    v17 = 0;
LABEL_25:
    sub_23E1E4E3C((uint64_t)v11, (uint64_t)v13, &qword_254333108);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v31 = v11;
    v32 = v19;
    v33 = (uint64_t)&v13[*(int *)(v30 + 48)];
    v34 = v50;
    v35 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v13, v6);
    sub_23E1E2FDC(v33, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v36 = *((_QWORD *)v48 + 8);
    v37 = v48[1];
    v51 = *v48;
    v52 = v37;
    v38 = v48[3];
    v53 = v48[2];
    v54 = v38;
    v55 = v36;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v6);
    sub_23E5374D8();
    sub_23E538474();
    v39 = v3;
    v40 = v5[*(int *)(v3 + 24) + 1];
    sub_23E538474();
    if (v40 != 2)
      sub_23E538474();
    sub_23E538474();
    v3 = v39;
    sub_23E5374D8();
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    result = sub_23E5384A4();
    v19 = result ^ v32;
    v11 = v31;
  }
  v26 = *(_QWORD *)(v43 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_12:
    v17 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v25 << 6);
    v49 = v25;
LABEL_8:
    v22 = v46;
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v11, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v50 + 72) * v21, v6);
    v23 = *(_QWORD *)(v22 + 56) + *(_QWORD *)(v45 + 72) * v21;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
    sub_23E1E2F50(v23, (uint64_t)&v11[*(int *)(v24 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
    goto LABEL_25;
  }
  while (1)
  {
    v25 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v25 >= v44)
    {
      v49 = v42;
      goto LABEL_24;
    }
    v26 = *(_QWORD *)(v43 + 8 * v25);
    ++v28;
    if (v26)
      goto LABEL_12;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E23A220(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char *v11;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  __int128 v16[16];
  _BYTE __src[264];
  _BYTE __dst[264];
  __int128 v19[16];
  _BYTE v20[256];
  _BYTE v21[8];
  __int128 v22[16];

  v14 = (_QWORD *)(a2 + 64);
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v13 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = a2;
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_16;
  }
  if (v13 > 1)
  {
    v7 = v14[1];
    v8 = 1;
    if (v7)
      goto LABEL_15;
    v8 = 2;
    if (v13 <= 2)
      goto LABEL_17;
    v7 = v14[2];
    if (v7)
    {
LABEL_15:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_16:
      v10 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v6);
      sub_23E22328C((__int128 *)(*(_QWORD *)(v15 + 56) + (v6 << 8)), (uint64_t)v16);
      __src[0] = v10;
      sub_23E22328C(v16, (uint64_t)&__src[8]);
      memcpy(__dst, __src, 0x104uLL);
      nullsub_1(__dst);
      sub_23E1E4E3C((uint64_t)__dst, (uint64_t)v21, &qword_256D3F9D0);
      sub_23E22328C(v22, (uint64_t)v19);
      sub_23E53848C();
      sub_23E22328C(v19, (uint64_t)v20);
      v11 = (char *)&loc_23E23A4C8 + dword_23E23A944[sub_23E23C5D0((uint64_t)v20)];
      __asm { BR              X9 }
    }
    v9 = 3;
    if (v13 > 3)
    {
      v7 = v14[3];
      if (v7)
      {
        v8 = 3;
        goto LABEL_15;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x23E23A944);
        }
        if (v8 >= v13)
          break;
        v7 = v14[v8];
        ++v9;
        if (v7)
          goto LABEL_15;
      }
    }
  }
LABEL_17:
  swift_release();
  return sub_23E538468();
}

uint64_t sub_23E23A95C(uint64_t a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  uint64_t v56;

  v51 = a1;
  v3 = (int *)type metadata accessor for StaticResident();
  v48 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332408);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  v14 = *(_QWORD *)(a2 + 64);
  v46 = a2 + 64;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v47 = (unint64_t)(v15 + 63) >> 6;
  v45 = v47 - 1;
  v49 = a2;
  swift_bridgeObjectRetain();
  v18 = 0;
  v52 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v52 << 6);
LABEL_9:
      v22 = v49;
      (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v11, *(_QWORD *)(v49 + 48) + *(_QWORD *)(v53 + 72) * v21, v6);
      v23 = *(_QWORD *)(v22 + 56) + *(_QWORD *)(v48 + 72) * v21;
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
      sub_23E1E2F50(v23, (uint64_t)&v11[*(int *)(v24 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v11, 0, 1, v24);
      goto LABEL_26;
    }
    v25 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      JUMPOUT(0x23E23AF30);
    }
    if (v25 < v47)
    {
      v26 = *(_QWORD *)(v46 + 8 * v25);
      if (v26)
        goto LABEL_13;
      v27 = v52 + 2;
      ++v52;
      if (v25 + 1 < v47)
      {
        v26 = *(_QWORD *)(v46 + 8 * v27);
        if (v26)
        {
          ++v25;
LABEL_13:
          v17 = (v26 - 1) & v26;
          v21 = __clz(__rbit64(v26)) + (v25 << 6);
          v52 = v25;
          goto LABEL_9;
        }
        v28 = v25 + 2;
        v52 = v25 + 1;
        if (v25 + 2 < v47)
        {
          v26 = *(_QWORD *)(v46 + 8 * v28);
          if (v26)
          {
            v25 += 2;
            goto LABEL_13;
          }
          while (1)
          {
            v25 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_38;
            if (v25 >= v47)
              break;
            v26 = *(_QWORD *)(v46 + 8 * v25);
            ++v28;
            if (v26)
              goto LABEL_13;
          }
          v52 = v45;
        }
      }
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 1, 1, v29);
    v17 = 0;
LABEL_26:
    sub_23E1E4E3C((uint64_t)v11, (uint64_t)v13, &qword_254332408);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v13, 1, v30) == 1)
      break;
    v54 = v18;
    v31 = v11;
    v32 = (uint64_t)&v13[*(int *)(v30 + 48)];
    v33 = v53;
    v34 = v13;
    v35 = v50;
    v36 = v34;
    (*(void (**)(char *))(v53 + 32))(v50);
    sub_23E1E2FDC(v32, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v37 = *(_QWORD *)(v51 + 64);
    v38 = *(_OWORD *)(v51 + 16);
    v55[0] = *(_OWORD *)v51;
    v55[1] = v38;
    v39 = *(_OWORD *)(v51 + 48);
    v55[2] = *(_OWORD *)(v51 + 32);
    v55[3] = v39;
    v56 = v37;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v6);
    sub_23E5374D8();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)&v5[v3[6] + 8])
    {
      sub_23E538474();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E538474();
    }
    v40 = *(_QWORD *)&v5[v3[7]];
    swift_bridgeObjectRetain();
    sub_23E240D30((uint64_t)v55, v40);
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)&v5[v3[8]];
    swift_bridgeObjectRetain();
    sub_23E24144C((uint64_t)v55, v41);
    swift_bridgeObjectRelease();
    v42 = *(unsigned __int16 *)&v5[v3[9]];
    v13 = v36;
    if (!(v42 >> 14))
    {
      sub_23E538468();
LABEL_35:
      sub_23E538468();
      goto LABEL_5;
    }
    if (v42 >> 14 == 1)
    {
      sub_23E538468();
      sub_23E538474();
      sub_23E538474();
LABEL_5:
      v11 = v31;
      goto LABEL_6;
    }
    v43 = v42 - 0x8000;
    v11 = v31;
    switch(v43)
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        sub_23E538468();
        break;
      default:
        goto LABEL_35;
    }
LABEL_6:
    v19 = v54;
    sub_23E5374D8();
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v18 = sub_23E5384A4() ^ v19;
  }
  swift_release();
  return sub_23E538468();
}

uint64_t sub_23E23AF40(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int128 *v45;
  int64_t v46;
  uint64_t v47;
  char *v48;
  int *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v45 = a1;
  v49 = (int *)type metadata accessor for StaticHH2Update(0);
  v42 = *((_QWORD *)v49 - 1);
  MEMORY[0x24BDAC7A8](v49);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23E536F80();
  v5 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332760);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v40 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v39 = v41 - 1;
  v43 = a2;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v46 = 0;
  v48 = v12;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v46 << 6);
      goto LABEL_8;
    }
    v24 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v24 < v41)
    {
      v25 = *(_QWORD *)(v40 + 8 * v24);
      if (v25)
        goto LABEL_12;
      v26 = v46 + 2;
      ++v46;
      if (v24 + 1 < v41)
      {
        v25 = *(_QWORD *)(v40 + 8 * v26);
        if (v25)
        {
          ++v24;
          goto LABEL_12;
        }
        v27 = v24 + 2;
        v46 = v24 + 1;
        if (v24 + 2 < v41)
          break;
      }
    }
LABEL_24:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 1, 1, v28);
    v16 = 0;
LABEL_25:
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v12, &qword_254332760);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v30 = v18;
    v31 = v10;
    v32 = (uint64_t)&v12[*(int *)(v29 + 48)];
    v33 = v44;
    v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v44, v12, v47);
    sub_23E1E2FDC(v32, (uint64_t)v4, type metadata accessor for StaticHH2Update);
    v35 = *((_QWORD *)v45 + 8);
    v36 = v45[1];
    v50 = *v45;
    v51 = v36;
    v37 = v45[3];
    v52 = v45[2];
    v53 = v37;
    v54 = v35;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v34);
    sub_23E5374D8();
    if ((v4[v49[5]] - 2) >= 6u)
      sub_23E538468();
    sub_23E538468();
    if (*(_QWORD *)&v4[v49[6] + 8])
    {
      sub_23E538468();
      sub_23E5375EC();
    }
    else
    {
      sub_23E538468();
    }
    v10 = v31;
    if (v4[v49[7] + 8] == 1)
    {
      sub_23E538474();
    }
    else
    {
      sub_23E538474();
      sub_23E538498();
    }
    v12 = v48;
    sub_23E1E2FA0((uint64_t)v4, type metadata accessor for StaticHH2Update);
    result = sub_23E5384A4();
    v18 = result ^ v30;
  }
  v25 = *(_QWORD *)(v40 + 8 * v27);
  if (v25)
  {
    v24 += 2;
LABEL_12:
    v16 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v24 << 6);
    v46 = v24;
LABEL_8:
    v21 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v5 + 72) * v20, v47);
    v22 = *(_QWORD *)(v21 + 56) + *(_QWORD *)(v42 + 72) * v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
    sub_23E1E2F50(v22, (uint64_t)&v10[*(int *)(v23 + 48)], type metadata accessor for StaticHH2Update);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
    v12 = v48;
    goto LABEL_25;
  }
  while (1)
  {
    v24 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v24 >= v41)
    {
      v46 = v39;
      goto LABEL_24;
    }
    v25 = *(_QWORD *)(v40 + 8 * v24);
    ++v27;
    if (v25)
      goto LABEL_12;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E23B430(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 *v51;
  char *v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v51 = a1;
  v50 = type metadata accessor for StaticUser();
  v46 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v55 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332730);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v43 - v11;
  v12 = *(_QWORD *)(a2 + 64);
  v44 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v43 = v45 - 1;
  v47 = a2;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v53 = 0;
  v18 = &qword_256D3F9E8;
  v19 = v54;
  v20 = (uint64_t)v48;
  if (!v15)
    goto LABEL_6;
LABEL_4:
  v21 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v22 = v21 | (v53 << 6);
LABEL_5:
  v23 = v47;
  (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v10, *(_QWORD *)(v47 + 48) + *(_QWORD *)(v55 + 72) * v22, v54);
  v24 = *(_QWORD *)(v23 + 56) + *(_QWORD *)(v46 + 72) * v22;
  v25 = __swift_instantiateConcreteTypeFromMangledName(v18);
  sub_23E1E2F50(v24, (uint64_t)&v10[*(int *)(v25 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
  v26 = (uint64_t)v52;
  while (1)
  {
    sub_23E1E4E3C((uint64_t)v10, v26, &qword_254332730);
    v32 = __swift_instantiateConcreteTypeFromMangledName(v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v26, 1, v32) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v33 = v26 + *(int *)(v32 + 48);
    v34 = v18;
    v35 = v55;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
    v56 = v17;
    v37 = v49;
    v36(v49, v26, v19);
    sub_23E1E2FDC(v33, v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v38 = *((_QWORD *)v51 + 8);
    v39 = v51[1];
    v57 = *v51;
    v58 = v39;
    v40 = v51[3];
    v59 = v51[2];
    v60 = v40;
    v61 = v38;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    v41 = *(void (**)(char *, uint64_t))(v35 + 8);
    v18 = v34;
    v41(v37, v19);
    sub_23E5374D8();
    sub_23E5375EC();
    sub_23E5374D8();
    v42 = v56;
    sub_23E538468();
    sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    result = sub_23E5384A4();
    v17 = result ^ v42;
    if (v15)
      goto LABEL_4;
LABEL_6:
    v27 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    v26 = (uint64_t)v52;
    if (v27 < v45)
    {
      v28 = *(_QWORD *)(v44 + 8 * v27);
      if (v28)
        goto LABEL_9;
      v29 = v53 + 2;
      ++v53;
      if (v27 + 1 < v45)
      {
        v28 = *(_QWORD *)(v44 + 8 * v29);
        if (v28)
        {
          ++v27;
LABEL_9:
          v15 = (v28 - 1) & v28;
          v22 = __clz(__rbit64(v28)) + (v27 << 6);
          v53 = v27;
          goto LABEL_5;
        }
        v30 = v27 + 2;
        v53 = v27 + 1;
        if (v27 + 2 < v45)
          break;
      }
    }
LABEL_21:
    v31 = __swift_instantiateConcreteTypeFromMangledName(v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
    v15 = 0;
  }
  v28 = *(_QWORD *)(v44 + 8 * v30);
  if (v28)
  {
    v27 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v27 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v27 >= v45)
    {
      v53 = v43;
      goto LABEL_21;
    }
    v28 = *(_QWORD *)(v44 + 8 * v27);
    ++v30;
    if (v28)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E23B8C4(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, type metadata accessor for StaticRoom, &qword_254332728, &qword_254332720, (void (*)(_OWORD *))StaticRoom.hash(into:));
}

uint64_t sub_23E23B8E8(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_254332770, &qword_254333110, (void (*)(_OWORD *))StaticMediaProfile.hash(into:));
}

uint64_t sub_23E23B90C(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, &qword_254332768, &qword_256D3F9F0, (void (*)(_OWORD *))StaticMediaSystem.hash(into:));
}

uint64_t sub_23E23B930(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, &qword_254332410, &qword_254333118, (void (*)(_OWORD *))StaticCameraProfile.hash(into:));
}

uint64_t sub_23E23B954(uint64_t a1, uint64_t a2)
{
  return sub_23E238278(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, &qword_254332758, &qword_254332750, (void (*)(_OWORD *))StaticActionSet.hash(into:));
}

uint64_t sub_23E23B978(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *i;
  char *v58;
  char *v59;
  uint64_t v60;
  __int128 *v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v61 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for StaticZone();
  v54 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v50 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v50 - v17;
  v19 = *(_QWORD *)(a2 + 64);
  v52 = a2 + 64;
  v20 = 1 << *(_BYTE *)(a2 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v53 = (unint64_t)(v20 + 63) >> 6;
  v51 = v53 - 1;
  v55 = a2;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v62 = 0;
  v67 = v9;
  v59 = v7;
  v56 = v18;
  for (i = v16; ; v16 = i)
  {
    if (v22)
    {
      v64 = (v22 - 1) & v22;
      v26 = __clz(__rbit64(v22)) | (v62 << 6);
      goto LABEL_9;
    }
    v30 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v30 < v53)
    {
      v31 = *(_QWORD *)(v52 + 8 * v30);
      if (v31)
        goto LABEL_13;
      v32 = v62 + 2;
      ++v62;
      if (v30 + 1 < v53)
      {
        v31 = *(_QWORD *)(v52 + 8 * v32);
        if (v31)
        {
          ++v30;
          goto LABEL_13;
        }
        v33 = v30 + 2;
        v62 = v30 + 1;
        if (v30 + 2 < v53)
          break;
      }
    }
LABEL_25:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v16, 1, 1, v34);
    v64 = 0;
LABEL_26:
    sub_23E1E4E3C((uint64_t)v16, (uint64_t)v18, &qword_2543330F0);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v18, 1, v35) == 1)
    {
      swift_release();
      return sub_23E538468();
    }
    v63 = v24;
    v36 = (uint64_t)&v18[*(int *)(v35 + 48)];
    v37 = v58;
    v66 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v66(v58, v18, v8);
    sub_23E1E2FDC(v36, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v38 = *((_QWORD *)v61 + 8);
    v39 = v61[1];
    v68 = *v61;
    v69 = v39;
    v40 = v61[3];
    v70 = v61[2];
    v71 = v40;
    v72 = v38;
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v41(v37, v8);
    sub_23E5374D8();
    v42 = v60;
    sub_23E5375EC();
    v43 = *(_QWORD *)&v7[*(int *)(v42 + 24)];
    sub_23E538468();
    v44 = *(_QWORD *)(v43 + 16);
    if (v44)
    {
      v45 = v43 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v46 = *(_QWORD *)(v9 + 72);
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      while (1)
      {
        v47(v5, v45, v8);
        v48 = v67;
        v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56);
        v25(v5, 0, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v5, 1, v8) == 1)
          break;
        v49 = v65;
        v66(v65, v5, v8);
        sub_23E5374D8();
        v41(v49, v8);
        v45 += v46;
        if (!--v44)
          goto LABEL_5;
      }
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_5:
      v25(v5, 1, 1, v8);
    }
    v7 = v59;
    sub_23E1E2FA0((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    result = sub_23E5384A4();
    v22 = v64;
    v24 = result ^ v63;
    v9 = v67;
    v18 = v56;
  }
  v31 = *(_QWORD *)(v52 + 8 * v33);
  if (v31)
  {
    v30 += 2;
LABEL_13:
    v64 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v62 = v30;
LABEL_9:
    v27 = v55;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v16, *(_QWORD *)(v55 + 48) + *(_QWORD *)(v9 + 72) * v26, v8);
    v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v54 + 72) * v26;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
    sub_23E1E2F50(v28, (uint64_t)&v16[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v16, 0, 1, v29);
    goto LABEL_26;
  }
  while (1)
  {
    v30 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v30 >= v53)
    {
      v62 = v51;
      goto LABEL_25;
    }
    v31 = *(_QWORD *)(v52 + 8 * v30);
    ++v33;
    if (v31)
      goto LABEL_13;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_23E538354() & 1) != 0) && (sub_23E2AFF60(v2, v5) & 1) != 0)
    return sub_23E2B0450(v3, v4);
  else
    return 0;
}

unint64_t sub_23E23BFC8()
{
  unint64_t result;

  result = qword_256D3F8C8;
  if (!qword_256D3F8C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B7E8, &type metadata for MatterStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3F8C8);
  }
  return result;
}

unint64_t sub_23E23C00C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D3F8D8;
  if (!qword_256D3F8D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F8D0);
    v2 = sub_23E1EE1C4(&qword_256D3F8E0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
    v3[0] = MEMORY[0x24BEE4570];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D3F8D8);
  }
  return result;
}

unint64_t sub_23E23C090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D3F8F0;
  if (!qword_256D3F8F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F8E8);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D3F8F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D3F8F0);
  }
  return result;
}

unint64_t sub_23E23C12C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D3F908;
  if (!qword_256D3F908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F8D0);
    v2 = sub_23E1EE1C4(&qword_256D3F910, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
    v3[0] = MEMORY[0x24BEE4598];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D3F908);
  }
  return result;
}

unint64_t sub_23E23C1B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D3F918;
  if (!qword_256D3F918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F8E8);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D3F920, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D3F918);
  }
  return result;
}

void sub_23E23C24C(id a1, id a2, char a3)
{
  if (!a3 || (a1 = a2, a3 == 2) || a3 == 1)

}

id sub_23E23C270(id result, id a2, char a3)
{
  if (!a3)
    return result;
  result = a2;
  if (a3 == 2 || a3 == 1)
    return result;
  return result;
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v2 = objc_msgSend(a1, sel_category);
  v3 = objc_msgSend(v2, sel_categoryType);

  v4 = sub_23E53755C();
  v6 = v5;

  if (v4 == sub_23E53755C() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_254332E00 != -1)
    swift_once();
  v10 = sub_23E5371A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_254333308);
  v11 = a1;
  v12 = sub_23E537190();
  v13 = sub_23E537AFC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v14 = 136316162;
    sub_23E1FD768(0xD00000000000001DLL, 0x800000023E563180, &v20);
    sub_23E537CF4();
    *(_WORD *)(v14 + 12) = 1024;
    sub_23E537CF4();
    *(_WORD *)(v14 + 18) = 1024;
    sub_23E537CF4();
    *(_WORD *)(v14 + 24) = 2112;
    v16 = objc_msgSend(v11, sel_category);
    sub_23E537CF4();
    *v15 = v16;
    *(_WORD *)(v14 + 34) = 2112;
    v17 = v11;
    sub_23E537CF4();
    v15[1] = v11;

    _os_log_impl(&dword_23E1DF000, v12, v13, "%s: allowAll:%{BOOL}d isLock:%{BOOL}d accessory category:%@ accessory:%@", (uint8_t *)v14, 0x2Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v19, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);

  }
  else
  {

  }
  return v9 & 1;
}

uint64_t sub_23E23C5D0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 248) >> 29;
}

uint64_t sub_23E23C5DC(uint64_t result)
{
  *(_DWORD *)(result + 248) &= 0x1FFFFFFFu;
  return result;
}

uint64_t sub_23E23C5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return sub_23E4ECF74(a1, v4);
}

uint64_t sub_23E23C640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return sub_23E4ECDA4(a1, v4);
}

uint64_t sub_23E23C694()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E23C6DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6C6F72746E6F63 && a2 == 0xEC00000044497265;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6544636974617473 && a2 == 0xED00007365636976 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023E563120)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E23C868(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t);
  uint64_t result;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  ValueMetadata *v48;
  unint64_t v49;
  uint64_t v50;

  v45 = a4;
  v43 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333280);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t)&v42 - v11;
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v42 - v18;
  v20 = *(_QWORD *)(a3 + 16);
  v21 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v22 = objc_msgSend(a5, sel_uniqueIdentifier);
  sub_23E536F68();

  LOBYTE(v22) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v23 = *(void (**)(char *, uint64_t))(v14 + 8);
  v23(v17, v13);
  v23(v19, v13);
  result = 0;
  if ((v22 & 1) != 0)
  {
    v50 = v20;
    swift_bridgeObjectRetain();
    v25 = objc_msgSend(a1, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v26 = sub_23E5377F0();

    if (v26 >> 62)
    {
LABEL_20:
      swift_bridgeObjectRetain();
      v27 = sub_23E53803C();
      if (v27)
      {
LABEL_4:
        v42 = v12;
        v28 = 4;
        v12 = 1;
        while (1)
        {
          if ((v26 & 0xC000000000000001) != 0)
            v29 = (id)MEMORY[0x24264F148](v28 - 4, v26);
          else
            v29 = *(id *)(v26 + 8 * v28);
          v30 = v29;
          v31 = v28 - 3;
          if (__OFADD__(v28 - 4, 1))
          {
            __break(1u);
            goto LABEL_20;
          }
          v32 = objc_msgSend(v29, sel_hdm_matterNodeID);
          if (v32)
          {
            v33 = v32;
            v46 = 0;
            v47 = 1;
            sub_23E5384D4();

            if ((v47 & 1) == 0 && v46 == v45)
              break;
          }

          ++v28;
          if (v31 == v27)
            goto LABEL_21;
        }
        swift_bridgeObjectRelease_n();
        v34 = sub_23E42881C(v30);
        if (v34)
        {
          v36 = (uint64_t)v34;
          v37 = v35;
          v48 = &type metadata for HomeAppFeatures;
          v49 = sub_23E20B720();
          LOBYTE(v46) = 2;
          v38 = sub_23E5370AC();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
          swift_unknownObjectRetain();
          v39 = v30;
          v40 = v44;
          if ((v38 & 1) != 0)
            StaticMatterDevice.init(device:accessory:)(v36, v37, v39, v44);
          else
            StaticMatterDevice.init(device:accessory:limitedSnapshotController:)(v36, v37, v39, v43, v44);
          v41 = v42;
          sub_23E1E4E3C(v40, v42, (uint64_t *)&unk_254333280);
          sub_23E20C940(v41, v45);
          swift_unknownObjectRelease();

        }
        else
        {

        }
        return v50;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
        goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    return v50;
  }
  return result;
}

unint64_t sub_23E23CC08()
{
  unint64_t result;

  result = qword_256D3F968;
  if (!qword_256D3F968)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterStateSnapshot, &type metadata for MatterStateSnapshot);
    atomic_store(result, (unint64_t *)&qword_256D3F968);
  }
  return result;
}

unint64_t sub_23E23CC50()
{
  unint64_t result;

  result = qword_256D3F970;
  if (!qword_256D3F970)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterStateSnapshot.CommandPayload, &type metadata for MatterStateSnapshot.CommandPayload);
    atomic_store(result, (unint64_t *)&qword_256D3F970);
  }
  return result;
}

uint64_t destroy for MatterStateSnapshot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MatterStateSnapshot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MatterStateSnapshot(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for MatterStateSnapshot(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot()
{
  return &type metadata for MatterStateSnapshot;
}

void destroy for MatterStateSnapshot.UpdateType(uint64_t a1)
{
  sub_23E23C24C(*(id *)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23E23C270(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MatterStateSnapshot.UpdateType(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23E23C270(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23E23C24C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MatterStateSnapshot.UpdateType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23E23C24C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot.UpdateType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot.UpdateType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E23D018(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23E23D030(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.UpdateType()
{
  return &type metadata for MatterStateSnapshot.UpdateType;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot.CommandPayload(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot.CommandPayload(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E23D144 + 4 * byte_23E53B579[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E23D178 + 4 * byte_23E53B574[v4]))();
}

uint64_t sub_23E23D178(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E23D180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E23D188);
  return result;
}

uint64_t sub_23E23D194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E23D19CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E23D1A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E23D1A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.CommandPayload()
{
  return &type metadata for MatterStateSnapshot.CommandPayload;
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E23D210 + 4 * byte_23E53B583[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E23D244 + 4 * byte_23E53B57E[v4]))();
}

uint64_t sub_23E23D244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E23D24C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E23D254);
  return result;
}

uint64_t sub_23E23D260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E23D268);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E23D26C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E23D274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.CodingKeys()
{
  return &type metadata for MatterStateSnapshot.CodingKeys;
}

unint64_t sub_23E23D294()
{
  unint64_t result;

  result = qword_256D3F978;
  if (!qword_256D3F978)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B7C0, &type metadata for MatterStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3F978);
  }
  return result;
}

unint64_t sub_23E23D2DC()
{
  unint64_t result;

  result = qword_256D3F980;
  if (!qword_256D3F980)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B730, &type metadata for MatterStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3F980);
  }
  return result;
}

unint64_t sub_23E23D324()
{
  unint64_t result;

  result = qword_256D3F988;
  if (!qword_256D3F988)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53B758, &type metadata for MatterStateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3F988);
  }
  return result;
}

uint64_t sub_23E23D368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E23D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E23D3E8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

uint64_t sub_23E23D46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  uint64_t result;

  if (!(a32 >> 29))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E23D564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)a4 >> 8 != 0xFFFFFFFF)
    return sub_23E1EAB4C(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_23E23D578(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;

  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - v7;
  v9 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v27 = (unint64_t)(v10 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_26;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v27)
      goto LABEL_31;
    v19 = *(_QWORD *)(v26 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v27)
        goto LABEL_31;
      v19 = *(_QWORD *)(v26 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v27)
          goto LABEL_31;
        v19 = *(_QWORD *)(v26 + 8 * v14);
        if (!v19)
        {
          v14 = v18 + 3;
          if (v18 + 3 >= v27)
            goto LABEL_31;
          v19 = *(_QWORD *)(v26 + 8 * v14);
          if (!v19)
          {
            v14 = v18 + 4;
            if (v18 + 4 >= v27)
              goto LABEL_31;
            v19 = *(_QWORD *)(v26 + 8 * v14);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_26:
    sub_23E23DB8C(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v17, (uint64_t)v8);
    sub_23E23DBD0((uint64_t)v8, (uint64_t)v6);
    v21 = &v6[*(int *)(v2 + 24)];
    v22 = &v21[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    if (v22[16] == 7)
    {
      v23 = *(_QWORD *)v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_23E51EF98(0, v15[2] + 1, 1, v15);
      v25 = v15[2];
      v24 = v15[3];
      if (v25 >= v24 >> 1)
        v15 = sub_23E51EF98((_QWORD *)(v24 > 1), v25 + 1, 1, v15);
      v15[2] = v25 + 1;
      v15[v25 + 4] = v23;
    }
    result = sub_23E23DC14((uint64_t)v6);
  }
  v20 = v18 + 5;
  if (v20 >= v27)
  {
LABEL_31:
    swift_release();
    return (uint64_t)v15;
  }
  v19 = *(_QWORD *)(v26 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v27)
      goto LABEL_31;
    v19 = *(_QWORD *)(v26 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_33:
  __break(1u);
  return result;
}

_QWORD *_s13HomeDataModel17ValueAccumulatorsV9intValues4fromSaySiGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v28 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  v8 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v27 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_26;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v27)
      goto LABEL_36;
    v17 = *(_QWORD *)(v26 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v27)
        goto LABEL_36;
      v17 = *(_QWORD *)(v26 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v27)
          goto LABEL_36;
        v17 = *(_QWORD *)(v26 + 8 * v12);
        if (!v17)
        {
          v12 = v16 + 3;
          if (v16 + 3 >= v27)
            goto LABEL_36;
          v17 = *(_QWORD *)(v26 + 8 * v12);
          if (!v17)
          {
            v12 = v16 + 4;
            if (v16 + 4 >= v27)
              goto LABEL_36;
            v17 = *(_QWORD *)(v26 + 8 * v12);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_25:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_26:
    sub_23E23DB8C(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v28 + 72) * v15, (uint64_t)v7);
    sub_23E23DBD0((uint64_t)v7, (uint64_t)v5);
    v19 = &v5[*(int *)(v2 + 24)];
    v20 = &v19[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    v21 = *(_QWORD *)v20;
    switch(v20[16])
    {
      case 1:
        v21 = *(_QWORD *)v20;
        goto LABEL_32;
      case 2:
        v21 = (unsigned __int16)*(_QWORD *)v20;
        goto LABEL_32;
      case 3:
        v21 = *(_QWORD *)v20;
        goto LABEL_32;
      case 4:
        if ((v21 & 0x8000000000000000) == 0)
          goto LABEL_32;
        goto LABEL_38;
      case 5:
      case 6:
        v21 = (int)v21;
LABEL_32:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_23E51F0A4(0, v13[2] + 1, 1, v13);
        v23 = v13[2];
        v22 = v13[3];
        if (v23 >= v22 >> 1)
          v13 = sub_23E51F0A4((_QWORD *)(v22 > 1), v23 + 1, 1, v13);
        v13[2] = v23 + 1;
        v13[v23 + 4] = v21;
        break;
      default:
        break;
    }
    sub_23E23DC14((uint64_t)v5);
  }
  v18 = v16 + 5;
  if (v18 < v27)
  {
    v17 = *(_QWORD *)(v26 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v12 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        if (v12 >= v27)
          goto LABEL_36;
        v17 = *(_QWORD *)(v26 + 8 * v12);
        ++v18;
        if (v17)
          goto LABEL_25;
      }
LABEL_39:
      __break(1u);
      JUMPOUT(0x23E23DB64);
    }
    v12 = v18;
    goto LABEL_25;
  }
LABEL_36:
  swift_release();
  return v13;
}

ValueMetadata *type metadata accessor for ValueAccumulators()
{
  return &type metadata for ValueAccumulators;
}

uint64_t sub_23E23DB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E23DBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E23DC14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E23DC50(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (!v2)
    return result;
  v21 = MEMORY[0x24BEE4AF8];
  sub_23E537F40();
  result = sub_23E23E410(a1);
  v4 = result;
  v6 = v5;
  v7 = 0;
  v9 = v8 & 1;
  v10 = a1 + 64;
  v18 = v5;
  v19 = a1 + 64;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = (unint64_t)v4 >> 6;
    if ((*(_QWORD *)(v10 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
      goto LABEL_26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v6)
      goto LABEL_27;
    v20 = v9;
    sub_23E5384B0();
    sub_23E537F1C();
    sub_23E537F4C();
    sub_23E537F58();
    result = sub_23E537F28();
    if ((v20 & 1) != 0)
      goto LABEL_31;
    v11 = 1 << *(_BYTE *)(a1 + 32);
    v10 = a1 + 64;
    if (v4 >= v11)
      goto LABEL_28;
    v13 = *(_QWORD *)(v19 + 8 * v12);
    if ((v13 & (1 << v4)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v6)
      goto LABEL_30;
    v14 = v13 & (-2 << (v4 & 0x3F));
    if (v14)
    {
      v11 = __clz(__rbit64(v14)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v15 = v12 + 1;
      v16 = (unint64_t)(v11 + 63) >> 6;
      if (v12 + 1 < v16)
      {
        v17 = *(_QWORD *)(v19 + 8 * v15);
        if (!v17)
        {
          v15 = v12 + 2;
          if (v12 + 2 >= v16)
            goto LABEL_4;
          v17 = *(_QWORD *)(v19 + 8 * v15);
          if (!v17)
          {
            while (v16 - 3 != v12)
            {
              v17 = *(_QWORD *)(a1 + 88 + 8 * v12++);
              if (v17)
              {
                result = sub_23E23D578(v4, v6, 0);
                v10 = a1 + 64;
                v15 = v12 + 2;
                goto LABEL_16;
              }
            }
            result = sub_23E23D578(v4, v6, 0);
            v10 = a1 + 64;
            goto LABEL_4;
          }
        }
LABEL_16:
        v11 = __clz(__rbit64(v17)) + (v15 << 6);
      }
    }
LABEL_4:
    v9 = 0;
    ++v7;
    v6 = v18;
    v4 = v11;
    if (v7 == v2)
      return v21;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E23DEA4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v40 = *(_QWORD *)(a1 + 16);
  v42 = MEMORY[0x24BEE4AF8];
  sub_23E2CB0C4(0, v1, 0);
  v2 = v42;
  result = sub_23E23E410(a1);
  v5 = result;
  v7 = v40;
  v6 = a1;
  v8 = 0;
  v10 = v9 & 1;
  v11 = a1 + 64;
  v12 = v4;
  v13 = a1 + 88;
  v14 = &unk_23E53B930;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v6 + 32))
  {
    v16 = (unint64_t)v5 >> 6;
    if ((*(_QWORD *)(v11 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_28;
    v17 = *(char *)(*(_QWORD *)(v6 + 48) + v5);
    v19 = *(_QWORD *)(v42 + 16);
    v18 = *(_QWORD *)(v42 + 24);
    if (v19 >= v18 >> 1)
    {
      v36 = v4;
      v37 = v13;
      v38 = v12;
      v39 = v11;
      result = sub_23E2CB0C4(v18 > 1, v19 + 1, 1);
      v4 = v36;
      v13 = v37;
      v14 = &unk_23E53B930;
      v12 = v38;
      v11 = v39;
      v7 = v40;
      v6 = a1;
    }
    v20 = v14[v17];
    *(_QWORD *)(v42 + 16) = v19 + 1;
    *(_DWORD *)(v42 + 4 * v19 + 32) = v20;
    if ((v10 & 1) != 0)
      goto LABEL_32;
    v15 = 1 << *(_BYTE *)(v6 + 32);
    if (v5 >= v15)
      goto LABEL_29;
    v21 = *(_QWORD *)(v11 + 8 * v16);
    if ((v21 & (1 << v5)) == 0)
      goto LABEL_30;
    if (*(_DWORD *)(v6 + 36) != (_DWORD)v4)
      goto LABEL_31;
    v22 = v21 & (-2 << (v5 & 0x3F));
    if (v22)
    {
      v15 = __clz(__rbit64(v22)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = v16 + 1;
      v24 = (unint64_t)(v15 + 63) >> 6;
      if (v16 + 1 < v24)
      {
        v25 = *(_QWORD *)(v11 + 8 * v23);
        if (!v25)
        {
          v23 = v16 + 2;
          if (v16 + 2 >= v24)
            goto LABEL_4;
          v25 = *(_QWORD *)(v11 + 8 * v23);
          if (!v25)
          {
            while (v24 - 3 != v16)
            {
              v25 = *(_QWORD *)(v13 + 8 * v16++);
              if (v25)
              {
                v26 = v5;
                v27 = v11;
                v28 = v12;
                v29 = v13;
                v30 = v14;
                result = sub_23E23D578(v26, v4, 0);
                v14 = v30;
                v13 = v29;
                v12 = v28;
                v11 = v27;
                v7 = v40;
                v6 = a1;
                v23 = v16 + 2;
                goto LABEL_18;
              }
            }
            v31 = v5;
            v32 = v11;
            v33 = v12;
            v34 = v13;
            v35 = v14;
            result = sub_23E23D578(v31, v4, 0);
            v14 = v35;
            v13 = v34;
            v12 = v33;
            v11 = v32;
            v7 = v40;
            v6 = a1;
            goto LABEL_4;
          }
        }
LABEL_18:
        v15 = __clz(__rbit64(v25)) + (v23 << 6);
      }
    }
LABEL_4:
    v10 = 0;
    ++v8;
    v4 = v12;
    v5 = v15;
    if (v8 == v7)
      return v2;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void sub_23E23E150()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;

  if (*(_WORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_endpointID)
    || (v1 = MEMORY[0x24264FF70](v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_device)) == 0)
  {
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
    {
      if (sub_23E53803C())
        sub_23E2CE52C(MEMORY[0x24BEE4AF8]);
    }
  }
  else
  {
    v2 = (void *)v1;
    swift_beginAccess();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_23E23DC50(v3);
    swift_bridgeObjectRelease();
    sub_23E4FDA20(v4);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E23E24C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t *v3;
  unsigned __int16 v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = MEMORY[0x24264FF70](v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_device);
  if (!v1)
    return MEMORY[0x24BEE4B08];
  v2 = (void *)v1;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  v4 = *(_WORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_endpointID);
  swift_beginAccess();
  v5 = sub_23E2D0CC4(v4, *v3);
  if (!v5)
  {

    return MEMORY[0x24BEE4B08];
  }
  v6 = v5;
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23E23DEA4(v7);
  swift_bridgeObjectRelease();
  v9 = sub_23E4FDAD8(v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v9;
}

id sub_23E23E36C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockMatterDescriptorCluster();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockMatterDescriptorCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E23E3F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E23E410(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t StaticMediaSystemComponent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticMediaSystemComponent.staticMediaProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaSystemComponent();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
}

uint64_t type metadata accessor for StaticMediaSystemComponent()
{
  uint64_t result;

  result = qword_256D3FBE8;
  if (!qword_256D3FBE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StaticMediaSystemComponent.role.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystemComponent() + 24));
}

uint64_t StaticMediaSystemComponent.roomIds.getter()
{
  type metadata accessor for StaticMediaSystemComponent();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystemComponent.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaSystemComponent();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 32), a1, &qword_254333F50);
}

uint64_t StaticMediaSystemComponent.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1EE1C4(&qword_254333DA0, v5, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v12 = type metadata accessor for StaticMediaSystemComponent();
  StaticMediaProfile.hash(into:)(a1);
  sub_23E538468();
  v13 = *(_QWORD *)(v2 + *(int *)(v12 + 28));
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v13);
  swift_bridgeObjectRelease();
  sub_23E1E7C20(v2 + *(int *)(v12 + 32), (uint64_t)v11, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
  sub_23E538474();
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t sub_23E23E7B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E23E7D8 + 4 * byte_23E53B9A0[*v0]))(25705, 0xE200000000000000);
}

unint64_t sub_23E23E7D8()
{
  return 0xD000000000000012;
}

uint64_t sub_23E23E7F4()
{
  return 1701605234;
}

uint64_t sub_23E23E804()
{
  return 0x7364496D6F6F72;
}

uint64_t sub_23E23E81C()
{
  return 0x726F737365636361;
}

uint64_t sub_23E23E83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E245FEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E23E860(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23E23E86C()
{
  sub_23E241A24();
  return sub_23E538570();
}

uint64_t sub_23E23E894()
{
  sub_23E241A24();
  return sub_23E53857C();
}

uint64_t StaticMediaSystemComponent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E241A24();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v11 = type metadata accessor for StaticMediaSystemComponent();
    LOBYTE(v13) = 1;
    type metadata accessor for StaticMediaProfile();
    sub_23E1EE1C4(&qword_256D3FA90, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
    sub_23E5382AC();
    v9 = v11;
    v13 = *(_QWORD *)(v3 + *(int *)(v11 + 24));
    v12 = 2;
    type metadata accessor for HMMediaSystemRoleType(0);
    sub_23E1EE1C4(&qword_256D3FA98, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&protocol conformance descriptor for HMMediaSystemRoleType);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 4;
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaSystemComponent.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystemComponent.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticMediaSystemComponent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x24BDAC7A8](v27);
  v28 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23E536F80();
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAA0);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for StaticMediaSystemComponent();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E241A24();
  v32 = v10;
  v14 = v33;
  sub_23E5384E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v33 = v8;
  v15 = (uint64_t)v13;
  LOBYTE(v35) = 0;
  v16 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v17 = v29;
  sub_23E538180();
  v23 = v16;
  v24 = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v31, v17);
  LOBYTE(v35) = 1;
  sub_23E1EE1C4(&qword_256D3FAA8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  v19 = (uint64_t)v28;
  sub_23E538180();
  v31 = 0;
  sub_23E1E2FDC(v19, v15 + v11[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  type metadata accessor for HMMediaSystemRoleType(0);
  v34 = 2;
  sub_23E1EE1C4(&qword_256D3FAB0, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&protocol conformance descriptor for HMMediaSystemRoleType);
  v20 = v31;
  sub_23E538180();
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v30);
    v21 = v24;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v15, v17);
  }
  else
  {
    *(_QWORD *)(v15 + v11[6]) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    v34 = 3;
    sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
    sub_23E538180();
    *(_QWORD *)(v15 + v11[7]) = v35;
    LOBYTE(v35) = 4;
    v22 = (uint64_t)v26;
    sub_23E538108();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v30);
    sub_23E1E4E3C(v22, v15 + v11[8], &qword_254333F50);
    sub_23E1E2F50(v15, v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  }
}

uint64_t sub_23E23F05C()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystemComponent.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E23F09C()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystemComponent.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_23E23F10C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaSystemComponent.init(from:)(a1, a2);
}

uint64_t sub_23E23F120(_QWORD *a1)
{
  return StaticMediaSystemComponent.encode(to:)(a1);
}

uint64_t sub_23E23F134@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  unsigned __int8 v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  id v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;

  v64 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  v61 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v58 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332938);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for StaticMediaProfile();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for StaticMediaSystemComponent();
  v63 = *((_QWORD *)v23 - 1);
  MEMORY[0x24BDAC7A8](v23);
  v62 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a4;
  v26 = objc_msgSend(a1, sel_mediaProfile);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_5;
  }
  v65 = v25;
  v27 = v26;
  v28 = a3;
  sub_23E3F49C0(v27, a2, v28, &v65, a5, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    v33 = (uint64_t)v22;
    sub_23E1E2FDC((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v34 = a1;
    v35 = objc_msgSend(a1, sel_uniqueIdentifier);
    v36 = (uint64_t)v62;
    sub_23E536F68();

    v32 = v23;
    sub_23E1E2F50(v33, v36 + v23[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v37 = objc_msgSend(v34, sel_role);
    v38 = objc_msgSend(v37, sel_type);

    *(_QWORD *)(v36 + v23[6]) = v38;
    v39 = objc_msgSend(v27, sel_accessory);
    if (v39)
    {
      v40 = v39;
      v41 = objc_msgSend(v39, sel_room);
      if (v41)
      {
        v42 = v41;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
        v43 = v61;
        v44 = *(unsigned __int8 *)(v61 + 80);
        v57 = v33;
        v45 = (v44 + 32) & ~v44;
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_23E539650;
        v47 = v46 + v45;
        v48 = objc_msgSend(v42, sel_uniqueIdentifier);
        v56 = v42;
        v49 = v58;
        sub_23E536F68();

        v50 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
        v51 = v60;
        v50(v47, v49, v60);
        v52 = sub_23E2CD9CC(v46);
        swift_setDeallocating();
        v36 = (uint64_t)v62;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(_QWORD *)(v36 + v32[7]) = v52;
        v53 = objc_msgSend(v40, sel_uniqueIdentifier);
        v54 = (uint64_t)v59;
        sub_23E536F68();

        sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v54, 0, 1, v51);
        sub_23E1E4E3C(v54, v36 + v32[8], &qword_254333F50);
LABEL_11:
        v31 = v63;
        v30 = v64;
        sub_23E1E2FDC(v36, v64, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        v29 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v30, v29, 1, v32);
      }

    }
    sub_23E1E2FA0(v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    *(_QWORD *)(v36 + v23[7]) = MEMORY[0x24BEE4B08];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v36 + v23[8], 1, 1, v60);
    goto LABEL_11;
  }

  sub_23E1E7C64((uint64_t)v18, &qword_254332938);
LABEL_5:
  v29 = 1;
  v31 = v63;
  v30 = v64;
  v32 = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v30, v29, 1, v32);
}

uint64_t sub_23E23F61C()
{
  sub_23E1EE1C4(&qword_256D3FCC0, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&unk_23E539878);
  return sub_23E5377B4();
}

uint64_t sub_23E23F690()
{
  sub_23E1EE1C4(&qword_256D3FCC0, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&unk_23E539878);
  return sub_23E537778();
}

void StaticMediaSystemComponent.PlaybackState.init(from:specialMediaCategory:)(id a1@<X0>, unsigned __int16 *a2@<X1>, _BYTE *a3@<X8>)
{
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;

  v5 = *a2;
  if ((~v5 & 0xFEFC) == 0)
    goto LABEL_2;
  v7 = v5 >> 14;
  if (v5 >> 14)
  {
    if (v7 != 1)
    {
      if (v7 != 2)
        goto LABEL_2;
      if (v5 == 32769)
        goto LABEL_10;
      if (v5 != 33024)
        goto LABEL_2;
    }
    if ((objc_msgSend(a1, sel_capability) & 1) == 0)
    {
LABEL_2:

      LOBYTE(v6) = 6;
      goto LABEL_3;
    }
  }
LABEL_10:
  v8 = objc_msgSend(a1, sel_mediaSession);
  if (!v8)
    goto LABEL_2;
  v9 = v8;
  v10 = objc_msgSend(v8, sel_playbackState);

  if ((unint64_t)v10 >= 7)
    LOBYTE(v6) = 0;
  else
    v6 = 0x5000403020100uLL >> (8 * v10);
LABEL_3:
  *a3 = v6;
}

void StaticMediaSystemComponent.PlaybackState.init(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  unint64_t v7;

  v4 = objc_msgSend(a1, sel_mediaSession);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_playbackState);

    if ((unint64_t)v6 >= 7)
      LOBYTE(v7) = 0;
    else
      v7 = 0x5000403020100uLL >> (8 * v6);
  }
  else
  {

    LOBYTE(v7) = 6;
  }
  *a2 = v7;
}

uint64_t sub_23E23F874()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E23F890 + 4 * byte_23E53B9A5[*v0]))();
}

void sub_23E23F890()
{
  static String.hfLocalized(_:)();
}

BOOL static StaticMediaSystemComponent.PlaybackState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticMediaSystemComponent.PlaybackState.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E23F950()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E23F980 + 4 * byte_23E53B9AB[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_23E23F980()
{
  return 0x676E6979616C70;
}

uint64_t sub_23E23F994()
{
  return 0x646573756170;
}

uint64_t sub_23E23F9A8()
{
  return 0x646570706F7473;
}

uint64_t sub_23E23F9BC()
{
  return 0x7075727265746E69;
}

uint64_t sub_23E23F9DC()
{
  return 0x676E6964616F6CLL;
}

uint64_t sub_23E23F9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2461F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E23FA14(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23E23FA20()
{
  sub_23E241AEC();
  return sub_23E538570();
}

uint64_t sub_23E23FA48()
{
  sub_23E241AEC();
  return sub_23E53857C();
}

uint64_t sub_23E23FA70()
{
  return 0;
}

void sub_23E23FA7C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23E23FA88()
{
  sub_23E241B74();
  return sub_23E538570();
}

uint64_t sub_23E23FAB0()
{
  sub_23E241B74();
  return sub_23E53857C();
}

uint64_t sub_23E23FAD8()
{
  sub_23E241B30();
  return sub_23E538570();
}

uint64_t sub_23E23FB00()
{
  sub_23E241B30();
  return sub_23E53857C();
}

uint64_t sub_23E23FB28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23E23FB54()
{
  sub_23E241BFC();
  return sub_23E538570();
}

uint64_t sub_23E23FB7C()
{
  sub_23E241BFC();
  return sub_23E53857C();
}

uint64_t sub_23E23FBA4()
{
  sub_23E241C40();
  return sub_23E538570();
}

uint64_t sub_23E23FBCC()
{
  sub_23E241C40();
  return sub_23E53857C();
}

uint64_t sub_23E23FBF4()
{
  sub_23E241BB8();
  return sub_23E538570();
}

uint64_t sub_23E23FC1C()
{
  sub_23E241BB8();
  return sub_23E53857C();
}

uint64_t sub_23E23FC44()
{
  sub_23E241C84();
  return sub_23E538570();
}

uint64_t sub_23E23FC6C()
{
  sub_23E241C84();
  return sub_23E53857C();
}

void StaticMediaSystemComponent.PlaybackState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[17];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAB8);
  v15[13] = *(_QWORD *)(v3 - 8);
  v15[14] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v15[12] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAC0);
  v15[10] = *(_QWORD *)(v5 - 8);
  v15[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[9] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAC8);
  v15[7] = *(_QWORD *)(v7 - 8);
  v15[8] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15[6] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAD0);
  v15[4] = *(_QWORD *)(v9 - 8);
  v15[5] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v15[3] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAD8);
  v15[1] = *(_QWORD *)(v11 - 8);
  v15[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAE0);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FAE8);
  v15[15] = *(_QWORD *)(v13 - 8);
  v15[16] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E241AEC();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E23FEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 70) = 0;
  sub_23E241C84();
  v5 = *(_QWORD *)(v4 - 96);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

uint64_t StaticMediaSystemComponent.PlaybackState.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticMediaSystemComponent.PlaybackState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v29[4];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v46 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB28);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB30);
  v37 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB38);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB40);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB48);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v40 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB50);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB58);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23E241AEC();
  v21 = v48;
  sub_23E5384E0();
  if (!v21)
  {
    v29[3] = v15;
    v29[1] = v13;
    v29[2] = v12;
    v30 = v17;
    v48 = v16;
    v22 = v19;
    v23 = sub_23E5381C8();
    if (*(_QWORD *)(v23 + 16) == 1)
    {
      v29[0] = v23;
      __asm { BR              X9 }
    }
    v24 = sub_23E537ED4();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v26 = &type metadata for StaticMediaSystemComponent.PlaybackState;
    v27 = v48;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v27);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
}

void sub_23E2404B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v0;
  *(_BYTE *)(v5 - 69) = 1;
  sub_23E241C40();
  v7 = *(_QWORD *)(v5 - 160);
  v8 = *(_QWORD *)(v5 - 96);
  sub_23E5380C0();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v7, *(_QWORD *)(v5 - 208));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v8);
    *v3 = v6;
    JUMPOUT(0x23E240490);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x23E240488);
}

uint64_t sub_23E240704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaSystemComponent.PlaybackState.init(from:)(a1, a2);
}

void sub_23E240718(_QWORD *a1)
{
  StaticMediaSystemComponent.PlaybackState.encode(to:)(a1);
}

uint64_t sub_23E24072C(__int128 *a1, uint64_t a2)
{
  return sub_23E2409E0(a1, a2, type metadata accessor for StaticAccessory, (void (*)(char *))StaticAccessory.hash(into:));
}

uint64_t sub_23E240740(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v31 = *a1;
  v32 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v29[1] = a1;
  v33 = v13;
  v34 = v14;
  v35 = v11;
  v29[2] = sub_23E5384A4();
  v30 = a2;
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      goto LABEL_19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v28 = sub_23E5374CC();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
      goto LABEL_21;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    if (!v26)
      break;
LABEL_14:
    v18 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v19)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_23E538468();
  }
  v26 = *(_QWORD *)(v15 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_23E2409CC(__int128 *a1, uint64_t a2)
{
  return sub_23E2409E0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:));
}

uint64_t sub_23E2409E0(__int128 *a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t result;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v26;
  int64_t v27;
  __int128 *v28;
  uint64_t v29;
  void (*v30)(char *);
  char v31[72];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v30 = a4;
  v7 = a3(0);
  v29 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - v8;
  v10 = *((_QWORD *)a1 + 8);
  v11 = a1[1];
  v32 = *a1;
  v33 = v11;
  v12 = a1[2];
  v13 = a1[3];
  v28 = a1;
  v34 = v12;
  v35 = v13;
  v36 = v10;
  sub_23E5384A4();
  v14 = a2 + 56;
  v15 = 1 << *(_BYTE *)(a2 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a2 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v21 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v21++, 1))
      goto LABEL_19;
    if (v21 >= v18)
    {
LABEL_17:
      swift_release();
      return sub_23E538468();
    }
    v26 = *(_QWORD *)(v14 + 8 * v21);
    if (!v26)
      break;
LABEL_16:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v29 + 72) * v23, (uint64_t)v9, a3);
    sub_23E53845C();
    v30(v31);
    v24 = sub_23E5384A4();
    result = sub_23E1E2FA0((uint64_t)v9, a3);
    v20 ^= v24;
  }
  v27 = v21 + 1;
  if (v21 + 1 >= v18)
    goto LABEL_17;
  v26 = *(_QWORD *)(v14 + 8 * v27);
  if (v26)
  {
    ++v21;
    goto LABEL_16;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v18)
      goto LABEL_17;
    v26 = *(_QWORD *)(v14 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23E240BC0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_23E5384A4();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_23E538468();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_16:
    v9 = (v12 - 1) & v12;
LABEL_5:
    sub_23E53845C();
    sub_23E53848C();
    result = sub_23E5384A4();
    v4 ^= result;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_23E538468();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_23E538468();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23E240D30(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;

  result = sub_23E5384A4();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1))
      goto LABEL_19;
    if (v5 >= v10)
      return sub_23E538468();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    if (!v12)
      break;
LABEL_16:
    v9 = (v12 - 1) & v12;
LABEL_5:
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v4 ^= result;
  }
  v13 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_23E538468();
  v12 = *(_QWORD *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v5 >= v10)
      return sub_23E538468();
    v12 = *(_QWORD *)(v6 + 8 * v5);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_23E240E98(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  int64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 *v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v43 = sub_23E536F80();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v38 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v38 - v12;
  v13 = *((_QWORD *)a1 + 8);
  v14 = a1[1];
  v49 = *a1;
  v50 = v14;
  v15 = a1[2];
  v16 = a1[3];
  v38 = a1;
  v51 = v15;
  v52 = v16;
  v53 = v13;
  v44 = sub_23E5384A4();
  v17 = *(_QWORD *)(a2 + 56);
  v40 = a2 + 56;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v39 = (unint64_t)(v18 + 63) >> 6;
  v48 = a2;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v23 = 0;
  v24 = type metadata accessor for StaticAccessory.DeviceIdentifier;
  v25 = v43;
  while (1)
  {
    if (v20)
    {
      v32 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v33 = v32 | (v23 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v23++, 1))
      goto LABEL_22;
    if (v23 >= v39)
    {
LABEL_20:
      swift_release();
      return sub_23E538468();
    }
    v35 = *(_QWORD *)(v40 + 8 * v23);
    if (!v35)
      break;
LABEL_17:
    v20 = (v35 - 1) & v35;
    v33 = __clz(__rbit64(v35)) + (v23 << 6);
LABEL_18:
    v37 = v45;
    sub_23E1E2F50(*(_QWORD *)(v48 + 48) + *(_QWORD *)(v46 + 72) * v33, v45, v24);
    sub_23E1E2FDC(v37, (uint64_t)v11, v24);
    sub_23E53845C();
    sub_23E1E2F50((uint64_t)v11, (uint64_t)v8, v24);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = v42;
      v27 = v24;
      v28 = v22;
      v29 = v41;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v8, v25);
      sub_23E538468();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      v30 = v29;
      v22 = v28;
      v24 = v27;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
    }
    else
    {
      sub_23E538468();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
    }
    v31 = sub_23E5384A4();
    result = sub_23E1E2FA0((uint64_t)v11, v24);
    v22 ^= v31;
  }
  v36 = v23 + 1;
  if (v23 + 1 >= v39)
    goto LABEL_20;
  v35 = *(_QWORD *)(v40 + 8 * v36);
  if (v35)
  {
    ++v23;
    goto LABEL_17;
  }
  while (1)
  {
    v23 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v23 >= v39)
      goto LABEL_20;
    v35 = *(_QWORD *)(v40 + 8 * v23);
    ++v36;
    if (v35)
      goto LABEL_17;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23E241228(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23E5384A4();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_14;
  }
  v8 = 1;
  if (v6 > 1)
  {
    v9 = *(_QWORD *)(a2 + 64);
    if (v9)
    {
LABEL_13:
      v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_14:
      v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
      sub_23E53845C();
      __asm { BR              X8 }
    }
    v10 = 2;
    if (v6 > 2)
    {
      v9 = *(_QWORD *)(a2 + 72);
      if (v9)
      {
        v8 = 2;
        goto LABEL_13;
      }
      while (1)
      {
        v8 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          __break(1u);
          JUMPOUT(0x23E241434);
        }
        if (v8 >= v6)
          break;
        v9 = *(_QWORD *)(a2 + 56 + 8 * v8);
        ++v10;
        if (v9)
          goto LABEL_13;
      }
    }
  }
  swift_release();
  return sub_23E538468();
}

uint64_t sub_23E24144C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v14;

  result = sub_23E5384A4();
  v4 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a2 + 56);
  v7 = a2 + 56;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 24);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (!v11)
    {
      if (__OFADD__(v5++, 1))
        goto LABEL_18;
      if (v5 >= v12)
        return sub_23E538468();
      v11 = *(_QWORD *)(v7 + 8 * v5);
      if (!v11)
        break;
    }
LABEL_5:
    v11 &= v11 - 1;
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v4 ^= result;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v12)
    return sub_23E538468();
  v11 = *(_QWORD *)(v7 + 8 * v14);
  if (v11)
  {
    ++v5;
    goto LABEL_5;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v12)
      return sub_23E538468();
    v11 = *(_QWORD *)(v7 + 8 * v5);
    ++v14;
    if (v11)
      goto LABEL_5;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_23E24157C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;

  result = sub_23E5384A4();
  v4 = result;
  v5 = 0;
  v6 = 0;
  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v6++, 1))
      goto LABEL_19;
    if (v6 >= v11)
      return sub_23E538468();
    v15 = *(_QWORD *)(v7 + 8 * v6);
    if (!v15)
      break;
LABEL_16:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = MEMORY[0x24264F6DC](v4, *(unsigned __int16 *)(*(_QWORD *)(a2 + 48) + 2 * v13), 2);
    v5 ^= result;
  }
  v16 = v6 + 1;
  if (v6 + 1 >= v11)
    return sub_23E538468();
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    ++v6;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return sub_23E538468();
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

BOOL _s13HomeDataModel26StaticMediaSystemComponentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v28 - v18;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v29 = v10;
  v20 = (int *)type metadata accessor for StaticMediaSystemComponent();
  if ((static StaticMediaProfile.== infix(_:_:)(a1 + v20[5], a2 + v20[5]) & 1) == 0
    || *(_QWORD *)(a1 + v20[6]) != *(_QWORD *)(a2 + v20[6])
    || (sub_23E1F8470(*(_QWORD *)(a1 + v20[7]), *(_QWORD *)(a2 + v20[7])) & 1) == 0)
  {
    return 0;
  }
  sub_23E1E7C20(a1 + v20[8], (uint64_t)v19, &qword_254333F50);
  sub_23E1E7C20(a2 + v20[8], (uint64_t)v17, &qword_254333F50);
  v21 = *(int *)(v8 + 48);
  v22 = (uint64_t)v29;
  v23 = (uint64_t)&v29[v21];
  sub_23E1E7C20((uint64_t)v19, (uint64_t)v29, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v17, v23, &qword_254333F50);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24(v22, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    if (v24(v23, 1, v4) == 1)
    {
      sub_23E1E7C64(v22, &qword_254333F50);
      return 1;
    }
    goto LABEL_10;
  }
  sub_23E1E7C20(v22, (uint64_t)v14, &qword_254333F50);
  if (v24(v23, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_10:
    sub_23E1E7C64(v22, &qword_254332798);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v23, v4);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v25 = sub_23E537514();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
  v26(v14, v4);
  sub_23E1E7C64(v22, &qword_254333F50);
  return (v25 & 1) != 0;
}

unint64_t sub_23E241A24()
{
  unint64_t result;

  result = qword_256D3FA88;
  if (!qword_256D3FA88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C334, &type metadata for StaticMediaSystemComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FA88);
  }
  return result;
}

uint64_t sub_23E241A68(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D3F718);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E241AEC()
{
  unint64_t result;

  result = qword_256D3FAF0;
  if (!qword_256D3FAF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C2E4, &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FAF0);
  }
  return result;
}

unint64_t sub_23E241B30()
{
  unint64_t result;

  result = qword_256D3FAF8;
  if (!qword_256D3FAF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C294, &type metadata for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FAF8);
  }
  return result;
}

unint64_t sub_23E241B74()
{
  unint64_t result;

  result = qword_256D3FB00;
  if (!qword_256D3FB00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C244, &type metadata for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FB00);
  }
  return result;
}

unint64_t sub_23E241BB8()
{
  unint64_t result;

  result = qword_256D3FB08;
  if (!qword_256D3FB08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C1F4, &type metadata for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FB08);
  }
  return result;
}

unint64_t sub_23E241BFC()
{
  unint64_t result;

  result = qword_256D3FB10;
  if (!qword_256D3FB10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C1A4, &type metadata for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FB10);
  }
  return result;
}

unint64_t sub_23E241C40()
{
  unint64_t result;

  result = qword_256D3FB18;
  if (!qword_256D3FB18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C154, &type metadata for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FB18);
  }
  return result;
}

unint64_t sub_23E241C84()
{
  unint64_t result;

  result = qword_256D3FB20;
  if (!qword_256D3FB20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C104, &type metadata for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FB20);
  }
  return result;
}

uint64_t sub_23E241CC8()
{
  return sub_23E1EE1C4(&qword_256D3FB68, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent, (uint64_t)&protocol conformance descriptor for StaticMediaSystemComponent);
}

uint64_t sub_23E241CF4()
{
  return sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_23E241D20()
{
  return sub_23E1EE1C4(&qword_256D3FB70, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&protocol conformance descriptor for HMMediaSystemRoleType);
}

uint64_t sub_23E241D4C()
{
  return sub_23E1EE1C4(&qword_256D3FB78, (uint64_t (*)(uint64_t))type metadata accessor for HMMediaSystemRoleType, (uint64_t)&protocol conformance descriptor for HMMediaSystemRoleType);
}

unint64_t sub_23E241D7C()
{
  unint64_t result;

  result = qword_256D3FB80;
  if (!qword_256D3FB80)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaSystemComponent.PlaybackState, &type metadata for StaticMediaSystemComponent.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_256D3FB80);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticMediaSystemComponent(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int EnumCaseMultiPayload;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t updated;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  char *__dst;
  char *__dsta;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  _QWORD *v115;
  int *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v28 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v28;
  }
  v7 = sub_23E536F80();
  v113 = *(_QWORD *)(v7 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  v8(a1, a2, v7);
  v115 = a1;
  v116 = a3;
  v9 = a3[5];
  v10 = &a1[v9];
  v117 = a2;
  v11 = &a2[v9];
  v120 = v8;
  v8(&a1[v9], &a2[v9], v7);
  v12 = (int *)type metadata accessor for StaticMediaProfile();
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  *(_QWORD *)&v10[v12[6]] = *(_QWORD *)&v11[v12[6]];
  v17 = v12[7];
  v18 = &v10[v17];
  v19 = &v11[v17];
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = v20;
  v114 = v12;
  v21 = v12[8];
  v118 = &v10[v21];
  v22 = &v11[v21];
  v23 = sub_23E536F20();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v112 = v23;
  v111 = v24;
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v118, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v118, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v118, 0, 1, v23);
  }
  v29 = v114[9];
  v30 = &v10[v29];
  v31 = &v11[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v10[v114[10]] = v11[v114[10]];
  v10[v114[11]] = v11[v114[11]];
  v10[v114[12]] = v11[v114[12]];
  v10[v114[13]] = v11[v114[13]];
  v33 = v114[14];
  v34 = &v10[v33];
  v35 = &v11[v33];
  swift_bridgeObjectRetain();
  v119 = v7;
  v120(v34, v35, v7);
  v10[v114[15]] = v11[v114[15]];
  v10[v114[16]] = v11[v114[16]];
  *(_QWORD *)&v10[v114[17]] = *(_QWORD *)&v11[v114[17]];
  v36 = v114[18];
  v37 = &v10[v36];
  v38 = &v11[v36];
  v39 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v41(v38, 1, v39))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v120(v37, v38, v119);
    }
    else
    {
      v43 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v43;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v10[v114[19]] = v11[v114[19]];
  v10[v114[20]] = v11[v114[20]];
  v44 = v114[21];
  v45 = &v10[v44];
  v46 = &v11[v44];
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *((_QWORD *)v45 + 1) = v47;
  *(_WORD *)&v10[v114[22]] = *(_WORD *)&v11[v114[22]];
  *(_QWORD *)&v10[v114[23]] = *(_QWORD *)&v11[v114[23]];
  v48 = v114[24];
  v49 = &v10[v48];
  v50 = &v11[v48];
  v51 = type metadata accessor for StaticSoftwareUpdate(0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53(v50, 1, v51))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    v55 = v113;
    v56 = v117;
    goto LABEL_30;
  }
  v110 = v52;
  v120(v49, v50, v119);
  v57 = *(int *)(v51 + 20);
  v58 = &v49[v57];
  v59 = &v50[v57];
  v60 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v56 = v117;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v71 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v71;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v73 = *(int *)(updated + 20);
      v106 = updated;
      __dst = &v58[v73];
      v74 = &v59[v73];
      swift_bridgeObjectRetain();
      if (v25(v74, 1, v112))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(__dst, v74, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(__dst, 0, 1, v112);
      }
      v81 = *(int *)(v106 + 24);
      v82 = &v58[v81];
      v83 = &v59[v81];
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      v85 = *(int *)(v106 + 28);
      v86 = &v58[v85];
      v87 = &v59[v85];
      v88 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v58[*(int *)(v89 + 48)] = v59[*(int *)(v89 + 48)];
      swift_storeEnumTagMultiPayload();
      v55 = v113;
      goto LABEL_29;
    case 1:
      v76 = *((_QWORD *)v59 + 1);
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v76;
      v77 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v78 = *(int *)(v77 + 20);
      v107 = v77;
      __dsta = &v58[v78];
      v79 = &v59[v78];
      swift_bridgeObjectRetain();
      if (v25(v79, 1, v112))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dsta, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(__dsta, v79, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(__dsta, 0, 1, v112);
      }
      v90 = *(int *)(v107 + 24);
      v91 = &v58[v90];
      v92 = &v59[v90];
      v93 = *((_QWORD *)v92 + 1);
      *(_QWORD *)v91 = *(_QWORD *)v92;
      *((_QWORD *)v91 + 1) = v93;
      v94 = *(int *)(v107 + 28);
      v95 = &v58[v94];
      v96 = &v59[v94];
      v97 = *((_QWORD *)v96 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v58[*(int *)(v98 + 48)] = v59[*(int *)(v98 + 48)];
      goto LABEL_27;
    case 0:
      v120(v58, v59, v119);
      v62 = (int *)type metadata accessor for StaticHH2Update(0);
      v58[v62[5]] = v59[v62[5]];
      v63 = v62[6];
      v64 = &v58[v63];
      v65 = &v59[v63];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = v67;
      *((_QWORD *)v64 + 1) = v66;
      v68 = v62[7];
      v69 = &v58[v68];
      v70 = &v59[v68];
      v69[8] = v70[8];
      *(_QWORD *)v69 = *(_QWORD *)v70;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
  }
  memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
LABEL_28:
  v55 = v113;
LABEL_29:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v49, 0, 1, v51);
LABEL_30:
  v10[v114[25]] = v11[v114[25]];
  v28 = v115;
  v99 = v116[7];
  *(_QWORD *)((char *)v115 + v116[6]) = *(_QWORD *)((char *)v56 + v116[6]);
  *(_QWORD *)((char *)v115 + v99) = *(_QWORD *)((char *)v56 + v99);
  v100 = v116[8];
  v101 = (char *)v115 + v100;
  v102 = (char *)v56 + v100;
  v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  swift_bridgeObjectRetain();
  if (v103(v102, 1, v119))
  {
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    v120(v101, v102, v119);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v101, 0, 1, v119);
  }
  return v28;
}

uint64_t destroy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v21(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v21(v5, v4);
  v6 = (int *)type metadata accessor for StaticMediaProfile();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v5 + v6[8];
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v21(v5 + v6[14], v4);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[18];
  v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v21(v11, v4);
    else
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v5 + v6[24];
  v14 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v21(v13, v4);
    v15 = v13 + *(int *)(v14 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v17 = v15 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v10(v17, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_16;
      v21(v15, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v18 = a1 + *(int *)(a2 + 32);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(v18, v4);
  return result;
}

uint64_t initializeWithCopy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  int EnumCaseMultiPayload;
  char *v61;
  int *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  int *updated;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (**v90)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  const void *v103;
  unsigned int (*v104)(const void *, uint64_t, uint64_t);
  uint64_t v105;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  void *__dst;
  void (**__dsta)(char *, _QWORD, uint64_t, uint64_t);
  int *v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;

  v6 = sub_23E536F80();
  v114 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
  v7(a1, a2, v6);
  v113 = a3;
  v8 = a3[5];
  v9 = a1 + v8;
  v118 = a2;
  v10 = a2 + v8;
  v120 = v7;
  v121 = v6;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StaticMediaProfile();
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  v16 = v11[7];
  v17 = (_QWORD *)(v9 + v16);
  v18 = (_QWORD *)(v10 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = v11[8];
  __dst = (void *)(v9 + v20);
  v117 = v11;
  v21 = (const void *)(v10 + v20);
  v22 = sub_23E536F20();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v119 = a1;
  v112 = v22;
  if (v24(v21, 1, v22))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  v26 = v23;
  v27 = v117[9];
  v28 = (_QWORD *)(v9 + v27);
  v29 = (_QWORD *)(v10 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_BYTE *)(v9 + v117[10]) = *(_BYTE *)(v10 + v117[10]);
  *(_BYTE *)(v9 + v117[11]) = *(_BYTE *)(v10 + v117[11]);
  *(_BYTE *)(v9 + v117[12]) = *(_BYTE *)(v10 + v117[12]);
  *(_BYTE *)(v9 + v117[13]) = *(_BYTE *)(v10 + v117[13]);
  v31 = v117[14];
  v32 = v9 + v31;
  v33 = v10 + v31;
  swift_bridgeObjectRetain();
  v120(v32, v33, v121);
  *(_BYTE *)(v9 + v117[15]) = *(_BYTE *)(v10 + v117[15]);
  *(_BYTE *)(v9 + v117[16]) = *(_BYTE *)(v10 + v117[16]);
  *(_QWORD *)(v9 + v117[17]) = *(_QWORD *)(v10 + v117[17]);
  v34 = v117[18];
  v35 = (_QWORD *)(v9 + v34);
  v36 = (_QWORD *)(v10 + v34);
  v37 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  v111 = v26;
  if (v39(v36, 1, v37))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v120((uint64_t)v35, (uint64_t)v36, v121);
    }
    else
    {
      v41 = v36[1];
      *v35 = *v36;
      v35[1] = v41;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  *(_BYTE *)(v9 + v117[19]) = *(_BYTE *)(v10 + v117[19]);
  *(_BYTE *)(v9 + v117[20]) = *(_BYTE *)(v10 + v117[20]);
  v42 = v117[21];
  v43 = (_QWORD *)(v9 + v42);
  v44 = (_QWORD *)(v10 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_WORD *)(v9 + v117[22]) = *(_WORD *)(v10 + v117[22]);
  *(_QWORD *)(v9 + v117[23]) = *(_QWORD *)(v10 + v117[23]);
  v46 = v117[24];
  v47 = (char *)(v9 + v46);
  v48 = (char *)(v10 + v46);
  v49 = type metadata accessor for StaticSoftwareUpdate(0);
  v50 = *(_QWORD **)(v49 - 8);
  v51 = (unsigned int (*)(char *, uint64_t, uint64_t))v50[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51(v48, 1, v49))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    v53 = v113;
    v54 = v114;
    v55 = v121;
    goto LABEL_28;
  }
  __dsta = (void (**)(char *, _QWORD, uint64_t, uint64_t))v50;
  v120((uint64_t)v47, (uint64_t)v48, v121);
  v56 = *(int *)(v49 + 20);
  v57 = &v47[v56];
  v58 = &v48[v56];
  v59 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v61 = v47;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v110 = v47;
      v71 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v71;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v73 = updated[5];
      v108 = &v57[v73];
      v74 = &v58[v73];
      swift_bridgeObjectRetain();
      if (v24(v74, 1, v112))
      {
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v108, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v108, v74, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v112);
      }
      v81 = updated[6];
      v82 = &v57[v81];
      v83 = &v58[v81];
      v84 = *((_QWORD *)v83 + 1);
      *(_QWORD *)v82 = *(_QWORD *)v83;
      *((_QWORD *)v82 + 1) = v84;
      v85 = updated[7];
      v86 = &v57[v85];
      v87 = &v58[v85];
      v88 = *((_QWORD *)v87 + 1);
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *((_QWORD *)v86 + 1) = v88;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v57[*(int *)(v89 + 48)] = v58[*(int *)(v89 + 48)];
      swift_storeEnumTagMultiPayload();
      v53 = v113;
      v54 = v114;
      v55 = v121;
      v90 = __dsta;
      v61 = v110;
      goto LABEL_27;
    case 1:
      v76 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v76;
      v77 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v78 = *(int *)(v77 + 20);
      v107 = &v57[v78];
      v109 = v77;
      v79 = &v58[v78];
      swift_bridgeObjectRetain();
      if (v24(v79, 1, v112))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v107, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v107, v79, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v107, 0, 1, v112);
      }
      v55 = v121;
      v91 = *(int *)(v109 + 24);
      v92 = &v57[v91];
      v93 = &v58[v91];
      v94 = *((_QWORD *)v93 + 1);
      *(_QWORD *)v92 = *(_QWORD *)v93;
      *((_QWORD *)v92 + 1) = v94;
      v95 = *(int *)(v109 + 28);
      v96 = &v57[v95];
      v97 = &v58[v95];
      v98 = *((_QWORD *)v97 + 1);
      *(_QWORD *)v96 = *(_QWORD *)v97;
      *((_QWORD *)v96 + 1) = v98;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v57[*(int *)(v99 + 48)] = v58[*(int *)(v99 + 48)];
      goto LABEL_25;
    case 0:
      v55 = v121;
      v120((uint64_t)v57, (uint64_t)v58, v121);
      v62 = (int *)type metadata accessor for StaticHH2Update(0);
      v57[v62[5]] = v58[v62[5]];
      v63 = v62[6];
      v64 = &v57[v63];
      v65 = &v58[v63];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = v67;
      *((_QWORD *)v64 + 1) = v66;
      v68 = v62[7];
      v69 = &v57[v68];
      v70 = &v58[v68];
      v69[8] = v70[8];
      *(_QWORD *)v69 = *(_QWORD *)v70;
      swift_bridgeObjectRetain();
LABEL_25:
      swift_storeEnumTagMultiPayload();
      v53 = v113;
      v54 = v114;
      goto LABEL_26;
  }
  memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  v53 = v113;
  v54 = v114;
  v55 = v121;
LABEL_26:
  v90 = __dsta;
LABEL_27:
  v90[7](v61, 0, 1, v49);
LABEL_28:
  *(_BYTE *)(v9 + v117[25]) = *(_BYTE *)(v10 + v117[25]);
  v100 = v53[7];
  *(_QWORD *)(v119 + v53[6]) = *(_QWORD *)(v118 + v53[6]);
  *(_QWORD *)(v119 + v100) = *(_QWORD *)(v118 + v100);
  v101 = v53[8];
  v102 = (void *)(v119 + v101);
  v103 = (const void *)(v118 + v101);
  v104 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48);
  swift_bridgeObjectRetain();
  if (v104(v103, 1, v55))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    v120((uint64_t)v102, (uint64_t)v103, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v102, 0, 1, v55);
  }
  return v119;
}

uint64_t assignWithCopy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  unsigned int (*v22)(void *, uint64_t, uint64_t);
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  int EnumCaseMultiPayload;
  int *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  int *updated;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *__dst;
  char *__dsta;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  void (*v123)(char *, char *, uint64_t);
  int *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v6 = sub_23E536F80();
  v127 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 24);
  v7(a1, a2, v6);
  v124 = a3;
  v8 = a3[5];
  v9 = a1 + v8;
  v126 = a2;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StaticMediaProfile();
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (_QWORD *)(v10 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v11[7];
  v16 = (_QWORD *)(v9 + v15);
  v17 = (_QWORD *)(v10 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v122 = v11;
  v18 = v11[8];
  v19 = (void *)(v9 + v18);
  v20 = (void *)(v10 + v18);
  v21 = sub_23E536F20();
  v121 = *(_QWORD *)(v21 - 8);
  v22 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v121 + 48);
  v23 = v22(v19, 1, v21);
  v118 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
  v24 = v22(v20, 1, v21);
  v125 = a1;
  v119 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v121 + 16))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v121 + 8))(v19, v21);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v121 + 24))(v19, v20, v21);
LABEL_7:
  v26 = v122;
  v27 = v122[9];
  v28 = (_QWORD *)(v9 + v27);
  v29 = (_QWORD *)(v10 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v122[10]) = *(_BYTE *)(v10 + v122[10]);
  *(_BYTE *)(v9 + v122[11]) = *(_BYTE *)(v10 + v122[11]);
  *(_BYTE *)(v9 + v122[12]) = *(_BYTE *)(v10 + v122[12]);
  *(_BYTE *)(v9 + v122[13]) = *(_BYTE *)(v10 + v122[13]);
  v123 = (void (*)(char *, char *, uint64_t))v7;
  v7(v9 + v26[14], v10 + v26[14], v6);
  *(_BYTE *)(v9 + v26[15]) = *(_BYTE *)(v10 + v26[15]);
  *(_BYTE *)(v9 + v26[16]) = *(_BYTE *)(v10 + v26[16]);
  *(_QWORD *)(v9 + v26[17]) = *(_QWORD *)(v10 + v26[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v26[18];
  v31 = (_QWORD *)(v9 + v30);
  v32 = (_QWORD *)(v10 + v30);
  v33 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    v38 = v125;
    if (!v37)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v127 + 16))(v31, v32, v6);
      }
      else
      {
        *v31 = *v32;
        v31[1] = v32[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_21;
    }
LABEL_13:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_21;
  }
  v38 = v125;
  if (v37)
  {
    sub_23E1E2FA0((uint64_t)v31, type metadata accessor for StaticAccessory.DeviceIdentifier);
    goto LABEL_13;
  }
  if (v125 != v126)
  {
    sub_23E1E2FA0((uint64_t)v31, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v127 + 16))(v31, v32, v6);
    }
    else
    {
      *v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  *(_BYTE *)(v9 + v26[19]) = *(_BYTE *)(v10 + v26[19]);
  *(_BYTE *)(v9 + v26[20]) = *(_BYTE *)(v10 + v26[20]);
  v40 = v26[21];
  v41 = (_QWORD *)(v9 + v40);
  v42 = (_QWORD *)(v10 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + v26[22]) = *(_WORD *)(v10 + v26[22]);
  *(_QWORD *)(v9 + v26[23]) = *(_QWORD *)(v10 + v26[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v26[24];
  v44 = (char *)(v9 + v43);
  v45 = (char *)(v10 + v43);
  v46 = type metadata accessor for StaticSoftwareUpdate(0);
  v120 = *(_QWORD *)(v46 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
  v48 = v47(v44, 1, v46);
  v49 = v47(v45, 1, v46);
  if (v48)
  {
    if (!v49)
    {
      v50 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
      v50(v44, v45, v6);
      v51 = *(int *)(v46 + 20);
      v52 = &v44[v51];
      v53 = &v45[v51];
      __dst = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v114 = v6;
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v113 = v52;
        v78 = updated[5];
        v79 = &v52[v78];
        v80 = &v53[v78];
        swift_bridgeObjectRetain();
        if (v118(v80, 1, v119))
        {
LABEL_38:
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
LABEL_48:
          v64 = v126;
          v90 = updated[6];
          v91 = (_QWORD *)((char *)v113 + v90);
          v92 = &v53[v90];
          *v91 = *(_QWORD *)v92;
          v91[1] = *((_QWORD *)v92 + 1);
          v93 = updated[7];
          v94 = (_QWORD *)((char *)v113 + v93);
          v95 = &v53[v93];
          *v94 = *(_QWORD *)v95;
          v94[1] = *((_QWORD *)v95 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v113 + *(int *)(v96 + 48)) = v53[*(int *)(v96 + 48)];
          swift_storeEnumTagMultiPayload();
          v83 = v120;
          v6 = v114;
LABEL_49:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v44, 0, 1, v46);
          goto LABEL_50;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v52, v53, *(_QWORD *)(*(__dst - 1) + 64));
          }
          else
          {
            v50(v52, v53, v6);
            v55 = (int *)type metadata accessor for StaticHH2Update(0);
            v52[v55[5]] = v53[v55[5]];
            v56 = v55[6];
            v57 = &v52[v56];
            v58 = &v53[v56];
            *(_QWORD *)v57 = *(_QWORD *)v58;
            *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
            v59 = v55[7];
            v60 = &v52[v59];
            v61 = &v53[v59];
            v62 = v61[8];
            *(_QWORD *)v60 = *(_QWORD *)v61;
            v60[8] = v62;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          v64 = v126;
          v83 = v120;
          goto LABEL_49;
        }
        v114 = v6;
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v113 = v52;
        v81 = updated[5];
        v79 = &v52[v81];
        v80 = &v53[v81];
        swift_bridgeObjectRetain();
        if (v118(v80, 1, v119))
          goto LABEL_38;
      }
      (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v79, v80, v119);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v79, 0, 1, v119);
      goto LABEL_48;
    }
LABEL_29:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v64 = v126;
    goto LABEL_50;
  }
  if (v49)
  {
    sub_23E1E2FA0((uint64_t)v44, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_29;
  }
  v123(v44, v45, v6);
  v64 = v126;
  if (v38 == v126)
    goto LABEL_50;
  v65 = *(int *)(v46 + 20);
  v66 = &v44[v65];
  v67 = &v45[v65];
  sub_23E1E2FA0((uint64_t)v66, type metadata accessor for StaticSoftwareUpdate.Kind);
  v68 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v69 = swift_getEnumCaseMultiPayload();
  if (v69 == 2)
  {
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
    v84 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v85 = *(int *)(v84 + 20);
    v115 = v84;
    __dsta = &v66[v85];
    v86 = &v67[v85];
    swift_bridgeObjectRetain();
    if (v118(v86, 1, v119))
    {
LABEL_43:
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dsta, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
LABEL_59:
      v105 = *(int *)(v115 + 24);
      v106 = &v66[v105];
      v107 = &v67[v105];
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = *((_QWORD *)v107 + 1);
      v108 = *(int *)(v115 + 28);
      v109 = &v66[v108];
      v110 = &v67[v108];
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v66[*(int *)(v111 + 48)] = v67[*(int *)(v111 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
LABEL_58:
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(__dsta, v86, v119);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(__dsta, 0, 1, v119);
    goto LABEL_59;
  }
  if (v69 == 1)
  {
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
    v88 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v89 = *(int *)(v88 + 20);
    v115 = v88;
    __dsta = &v66[v89];
    v86 = &v67[v89];
    swift_bridgeObjectRetain();
    if (v118(v86, 1, v119))
      goto LABEL_43;
    goto LABEL_58;
  }
  if (v69)
  {
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v66, v67, v6);
    v70 = (int *)type metadata accessor for StaticHH2Update(0);
    v66[v70[5]] = v67[v70[5]];
    v71 = v70[6];
    v72 = &v66[v71];
    v73 = &v67[v71];
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
    v74 = v70[7];
    v75 = &v66[v74];
    v76 = &v67[v74];
    v77 = v76[8];
    *(_QWORD *)v75 = *(_QWORD *)v76;
    v75[8] = v77;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_50:
  *(_BYTE *)(v9 + v26[25]) = *(_BYTE *)(v10 + v26[25]);
  *(_QWORD *)(v38 + v124[6]) = *(_QWORD *)(v64 + v124[6]);
  *(_QWORD *)(v38 + v124[7]) = *(_QWORD *)(v64 + v124[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97 = v124[8];
  v98 = (char *)(v38 + v97);
  v99 = (char *)(v64 + v97);
  v100 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  v101 = v100(v38 + v97, 1, v6);
  v102 = v100((uint64_t)v99, 1, v6);
  if (!v101)
  {
    if (!v102)
    {
      v123(v98, v99, v6);
      return v38;
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v98, v6);
    goto LABEL_55;
  }
  if (v102)
  {
LABEL_55:
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    return v38;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v98, v99, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v98, 0, 1, v6);
  return v38;
}

uint64_t initializeWithTake for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int EnumCaseMultiPayload;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t updated;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  char *__src;
  uint64_t v53;
  char *__dst;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unsigned int (*v59)(void);
  int *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v61 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32);
  v7(a1, a2, v6);
  v60 = a3;
  v8 = a3[5];
  v9 = a1 + v8;
  v62 = a2;
  v63 = v7;
  v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StaticMediaProfile();
  *(_OWORD *)(v9 + v11[5]) = *(_OWORD *)(v10 + v11[5]);
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  v12 = v11[8];
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = sub_23E536F20();
  v16 = *(_QWORD *)(v15 - 8);
  v59 = *(unsigned int (**)(void))(v16 + 48);
  v58 = v16;
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v59)(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)(v9 + v11[9]) = *(_OWORD *)(v10 + v11[9]);
  *(_BYTE *)(v9 + v11[10]) = *(_BYTE *)(v10 + v11[10]);
  *(_BYTE *)(v9 + v11[11]) = *(_BYTE *)(v10 + v11[11]);
  *(_BYTE *)(v9 + v11[12]) = *(_BYTE *)(v10 + v11[12]);
  *(_BYTE *)(v9 + v11[13]) = *(_BYTE *)(v10 + v11[13]);
  v63(v9 + v11[14], v10 + v11[14], v6);
  *(_BYTE *)(v9 + v11[15]) = *(_BYTE *)(v10 + v11[15]);
  *(_BYTE *)(v9 + v11[16]) = *(_BYTE *)(v10 + v11[16]);
  *(_QWORD *)(v9 + v11[17]) = *(_QWORD *)(v10 + v11[17]);
  v18 = v11[18];
  v19 = (void *)(v9 + v18);
  v20 = (const void *)(v10 + v18);
  v21 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v63((uint64_t)v19, (uint64_t)v20, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(v22 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(_BYTE *)(v9 + v11[19]) = *(_BYTE *)(v10 + v11[19]);
  *(_BYTE *)(v9 + v11[20]) = *(_BYTE *)(v10 + v11[20]);
  *(_OWORD *)(v9 + v11[21]) = *(_OWORD *)(v10 + v11[21]);
  *(_WORD *)(v9 + v11[22]) = *(_WORD *)(v10 + v11[22]);
  *(_QWORD *)(v9 + v11[23]) = *(_QWORD *)(v10 + v11[23]);
  v24 = v11[24];
  v25 = (char *)(v9 + v24);
  v26 = (char *)(v10 + v24);
  v27 = type metadata accessor for StaticSoftwareUpdate(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    v30 = v60;
    v31 = v61;
    goto LABEL_25;
  }
  v63((uint64_t)v25, (uint64_t)v26, v6);
  v32 = *(int *)(v27 + 20);
  v57 = &v25[v32];
  v33 = &v26[v32];
  v55 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v56 = v28;
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v57, v33, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v63((uint64_t)v57, (uint64_t)v33, v6);
        v35 = (int *)type metadata accessor for StaticHH2Update(0);
        v57[v35[5]] = v33[v35[5]];
        *(_OWORD *)&v57[v35[6]] = *(_OWORD *)&v33[v35[6]];
        v36 = v35[7];
        v37 = &v57[v36];
        v38 = &v33[v36];
        v37[8] = v38[8];
        *(_QWORD *)v37 = *(_QWORD *)v38;
        swift_storeEnumTagMultiPayload();
      }
      v31 = v61;
      goto LABEL_24;
    }
    v39 = v57;
    *(_OWORD *)v57 = *(_OWORD *)v33;
    updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v43 = *(int *)(updated + 20);
    v53 = updated;
    __dst = &v57[v43];
    __src = &v33[v43];
    if (v59())
      goto LABEL_19;
LABEL_22:
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(__dst, __src, v15);
    v39 = v57;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v15);
    goto LABEL_23;
  }
  v39 = v57;
  *(_OWORD *)v57 = *(_OWORD *)v33;
  v40 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v41 = *(int *)(v40 + 20);
  v53 = v40;
  __dst = &v57[v41];
  __src = &v33[v41];
  if (!v59())
    goto LABEL_22;
LABEL_19:
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_23:
  v31 = v61;
  *(_OWORD *)((char *)v39 + *(int *)(v53 + 24)) = *(_OWORD *)&v33[*(int *)(v53 + 24)];
  *(_OWORD *)((char *)v39 + *(int *)(v53 + 28)) = *(_OWORD *)&v33[*(int *)(v53 + 28)];
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v39 + *(int *)(v45 + 48)) = v33[*(int *)(v45 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_24:
  v30 = v60;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v25, 0, 1, v27);
LABEL_25:
  *(_BYTE *)(v9 + v11[25]) = *(_BYTE *)(v10 + v11[25]);
  v46 = v30[7];
  *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)(v62 + v30[6]);
  *(_QWORD *)(a1 + v46) = *(_QWORD *)(v62 + v46);
  v47 = v30[8];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(v62 + v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v62 + v47, 1, v6))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v63((uint64_t)v48, (uint64_t)v49, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v48, 0, 1, v6);
  }
  return a1;
}

uint64_t assignWithTake for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(void);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  int v43;
  size_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  int EnumCaseMultiPayload;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  int v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v97;
  char *__src;
  int *updated;
  _QWORD *__dst;
  char *__dsta;
  uint64_t v102;
  unsigned int (*v103)(void);
  void (*v104)(char *, char *, uint64_t);
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v6 = sub_23E536F80();
  v108 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 40);
  v7(a1, a2, v6);
  v105 = a3;
  v106 = a2;
  v8 = a3[5];
  v107 = a1;
  v9 = a1 + v8;
  v10 = a2 + v8;
  v109 = v6;
  v7(a1 + v8, a2 + v8, v6);
  v11 = (int *)type metadata accessor for StaticMediaProfile();
  v12 = v11[5];
  v13 = (_QWORD *)(v9 + v12);
  v14 = (uint64_t *)(v10 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  swift_bridgeObjectRelease();
  v17 = v11[7];
  v18 = (_QWORD *)(v9 + v17);
  v19 = (uint64_t *)(v10 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = v11[8];
  v23 = (void *)(v9 + v22);
  v24 = (const void *)(v10 + v22);
  v25 = sub_23E536F20();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(void))(v26 + 48);
  v28 = ((uint64_t (*)(void *, uint64_t, uint64_t))v27)(v23, 1, v25);
  v103 = v27;
  v29 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v27)(v24, 1, v25);
  v102 = v26;
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v23, v24, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v26 + 40))(v23, v24, v25);
LABEL_7:
  v31 = v11[9];
  v32 = (_QWORD *)(v9 + v31);
  v33 = (uint64_t *)(v10 + v31);
  v35 = *v33;
  v34 = v33[1];
  *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + v11[10]) = *(_BYTE *)(v10 + v11[10]);
  *(_BYTE *)(v9 + v11[11]) = *(_BYTE *)(v10 + v11[11]);
  *(_BYTE *)(v9 + v11[12]) = *(_BYTE *)(v10 + v11[12]);
  *(_BYTE *)(v9 + v11[13]) = *(_BYTE *)(v10 + v11[13]);
  v104 = (void (*)(char *, char *, uint64_t))v7;
  v7(v9 + v11[14], v10 + v11[14], v109);
  *(_BYTE *)(v9 + v11[15]) = *(_BYTE *)(v10 + v11[15]);
  *(_BYTE *)(v9 + v11[16]) = *(_BYTE *)(v10 + v11[16]);
  *(_QWORD *)(v9 + v11[17]) = *(_QWORD *)(v10 + v11[17]);
  swift_bridgeObjectRelease();
  v36 = v11[18];
  v37 = (void *)(v9 + v36);
  v38 = (void *)(v10 + v36);
  v39 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      if (v107 == v106)
        goto LABEL_21;
      sub_23E1E2FA0((uint64_t)v37, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, void *, uint64_t))(v108 + 32))(v37, v38, v109);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      v44 = *(_QWORD *)(v40 + 64);
LABEL_14:
      memcpy(v37, v38, v44);
      goto LABEL_21;
    }
    sub_23E1E2FA0((uint64_t)v37, type metadata accessor for StaticAccessory.DeviceIdentifier);
LABEL_13:
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333218) - 8) + 64);
    goto LABEL_14;
  }
  if (v43)
    goto LABEL_13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void *, void *, uint64_t))(v108 + 32))(v37, v38, v109);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(_QWORD *)(v40 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_21:
  *(_BYTE *)(v9 + v11[19]) = *(_BYTE *)(v10 + v11[19]);
  *(_BYTE *)(v9 + v11[20]) = *(_BYTE *)(v10 + v11[20]);
  v45 = v11[21];
  v46 = (_QWORD *)(v9 + v45);
  v47 = (uint64_t *)(v10 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + v11[22]) = *(_WORD *)(v10 + v11[22]);
  *(_QWORD *)(v9 + v11[23]) = *(_QWORD *)(v10 + v11[23]);
  swift_bridgeObjectRelease();
  v50 = v11[24];
  v51 = (char *)(v9 + v50);
  v52 = (char *)(v10 + v50);
  v53 = type metadata accessor for StaticSoftwareUpdate(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55(v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      v58 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
      v58(v51, v52, v109);
      v59 = *(int *)(v53 + 20);
      v60 = &v51[v59];
      v61 = &v52[v59];
      __dst = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)v60 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v78 = updated[5];
        v79 = &v60[v78];
        __src = &v61[v78];
        if (v103())
        {
LABEL_38:
          v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v79, __src, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
LABEL_48:
          v68 = v106;
          *(_OWORD *)&v60[updated[6]] = *(_OWORD *)&v61[updated[6]];
          *(_OWORD *)&v60[updated[7]] = *(_OWORD *)&v61[updated[7]];
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          v60[*(int *)(v87 + 48)] = v61[*(int *)(v87 + 48)];
          swift_storeEnumTagMultiPayload();
LABEL_49:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
          goto LABEL_50;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v60, v61, *(_QWORD *)(*(__dst - 1) + 64));
          }
          else
          {
            v58(v60, v61, v109);
            v63 = (int *)type metadata accessor for StaticHH2Update(0);
            v60[v63[5]] = v61[v63[5]];
            *(_OWORD *)&v60[v63[6]] = *(_OWORD *)&v61[v63[6]];
            v64 = v63[7];
            v65 = &v60[v64];
            v66 = &v61[v64];
            v65[8] = v66[8];
            *(_QWORD *)v65 = *(_QWORD *)v66;
            swift_storeEnumTagMultiPayload();
          }
          v68 = v106;
          goto LABEL_49;
        }
        *(_OWORD *)v60 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v80 = updated[5];
        v79 = &v60[v80];
        __src = &v61[v80];
        if (v103())
          goto LABEL_38;
      }
      (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v79, __src, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v79, 0, 1, v25);
      goto LABEL_48;
    }
LABEL_29:
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    v68 = v106;
    goto LABEL_50;
  }
  if (v57)
  {
    sub_23E1E2FA0((uint64_t)v51, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_29;
  }
  v104(v51, v52, v109);
  v68 = v106;
  if (v107 == v106)
    goto LABEL_50;
  v69 = *(int *)(v53 + 20);
  v70 = &v51[v69];
  v71 = &v52[v69];
  sub_23E1E2FA0((uint64_t)v70, type metadata accessor for StaticSoftwareUpdate.Kind);
  v72 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v73 = swift_getEnumCaseMultiPayload();
  if (v73 == 2)
  {
    *(_OWORD *)v70 = *(_OWORD *)v71;
    v82 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v83 = v82[5];
    __dsta = &v70[v83];
    v84 = &v71[v83];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v103)(&v71[v83], 1, v25))
    {
LABEL_43:
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dsta, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
LABEL_59:
      *(_OWORD *)&v70[v82[6]] = *(_OWORD *)&v71[v82[6]];
      *(_OWORD *)&v70[v82[7]] = *(_OWORD *)&v71[v82[7]];
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v70[*(int *)(v97 + 48)] = v71[*(int *)(v97 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
LABEL_58:
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(__dsta, v84, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(__dsta, 0, 1, v25);
    goto LABEL_59;
  }
  if (v73 == 1)
  {
    *(_OWORD *)v70 = *(_OWORD *)v71;
    v82 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v86 = v82[5];
    __dsta = &v70[v86];
    v84 = &v71[v86];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v103)(&v71[v86], 1, v25))
      goto LABEL_43;
    goto LABEL_58;
  }
  if (v73)
  {
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v70, v71, v109);
    v74 = (int *)type metadata accessor for StaticHH2Update(0);
    v70[v74[5]] = v71[v74[5]];
    *(_OWORD *)&v70[v74[6]] = *(_OWORD *)&v71[v74[6]];
    v75 = v74[7];
    v76 = &v70[v75];
    v77 = &v71[v75];
    v76[8] = v77[8];
    *(_QWORD *)v76 = *(_QWORD *)v77;
    swift_storeEnumTagMultiPayload();
  }
LABEL_50:
  *(_BYTE *)(v9 + v11[25]) = *(_BYTE *)(v10 + v11[25]);
  v88 = v105[7];
  *(_QWORD *)(v107 + v105[6]) = *(_QWORD *)(v68 + v105[6]);
  *(_QWORD *)(v107 + v88) = *(_QWORD *)(v68 + v88);
  swift_bridgeObjectRelease();
  v89 = v105[8];
  v90 = (char *)(v107 + v89);
  v91 = (char *)(v68 + v89);
  v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  v93 = v92(v107 + v89, 1, v109);
  v94 = v92((uint64_t)v91, 1, v109);
  if (!v93)
  {
    if (!v94)
    {
      v104(v90, v91, v109);
      return v107;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v90, v109);
    goto LABEL_55;
  }
  if (v94)
  {
LABEL_55:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    return v107;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v90, v91, v109);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v90, 0, 1, v109);
  return v107;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystemComponent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E244D10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for StaticMediaProfile();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_10:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[8];
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(a1 + a3[7]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystemComponent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E244DEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = type metadata accessor for StaticMediaProfile();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E244EB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticMediaProfile();
    if (v1 <= 0x3F)
    {
      sub_23E20BB5C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState;
}

uint64_t _s13HomeDataModel26StaticMediaSystemComponentV13PlaybackStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E244FD8 + 4 * byte_23E53B9C2[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E24500C + 4 * byte_23E53B9BD[v4]))();
}

uint64_t sub_23E24500C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E245014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E24501CLL);
  return result;
}

uint64_t sub_23E245028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E245030);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E245034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E24503C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.CodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystemComponent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystemComponent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E245194 + 4 * byte_23E53B9CC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2451C8 + 4 * byte_23E53B9C7[v4]))();
}

uint64_t sub_23E2451C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2451D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2451D8);
  return result;
}

uint64_t sub_23E2451E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2451ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2451F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2451F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.CodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.CodingKeys;
}

unint64_t sub_23E245218()
{
  unint64_t result;

  result = qword_256D3FC30;
  if (!qword_256D3FC30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BE44, &type metadata for StaticMediaSystemComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC30);
  }
  return result;
}

unint64_t sub_23E245260()
{
  unint64_t result;

  result = qword_256D3FC38;
  if (!qword_256D3FC38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C0DC, &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC38);
  }
  return result;
}

unint64_t sub_23E2452A8()
{
  unint64_t result;

  result = qword_256D3FC40;
  if (!qword_256D3FC40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BFFC, &type metadata for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC40);
  }
  return result;
}

unint64_t sub_23E2452F0()
{
  unint64_t result;

  result = qword_256D3FC48;
  if (!qword_256D3FC48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C024, &type metadata for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC48);
  }
  return result;
}

unint64_t sub_23E245338()
{
  unint64_t result;

  result = qword_256D3FC50;
  if (!qword_256D3FC50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BFAC, &type metadata for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC50);
  }
  return result;
}

unint64_t sub_23E245380()
{
  unint64_t result;

  result = qword_256D3FC58;
  if (!qword_256D3FC58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BFD4, &type metadata for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC58);
  }
  return result;
}

unint64_t sub_23E2453C8()
{
  unint64_t result;

  result = qword_256D3FC60;
  if (!qword_256D3FC60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BF5C, &type metadata for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC60);
  }
  return result;
}

unint64_t sub_23E245410()
{
  unint64_t result;

  result = qword_256D3FC68;
  if (!qword_256D3FC68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BF84, &type metadata for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC68);
  }
  return result;
}

unint64_t sub_23E245458()
{
  unint64_t result;

  result = qword_256D3FC70;
  if (!qword_256D3FC70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BF0C, &type metadata for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC70);
  }
  return result;
}

unint64_t sub_23E2454A0()
{
  unint64_t result;

  result = qword_256D3FC78;
  if (!qword_256D3FC78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BF34, &type metadata for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC78);
  }
  return result;
}

unint64_t sub_23E2454E8()
{
  unint64_t result;

  result = qword_256D3FC80;
  if (!qword_256D3FC80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BEBC, &type metadata for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC80);
  }
  return result;
}

unint64_t sub_23E245530()
{
  unint64_t result;

  result = qword_256D3FC88;
  if (!qword_256D3FC88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BEE4, &type metadata for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC88);
  }
  return result;
}

unint64_t sub_23E245578()
{
  unint64_t result;

  result = qword_256D3FC90;
  if (!qword_256D3FC90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BE6C, &type metadata for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC90);
  }
  return result;
}

unint64_t sub_23E2455C0()
{
  unint64_t result;

  result = qword_256D3FC98;
  if (!qword_256D3FC98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BE94, &type metadata for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FC98);
  }
  return result;
}

unint64_t sub_23E245608()
{
  unint64_t result;

  result = qword_256D3FCA0;
  if (!qword_256D3FCA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C04C, &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FCA0);
  }
  return result;
}

unint64_t sub_23E245650()
{
  unint64_t result;

  result = qword_256D3FCA8;
  if (!qword_256D3FCA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C074, &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FCA8);
  }
  return result;
}

unint64_t sub_23E245698()
{
  unint64_t result;

  result = qword_256D3FCB0;
  if (!qword_256D3FCB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BDB4, &type metadata for StaticMediaSystemComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FCB0);
  }
  return result;
}

unint64_t sub_23E2456E0()
{
  unint64_t result;

  result = qword_256D3FCB8;
  if (!qword_256D3FCB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53BDDC, &type metadata for StaticMediaSystemComponent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FCB8);
  }
  return result;
}

unint64_t sub_23E245724(unint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  int v36;
  unsigned __int8 v37;

  v6 = v5;
  v30 = a2;
  v31 = a5;
  LOBYTE(v7) = a4;
  v34 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCD8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for StaticMediaSystemComponent();
  v35 = *(_QWORD *)(v33 - 8);
  v12 = MEMORY[0x24BDAC7A8](v33);
  v32 = (uint64_t)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v28 = (uint64_t)&v26 - v14;
  if (a1 >> 62)
    goto LABEL_18;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v15; v15 = sub_23E53803C())
  {
    v26 = v6;
    v36 = v7 & 1;
    v7 = MEMORY[0x24BEE4AF8];
    v29 = a1 & 0xC000000000000001;
    v6 = 4;
    v27 = a1;
    v16 = v31;
    while (1)
    {
      v17 = v29 ? (id)MEMORY[0x24264F148](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v18 = v17;
      v19 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v37 = v36;
      v20 = v30;
      swift_bridgeObjectRetain();
      v21 = v34;
      swift_bridgeObjectRetain();
      sub_23E23F134(v18, v20, v21, &v37, v16, (uint64_t)v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v11, 1, v33) == 1)
      {
        sub_23E1E7C64((uint64_t)v11, &qword_256D3FCD8);
      }
      else
      {
        v22 = v28;
        sub_23E1E2FDC((uint64_t)v11, v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        sub_23E1E2FDC(v22, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_23E51F0B8(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
        v24 = *(_QWORD *)(v7 + 16);
        v23 = *(_QWORD *)(v7 + 24);
        if (v24 >= v23 >> 1)
          v7 = sub_23E51F0B8(v23 > 1, v24 + 1, 1, v7);
        *(_QWORD *)(v7 + 16) = v24 + 1;
        sub_23E1E2FDC(v32, v7+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        a1 = v27;
      }
      ++v6;
      if (v19 == v15)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E245A18(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticMediaSystemComponent();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCC8);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticMediaSystemComponent;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_256D3FCC8);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21ED28();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E214ACC(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E2464BC(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E245D40(void *a1, uint64_t a2, void *a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCC8);
  v10 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a4) = *a4;
  v13 = objc_msgSend(a1, sel_components);
  sub_23E246480();
  v14 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v15 = a3;
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = sub_23E245724(v14, a2, v15, (char)a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v31 = 0;
    v33 = MEMORY[0x24BEE4AF8];
    sub_23E2CB134(0, v18, 0);
    v19 = v33;
    v20 = *(_QWORD *)(type metadata accessor for StaticMediaSystemComponent() - 8);
    v21 = *(unsigned __int8 *)(v20 + 80);
    v30[1] = v17;
    v22 = v17 + ((v21 + 32) & ~v21);
    v23 = *(_QWORD *)(v20 + 72);
    do
    {
      v24 = (uint64_t)&v12[*(int *)(v32 + 48)];
      sub_23E1E2F50(v22, v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
      v25 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24, v25);
      v33 = v19;
      v27 = *(_QWORD *)(v19 + 16);
      v26 = *(_QWORD *)(v19 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23E2CB134(v26 > 1, v27 + 1, 1);
        v19 = v33;
      }
      *(_QWORD *)(v19 + 16) = v27 + 1;
      sub_23E1E4E3C((uint64_t)v12, v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v27, &qword_256D3FCC8);
      v22 += v23;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v16 = v31;
    if (*(_QWORD *)(v19 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3D0);
      v28 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v28 = MEMORY[0x24BEE4B00];
LABEL_10:
  v33 = v28;
  sub_23E245A18(v19, 1, &v33);
  swift_bridgeObjectRelease();
  if (!v16)
    return v33;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E245FEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E563280 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23E2461F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6979616C70 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646570706F7473 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7075727265746E69 && a2 == 0xEB00000000646574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_23E246480()
{
  unint64_t result;

  result = qword_256D3FCD0;
  if (!qword_256D3FCD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D3FCD0);
  }
  return result;
}

uint64_t sub_23E2464BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticMediaSystemComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void StaticLevelControlCluster.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t StaticLevelControlCluster.currentLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticLevelControlCluster.minLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12) | (*(unsigned __int8 *)(v0 + 13) << 8);
}

uint64_t StaticLevelControlCluster.maxLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 14) | (*(unsigned __int8 *)(v0 + 15) << 8);
}

uint64_t StaticLevelControlCluster.onOffTransitionTime.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 18) << 16);
}

uint64_t StaticLevelControlCluster.onLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 19) | (*(unsigned __int8 *)(v0 + 20) << 8);
}

uint64_t StaticLevelControlCluster.onTransitionTime.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 22) | (*(unsigned __int8 *)(v0 + 24) << 16);
}

uint64_t StaticLevelControlCluster.offTransitionTime.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 26) | (*(unsigned __int8 *)(v0 + 28) << 16);
}

uint64_t StaticLevelControlCluster.defaultMoveRate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 29) | (*(unsigned __int8 *)(v0 + 30) << 8);
}

uint64_t StaticLevelControlCluster.startUpCurrentLevel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 31) | (*(unsigned __int8 *)(v0 + 32) << 8);
}

uint64_t StaticLevelControlCluster.init(id:currentLevel:minLevel:maxLevel:onOffTransitionTime:onLevel:onTransitionTime:offTransitionTime:defaultMoveRate:startUpCurrentLevel:)@<X0>(uint64_t result@<X0>, char a2@<W1>, __int16 a3@<W2>, __int16 a4@<W3>, int a5@<W4>, __int16 a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13)
{
  __int16 v13;
  char v14;

  v13 = *(_WORD *)(result + 8);
  v14 = *(_BYTE *)(result + 10);
  *(_QWORD *)a9 = *(_QWORD *)result;
  *(_WORD *)(a9 + 8) = v13;
  *(_BYTE *)(a9 + 10) = v14;
  *(_BYTE *)(a9 + 11) = a2;
  *(_BYTE *)(a9 + 12) = a3;
  *(_BYTE *)(a9 + 13) = HIBYTE(a3) & 1;
  *(_BYTE *)(a9 + 14) = a4;
  *(_BYTE *)(a9 + 15) = HIBYTE(a4) & 1;
  *(_WORD *)(a9 + 16) = a5;
  *(_BYTE *)(a9 + 18) = BYTE2(a5) & 1;
  *(_BYTE *)(a9 + 19) = a6;
  *(_BYTE *)(a9 + 20) = HIBYTE(a6) & 1;
  *(_WORD *)(a9 + 22) = a7;
  *(_BYTE *)(a9 + 24) = BYTE2(a7) & 1;
  *(_WORD *)(a9 + 26) = a8;
  *(_BYTE *)(a9 + 28) = BYTE2(a8) & 1;
  *(_BYTE *)(a9 + 29) = a10;
  *(_BYTE *)(a9 + 30) = a11 & 1;
  *(_BYTE *)(a9 + 31) = a12;
  *(_BYTE *)(a9 + 32) = a13 & 1;
  return result;
}

uint64_t StaticLevelControlCluster.hash(into:)()
{
  _BYTE *v0;
  char v1;
  char v2;
  int v3;
  char v5;
  int v6;
  int v7;
  char v8;
  char v9;

  v1 = v0[13];
  v2 = v0[15];
  v3 = v0[18];
  v5 = v0[20];
  v6 = v0[24];
  v7 = v0[28];
  v8 = v0[30];
  v9 = v0[32];
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  sub_23E538474();
  if ((v1 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if ((v2 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if (v3)
  {
    sub_23E538474();
    if ((v5 & 1) != 0)
      goto LABEL_9;
    goto LABEL_7;
  }
  sub_23E538474();
  sub_23E538480();
  if ((v5 & 1) == 0)
LABEL_7:
    sub_23E538474();
LABEL_9:
  sub_23E538474();
  if (v6)
  {
    sub_23E538474();
    if (!v7)
      goto LABEL_11;
  }
  else
  {
    sub_23E538474();
    sub_23E538480();
    if (!v7)
    {
LABEL_11:
      sub_23E538474();
      sub_23E538480();
      if ((v8 & 1) != 0)
        goto LABEL_15;
      goto LABEL_12;
    }
  }
  sub_23E538474();
  if ((v8 & 1) == 0)
LABEL_12:
    sub_23E538474();
LABEL_15:
  sub_23E538474();
  if ((v9 & 1) == 0)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E246854(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E24687C + 4 * byte_23E53C3F0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E24687C()
{
  return 0x4C746E6572727563;
}

uint64_t sub_23E24689C()
{
  return 0x6C6576654C6E696DLL;
}

unint64_t sub_23E2468C4()
{
  return 0xD000000000000013;
}

uint64_t sub_23E246960()
{
  unsigned __int8 *v0;

  return sub_23E246854(*v0);
}

uint64_t sub_23E246968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E248E74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E24698C()
{
  sub_23E248D38();
  return sub_23E538570();
}

uint64_t sub_23E2469B4()
{
  sub_23E248D38();
  return sub_23E53857C();
}

uint64_t StaticLevelControlCluster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _DWORD v22[20];
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v9 = *((unsigned __int8 *)v1 + 11);
  v22[18] = *((unsigned __int8 *)v1 + 12);
  v22[19] = v9;
  v10 = *((unsigned __int8 *)v1 + 13);
  v22[16] = *((unsigned __int8 *)v1 + 14);
  v22[17] = v10;
  v11 = *((unsigned __int8 *)v1 + 15);
  v22[14] = *((unsigned __int16 *)v1 + 8);
  v22[15] = v11;
  v12 = *((unsigned __int8 *)v1 + 18);
  v22[12] = *((unsigned __int8 *)v1 + 19);
  v22[13] = v12;
  v13 = *((unsigned __int8 *)v1 + 20);
  v22[10] = *((unsigned __int16 *)v1 + 11);
  v22[11] = v13;
  v14 = *((unsigned __int8 *)v1 + 24);
  v22[8] = *((unsigned __int16 *)v1 + 13);
  v22[9] = v14;
  v15 = *((unsigned __int8 *)v1 + 28);
  v22[6] = *((unsigned __int8 *)v1 + 29);
  v22[7] = v15;
  v16 = *((unsigned __int8 *)v1 + 30);
  v22[4] = *((unsigned __int8 *)v1 + 31);
  v22[5] = v16;
  v22[3] = *((unsigned __int8 *)v1 + 32);
  v17 = a1[3];
  v18 = a1;
  v19 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_23E248D38();
  sub_23E5384EC();
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = 0;
  sub_23E248D7C();
  v20 = v23;
  sub_23E5382AC();
  if (!v20)
  {
    LOBYTE(v24) = 1;
    sub_23E5382C4();
    LOBYTE(v24) = 2;
    sub_23E538240();
    LOBYTE(v24) = 3;
    sub_23E538240();
    LOBYTE(v24) = 4;
    sub_23E53824C();
    LOBYTE(v24) = 5;
    sub_23E538240();
    LOBYTE(v24) = 6;
    sub_23E53824C();
    LOBYTE(v24) = 7;
    sub_23E53824C();
    LOBYTE(v24) = 8;
    sub_23E538240();
    LOBYTE(v24) = 9;
    sub_23E538240();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v19, v3);
}

uint64_t StaticLevelControlCluster.hashValue.getter()
{
  sub_23E53845C();
  StaticLevelControlCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticLevelControlCluster.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  __int16 v14;
  _QWORD *v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unsigned __int16 v30;
  unsigned __int8 v31;
  int v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E248D38();
  sub_23E5384E0();
  if (!v2)
  {
    v33 = 0;
    sub_23E248DC0();
    sub_23E538180();
    v28 = a2;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    LOBYTE(v29) = 1;
    v25 = sub_23E538198();
    v26 = v11;
    v27 = v9;
    v32 = v10;
    LOBYTE(v29) = 2;
    LOWORD(v11) = sub_23E538114();
    LOBYTE(v29) = 3;
    LOWORD(v9) = sub_23E538114();
    LOBYTE(v29) = 4;
    v12 = sub_23E538120();
    LOBYTE(v29) = 5;
    v24 = sub_23E538114();
    LOBYTE(v29) = 6;
    v23 = sub_23E538120();
    LOBYTE(v29) = 7;
    v22 = sub_23E538120();
    LOBYTE(v29) = 8;
    v21 = sub_23E538114();
    LOBYTE(v29) = 9;
    v14 = sub_23E538114();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v28;
    *v28 = v27;
    *((_WORD *)v15 + 4) = v32;
    *((_BYTE *)v15 + 10) = v26;
    *((_BYTE *)v15 + 11) = v25;
    *((_BYTE *)v15 + 12) = v11;
    *((_BYTE *)v15 + 13) = BYTE1(v11) & 1;
    *((_BYTE *)v15 + 14) = v9;
    *((_BYTE *)v15 + 15) = BYTE1(v9) & 1;
    *((_WORD *)v15 + 8) = v12;
    *((_BYTE *)v15 + 18) = BYTE2(v12) & 1;
    v16 = BYTE1(v24);
    *((_BYTE *)v15 + 19) = v24;
    *((_BYTE *)v15 + 20) = v16 & 1;
    v17 = BYTE2(v23);
    *((_WORD *)v15 + 11) = v23;
    *((_BYTE *)v15 + 24) = v17 & 1;
    v18 = BYTE2(v22);
    *((_WORD *)v15 + 13) = v22;
    *((_BYTE *)v15 + 28) = v18 & 1;
    v19 = BYTE1(v21);
    *((_BYTE *)v15 + 29) = v21;
    *((_BYTE *)v15 + 30) = v19 & 1;
    *((_BYTE *)v15 + 31) = v14;
    *((_BYTE *)v15 + 32) = HIBYTE(v14) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E247100()
{
  sub_23E53845C();
  StaticLevelControlCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2471D4()
{
  sub_23E53845C();
  StaticLevelControlCluster.hash(into:)();
  return sub_23E5384A4();
}

void sub_23E2472A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t sub_23E2472BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticLevelControlCluster.init(from:)(a1, a2);
}

uint64_t sub_23E2472D0(_QWORD *a1)
{
  return StaticLevelControlCluster.encode(to:)(a1);
}

uint64_t sub_23E2472E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t);
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  char v58;
  uint64_t v59;
  __int16 v60;
  char v61;
  uint64_t v62;

  v5 = *(_QWORD *)a1;
  v6 = *(unsigned __int16 *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 10);
  ObjectType = swift_getObjectType();
  v56 = v5;
  v57 = v6;
  v58 = v7;
  v9 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v59, &v56, 0, ObjectType, a2);
  if (v62)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v54 = v56;
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 2, ObjectType, a2);
      if (v62)
      {
        v10 = swift_dynamicCast();
        v11 = (unint64_t)v56 << 32;
        if (!v10)
          v11 = 0;
        v53 = v11;
        v12 = 0x10000000000;
        if (v10)
          v12 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v53 = 0;
        v12 = 0x10000000000;
      }
      v52 = v12;
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 3, ObjectType, a2);
      if (v62)
      {
        v21 = swift_dynamicCast();
        v22 = (unint64_t)v56 << 48;
        if (!v21)
          v22 = 0;
        v51 = v22;
        v23 = 0x100000000000000;
        if (v21)
          v23 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v51 = 0;
        v23 = 0x100000000000000;
      }
      v50 = v23;
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 16, ObjectType, a2);
      if (v62)
      {
        v24 = swift_dynamicCast();
        v25 = (unsigned __int16)v56;
        if (!v24)
          v25 = 0;
        v49 = v25;
        v26 = 0x10000;
        if (v24)
          v26 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v49 = 0;
        v26 = 0x10000;
      }
      v48 = v26;
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 17, ObjectType, a2);
      if (v62)
      {
        v27 = swift_dynamicCast();
        v28 = (unint64_t)v56 << 24;
        if (!v27)
          v28 = 0;
        v47 = v28;
        v29 = 0x100000000;
        if (v27)
          v29 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v47 = 0;
        v29 = 0x100000000;
      }
      v46 = v29;
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 18, ObjectType, a2);
      if (v62)
      {
        v30 = swift_dynamicCast();
        v31 = (unint64_t)(unsigned __int16)v56 << 48;
        if (!v30)
          v31 = 0;
        v44 = v31;
        v45 = v30 ^ 1u;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v44 = 0;
        v45 = 1;
      }
      v56 = v5;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 19, ObjectType, a2);
      if (v62)
      {
        v32 = swift_dynamicCast();
        v33 = (unint64_t)(unsigned __int16)v56 << 16;
        if (!v32)
          v33 = 0;
        v43 = v33;
        v34 = 0x100000000;
        if (v32)
          v34 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v43 = 0;
        v34 = 0x100000000;
      }
      v42 = v34;
      v55 = a3;
      v56 = v5;
      v35 = v6;
      v57 = v6;
      v58 = v7;
      v9(&v59, &v56, 20, ObjectType, a2);
      if (v62)
      {
        v36 = swift_dynamicCast();
        if (v36)
          v37 = (unint64_t)v56 << 40;
        else
          v37 = 0;
        if (v36)
          v38 = 0;
        else
          v38 = 0x1000000000000;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v37 = 0;
        v38 = 0x1000000000000;
      }
      v56 = v5;
      v57 = v35;
      v58 = v7;
      v9(&v59, &v56, 0x4000, ObjectType, a2);
      swift_unknownObjectRelease();
      if (v62)
      {
        v39 = swift_dynamicCast();
        v40 = v39 ^ 1;
        v41 = (unint64_t)v56 << 56;
        if (!v39)
          v41 = 0;
      }
      else
      {
        sub_23E1E9988((uint64_t)&v59);
        v41 = 0;
        v40 = 1;
      }
      result = v47;
      *(_QWORD *)v55 = v5;
      *(_QWORD *)(v55 + 8) = v35 | (v7 << 16) | (v54 << 24) | v51 | v53 | v52 | v50;
      *(_QWORD *)(v55 + 16) = v48 | v49 | v47 | v46 | v44;
      *(_QWORD *)(v55 + 24) = v43 | v45 | v42 | v37 | v38 | v41;
      *(_BYTE *)(v55 + 32) = v40;
      return result;
    }
  }
  else
  {
    sub_23E1E9988((uint64_t)&v59);
  }
  if (qword_254332E00 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_254333308);
  v14 = sub_23E537190();
  v15 = sub_23E537B08();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136315138;
    v56 = v17;
    v59 = v5;
    v60 = v6;
    v61 = v7;
    v18 = ClusterPath.description.getter();
    v59 = sub_23E1FD768(v18, v19, &v56);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v14, v15, "Couldn't get value for current level attribute '%s'", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v16, -1, -1);
  }

  result = swift_unknownObjectRelease();
  *(_OWORD *)a3 = xmmword_23E53C6E0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  return result;
}

uint64_t StaticLevelControlCluster.setOnLevel(_:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 155) = a1;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)v1;
  *(_WORD *)(v2 + 156) = *(_WORD *)(v1 + 8);
  *(_BYTE *)(v2 + 158) = *(_BYTE *)(v1 + 10);
  return swift_task_switch();
}

uint64_t sub_23E2479B8()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 158);
  v2 = *(_WORD *)(v0 + 156);
  v3 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 168) = sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 144) = v3;
  *(_WORD *)(v0 + 152) = v2;
  *(_BYTE *)(v0 + 154) = v1;
  sub_23E5378F8();
  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E247A5C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 184) = sub_23E34F1E8(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_23E247AA8()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v3;
    v4 = sub_23E53755C();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    *(_QWORD *)(inited + 80) = sub_23E53755C();
    *(_QWORD *)(inited + 88) = v6;
    v7 = sub_23E538420();
    *(_QWORD *)(inited + 120) = sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
    *(_QWORD *)(inited + 96) = v7;
    sub_23E20D69C(inited);
    v8 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_23E537A60();
    objc_msgSend(v1, sel_writeAttributeOnLevelWithValue_expectedValueInterval_, v8, v9);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticLevelControlCluster.setOnOffTransitionTime(_:)(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + 156) = a1;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)v1;
  *(_WORD *)(v2 + 158) = *(_WORD *)(v1 + 8);
  *(_BYTE *)(v2 + 155) = *(_BYTE *)(v1 + 10);
  return swift_task_switch();
}

uint64_t sub_23E247C14()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 155);
  v2 = *(_WORD *)(v0 + 158);
  v3 = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 168) = sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 144) = v3;
  *(_WORD *)(v0 + 152) = v2;
  *(_BYTE *)(v0 + 154) = v1;
  sub_23E5378F8();
  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E247CB8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 184) = sub_23E34F1E8(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_23E247D04()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v3;
    v4 = sub_23E53755C();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    *(_QWORD *)(inited + 80) = sub_23E53755C();
    *(_QWORD *)(inited + 88) = v6;
    v7 = sub_23E5384B0();
    *(_QWORD *)(inited + 120) = sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
    *(_QWORD *)(inited + 96) = v7;
    sub_23E20D69C(inited);
    v8 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_23E537A60();
    objc_msgSend(v1, sel_writeAttributeOnOffTransitionTimeWithValue_expectedValueInterval_, v8, v9);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticLevelControlCluster.cluster.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v5;
  __int16 v6;
  char v7;

  v1 = *v0;
  v2 = *((_WORD *)v0 + 4);
  v3 = *((_BYTE *)v0 + 10);
  sub_23E1E335C(0, &qword_256D3FD10);
  v5 = v1;
  v6 = v2;
  v7 = v3;
  return sub_23E34F1E8((uint64_t)&v5);
}

uint64_t StaticLevelControlCluster.moveToLevel(level:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_BYTE *)(v2 + 105) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 88) = v3;
  *(_BYTE *)(v2 + 104) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_23E247ED0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t inited;
  unint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(v0 + 105);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB768]), sel_init);
  *(_QWORD *)(v0 + 112) = v2;
  v3 = (void *)sub_23E538420();
  objc_msgSend(v2, sel_setLevel_, v3);

  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  v4 = (void *)sub_23E537C40();
  objc_msgSend(v2, sel_setTransitionTime_, v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_DWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v1;
  *(_BYTE *)(inited + 48) = 1;
  v6 = sub_23E22288C(inited);
  swift_setDeallocating();
  sub_23E235A1C(v6);
  *(_QWORD *)(v0 + 120) = v7;
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 128) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E248038()
{
  uint64_t v0;
  _QWORD v2[2];

  swift_release();
  v2[0] = *(_QWORD *)(v0 + 72);
  *(_DWORD *)((char *)v2 + 7) = *(_DWORD *)(v0 + 79);
  sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 136) = sub_23E34F1E8((uint64_t)v2);
  return swift_task_switch();
}

uint64_t sub_23E2480AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v6;

  v2 = v0[14];
  v1 = v0[15];
  v3 = swift_task_alloc();
  v0[18] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v6 = (char *)&dword_256D3FA10 + dword_256D3FA10;
  v4 = (_QWORD *)swift_task_alloc();
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_23E248154;
  return ((uint64_t (*)(unint64_t, unint64_t, _QWORD, void *, uint64_t))v6)(0xD000000000000014, 0x800000023E5633C0, v0[17], &unk_256D3FD48, v3);
}

uint64_t sub_23E248154()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 136);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2481CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2481FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E248218()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v1 = sub_23E5377E4();
  }
  v0[18] = v1;
  v3 = (void *)v0[15];
  v2 = v0[16];
  v0[2] = v0;
  v0[3] = sub_23E2482E0;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor;
  v5[4] = v4;
  objc_msgSend(v3, sel_moveToLevelWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, 0, v5);
  return swift_continuation_await();
}

uint64_t sub_23E2482E0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E248340()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E248374()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticLevelControlCluster.move(direction:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_BYTE *)(v2 + 49) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 48) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_23E2483DC()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  unint64_t v4;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB770]), sel_init);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = (void *)sub_23E538420();
  objc_msgSend(v1, sel_setMoveMode_, v2);

  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  v3 = (void *)sub_23E537C40();
  objc_msgSend(v1, sel_setRate_, v3);

  v4 = sub_23E22288C(MEMORY[0x24BEE4AF8]);
  sub_23E235A1C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E248500()
{
  uint64_t v0;
  _QWORD v2[2];

  swift_release();
  v2[0] = *(_QWORD *)(v0 + 16);
  *(_DWORD *)((char *)v2 + 7) = *(_DWORD *)(v0 + 23);
  sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 72) = sub_23E34F1E8((uint64_t)v2);
  return swift_task_switch();
}

uint64_t sub_23E248574()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  char *v4;

  v4 = (char *)&dword_256D3FE30 + dword_256D3FE30;
  v1 = *(id *)(v0 + 56);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_23E24860C;
  return ((uint64_t (*)(uint64_t, unint64_t, _QWORD, uint64_t, _QWORD))v4)(0x6874695765766F6DLL, 0xED000066664F6E4FLL, *(_QWORD *)(v0 + 72), v0 + 16, *(_QWORD *)(v0 + 56));
}

uint64_t sub_23E24860C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  v2 = *(void **)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E24866C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticLevelControlCluster.step(mode:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_BYTE *)(v2 + 105) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 88) = v3;
  *(_BYTE *)(v2 + 104) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_23E2486C8()
{
  uint64_t v0;
  int v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;

  v1 = *(unsigned __int8 *)(v0 + 105);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB778]), sel_init);
  *(_QWORD *)(v0 + 112) = v2;
  v3 = (void *)sub_23E538420();
  objc_msgSend(v2, sel_setStepMode_, v3);

  v4 = (void *)sub_23E537A60();
  objc_msgSend(v2, sel_setStepSize_, v4);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD38);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_DWORD *)(inited + 32) = 0;
  v6 = -5;
  if (v1 != 1)
    v6 = 5;
  *(_QWORD *)(inited + 40) = v6 + *(unsigned __int8 *)(v0 + 83);
  *(_BYTE *)(inited + 48) = 1;
  v7 = sub_23E22288C(inited);
  swift_setDeallocating();
  sub_23E235A1C(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E5378F8();
  *(_QWORD *)(v0 + 120) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E248824()
{
  uint64_t v0;
  _QWORD v2[2];

  swift_release();
  v2[0] = *(_QWORD *)(v0 + 72);
  *(_DWORD *)((char *)v2 + 7) = *(_DWORD *)(v0 + 79);
  sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 128) = sub_23E34F1E8((uint64_t)v2);
  return swift_task_switch();
}

uint64_t sub_23E248898()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  char *v4;

  v4 = (char *)&dword_256D3FE28 + dword_256D3FE28;
  v1 = *(id *)(v0 + 112);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_23E248930;
  return ((uint64_t (*)(uint64_t, unint64_t, _QWORD, uint64_t, _QWORD))v4)(0x6874695770657473, 0xED000066664F6E4FLL, *(_QWORD *)(v0 + 128), v0 + 72, *(_QWORD *)(v0 + 112));
}

uint64_t sub_23E248930()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(*(_QWORD *)v0 + 128);
  v2 = *(void **)(*(_QWORD *)v0 + 112);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t StaticLevelControlCluster.stop()()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 48) = *(_BYTE *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_23E2489B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB780]), sel_init);
  sub_23E5378F8();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E248A38()
{
  uint64_t v0;
  _QWORD v2[2];

  swift_release();
  v2[0] = *(_QWORD *)(v0 + 16);
  *(_DWORD *)((char *)v2 + 7) = *(_DWORD *)(v0 + 23);
  sub_23E1E335C(0, &qword_256D3FD10);
  *(_QWORD *)(v0 + 72) = sub_23E34F1E8((uint64_t)v2);
  return swift_task_switch();
}

uint64_t sub_23E248AAC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  char *v4;

  v4 = (char *)&dword_256D3FE20 + dword_256D3FE20;
  v1 = *(id *)(v0 + 56);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *v2 = v0;
  v2[1] = sub_23E24860C;
  return ((uint64_t (*)(uint64_t, unint64_t, _QWORD, uint64_t, _QWORD))v4)(0x68746957706F7473, 0xED000066664F6E4FLL, *(_QWORD *)(v0 + 72), v0 + 16, *(_QWORD *)(v0 + 56));
}

uint64_t _s13HomeDataModel25StaticLevelControlClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  char v5;
  int v6;
  char v7;
  int v8;
  char v9;
  int v10;
  char v11;
  int v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  int v23;
  int v24;
  char v25;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    result = 0;
    if (dword_23E53C664[*(char *)(a1 + 10)] == dword_23E53C664[*(char *)(a2 + 10)]
      && *(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11))
    {
      v4 = *(unsigned __int8 *)(a1 + 14);
      v5 = *(_BYTE *)(a1 + 15);
      v6 = *(unsigned __int16 *)(a1 + 16);
      v7 = *(_BYTE *)(a1 + 18);
      v8 = *(unsigned __int8 *)(a1 + 19);
      v9 = *(_BYTE *)(a1 + 20);
      v10 = *(unsigned __int16 *)(a1 + 22);
      v11 = *(_BYTE *)(a1 + 24);
      v12 = *(unsigned __int16 *)(a1 + 26);
      v13 = *(_BYTE *)(a1 + 28);
      v14 = *(_BYTE *)(a1 + 30);
      v23 = *(unsigned __int8 *)(a1 + 31);
      v24 = *(unsigned __int8 *)(a1 + 29);
      v25 = *(_BYTE *)(a1 + 32);
      if ((*(_BYTE *)(a1 + 13) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 13))
          return 0;
      }
      else
      {
        if (*(unsigned __int8 *)(a1 + 12) == *(unsigned __int8 *)(a2 + 12))
          v15 = *(_BYTE *)(a2 + 13);
        else
          v15 = 1;
        if ((v15 & 1) != 0)
          return 0;
      }
      if ((v5 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 15))
          return 0;
      }
      else
      {
        if (v4 == *(unsigned __int8 *)(a2 + 14))
          v16 = *(_BYTE *)(a2 + 15);
        else
          v16 = 1;
        if ((v16 & 1) != 0)
          return 0;
      }
      if ((v7 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 18))
          return 0;
      }
      else
      {
        if (v6 == *(unsigned __int16 *)(a2 + 16))
          v17 = *(_BYTE *)(a2 + 18);
        else
          v17 = 1;
        if ((v17 & 1) != 0)
          return 0;
      }
      if ((v9 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 20))
          return 0;
      }
      else
      {
        if (v8 == *(unsigned __int8 *)(a2 + 19))
          v18 = *(_BYTE *)(a2 + 20);
        else
          v18 = 1;
        if ((v18 & 1) != 0)
          return 0;
      }
      if ((v11 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 24))
          return 0;
      }
      else
      {
        if (v10 == *(unsigned __int16 *)(a2 + 22))
          v19 = *(_BYTE *)(a2 + 24);
        else
          v19 = 1;
        if ((v19 & 1) != 0)
          return 0;
      }
      if ((v13 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 28))
          return 0;
      }
      else
      {
        if (v12 == *(unsigned __int16 *)(a2 + 26))
          v20 = *(_BYTE *)(a2 + 28);
        else
          v20 = 1;
        if ((v20 & 1) != 0)
          return 0;
      }
      if ((v14 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 30))
          return 0;
      }
      else
      {
        if (v24 == *(unsigned __int8 *)(a2 + 29))
          v21 = *(_BYTE *)(a2 + 30);
        else
          v21 = 1;
        if ((v21 & 1) != 0)
          return 0;
      }
      if ((v25 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 32) & 1) == 0)
          return 0;
      }
      else
      {
        if (v23 == *(unsigned __int8 *)(a2 + 31))
          v22 = *(_BYTE *)(a2 + 32);
        else
          v22 = 1;
        if ((v22 & 1) != 0)
          return 0;
      }
      return 1;
    }
  }
  return result;
}

unint64_t sub_23E248D38()
{
  unint64_t result;

  result = qword_256D3FCE8;
  if (!qword_256D3FCE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C610, &type metadata for StaticLevelControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FCE8);
  }
  return result;
}

unint64_t sub_23E248D7C()
{
  unint64_t result;

  result = qword_256D3FCF0;
  if (!qword_256D3FCF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterPath, &type metadata for ClusterPath);
    atomic_store(result, (unint64_t *)&qword_256D3FCF0);
  }
  return result;
}

unint64_t sub_23E248DC0()
{
  unint64_t result;

  result = qword_256D3FD00;
  if (!qword_256D3FD00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterPath, &type metadata for ClusterPath);
    atomic_store(result, (unint64_t *)&qword_256D3FD00);
  }
  return result;
}

uint64_t sub_23E248E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23E23C694;
  v6[16] = v5;
  v6[17] = v4;
  v6[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E248E74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C746E6572727563 && a2 == 0xEC0000006C657665 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6576654C6E696DLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6576654C78616DLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E5633E0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6576654C6E6FLL && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E563400 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E563420 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4D746C7561666564 && a2 == 0xEF6574615265766FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E563440)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_23E249288()
{
  unint64_t result;

  result = qword_256D3FD68;
  if (!qword_256D3FD68)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticLevelControlCluster, &type metadata for StaticLevelControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D3FD68);
  }
  return result;
}

unint64_t sub_23E2492D0()
{
  unint64_t result;

  result = qword_256D3FD70;
  if (!qword_256D3FD70)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterPath, &type metadata for ClusterPath);
    atomic_store(result, (unint64_t *)&qword_256D3FD70);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticLevelControlCluster(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xE5 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 229);
  v3 = *(unsigned __int8 *)(a1 + 10);
  v4 = v3 >= 0x1C;
  v5 = v3 - 28;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticLevelControlCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 229;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 10) = a2 + 27;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticLevelControlCluster()
{
  return &type metadata for StaticLevelControlCluster;
}

uint64_t storeEnumTagSinglePayload for StaticLevelControlCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E2493FC + 4 * byte_23E53C3FF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E249430 + 4 * byte_23E53C3FA[v4]))();
}

uint64_t sub_23E249430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E249438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E249440);
  return result;
}

uint64_t sub_23E24944C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E249454);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E249458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E249460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticLevelControlCluster.CodingKeys()
{
  return &type metadata for StaticLevelControlCluster.CodingKeys;
}

unint64_t sub_23E249480()
{
  unint64_t result;

  result = qword_256D3FD78;
  if (!qword_256D3FD78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C5E8, &type metadata for StaticLevelControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FD78);
  }
  return result;
}

unint64_t sub_23E2494C8()
{
  unint64_t result;

  result = qword_256D3FD80;
  if (!qword_256D3FD80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C558, &type metadata for StaticLevelControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FD80);
  }
  return result;
}

unint64_t sub_23E249510()
{
  unint64_t result;

  result = qword_256D3FD88;
  if (!qword_256D3FD88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53C580, &type metadata for StaticLevelControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FD88);
  }
  return result;
}

uint64_t static TileLayoutHelper.tileWidthAndColumnCount(for:screenEdgeMargin:spacingBetweenTiles:baseTileWidth:scaleRelativeToBody:roomType:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t result;

  v6 = a1 - (a3 + a3);
  if (v6 > 0.0)
  {
    v7 = 0;
    v8 = a5 * a6 + a4;
    v9 = 0.0;
    do
    {
      result = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        return result;
      }
      v9 = v8 + v9;
      ++v7;
    }
    while (v9 < v6);
    if (result >= 2)
      return result;
  }
  return 1;
}

uint64_t static TileLayoutHelper.placeTilesInGrid(orderedTileInfos:columnCount:roomType:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  _QWORD *v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;
  char v34;
  uint64_t result;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;

  v49 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
LABEL_55:
    swift_beginAccess();
    return (uint64_t)v49;
  }
  v38 = a1 + 32;
  swift_beginAccess();
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v37 = v2;
  while (1)
  {
    v8 = v49;
    if (v6 < v49[2])
      goto LABEL_28;
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    if (a2 < 0)
      goto LABEL_62;
    v45 = a2;
    if (a2)
      break;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_23:
    sub_23E1E7C64((uint64_t)&v45, &qword_256D3FD90);
    swift_beginAccess();
    v8 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_23E51F0CC(0, v8[2] + 1, 1, v8);
    v16 = v8[2];
    v15 = v8[3];
    if (v16 >= v15 >> 1)
      v8 = sub_23E51F0CC((_QWORD *)(v15 > 1), v16 + 1, 1, v8);
    v8[2] = v16 + 1;
    v8[v16 + 4] = v10;
    v49 = v8;
    swift_endAccess();
LABEL_28:
    if (v4 >= v2)
      goto LABEL_58;
    sub_23E1FF9C8(v38 + 40 * v4, (uint64_t)&v45);
    if (v6 >= v8[2])
      goto LABEL_59;
    if ((v5 & 0x8000000000000000) != 0)
      goto LABEL_60;
    v17 = v8[v6 + 4];
    if (v5 >= *(_QWORD *)(v17 + 16))
      goto LABEL_61;
    sub_23E24AD58((__int128 *)(v17 + 40 * v5 + 32), (uint64_t)v39);
    if (v39[3])
    {
      sub_23E24ADB8((uint64_t)v39);
    }
    else
    {
      sub_23E1FF9C8((uint64_t)&v45, (uint64_t)&v40);
      swift_beginAccess();
      v18 = v49;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v18 = sub_23E24AB2C(v18);
        v49 = v18;
      }
      if (v6 >= v18[2])
        goto LABEL_63;
      v20 = v18 + 4;
      v21 = (_QWORD *)v18[v6 + 4];
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v20[v6] = v21;
      if ((v22 & 1) == 0)
      {
        v21 = sub_23E24AB18(v21);
        v20[v6] = v21;
      }
      v2 = v37;
      if (v5 >= v21[2])
        goto LABEL_64;
      sub_23E24ADF0((__int128 *)&v40, (uint64_t)&v21[5 * v5 + 4]);
      v23 = v49;
      swift_endAccess();
      v36 = v4 + 1;
      v24 = v47;
      __swift_project_boxed_opaque_existential_1(&v45, v47);
      if (((*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v24 + 1) + 88))(v24, *((_QWORD *)&v24 + 1)) & 1) != 0)
      {
        v25 = v6 + 1;
        if (v6 + 1 >= v23[2])
        {
          v43 = 0;
          v41 = 0u;
          v42 = 0u;
          if (a2 < 0)
            goto LABEL_67;
          v40 = a2;
          v26 = sub_23E249FA8(&v40);
          sub_23E1E7C64((uint64_t)&v40, &qword_256D3FD90);
          swift_beginAccess();
          v27 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_23E51F0CC(0, v27[2] + 1, 1, v27);
          v29 = v27[2];
          v28 = v27[3];
          if (v29 >= v28 >> 1)
            v27 = sub_23E51F0CC((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
          v27[2] = v29 + 1;
          v27[v29 + 4] = v26;
          v49 = v27;
          swift_endAccess();
        }
        v40 = 0;
        v41 = 0uLL;
        v42 = xmmword_23E53C6F0;
        swift_beginAccess();
        v30 = v49;
        v31 = swift_isUniquelyReferenced_nonNull_native();
        v49 = v30;
        if ((v31 & 1) == 0)
        {
          v30 = sub_23E24AB2C(v30);
          v49 = v30;
        }
        if (v25 >= v30[2])
          goto LABEL_65;
        v32 = v30 + 4;
        v33 = (_QWORD *)v30[v25 + 4];
        v34 = swift_isUniquelyReferenced_nonNull_native();
        v32[v25] = v33;
        if ((v34 & 1) == 0)
        {
          v33 = sub_23E24AB18(v33);
          v32[v25] = v33;
        }
        v4 = v36;
        v2 = v37;
        if (v5 >= v33[2])
          goto LABEL_66;
        sub_23E24ADF0((__int128 *)&v40, (uint64_t)&v33[5 * v5 + 4]);
        swift_endAccess();
      }
      else
      {
        ++v4;
      }
    }
    v7 = v5 + 1 == a2;
    if (v5 + 1 == a2)
      v5 = 0;
    else
      ++v5;
    if (v7)
      ++v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
    if ((uint64_t)v4 >= (uint64_t)v2)
      goto LABEL_55;
  }
  v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDA0);
  v10 = (_QWORD *)swift_allocObject();
  v11 = _swift_stdlib_malloc_size(v10);
  v10[2] = a2;
  v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  sub_23E24AD10((uint64_t)&v45, (uint64_t)&v40);
  v44 = 0;
  if (!v40)
    goto LABEL_68;
  v12 = (uint64_t)(v10 + 4);
  v13 = 1;
  while (1)
  {
    sub_23E24AD10((uint64_t)&v40, (uint64_t)v39);
    v14 = v39[0];
    sub_23E1E7C64((uint64_t)v39, &qword_256D3FD90);
    if (v13 - 1 >= v14)
      break;
    if (v13 - 1 >= v40)
      goto LABEL_57;
    v44 = v13;
    sub_23E24AD58(&v41, v12);
    if (a2 == v13)
    {
      sub_23E1E7C64((uint64_t)&v40, &qword_256D3FD98);
      v2 = v37;
      v4 = v9;
      goto LABEL_23;
    }
    v12 += 40;
    v7 = v13++ == v40;
    if (v7)
      goto LABEL_68;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  result = sub_23E1E7C64((uint64_t)&v40, &qword_256D3FD98);
  __break(1u);
  return result;
}

uint64_t static TileLayoutHelper.asciiArtGridForDebugging(grid:orderedTileInfos:columnCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[4];
  _QWORD v35[4];
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v30 = a2;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v22 - v11;
  v38 = 0;
  v39 = 0xE000000000000000;
  v23 = *(_QWORD *)(a1 + 16);
  if (!v23)
    return 0;
  if (a3 < 0)
    goto LABEL_27;
  v25 = 0;
  v31 = a3 - 1;
  v22 = a1 + 32;
  v26 = v30 + 32;
  v29 = 0x800000023E563480;
  v28 = 0x800000023E5634A0;
  v24 = xmmword_23E539650;
  v27 = a3;
  while (!a3)
  {
LABEL_4:
    if (++v25 == v23)
      return v38;
  }
  v13 = 0;
  v33 = *(_QWORD *)(v22 + 8 * v25);
  v32 = v33 + 32;
  while (v13 != a3)
  {
    if (v13 >= *(_QWORD *)(v33 + 16))
      goto LABEL_26;
    sub_23E24AD58((__int128 *)(v32 + 40 * v13), (uint64_t)&v36);
    if (v37)
    {
      if (v37 != 1)
      {
        sub_23E1E6C84(&v36, (uint64_t)v35);
        v17 = *(_QWORD *)(v30 + 16);
        if (v17)
        {
          v18 = 0;
          v19 = v26;
          while (1)
          {
            sub_23E1FF9C8(v19, (uint64_t)v34);
            __swift_project_boxed_opaque_existential_1(v35, v35[3]);
            sub_23E537E80();
            __swift_project_boxed_opaque_existential_1(v34, v34[3]);
            sub_23E537E80();
            v20 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            v21 = *(void (**)(char *, uint64_t))(v6 + 8);
            v21(v9, v5);
            v21(v12, v5);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
            if ((v20 & 1) != 0)
              break;
            ++v18;
            v19 += 40;
            if (v17 == v18)
              goto LABEL_8;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = v24;
          *(_QWORD *)(v14 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v14 + 64) = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v14 + 32) = v18;
          v34[0] = sub_23E537580();
          v34[1] = v15;
          swift_bridgeObjectRetain();
          sub_23E537628();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23E537628();
          swift_bridgeObjectRelease();
        }
LABEL_8:
        result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
        a3 = v27;
        goto LABEL_9;
      }
      v35[0] = 0x1000000000000012;
      v16 = &v40;
    }
    else
    {
      v35[0] = 0x1000000000000012;
      v16 = &v41;
    }
    v35[1] = *(v16 - 32);
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    result = swift_bridgeObjectRelease();
LABEL_9:
    if (++v13 == a3)
      goto LABEL_4;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

size_t sub_23E249F8C(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_254333420, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24B238);
}

uint64_t sub_23E249FA8(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[48];
  _BYTE v8[56];

  v1 = *a1;
  if (!*a1)
    return MEMORY[0x24BEE4AF8];
  if (v1 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDA0);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v3[2] = v1;
    v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  }
  sub_23E24AD10((uint64_t)a1, (uint64_t)v7);
  v5 = sub_23E24ABF8((uint64_t)v8, (uint64_t)(v3 + 4), v1);
  result = sub_23E1E7C64((uint64_t)v8, &qword_256D3FD98);
  if (v5 == v1)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_23E24A08C(unint64_t a1)
{
  return sub_23E202378(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23E202478);
}

uint64_t sub_23E24A098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDC8);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_23E24B4F0(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_23E2261B0();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23E24A16C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  if (v5 <= 0)
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0)
        goto LABEL_24;
      v14 = *(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8);
      v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      v16 = *(_QWORD *)(v14 + 72);
      v17 = a2 + v16 * a3;
      v18 = v16 * v5;
      v19 = &v15[v18];
      v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE18);
  v8 = *(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1)
      goto LABEL_23;
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E24A334(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_23E538078();
  __break(1u);
  return result;
}

_QWORD *sub_23E24A4C4(unint64_t a1)
{
  return sub_23E202378(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23E24CB14);
}

size_t sub_23E24A4D0(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_2543326E0, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24B238);
}

size_t sub_23E24A4EC(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_254332C90, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24B238);
}

size_t sub_23E24A508(uint64_t a1)
{
  return sub_23E24A798(a1, &qword_256D3FE08, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
}

_QWORD *sub_23E24A51C(unint64_t a1)
{
  return sub_23E202378(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_23E24C6EC);
}

uint64_t sub_23E24A528(uint64_t a1)
{
  return sub_23E24A560(a1, (unint64_t *)&qword_254333358, 0x24BDD75B8, (unint64_t *)&qword_256D44E20);
}

uint64_t sub_23E24A544(uint64_t a1)
{
  return sub_23E24A560(a1, &qword_254332C00, 0x24BDD7480, &qword_256D3FDF0);
}

uint64_t sub_23E24A560(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = sub_23E537DB4();
    if (v8)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v8 <= 0)
  {
    v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    v9 = (_QWORD *)swift_allocObject();
    v10 = _swift_stdlib_malloc_size(v9);
    v11 = v10 - 32;
    if (v10 < 32)
      v11 = v10 - 25;
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v12 = sub_23E24BC98(&v14, v9 + 4, v8, a1, a2, a3, a4);
  result = sub_23E2261B0();
  if (v12 == (_QWORD *)v8)
    return (uint64_t)v9;
  __break(1u);
  return result;
}

size_t sub_23E24A680(uint64_t a1)
{
  return sub_23E24A798(a1, &qword_254332C88, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t sub_23E24A694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDE8);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_23E24BF90(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_23E2261B0();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_23E24A768(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_256D3FDE0, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24B238);
}

size_t sub_23E24A784(uint64_t a1)
{
  return sub_23E24A798(a1, &qword_254332C90, type metadata accessor for StaticRoom);
}

size_t sub_23E24A798(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  size_t result;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(a3(0) - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      v9[2] = v3;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      v12 = sub_23E24B690(&v13, (uint64_t)v9 + v8, v3, a1, a3);
      swift_bridgeObjectRetain();
      sub_23E2261B0();
      if (v12 == v3)
        return (size_t)v9;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_23E24A8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_23E24C124(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_23E2261B0();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_23E24A9AC(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_256D3FE10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24C48C);
}

size_t sub_23E24A9C8(uint64_t a1)
{
  return sub_23E24A9E4(a1, &qword_254333428, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))sub_23E24C48C);
}

size_t sub_23E24A9E4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t, uint64_t (*)(_QWORD)))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(a3(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = a4(&v15, (char *)v11 + v10, v4, a1, a3);
      swift_bridgeObjectRetain();
      sub_23E2261B0();
      if (v14 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E24AB04(unint64_t a1)
{
  return sub_23E205950(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23E24AB18(_QWORD *a1)
{
  return sub_23E51F1F8(0, a1[2], 0, a1);
}

_QWORD *sub_23E24AB2C(_QWORD *a1)
{
  return sub_23E51F0CC(0, a1[2], 0, a1);
}

void sub_23E24AB40(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24264F154);
}

uint64_t sub_23E24ABA8(unint64_t a1)
{
  return sub_23E20106C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E24ABBC(unint64_t a1)
{
  return sub_23E51F49C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E24ABD0(unint64_t a1)
{
  return sub_23E51E2F8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E24ABE4(unint64_t a1)
{
  return sub_23E51E5A4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E24ABF8(uint64_t result, uint64_t a2, uint64_t a3)
{
  __int128 *v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  _QWORD v13[6];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v4 = result;
  v5 = v3[1];
  v14 = *v3;
  v15 = v5;
  v16 = v3[2];
  v17 = 0;
  if (!a2)
  {
LABEL_12:
    v6 = 0;
    goto LABEL_13;
  }
  v6 = a3;
  if (!a3)
  {
LABEL_13:
    v12 = v15;
    *(_OWORD *)v4 = v14;
    *(_OWORD *)(v4 + 16) = v12;
    *(_OWORD *)(v4 + 32) = v16;
    *(_QWORD *)(v4 + 48) = v17;
    return v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ((_QWORD)v14)
    {
      v7 = a2;
      v8 = 1;
      while (1)
      {
        sub_23E24AD10((uint64_t)&v14, (uint64_t)v13);
        v9 = v13[0];
        result = sub_23E1E7C64((uint64_t)v13, &qword_256D3FD90);
        if (v8 - 1 >= v9)
          break;
        if (v8 - 1 >= (uint64_t)v14)
          goto LABEL_15;
        v17 = v8;
        sub_23E24AD58((__int128 *)((char *)&v14 + 8), v7);
        if (v6 == v8)
          goto LABEL_13;
        v7 += 40;
        v10 = v8 + 1;
        if (v8++ == (_QWORD)v14)
        {
          v6 = v10 - 1;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_23E24AD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E24AD58(__int128 *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v3 = *((_QWORD *)a1 + 3);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *a1;
    v6 = a1[1];
    *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  else
  {
    v4 = *((_QWORD *)a1 + 4);
    *(_QWORD *)(a2 + 24) = v3;
    *(_QWORD *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  return a2;
}

uint64_t sub_23E24ADB8(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t sub_23E24ADF0(__int128 *a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (*(_QWORD *)(a2 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0(a2);
  v4 = *a1;
  v5 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  return a2;
}

ValueMetadata *type metadata accessor for TileLayoutHelper()
{
  return &type metadata for TileLayoutHelper;
}

uint64_t destroy for TileLayoutHelper.GridCellContents(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    return __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t initializeWithCopy for TileLayoutHelper.GridCellContents(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for TileLayoutHelper.GridCellContents(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TileLayoutHelper.GridCellContents(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
    __swift_destroy_boxed_opaque_existential_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TileLayoutHelper.GridCellContents(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TileLayoutHelper.GridCellContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_23E24B1D8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_23E24B1F0(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TileLayoutHelper.GridCellContents()
{
  return &type metadata for TileLayoutHelper.GridCellContents;
}

uint64_t sub_23E24B22C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E24B238(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

uint64_t sub_23E24B238(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - v16;
  v38 = a4;
  v20 = *(_QWORD *)(a4 + 56);
  v19 = a4 + 56;
  v18 = v20;
  v37 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 24);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
    a3 = 0;
LABEL_38:
    v32 = v37;
    *a1 = v38;
    a1[1] = v32;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v19 - 24);
  v35 = a1;
  v24 = 0;
  v25 = 0;
  v36 = (unint64_t)(63 - v21) >> 6;
  v33 = v36 - 1;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v11 + 72);
    sub_23E1E2F50(*(_QWORD *)(v38 + 48) + v31 * v27, (uint64_t)v14, a5);
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v17, a5);
    result = sub_23E1E2FDC((uint64_t)v17, a2, a5);
    if (v25 == a3)
      goto LABEL_37;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v36)
      goto LABEL_32;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v36)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v36)
    goto LABEL_32;
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v36)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v36)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    v21 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v36)
    {
      v23 = 0;
      v24 = v33;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v37 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23E24B4F0(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23E24B684(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E24B690(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

uint64_t sub_23E24B690(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - v16;
  v38 = a4;
  v20 = *(_QWORD *)(a4 + 64);
  v19 = a4 + 64;
  v18 = v20;
  v37 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 32);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
    a3 = 0;
LABEL_38:
    v32 = v37;
    *a1 = v38;
    a1[1] = v32;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v19 - 32);
  v35 = a1;
  v24 = 0;
  v25 = 0;
  v36 = (unint64_t)(63 - v21) >> 6;
  v33 = v36 - 1;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v11 + 72);
    sub_23E1E2F50(*(_QWORD *)(v38 + 56) + v31 * v27, (uint64_t)v14, a5);
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v17, a5);
    result = sub_23E1E2FDC((uint64_t)v17, a2, a5);
    if (v25 == a3)
      goto LABEL_37;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v36)
      goto LABEL_32;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v36)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v36)
    goto LABEL_32;
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v36)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v36)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    v21 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v36)
    {
      v23 = 0;
      v24 = v33;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v37 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E24B948(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_23E24BC98(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_23E537D78();
    sub_23E1E335C(0, a5);
    sub_23E1E6118(a7, a5);
    result = (_QWORD *)sub_23E537A3C();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_23E537DD8())
        goto LABEL_40;
      sub_23E1E335C(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_23E24BF90(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23E24C124(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x24BDAC7A8](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 56;
  v14 = *(_QWORD *)(a4 + 56);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 56;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23E24C474(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E24B238(a1, a2, a3, a4, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_23E24C480(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E24B238(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
}

uint64_t sub_23E24C48C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v10 = a5(0);
  v35 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v31 - v15;
  v36 = a4;
  v19 = *(_QWORD *)(a4 + 56);
  v18 = a4 + 56;
  v17 = v19;
  v33 = -1 << *(_BYTE *)(v18 - 24);
  if (-v33 < 64)
    v20 = ~(-1 << -(char)v33);
  else
    v20 = -1;
  v21 = v20 & v17;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_32:
    v30 = ~v33;
    *a1 = v36;
    a1[1] = v18;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_32;
  }
  if (a3 < 0)
    goto LABEL_35;
  v32 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v33) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v35 + 72);
    sub_23E1E2F50(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v13, a5);
    sub_23E1E2FDC((uint64_t)v13, (uint64_t)v16, a5);
    result = sub_23E1E2FDC((uint64_t)v16, a2, a5);
    if (v23 == a3)
      goto LABEL_31;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v26 >= v34)
      goto LABEL_27;
    v27 = *(_QWORD *)(v18 + 8 * v26);
    if (!v27)
      break;
LABEL_21:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_30;
  }
  v27 = *(_QWORD *)(v18 + 8 * v22);
  if (v27)
  {
    ++v26;
    goto LABEL_21;
  }
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
  {
LABEL_27:
    v21 = 0;
LABEL_30:
    a3 = v23;
LABEL_31:
    a1 = v32;
    goto LABEL_32;
  }
  v27 = *(_QWORD *)(v18 + 8 * v28);
  if (v27)
  {
    v26 += 2;
    goto LABEL_21;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_30;
    }
    v27 = *(_QWORD *)(v18 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E24C6EC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23E24CF3C(&qword_256D3FDD8, &qword_256D3FDD0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDD0);
          v12 = sub_23E20269C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E24C900(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23E24CF3C(&qword_256D3FDC0, &qword_256D3FDB8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDB8);
          v12 = sub_23E20269C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23E1E335C(0, &qword_254332C00);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E24CB14(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23E24CF3C(&qword_256D3FDB0, &qword_256D3FDA8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDA8);
          v12 = sub_23E254E4C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E24CD28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23E24CF3C(&qword_256D3FE00, &qword_256D3FDF8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDF8);
          v12 = sub_23E20269C(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23E1E335C(0, &qword_254333340);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E24CF3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E24CF7C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24CFB4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, a3);
}

uint64_t sub_23E24CF98@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24CFB4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem, a3);
}

uint64_t sub_23E24CFB4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v29 = a4;
  v28 = a3(0);
  v32 = *(_QWORD *)(v28 - 8);
  v8 = MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 56);
  v30 = a2 + 56;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v31 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v12, a3);
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v10, a3);
    v24 = a1(v10);
    if (v4)
    {
      sub_23E1E2FA0((uint64_t)v10, a3);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v29;
      sub_23E1E2FDC((uint64_t)v10, v29, a3);
      v26 = 0;
      v27 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
    result = sub_23E1E2FA0((uint64_t)v10, a3);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v31)
      goto LABEL_28;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        v22 = *(_QWORD *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v31)
              goto LABEL_28;
            v22 = *(_QWORD *)(v30 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v27 = v28;
      v25 = v29;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E24D260@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24CFB4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, a3);
}

uint64_t sub_23E24D27C@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24D2B4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, a3);
}

uint64_t sub_23E24D298@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24D2B4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint, a3);
}

uint64_t sub_23E24D2B4@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v29 = a4;
  v28 = a3(0);
  v32 = *(_QWORD *)(v28 - 8);
  v8 = MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v30 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v31 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v12, a3);
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v10, a3);
    v24 = a1(v10);
    if (v4)
    {
      sub_23E1E2FA0((uint64_t)v10, a3);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v29;
      sub_23E1E2FDC((uint64_t)v10, v29, a3);
      v26 = 0;
      v27 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
    result = sub_23E1E2FA0((uint64_t)v10, a3);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v31)
      goto LABEL_28;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        v22 = *(_QWORD *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v31)
              goto LABEL_28;
            v22 = *(_QWORD *)(v30 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v27 = v28;
      v25 = v29;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void *sub_23E24D560(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_23E53803C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E24D680@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_23E24D2B4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic, a3);
}

void *DataModel.primaryHome.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  v1 = (id *)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v1)
  {
    v2 = objc_msgSend(*v1, sel_homes);
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v3 = sub_23E5377F0();

    if (v3 >> 62)
      goto LABEL_16;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; v4 = sub_23E53803C())
    {
      v5 = 4;
      while (1)
      {
        v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        if (objc_msgSend(v6, sel_isPrimary))
        {
          swift_bridgeObjectRelease_n();
          return v7;
        }

        ++v5;
        if (v8 == v4)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t DataModel.alphabeticalHomes.getter()
{
  return sub_23E202270((void (*)(_QWORD *))sub_23E253B14);
}

void *DataModel.accessory(for:in:)(uint64_t a1, id a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  _QWORD v7[4];

  v3 = objc_msgSend(a2, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v4 = sub_23E5377F0();

  v7[2] = a1;
  v5 = sub_23E24D560(sub_23E254F38, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23E24D8F4(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v24 - v15;
  v17 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_23E536F68();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E1FC2F8((uint64_t)v16, (uint64_t)v10);
  sub_23E1FC2F8(a2, v18);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    v20 = &qword_254333F50;
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
    if (v19(v18, 1, v4) == 1)
    {
      v21 = -1;
    }
    else
    {
      v20 = &qword_254332798;
      v21 = 0;
    }
  }
  else
  {
    sub_23E1FC2F8((uint64_t)v10, (uint64_t)v14);
    if (v19(v18, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
      v21 = 0;
      v20 = &qword_254332798;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      sub_23E20BBB0();
      v21 = sub_23E537514();
      v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v20 = &qword_254333F50;
      sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
      v22(v14, v4);
    }
  }
  sub_23E1E7C64((uint64_t)v10, v20);
  return v21 & 1;
}

void DataModel.accessoryFromAnyHome(for:)(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  id v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v34 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v34 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v16 = sub_23E5377F0();

  sub_23E1FC2F8(a1, (uint64_t)v14);
  v38 = v12;
  sub_23E1FC2F8(a1, (uint64_t)v12);
  v36 = v14;
  if (v16 >> 62)
  {
LABEL_27:
    v33 = v2;
    swift_bridgeObjectRetain();
    v17 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_3;
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v2;
    if (v17)
    {
LABEL_3:
      v19 = 0;
      v37 = v16 & 0xC000000000000001;
      v39 = v16;
      while (1)
      {
        if (v37)
        {
          swift_bridgeObjectRetain();
          v20 = (id)MEMORY[0x24264F148](v19, v16);
        }
        else
        {
          v21 = *(void **)(v16 + 8 * v19 + 32);
          swift_bridgeObjectRetain();
          v20 = v21;
        }
        v16 = (unint64_t)v20;
        sub_23E1FC2F8((uint64_t)v38, (uint64_t)v9);
        v22 = sub_23E536F80();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        v25 = 0;
        if (v24(v9, 1, v22) != 1)
        {
          v25 = (void *)sub_23E536F44();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v22);
        }
        v26 = v2;
        v2 = objc_msgSend(v2, sel_accessoryFor_in_, v25, v16);

        swift_bridgeObjectRelease();
        if (v2)
          break;
        v27 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v19;
        v2 = v26;
        v16 = v39;
        if (v27 == v17)
          goto LABEL_14;
      }
      v2 = v26;
      if (v17 == v19)
        goto LABEL_14;
      if (v37)
      {
        v28 = (id)MEMORY[0x24264F148](v19, v39);
        v29 = (uint64_t)v35;
        goto LABEL_21;
      }
      v29 = (uint64_t)v35;
      if ((v19 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v19 < *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v28 = *(id *)(v39 + 8 * v19 + 32);
LABEL_21:
        v30 = (uint64_t)v36;
        sub_23E1FC2F8((uint64_t)v36, v29);
        if (v24((char *)v29, 1, v22) == 1)
        {
          v31 = 0;
        }
        else
        {
          v31 = (void *)sub_23E536F44();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v22);
        }
        v32 = objc_msgSend(v2, sel_accessoryFor_in_, v31, v28);

        sub_23E1E7C64(v30, &qword_254333F50);
        if (v32)
        {

          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        goto LABEL_31;
      }
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
  }
LABEL_14:
  sub_23E1E7C64((uint64_t)v36, &qword_254333F50);

  swift_bridgeObjectRelease();
LABEL_15:
  sub_23E1E7C64((uint64_t)v38, &qword_254333F50);
}

Swift::Bool __swiftcall DataModel.accessoryExists(for:in:)(HomeDataModel::ServiceKind a1, HMHome in)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  Swift::Bool result;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  unint64_t v32;

  v2 = -[objc_class accessories](in.super.isa, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v3 = sub_23E5377F0();

  if (v3 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v4 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease();
    return v4;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_28;
LABEL_3:
  v5 = 0;
  v6 = v3 & 0xC000000000000001;
  v27 = v3 + 32;
  v28 = v3 & 0xC000000000000001;
  v29 = v4;
  v30 = v3;
  while (1)
  {
    v32 = v5;
    if (v6)
    {
      swift_bridgeObjectRetain();
      v7 = (id)MEMORY[0x24264F148](v5, v3);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = *(id *)(v27 + 8 * v5);
    }
    v8 = objc_msgSend(v7, sel_services);
    sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    v9 = sub_23E5377F0();

    v31 = v7;
    if (v9 >> 62)
      break;
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_9;
LABEL_18:
    swift_bridgeObjectRelease_n();

    v5 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    v3 = v30;
    v6 = v28;
    if (v5 == v29)
    {
      LOBYTE(v4) = 0;
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain_n();
  v10 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_18;
LABEL_9:
  v11 = 4;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x24264F148](v11 - 4, v9);
    else
      v12 = *(id *)(v9 + 8 * v11);
    v13 = v12;
    v3 = v11 - 3;
    if (__OFADD__(v11 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    v14 = objc_msgSend(v12, sel_serviceType);
    v15 = sub_23E53755C();
    v17 = v16;

    v18._countAndFlagsBits = v15;
    v18._object = v17;
    LOBYTE(v19) = ServiceKind.init(rawValue:)(v18);
    v20 = ServiceKind.rawValue.getter(v19);
    v22 = v21;
    if (v20 == ServiceKind.rawValue.getter(v20) && v22 == v23)
      break;
    v24 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      goto LABEL_24;

    ++v11;
    if (v3 == v10)
      goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
LABEL_24:

  result = swift_bridgeObjectRelease_n();
  if (v32 == v29)
  {
    LOBYTE(v4) = 0;
    goto LABEL_28;
  }
  if (v28)
  {
    MEMORY[0x24264F148](v32, v30);
    swift_unknownObjectRelease();
    LOBYTE(v4) = 1;
    goto LABEL_28;
  }
  if ((v32 & 0x8000000000000000) == 0)
  {
    v26 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRelease();
    if (v32 >= v26)
      goto LABEL_38;
    LOBYTE(v4) = 1;
    return v4;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t DataModel.accessoriesFromAnyHome(for:)(char *a1)
{
  void *v1;
  char v2;
  id v3;
  unint64_t v4;
  id v5;
  uint64_t v6;

  v2 = *a1;
  v3 = objc_msgSend(v1, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v4 = sub_23E5377F0();

  v5 = v1;
  v6 = sub_23E2552BC(v4, v2);
  swift_bridgeObjectRelease();

  return v6;
}

void *DataModel.home(for:)(uint64_t a1)
{
  void *v1;
  id v3;
  unint64_t v4;
  void *v5;
  _QWORD v7[4];

  v3 = objc_msgSend(v1, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v4 = sub_23E5377F0();

  v7[2] = a1;
  v5 = sub_23E24D560(sub_23E2553E8, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

void DataModel.accessory(for:)(uint64_t a1)
{
  sub_23E24E7D4(a1, (SEL *)&selRef_accessories, (unint64_t *)&qword_254332BF0, 0x24BDD7308, sub_23E2553E8);
}

void DataModel.actionSet(for:)(uint64_t a1)
{
  sub_23E24E7D4(a1, (SEL *)&selRef_actionSets, &qword_254332C00, 0x24BDD7480, sub_23E2553E8);
}

void sub_23E24E7D4(uint64_t a1, SEL *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(id *))
{
  void *v5;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  const char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  uint64_t v44;
  uint64_t (*v45)(id *);
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  SEL *v54;
  id v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;

  v52 = a3;
  v53 = a4;
  v54 = a2;
  v7 = v5;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v44 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - v17;
  v19 = objc_msgSend(v7, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v20 = sub_23E5377F0();

  v21 = v10;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22(v18, a1, v9);
  v57 = v16;
  v58 = v9;
  v22(v16, a1, v9);
  v45 = a5;
  v47 = v18;
  if (v20 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v23 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v23)
      goto LABEL_3;
LABEL_22:
    v35 = *(void (**)(char *, uint64_t))(v21 + 8);
    v37 = v58;
    v35(v47, v58);
LABEL_29:
    swift_bridgeObjectRelease();
    v35(v57, v37);
    return;
  }
  v23 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v23)
    goto LABEL_22;
LABEL_3:
  v24 = 0;
  v50 = v20;
  v51 = v20 & 0xC000000000000001;
  v46 = v20 + 32;
  v49 = v23;
  while (1)
  {
    if (v51)
    {
      swift_bridgeObjectRetain();
      v25 = (id)MEMORY[0x24264F148](v24, v20);
    }
    else
    {
      v26 = *(void **)(v46 + 8 * v24);
      swift_bridgeObjectRetain();
      v25 = v26;
    }
    v27 = *v54;
    v55 = v25;
    v28 = objc_msgSend(v25, v27);
    v48 = sub_23E1E335C(0, v52);
    v20 = sub_23E5377F0();

    v56 = v24;
    if (v20 >> 62)
      break;
    v29 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRelease_n();
    v20 = v50;
    swift_bridgeObjectRelease();

    v24 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v24 == v49)
      goto LABEL_22;
  }
  swift_bridgeObjectRetain_n();
  v29 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_16;
LABEL_9:
  v30 = 4;
  while (1)
  {
    if ((v20 & 0xC000000000000001) != 0)
      v31 = (id)MEMORY[0x24264F148](v30 - 4, v20);
    else
      v31 = *(id *)(v20 + 8 * v30);
    v32 = v31;
    v33 = v30 - 3;
    if (__OFADD__(v30 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    v34 = objc_msgSend(v31, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v34) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v35 = *(void (**)(char *, uint64_t))(v21 + 8);
    v35(v13, v58);

    if ((v34 & 1) != 0)
      break;
    ++v30;
    if (v33 == v29)
      goto LABEL_16;
  }
  v36 = v50;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v56 == v49)
    goto LABEL_22;
  if (v51)
  {
    v38 = (id)MEMORY[0x24264F148]();
    v37 = v58;
LABEL_28:
    v39 = objc_msgSend(v38, *v54);
    v40 = sub_23E5377F0();

    MEMORY[0x24BDAC7A8](v41);
    v42 = v47;
    *(&v44 - 2) = (uint64_t)v47;
    v43 = sub_23E24D560(v45, (uint64_t)(&v44 - 4), v40);
    swift_bridgeObjectRelease();
    v35(v42, v37);

    if (v43)
      goto LABEL_29;
  }
  else
  {
    if ((v56 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v37 = v58;
      if (v56 < *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v38 = *(id *)(v46 + 8 * v56);
        goto LABEL_28;
      }
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.cameraProfile(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t, unint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  unint64_t v29;
  char *v30;
  void (*v31)(char *, char *, unint64_t);
  char *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  id v47;
  id v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(char *, uint64_t, unint64_t);
  char *v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  uint64_t v76[3];

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v74 = (char *)&v55 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (unint64_t)&v55 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v55 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v55 - v17;
  v19 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v20 = sub_23E5377F0();

  v73 = v5;
  v21 = *(void (**)(char *, uint64_t, unint64_t))(v5 + 16);
  v56 = v18;
  v21(v18, a1, v4);
  v62 = v21;
  v63 = v16;
  v21(v16, a1, v4);
  if (v20 >> 62)
    goto LABEL_53;
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v22)
  {
LABEL_3:
    v23 = 0;
    v60 = v20;
    v61 = v20 & 0xC000000000000001;
    v57 = v20 + 32;
    v58 = v22;
    v72 = v4;
    v59 = (char *)v13;
    while (1)
    {
      v67 = v23;
      if (v61)
      {
        v24 = v23;
        swift_bridgeObjectRetain();
        v25 = (id)MEMORY[0x24264F148](v24, v20);
      }
      else
      {
        v26 = *(void **)(v57 + 8 * v23);
        swift_bridgeObjectRetain();
        v25 = v26;
      }
      v27 = v25;
      v28 = objc_msgSend(v25, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v29 = sub_23E5377F0();

      v31 = (void (*)(char *, char *, unint64_t))v62;
      v30 = v63;
      v62((char *)v13, (uint64_t)v63, v4);
      v31(v74, v30, v4);
      v66 = v27;
      if (!(v29 >> 62))
      {
        v32 = *(char **)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v32)
          break;
        goto LABEL_30;
      }
      swift_bridgeObjectRetain();
      v32 = (char *)sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v32)
        break;
LABEL_30:
      v4 = v72;
      v32 = *(char **)(v73 + 8);
      v13 = (unint64_t)v59;
      ((void (*)(char *, unint64_t))v32)(v59, v72);
      swift_bridgeObjectRelease();
      ((void (*)(char *, unint64_t))v32)(v74, v4);
      v20 = v60;
      swift_bridgeObjectRelease();

      v23 = v67 + 1;
      if (__OFADD__(v67, 1))
        goto LABEL_52;
      if (v23 == v58)
        goto LABEL_55;
    }
    v13 = 0;
    v69 = v29;
    v70 = v29 & 0xC000000000000001;
    v64 = v29 + 32;
    v68 = v32;
    while (1)
    {
      if (v70)
      {
        swift_bridgeObjectRetain();
        v33 = (id)MEMORY[0x24264F148](v13, v29);
      }
      else
      {
        v34 = *(void **)(v64 + 8 * v13);
        swift_bridgeObjectRetain();
        v33 = v34;
      }
      v35 = v33;
      v36 = objc_msgSend(v33, sel_cameraProfiles);
      if (v36)
      {
        v37 = v36;
        v38 = sub_23E1E335C(0, &qword_254333350);
        v39 = sub_23E5377F0();

        v65 = v38;
        v71 = v35;
        if (v39 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v40 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (v40)
          {
LABEL_16:
            v4 = v39 & 0xC000000000000001;
            v41 = 4;
            while (1)
            {
              v42 = v41 - 4;
              if (v4)
                v43 = (id)MEMORY[0x24264F148](v41 - 4, v39);
              else
                v43 = *(id *)(v39 + 8 * v41);
              v20 = (unint64_t)v43;
              v44 = v41 - 3;
              if (__OFADD__(v42, 1))
              {
                __break(1u);
                goto LABEL_38;
              }
              v45 = objc_msgSend(v43, sel_uniqueIdentifier);
              sub_23E536F68();

              v42 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v32 = *(char **)(v73 + 8);
              ((void (*)(char *, unint64_t))v32)(v8, v72);

              if ((v42 & 1) != 0)
                break;
              ++v41;
              if (v44 == v40)
                goto LABEL_23;
            }
            v40 = v69;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            if ((char *)v13 == v68)
              goto LABEL_30;
            if (v70)
            {
              v47 = (id)MEMORY[0x24264F148](v13, v40);
              goto LABEL_41;
            }
LABEL_38:
            if ((v13 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
            if (v13 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_58;
            v47 = *(id *)(v64 + 8 * v13);
LABEL_41:
            v42 = (uint64_t)v47;
            v48 = objc_msgSend(v47, sel_cameraProfiles);
            v4 = v72;
            v13 = (unint64_t)v59;
            v20 = v60;
            if (!v48)
              goto LABEL_61;
            v49 = v48;
            v50 = sub_23E5377F0();

            MEMORY[0x24BDAC7A8](v51);
            *(&v55 - 2) = v13;
            v8 = (char *)sub_23E24D560(sub_23E2553E8, (uint64_t)(&v55 - 4), v50);
            swift_bridgeObjectRelease();
            ((void (*)(unint64_t, unint64_t))v32)(v13, v4);

            if (!v8)
              goto LABEL_62;
            swift_bridgeObjectRelease();
            ((void (*)(char *, unint64_t))v32)(v74, v4);
            swift_bridgeObjectRelease();

            if (v67 == v58)
              goto LABEL_55;
            if (!v61)
            {
              if ((v67 & 0x8000000000000000) == 0)
              {
                if (v67 < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v52 = *(id *)(v57 + 8 * v67);
                  goto LABEL_49;
                }
                goto LABEL_60;
              }
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              ((void (*)(unint64_t, unint64_t))v32)(v13, v4);

LABEL_62:
              __break(1u);
              return;
            }
            v52 = (id)MEMORY[0x24264F148]();
LABEL_49:
            v53 = v52;
            v75 = v52;
            v54 = (uint64_t)v56;
            sub_23E24F32C(&v75, (uint64_t)v56, v76);
            ((void (*)(uint64_t, unint64_t))v32)(v54, v4);

            if (v76[0])
              goto LABEL_56;
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            swift_bridgeObjectRetain();
            v22 = sub_23E53803C();
            swift_bridgeObjectRelease();
            if (!v22)
              break;
            goto LABEL_3;
          }
        }
        else
        {
          v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v40)
            goto LABEL_16;
        }
LABEL_23:
        swift_bridgeObjectRelease_n();
        v32 = v68;
        v29 = v69;
        v35 = v71;
      }
      swift_bridgeObjectRelease();

      if (__OFADD__(v13++, 1))
        goto LABEL_51;
      if ((char *)v13 == v32)
        goto LABEL_30;
    }
  }
  v32 = *(char **)(v73 + 8);
LABEL_55:
  ((void (*)(char *, unint64_t))v32)(v56, v4);
LABEL_56:
  swift_bridgeObjectRelease();
  ((void (*)(char *, unint64_t))v32)(v63, v4);
}

void sub_23E24F32C(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char **v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  char *v33;
  id v34;
  void (*v35)(char *, unint64_t);
  unint64_t v37;
  void *v38;
  char *v39;
  id v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v44 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  v16 = objc_msgSend(*a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v17 = sub_23E5377F0();

  v52 = v7;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v15, a2, v6);
  v53 = v13;
  v18(v13, a2, v6);
  v54 = v6;
  v45 = a3;
  v46 = v15;
  if (v17 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    v19 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_3;
LABEL_24:
    v35 = *(void (**)(char *, unint64_t))(v52 + 8);
    v29 = v54;
    v35(v46, v54);
    v38 = 0;
LABEL_32:
    swift_bridgeObjectRelease();
    *v45 = v38;
    v35(v53, v29);
    return;
  }
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_24;
LABEL_3:
  v20 = 0;
  v21 = v17 & 0xC000000000000001;
  v44 = v17 + 32;
  v22 = &selRef_homeManager_didAddHome_;
  v48 = v17 & 0xC000000000000001;
  v49 = v19;
  v50 = v17;
  while (1)
  {
    if (v21)
    {
      swift_bridgeObjectRetain();
      v23 = (id)MEMORY[0x24264F148](v20, v17);
    }
    else
    {
      v24 = *(void **)(v44 + 8 * v20);
      swift_bridgeObjectRetain();
      v23 = v24;
    }
    v25 = v23;
    v26 = objc_msgSend(v23, v22[69], v44);
    if (v26)
      break;
LABEL_18:
    swift_bridgeObjectRelease();

    if (__OFADD__(v20++, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v20 == v19)
      goto LABEL_24;
  }
  v27 = v26;
  v47 = sub_23E1E335C(0, &qword_254333350);
  v17 = sub_23E5377F0();

  v51 = v25;
  if (!(v17 >> 62))
  {
    v28 = *(char **)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_10;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain_n();
  v28 = (char *)sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v28)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    v19 = v49;
    v17 = v50;
    v22 = &selRef_homeManager_didAddHome_;
    v21 = v48;
    v25 = v51;
    goto LABEL_18;
  }
LABEL_10:
  v29 = v17 & 0xC000000000000001;
  v30 = 4;
  while (1)
  {
    if (v29)
      v31 = (id)MEMORY[0x24264F148](v30 - 4, v17);
    else
      v31 = *(id *)(v17 + 8 * v30);
    v32 = v31;
    v33 = (char *)(v30 - 3);
    if (__OFADD__(v30 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    v34 = objc_msgSend(v31, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v34) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v35 = *(void (**)(char *, unint64_t))(v52 + 8);
    v35(v10, v54);

    if ((v34 & 1) != 0)
      break;
    ++v30;
    if (v33 == v28)
      goto LABEL_17;
  }
  v37 = v50;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v20 == v49)
    goto LABEL_24;
  if (v48)
  {
    v39 = (char *)MEMORY[0x24264F148](v20, v37);
    goto LABEL_30;
  }
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v20 >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    __break(1u);
LABEL_39:
    v35(v33, v29);

    goto LABEL_40;
  }
  v39 = (char *)*(id *)(v44 + 8 * v20);
LABEL_30:
  v28 = v39;
  v40 = objc_msgSend(v39, sel_cameraProfiles);
  v29 = v54;
  v33 = v46;
  if (!v40)
    goto LABEL_39;
  v41 = v40;
  v42 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v43);
  *(&v44 - 2) = (unint64_t)v33;
  v38 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v44 - 4), v42);
  swift_bridgeObjectRelease();
  v35(v33, v29);

  if (v38)
    goto LABEL_32;
LABEL_40:
  __break(1u);
}

void DataModel.mediaProfile(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  id v34;
  unint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  void (*v53)(uint64_t, uint64_t);
  id v54;
  unint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  id v71;
  unint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  id v85;
  _QWORD v86[2];

  v2 = v1;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v79);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v77 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v64 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v75 = (char *)&v64 - v12;
  v13 = sub_23E536F80();
  v14 = *(_QWORD **)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v84 = (char *)&v64 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v73 = (char *)&v64 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v64 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v64 - v24;
  v26 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v27 = sub_23E5377F0();

  v28 = (void (*)(char *, uint64_t, uint64_t))v14[2];
  v65 = v25;
  v28(v25, a1, v13);
  v70 = v23;
  v83 = v28;
  v28(v23, a1, v13);
  if (v27 >> 62)
    goto LABEL_50;
  v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v29)
  {
LABEL_51:
    v56 = (void (*)(uint64_t, uint64_t))v14[1];
    goto LABEL_52;
  }
  while (2)
  {
    v30 = 0;
    v68 = v27;
    v69 = v27 & 0xC000000000000001;
    v66 = v27 + 32;
    v67 = v29;
    v78 = v13;
    while (1)
    {
      v72 = v30;
      if (v69)
      {
        v31 = v30;
        swift_bridgeObjectRetain();
        v32 = (id)MEMORY[0x24264F148](v31, v27);
      }
      else
      {
        v33 = *(void **)(v66 + 8 * v30);
        swift_bridgeObjectRetain();
        v32 = v33;
      }
      v71 = v32;
      v34 = objc_msgSend(v32, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v35 = sub_23E5377F0();

      v36 = v70;
      v37 = (void (*)(char *, char *, uint64_t))v83;
      v83(v73, (uint64_t)v70, v13);
      v37(v84, v36, v13);
      v38 = (uint64_t)v75;
      if (v35 >> 62)
        break;
      v39 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v39)
        goto LABEL_9;
LABEL_29:
      v56 = (void (*)(uint64_t, uint64_t))v14[1];
      v56((uint64_t)v73, v13);
      swift_bridgeObjectRelease();
      v56((uint64_t)v84, v13);
      v27 = v68;
      swift_bridgeObjectRelease();

      v30 = v72 + 1;
      if (__OFADD__(v72, 1))
        goto LABEL_49;
      if (v30 == v67)
        goto LABEL_52;
    }
    swift_bridgeObjectRetain();
    v57 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v39 = v57;
    if (!v57)
      goto LABEL_29;
LABEL_9:
    v40 = 0;
    v81 = v35;
    v82 = v35 & 0xC000000000000001;
    v80 = v39;
    while (1)
    {
      if (v82)
      {
        swift_bridgeObjectRetain();
        v41 = (id)MEMORY[0x24264F148](v40, v35);
      }
      else
      {
        v42 = *(void **)(v35 + 8 * v40 + 32);
        swift_bridgeObjectRetain();
        v41 = v42;
      }
      v43 = v41;
      v44 = objc_msgSend(v41, sel_mediaProfile);
      if (v44)
      {
        v45 = v44;
        v46 = objc_msgSend(v44, sel_uniqueIdentifier);

        sub_23E536F68();
        v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14[7];
        v47(v38, 0, 1, v13);
      }
      else
      {
        v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v14[7];
        v47(v38, 1, 1, v13);
      }
      v83(v11, (uint64_t)v84, v13);
      v47((uint64_t)v11, 0, 1, v13);
      v48 = (uint64_t)&v5[*(int *)(v79 + 48)];
      sub_23E1FC2F8(v38, (uint64_t)v5);
      sub_23E1FC2F8((uint64_t)v11, v48);
      v49 = v14;
      v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v14[6];
      if (v50((uint64_t)v5, 1, v13) == 1)
      {
        if (v50(v48, 1, v13) != 1)
          goto LABEL_21;
        sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
        sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
        sub_23E1E7C64(v38, &qword_254333F50);
        v35 = v81;
      }
      else
      {
        v51 = v77;
        sub_23E1FC2F8((uint64_t)v5, v77);
        if (v50(v48, 1, v13) == 1)
        {
          ((void (*)(uint64_t, uint64_t))v49[1])(v51, v13);
LABEL_21:
          sub_23E1E7C64((uint64_t)v5, &qword_254332798);
          sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
          sub_23E1E7C64(v38, &qword_254333F50);
          v35 = v81;
LABEL_22:
          swift_bridgeObjectRelease();

          v14 = v49;
          goto LABEL_25;
        }
        v52 = v74;
        ((void (*)(char *, uint64_t, uint64_t))v49[4])(v74, v48, v13);
        sub_23E20BBB0();
        v76 = sub_23E537514();
        v53 = (void (*)(uint64_t, uint64_t))v49[1];
        v38 = (uint64_t)v75;
        v53(v51, v13);
        v53((uint64_t)v52, v13);
        sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
        sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
        sub_23E1E7C64(v38, &qword_254333F50);
        v35 = v81;
        if ((v76 & 1) == 0)
          goto LABEL_22;
      }
      v54 = objc_msgSend(v43, sel_mediaProfile);

      swift_bridgeObjectRelease();
      v14 = v49;
      if (v54)
        break;
LABEL_25:
      v55 = v40 + 1;
      v13 = v78;
      if (__OFADD__(v40, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      ++v40;
      if (v55 == v80)
        goto LABEL_29;
    }
    v13 = v78;
    if (v80 == v40)
      goto LABEL_29;
LABEL_35:
    if (v82)
    {
      v58 = (id)MEMORY[0x24264F148](v40, v35);
      goto LABEL_40;
    }
    if ((v40 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v40 >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v58 = *(id *)(v35 + 8 * v40 + 32);
LABEL_40:
    v59 = v58;
    v85 = v58;
    v60 = (uint64_t)v73;
    sub_23E2505C8(&v85, (uint64_t)v73, v86);
    v56 = (void (*)(uint64_t, uint64_t))v14[1];
    v56(v60, v13);

    v61 = (void *)v86[0];
    if (!v86[0])
      goto LABEL_58;
    swift_bridgeObjectRelease();
    v56((uint64_t)v84, v13);
    v27 = v68;
    swift_bridgeObjectRelease();

    if (v72 == v67)
    {
LABEL_52:
      v56((uint64_t)v65, v13);
      break;
    }
    if (v69)
    {
      v62 = (id)MEMORY[0x24264F148]();
      goto LABEL_47;
    }
    if ((v72 & 0x8000000000000000) != 0)
      goto LABEL_56;
    if (v72 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      return;
    }
    v62 = *(id *)(v66 + 8 * v72);
LABEL_47:
    v63 = v62;
    v85 = v62;
    v11 = v65;
    sub_23E24FFF4(&v85, (uint64_t)v65, v86);
    v56((uint64_t)v11, v13);

    if (!v86[0])
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
      v29 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v29)
        goto LABEL_51;
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  v56((uint64_t)v70, v13);
}

void sub_23E24FFF4(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  id v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  unint64_t v61;
  id v62;
  uint64_t v63;

  v50 = a3;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v58);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v54 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v50 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v50 - v13;
  v15 = sub_23E536F80();
  v16 = *(_QWORD **)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v50 - v22;
  v24 = objc_msgSend(*a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v25 = sub_23E5377F0();

  v26 = (void (*)(char *, uint64_t, uint64_t))v16[2];
  v51 = v23;
  v26(v23, a2, v15);
  v59 = v21;
  v57 = (void (*)(char *, char *, uint64_t))v26;
  v26(v21, a2, v15);
  v61 = v25;
  if (v25 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    v27 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_3;
LABEL_22:
    v44 = (void (*)(char *, uint64_t))v16[1];
    v44(v51, v15);
    v45 = 0;
LABEL_23:
    v46 = v50;
    swift_bridgeObjectRelease();
    *v46 = v45;
    v44(v59, v15);
    return;
  }
  v27 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v27)
    goto LABEL_22;
LABEL_3:
  v28 = 0;
  v55 = v27;
  v56 = v61 & 0xC000000000000001;
  v60 = v14;
  while (1)
  {
    if (v56)
    {
      v29 = v61;
      swift_bridgeObjectRetain();
      v30 = (id)MEMORY[0x24264F148](v28, v29);
    }
    else
    {
      v31 = *(void **)(v61 + 8 * v28 + 32);
      swift_bridgeObjectRetain();
      v30 = v31;
    }
    v32 = v30;
    v33 = objc_msgSend(v30, sel_mediaProfile, v50);
    if (v33)
    {
      v34 = v33;
      v35 = objc_msgSend(v33, sel_uniqueIdentifier);

      sub_23E536F68();
      v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
      v36(v14, 0, 1, v15);
    }
    else
    {
      v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16[7];
      v36(v14, 1, 1, v15);
    }
    v57(v12, v59, v15);
    v36(v12, 0, 1, v15);
    v37 = (uint64_t)&v6[*(int *)(v58 + 48)];
    sub_23E1FC2F8((uint64_t)v14, (uint64_t)v6);
    sub_23E1FC2F8((uint64_t)v12, v37);
    v38 = v16;
    v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v16[6];
    if (v39(v6, 1, v15) == 1)
      break;
    v40 = v54;
    sub_23E1FC2F8((uint64_t)v6, v54);
    if (v39((char *)v37, 1, v15) == 1)
    {
      sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v60, &qword_254333F50);
      ((void (*)(uint64_t, uint64_t))v38[1])(v40, v15);
      goto LABEL_15;
    }
    v14 = v52;
    ((void (*)(char *, uint64_t, uint64_t))v38[4])(v52, v37, v15);
    sub_23E20BBB0();
    v53 = sub_23E537514();
    v41 = (void (*)(char *, uint64_t))v38[1];
    v41(v14, v15);
    sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v60, &qword_254333F50);
    v41((char *)v40, v15);
    sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
    if ((v53 & 1) != 0)
      goto LABEL_17;
LABEL_19:
    swift_bridgeObjectRelease();

    v16 = v38;
LABEL_20:
    v43 = v28 + 1;
    if (__OFADD__(v28, 1))
      goto LABEL_32;
    ++v28;
    v14 = v60;
    if (v43 == v55)
      goto LABEL_22;
  }
  sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v14, &qword_254333F50);
  if (v39((char *)v37, 1, v15) != 1)
  {
LABEL_15:
    sub_23E1E7C64((uint64_t)v6, &qword_254332798);
    goto LABEL_19;
  }
  sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
LABEL_17:
  v42 = objc_msgSend(v32, sel_mediaProfile);

  swift_bridgeObjectRelease();
  v16 = v38;
  if (!v42)
    goto LABEL_20;
  if (v55 == v28)
    goto LABEL_22;
  if (v56)
  {
    v47 = (id)MEMORY[0x24264F148](v28, v61);
LABEL_30:
    v48 = v47;
    v62 = v47;
    v49 = (uint64_t)v51;
    sub_23E2505C8(&v62, (uint64_t)v51, &v63);
    v44 = (void (*)(char *, uint64_t))v16[1];
    v44((char *)v49, v15);

    v45 = v63;
    if (v63)
      goto LABEL_23;
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v28 < *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v47 = *(id *)(v61 + 8 * v28 + 32);
    goto LABEL_30;
  }
  __break(1u);
}

id sub_23E2505C8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  id result;
  uint64_t v30;
  char *v31;
  id v32;
  _QWORD *v33;

  v33 = a3;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  v32 = *a1;
  v20 = objc_msgSend(v32, sel_mediaProfile);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_uniqueIdentifier);

    sub_23E536F68();
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v23(v19, 0, 1, v5);
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v23(v19, 1, 1, v5);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v17, a2, v5);
  v23(v17, 0, 1, v5);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E1FC2F8((uint64_t)v19, (uint64_t)v10);
  sub_23E1FC2F8((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v25((uint64_t)v10, 1, v5) != 1)
  {
    sub_23E1FC2F8((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v5) != 1)
    {
      v26 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v31, v24, v5);
      sub_23E20BBB0();
      v27 = sub_23E537514();
      v28 = *(void (**)(char *, uint64_t))(v6 + 8);
      v28(v26, v5);
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
      v28(v14, v5);
      sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
      if ((v27 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      result = 0;
      goto LABEL_13;
    }
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
LABEL_9:
    sub_23E1E7C64((uint64_t)v10, &qword_254332798);
    goto LABEL_12;
  }
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
  if (v25(v24, 1, v5) != 1)
    goto LABEL_9;
  sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
LABEL_11:
  result = objc_msgSend(v32, sel_mediaProfile);
LABEL_13:
  *v33 = result;
  return result;
}

void DataModel.characteristic(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  id v38;
  unint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  id v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  id v76;
  unint64_t v77;
  char *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  void (*v85)(char *, uint64_t);
  char *v86;
  unint64_t v87;
  id v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  id v94;
  unint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  _QWORD v99[3];

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v97 = (char *)&v70 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v90 = (char *)&v70 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v70 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v78 = (char *)&v70 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v70 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v70 - v20;
  v22 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v23 = sub_23E5377F0();

  v96 = v5;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v70 = v21;
  v24(v21, a1, v4);
  v75 = v19;
  v84 = v24;
  v24(v19, a1, v4);
  if (v23 >> 62)
    goto LABEL_74;
  v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    v79 = v23;
    if (!v25)
    {
LABEL_54:
      v47 = *(void (**)(char *, uint64_t))(v96 + 8);
      goto LABEL_55;
    }
    v26 = 0;
    v72 = 0;
    v74 = v23 & 0xC000000000000001;
    v71 = v23 + 32;
    v73 = v25;
    while (1)
    {
      v77 = v26;
      if (v74)
      {
        v27 = v79;
        v28 = v26;
        swift_bridgeObjectRetain();
        v29 = (id)MEMORY[0x24264F148](v28, v27);
      }
      else
      {
        v30 = *(void **)(v71 + 8 * v26);
        swift_bridgeObjectRetain();
        v29 = v30;
      }
      v76 = v29;
      v31 = objc_msgSend(v29, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v23 = sub_23E5377F0();

      v32 = v75;
      v33 = (void (*)(char *, char *, uint64_t))v84;
      v84(v78, (uint64_t)v75, v4);
      v33(v86, v32, v4);
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        v34 = sub_23E53803C();
        swift_bridgeObjectRelease();
        if (!v34)
        {
LABEL_49:
          v47 = *(void (**)(char *, uint64_t))(v96 + 8);
          goto LABEL_50;
        }
      }
      else
      {
        v34 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v34)
          goto LABEL_49;
      }
      v35 = 0;
      v82 = v23;
      v83 = v23 & 0xC000000000000001;
      v80 = v23 + 32;
      v81 = v34;
      while (1)
      {
        if (v83)
        {
          swift_bridgeObjectRetain();
          v36 = (id)MEMORY[0x24264F148](v35, v23);
        }
        else
        {
          v37 = *(void **)(v80 + 8 * v35);
          swift_bridgeObjectRetain();
          v36 = v37;
        }
        v88 = v36;
        v38 = objc_msgSend(v36, sel_services);
        sub_23E1E335C(0, (unint64_t *)&qword_254333378);
        v39 = sub_23E5377F0();

        v40 = v86;
        v41 = (void (*)(char *, char *, uint64_t))v84;
        v84(v90, (uint64_t)v86, v4);
        v41(v97, v40, v4);
        v89 = v35;
        if (v39 >> 62)
          break;
        v42 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v42)
          goto LABEL_16;
LABEL_35:
        v47 = *(void (**)(char *, uint64_t))(v96 + 8);
        v47(v90, v4);
        swift_bridgeObjectRelease();
        v47(v97, v4);
        v23 = v82;
        swift_bridgeObjectRelease();

        v35 = v89 + 1;
        if (__OFADD__(v89, 1))
        {
          __break(1u);
LABEL_61:
          if ((v54 & 0x8000000000000000) != 0)
          {
LABEL_77:
            __break(1u);
          }
          else if (v54 < *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v63 = *(id *)(v80 + 8 * v54);
            goto LABEL_64;
          }
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
          return;
        }
        if (v35 == v81)
          goto LABEL_50;
      }
      swift_bridgeObjectRetain();
      v42 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v42)
        goto LABEL_35;
LABEL_16:
      v43 = 0;
      v92 = v39;
      v93 = v39 & 0xC000000000000001;
      v87 = v39 + 32;
      v91 = v42;
      while (1)
      {
        if (v93)
        {
          swift_bridgeObjectRetain();
          v44 = (id)MEMORY[0x24264F148](v43, v39);
        }
        else
        {
          v45 = *(void **)(v87 + 8 * v43);
          swift_bridgeObjectRetain();
          v44 = v45;
        }
        v94 = v44;
        v46 = objc_msgSend(v44, sel_characteristics);
        v47 = (void (*)(char *, uint64_t))sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        v23 = sub_23E5377F0();

        v95 = v43;
        if (v23 >> 62)
          break;
        v48 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v48)
          goto LABEL_22;
LABEL_29:
        swift_bridgeObjectRelease_n();
        v39 = v92;
        swift_bridgeObjectRelease();

        v43 = v95 + 1;
        if (__OFADD__(v95, 1))
        {
          __break(1u);
          goto LABEL_58;
        }
        if (v43 == v91)
          goto LABEL_35;
      }
      swift_bridgeObjectRetain_n();
      v48 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v48)
        goto LABEL_29;
LABEL_22:
      v85 = v47;
      v49 = 4;
      while (1)
      {
        if ((v23 & 0xC000000000000001) != 0)
          v50 = (id)MEMORY[0x24264F148](v49 - 4, v23);
        else
          v50 = *(id *)(v23 + 8 * v49);
        v51 = v50;
        v52 = v49 - 3;
        if (__OFADD__(v49 - 4, 1))
        {
          __break(1u);
          goto LABEL_54;
        }
        v53 = objc_msgSend(v50, sel_uniqueIdentifier);
        sub_23E536F68();

        LOBYTE(v53) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v47 = *(void (**)(char *, uint64_t))(v96 + 8);
        v47(v8, v4);

        if ((v53 & 1) != 0)
          break;
        ++v49;
        if (v52 == v48)
          goto LABEL_29;
      }
      v55 = v92;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      if (v95 == v91)
        goto LABEL_35;
      if (v93)
      {
        v56 = (id)MEMORY[0x24264F148]();
        goto LABEL_45;
      }
      if ((v95 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      if (v95 >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_76;
      v56 = *(id *)(v87 + 8 * v95);
LABEL_45:
      v57 = objc_msgSend(v56, sel_characteristics);
      v58 = sub_23E5377F0();

      MEMORY[0x24BDAC7A8](v59);
      v60 = v90;
      *(&v70 - 2) = v90;
      v61 = v72;
      v62 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v70 - 4), v58);
      v72 = v61;
      swift_bridgeObjectRelease();
      v47(v60, v4);

      if (!v62)
        goto LABEL_81;
      swift_bridgeObjectRelease();
      v47(v97, v4);
      v23 = v82;
      swift_bridgeObjectRelease();

      v54 = v89;
      if (v89 != v81)
        break;
LABEL_50:
      v47(v78, v4);
      swift_bridgeObjectRelease();
      v47(v86, v4);
      swift_bridgeObjectRelease();

      v26 = v77 + 1;
      if (__OFADD__(v77, 1))
        goto LABEL_73;
      if (v26 == v73)
        goto LABEL_55;
    }
LABEL_58:
    if (!v83)
      goto LABEL_61;
    v63 = (id)MEMORY[0x24264F148]();
LABEL_64:
    v64 = v63;
    v98 = v63;
    v65 = (uint64_t)v78;
    sub_23E2519B8(&v98, (uint64_t)v78, v99);
    v47((char *)v65, v4);

    v66 = (void *)v99[0];
    if (!v99[0])
      goto LABEL_82;
    swift_bridgeObjectRelease();
    v47(v86, v4);
    swift_bridgeObjectRelease();

    if (v77 == v73)
    {
LABEL_55:
      v47(v70, v4);
      break;
    }
    if (v74)
    {
      v67 = (id)MEMORY[0x24264F148]();
      goto LABEL_71;
    }
    if ((v77 & 0x8000000000000000) != 0)
      goto LABEL_79;
    if (v77 >= *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_80;
    v67 = *(id *)(v71 + 8 * v77);
LABEL_71:
    v68 = v67;
    v98 = v67;
    v69 = (uint64_t)v70;
    sub_23E2512F4(&v98, (uint64_t)v70, v99);
    v47((char *)v69, v4);

    if (!v99[0])
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      swift_bridgeObjectRetain();
      v25 = sub_23E53803C();
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  v47(v75, v4);
}

void sub_23E2512F4(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t, unint64_t);
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  char *v29;
  void (*v30)(char *, char *, unint64_t);
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  unint64_t v40;
  id v41;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  void (*v61)(char *, uint64_t, unint64_t);
  char *v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  id v74;
  uint64_t v75[3];

  v54 = a3;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v54 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t)&v54 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v54 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v54 - v18;
  v20 = objc_msgSend(*a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v21 = sub_23E5377F0();

  v72 = v6;
  v22 = *(void (**)(char *, uint64_t, unint64_t))(v6 + 16);
  v55 = v19;
  v22(v19, a2, v5);
  v61 = v22;
  v62 = v17;
  v22(v17, a2, v5);
  if (v21 >> 62)
    goto LABEL_50;
  v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v23)
  {
LABEL_3:
    v24 = 0;
    v59 = v21;
    v60 = v21 & 0xC000000000000001;
    v56 = v21 + 32;
    v57 = v23;
    v71 = v5;
    v58 = (_QWORD *)v14;
    while (1)
    {
      v66 = v24;
      if (v60)
      {
        swift_bridgeObjectRetain();
        v25 = (id)MEMORY[0x24264F148](v24, v21);
      }
      else
      {
        v26 = *(void **)(v56 + 8 * v24);
        swift_bridgeObjectRetain();
        v25 = v26;
      }
      v65 = v25;
      v27 = objc_msgSend(v25, sel_services, v54);
      sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v28 = sub_23E5377F0();

      v30 = (void (*)(char *, char *, unint64_t))v61;
      v29 = v62;
      v61((char *)v14, (uint64_t)v62, v5);
      v30(v73, v29, v5);
      if (!(v28 >> 62))
      {
        v31 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v31)
          break;
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      v31 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v31)
        break;
LABEL_28:
      v5 = v71;
      v19 = *(char **)(v72 + 8);
      v14 = (uint64_t)v58;
      ((void (*)(_QWORD *, unint64_t))v19)(v58, v71);
      swift_bridgeObjectRelease();
      ((void (*)(char *, unint64_t))v19)(v73, v5);
      v21 = v59;
      swift_bridgeObjectRelease();

      v24 = v66 + 1;
      if (__OFADD__(v66, 1))
        goto LABEL_49;
      if (v24 == v57)
        goto LABEL_52;
    }
    v32 = 0;
    v68 = v28;
    v69 = v28 & 0xC000000000000001;
    v63 = v28 + 32;
    v67 = v31;
    while (1)
    {
      if (v69)
      {
        swift_bridgeObjectRetain();
        v33 = (id)MEMORY[0x24264F148](v32, v28);
      }
      else
      {
        v34 = *(void **)(v63 + 8 * v32);
        swift_bridgeObjectRetain();
        v33 = v34;
      }
      v70 = v33;
      v35 = objc_msgSend(v33, sel_characteristics);
      v64 = sub_23E1E335C(0, (unint64_t *)&qword_254333358);
      v36 = sub_23E5377F0();

      if (v36 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v37 = sub_23E53803C();
        swift_bridgeObjectRelease();
        if (v37)
        {
LABEL_15:
          v5 = v36 & 0xC000000000000001;
          v21 = 4;
          while (1)
          {
            v14 = v21 - 4;
            if (v5)
              v38 = (id)MEMORY[0x24264F148](v21 - 4, v36);
            else
              v38 = *(id *)(v36 + 8 * v21);
            v39 = v38;
            v40 = v21 - 3;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              goto LABEL_36;
            }
            v41 = objc_msgSend(v38, sel_uniqueIdentifier);
            sub_23E536F68();

            v14 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            v19 = *(char **)(v72 + 8);
            ((void (*)(char *, unint64_t))v19)(v9, v71);

            if ((v14 & 1) != 0)
              break;
            ++v21;
            if (v40 == v37)
              goto LABEL_22;
          }
          v40 = v68;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
          if (v32 == v67)
            goto LABEL_28;
          if (v69)
          {
            v43 = (id)MEMORY[0x24264F148](v32, v40);
            goto LABEL_39;
          }
LABEL_36:
          if ((v32 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v32 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v43 = *(id *)(v63 + 8 * v32);
LABEL_39:
          v44 = v43;
          v45 = objc_msgSend(v43, sel_characteristics);
          v46 = sub_23E5377F0();

          MEMORY[0x24BDAC7A8](v47);
          v48 = v58;
          *(&v54 - 2) = v58;
          v49 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v54 - 4), v46);
          swift_bridgeObjectRelease();
          v5 = v71;
          ((void (*)(_QWORD *, unint64_t))v19)(v48, v71);

          v21 = v59;
          v50 = v57;
          if (!v49)
            goto LABEL_58;
          swift_bridgeObjectRelease();
          ((void (*)(char *, unint64_t))v19)(v73, v5);
          swift_bridgeObjectRelease();

          if (v66 == v50)
            goto LABEL_52;
          if (!v60)
          {
            if ((v66 & 0x8000000000000000) == 0)
            {
              if (v66 < *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v51 = *(id *)(v56 + 8 * v66);
                goto LABEL_46;
              }
              goto LABEL_57;
            }
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            return;
          }
          v51 = (id)MEMORY[0x24264F148]();
LABEL_46:
          v52 = v51;
          v74 = v51;
          v9 = v55;
          sub_23E2519B8(&v74, (uint64_t)v55, v75);
          ((void (*)(char *, unint64_t))v19)(v9, v5);

          v53 = v75[0];
          if (v75[0])
            goto LABEL_53;
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          swift_bridgeObjectRetain();
          v23 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (!v23)
            break;
          goto LABEL_3;
        }
      }
      else
      {
        v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v37)
          goto LABEL_15;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      v28 = v68;
      swift_bridgeObjectRelease();

      if (__OFADD__(v32++, 1))
        goto LABEL_48;
      if (v32 == v67)
        goto LABEL_28;
    }
  }
  v19 = *(char **)(v72 + 8);
LABEL_52:
  ((void (*)(char *, unint64_t))v19)(v55, v5);
  v53 = 0;
LABEL_53:
  swift_bridgeObjectRelease();
  *v54 = v53;
  ((void (*)(char *, unint64_t))v19)(v62, v5);
}

void sub_23E2519B8(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v43 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  v16 = objc_msgSend(*a1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v17 = sub_23E5377F0();

  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v15, a2, v6);
  v52 = v13;
  v53 = v6;
  v19 = v13;
  v20 = v17;
  v18(v19, a2, v6);
  v44 = a3;
  v45 = v15;
  if (v17 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v21 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_3;
LABEL_22:
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35 = v53;
    v33(v45, v53);
    v36 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    *v44 = v36;
    v33(v52, v35);
    return;
  }
  v21 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v21)
    goto LABEL_22;
LABEL_3:
  v22 = 0;
  v48 = v20;
  v49 = v20 & 0xC000000000000001;
  v43 = v20 + 32;
  v47 = v21;
  while (1)
  {
    if (v49)
    {
      swift_bridgeObjectRetain();
      v23 = (id)MEMORY[0x24264F148](v22, v20);
    }
    else
    {
      v24 = *(void **)(v43 + 8 * v22);
      swift_bridgeObjectRetain();
      v23 = v24;
    }
    v50 = v23;
    v25 = objc_msgSend(v23, sel_characteristics, v43);
    v46 = sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v26 = sub_23E5377F0();

    v51 = v22;
    if (v26 >> 62)
      break;
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27)
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRelease_n();
    v20 = v48;
    swift_bridgeObjectRelease();

    v22 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v22 == v47)
      goto LABEL_22;
  }
  swift_bridgeObjectRetain_n();
  v27 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_16;
LABEL_9:
  v20 = v26 & 0xC000000000000001;
  v28 = 4;
  while (1)
  {
    if (v20)
      v29 = (id)MEMORY[0x24264F148](v28 - 4, v26);
    else
      v29 = *(id *)(v26 + 8 * v28);
    v30 = v29;
    v31 = v28 - 3;
    if (__OFADD__(v28 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    v32 = objc_msgSend(v29, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v32) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v10, v53);

    if ((v32 & 1) != 0)
      break;
    ++v28;
    if (v31 == v27)
      goto LABEL_16;
  }
  v34 = v48;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v51 == v47)
    goto LABEL_22;
  if (v49)
  {
    v37 = (id)MEMORY[0x24264F148]();
LABEL_28:
    v38 = v37;
    v39 = objc_msgSend(v37, sel_characteristics);
    v40 = sub_23E5377F0();

    MEMORY[0x24BDAC7A8](v41);
    v42 = v45;
    *(&v43 - 2) = (unint64_t)v45;
    v36 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v43 - 4), v40);
    swift_bridgeObjectRelease();
    v35 = v53;
    v33(v42, v53);

    if (v36)
      goto LABEL_29;
  }
  else
  {
    if ((v51 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v51 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v37 = *(id *)(v43 + 8 * v51);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.room(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t);
  id v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  char *v55;

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v45 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v45 - v12;
  v14 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v15 = sub_23E5377F0();

  v54 = v5;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v47 = v13;
  v16(v13, a1, v4);
  v55 = v11;
  v16(v11, a1, v4);
  if (v15 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    v17 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_3;
LABEL_40:
    v33 = *(void (**)(char *, uint64_t))(v54 + 8);
LABEL_41:
    v33(v47, v4);
    swift_bridgeObjectRelease();
LABEL_42:
    v33(v55, v4);
    return;
  }
  v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v17)
    goto LABEL_40;
LABEL_3:
  v18 = 0;
  v19 = v15 & 0xC000000000000001;
  v46 = v15 + 32;
  v20 = v4;
  v50 = v17;
  v51 = v15;
  v49 = v15 & 0xC000000000000001;
  while (1)
  {
    v52 = v18;
    if (v19)
    {
      swift_bridgeObjectRetain();
      v21 = (id)MEMORY[0x24264F148](v18, v15);
    }
    else
    {
      v22 = *(void **)(v46 + 8 * v18);
      swift_bridgeObjectRetain();
      v21 = v22;
    }
    v23 = v21;
    v24 = objc_msgSend(v21, sel_rooms);
    v25 = sub_23E1E335C(0, &qword_254332C28);
    v26 = sub_23E5377F0();

    v48 = v25;
    v53 = v23;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v27 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_9:
        v28 = (id)(v26 & 0xC000000000000001);
        v4 = 4;
        while (1)
        {
          v15 = v4 - 4;
          v29 = v28 ? (id)MEMORY[0x24264F148](v4 - 4, v26) : *(id *)(v26 + 8 * v4);
          v30 = v29;
          v31 = v4 - 3;
          if (__OFADD__(v15, 1))
            break;
          v32 = objc_msgSend(v29, sel_uniqueIdentifier);
          sub_23E536F68();

          LOBYTE(v32) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
          v33 = *(void (**)(char *, uint64_t))(v54 + 8);
          v33(v8, v20);

          if ((v32 & 1) != 0)
          {
            v15 = v51;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            v4 = v20;
            goto LABEL_26;
          }
          ++v4;
          if (v31 == v27)
            goto LABEL_16;
        }
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v27)
        goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    v28 = v53;
    v34 = objc_msgSend(v53, sel_roomForEntireHome);
    v35 = objc_msgSend(v34, sel_uniqueIdentifier);

    sub_23E536F68();
    LOBYTE(v34) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v33 = *(void (**)(char *, uint64_t))(v54 + 8);
    v4 = v20;
    v33(v8, v20);
    if ((v34 & 1) != 0)
      break;
    v15 = v51;
    swift_bridgeObjectRelease();

LABEL_20:
    v18 = v52 + 1;
    if (__OFADD__(v52, 1))
      goto LABEL_38;
    v19 = v49;
    if (v18 == v50)
      goto LABEL_41;
  }
  v36 = objc_msgSend(v28, sel_roomForEntireHome);

  v15 = v51;
  swift_bridgeObjectRelease();

  if (!v36)
    goto LABEL_20;
LABEL_26:
  if (v52 == v50)
    goto LABEL_41;
  if (v49)
  {
    v28 = (id)MEMORY[0x24264F148]();
    v37 = v47;
    goto LABEL_32;
  }
  v37 = v47;
  if ((v52 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v52 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    v33(v37, v4);

    goto LABEL_46;
  }
  v28 = *(id *)(v46 + 8 * v52);
LABEL_32:
  v38 = objc_msgSend(v28, sel_rooms);
  v39 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v40);
  *(&v45 - 2) = (uint64_t)v37;
  v41 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v45 - 4), v39);
  swift_bridgeObjectRelease();
  if (v41)
  {
    v33(v37, v4);
    swift_bridgeObjectRelease();

    goto LABEL_42;
  }
  v42 = objc_msgSend(v28, sel_roomForEntireHome);
  v43 = objc_msgSend(v42, sel_uniqueIdentifier);

  sub_23E536F68();
  LOBYTE(v42) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v33(v8, v4);
  if ((v42 & 1) == 0)
    goto LABEL_45;
  v44 = objc_msgSend(v28, sel_roomForEntireHome);
  v33(v37, v4);

  if (v44)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
LABEL_46:
  __break(1u);
}

void DataModel.service(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  id v43;
  void *v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73[3];

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v52 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (unint64_t)&v52 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v52 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v52 - v17;
  v19 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v20 = sub_23E5377F0();

  v70 = v5;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v53 = v18;
  v21(v18, a1, v4);
  v59 = v21;
  v60 = v16;
  v21(v16, a1, v4);
  if (v20 >> 62)
    goto LABEL_50;
  v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v22)
  {
LABEL_3:
    v23 = 0;
    v57 = v20;
    v58 = v20 & 0xC000000000000001;
    v54 = v20 + 32;
    v55 = v22;
    v69 = v4;
    v56 = (char *)v13;
    while (1)
    {
      v64 = v23;
      if (v58)
      {
        v24 = v23;
        swift_bridgeObjectRetain();
        v25 = (id)MEMORY[0x24264F148](v24, v20);
      }
      else
      {
        v26 = *(void **)(v54 + 8 * v23);
        swift_bridgeObjectRetain();
        v25 = v26;
      }
      v63 = v25;
      v27 = objc_msgSend(v25, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v28 = sub_23E5377F0();

      v30 = (void (*)(char *, char *, uint64_t))v59;
      v29 = v60;
      v59((char *)v13, (uint64_t)v60, v4);
      v30(v71, v29, v4);
      if (!(v28 >> 62))
      {
        v31 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v31)
          break;
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
      v31 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v31)
        break;
LABEL_28:
      v4 = v69;
      v21 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 8);
      v13 = (unint64_t)v56;
      ((void (*)(char *, uint64_t))v21)(v56, v69);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v21)(v71, v4);
      v20 = v57;
      swift_bridgeObjectRelease();

      v23 = v64 + 1;
      if (__OFADD__(v64, 1))
        goto LABEL_49;
      if (v23 == v55)
        goto LABEL_52;
    }
    v13 = 0;
    v66 = v28;
    v67 = v28 & 0xC000000000000001;
    v61 = v28 + 32;
    v65 = (char *)v31;
    while (1)
    {
      if (v67)
      {
        swift_bridgeObjectRetain();
        v32 = (id)MEMORY[0x24264F148](v13, v28);
      }
      else
      {
        v33 = *(void **)(v61 + 8 * v13);
        swift_bridgeObjectRetain();
        v32 = v33;
      }
      v68 = v32;
      v34 = objc_msgSend(v32, sel_services);
      v35 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v36 = sub_23E5377F0();

      v62 = v35;
      if (v36 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v37 = sub_23E53803C();
        swift_bridgeObjectRelease();
        if (v37)
        {
LABEL_15:
          v38 = 4;
          while (1)
          {
            if ((v36 & 0xC000000000000001) != 0)
              v39 = (id)MEMORY[0x24264F148](v38 - 4, v36);
            else
              v39 = *(id *)(v36 + 8 * v38);
            v40 = v39;
            v4 = v38 - 3;
            if (__OFADD__(v38 - 4, 1))
            {
              __break(1u);
              goto LABEL_36;
            }
            v41 = objc_msgSend(v39, sel_uniqueIdentifier);
            sub_23E536F68();

            v20 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            v21 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 8);
            ((void (*)(char *, uint64_t))v21)(v8, v69);

            if ((v20 & 1) != 0)
              break;
            ++v38;
            if (v4 == v37)
              goto LABEL_22;
          }
          v38 = v66;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
          if ((char *)v13 == v65)
            goto LABEL_28;
          if (v67)
          {
            v43 = (id)MEMORY[0x24264F148](v13, v38);
            goto LABEL_39;
          }
LABEL_36:
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v13 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v43 = *(id *)(v61 + 8 * v13);
LABEL_39:
          v44 = v43;
          v45 = objc_msgSend(v43, sel_services);
          v46 = sub_23E5377F0();

          MEMORY[0x24BDAC7A8](v47);
          v48 = v56;
          *(&v52 - 2) = (uint64_t)v56;
          v8 = (char *)sub_23E24D560(sub_23E2553E8, (uint64_t)(&v52 - 4), v46);
          swift_bridgeObjectRelease();
          v4 = v69;
          ((void (*)(char *, uint64_t))v21)(v48, v69);

          v20 = v57;
          if (!v8)
            goto LABEL_58;
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v21)(v71, v4);
          swift_bridgeObjectRelease();

          if (v64 == v55)
            goto LABEL_52;
          if (!v58)
          {
            if ((v64 & 0x8000000000000000) == 0)
            {
              if (v64 < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v49 = *(id *)(v54 + 8 * v64);
                goto LABEL_46;
              }
              goto LABEL_57;
            }
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            return;
          }
          v49 = (id)MEMORY[0x24264F148]();
LABEL_46:
          v50 = v49;
          v72 = v49;
          v51 = (uint64_t)v53;
          sub_23E252ADC(&v72, (uint64_t)v53, v73);
          ((void (*)(uint64_t, uint64_t))v21)(v51, v4);

          if (v73[0])
            goto LABEL_53;
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          swift_bridgeObjectRetain();
          v22 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (!v22)
            break;
          goto LABEL_3;
        }
      }
      else
      {
        v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v37)
          goto LABEL_15;
      }
LABEL_22:
      swift_bridgeObjectRelease_n();
      v28 = v66;
      swift_bridgeObjectRelease();

      if (__OFADD__(v13++, 1))
        goto LABEL_48;
      if ((char *)v13 == v65)
        goto LABEL_28;
    }
  }
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 8);
LABEL_52:
  ((void (*)(char *, uint64_t))v21)(v53, v4);
LABEL_53:
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v21)(v60, v4);
}

void sub_23E252ADC(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v43 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  v16 = objc_msgSend(*a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v17 = sub_23E5377F0();

  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18(v15, a2, v6);
  v52 = v13;
  v53 = v6;
  v19 = v13;
  v20 = v17;
  v18(v19, a2, v6);
  v44 = a3;
  v45 = v15;
  if (v17 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v21 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_3;
LABEL_22:
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v35 = v53;
    v33(v45, v53);
    v36 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    *v44 = v36;
    v33(v52, v35);
    return;
  }
  v21 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v21)
    goto LABEL_22;
LABEL_3:
  v22 = 0;
  v48 = v20;
  v49 = v20 & 0xC000000000000001;
  v43 = v20 + 32;
  v47 = v21;
  while (1)
  {
    if (v49)
    {
      swift_bridgeObjectRetain();
      v23 = (id)MEMORY[0x24264F148](v22, v20);
    }
    else
    {
      v24 = *(void **)(v43 + 8 * v22);
      swift_bridgeObjectRetain();
      v23 = v24;
    }
    v50 = v23;
    v25 = objc_msgSend(v23, sel_services, v43);
    v46 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    v26 = sub_23E5377F0();

    v51 = v22;
    if (v26 >> 62)
      break;
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27)
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRelease_n();
    v20 = v48;
    swift_bridgeObjectRelease();

    v22 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v22 == v47)
      goto LABEL_22;
  }
  swift_bridgeObjectRetain_n();
  v27 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_16;
LABEL_9:
  v20 = v26 & 0xC000000000000001;
  v28 = 4;
  while (1)
  {
    if (v20)
      v29 = (id)MEMORY[0x24264F148](v28 - 4, v26);
    else
      v29 = *(id *)(v26 + 8 * v28);
    v30 = v29;
    v31 = v28 - 3;
    if (__OFADD__(v28 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    v32 = objc_msgSend(v29, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v32) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v10, v53);

    if ((v32 & 1) != 0)
      break;
    ++v28;
    if (v31 == v27)
      goto LABEL_16;
  }
  v34 = v48;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v51 == v47)
    goto LABEL_22;
  if (v49)
  {
    v37 = (id)MEMORY[0x24264F148]();
LABEL_28:
    v38 = v37;
    v39 = objc_msgSend(v37, sel_services);
    v40 = sub_23E5377F0();

    MEMORY[0x24BDAC7A8](v41);
    v42 = v45;
    *(&v43 - 2) = (unint64_t)v45;
    v36 = sub_23E24D560(sub_23E2553E8, (uint64_t)(&v43 - 4), v40);
    swift_bridgeObjectRelease();
    v35 = v53;
    v33(v42, v53);

    if (v36)
      goto LABEL_29;
  }
  else
  {
    if ((v51 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v51 < *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v37 = *(id *)(v43 + 8 * v51);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.serviceGroup(for:)(uint64_t a1)
{
  sub_23E24E7D4(a1, (SEL *)&selRef_serviceGroups, &qword_254332C10, 0x24BDD7958, sub_23E2553E8);
}

void DataModel.mediaSystem(for:)(uint64_t a1)
{
  sub_23E24E7D4(a1, (SEL *)&selRef_mediaSystems, (unint64_t *)&qword_254332C08, 0x24BDD77D0, sub_23E2098DC);
}

void DataModel.user(for:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v40 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v14 = objc_msgSend(v2, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v15 = sub_23E5377F0();

  v48 = v5;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16(v13, a1, v4);
  v49 = v11;
  v17 = v11;
  v18 = v4;
  v16(v17, a1, v4);
  v42 = v13;
  if (v15 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v19 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_3;
LABEL_24:
    v35 = *(void (**)(char *, uint64_t))(v48 + 8);
    v35(v42, v18);
LABEL_31:
    swift_bridgeObjectRelease();
    v35(v49, v18);
    return;
  }
  v19 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_24;
LABEL_3:
  v20 = 0;
  v44 = v15;
  v45 = v15 & 0xC000000000000001;
  v41 = v15 + 32;
  v43 = v19;
  while (1)
  {
    v47 = v20;
    if (v45)
    {
      swift_bridgeObjectRetain();
      v21 = (id)MEMORY[0x24264F148](v20, v15);
    }
    else
    {
      v22 = *(void **)(v41 + 8 * v20);
      swift_bridgeObjectRetain();
      v21 = v22;
    }
    v23 = v21;
    v24 = objc_msgSend(v21, sel_users);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C30);
    v25 = sub_23E5377F0();

    v26 = objc_msgSend(v23, sel_currentUser);
    v51 = v25;
    swift_bridgeObjectRetain();
    v27 = v26;
    MEMORY[0x24264EA70]();
    if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23E537820();
    sub_23E53785C();
    sub_23E537808();
    v28 = v51;
    swift_bridgeObjectRelease();

    v46 = v23;
    if (v28 >> 62)
      break;
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_11;
LABEL_18:
    swift_bridgeObjectRelease_n();
    v15 = v44;
    swift_bridgeObjectRelease();

    v20 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v20 == v43)
      goto LABEL_24;
  }
  swift_bridgeObjectRetain_n();
  v29 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v29)
    goto LABEL_18;
LABEL_11:
  v15 = v28 & 0xC000000000000001;
  v30 = 4;
  while (1)
  {
    if (v15)
      v31 = (id)MEMORY[0x24264F148](v30 - 4, v28);
    else
      v31 = *(id *)(v28 + 8 * v30);
    v32 = v31;
    v33 = v30 - 3;
    if (__OFADD__(v30 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    v34 = objc_msgSend(v31, sel_uniqueIdentifier);
    sub_23E536F68();

    LOBYTE(v34) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v35 = *(void (**)(char *, uint64_t))(v48 + 8);
    v35(v8, v18);

    if ((v34 & 1) != 0)
      break;
    ++v30;
    if (v33 == v29)
      goto LABEL_18;
  }
  v36 = v44;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v47 == v43)
    goto LABEL_24;
  if (v45)
  {
    v37 = (id)MEMORY[0x24264F148]();
LABEL_30:
    v38 = v37;
    v50 = v37;
    v39 = (uint64_t)v42;
    sub_23E253450(&v50, (uint64_t)v42, &v51);
    v35((char *)v39, v18);

    if (v51)
      goto LABEL_31;
  }
  else
  {
    if ((v47 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v47 < *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v37 = *(id *)(v41 + 8 * v47);
      goto LABEL_30;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23E253450@<X0>(id *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD v13[5];
  unint64_t v14;

  v5 = *a1;
  v6 = objc_msgSend(*a1, sel_users);
  sub_23E1E335C(0, (unint64_t *)&qword_254332C30);
  v7 = sub_23E5377F0();

  v8 = objc_msgSend(v5, sel_currentUser);
  v14 = v7;
  swift_bridgeObjectRetain();
  v9 = v8;
  MEMORY[0x24264EA70]();
  if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23E537820();
  sub_23E53785C();
  sub_23E537808();
  swift_bridgeObjectRelease();

  MEMORY[0x24BDAC7A8](v10);
  v13[2] = a2;
  v11 = sub_23E24D560(sub_23E2553E8, (uint64_t)v13, v14);
  result = swift_bridgeObjectRelease();
  *a3 = v11;
  return result;
}

void DataModel.resident(for:)(uint64_t a1)
{
  sub_23E24E7D4(a1, (SEL *)&selRef_residentDevices, (unint64_t *)&qword_254332C18, 0x24BDD7928, sub_23E2553E8);
}

uint64_t sub_23E2535CC(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v7 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

id sub_23E253698(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F68();
  v10 = a1;
  v11 = (void *)a4(v9);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t DataModel.accessory(with:inHomeWithID:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v12;

  v1 = (void *)sub_23E536F44();
  v2 = objc_msgSend(v0, sel_homeFor_, v1);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v4 = sub_23E5377F0();

    if (v4 >> 62)
      goto LABEL_15;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_23E53803C())
    {
      v12 = v2;
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v2 = (id)(v6 - 3);
        if (__OFADD__(v6 - 4, 1))
          break;
        v9 = objc_msgSend(v7, sel_hdm_matterNodeID);
        if (v9)
        {
          v10 = v9;
          sub_23E5384D4();

        }
        ++v6;
        if (v2 == (id)v5)
        {

          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }

LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t DataModel.matterDevice(with:inHomeWithID:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v13;

  v1 = (void *)sub_23E536F44();
  v2 = objc_msgSend(v0, sel_homeFor_, v1);

  if (v2)
  {
    v13 = v2;
    v3 = objc_msgSend(v2, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v4 = sub_23E5377F0();

    if (v4 >> 62)
      goto LABEL_13;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; v5 = sub_23E53803C())
    {
      v6 = 4;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          break;
        v10 = objc_msgSend(v7, sel_hdm_matterNodeID);
        if (v10)
        {
          v11 = v10;
          sub_23E5384D4();

        }
        ++v6;
        if (v9 == v5)
          goto LABEL_14;
      }
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
    }
LABEL_14:
    swift_bridgeObjectRelease_n();

  }
  return 0;
}

uint64_t sub_23E253B14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id *v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  void **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a1[1];
  result = sub_23E53830C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      return sub_23E2543DC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v120 = result;
  v117 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v133 = MEMORY[0x24BEE4AF8];
    v128 = (void **)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        v111 = *v117;
        do
        {
          v112 = v11 - 2;
          if (v11 < 2)
            goto LABEL_145;
          if (!v111)
            goto LABEL_157;
          v113 = *(_QWORD *)&v8[16 * v112 + 32];
          v114 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_23E254A38((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1)
            break;
          if (v114 < v113)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_23E530CC8((uint64_t)v8);
          if (v112 >= *((_QWORD *)v8 + 2))
            goto LABEL_147;
          v115 = &v8[16 * v112 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v8 + 2);
          if (v11 > v116)
            goto LABEL_148;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((_QWORD *)v8 + 2) = v116 - 1;
          v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v133 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_23E537808();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v7 = sub_23E537844();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v133 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v118 = *a1 + 16;
  v119 = *a1 - 8;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v125 = v3;
  v129 = *a1;
  while (2)
  {
    v12 = v9 + 1;
    v124 = v9;
    if (v9 + 1 >= v3)
      goto LABEL_45;
    v121 = v8;
    v13 = *(void **)(v10 + 8 * v9);
    v14 = *(id *)(v10 + 8 * v12);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_name);
    v17 = sub_23E53755C();
    v19 = v18;

    v20 = objc_msgSend(v15, sel_name);
    v21 = sub_23E53755C();
    v23 = v22;

    if (v17 == v21 && v19 == v23)
      v126 = 0;
    else
      v126 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v12 = v9 + 2;
    v3 = v125;
    if (v9 + 2 >= v125)
      goto LABEL_36;
    v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      v130 = v12;
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v27;
      v30 = objc_msgSend(v28, sel_name);
      v31 = sub_23E53755C();
      v33 = v32;

      v34 = objc_msgSend(v29, sel_name);
      v35 = sub_23E53755C();
      v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if ((v126 & 1) != 0)
        {
          v8 = v121;
          v9 = v124;
          v3 = v125;
          v10 = v129;
          v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      v26 = sub_23E538354();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v126 ^ v26) & 1) != 0)
        break;
LABEL_25:
      v12 = v130 + 1;
      ++v25;
      v3 = v125;
      if (v125 == v130 + 1)
      {
        v12 = v125;
        goto LABEL_35;
      }
    }
    v3 = v125;
    v12 = v130;
LABEL_35:
    v9 = v124;
LABEL_36:
    v8 = v121;
    v10 = v129;
    if ((v126 & 1) != 0)
    {
LABEL_37:
      if (v12 < v9)
        goto LABEL_151;
      if (v9 < v12)
      {
        v39 = (uint64_t *)(v119 + 8 * v12);
        v40 = v12;
        v41 = v9;
        v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10)
              goto LABEL_156;
            v43 = *v42;
            *v42 = *v39;
            *v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3)
      goto LABEL_68;
    if (__OFSUB__(v12, v9))
      goto LABEL_149;
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_23E530794(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v63 = *((_QWORD *)v8 + 2);
      v62 = *((_QWORD *)v8 + 3);
      v11 = v63 + 1;
      if (v63 >= v62 >> 1)
        v8 = sub_23E530794((char *)(v62 > 1), v63 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v64 = v8 + 32;
      v65 = &v8[16 * v63 + 32];
      *(_QWORD *)v65 = v9;
      *((_QWORD *)v65 + 1) = v12;
      v132 = v12;
      if (!v63)
      {
        v11 = 1;
LABEL_14:
        v3 = v125;
        v9 = v132;
        if (v132 >= v125)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v66 = v11 - 1;
        if (v11 >= 4)
        {
          v71 = &v64[16 * v11];
          v72 = *((_QWORD *)v71 - 8);
          v73 = *((_QWORD *)v71 - 7);
          v77 = __OFSUB__(v73, v72);
          v74 = v73 - v72;
          if (v77)
            goto LABEL_133;
          v76 = *((_QWORD *)v71 - 6);
          v75 = *((_QWORD *)v71 - 5);
          v77 = __OFSUB__(v75, v76);
          v69 = v75 - v76;
          v70 = v77;
          if (v77)
            goto LABEL_134;
          v78 = v11 - 2;
          v79 = &v64[16 * v11 - 32];
          v81 = *(_QWORD *)v79;
          v80 = *((_QWORD *)v79 + 1);
          v77 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          if (v77)
            goto LABEL_136;
          v77 = __OFADD__(v69, v82);
          v83 = v69 + v82;
          if (v77)
            goto LABEL_139;
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            v103 = *(_QWORD *)v101;
            v102 = *((_QWORD *)v101 + 1);
            v77 = __OFSUB__(v102, v103);
            v104 = v102 - v103;
            if (v77)
              goto LABEL_143;
            v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v95 = *((_QWORD *)v8 + 4);
            v96 = *((_QWORD *)v8 + 5);
            v77 = __OFSUB__(v96, v95);
            v88 = v96 - v95;
            v89 = v77;
            goto LABEL_99;
          }
          v68 = *((_QWORD *)v8 + 4);
          v67 = *((_QWORD *)v8 + 5);
          v77 = __OFSUB__(v67, v68);
          v69 = v67 - v68;
          v70 = v77;
        }
        if ((v70 & 1) != 0)
          goto LABEL_135;
        v78 = v11 - 2;
        v84 = &v64[16 * v11 - 32];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v87 = __OFSUB__(v85, v86);
        v88 = v85 - v86;
        v89 = v87;
        if (v87)
          goto LABEL_138;
        v90 = &v64[16 * v66];
        v92 = *(_QWORD *)v90;
        v91 = *((_QWORD *)v90 + 1);
        v77 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v77)
          goto LABEL_141;
        if (__OFADD__(v88, v93))
          goto LABEL_142;
        if (v88 + v93 >= v69)
        {
          v94 = v69 < v93;
LABEL_105:
          if (v94)
            v66 = v78;
          goto LABEL_107;
        }
LABEL_99:
        if ((v89 & 1) != 0)
          goto LABEL_137;
        v97 = &v64[16 * v66];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v77 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v77)
          goto LABEL_140;
        if (v100 < v88)
          goto LABEL_14;
LABEL_107:
        v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10)
          goto LABEL_155;
        v106 = &v64[16 * v105];
        v107 = *(_QWORD *)v106;
        v108 = &v64[16 * v66];
        v109 = *((_QWORD *)v108 + 1);
        sub_23E254A38((void **)(v10 + 8 * *(_QWORD *)v106), (id *)(v10 + 8 * *(_QWORD *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1)
          goto LABEL_127;
        if (v109 < v107)
          goto LABEL_130;
        if (v66 > *((_QWORD *)v8 + 2))
          goto LABEL_131;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v64[16 * v105 + 8] = v109;
        v110 = *((_QWORD *)v8 + 2);
        if (v66 >= v110)
          goto LABEL_132;
        v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((_QWORD *)v8 + 2) = v110 - 1;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v9, v120))
    goto LABEL_152;
  if (v9 + v120 >= v3)
    v44 = v3;
  else
    v44 = v9 + v120;
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      v123 = v44;
      v45 = v119 + 8 * v12;
      do
      {
        v47 = *(void **)(v10 + 8 * v12);
        v127 = v45;
        v131 = v12;
        while (1)
        {
          v48 = *(void **)v45;
          v49 = v47;
          v50 = v48;
          v51 = objc_msgSend(v49, sel_name);
          v52 = sub_23E53755C();
          v54 = v53;

          v55 = objc_msgSend(v50, sel_name);
          v56 = sub_23E53755C();
          v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            v10 = v129;
            v46 = v131;
            goto LABEL_56;
          }
          v60 = sub_23E538354();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v129;
          if ((v60 & 1) == 0)
            break;
          if (!v129)
            goto LABEL_154;
          v61 = *(void **)v45;
          v47 = *(void **)(v45 + 8);
          *(_QWORD *)v45 = v47;
          *(_QWORD *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          v46 = v131;
          if (v131 == v9)
            goto LABEL_56;
        }
        v46 = v131;
LABEL_56:
        v12 = v46 + 1;
        v45 = v127 + 8;
        v9 = v124;
      }
      while (v12 != v123);
      v12 = v123;
      v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E2543DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v25 + 8 * a3);
    v7 = v23;
    v24 = v4;
    v26 = a3;
    while (1)
    {
      v8 = *(void **)v4;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_name);
      v12 = sub_23E53755C();
      v14 = v13;

      v15 = objc_msgSend(v10, sel_name);
      v16 = sub_23E53755C();
      v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        result = swift_bridgeObjectRelease_n();
        v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        v4 = v24 + 8;
        if (a3 == a2)
          return result;
        goto LABEL_6;
      }
      v20 = sub_23E538354();

      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v26;
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v25)
        break;
      v21 = *(void **)v4;
      v6 = *(void **)(v4 + 8);
      *(_QWORD *)v4 = v6;
      *(_QWORD *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E25455C(void **__src, id *a2, unint64_t a3, void **__dst)
{
  void **v4;
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  char **v14;
  void *v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  id *v19;
  void **v20;
  void **v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  void **v32;
  void **v33;
  char **v34;
  id *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  unsigned int v41;
  unsigned __int8 v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  uint64_t result;
  void **v53;
  void **v54;
  uint64_t v55;
  void **v56;
  id *v57;
  void **v59;
  id *v60;
  id *v61;
  void **v62;
  void **v63;
  id *v64;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v64 = __src;
  v63 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_61;
    if (__dst != a2 || &a2[v12] <= __dst)
      memmove(__dst, a2, 8 * v12);
    v32 = &v4[v12];
    v62 = v32;
    v64 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_60:
      sub_23E5308A4(&v64, &v63, &v62);
      return 1;
    }
    v33 = (void **)(a3 - 8);
    v34 = &selRef_homeManager_didAddHome_;
    v35 = v5;
    v53 = v6;
    v54 = v4;
    while (1)
    {
      v59 = v32;
      v61 = v5;
      v57 = v33 + 1;
      v37 = *--v32;
      v36 = v37;
      v38 = *--v35;
      v39 = v36;
      v40 = v38;
      v41 = objc_msgSend(v39, v34[63]);
      if (v41 == objc_msgSend(v40, v34[63]))
      {
        v43 = objc_msgSend(v39, sel_name);
        v44 = sub_23E53755C();
        v55 = v45;

        v46 = objc_msgSend(v40, sel_name);
        v47 = sub_23E53755C();
        v49 = v48;

        if (v44 == v47 && v55 == v49)
        {

          swift_bridgeObjectRelease_n();
          v6 = v53;
          v4 = v54;
          v34 = &selRef_homeManager_didAddHome_;
        }
        else
        {
          v51 = sub_23E538354();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v53;
          v4 = v54;
          v34 = &selRef_homeManager_didAddHome_;
          if ((v51 & 1) != 0)
          {
LABEL_47:
            v32 = v59;
            if (v57 != v61 || v33 >= v61)
              *v33 = *v35;
            v64 = v35;
            goto LABEL_56;
          }
        }
      }
      else
      {
        v42 = objc_msgSend(v39, v34[63]);

        if ((v42 & 1) != 0)
          goto LABEL_47;
      }
      v62 = v32;
      v35 = v61;
      if (v57 < v59 || v33 >= v59 || v57 != v59)
        *v33 = *v32;
LABEL_56:
      if (v35 > v6)
      {
        --v33;
        v5 = v35;
        if (v32 > v4)
          continue;
      }
      goto LABEL_60;
    }
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
      memmove(__dst, __src, 8 * v9);
    v13 = &v4[v9];
    v62 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = &selRef_homeManager_didAddHome_;
      v56 = v13;
      while (1)
      {
        v15 = *v4;
        v16 = *v5;
        v17 = v15;
        LODWORD(v15) = objc_msgSend(v16, v14[63]);
        if ((_DWORD)v15 == objc_msgSend(v17, v14[63]))
        {
          v60 = v5;
          v20 = v6;
          v21 = v4;
          v22 = objc_msgSend(v16, sel_name);
          v23 = sub_23E53755C();
          v25 = v24;

          v26 = objc_msgSend(v17, sel_name);
          v27 = sub_23E53755C();
          v29 = v28;

          if (v23 == v27 && v25 == v29)
          {

            swift_bridgeObjectRelease_n();
            v4 = v21;
            v6 = v20;
            v5 = v60;
            v13 = v56;
            v14 = &selRef_homeManager_didAddHome_;
            if (v6 == v4)
              goto LABEL_17;
LABEL_16:
            *v6 = *v4;
            goto LABEL_17;
          }
          v31 = sub_23E538354();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = v21;
          v6 = v20;
          v5 = v60;
          v13 = v56;
          v14 = &selRef_homeManager_didAddHome_;
          if ((v31 & 1) != 0)
          {
LABEL_23:
            v19 = v5 + 1;
            if (v6 < v5 || v6 >= v19 || v6 != v5)
              *v6 = *v5;
            goto LABEL_27;
          }
        }
        else
        {
          v18 = objc_msgSend(v16, v14[63]);

          if ((v18 & 1) != 0)
            goto LABEL_23;
        }
        if (v6 != v4)
          goto LABEL_16;
LABEL_17:
        v63 = ++v4;
        v19 = v5;
LABEL_27:
        ++v6;
        if (v4 < v13)
        {
          v5 = v19;
          if ((unint64_t)v19 < a3)
            continue;
        }
        v64 = v6;
        goto LABEL_60;
      }
    }
    goto LABEL_60;
  }
LABEL_61:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E254A38(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  id *v28;
  void **v29;
  id *v30;
  void **v31;
  id *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  id *v48;
  unint64_t v49;
  uint64_t result;
  void **v51;
  id *v52;
  void **v53;
  id *v54;
  void **v55;
  id *v56;
  id *v57;
  id *v58;
  void **v59;
  void **v60;
  id *v61;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v61 = __src;
  v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_53;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v51 = v4;
    v31 = &v4[v13];
    v59 = v31;
    v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_23E5308A4(&v61, &v60, &v59);
      return 1;
    }
    v32 = v6;
    v56 = v7;
    while (1)
    {
      v52 = v31;
      v54 = v6;
      v58 = v5;
      v34 = *--v31;
      v33 = v34;
      v35 = *--v32;
      v36 = v33;
      v37 = v35;
      v38 = objc_msgSend(v36, sel_name);
      v39 = sub_23E53755C();
      v41 = v40;

      v42 = objc_msgSend(v37, sel_name);
      v43 = sub_23E53755C();
      v45 = v44;

      if (v39 == v43 && v41 == v45)
        break;
      v47 = sub_23E538354();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v58;
      v5 = v58 - 1;
      if ((v47 & 1) == 0)
        goto LABEL_46;
      v49 = (unint64_t)v56;
      v31 = v52;
      if (v58 != v54 || v5 >= v54)
        *v5 = *v32;
      v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        v6 = v32;
        if (v31 > v51)
          continue;
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    v48 = v58;
    v5 = v58 - 1;
LABEL_46:
    v32 = v54;
    v49 = (unint64_t)v56;
    v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52)
      *v5 = *v31;
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v53 = &v4[v10];
    v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      v57 = v5;
      while (1)
      {
        v55 = v7;
        v14 = v6;
        v15 = *v4;
        v16 = *v6;
        v17 = v15;
        v18 = objc_msgSend(v16, sel_name);
        v19 = sub_23E53755C();
        v21 = v20;

        v22 = objc_msgSend(v17, sel_name);
        v23 = sub_23E53755C();
        v25 = v24;

        if (v19 == v23 && v21 == v25)
          break;
        v27 = sub_23E538354();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
          goto LABEL_23;
        v28 = v14 + 1;
        v29 = v55;
        v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14)
          *v55 = *v14;
LABEL_26:
        v7 = v29 + 1;
        if (v4 < v53)
        {
          v6 = v28;
          if (v28 < v30)
            continue;
        }
        v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      v29 = v55;
      v30 = v57;
      if (v55 != v4)
        *v55 = *v4;
      v60 = ++v4;
      v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t (*sub_23E254E4C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23E254ECC(v6, a2, a3);
  return sub_23E202698;
}

void sub_23E254EA0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_23E254ECC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24264F148](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for CameraClipsInternalPreferences;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E254F38(id *a1)
{
  uint64_t v1;

  return sub_23E24D8F4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t _s13HomeDataModel0bC0C11accessories3for2inSaySo11HMAccessoryCGAA11ServiceKindO_So6HMHomeCtF_0(int a1, id a2)
{
  id v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;

  v2 = objc_msgSend(a2, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v3 = sub_23E5377F0();

  v32 = MEMORY[0x24BEE4AF8];
  if (v3 >> 62)
    goto LABEL_31;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    v29 = v4;
    v30 = v3 & 0xC000000000000001;
    v27 = v3 & 0xFFFFFFFFFFFFFF8;
    v28 = v3;
    v26 = v3 + 32;
    while (1)
    {
      if (v30)
      {
        v6 = (id)MEMORY[0x24264F148](v5, v28);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v27 + 16))
          goto LABEL_30;
        v6 = *(id *)(v26 + 8 * v5);
      }
      v3 = (unint64_t)v6;
      if (__OFADD__(v5++, 1))
        break;
      v8 = objc_msgSend(v6, sel_services);
      sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v9 = sub_23E5377F0();

      v31 = (void *)v3;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        v10 = sub_23E53803C();
        if (v10)
        {
LABEL_13:
          v11 = 4;
          while (1)
          {
            v12 = (v9 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x24264F148](v11 - 4, v9)
                : *(id *)(v9 + 8 * v11);
            v13 = v12;
            v3 = v11 - 3;
            if (__OFADD__(v11 - 4, 1))
              break;
            v14 = objc_msgSend(v12, sel_serviceType);
            v15 = sub_23E53755C();
            v17 = v16;

            v18._countAndFlagsBits = v15;
            v18._object = v17;
            LOBYTE(v19) = ServiceKind.init(rawValue:)(v18);
            v20 = ServiceKind.rawValue.getter(v19);
            v22 = v21;
            if (v20 == ServiceKind.rawValue.getter(v20) && v22 == v23)
            {
              swift_bridgeObjectRelease_n();
LABEL_24:

              swift_bridgeObjectRelease_n();
              sub_23E537F1C();
              sub_23E537F4C();
              sub_23E537F58();
              sub_23E537F28();
              goto LABEL_5;
            }
            v24 = sub_23E538354();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_24;

            ++v11;
            if (v3 == v10)
              goto LABEL_4;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v10)
          goto LABEL_13;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v5 == v29)
      {
        swift_bridgeObjectRelease();
        return v32;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    v4 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E2552BC(unint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_23E53803C())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v11 = a2;
      v9 = _s13HomeDataModel0bC0C11accessories3for2inSaySo11HMAccessoryCGAA11ServiceKindO_So6HMHomeCtF_0((int)&v11, v6);

      sub_23E2593EC(v9);
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E2553E8(id *a1)
{
  return sub_23E2098DC(a1) & 1;
}

uint64_t sub_23E255400(id *a1)
{
  return sub_23E254F38(a1) & 1;
}

id sub_23E255418(id result, id a2, void *a3, char a4)
{
  id v4;
  id v5;

  v4 = a2;
  if (!a4)
  {
    result = a2;
    v4 = a3;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
LABEL_5:
    v5 = result;
    return v4;
  }
  return result;
}

void _s6UpdateOwxx(uint64_t a1)
{
  sub_23E255474(*(id *)a1, *(id *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_23E255474(id a1, id a2, void *a3, char a4)
{
  id v4;

  v4 = a2;
  if (!a4)
  {
    a1 = a2;
    v4 = a3;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
LABEL_5:

  }
}

uint64_t _s6UpdateOwcp(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E255418(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s6UpdateOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E255418(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23E255474(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s6UpdateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23E255474(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LightbulbColor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LightbulbColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E255674(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23E25568C(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s6UpdateOMa()
{
  return &_s6UpdateON;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MatterAttributeDataBuilder(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterAttributeDataBuilder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E255758(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23E255760(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MatterAttributeDataBuilder()
{
  return &type metadata for MatterAttributeDataBuilder;
}

unint64_t sub_23E255778(uint64_t a1, char a2)
{
  uint64_t inited;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;

  if (a2)
  {
    if (a2 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23E53B510;
      v3 = sub_23E53755C();
      v4 = (void **)MEMORY[0x24BDDB4F0];
      *(_QWORD *)(inited + 32) = v3;
      *(_QWORD *)(inited + 40) = v5;
      v6 = *v4;
      *(_QWORD *)(inited + 48) = *v4;
      *(_QWORD *)(inited + 56) = sub_23E53755C();
      *(_QWORD *)(inited + 64) = v7;
      v8 = v6;
      v9 = sub_23E537A60();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA18);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23E53B510;
      v16 = sub_23E53755C();
      v17 = (void **)MEMORY[0x24BDDB510];
      *(_QWORD *)(inited + 32) = v16;
      *(_QWORD *)(inited + 40) = v18;
      v19 = *v17;
      *(_QWORD *)(inited + 48) = *v17;
      *(_QWORD *)(inited + 56) = sub_23E53755C();
      *(_QWORD *)(inited + 64) = v20;
      v21 = v19;
      v9 = sub_23E537CE8();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    v10 = sub_23E53755C();
    v11 = (void **)MEMORY[0x24BDDB468];
    *(_QWORD *)(inited + 32) = v10;
    *(_QWORD *)(inited + 40) = v12;
    v13 = *v11;
    *(_QWORD *)(inited + 48) = *v11;
    *(_QWORD *)(inited + 56) = sub_23E53755C();
    *(_QWORD *)(inited + 64) = v14;
    v15 = v13;
    v9 = sub_23E5378A4();
  }
  *(_QWORD *)(inited + 72) = v9;
  return sub_23E20D7EC(inited);
}

uint64_t sub_23E2558FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E25591C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(uint64_t **)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 120);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v22 = v7;
    v23 = 0xD00000000000001ALL;
    v8 = *v4;
    v24 = 0x800000023E563140;
    v25[0] = v8;
    *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v4 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v20, v5, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 136);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E255DA4;
    v11 = v9;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_23E267484;
    *(_QWORD *)(v0 + 104) = &block_descriptor_2;
    objc_msgSend(v11, sel_moveWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v10, 0, 0, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_23E537190();
    v14 = sub_23E537B08();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(uint64_t **)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 128);
      v21 = *(_QWORD *)(v0 + 120);
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v22 = v18;
      v23 = 0xD00000000000001ALL;
      v19 = *v15;
      v24 = 0x800000023E563140;
      v25[0] = v19;
      *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v15 + 7);
      ClusterPath.description.getter();
      sub_23E537628();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v23, v24, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v21, v16, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v13, v14, "%s: tried running command %s but cluster was nil", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v18, -1, -1);
      MEMORY[0x24264FEBC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E255DA4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E255E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E255E24()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(uint64_t **)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 120);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v22 = v7;
    v23 = 0xD00000000000001ALL;
    v8 = *v4;
    v24 = 0x800000023E563140;
    v25[0] = v8;
    *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v4 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v20, v5, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 136);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E255DA4;
    v11 = v9;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_23E267484;
    *(_QWORD *)(v0 + 104) = &block_descriptor_1;
    objc_msgSend(v11, sel_stepWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v10, 0, 0, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_23E537190();
    v14 = sub_23E537B08();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(uint64_t **)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 128);
      v21 = *(_QWORD *)(v0 + 120);
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v22 = v18;
      v23 = 0xD00000000000001ALL;
      v19 = *v15;
      v24 = 0x800000023E563140;
      v25[0] = v19;
      *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v15 + 7);
      ClusterPath.description.getter();
      sub_23E537628();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v23, v24, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v21, v16, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v13, v14, "%s: tried running command %s but cluster was nil", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v18, -1, -1);
      MEMORY[0x24264FEBC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E2562AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2562CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(uint64_t **)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 120);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315394;
    v22 = v7;
    v23 = 0xD00000000000001ALL;
    v8 = *v4;
    v24 = 0x800000023E563140;
    v25[0] = v8;
    *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v4 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v20, v5, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v7, -1, -1);
    MEMORY[0x24264FEBC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(void **)(v0 + 136);
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 152);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E256754;
    v11 = v9;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_23E267484;
    *(_QWORD *)(v0 + 104) = &block_descriptor_0;
    objc_msgSend(v11, sel_stopWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v10, 0, 0, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_23E537190();
    v14 = sub_23E537B08();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(uint64_t **)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 128);
      v21 = *(_QWORD *)(v0 + 120);
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_DWORD *)v17 = 136315394;
      v22 = v18;
      v23 = 0xD00000000000001ALL;
      v19 = *v15;
      v24 = 0x800000023E563140;
      v25[0] = v19;
      *(_DWORD *)((char *)v25 + 7) = *(_DWORD *)((char *)v15 + 7);
      ClusterPath.description.getter();
      sub_23E537628();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v23, v24, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_23E1FD768(v21, v16, &v22);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v13, v14, "%s: tried running command %s but cluster was nil", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v18, -1, -1);
      MEMORY[0x24264FEBC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E256754()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2567B4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v10;
  void *v11;
  uint64_t v12[3];
  _QWORD v13[2];

  swift_bridgeObjectRetain_n();
  v1 = sub_23E537190();
  v2 = sub_23E537B20();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(uint64_t **)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 120);
    v11 = *(void **)(v0 + 136);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315394;
    v12[0] = v6;
    v12[1] = 0xD00000000000001ALL;
    v7 = *v3;
    v12[2] = 0x800000023E563140;
    v13[0] = v7;
    *(_DWORD *)((char *)v13 + 7) = *(_DWORD *)((char *)v3 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v10, v4, v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v6, -1, -1);
    MEMORY[0x24264FEBC](v5, -1, -1);

  }
  else
  {
    v8 = *(void **)(v0 + 136);
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2569B0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19[3];
  _QWORD v20[3];

  v1 = *(void **)(v0 + 168);
  swift_willThrow();
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 168);
    v7 = *(uint64_t **)(v0 + 144);
    v18 = *(void **)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 120);
    v9 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315650;
    v19[0] = v17;
    v19[1] = 0xD00000000000001ALL;
    v10 = *v7;
    v19[2] = 0x800000023E563140;
    v20[0] = v10;
    *(_DWORD *)((char *)v20 + 7) = *(_DWORD *)((char *)v7 + 7);
    ClusterPath.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(0xD00000000000001ALL, 0x800000023E563140, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 80) = sub_23E1FD768(v15, v8, v19);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v12;
    sub_23E537CF4();
    *v16 = v12;

    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v17, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);

  }
  else
  {
    v13 = *(void **)(v0 + 168);

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_23E256C94(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  uint64_t v11;
  id v13;
  void *v14;

  v14 = a1;
  v7 = a1;
  if (a4 >> 62)
    goto LABEL_13;
  v8 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_23E53803C())
  {
    for (i = 4; ; ++i)
    {
      v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](i - 4, a4) : *(id *)(a4 + 8 * i);
      v7 = v10;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23E256DC8(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  void (*v28)(uint64_t *, char *);
  uint64_t v29;

  v28 = a2;
  v7 = type metadata accessor for StaticAccessory(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v29 = a1;
  v14 = *(_QWORD *)(a4 + 56);
  v26 = a4 + 56;
  v15 = 1 << *(_BYTE *)(a4 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v27 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (v17)
  {
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v19 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a4 + 48) + *(_QWORD *)(v8 + 72) * v21, (uint64_t)v13, type metadata accessor for StaticAccessory);
    sub_23E1E2FDC((uint64_t)v13, (uint64_t)v11, type metadata accessor for StaticAccessory);
    v28(&v29, v11);
    result = sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticAccessory);
    if (v4)
      return swift_release();
  }
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v19 >= v27)
    goto LABEL_25;
  v23 = *(_QWORD *)(v26 + 8 * v19);
  if (v23)
  {
LABEL_19:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_5;
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v27)
    goto LABEL_25;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v19 + 2;
  if (v19 + 2 >= v27)
    goto LABEL_25;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v19 + 3;
  if (v19 + 3 >= v27)
    goto LABEL_25;
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v19 + 4;
  if (v19 + 4 >= v27)
  {
LABEL_25:
    swift_release();
    return v29;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_18:
    v19 = v24;
    goto LABEL_19;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v27)
      goto LABEL_25;
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_19;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E257020(uint64_t a1, void (*a2)(uint64_t *, __int16 *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    v20 = *(_WORD *)(*(_QWORD *)(a4 + 48) + 2 * i);
    v21 = v19;
    swift_bridgeObjectRetain();
    a2(&v22, &v20);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E2571E4(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  char v20[8];
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    v20[0] = *(_BYTE *)(*(_QWORD *)(a4 + 48) + i);
    v21 = v19;
    swift_bridgeObjectRetain();
    a2(&v22, v20);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23E2573A8(uint64_t a1, void (*a2)(uint64_t *, _QWORD *), uint64_t a3, uint64_t a4)
{
  sub_23E1E5DEC(a1, a2, a3, a4, (unint64_t *)&qword_254333358, 0x24BDD75B8, (unint64_t *)&qword_256D44E20);
}

uint64_t sub_23E2573D4(uint64_t a1, void (*a2)(uint64_t *, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v20 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * i);
    sub_23E1EA57C(*(_QWORD *)(a4 + 56) + 32 * i, (uint64_t)v23 + 8);
    *(_QWORD *)&v23[0] = v18;
    v21[0] = v23[0];
    v21[1] = v23[1];
    v22 = v24;
    v19 = v18;
    a2(&v25, v21);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_23E1E7C64((uint64_t)v21, &qword_256D3FF28);
      return swift_release();
    }
    result = sub_23E1E7C64((uint64_t)v21, &qword_256D3FF28);
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v20)
      goto LABEL_26;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v10 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v20)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v20)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v20)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v20)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v20)
      goto LABEL_26;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t LightsCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t LightsCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LightsCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LightsCategoryInformation()
{
  uint64_t result;

  result = qword_256D3FED0;
  if (!qword_256D3FED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LightsCategoryInformation.summary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LightsCategoryInformation() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LightsCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.activeStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.nonResponsiveStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.allRelevantStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

void LightsCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E257790
     + 4
     * byte_23E53C790[*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for LightsCategoryInformation() + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E257790()
{
  __int128 *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + v2[6] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v3 = *(_QWORD *)(v1 + v2[7]);
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 + v2[8]);
  swift_bridgeObjectRetain();
  sub_23E2409CC(v0, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + v2[9]);
  swift_bridgeObjectRetain();
  sub_23E2409CC(v0, v5);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v1 + v2[10]);
  swift_bridgeObjectRetain();
  sub_23E2409CC(v0, v6);
  return swift_bridgeObjectRelease();
}

uint64_t LightsCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E257930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_23E257954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LightsCategoryInformation.shortSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for LightsCategoryInformation();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E25C4C0(v1);
  v10 = v0;
  v3 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E25CCF0, (uint64_t)v9, v2);
  swift_release();
  if (!v3)
    return 0;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E25C4C0(v4);
  MEMORY[0x24BDAC7A8](v5);
  v8[2] = v0;
  v6 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E2605E0, (uint64_t)v8, v5);
  swift_release();
  v11 = v6;
  return sub_23E538318();
}

uint64_t sub_23E257A88()
{
  return swift_bridgeObjectRetain();
}

_QWORD *LightsCategoryInformation.statusItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14[2];
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _UNKNOWN **v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE38);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LightsCategoryInformation();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_23E25C4C0(v3);
  v16 = xmmword_23E539650;
  sub_23E512E74(v4, (uint64_t)v2);
  v5 = type metadata accessor for LightsStatusItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v2, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_256D3FE38);
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
  }
  else
  {
    *((_QWORD *)&v18 + 1) = v5;
    v19 = &off_250EF4F18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
    sub_23E1E2FDC((uint64_t)v2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for LightsStatusItem);
  }
  sub_23E1E7C20((uint64_t)&v17, (uint64_t)v15, &qword_256D3FE40);
  sub_23E25CD18((uint64_t)v15, (uint64_t)&v12);
  if (v13)
  {
    sub_23E1E6C84(&v12, (uint64_t)v14);
    sub_23E1E6C84(v14, (uint64_t)&v12);
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_23E51F32C(0, v7[2] + 1, 1, v7);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_23E51F32C((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    sub_23E1E6C84(&v12, (uint64_t)&v7[5 * v9 + 4]);
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v12, &qword_256D3FE40);
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  swift_arrayDestroy();
  return v7;
}

uint64_t sub_23E257CA8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5;

  v5 = *a2;
  return LightsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t LightsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[6];

  v32 = a4;
  v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for LightsCategoryInformation();
  v31 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  sub_23E1E2F50(a1, (uint64_t)v15, type metadata accessor for StateSnapshot);
  v15[v13[5]] = 1;
  sub_23E1E7C20(a3, (uint64_t)v12, &qword_256D3FE48);
  v17 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v12, &qword_256D3FE48);
    sub_23E1E2F50(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
  }
  else
  {
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E4FBE2C(v18);
    sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticRoom);
    sub_23E1E2F50(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
    if (v19)
      goto LABEL_5;
  }
  v20 = swift_bridgeObjectRetain();
  v19 = sub_23E4FBE2C(v20);
LABEL_5:
  sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StateSnapshot);
  v21 = swift_bridgeObjectRetain();
  v22 = sub_23E25C61C(v21, v16);
  *(_QWORD *)&v15[v13[7]] = v22;
  if (*(_QWORD *)(v22 + 16))
  {
    sub_23E310444(v19, v33);
    v23 = v33[0];
    v24 = v33[1];
    v25 = v33[2];
    v26 = v33[3];
    v27 = v33[4];
    swift_bridgeObjectRelease();
    sub_23E1E7C64(a3, &qword_256D3FE48);
    sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
    *(_QWORD *)&v15[v13[8]] = v23;
    *(_QWORD *)&v15[v13[9]] = v24;
    *(_QWORD *)&v15[v13[10]] = v25;
    v28 = (uint64_t *)&v15[v13[6]];
    *v28 = v26;
    v28[1] = v27;
    v29 = v32;
    sub_23E1E2F50((uint64_t)v15, v32, (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v31 + 56))(v29, 0, 1, v13);
    return sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23E1E7C64(a3, &qword_256D3FE48);
    sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
    sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StateSnapshot);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v31 + 56))(v32, 1, 1, v13);
  }
}

uint64_t LightsCategoryInformation.contextMenuLabelsAndActions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  __objc2_meth_list *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = type metadata accessor for LightsCategoryInformation();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BEE4AF8];
  v6 = *(int *)(v4 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + v6) + 16);
  v8 = &OBJC_CATEGORY_INSTANCE_METHODS_MTRDevice___HomeDataModelExtensions;
  if (!v7)
  {
    v10 = *(_QWORD *)(v0 + *(int *)(v1 + 40));
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  v27 = 0x66664F206E727554;
  v28 = 0xE900000000000020;
  v26 = v7;
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  static String.hfLocalized(_:)();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v11 = v27;
  v12 = v28;
  sub_23E1E2F50(v0, (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
  v13 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v14 = swift_allocObject();
  sub_23E1E2FDC((uint64_t)v5, v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23E25D194;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = sub_23E2605DC;
  *(_QWORD *)(inited + 56) = v15;
  sub_23E259430(inited);
  v10 = *(_QWORD *)(v0 + *(int *)(v1 + 40));
  if (*(_QWORD *)(*(_QWORD *)(v0 + v6) + 16) <= *(_QWORD *)(v10 + 16) >> 3)
  {
    v8 = &OBJC_CATEGORY_INSTANCE_METHODS_MTRDevice___HomeDataModelExtensions;
LABEL_8:
    v27 = v10;
    swift_bridgeObjectRetain();
    v19 = swift_bridgeObjectRetain();
    sub_23E25B62C(v19);
    swift_bridgeObjectRelease();
    v17 = v27;
    v18 = *(_QWORD *)(v27 + 16);
    if (!v18)
      goto LABEL_6;
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE50);
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = *(_OWORD *)&v8[202].entrysize;
    v27 = 0x206E4F206E727554;
    v28 = 0xE800000000000000;
    v26 = v18;
    sub_23E538318();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    static String.hfLocalized(_:)();
    sub_23E537628();
    swift_bridgeObjectRelease();
    v21 = v27;
    v22 = v28;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v17;
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = sub_23E25CD84;
    *(_QWORD *)(v24 + 24) = v23;
    *(_QWORD *)(v20 + 32) = v21;
    *(_QWORD *)(v20 + 40) = v22;
    *(_QWORD *)(v20 + 48) = sub_23E25CD8C;
    *(_QWORD *)(v20 + 56) = v24;
    sub_23E259430(v20);
    return v29;
  }
  swift_bridgeObjectRetain();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_23E25BA54(v16, v10);
  swift_bridgeObjectRelease();
  v8 = &OBJC_CATEGORY_INSTANCE_METHODS_MTRDevice___HomeDataModelExtensions;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
    goto LABEL_9;
LABEL_6:
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_23E2583CC()
{
  __int128 v1[4];

  sub_23E53845C();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E25840C()
{
  __int128 v1[4];

  sub_23E53845C();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E258444@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_23E258454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for LightsCategoryInformation();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_23E1E2F50(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  sub_23E1E2FDC((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
  sub_23E26D014((uint64_t)v7, (uint64_t)&unk_256D3FF40, v10);
  return swift_release();
}

uint64_t sub_23E25857C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_23E258594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[3];
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for LightsCategoryInformation() + 32));
  v3 = swift_task_alloc();
  v0[4] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_23E258638;
  return sub_23E537F04();
}

uint64_t sub_23E258638()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E258688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v4 = *(_QWORD *)(type metadata accessor for StaticService() - 8);
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E258738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 56);
  v32 = v1 + 56;
  v34 = *(_QWORD *)(v0 + 104);
  v35 = v1;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v33 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v36 = (v5 - 1) & v5;
      v37 = v7;
      v10 = __clz(__rbit64(v5)) | (v7 << 6);
      goto LABEL_21;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v33)
      goto LABEL_29;
    v12 = *(_QWORD *)(v32 + 8 * v11);
    v13 = v7 + 1;
    if (!v12)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v33)
        goto LABEL_29;
      v12 = *(_QWORD *)(v32 + 8 * v13);
      if (!v12)
      {
        v13 = v7 + 3;
        if (v7 + 3 >= v33)
          goto LABEL_29;
        v12 = *(_QWORD *)(v32 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v36 = (v12 - 1) & v12;
    v37 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_21:
    v15 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 96);
    sub_23E1E2F50(*(_QWORD *)(v35 + 48) + *(_QWORD *)(v34 + 72) * v10, v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC(v16, v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E537904();
    v20 = sub_23E537934();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
    sub_23E1E2F50(v15, v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v22 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    sub_23E1E2FDC(v17, v23 + v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C20(v19, v18, &qword_254334B40);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    v25 = *(_QWORD *)(v0 + 88);
    if (v24 == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 88), &qword_254334B40);
    }
    else
    {
      sub_23E537928();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    v5 = v36;
    v7 = v37;
    if (*(_QWORD *)(v23 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v26 = sub_23E5378B0();
      v28 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    v29 = **(_QWORD **)(v0 + 72);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = &unk_256D3FF60;
    *(_QWORD *)(v30 + 24) = v23;
    v31 = v28 | v26;
    if (v28 | v26)
    {
      v31 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v26;
      *(_QWORD *)(v0 + 40) = v28;
    }
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 96);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v31;
    *(_QWORD *)(v0 + 64) = v29;
    swift_task_create();
    swift_release();
    sub_23E1E7C64(v9, &qword_254334B40);
    result = sub_23E1E2FA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v14 = v7 + 4;
  if (v7 + 4 >= v33)
  {
LABEL_29:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v32 + 8 * v14);
  if (v12)
  {
    v13 = v7 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      goto LABEL_29;
    v12 = *(_QWORD *)(v32 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E258B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 160) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E258B80()
{
  uint64_t v0;
  uint64_t inited;
  unint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v0 + 88) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_BYTE *)(inited + 32) = 105;
  sub_23E1EA57C(v0 + 88, inited + 40);
  v2 = sub_23E20D564(inited);
  *(_QWORD *)(v0 + 152) = 2;
  *(_OWORD *)(v0 + 120) = xmmword_23E53C8E0;
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v3;
  *v3 = v0;
  v3[1] = sub_23E258C68;
  return StaticService.set(for:options:context:)(*(_QWORD *)(v0 + 168), v2, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
}

uint64_t sub_23E258C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)v0 + 88;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E1E7C64(v2, &qword_254334340);
  __swift_destroy_boxed_opaque_existential_0(v1);
  return swift_task_switch();
}

uint64_t sub_23E258CEC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E258D1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E537904();
  v5 = sub_23E537934();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  swift_bridgeObjectRetain();
  sub_23E2ABA00((uint64_t)v4, (uint64_t)&unk_256D3FF80, (uint64_t)v6);
  swift_release();
  return sub_23E1E7C64((uint64_t)v4, &qword_254334B40);
}

uint64_t sub_23E258DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[20] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v4[21] = swift_task_alloc();
  v4[22] = *(_QWORD *)(type metadata accessor for StaticService() - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E258E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 232) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 56);
  v7 = (_QWORD *)swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = 0;
    v9 = __clz(__rbit64(v6));
    v10 = (v6 - 1) & v6;
LABEL_5:
    *(_QWORD *)(v0 + 200) = v8;
    *(_QWORD *)(v0 + 208) = v10;
    v12 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 192);
    sub_23E1E2F50(v7[6] + *(_QWORD *)(v1 + 72) * v9, v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v0 + 88) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E539650;
    *(_BYTE *)(inited + 32) = 105;
    sub_23E1EA57C(v0 + 88, inited + 40);
    v14 = sub_23E20D564(inited);
    *(_QWORD *)(v0 + 152) = 2;
    *(_OWORD *)(v0 + 120) = xmmword_23E53C8E0;
    *(_QWORD *)(v0 + 216) = v14;
    *(_QWORD *)(v0 + 136) = 0;
    *(_QWORD *)(v0 + 144) = 0;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v15;
    *v15 = v0;
    v15[1] = sub_23E2590EC;
    return StaticService.set(for:options:context:)(*(_QWORD *)(v0 + 168), v14, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
  }
  v17 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    v18 = v7[8];
    if (v18)
    {
      v8 = 1;
LABEL_9:
      v10 = (v18 - 1) & v18;
      v9 = __clz(__rbit64(v18)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v17 >= 0xC0)
    {
      v18 = v7[9];
      if (v18)
      {
        v8 = 2;
        goto LABEL_9;
      }
      if (v17 >= 0x100)
      {
        v18 = v7[10];
        if (v18)
        {
          v8 = 3;
          goto LABEL_9;
        }
        if (v17 >= 0x140)
        {
          v18 = v7[11];
          if (v18)
          {
            v8 = 4;
            goto LABEL_9;
          }
          v19 = 0;
          v20 = v17 >> 6;
          if (v20 <= 5)
            v20 = 5;
          v21 = v20 - 5;
          while (v21 != v19)
          {
            v18 = v7[v19++ + 12];
            if (v18)
            {
              v8 = v19 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2590EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)v0 + 88;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E1E7C64(v2, &qword_254334340);
  __swift_destroy_boxed_opaque_existential_0(v1);
  return swift_task_switch();
}

uint64_t sub_23E259170()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  unint64_t v9;
  _QWORD *v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;

  result = sub_23E1E2FA0(*(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  if (v3)
  {
    v4 = (v3 - 1) & v3;
    v5 = __clz(__rbit64(v3)) | (v2 << 6);
    result = *(_QWORD *)(v0 + 160);
LABEL_3:
    *(_QWORD *)(v0 + 200) = v2;
    *(_QWORD *)(v0 + 208) = v4;
    v7 = *(_QWORD *)(v0 + 184);
    v6 = *(_QWORD *)(v0 + 192);
    sub_23E1E2F50(*(_QWORD *)(result + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 176) + 72) * v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v0 + 88) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E539650;
    *(_BYTE *)(inited + 32) = 105;
    sub_23E1EA57C(v0 + 88, inited + 40);
    v9 = sub_23E20D564(inited);
    *(_QWORD *)(v0 + 152) = 2;
    *(_OWORD *)(v0 + 120) = xmmword_23E53C8E0;
    *(_QWORD *)(v0 + 216) = v9;
    *(_QWORD *)(v0 + 136) = 0;
    *(_QWORD *)(v0 + 144) = 0;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v10;
    *v10 = v0;
    v10[1] = sub_23E2590EC;
    return StaticService.set(for:options:context:)(*(_QWORD *)(v0 + 168), v9, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
  }
  v11 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v12 = (unint64_t)((1 << *(_BYTE *)(v0 + 232)) + 63) >> 6;
    result = *(_QWORD *)(v0 + 160);
    if (v11 >= v12)
      goto LABEL_18;
    v13 = result + 56;
    v14 = *(_QWORD *)(result + 56 + 8 * v11);
    ++v2;
    if (v14)
    {
LABEL_7:
      v4 = (v14 - 1) & v14;
      v5 = __clz(__rbit64(v14)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v11 + 1;
    if (v11 + 1 >= v12)
      goto LABEL_18;
    v14 = *(_QWORD *)(v13 + 8 * v2);
    if (v14)
      goto LABEL_7;
    v2 = v11 + 2;
    if (v11 + 2 >= v12)
      goto LABEL_18;
    v14 = *(_QWORD *)(v13 + 8 * v2);
    if (v14)
      goto LABEL_7;
    v15 = v11 + 3;
    if (v15 >= v12)
    {
LABEL_18:
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v14 = *(_QWORD *)(v13 + 8 * v15);
    if (v14)
    {
      v2 = v15;
      goto LABEL_7;
    }
    while (1)
    {
      v2 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v2 >= v12)
        goto LABEL_18;
      v14 = *(_QWORD *)(v13 + 8 * v2);
      ++v15;
      if (v14)
        goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2593C0(unint64_t a1)
{
  return sub_23E2595A8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23E24C6EC);
}

uint64_t sub_23E2593CC(unint64_t a1)
{
  return sub_23E2595A8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23E24C900);
}

uint64_t sub_23E2593D8(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E1E3348, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E2593EC(unint64_t a1)
{
  return sub_23E2595A8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23E24CB14);
}

uint64_t sub_23E2593F8(int64_t a1)
{
  return sub_23E25A268(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, &qword_256D3FF30, (uint64_t (*)(void))sub_23E51F318, (uint64_t (*)(uint64_t *, unint64_t, int64_t, int64_t))sub_23E24B22C);
}

uint64_t sub_23E25941C(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E51F318, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

uint64_t sub_23E259430(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23E51F340(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF70);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E25959C(unint64_t a1)
{
  return sub_23E2595A8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23E24CD28);
}

uint64_t sub_23E2595A8(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x24264F154](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23E537808();
  }
  __break(1u);
  return result;
}

uint64_t sub_23E259764(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  int isUniquelyReferenced_nonNull_native;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  BOOL v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  unsigned int v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;

  v70 = type metadata accessor for StaticLightProfile();
  v4 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v69 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v68 = (uint64_t)&v58 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *v1;
  v17 = *(_QWORD *)(*v1 + 16);
  v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v16;
  if (!isUniquelyReferenced_nonNull_native || (v20 = *(_QWORD *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18)
      v21 = v17 + v15;
    else
      v21 = v17;
    v16 = sub_23E51F44C(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *v1 = v16;
    v20 = *(_QWORD *)(v16 + 24) >> 1;
  }
  v22 = *(_QWORD *)(v16 + 16);
  v2 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = *(_QWORD *)(v4 + 72);
  v23 = v20 - v22;
  v24 = sub_23E24B684(&v71, v16 + v2 + v17 * v22, v20 - v22, a1);
  if (v24 < v15)
    goto LABEL_15;
  if (v24)
  {
    v26 = *(_QWORD *)(v16 + 16);
    v27 = __OFADD__(v26, v24);
    v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v16 + 16) = v28;
  }
  if (v24 != v23)
    return sub_23E2261B0();
LABEL_16:
  v16 = *(_QWORD *)(v16 + 16);
  v15 = v71;
  v25 = v73;
  v23 = v74;
  v66 = v73;
  v67 = v72;
  if (v75)
  {
    v65 = (v75 - 1) & v75;
    v30 = __clz(__rbit64(v75)) | (v74 << 6);
LABEL_18:
    sub_23E1E2F50(*(_QWORD *)(v15 + 56) + v30 * v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v31 = v15;
    v32 = v70;
    v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v59(v14, 0, 1, v70);
    v33 = v23;
    goto LABEL_42;
  }
LABEL_20:
  v34 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_40:
    v15 = v12;
    goto LABEL_41;
  }
  v35 = (unint64_t)(v25 + 64) >> 6;
  v61 = v23;
  if (v34 < v35)
  {
    v36 = *(_QWORD *)(v67 + 8 * v34);
    if (v36)
    {
LABEL_23:
      v65 = (v36 - 1) & v36;
      v30 = __clz(__rbit64(v36)) + (v34 << 6);
      v23 = v34;
      goto LABEL_18;
    }
    v37 = v23 + 2;
    v61 = v23 + 1;
    if (v23 + 2 < v35)
    {
      v12 = v15;
      v36 = *(_QWORD *)(v67 + 8 * v37);
      if (v36)
      {
LABEL_26:
        v34 = v37;
        goto LABEL_23;
      }
      v61 = v23 + 2;
      if (v23 + 3 < v35)
      {
        v36 = *(_QWORD *)(v67 + 8 * (v23 + 3));
        if (v36)
        {
          v34 = v23 + 3;
          goto LABEL_23;
        }
        v37 = v23 + 4;
        v61 = v23 + 3;
        if (v23 + 4 < v35)
        {
          v36 = *(_QWORD *)(v67 + 8 * v37);
          if (v36)
            goto LABEL_26;
          v34 = v23 + 5;
          v61 = v23 + 4;
          if (v23 + 5 < v35)
          {
            v36 = *(_QWORD *)(v67 + 8 * v34);
            if (v36)
              goto LABEL_23;
            v61 = v35 - 1;
            v38 = v23 + 6;
            while (v35 != v38)
            {
              v36 = *(_QWORD *)(v67 + 8 * v38++);
              if (v36)
              {
                v34 = v38 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_40;
          }
        }
      }
    }
  }
LABEL_41:
  v31 = v15;
  v32 = v70;
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v59(v14, 1, 1, v70);
  v65 = 0;
  v33 = v61;
LABEL_42:
  v60 = v31;
  v61 = v33;
  v39 = v68;
  v71 = v31;
  v72 = v67;
  v73 = v66;
  v74 = v33;
  v75 = v65;
  sub_23E1E7C20((uint64_t)v14, v68, &qword_256D3F2D0);
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v64(v39, 1, v32) == 1)
  {
LABEL_43:
    sub_23E1E7C64((uint64_t)v14, &qword_256D3F2D0);
    sub_23E2261B0();
    return sub_23E1E7C64(v39, &qword_256D3F2D0);
  }
  v40 = v69;
  while (1)
  {
    sub_23E1E7C64(v39, &qword_256D3F2D0);
    v42 = *v1;
    v43 = *(_QWORD *)(*v1 + 24);
    v44 = v43 >> 1;
    if ((uint64_t)(v43 >> 1) < v16 + 1)
    {
      v42 = sub_23E51F44C(v43 > 1, v16 + 1, 1, *v1);
      *v1 = v42;
      v44 = *(_QWORD *)(v42 + 24) >> 1;
    }
    sub_23E1E7C20((uint64_t)v14, (uint64_t)v9, &qword_256D3F2D0);
    if (v64((uint64_t)v9, 1, v70) == 1)
    {
      v39 = v68;
LABEL_83:
      sub_23E1E7C64((uint64_t)v9, &qword_256D3F2D0);
      v41 = v70;
      goto LABEL_46;
    }
    v62 = v42 + v2;
    sub_23E1E2FDC((uint64_t)v9, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v45 = v16 < v44;
    v46 = v16 <= v44 ? v44 : v16;
    v63 = v46;
    v47 = v66;
    if (v45)
      break;
LABEL_45:
    v66 = v47;
    sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v16 = v63;
    v41 = v70;
    v39 = v68;
LABEL_46:
    *(_QWORD *)(*v1 + 16) = v16;
    sub_23E1E7C20((uint64_t)v14, v39, &qword_256D3F2D0);
    if (v64(v39, 1, v41) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_23E1E7C64((uint64_t)v14, &qword_256D3F2D0);
    result = sub_23E1E2FDC(v40, v62 + v16 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v48 = v71;
    v49 = v74;
    v66 = v73;
    v67 = v72;
    if (v75)
    {
      v65 = (v75 - 1) & v75;
      v50 = __clz(__rbit64(v75)) | (v74 << 6);
      goto LABEL_58;
    }
    v53 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    v54 = (unint64_t)(v73 + 64) >> 6;
    v52 = v74;
    if (v53 < v54)
    {
      v55 = *(_QWORD *)(v67 + 8 * v53);
      if (v55)
        goto LABEL_62;
      v52 = v74 + 1;
      if (v74 + 2 < v54)
      {
        v55 = *(_QWORD *)(v67 + 8 * (v74 + 2));
        if (v55)
        {
          v53 = v74 + 2;
          goto LABEL_62;
        }
        v52 = v74 + 2;
        if (v74 + 3 < v54)
        {
          v55 = *(_QWORD *)(v67 + 8 * (v74 + 3));
          if (v55)
          {
            v53 = v74 + 3;
            goto LABEL_62;
          }
          v52 = v74 + 3;
          if (v74 + 4 < v54)
          {
            v55 = *(_QWORD *)(v67 + 8 * (v74 + 4));
            if (v55)
            {
              v53 = v74 + 4;
LABEL_62:
              v65 = (v55 - 1) & v55;
              v50 = __clz(__rbit64(v55)) + (v53 << 6);
              v49 = v53;
LABEL_58:
              sub_23E1E2F50(*(_QWORD *)(v71 + 56) + v50 * v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
              v51 = v70;
              v59(v14, 0, 1, v70);
              v52 = v49;
              goto LABEL_79;
            }
            v53 = v74 + 5;
            v52 = v74 + 4;
            if (v74 + 5 < v54)
            {
              v55 = *(_QWORD *)(v67 + 8 * v53);
              if (v55)
                goto LABEL_62;
              v52 = v54 - 1;
              v56 = v74 + 6;
              while (v54 != v56)
              {
                v55 = *(_QWORD *)(v67 + 8 * v56++);
                if (v55)
                {
                  v53 = v56 - 1;
                  goto LABEL_62;
                }
              }
            }
          }
        }
      }
    }
    v51 = v70;
    v59(v14, 1, 1, v70);
    v65 = 0;
LABEL_79:
    ++v16;
    v60 = v48;
    v71 = v48;
    v72 = v67;
    v47 = v66;
    v73 = v66;
    v74 = v52;
    v75 = v65;
    sub_23E1E7C20((uint64_t)v14, (uint64_t)v9, &qword_256D3F2D0);
    v57 = v64((uint64_t)v9, 1, v51);
    v61 = v52;
    if (v57 == 1)
    {
      v39 = v68;
      v40 = v69;
      goto LABEL_83;
    }
    v40 = v69;
    sub_23E1E2FDC((uint64_t)v9, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    if (v16 == v63)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E259EEC(uint64_t a1)
{
  return sub_23E25B1C4(a1, (uint64_t (*)(void))sub_23E51F474, type metadata accessor for ScrubberElement);
}

uint64_t sub_23E259F00(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E20106C, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E259F14(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E51F49C, type metadata accessor for StaticRoom);
}

uint64_t sub_23E259F28(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E51F4B0, type metadata accessor for RoomType);
}

uint64_t sub_23E259F3C(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E51E540, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23E259F50(uint64_t a1)
{
  return sub_23E259F64(a1, (uint64_t (*)(void))sub_23E1FBF00, _s8IntervalVMa);
}

uint64_t sub_23E259F64(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E25A0DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23E51FE20(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E25A244(int64_t a1)
{
  return sub_23E25A268(a1, type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_254333218, (uint64_t (*)(void))sub_23E51FF60, (uint64_t (*)(uint64_t *, unint64_t, int64_t, int64_t))sub_23E24C474);
}

uint64_t sub_23E25A268(int64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t *, unint64_t, int64_t, int64_t))
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  int isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  BOOL v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD);
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v66;
  int64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD);
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v75 = a2;
  v77 = a2(0);
  v10 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v73 = (uint64_t)&v65 - v11;
  v78 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v74 = (uint64_t)&v65 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v65 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *v5;
  v22 = *(_QWORD *)(*v5 + 16);
  v23 = v22 + v20;
  if (__OFADD__(v22, v20))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v76 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v21;
  v72 = a4;
  if (!isUniquelyReferenced_nonNull_native || (v25 = *(_QWORD *)(v21 + 24) >> 1, v25 < v23))
  {
    v21 = a4();
    *v5 = v21;
    v25 = *(_QWORD *)(v21 + 24) >> 1;
  }
  v26 = *(_QWORD *)(v21 + 16);
  v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v23 = *(_QWORD *)(v10 + 72);
  a4 = (uint64_t (*)(void))(v25 - v26);
  v27 = a5(&v79, v21 + v22 + v23 * v26, v25 - v26, a1);
  if (v27 < v20)
    goto LABEL_12;
  if (v27)
  {
    v29 = *(_QWORD *)(v21 + 16);
    v30 = __OFADD__(v29, v27);
    v31 = v29 + v27;
    if (v30)
    {
      __break(1u);
LABEL_17:
      v37 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
      }
      else
      {
        v38 = (unint64_t)(v71 + 64) >> 6;
        a4 = (uint64_t (*)(void))v21;
        if (v37 >= v38)
          goto LABEL_37;
        v39 = *(_QWORD *)(v70 + 8 * v37);
        if (v39)
        {
LABEL_20:
          v69 = (v39 - 1) & v39;
          v33 = __clz(__rbit64(v39)) + (v37 << 6);
          v21 = v37;
          goto LABEL_15;
        }
        v40 = v21 + 2;
        a4 = (uint64_t (*)(void))(v21 + 1);
        if (v21 + 2 >= v38)
          goto LABEL_37;
        v17 = v28;
        v39 = *(_QWORD *)(v70 + 8 * v40);
        if (v39)
        {
LABEL_23:
          v37 = v40;
          goto LABEL_20;
        }
        a4 = (uint64_t (*)(void))(v21 + 2);
        if (v21 + 3 >= v38)
          goto LABEL_37;
        v39 = *(_QWORD *)(v70 + 8 * (v21 + 3));
        if (v39)
        {
          v37 = v21 + 3;
          goto LABEL_20;
        }
        v40 = v21 + 4;
        a4 = (uint64_t (*)(void))(v21 + 3);
        if (v21 + 4 >= v38)
          goto LABEL_37;
        v39 = *(_QWORD *)(v70 + 8 * v40);
        if (v39)
          goto LABEL_23;
        v37 = v21 + 5;
        a4 = (uint64_t (*)(void))(v21 + 4);
        if (v21 + 5 >= v38)
        {
LABEL_37:
          v34 = v28;
          v35 = v77;
          v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v65(v19, 1, 1, v77);
          v69 = 0;
          v36 = (uint64_t)a4;
          goto LABEL_38;
        }
        v39 = *(_QWORD *)(v70 + 8 * v37);
        if (v39)
          goto LABEL_20;
        a4 = (uint64_t (*)(void))(v38 - 1);
        v41 = v21 + 6;
        while (v38 != v41)
        {
          v39 = *(_QWORD *)(v70 + 8 * v41++);
          if (v39)
          {
            v37 = v41 - 1;
            goto LABEL_20;
          }
        }
      }
      v28 = v17;
      goto LABEL_37;
    }
    *(_QWORD *)(v21 + 16) = v31;
  }
  if ((uint64_t (*)(void))v27 != a4)
    return sub_23E2261B0();
LABEL_13:
  a1 = *(_QWORD *)(v21 + 16);
  v28 = v79;
  v21 = v82;
  v70 = v80;
  v71 = v81;
  if (!v83)
    goto LABEL_17;
  v69 = (v83 - 1) & v83;
  v33 = __clz(__rbit64(v83)) | (v82 << 6);
LABEL_15:
  v34 = v28;
  sub_23E1E2F50(*(_QWORD *)(v28 + 48) + v33 * v23, (uint64_t)v19, v75);
  v35 = v77;
  v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v65(v19, 0, 1, v77);
  v36 = v21;
LABEL_38:
  v79 = v34;
  v80 = v70;
  v81 = v71;
  v82 = v36;
  v83 = v69;
  v42 = v74;
  sub_23E1E7C20((uint64_t)v19, v74, v78);
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v68(v42, 1, v35) == 1)
  {
    v43 = v78;
LABEL_40:
    sub_23E1E7C64((uint64_t)v19, v43);
    sub_23E2261B0();
    return sub_23E1E7C64(v42, v43);
  }
  v43 = v78;
  while (1)
  {
    sub_23E1E7C64(v42, v43);
    v44 = *v5;
    v45 = *(_QWORD *)(*v5 + 24);
    v46 = v45 >> 1;
    if ((uint64_t)(v45 >> 1) < a1 + 1)
    {
      v44 = ((uint64_t (*)(BOOL))v72)(v45 > 1);
      *v5 = v44;
      v46 = *(_QWORD *)(v44 + 24) >> 1;
    }
    v47 = v76;
    sub_23E1E7C20((uint64_t)v19, v76, v78);
    if (v68(v47, 1, v77) != 1)
      break;
LABEL_42:
    v43 = v78;
    sub_23E1E7C64(v76, v78);
LABEL_43:
    v42 = v74;
    *(_QWORD *)(*v5 + 16) = a1;
    sub_23E1E7C20((uint64_t)v19, v42, v43);
    if (v68(v42, 1, v77) == 1)
      goto LABEL_40;
  }
  v66 = v44 + v22;
  v48 = v47;
  v49 = v73;
  v50 = v75;
  sub_23E1E2FDC(v48, v73, v75);
  v51 = a1 < v46;
  if (a1 <= v46)
    v52 = v46;
  else
    v52 = a1;
  v67 = v52;
  v53 = v49;
  if (!v51)
  {
LABEL_79:
    sub_23E1E2FA0(v53, v50);
    a1 = v67;
    v43 = v78;
    goto LABEL_43;
  }
  while (1)
  {
    sub_23E1E7C64((uint64_t)v19, v78);
    result = sub_23E1E2FDC(v53, v66 + a1 * v23, v50);
    v54 = v79;
    v55 = v82;
    v70 = v80;
    v71 = v81;
    if (v83)
    {
      v56 = v50;
      v69 = (v83 - 1) & v83;
      v57 = __clz(__rbit64(v83)) | (v82 << 6);
      v58 = v77;
      goto LABEL_54;
    }
    v59 = v82 + 1;
    v58 = v77;
    if (__OFADD__(v82, 1))
      break;
    v60 = (unint64_t)(v71 + 64) >> 6;
    v61 = v82;
    if (v59 >= v60)
      goto LABEL_76;
    v62 = *(_QWORD *)(v70 + 8 * v59);
    if (!v62)
    {
      v61 = v82 + 1;
      if (v82 + 2 >= v60)
        goto LABEL_76;
      v62 = *(_QWORD *)(v70 + 8 * (v82 + 2));
      if (v62)
      {
        v59 = v82 + 2;
      }
      else
      {
        v61 = v82 + 2;
        if (v82 + 3 >= v60)
          goto LABEL_76;
        v62 = *(_QWORD *)(v70 + 8 * (v82 + 3));
        if (v62)
        {
          v59 = v82 + 3;
        }
        else
        {
          v61 = v82 + 3;
          if (v82 + 4 >= v60)
            goto LABEL_76;
          v62 = *(_QWORD *)(v70 + 8 * (v82 + 4));
          if (v62)
          {
            v59 = v82 + 4;
LABEL_68:
            v58 = v77;
            v53 = v73;
          }
          else
          {
            v59 = v82 + 5;
            v61 = v82 + 4;
            v58 = v77;
            v53 = v73;
            if (v82 + 5 >= v60)
              goto LABEL_76;
            v62 = *(_QWORD *)(v70 + 8 * v59);
            if (!v62)
            {
              v63 = v82 + 6;
              while (v60 != v63)
              {
                v62 = *(_QWORD *)(v70 + 8 * v63++);
                if (v62)
                {
                  v59 = v63 - 1;
                  goto LABEL_68;
                }
              }
              v58 = v77;
              v53 = v73;
              v61 = v60 - 1;
LABEL_76:
              v55 = v61;
              v65(v19, 1, 1, v58);
              v69 = 0;
              goto LABEL_77;
            }
          }
        }
      }
    }
    v69 = (v62 - 1) & v62;
    v57 = __clz(__rbit64(v62)) + (v59 << 6);
    v55 = v59;
    v56 = v75;
LABEL_54:
    sub_23E1E2F50(*(_QWORD *)(v79 + 48) + v57 * v23, (uint64_t)v19, v56);
    v65(v19, 0, 1, v58);
LABEL_77:
    ++a1;
    v79 = v54;
    v80 = v70;
    v81 = v71;
    v82 = v55;
    v83 = v69;
    v64 = v76;
    sub_23E1E7C20((uint64_t)v19, v76, v78);
    if (v68(v64, 1, v58) == 1)
      goto LABEL_42;
    v50 = v75;
    sub_23E1E2FDC(v64, v53, v75);
    if (a1 == v67)
      goto LABEL_79;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E25A9D8(int64_t a1)
{
  return sub_23E25A268(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, &qword_256D3FCD8, (uint64_t (*)(void))sub_23E51F0B8, (uint64_t (*)(uint64_t *, unint64_t, int64_t, int64_t))sub_23E24C480);
}

uint64_t sub_23E25A9FC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int isUniquelyReferenced_nonNull_native;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  char *v54;
  char *v55;
  uint64_t (*v56)(unint64_t, char *, uint64_t);
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  int64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  int64_t v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  unint64_t v69;
  unint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v76 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v77 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v65 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v16 = (char *)&v65 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = *v1;
  v19 = *(_QWORD *)(*v1 + 16);
  v20 = v19 + v17;
  if (__OFADD__(v19, v17))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v18;
  v75 = v11;
  if (!isUniquelyReferenced_nonNull_native || (v22 = *(_QWORD *)(v18 + 24) >> 1, v22 < v20))
  {
    if (v19 <= v20)
      v23 = v19 + v17;
    else
      v23 = v19;
    v18 = sub_23E51E540(isUniquelyReferenced_nonNull_native, v23, 1, v18);
    *v1 = v18;
    v22 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v24 = *(_QWORD *)(v18 + 16);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = *(_QWORD *)(v4 + 72);
  v25 = v22 - v24;
  v26 = sub_23E24C124(&v78, v18 + v19 + v20 * v24, v22 - v24, a1);
  if (v26 < v17)
    goto LABEL_15;
  if (v26)
  {
    v28 = *(_QWORD *)(v18 + 16);
    v29 = __OFADD__(v28, v26);
    v30 = v28 + v26;
    if (v29)
    {
      __break(1u);
LABEL_20:
      v35 = a1 + 1;
      if (__OFADD__(a1, 1))
      {
        __break(1u);
      }
      else
      {
        v36 = (v27 + 64) >> 6;
        v74 = a1;
        if (v35 >= v36)
          goto LABEL_41;
        v37 = *(_QWORD *)(v18 + 8 * v35);
        if (v37)
        {
LABEL_23:
          v32 = (v37 - 1) & v37;
          v33 = __clz(__rbit64(v37)) + (v35 << 6);
          a1 = v35;
          goto LABEL_18;
        }
        v38 = a1 + 2;
        v74 = a1 + 1;
        if (a1 + 2 >= v36)
          goto LABEL_41;
        v14 = v19;
        v13 = v25;
        v12 = v17;
        v37 = *(_QWORD *)(v18 + 8 * v38);
        if (v37)
        {
LABEL_26:
          v35 = v38;
          goto LABEL_23;
        }
        v74 = a1 + 2;
        v18 = v73;
        if (a1 + 3 >= v36)
          goto LABEL_41;
        v37 = *(_QWORD *)(v73 + 8 * (a1 + 3));
        if (v37)
        {
          v35 = a1 + 3;
          goto LABEL_23;
        }
        v38 = a1 + 4;
        v74 = a1 + 3;
        v18 = v73;
        if (a1 + 4 >= v36)
          goto LABEL_41;
        v37 = *(_QWORD *)(v73 + 8 * v38);
        if (v37)
          goto LABEL_26;
        v35 = a1 + 5;
        v74 = a1 + 4;
        v18 = v73;
        if (a1 + 5 >= v36)
        {
LABEL_41:
          v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
          v66(v16, 1, 1, v3);
          v34 = 0;
          a1 = v74;
          goto LABEL_42;
        }
        v37 = *(_QWORD *)(v73 + 8 * v35);
        if (v37)
          goto LABEL_23;
        v74 = v36 - 1;
        v39 = a1 + 6;
        while (v36 != v39)
        {
          v37 = *(_QWORD *)(v73 + 8 * v39++);
          if (v37)
          {
            v35 = v39 - 1;
            goto LABEL_23;
          }
        }
      }
      v17 = v12;
      v25 = v13;
      v18 = v73;
      v19 = v14;
      goto LABEL_41;
    }
    *(_QWORD *)(v18 + 16) = v30;
  }
  if (v26 != v25)
    return sub_23E2261B0();
LABEL_16:
  v25 = *(_QWORD *)(v18 + 16);
  v17 = v78;
  v18 = v79;
  v27 = v80;
  a1 = v81;
  v73 = v79;
  v70 = v80;
  if (!v82)
    goto LABEL_20;
  v32 = (v82 - 1) & v82;
  v33 = __clz(__rbit64(v82)) | (v81 << 6);
LABEL_18:
  (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v16, *(_QWORD *)(v17 + 48) + v33 * v20, v3);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v66(v16, 0, 1, v3);
  v34 = v32;
  v18 = v73;
LABEL_42:
  v72 = v34;
  v74 = a1;
  v78 = v17;
  v79 = v18;
  v80 = v70;
  v81 = a1;
  v82 = v34;
  v40 = (uint64_t)v75;
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v75, &qword_254333F50);
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v71(v40, 1, v3) == 1)
  {
LABEL_82:
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
    sub_23E2261B0();
    return sub_23E1E7C64((uint64_t)v75, &qword_254333F50);
  }
  v41 = (uint64_t)v75;
  v42 = v76;
  v67 = v19;
  while (1)
  {
    sub_23E1E7C64(v41, &qword_254333F50);
    v43 = *(_QWORD *)(*v1 + 24);
    v44 = v43 >> 1;
    if ((uint64_t)(v43 >> 1) < v25 + 1)
    {
      v50 = sub_23E51E540(v43 > 1, v25 + 1, 1, *v1);
      *v1 = v50;
      v74 = v50;
      v44 = *(_QWORD *)(v50 + 24) >> 1;
    }
    else
    {
      v74 = *v1;
    }
    v45 = v77;
    sub_23E1E7C20((uint64_t)v16, v77, &qword_254333F50);
    if (v71(v45, 1, v3) != 1)
      break;
    v46 = v77;
LABEL_50:
    sub_23E1E7C64(v46, &qword_254333F50);
    v47 = v25;
LABEL_45:
    *(_QWORD *)(*v1 + 16) = v47;
    v41 = (uint64_t)v75;
    sub_23E1E7C20((uint64_t)v16, (uint64_t)v75, &qword_254333F50);
    if (v71(v41, 1, v3) == 1)
    {
      v74 = v81;
      v72 = v82;
      goto LABEL_82;
    }
  }
  v69 = v74 + v19;
  v48 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 32);
  if (v25 <= v44)
    v49 = v44;
  else
    v49 = v25;
  v70 = v49;
  v46 = v77;
  v68 = v48;
  while (1)
  {
    v54 = v42;
    v55 = v42;
    v56 = (uint64_t (*)(unint64_t, char *, uint64_t))v48;
    v48(v54, v46, v3);
    v47 = v70;
    if (v25 == v70)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v55, v3);
      v25 = v47;
      v42 = v55;
      v19 = v67;
      goto LABEL_45;
    }
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
    v74 = v25;
    result = v56(v69 + v25 * v20, v55, v3);
    v52 = v78;
    v57 = v81;
    v72 = v80;
    v73 = v79;
    if (v82)
    {
      v51 = (v82 - 1) & v82;
      v58 = __clz(__rbit64(v82)) | (v81 << 6);
      v19 = v67;
      goto LABEL_62;
    }
    v65 = v78;
    v60 = v81 + 1;
    v19 = v67;
    if (__OFADD__(v81, 1))
      break;
    v61 = (v80 + 64) >> 6;
    v59 = v81;
    if (v60 < v61)
    {
      v62 = *(_QWORD *)(v79 + 8 * v60);
      if (v62)
        goto LABEL_66;
      v63 = v81 + 2;
      v59 = v81 + 1;
      if (v81 + 2 < v61)
      {
        v62 = *(_QWORD *)(v79 + 8 * v63);
        if (v62)
          goto LABEL_69;
        v59 = v81 + 2;
        if (v81 + 3 < v61)
        {
          v62 = *(_QWORD *)(v79 + 8 * (v81 + 3));
          if (v62)
          {
            v60 = v81 + 3;
            goto LABEL_66;
          }
          v63 = v81 + 4;
          v59 = v81 + 3;
          if (v81 + 4 < v61)
          {
            v62 = *(_QWORD *)(v79 + 8 * v63);
            if (v62)
            {
LABEL_69:
              v60 = v63;
              goto LABEL_66;
            }
            v60 = v81 + 5;
            v59 = v81 + 4;
            if (v81 + 5 < v61)
            {
              v62 = *(_QWORD *)(v79 + 8 * v60);
              if (!v62)
              {
                v59 = v61 - 1;
                v64 = v81 + 6;
                do
                {
                  if (v61 == v64)
                  {
                    v19 = v67;
                    goto LABEL_57;
                  }
                  v62 = *(_QWORD *)(v79 + 8 * v64++);
                }
                while (!v62);
                v60 = v64 - 1;
                v19 = v67;
              }
LABEL_66:
              v51 = (v62 - 1) & v62;
              v58 = __clz(__rbit64(v62)) + (v60 << 6);
              v57 = v60;
              v52 = v65;
LABEL_62:
              (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v16, *(_QWORD *)(v52 + 48) + v58 * v20, v3);
              v66(v16, 0, 1, v3);
              v59 = v57;
              goto LABEL_58;
            }
          }
        }
      }
    }
LABEL_57:
    v66(v16, 1, 1, v3);
    v51 = 0;
    v52 = v65;
LABEL_58:
    v25 = v74 + 1;
    v78 = v52;
    v79 = v73;
    v80 = v72;
    v81 = v59;
    v82 = v51;
    v46 = v77;
    sub_23E1E7C20((uint64_t)v16, v77, &qword_254333F50);
    v53 = v71(v46, 1, v3);
    v42 = v76;
    v48 = v68;
    if (v53 == 1)
      goto LABEL_50;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E25B19C(uint64_t a1)
{
  return sub_23E25B1C4(a1, (uint64_t (*)(void))sub_23E51E2F8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E25B1B0(uint64_t a1)
{
  return sub_23E25B1C4(a1, (uint64_t (*)(void))sub_23E51E5A4, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E25B1C4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E25B340(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23E25B388(a1, a2, a3, (void (*)(_QWORD))sub_23E2605F4, (uint64_t (*)(char *))sub_23E25FBD4);
}

uint64_t sub_23E25B364(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23E25B388(a1, a2, a3, (void (*)(_QWORD))sub_23E2261B8, (uint64_t (*)(char *))sub_23E25FBB0);
}

uint64_t sub_23E25B388(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(char *))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[4];
  _BYTE v15[16];
  uint64_t v16;

  v10 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v16 = a2;
  swift_bridgeObjectRetain();
  v11 = sub_23E4739A0(a4, (uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  v14[2] = a3;
  v12 = *(_QWORD *)(sub_23E337604(a5, (uint64_t)v14, v11) + 16);
  result = swift_bridgeObjectRelease();
  if (__OFADD__(*a1, v12))
    __break(1u);
  else
    *a1 += v12;
  return result;
}

BOOL sub_23E25B454(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int v15;
  uint64_t (*v16)(_QWORD);
  char v17;
  char v18;
  char v19;
  int v20;
  BOOL v21;
  _BYTE v23[31];
  char v24;

  v5 = type metadata accessor for StaticService();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v23[-v10];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v23[-v13];
  v15 = *(unsigned __int8 *)(a1 + *(int *)(v12 + 92));
  sub_23E1E2F50(a1, (uint64_t)&v23[-v13], v16);
  if (v15 == 53)
    LOBYTE(v15) = v14[*(int *)(v5 + 84)];
  sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v23[30] = v15;
  ServiceKind.umbrellaCategory.getter(&v24);
  v17 = v24;
  a3(0);
  sub_23E5225C0(v17);
  v19 = v18;
  sub_23E1E2F50(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v19 & 1) != 0)
  {
    v20 = v11[*(int *)(v5 + 76)];
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v21 = v20 == 1 && StaticService.isActivated.getter();
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v21 = 0;
  }
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v21;
}

uint64_t sub_23E25B62C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticService();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v25 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        return swift_release();
      v23 = *(_QWORD *)(v26 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          return swift_release();
        v23 = *(_QWORD *)(v26 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v18)
            return swift_release();
          v23 = *(_QWORD *)(v26 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v21, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E2962E8((uint64_t)v10, (uint64_t)v5);
    sub_23E1E7C64((uint64_t)v5, &qword_254332DE8);
    result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v24 = v22 + 4;
  if (v24 >= v18)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E25B888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v18 - v12;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v14 = *(_QWORD *)(a1 + 16);
    v18 = a1;
    if (v14)
    {
      v15 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v19 = *(_QWORD *)(v4 + 72);
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v16(v13, v15, v3);
        v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        v17(v13, 0, 1, v3);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
        sub_23E2966E8((uint64_t)v6, (uint64_t)v10);
        sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        v15 += v19;
        if (!--v14)
          goto LABEL_8;
      }
    }
    else
    {
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v17(v13, 1, 1, v3);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E25BA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t isStackAllocationSafe;
  char v36;
  unint64_t v37;
  size_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t i;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56[4];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StaticService();
  v7 = MEMORY[0x24BDAC7A8](v52);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v43 - v11;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v54 = v10;
  v50 = v6;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v57 = a1;
  v58 = a1 + 56;
  v53 = a1 + 56;
  v51 = ~v14;
  v59 = ~v14;
  v60 = 0;
  v61 = v15 & v13;
  v17 = a2 + 56;
  v18 = (unint64_t)(63 - v14) >> 6;
  v43 = v18 - 1;
  swift_bridgeObjectRetain();
  v19 = 0;
  v46 = v18;
  v45 = v18 - 6;
  v44 = a1 + 104;
  for (i = a1; ; a1 = i)
  {
    v48 = v16;
    v49 = v19;
    if (v16)
    {
      v55 = (v16 - 1) & v16;
      v20 = __clz(__rbit64(v16)) | (v19 << 6);
      v21 = v19;
      v22 = (uint64_t)v50;
      v23 = v54;
LABEL_9:
      sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v23 + 72) * v20, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v24 = 0;
      goto LABEL_10;
    }
    v21 = v19 + 1;
    v22 = (uint64_t)v50;
    v23 = v54;
    if (__OFADD__(v19, 1))
      __break(1u);
    if (v21 >= v46)
    {
LABEL_35:
      v55 = 0;
      v24 = 1;
      v21 = v19;
      goto LABEL_10;
    }
    v32 = *(_QWORD *)(v53 + 8 * v21);
    if (v32)
      goto LABEL_19;
    v33 = v19 + 2;
    if (v19 + 2 >= v46)
    {
      v55 = 0;
      v24 = 1;
      goto LABEL_10;
    }
    v32 = *(_QWORD *)(v53 + 8 * v33);
    if (v32)
      goto LABEL_22;
    v19 += 3;
    if (v21 + 2 >= v46)
      goto LABEL_36;
    v32 = *(_QWORD *)(v53 + 8 * v19);
    if (v32)
    {
      v21 += 2;
      goto LABEL_19;
    }
    v33 = v21 + 3;
    if (v21 + 3 >= v46)
      goto LABEL_35;
    v32 = *(_QWORD *)(v53 + 8 * v33);
    if (v32)
    {
LABEL_22:
      v21 = v33;
LABEL_19:
      v55 = (v32 - 1) & v32;
      v20 = __clz(__rbit64(v32)) + (v21 << 6);
      goto LABEL_9;
    }
    v21 += 4;
    if (v21 >= v46)
    {
LABEL_36:
      v55 = 0;
      v24 = 1;
      v21 = v33;
    }
    else
    {
      v32 = *(_QWORD *)(v53 + 8 * v21);
      if (v32)
        goto LABEL_19;
      v34 = v49;
      while (v45 != v34)
      {
        v32 = *(_QWORD *)(v44 + 8 * v34++);
        if (v32)
        {
          v21 = v34 + 5;
          goto LABEL_19;
        }
      }
      v55 = 0;
      v24 = 1;
      v21 = v43;
    }
LABEL_10:
    v25 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v22, v24, 1, v52);
    v57 = a1;
    v58 = v53;
    v59 = v51;
    v60 = v21;
    v61 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v25) == 1)
    {
      sub_23E2261B0();
      sub_23E1E7C64(v22, &qword_254332DE8);
      return a2;
    }
    sub_23E1E2FDC(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E53845C();
    StaticService.hash(into:)(v56);
    v26 = sub_23E5384A4();
    v27 = -1 << *(_BYTE *)(a2 + 32);
    v28 = v26 & ~v27;
    if (((*(_QWORD *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
      break;
LABEL_6:
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v19 = v21;
    v16 = v55;
  }
  v29 = ~v27;
  v30 = *(_QWORD *)(v54 + 72);
  while (1)
  {
    sub_23E1E2F50(*(_QWORD *)(a2 + 48) + v30 * v28, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v31 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v12);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v31 & 1) != 0)
      break;
    v28 = (v28 + 1) & v29;
    if (((*(_QWORD *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_6;
  }
  isStackAllocationSafe = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v36 = *(_BYTE *)(a2 + 32);
  v37 = (unint64_t)((1 << v36) + 63) >> 6;
  v38 = 8 * v37;
  if ((v36 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v38);
    v39 = sub_23E25C080((unint64_t *)((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0)), v37, a2, v28, &v57);
    swift_release();
    sub_23E2261B0();
    return v39;
  }
  else
  {
    v40 = (void *)swift_slowAlloc();
    memcpy(v40, (const void *)(a2 + 56), v38);
    v41 = sub_23E25C080((unint64_t *)v40, v37, a2, v28, &v57);
    swift_release();
    sub_23E2261B0();
    MEMORY[0x24264FEBC](v40, -1, -1);
    return v41;
  }
}

uint64_t sub_23E25C080(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61[5];
  uint64_t v62;

  v51 = a2;
  v56 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for StaticService();
  v11 = *(_QWORD *)(v57 - 8);
  v12 = MEMORY[0x24BDAC7A8](v57);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v50 - v16;
  v18 = *(_QWORD *)(a3 + 16);
  v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v20 = *(unint64_t *)((char *)a1 + v19) & ((-1 << a4) - 1);
  v53 = a1;
  *(unint64_t *)((char *)a1 + v19) = v20;
  v21 = v18 - 1;
  v62 = a3 + 56;
  v54 = a5;
  while (2)
  {
    v52 = v21;
    do
    {
      while (1)
      {
        v23 = *a5;
        v22 = a5[1];
        v24 = a5[2];
        v25 = a5[3];
        v26 = a5[4];
        v59 = v24;
        v60 = v22;
        if (v26)
        {
          v58 = (v26 - 1) & v26;
          v27 = __clz(__rbit64(v26)) | (v25 << 6);
LABEL_6:
          v28 = v55;
          sub_23E1E2F50(*(_QWORD *)(v23 + 48) + *(_QWORD *)(v11 + 72) * v27, v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v29 = 0;
          goto LABEL_7;
        }
        v42 = v25 + 1;
        if (__OFADD__(v25, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        v43 = (unint64_t)(v24 + 64) >> 6;
        if (v42 >= v43)
        {
          v58 = 0;
          v29 = 1;
          v28 = v55;
          goto LABEL_7;
        }
        v44 = *(_QWORD *)(v22 + 8 * v42);
        if (v44)
          goto LABEL_16;
        v47 = v25 + 2;
        if (v25 + 2 >= v43)
          goto LABEL_34;
        v44 = *(_QWORD *)(v22 + 8 * v47);
        if (v44)
          goto LABEL_22;
        if (v25 + 3 >= v43)
          goto LABEL_35;
        v44 = *(_QWORD *)(v22 + 8 * (v25 + 3));
        if (v44)
        {
          v42 = v25 + 3;
          goto LABEL_16;
        }
        v47 = v25 + 4;
        if (v25 + 4 < v43)
        {
          v44 = *(_QWORD *)(v22 + 8 * v47);
          if (v44)
          {
LABEL_22:
            v42 = v47;
LABEL_16:
            v58 = (v44 - 1) & v44;
            v27 = __clz(__rbit64(v44)) + (v42 << 6);
            v25 = v42;
            goto LABEL_6;
          }
          v42 = v25 + 5;
          if (v25 + 5 < v43)
          {
            v44 = *(_QWORD *)(v22 + 8 * v42);
            if (v44)
              goto LABEL_16;
            v42 = v43 - 1;
            v48 = v25 + 6;
            while (v43 != v48)
            {
              v44 = *(_QWORD *)(v22 + 8 * v48++);
              if (v44)
              {
                v42 = v48 - 1;
                goto LABEL_16;
              }
            }
LABEL_34:
            v58 = 0;
            v29 = 1;
            v25 = v42;
            v28 = v55;
            goto LABEL_7;
          }
LABEL_35:
          v58 = 0;
          v29 = 1;
          v25 = v47;
          v28 = v55;
          goto LABEL_7;
        }
        v58 = 0;
        v29 = 1;
        v25 += 3;
        v28 = v55;
LABEL_7:
        v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v31 = v11;
        v32 = v57;
        v30(v28, v29, 1, v57);
        v33 = v60;
        *a5 = v23;
        a5[1] = v33;
        a5[2] = v59;
        a5[3] = v25;
        a5[4] = v58;
        v34 = v31;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v28, 1, v32) == 1)
        {
          sub_23E1E7C64(v28, &qword_254332DE8);
          v49 = v56;
          swift_retain();
          return sub_23E525178(v53, v51, v52, v49);
        }
        sub_23E1E2FDC(v28, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v35 = v56;
        sub_23E53845C();
        StaticService.hash(into:)(v61);
        v36 = sub_23E5384A4();
        v37 = -1 << *(_BYTE *)(v35 + 32);
        v38 = v36 & ~v37;
        if (((*(_QWORD *)(v62 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0)
          break;
LABEL_3:
        result = sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        a5 = v54;
        v11 = v34;
      }
      v39 = ~v37;
      v40 = *(_QWORD *)(v34 + 72);
      while (1)
      {
        sub_23E1E2F50(*(_QWORD *)(v35 + 48) + v40 * v38, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v41 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v14, (uint64_t)v17);
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((v41 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v62 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_3;
      }
      result = sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v45 = (v38 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v54;
      v46 = *(unint64_t *)((char *)v53 + v45);
      *(unint64_t *)((char *)v53 + v45) = v46 & ~(1 << v38);
      v11 = v34;
    }
    while ((v46 & (1 << v38)) == 0);
    v21 = v52 - 1;
    if (__OFSUB__(v52, 1))
    {
LABEL_43:
      __break(1u);
      return result;
    }
    if (v52 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23E25C4C0(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23E25C78C((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_23E25C78C((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_23E25C61C(uint64_t isStackAllocationSafe, int a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_23E25C9B8((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = sub_23E25C9B8((unint64_t *)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_23E25C78C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticAccessory(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, type metadata accessor for StaticAccessory);
    v16 = v8[*(int *)(v4 + 68)];
    result = sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticAccessory);
    if (v16 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E52515C(v23, v22, v24, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E25C9B8(unint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  int64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int v31;

  v31 = a4;
  v26 = a2;
  v27 = a1;
  v6 = type metadata accessor for StaticAccessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v28 = 0;
  v29 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v30 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v18 = v17 | (v11 << 6);
LABEL_17:
    sub_23E1E2F50(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v7 + 72) * v18, (uint64_t)v10, type metadata accessor for StaticAccessory);
    v22 = sub_23E4EA830((uint64_t)v10, v31);
    result = sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticAccessory);
    if (v4)
      return result;
    if (v22)
    {
      *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = __OFADD__(v28++, 1);
      if (v19)
        goto LABEL_30;
    }
  }
  v19 = __OFADD__(v11++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v11);
  if (v20)
  {
LABEL_16:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_17;
  }
  v21 = v11 + 1;
  if (v11 + 1 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v11 + 2;
  if (v11 + 2 >= v30)
    goto LABEL_27;
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v11 + 3;
  if (v11 + 3 >= v30)
  {
LABEL_27:
    v23 = v26;
    v24 = v28;
    swift_retain();
    return sub_23E52515C(v27, v23, v24, v12);
  }
  v20 = *(_QWORD *)(v29 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v11 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v30)
      goto LABEL_27;
    v20 = *(_QWORD *)(v29 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

