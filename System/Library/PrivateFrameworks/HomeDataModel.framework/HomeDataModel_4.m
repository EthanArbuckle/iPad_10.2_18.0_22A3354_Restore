unint64_t StaticMediaProfile.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  int *v1;

  v1 = (int *)type metadata accessor for StaticMediaProfile();
  return sub_23E3FDF78(*(_BYTE *)(v0 + v1[15]), v0 + v1[24], *(_QWORD *)(v0 + v1[23]));
}

uint64_t StaticMediaProfile.hasDetailAttentionMessages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for StaticMediaProfile();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 1;
  sub_23E34CB08(v1 + *(int *)(v3 + 96), 1);
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  if (!v8)
  {
    _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v5[*(int *)(v2 + 92)]);
    if (v9)
      swift_bridgeObjectRelease();
    else
      v6 = 0;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  return v6;
}

BOOL static StaticMediaProfile.SleepWakeState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticMediaProfile.SleepWakeState.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E3FAC20()
{
  sub_23E3FE2A8();
  return sub_23E538570();
}

uint64_t sub_23E3FAC48()
{
  sub_23E3FE2A8();
  return sub_23E53857C();
}

uint64_t sub_23E3FAC70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3FAC9C + 4 * byte_23E54E2C6[*v0]))(0x656B617761, 0xE500000000000000);
}

uint64_t sub_23E3FAC9C()
{
  return 0x7065656C73;
}

uint64_t sub_23E3FACAC()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23E3FACC4()
{
  return 0x6C646E6148746F6ELL;
}

uint64_t sub_23E3FACE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E401540(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3FAD04()
{
  sub_23E3FE198();
  return sub_23E538570();
}

uint64_t sub_23E3FAD2C()
{
  sub_23E3FE198();
  return sub_23E53857C();
}

uint64_t sub_23E3FAD54()
{
  sub_23E3FE1DC();
  return sub_23E538570();
}

uint64_t sub_23E3FAD7C()
{
  sub_23E3FE1DC();
  return sub_23E53857C();
}

uint64_t sub_23E3FADA4()
{
  sub_23E3FE264();
  return sub_23E538570();
}

uint64_t sub_23E3FADCC()
{
  sub_23E3FE264();
  return sub_23E53857C();
}

uint64_t sub_23E3FADF4()
{
  sub_23E3FE220();
  return sub_23E538570();
}

uint64_t sub_23E3FAE1C()
{
  sub_23E3FE220();
  return sub_23E53857C();
}

void StaticMediaProfile.SleepWakeState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D464C0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D464C8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D464D0);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D464D8);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D464E0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E3FE198();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E3FAFFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_23E3FE2A8();
  sub_23E5381E0();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t StaticMediaProfile.SleepWakeState.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticMediaProfile.SleepWakeState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46510);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46518);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46520);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46528);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46530);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E3FE198();
  v15 = v28;
  sub_23E5384E0();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23E5381C8();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23E537ED4();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v19 = &type metadata for StaticMediaProfile.SleepWakeState;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_23E3FB5F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaProfile.SleepWakeState.init(from:)(a1, a2);
}

void sub_23E3FB60C(_QWORD *a1)
{
  StaticMediaProfile.SleepWakeState.encode(to:)(a1);
}

uint64_t static StaticMediaProfile.test(name:specialMediaCategory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int16 v38;
  char v39;
  char v40;

  v35 = a4;
  v36 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E536F80();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = *a3;
  sub_23E536F74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v21 = swift_allocObject();
  v32 = xmmword_23E539650;
  *(_OWORD *)(v21 + 16) = xmmword_23E539650;
  swift_bridgeObjectRetain();
  sub_23E536F74();
  v33 = sub_23E2CD9CC(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_23E536ED8();
  v22 = sub_23E536F20();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v13, 0, 1, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v32;
  *(_WORD *)(inited + 32) = v20;
  v24 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
  v26 = v25;
  swift_setDeallocating();
  sub_23E536F74();
  v27 = sub_23E2073C0(MEMORY[0x24BEE4AF8]);
  sub_23E536F74();
  v28 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 0, 1, v28);
  v40 = 6;
  v39 = 4;
  v38 = v20;
  v29 = type metadata accessor for StaticSoftwareUpdate(0);
  v30 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v34, 1, 1, v29);
  v37 = 0;
  return sub_23E3F9D58((uint64_t)v19, v36, a2, v33, 0, 0, (uint64_t)v13, v24, v35, v26, 0, 1, 1, 0, (uint64_t)v17, 1, 1, v27, (uint64_t)v10,
           &v40,
           &v39,
           0,
           0,
           &v38,
           0,
           v30,
           &v37);
}

uint64_t sub_23E3FB96C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_23E537DB4())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v29 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D465E8);
  v3 = sub_23E537E5C();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23E537D78();
  sub_23E1E335C(0, &qword_256D41DD8);
  sub_23E1E6118(&qword_256D465F0, &qword_256D41DD8);
  result = sub_23E537A3C();
  v1 = v31;
  v29 = v32;
  v5 = v33;
  v6 = v34;
  v7 = v35;
LABEL_11:
  v11 = (unint64_t)(v5 + 64) >> 6;
  v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_23E537DD8())
      goto LABEL_45;
    sub_23E1E335C(0, &qword_256D41DD8);
    swift_dynamicCast();
    v16 = v30;
LABEL_36:
    result = sub_23E537C4C();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v16 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v15);
    v30 = v16;
    v21 = v16;
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11)
      goto LABEL_45;
    v18 = *(_QWORD *)(v29 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_45;
      v18 = *(_QWORD *)(v29 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_45;
        v18 = *(_QWORD *)(v29 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_45;
          v18 = *(_QWORD *)(v29 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_45;
            v18 = *(_QWORD *)(v29 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v11 != v20)
              {
                v18 = *(_QWORD *)(v29 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_23E2261B0();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  int v83;
  int v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  char *v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int16 v143;
  __int16 v144[5];

  v133 = type metadata accessor for StaticSoftwareUpdate(0);
  v129 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v127 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332C0);
  MEMORY[0x24BDAC7A8](v128);
  v6 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v130 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v131 = (uint64_t)&v121 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v132 = (uint64_t)&v121 - v12;
  v138 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v136 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v134 = (uint64_t)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333220);
  MEMORY[0x24BDAC7A8](v135);
  v15 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v137 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v139 = (uint64_t)&v121 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v140 = (uint64_t)&v121 - v21;
  v22 = sub_23E536F20();
  v141 = *(_QWORD *)(v22 - 8);
  v142 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v121 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v121 - v35;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    goto LABEL_71;
  v126 = v15;
  v37 = (int *)type metadata accessor for StaticMediaProfile();
  v38 = v37[5];
  v39 = *(_QWORD *)(a1 + v38);
  v40 = *(_QWORD *)(a1 + v38 + 8);
  v41 = (_QWORD *)(a2 + v38);
  if (v39 != *v41 || v40 != v41[1])
  {
    v42 = sub_23E538354();
    v43 = 0;
    if ((v42 & 1) == 0)
      return v43 & 1;
  }
  if ((sub_23E1F8470(*(_QWORD *)(a1 + v37[6]), *(_QWORD *)(a2 + v37[6])) & 1) == 0)
    goto LABEL_71;
  v44 = v37[7];
  v45 = (_QWORD *)(a1 + v44);
  v46 = *(_QWORD *)(a1 + v44 + 8);
  v47 = (_QWORD *)(a2 + v44);
  v48 = v47[1];
  if (v46)
  {
    if (!v48)
      goto LABEL_71;
    if (*v45 != *v47 || v46 != v48)
    {
      v49 = sub_23E538354();
      v43 = 0;
      if ((v49 & 1) == 0)
        return v43 & 1;
    }
  }
  else if (v48)
  {
    goto LABEL_71;
  }
  v122 = v6;
  v50 = v37[8];
  v124 = a1;
  sub_23E1E7C20(a1 + v50, (uint64_t)v36, &qword_2543330E0);
  v123 = v37;
  v51 = v37[8];
  v125 = a2;
  sub_23E1E7C20(a2 + v51, (uint64_t)v34, &qword_2543330E0);
  v52 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_23E1E7C20((uint64_t)v36, (uint64_t)v27, &qword_2543330E0);
  sub_23E1E7C20((uint64_t)v34, v52, &qword_2543330E0);
  v53 = v141;
  v54 = v142;
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  if (v55((uint64_t)v27, 1, v142) == 1)
  {
    sub_23E1E7C64((uint64_t)v34, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v36, &qword_2543330E0);
    if (v55(v52, 1, v54) == 1)
    {
      sub_23E1E7C64((uint64_t)v27, &qword_2543330E0);
      goto LABEL_21;
    }
LABEL_18:
    v56 = &qword_2543330E8;
    v57 = (uint64_t)v27;
LABEL_19:
    sub_23E1E7C64(v57, v56);
    goto LABEL_71;
  }
  sub_23E1E7C20((uint64_t)v27, (uint64_t)v31, &qword_2543330E0);
  if (v55(v52, 1, v54) == 1)
  {
    sub_23E1E7C64((uint64_t)v34, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v36, &qword_2543330E0);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v31, v54);
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v24, v52, v54);
  sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v58 = sub_23E537514();
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v24, v54);
  sub_23E1E7C64((uint64_t)v34, &qword_2543330E0);
  sub_23E1E7C64((uint64_t)v36, &qword_2543330E0);
  v59(v31, v54);
  sub_23E1E7C64((uint64_t)v27, &qword_2543330E0);
  if ((v58 & 1) == 0)
    goto LABEL_71;
LABEL_21:
  v61 = v123;
  v60 = v124;
  v62 = v123[9];
  v63 = *(_QWORD *)(v124 + v62);
  v64 = *(_QWORD *)(v124 + v62 + 8);
  v65 = v125;
  v66 = (_QWORD *)(v125 + v62);
  if (v63 != *v66 || v64 != v66[1])
  {
    v67 = sub_23E538354();
    v61 = v123;
    v60 = v124;
    v65 = v125;
    v43 = 0;
    if ((v67 & 1) == 0)
      return v43 & 1;
  }
  if (*(unsigned __int8 *)(v60 + v61[10]) != *(unsigned __int8 *)(v65 + v61[10]))
    goto LABEL_71;
  if (*(unsigned __int8 *)(v60 + v61[11]) != *(unsigned __int8 *)(v65 + v61[11]))
    goto LABEL_71;
  if (*(unsigned __int8 *)(v60 + v61[12]) != *(unsigned __int8 *)(v65 + v61[12]))
    goto LABEL_71;
  if (*(unsigned __int8 *)(v60 + v61[13]) != *(unsigned __int8 *)(v65 + v61[13]))
    goto LABEL_71;
  v68 = v65;
  v69 = v60;
  v70 = v61;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
    || *(unsigned __int8 *)(v69 + v70[15]) != *(unsigned __int8 *)(v68 + v70[15])
    || *(unsigned __int8 *)(v69 + v70[16]) != *(unsigned __int8 *)(v68 + v70[16])
    || (sub_23E1F8844(*(_QWORD *)(v69 + v70[17]), *(_QWORD *)(v68 + v70[17])) & 1) == 0)
  {
    goto LABEL_71;
  }
  v71 = v140;
  sub_23E1E7C20(v69 + v70[18], v140, &qword_254333218);
  v72 = v68 + v70[18];
  v73 = v139;
  sub_23E1E7C20(v72, v139, &qword_254333218);
  v74 = (uint64_t)v126;
  v75 = (uint64_t)&v126[*(int *)(v135 + 48)];
  sub_23E1E7C20(v71, (uint64_t)v126, &qword_254333218);
  sub_23E1E7C20(v73, v75, &qword_254333218);
  v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
  v77 = v74;
  v78 = v138;
  if (v76(v77, 1, v138) != 1)
  {
    sub_23E1E7C20((uint64_t)v126, v137, &qword_254333218);
    if (v76(v75, 1, v78) != 1)
    {
      v79 = v134;
      sub_23E1E2FDC(v75, v134, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v80 = v137;
      v81 = _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0(v137, v79);
      sub_23E1E2FA0(v79, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_23E1E7C64(v139, &qword_254333218);
      sub_23E1E7C64(v140, &qword_254333218);
      sub_23E1E2FA0(v80, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_23E1E7C64((uint64_t)v126, &qword_254333218);
      if ((v81 & 1) == 0)
        goto LABEL_71;
      goto LABEL_39;
    }
    sub_23E1E7C64(v139, &qword_254333218);
    sub_23E1E7C64(v140, &qword_254333218);
    sub_23E1E2FA0(v137, type metadata accessor for StaticAccessory.DeviceIdentifier);
    goto LABEL_37;
  }
  sub_23E1E7C64(v139, &qword_254333218);
  sub_23E1E7C64(v140, &qword_254333218);
  if (v76(v75, 1, v78) != 1)
  {
LABEL_37:
    v56 = &qword_254333220;
    v57 = (uint64_t)v126;
    goto LABEL_19;
  }
  sub_23E1E7C64((uint64_t)v126, &qword_254333218);
LABEL_39:
  v82 = v123[19];
  v83 = *(unsigned __int8 *)(v124 + v82);
  v84 = *(unsigned __int8 *)(v125 + v82);
  if (v83 == 6)
  {
    v85 = v84 == 6;
    v87 = v124;
    v86 = v125;
    v88 = v123;
    if (!v85)
      goto LABEL_71;
  }
  else
  {
    v43 = 0;
    if (v84 == 6)
      return v43 & 1;
    v85 = v83 == v84;
    v87 = v124;
    v86 = v125;
    v88 = v123;
    if (!v85)
      return v43 & 1;
  }
  v89 = v88[20];
  v90 = *(unsigned __int8 *)(v87 + v89);
  v91 = *(unsigned __int8 *)(v86 + v89);
  if (v90 == 4)
  {
    v85 = v91 == 4;
    v93 = v124;
    v92 = v125;
    v94 = v123;
    if (!v85)
      goto LABEL_71;
  }
  else
  {
    v43 = 0;
    if (v91 == 4)
      return v43 & 1;
    v85 = v90 == v91;
    v93 = v124;
    v92 = v125;
    v94 = v123;
    if (!v85)
      return v43 & 1;
  }
  v95 = v94[21];
  v96 = (_QWORD *)(v93 + v95);
  v97 = *(_QWORD *)(v93 + v95 + 8);
  v98 = (_QWORD *)(v92 + v95);
  v99 = v98[1];
  if (!v97)
  {
    v101 = v124;
    v100 = v125;
    v102 = v123;
    if (v99)
      goto LABEL_71;
LABEL_61:
    v104 = v102[22];
    v105 = *(unsigned __int16 *)(v101 + v104);
    v106 = *(unsigned __int16 *)(v100 + v104);
    if ((~v105 & 0xFEFC) != 0)
    {
      v144[0] = v105;
      if ((~v106 & 0xFEFC) == 0)
        goto LABEL_71;
      v143 = v106;
      if ((_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(v144, &v143) & 1) == 0)
        goto LABEL_71;
    }
    else if ((~v106 & 0xFEFC) != 0)
    {
      goto LABEL_71;
    }
    v107 = v123[23];
    v108 = *(_QWORD *)(v124 + v107);
    v109 = *(_QWORD *)(v125 + v107);
    if (v108)
    {
      if (!v109 || (sub_23E3361B8(v108, v109) & 1) == 0)
        goto LABEL_71;
    }
    else if (v109)
    {
      goto LABEL_71;
    }
    v111 = v123;
    v112 = v132;
    sub_23E1E7C20(v124 + v123[24], v132, &qword_2543332B8);
    v113 = v131;
    sub_23E1E7C20(v125 + v111[24], v131, &qword_2543332B8);
    v114 = (uint64_t)v122;
    v115 = (uint64_t)&v122[*(int *)(v128 + 48)];
    sub_23E1E7C20(v112, (uint64_t)v122, &qword_2543332B8);
    sub_23E1E7C20(v113, v115, &qword_2543332B8);
    v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
    if (v116(v114, 1, v133) == 1)
    {
      sub_23E1E7C64(v131, &qword_2543332B8);
      sub_23E1E7C64(v132, &qword_2543332B8);
      if (v116(v115, 1, v133) == 1)
      {
        sub_23E1E7C64((uint64_t)v122, &qword_2543332B8);
LABEL_76:
        v43 = *(_BYTE *)(v124 + v123[25]) ^ *(_BYTE *)(v125 + v123[25]) ^ 1;
        return v43 & 1;
      }
      goto LABEL_79;
    }
    sub_23E1E7C20((uint64_t)v122, v130, &qword_2543332B8);
    if (v116(v115, 1, v133) == 1)
    {
      sub_23E1E7C64(v131, &qword_2543332B8);
      sub_23E1E7C64(v132, &qword_2543332B8);
      sub_23E1E2FA0(v130, type metadata accessor for StaticSoftwareUpdate);
LABEL_79:
      v56 = &qword_2543332C0;
      v57 = (uint64_t)v122;
      goto LABEL_19;
    }
    sub_23E1E2FDC(v115, v127, type metadata accessor for StaticSoftwareUpdate);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    {
      sub_23E1E2FA0(v127, type metadata accessor for StaticSoftwareUpdate);
      sub_23E1E7C64(v131, &qword_2543332B8);
      sub_23E1E7C64(v132, &qword_2543332B8);
      sub_23E1E2FA0(v130, type metadata accessor for StaticSoftwareUpdate);
      v57 = (uint64_t)v122;
      v56 = &qword_2543332B8;
      goto LABEL_19;
    }
    v117 = v130;
    v118 = v127;
    _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(v130 + *(int *)(v133 + 20), v127 + *(int *)(v133 + 20));
    v120 = v119;
    sub_23E1E2FA0(v118, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64(v131, &qword_2543332B8);
    sub_23E1E7C64(v132, &qword_2543332B8);
    sub_23E1E2FA0(v117, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64((uint64_t)v122, &qword_2543332B8);
    if ((v120 & 1) != 0)
      goto LABEL_76;
LABEL_71:
    v43 = 0;
    return v43 & 1;
  }
  if (!v99)
    goto LABEL_71;
  v85 = *v96 == *v98;
  v101 = v124;
  v100 = v125;
  v102 = v123;
  if (v85 && v97 == v99)
    goto LABEL_61;
  v103 = sub_23E538354();
  v102 = v123;
  v101 = v124;
  v100 = v125;
  v43 = 0;
  if ((v103 & 1) != 0)
    goto LABEL_61;
  return v43 & 1;
}

uint64_t _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v5;
  BOOL v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0xD000000000000010;
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = (unsigned __int16 *)(result + 32);
  while (1)
  {
    v8 = *v5++;
    v7 = v8;
    v9 = v8 >> 14;
    if (v8 >> 14)
    {
      if (v9 != 1 && v7 == 32769)
      {
        v6 = __OFADD__(v4++, 1);
        if (v6)
          goto LABEL_30;
      }
      goto LABEL_4;
    }
    if (v7 >= 2u)
      break;
    v6 = __OFADD__(v3++, 1);
    if (v6)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
LABEL_4:
    if (!--v1)
      goto LABEL_19;
  }
  if (v7 == 2)
  {
    v6 = __OFADD__(v2++, 1);
    if (v6)
      goto LABEL_31;
    goto LABEL_4;
  }
  v6 = __OFADD__(v3++, 1);
  if (!v6)
    goto LABEL_4;
  __break(1u);
LABEL_19:
  if (v4 == 1)
    return 0x2E7674656C707061;
  result = 0x2E646F70656D6F68;
  if (v3 != 2 && v3 != 1)
  {
    result = 0xD000000000000010;
    if (v2 == 2)
      return 0xD000000000000012;
    if (v2 == 1)
      return result;
    return 0xD000000000000010;
  }
  return result;
}

unint64_t sub_23E3FCA80()
{
  unint64_t result;

  result = qword_256D46438;
  if (!qword_256D46438)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EB38, &type metadata for StaticMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46438);
  }
  return result;
}

unint64_t sub_23E3FCAC4()
{
  unint64_t result;

  result = qword_256D46448;
  if (!qword_256D46448)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaSystemComponent.PlaybackState, &type metadata for StaticMediaSystemComponent.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_256D46448);
  }
  return result;
}

unint64_t sub_23E3FCB08()
{
  unint64_t result;

  result = qword_256D46450;
  if (!qword_256D46450)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaProfile.SleepWakeState, &type metadata for StaticMediaProfile.SleepWakeState);
    atomic_store(result, (unint64_t *)&qword_256D46450);
  }
  return result;
}

unint64_t sub_23E3FCB4C()
{
  unint64_t result;

  result = qword_256D46468;
  if (!qword_256D46468)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SymptomError, &type metadata for SymptomError);
    atomic_store(result, (unint64_t *)&qword_256D46468);
  }
  return result;
}

unint64_t sub_23E3FCB90()
{
  unint64_t result;

  result = qword_256D46488;
  if (!qword_256D46488)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaSystemComponent.PlaybackState, &type metadata for StaticMediaSystemComponent.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_256D46488);
  }
  return result;
}

unint64_t sub_23E3FCBD4()
{
  unint64_t result;

  result = qword_256D46490;
  if (!qword_256D46490)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaProfile.SleepWakeState, &type metadata for StaticMediaProfile.SleepWakeState);
    atomic_store(result, (unint64_t *)&qword_256D46490);
  }
  return result;
}

uint64_t sub_23E3FCC18(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D46458);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E3FCC80()
{
  unint64_t result;

  result = qword_256D464A0;
  if (!qword_256D464A0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SymptomError, &type metadata for SymptomError);
    atomic_store(result, (unint64_t *)&qword_256D464A0);
  }
  return result;
}

unint64_t sub_23E3FCCC4(unint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unsigned __int8 v56;

  v6 = v5;
  v48 = a3;
  v49 = a5;
  LOBYTE(v7) = a4;
  v47 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332938);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v44 - v13;
  v15 = type metadata accessor for StaticMediaProfile();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v52 = (uint64_t)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v45 = (uint64_t)v44 - v19;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v20 = sub_23E53803C();
    if (v20)
      goto LABEL_3;
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_3:
      v44[1] = v6;
      v55 = v7 & 1;
      v51 = a1 & 0xC000000000000001;
      v54 = MEMORY[0x24BEE4AF8];
      v21 = 4;
      v50 = a1;
      v46 = v20;
      while (1)
      {
        v6 = v21 - 4;
        if (v51)
          v23 = (id)MEMORY[0x24264F148](v21 - 4, a1);
        else
          v23 = *(id *)(a1 + 8 * v21);
        v7 = v23;
        a1 = v21 - 3;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        v24 = objc_msgSend(v23, sel_mediaProfile);
        if (v24)
        {
          v25 = v24;
          v53 = v21 - 3;
          v26 = (uint64_t)v14;
          v56 = v55;
          v27 = v15;
          v28 = v47;
          swift_bridgeObjectRetain();
          v29 = v48;
          v30 = v16;
          v31 = v12;
          v32 = v49;
          swift_bridgeObjectRetain();
          v33 = (uint64_t)v31;
          v34 = v28;
          v15 = v27;
          v35 = v32;
          v12 = v31;
          v16 = v30;
          sub_23E3F49C0(v25, v34, v29, &v56, v35, v33);
          v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
          if (v36(v12, 1, v27) != 1)
          {
            v14 = (char *)v26;
            sub_23E1E2FDC((uint64_t)v12, v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v15);

            v20 = v46;
            a1 = v53;
            v37 = v36(v14, 1, v15);
            goto LABEL_15;
          }
          sub_23E1E7C64((uint64_t)v12, &qword_254332938);
          v14 = (char *)v26;
          v20 = v46;
          a1 = v53;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);

        v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
LABEL_15:
        if (v37 == 1)
        {
          sub_23E1E7C64((uint64_t)v14, &qword_254332938);
        }
        else
        {
          v38 = v45;
          sub_23E1E2FDC((uint64_t)v14, v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
          sub_23E1E2FDC(v38, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
          v39 = v54;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v39 = sub_23E51E590(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
          v41 = *(_QWORD *)(v39 + 16);
          v40 = *(_QWORD *)(v39 + 24);
          v54 = v39;
          if (v41 >= v40 >> 1)
            v54 = sub_23E51E590(v40 > 1, v41 + 1, 1, v54);
          v42 = v54;
          *(_QWORD *)(v54 + 16) = v41 + 1;
          sub_23E1E2FDC(v52, v42+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        }
        ++v21;
        v22 = a1 == v20;
        a1 = v50;
        if (v22)
        {
          swift_bridgeObjectRelease();
          return v54;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E3FD0B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticMediaProfile();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F98);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticMediaProfile;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333F98);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D9B4();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212C00(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E4016F4(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E3FD3D8(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F98);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v11 = objc_msgSend(a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v12 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v13 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = sub_23E3FCCC4(v12, a3, v13, (char)a2, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v29 = 0;
    v31 = MEMORY[0x24BEE4AF8];
    sub_23E2CAFFC(0, v16, 0);
    v17 = v31;
    v18 = *(_QWORD *)(type metadata accessor for StaticMediaProfile() - 8);
    v19 = *(unsigned __int8 *)(v18 + 80);
    v28[1] = v15;
    v20 = v15 + ((v19 + 32) & ~v19);
    v21 = *(_QWORD *)(v18 + 72);
    do
    {
      v22 = (uint64_t)&v10[*(int *)(v30 + 48)];
      sub_23E1E2F50(v20, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
      v23 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v22, v23);
      v31 = v17;
      v25 = *(_QWORD *)(v17 + 16);
      v24 = *(_QWORD *)(v17 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23E2CAFFC(v24 > 1, v25 + 1, 1);
        v17 = v31;
      }
      *(_QWORD *)(v17 + 16) = v25 + 1;
      sub_23E1E4E3C((uint64_t)v10, v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v25, &qword_254333F98);
      v20 += v21;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v14 = v29;
    if (*(_QWORD *)(v17 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543333D0);
      v26 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v26 = MEMORY[0x24BEE4B00];
LABEL_10:
  v31 = v26;
  sub_23E3FD0B0(v17, 1, &v31);
  swift_bridgeObjectRelease();
  if (!v14)
    return v31;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E3FD690(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E569CF0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E569D10 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E569D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E564730 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xED00006574617453 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6B61577065656C73 && a2 == 0xEE00657461745365 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E569D50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E568D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569D70)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 21;
    else
      return 22;
  }
}

unint64_t sub_23E3FDF78(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticSoftwareUpdate(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  if ((a1 & 1) == 0)
    return v13;
  sub_23E1E7C20(a2, (uint64_t)v8, &qword_2543332B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_2543332B8);
    if (!a3)
      return 0;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v8, (uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
    sub_23E346FDC();
    if (v18 != 8 && (v18 == 3 || v18 == 5))
    {
      v13 = 0xD000000000000015;
      sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
      return v13;
    }
    sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticSoftwareUpdate);
    if (!a3)
      return 0;
  }
  v14 = swift_bridgeObjectRetain();
  v18 = sub_23E24A098(v14);
  sub_23E48FCA4(&v18);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v18 + 16))
  {
    swift_release();
    return 0;
  }
  v15 = *(unsigned __int8 *)(v18 + 32);
  swift_release();
  v13 = 0;
  if (v15 <= 0x13 && ((1 << v15) & 0x80003) != 0)
    return 0xD000000000000018;
  return v13;
}

unint64_t sub_23E3FE198()
{
  unint64_t result;

  result = qword_256D464E8;
  if (!qword_256D464E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EAE8, &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D464E8);
  }
  return result;
}

unint64_t sub_23E3FE1DC()
{
  unint64_t result;

  result = qword_256D464F0;
  if (!qword_256D464F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EA98, &type metadata for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D464F0);
  }
  return result;
}

unint64_t sub_23E3FE220()
{
  unint64_t result;

  result = qword_256D464F8;
  if (!qword_256D464F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EA48, &type metadata for StaticMediaProfile.SleepWakeState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D464F8);
  }
  return result;
}

unint64_t sub_23E3FE264()
{
  unint64_t result;

  result = qword_256D46500;
  if (!qword_256D46500)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E9F8, &type metadata for StaticMediaProfile.SleepWakeState.SleepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46500);
  }
  return result;
}

unint64_t sub_23E3FE2A8()
{
  unint64_t result;

  result = qword_256D46508;
  if (!qword_256D46508)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E9A8, &type metadata for StaticMediaProfile.SleepWakeState.AwakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46508);
  }
  return result;
}

uint64_t sub_23E3FE2EC()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D46538, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
}

uint64_t sub_23E3FE318(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D46548, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  a1[2] = sub_23E1EE1C4(&qword_256D46550, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  a1[3] = sub_23E1EE1C4(&qword_256D3FAA8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  a1[4] = sub_23E1EE1C4(&qword_256D3FA90, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  a1[5] = sub_23E1EE1C4(&qword_256D46558, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  result = sub_23E1EE1C4(&qword_256D46560, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
  a1[6] = result;
  return result;
}

unint64_t sub_23E3FE3E8()
{
  unint64_t result;

  result = qword_256D46568;
  if (!qword_256D46568)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticMediaProfile.SleepWakeState, &type metadata for StaticMediaProfile.SleepWakeState);
    atomic_store(result, (unint64_t *)&qword_256D46568);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticMediaProfile(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  int EnumCaseMultiPayload;
  char *v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int *updated;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  char *__dst;
  void (**__dsta)(char *, _QWORD, uint64_t, uint64_t);
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  uint64_t v96;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23E536F80();
    v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v95 = v7;
    ((void (*)(_QWORD *, _QWORD *))v94)(a1, a2);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    __dst = (char *)a1 + v14;
    v18 = (char *)a2 + v14;
    v19 = sub_23E536F20();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90 = v21;
    v91 = v19;
    v89 = v20;
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    v24 = a3[9];
    v25 = a3[10];
    v26 = (_QWORD *)((char *)a1 + v24);
    v27 = (_QWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
    v29 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    swift_bridgeObjectRetain();
    v94(v31, v32, v95);
    v33 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    v34 = a3[18];
    *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v94((char *)v35, (char *)v36, v95);
      }
      else
      {
        v41 = v36[1];
        *v35 = *v36;
        v35[1] = v41;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v42 = a3[20];
    *((_BYTE *)a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
    *((_BYTE *)a1 + v42) = *((_BYTE *)a2 + v42);
    v43 = a3[21];
    v44 = a3[22];
    v45 = (_QWORD *)((char *)a1 + v43);
    v46 = (_QWORD *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)a2 + v44);
    v48 = a3[24];
    *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    v51 = type metadata accessor for StaticSoftwareUpdate(0);
    v52 = *(_QWORD **)(v51 - 8);
    v53 = (unsigned int (*)(char *, uint64_t, uint64_t))v52[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53(v50, 1, v51))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
LABEL_27:
      *((_BYTE *)a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
      return a1;
    }
    __dsta = (void (**)(char *, _QWORD, uint64_t, uint64_t))v52;
    v94(v49, v50, v95);
    v55 = *(int *)(v51 + 20);
    v56 = &v49[v55];
    v57 = &v50[v55];
    v58 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v60 = v49;
    if (EnumCaseMultiPayload == 2)
    {
      v96 = v51;
      v70 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v70;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v71 = updated[5];
      v72 = &v56[v71];
      v73 = &v57[v71];
      swift_bridgeObjectRetain();
      if (v90(v73, 1, v91))
      {
LABEL_21:
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
LABEL_25:
        v78 = updated[6];
        v79 = &v56[v78];
        v80 = &v57[v78];
        v81 = *((_QWORD *)v80 + 1);
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *((_QWORD *)v79 + 1) = v81;
        v82 = updated[7];
        v83 = &v56[v82];
        v84 = &v57[v82];
        v85 = *((_QWORD *)v84 + 1);
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = v85;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v56[*(int *)(v86 + 48)] = v57[*(int *)(v86 + 48)];
        swift_storeEnumTagMultiPayload();
        v77 = __dsta;
        v51 = v96;
LABEL_26:
        v77[7](v60, 0, 1, v51);
        goto LABEL_27;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          v94(v56, v57, v95);
          v61 = (int *)type metadata accessor for StaticHH2Update(0);
          v56[v61[5]] = v57[v61[5]];
          v62 = v61[6];
          v63 = &v56[v62];
          v64 = &v57[v62];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          *(_QWORD *)v63 = v66;
          *((_QWORD *)v63 + 1) = v65;
          v67 = v61[7];
          v68 = &v56[v67];
          v69 = &v57[v67];
          v68[8] = v69[8];
          *(_QWORD *)v68 = *(_QWORD *)v69;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        v77 = __dsta;
        goto LABEL_26;
      }
      v96 = v51;
      v74 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v74;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v75 = updated[5];
      v72 = &v56[v75];
      v73 = &v57[v75];
      swift_bridgeObjectRetain();
      if (v90(v73, 1, v91))
        goto LABEL_21;
    }
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v72, v73, v91);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v72, 0, 1, v91);
    goto LABEL_25;
  }
  v23 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for StaticMediaProfile(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[8];
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v5(a1 + a2[14], v4);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[18];
  v11 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      v5(v10, v4);
    else
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[24];
  v13 = type metadata accessor for StaticSoftwareUpdate(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if (!(_DWORD)result)
  {
    v5(v12, v4);
    v15 = v12 + *(int *)(v13 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2 || (_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      v16 = v15 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v9(v16, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((_DWORD)result)
        return result;
      v5(v15, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  int EnumCaseMultiPayload;
  char *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (**v75)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  int *updated;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  void *__dst;
  void (**__dsta)(char *, _QWORD, uint64_t, uint64_t);
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;

  v6 = sub_23E536F80();
  v92 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v93 = v6;
  v92(a1, a2);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  __dst = (void *)(a1 + v13);
  v17 = (void *)(a2 + v13);
  v18 = sub_23E536F20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v88 = v20;
  v89 = v18;
  v87 = v19;
  if (v20((char *)v17, 1, v18))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v19 + 16))(__dst, v17, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v22 = a3[9];
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v27 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t, uint64_t, uint64_t))v92)(v29, v30, v93);
  v31 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  if (v37(v34, 1, v35))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      ((void (*)(_QWORD *, _QWORD *, uint64_t))v92)(v33, v34, v93);
    }
    else
    {
      v39 = v34[1];
      *v33 = *v34;
      v33[1] = v39;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v40 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  v41 = a3[21];
  v42 = a3[22];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  v46 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v47 = (char *)(a1 + v46);
  v48 = (char *)(a2 + v46);
  v49 = type metadata accessor for StaticSoftwareUpdate(0);
  v50 = *(_QWORD **)(v49 - 8);
  v51 = (unsigned int (*)(char *, uint64_t, uint64_t))v50[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v51(v48, 1, v49))
  {
    __dsta = (void (**)(char *, _QWORD, uint64_t, uint64_t))v50;
    ((void (*)(char *, char *, uint64_t))v92)(v47, v48, v93);
    v53 = *(int *)(v49 + 20);
    v54 = &v47[v53];
    v55 = &v48[v53];
    v56 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v58 = v47;
    if (EnumCaseMultiPayload == 2)
    {
      v94 = v49;
      v68 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v68;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v69 = updated[5];
      v70 = &v54[v69];
      v71 = &v55[v69];
      swift_bridgeObjectRetain();
      if (v88(v71, 1, v89))
      {
LABEL_19:
        v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_23:
        v76 = updated[6];
        v77 = &v54[v76];
        v78 = &v55[v76];
        v79 = *((_QWORD *)v78 + 1);
        *(_QWORD *)v77 = *(_QWORD *)v78;
        *((_QWORD *)v77 + 1) = v79;
        v80 = updated[7];
        v81 = &v54[v80];
        v82 = &v55[v80];
        v83 = *((_QWORD *)v82 + 1);
        *(_QWORD *)v81 = *(_QWORD *)v82;
        *((_QWORD *)v81 + 1) = v83;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v54[*(int *)(v84 + 48)] = v55[*(int *)(v84 + 48)];
        swift_storeEnumTagMultiPayload();
        v75 = __dsta;
        v49 = v94;
LABEL_24:
        v75[7](v58, 0, 1, v49);
        goto LABEL_25;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v92)(v54, v55, v93);
          v59 = (int *)type metadata accessor for StaticHH2Update(0);
          v54[v59[5]] = v55[v59[5]];
          v60 = v59[6];
          v61 = &v54[v60];
          v62 = &v55[v60];
          v64 = *(_QWORD *)v62;
          v63 = *((_QWORD *)v62 + 1);
          *(_QWORD *)v61 = v64;
          *((_QWORD *)v61 + 1) = v63;
          v65 = v59[7];
          v66 = &v54[v65];
          v67 = &v55[v65];
          v66[8] = v67[8];
          *(_QWORD *)v66 = *(_QWORD *)v67;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        v75 = __dsta;
        goto LABEL_24;
      }
      v94 = v49;
      v72 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v72;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v73 = updated[5];
      v70 = &v54[v73];
      v71 = &v55[v73];
      swift_bridgeObjectRetain();
      if (v88(v71, 1, v89))
        goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v70, v71, v89);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v70, 0, 1, v89);
    goto LABEL_23;
  }
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_25:
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithCopy for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(void *, uint64_t, uint64_t);
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  int v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  int EnumCaseMultiPayload;
  int *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char v57;
  size_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  int v65;
  int *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  uint64_t v98;
  int *updated;
  uint64_t v100;
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  void (*__dst)(uint64_t, uint64_t, uint64_t);
  _QWORD *__dsta;
  char *__dstb;

  v6 = sub_23E536F80();
  v103 = *(_QWORD *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 24);
  __dst(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_23E536F20();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  v101 = (unsigned int (*)(char *, uint64_t, uint64_t))v18;
  v102 = v16;
  v100 = v17;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  __dst(a1 + a3[14], a2 + a3[14], v6);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[18];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v103 + 16))(v26, v27, v6);
      }
      else
      {
        *v26 = *v27;
        v26[1] = v27[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_21;
    }
LABEL_13:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_21;
  }
  if (v32)
  {
    sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    goto LABEL_13;
  }
  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v103 + 16))(v26, v27, v6);
    }
    else
    {
      *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  v34 = a3[21];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[24];
  v38 = a1 + v37;
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for StaticSoftwareUpdate(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42((uint64_t)v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      v45 = *(void (**)(uint64_t, char *, uint64_t))(v103 + 16);
      v45(v38, v39, v6);
      v46 = *(int *)(v40 + 20);
      v47 = (_QWORD *)(v38 + v46);
      v48 = &v39[v46];
      __dsta = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v47 = *(_QWORD *)v48;
        v47[1] = *((_QWORD *)v48 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v74 = updated[5];
        v104 = v47;
        v75 = (char *)v47 + v74;
        v76 = &v48[v74];
        swift_bridgeObjectRetain();
        if (v101(v76, 1, v102))
        {
LABEL_39:
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_48:
          v84 = updated[6];
          v85 = (_QWORD *)((char *)v104 + v84);
          v86 = &v48[v84];
          *v85 = *(_QWORD *)v86;
          v85[1] = *((_QWORD *)v86 + 1);
          v87 = updated[7];
          v88 = (_QWORD *)((char *)v104 + v87);
          v89 = &v48[v87];
          *v88 = *(_QWORD *)v89;
          v88[1] = *((_QWORD *)v89 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v104 + *(int *)(v90 + 48)) = v48[*(int *)(v90 + 48)];
          goto LABEL_49;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v47, v48, *(_QWORD *)(*(__dsta - 1) + 64));
LABEL_50:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
            goto LABEL_51;
          }
          v45((uint64_t)v47, v48, v6);
          v50 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v47 + v50[5]) = v48[v50[5]];
          v51 = v50[6];
          v52 = (_QWORD *)((char *)v47 + v51);
          v53 = &v48[v51];
          *v52 = *(_QWORD *)v53;
          v52[1] = *((_QWORD *)v53 + 1);
          v54 = v50[7];
          v55 = (char *)v47 + v54;
          v56 = &v48[v54];
          v57 = v56[8];
          *(_QWORD *)v55 = *(_QWORD *)v56;
          v55[8] = v57;
          swift_bridgeObjectRetain();
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        *v47 = *(_QWORD *)v48;
        v47[1] = *((_QWORD *)v48 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v77 = updated[5];
        v104 = v47;
        v75 = (char *)v47 + v77;
        v76 = &v48[v77];
        swift_bridgeObjectRetain();
        if (v101(v76, 1, v102))
          goto LABEL_39;
      }
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v75, v76, v102);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v75, 0, 1, v102);
      goto LABEL_48;
    }
    goto LABEL_29;
  }
  if (!v44)
  {
    __dst(v38, (uint64_t)v39, v6);
    if (a1 == a2)
      goto LABEL_51;
    v61 = *(int *)(v40 + 20);
    v62 = (_QWORD *)(v38 + v61);
    v63 = &v39[v61];
    sub_23E1E2FA0((uint64_t)v62, type metadata accessor for StaticSoftwareUpdate.Kind);
    v64 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v65 = swift_getEnumCaseMultiPayload();
    switch(v65)
    {
      case 2:
        *v62 = *(_QWORD *)v63;
        v62[1] = *((_QWORD *)v63 + 1);
        v79 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v80 = v79[5];
        __dstb = (char *)v62 + v80;
        v81 = &v63[v80];
        swift_bridgeObjectRetain();
        if (v101(v81, 1, v102))
        {
LABEL_43:
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dstb, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
LABEL_53:
          v92 = v79[6];
          v93 = (_QWORD *)((char *)v62 + v92);
          v94 = &v63[v92];
          *v93 = *(_QWORD *)v94;
          v93[1] = *((_QWORD *)v94 + 1);
          v95 = v79[7];
          v96 = (_QWORD *)((char *)v62 + v95);
          v97 = &v63[v95];
          *v96 = *(_QWORD *)v97;
          v96[1] = *((_QWORD *)v97 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v62 + *(int *)(v98 + 48)) = v63[*(int *)(v98 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        break;
      case 1:
        *v62 = *(_QWORD *)v63;
        v62[1] = *((_QWORD *)v63 + 1);
        v79 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v83 = v79[5];
        __dstb = (char *)v62 + v83;
        v81 = &v63[v83];
        swift_bridgeObjectRetain();
        if (v101(v81, 1, v102))
          goto LABEL_43;
        break;
      case 0:
        (*(void (**)(_QWORD *, char *, uint64_t))(v103 + 16))(v62, v63, v6);
        v66 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v62 + v66[5]) = v63[v66[5]];
        v67 = v66[6];
        v68 = (_QWORD *)((char *)v62 + v67);
        v69 = &v63[v67];
        *v68 = *(_QWORD *)v69;
        v68[1] = *((_QWORD *)v69 + 1);
        v70 = v66[7];
        v71 = (char *)v62 + v70;
        v72 = &v63[v70];
        v73 = v72[8];
        *(_QWORD *)v71 = *(_QWORD *)v72;
        v71[8] = v73;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      default:
        v58 = *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64);
        v59 = v62;
        v60 = v63;
        goto LABEL_30;
    }
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(__dstb, v81, v102);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(__dstb, 0, 1, v102);
    goto LABEL_53;
  }
  sub_23E1E2FA0(v38, type metadata accessor for StaticSoftwareUpdate);
LABEL_29:
  v58 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
  v59 = (void *)v38;
  v60 = v39;
LABEL_30:
  memcpy(v59, v60, v58);
LABEL_51:
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  return a1;
}

uint64_t initializeWithTake for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int EnumCaseMultiPayload;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *updated;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *__dst;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(const void *, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23E536F20();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v51 = v13;
  if (v52(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v7(a1 + v17, a2 + v17, v6);
  v18 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7((uint64_t)v20, (uint64_t)v21, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(v23 + 64));
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v26 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_WORD *)(a1 + v26) = *(_WORD *)(a2 + v26);
  v27 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  v30 = type metadata accessor for StaticSoftwareUpdate(0);
  v31 = *(_QWORD *)(v30 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v50 = v31;
    v7((uint64_t)v28, (uint64_t)v29, v6);
    v33 = *(int *)(v30 + 20);
    v34 = &v28[v33];
    v35 = &v29[v33];
    v49 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v42 = updated[5];
      __dst = &v34[v42];
      v43 = &v35[v42];
      if (v52(&v35[v42], 1, v12))
      {
LABEL_19:
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_22:
        *(_OWORD *)&v34[updated[6]] = *(_OWORD *)&v35[updated[6]];
        *(_OWORD *)&v34[updated[7]] = *(_OWORD *)&v35[updated[7]];
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v34[*(int *)(v46 + 48)] = v35[*(int *)(v46 + 48)];
        goto LABEL_23;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
LABEL_24:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v28, 0, 1, v30);
          goto LABEL_25;
        }
        v7((uint64_t)v34, (uint64_t)v35, v6);
        v37 = (int *)type metadata accessor for StaticHH2Update(0);
        v34[v37[5]] = v35[v37[5]];
        *(_OWORD *)&v34[v37[6]] = *(_OWORD *)&v35[v37[6]];
        v38 = v37[7];
        v39 = &v34[v38];
        v40 = &v35[v38];
        v39[8] = v40[8];
        *(_QWORD *)v39 = *(_QWORD *)v40;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *(_OWORD *)v34 = *(_OWORD *)v35;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v44 = updated[5];
      __dst = &v34[v44];
      v43 = &v35[v44];
      if (v52(&v35[v44], 1, v12))
        goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(__dst, v43, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v12);
    goto LABEL_22;
  }
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_25:
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithTake for StaticMediaProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(void *, uint64_t, uint64_t);
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void *, uint64_t, uint64_t);
  int v40;
  int v41;
  size_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;
  _OWORD *v60;
  char *v61;
  int EnumCaseMultiPayload;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  size_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  _OWORD *v71;
  char *v72;
  uint64_t v73;
  int v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int *updated;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  char *__dst;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;

  v6 = sub_23E536F80();
  v97 = *(_QWORD *)(v6 - 8);
  v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 40);
  v99(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_23E536F20();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  v95 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
  v96 = v20;
  v94 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v99(a1 + a3[14], a2 + a3[14], v6);
  v33 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v34 = a3[18];
  v35 = (void *)(a1 + v34);
  v36 = (void *)(a2 + v34);
  v37 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      if (a1 == a2)
        goto LABEL_21;
      sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, void *, uint64_t))(v97 + 32))(v35, v36, v6);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      v42 = *(_QWORD *)(v38 + 64);
LABEL_14:
      memcpy(v35, v36, v42);
      goto LABEL_21;
    }
    sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticAccessory.DeviceIdentifier);
LABEL_13:
    v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333218) - 8) + 64);
    goto LABEL_14;
  }
  if (v41)
    goto LABEL_13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void *, void *, uint64_t))(v97 + 32))(v35, v36, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(_QWORD *)(v38 + 64));
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_21:
  v43 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[21];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);
  swift_bridgeObjectRelease();
  v50 = a3[24];
  v51 = a1 + v50;
  v52 = (char *)(a2 + v50);
  v53 = type metadata accessor for StaticSoftwareUpdate(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55((uint64_t)v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      v58 = *(void (**)(uint64_t, char *, uint64_t))(v97 + 32);
      v58(v51, v52, v6);
      v59 = *(int *)(v53 + 20);
      v60 = (_OWORD *)(v51 + v59);
      v61 = &v52[v59];
      v100 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v60 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v80 = updated[5];
        v98 = v60;
        __dst = (char *)v60 + v80;
        v81 = &v61[v80];
        if (v95(&v61[v80], 1, v96))
        {
LABEL_39:
          v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, v81, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
LABEL_48:
          *(_OWORD *)((char *)v98 + updated[6]) = *(_OWORD *)&v61[updated[6]];
          *(_OWORD *)((char *)v98 + updated[7]) = *(_OWORD *)&v61[updated[7]];
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v98 + *(int *)(v90 + 48)) = v61[*(int *)(v90 + 48)];
          goto LABEL_49;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
LABEL_50:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
            goto LABEL_51;
          }
          v58((uint64_t)v60, v61, v6);
          v63 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v60 + v63[5]) = v61[v63[5]];
          *(_OWORD *)((char *)v60 + v63[6]) = *(_OWORD *)&v61[v63[6]];
          v64 = v63[7];
          v65 = (char *)v60 + v64;
          v66 = &v61[v64];
          v65[8] = v66[8];
          *(_QWORD *)v65 = *(_QWORD *)v66;
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        *v60 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v82 = updated[5];
        v98 = v60;
        __dst = (char *)v60 + v82;
        v81 = &v61[v82];
        if (v95(&v61[v82], 1, v96))
          goto LABEL_39;
      }
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(__dst, v81, v96);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v96);
      goto LABEL_48;
    }
    goto LABEL_29;
  }
  if (!v57)
  {
    v99(v51, (uint64_t)v52, v6);
    if (a1 == a2)
      goto LABEL_51;
    v70 = *(int *)(v53 + 20);
    v71 = (_OWORD *)(v51 + v70);
    v72 = &v52[v70];
    sub_23E1E2FA0((uint64_t)v71, type metadata accessor for StaticSoftwareUpdate.Kind);
    v73 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v74 = swift_getEnumCaseMultiPayload();
    switch(v74)
    {
      case 2:
        *v71 = *(_OWORD *)v72;
        v84 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v85 = v84[5];
        v86 = (char *)v71 + v85;
        v87 = &v72[v85];
        if (v95(&v72[v85], 1, v96))
        {
LABEL_43:
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
LABEL_53:
          *(_OWORD *)((char *)v71 + v84[6]) = *(_OWORD *)&v72[v84[6]];
          *(_OWORD *)((char *)v71 + v84[7]) = *(_OWORD *)&v72[v84[7]];
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v71 + *(int *)(v92 + 48)) = v72[*(int *)(v92 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        break;
      case 1:
        *v71 = *(_OWORD *)v72;
        v84 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v89 = v84[5];
        v86 = (char *)v71 + v89;
        v87 = &v72[v89];
        if (v95(&v72[v89], 1, v96))
          goto LABEL_43;
        break;
      case 0:
        (*(void (**)(_OWORD *, char *, uint64_t))(v97 + 32))(v71, v72, v6);
        v75 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v71 + v75[5]) = v72[v75[5]];
        *(_OWORD *)((char *)v71 + v75[6]) = *(_OWORD *)&v72[v75[6]];
        v76 = v75[7];
        v77 = (char *)v71 + v76;
        v78 = &v72[v76];
        v77[8] = v78[8];
        *(_QWORD *)v77 = *(_QWORD *)v78;
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      default:
        v67 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v68 = v71;
        v69 = v72;
        goto LABEL_30;
    }
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v86, v87, v96);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v86, 0, 1, v96);
    goto LABEL_53;
  }
  sub_23E1E2FA0(v51, type metadata accessor for StaticSoftwareUpdate);
LABEL_29:
  v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
  v68 = (void *)v51;
  v69 = v52;
LABEL_30:
  memcpy(v68, v69, v67);
LABEL_51:
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  return a1;
}

uint64_t sub_23E400CD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[18];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[24];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23E400DD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[18];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[24];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState()
{
  return &type metadata for StaticMediaProfile.SleepWakeState;
}

uint64_t _s13HomeDataModel18StaticMediaProfileV14SleepWakeStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E400F34 + 4 * byte_23E54E2D7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E400F68 + 4 * byte_23E54E2D2[v4]))();
}

uint64_t sub_23E400F68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E400F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E400F78);
  return result;
}

uint64_t sub_23E400F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E400F8CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E400F90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E400F98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.CodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.AwakeCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.AwakeCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.SleepCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.SleepCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.UnknownCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys()
{
  return &type metadata for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticMediaProfile.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMediaProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_23E4010D0 + 4 * byte_23E54E2E1[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_23E401104 + 4 * byte_23E54E2DC[v4]))();
}

uint64_t sub_23E401104(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E40110C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E401114);
  return result;
}

uint64_t sub_23E401120(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E401128);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_23E40112C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E401134(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaProfile.CodingKeys()
{
  return &type metadata for StaticMediaProfile.CodingKeys;
}

unint64_t sub_23E401154()
{
  unint64_t result;

  result = qword_256D46570;
  if (!qword_256D46570)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E788, &type metadata for StaticMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46570);
  }
  return result;
}

unint64_t sub_23E40119C()
{
  unint64_t result;

  result = qword_256D46578;
  if (!qword_256D46578)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E980, &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46578);
  }
  return result;
}

unint64_t sub_23E4011E4()
{
  unint64_t result;

  result = qword_256D46580;
  if (!qword_256D46580)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E8A0, &type metadata for StaticMediaProfile.SleepWakeState.AwakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46580);
  }
  return result;
}

unint64_t sub_23E40122C()
{
  unint64_t result;

  result = qword_256D46588;
  if (!qword_256D46588)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E8C8, &type metadata for StaticMediaProfile.SleepWakeState.AwakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46588);
  }
  return result;
}

unint64_t sub_23E401274()
{
  unint64_t result;

  result = qword_256D46590;
  if (!qword_256D46590)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E850, &type metadata for StaticMediaProfile.SleepWakeState.SleepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46590);
  }
  return result;
}

unint64_t sub_23E4012BC()
{
  unint64_t result;

  result = qword_256D46598;
  if (!qword_256D46598)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E878, &type metadata for StaticMediaProfile.SleepWakeState.SleepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46598);
  }
  return result;
}

unint64_t sub_23E401304()
{
  unint64_t result;

  result = qword_256D465A0;
  if (!qword_256D465A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E800, &type metadata for StaticMediaProfile.SleepWakeState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465A0);
  }
  return result;
}

unint64_t sub_23E40134C()
{
  unint64_t result;

  result = qword_256D465A8;
  if (!qword_256D465A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E828, &type metadata for StaticMediaProfile.SleepWakeState.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465A8);
  }
  return result;
}

unint64_t sub_23E401394()
{
  unint64_t result;

  result = qword_256D465B0;
  if (!qword_256D465B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E7B0, &type metadata for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465B0);
  }
  return result;
}

unint64_t sub_23E4013DC()
{
  unint64_t result;

  result = qword_256D465B8;
  if (!qword_256D465B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E7D8, &type metadata for StaticMediaProfile.SleepWakeState.NotHandledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465B8);
  }
  return result;
}

unint64_t sub_23E401424()
{
  unint64_t result;

  result = qword_256D465C0;
  if (!qword_256D465C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E8F0, &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465C0);
  }
  return result;
}

unint64_t sub_23E40146C()
{
  unint64_t result;

  result = qword_256D465C8;
  if (!qword_256D465C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E918, &type metadata for StaticMediaProfile.SleepWakeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465C8);
  }
  return result;
}

unint64_t sub_23E4014B4()
{
  unint64_t result;

  result = qword_256D465D0;
  if (!qword_256D465D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E6F8, &type metadata for StaticMediaProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D465D0);
  }
  return result;
}

unint64_t sub_23E4014FC()
{
  unint64_t result;

  result = qword_256D465D8;
  if (!qword_256D465D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54E720, &type metadata for StaticMediaProfile.CodingKeys);
    atomic_store(result, &qword_256D465D8);
  }
  return result;
}

uint64_t sub_23E401540(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656B617761 && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7065656C73 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C646E6148746F6ELL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E4016F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticMediaProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E40173C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = type metadata accessor for StaticServiceGroup();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (uint64_t)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return v6;
  v34[1] = v1;
  v47 = MEMORY[0x24BEE4AF8];
  sub_23E2CB468(0, v5, 0);
  v6 = v47;
  result = sub_23E26B560(a1);
  v9 = result;
  v10 = 0;
  v12 = v11 & 1;
  v13 = a1 + 64;
  v36 = v5;
  v37 = v8;
  v35 = a1 + 88;
  v38 = a1 + 64;
  while ((v12 & 1) == 0)
  {
    if (v9 < 0 || v9 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    v17 = (unint64_t)v9 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v8)
      goto LABEL_28;
    v42 = v10;
    v43 = v8;
    v18 = v39;
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v40 + 72) * v9, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v45 = v41;
    v46 = sub_23E1EE1C4(&qword_256D40F88, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v44);
    sub_23E1E2FDC(v18, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v47 = v6;
    v21 = *(_QWORD *)(v6 + 16);
    v20 = *(_QWORD *)(v6 + 24);
    v22 = a1;
    if (v21 >= v20 >> 1)
      sub_23E2CB468(v20 > 1, v21 + 1, 1);
    v23 = v45;
    v24 = v46;
    v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v44, v45);
    MEMORY[0x24BDAC7A8](v25);
    v27 = (char *)v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v27);
    sub_23E3D61D4(v21, (uint64_t)v27, &v47, v23, v24);
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
    v14 = 1 << *(_BYTE *)(v22 + 32);
    if (v9 >= v14)
      goto LABEL_29;
    v13 = v38;
    v29 = *(_QWORD *)(v38 + 8 * v17);
    if ((v29 & (1 << v9)) == 0)
      goto LABEL_30;
    a1 = v22;
    if (*(_DWORD *)(v22 + 36) != (_DWORD)v43)
      goto LABEL_31;
    v6 = v47;
    v30 = v29 & (-2 << (v9 & 0x3F));
    if (v30)
    {
      v14 = __clz(__rbit64(v30)) | v9 & 0xFFFFFFFFFFFFFFC0;
      v15 = v36;
      v16 = v42;
    }
    else
    {
      v31 = v17 + 1;
      v32 = (unint64_t)(v14 + 63) >> 6;
      v15 = v36;
      v16 = v42;
      if (v17 + 1 < v32)
      {
        v33 = *(_QWORD *)(v38 + 8 * v31);
        if (!v33)
        {
          v31 = v17 + 2;
          if (v17 + 2 >= v32)
            goto LABEL_4;
          v33 = *(_QWORD *)(v38 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v17)
            {
              v33 = *(_QWORD *)(v35 + 8 * v17++);
              if (v33)
              {
                result = sub_23E23D578(v9, v43, 0);
                v31 = v17 + 2;
                goto LABEL_18;
              }
            }
            result = sub_23E23D578(v9, v43, 0);
            goto LABEL_4;
          }
        }
LABEL_18:
        v14 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    v12 = 0;
    v10 = v16 + 1;
    v8 = v37;
    v9 = v14;
    if (v10 == v15)
      return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E401AA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = type metadata accessor for StaticAccessory(0);
  v2 = *(_QWORD *)(v33 - 8);
  v3 = MEMORY[0x24BDAC7A8](v33);
  v30 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v27 - v6;
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v27 - v9;
  v11 = 0;
  v12 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v17 = v15 & v13;
  v32 = (unint64_t)(v14 + 63) >> 6;
  if ((v15 & v13) == 0)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v11 << 6); ; i = __clz(__rbit64(v22)) + (v11 << 6))
  {
    v20 = *(_QWORD *)(v2 + 72);
    sub_23E1E2F50(*(_QWORD *)(v12 + 56) + v20 * i, (uint64_t)v7, type metadata accessor for StaticAccessory);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v10, type metadata accessor for StaticAccessory);
    if ((v10[*(int *)(v33 + 72)] & 1) != 0)
    {
      result = sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticAccessory);
      if (v17)
        goto LABEL_4;
    }
    else
    {
      sub_23E1E2FDC((uint64_t)v10, v30, type metadata accessor for StaticAccessory);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2058CC(0, *(_QWORD *)(v16 + 16) + 1, 1);
      v16 = v34;
      v25 = *(_QWORD *)(v34 + 16);
      v24 = *(_QWORD *)(v34 + 24);
      v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        v28 = *(_QWORD *)(v34 + 16);
        v29 = v25 + 1;
        sub_23E2058CC(v24 > 1, v25 + 1, 1);
        v25 = v28;
        v26 = v29;
        v16 = v34;
      }
      *(_QWORD *)(v16 + 16) = v26;
      result = sub_23E1E2FDC(v30, v16+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ v25 * v20, type metadata accessor for StaticAccessory);
      if (v17)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v32)
      goto LABEL_29;
    v22 = *(_QWORD *)(v31 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v32)
        goto LABEL_29;
      v22 = *(_QWORD *)(v31 + 8 * v11);
      if (!v22)
      {
        v11 = v21 + 2;
        if (v21 + 2 >= v32)
          goto LABEL_29;
        v22 = *(_QWORD *)(v31 + 8 * v11);
        if (!v22)
        {
          v11 = v21 + 3;
          if (v21 + 3 >= v32)
            goto LABEL_29;
          v22 = *(_QWORD *)(v31 + 8 * v11);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v32)
  {
LABEL_29:
    swift_release();
    return v16;
  }
  v22 = *(_QWORD *)(v31 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v32)
      goto LABEL_29;
    v22 = *(_QWORD *)(v31 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t StaticCameraProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticCameraProfile.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticCameraProfile()
{
  uint64_t result;

  result = qword_254333C10;
  if (!qword_254333C10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StaticCameraProfile.roomIds.getter()
{
  type metadata accessor for StaticCameraProfile();
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticCameraProfile.staticAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticCameraProfile() + 32);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticCameraProfile.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 36));
}

uint64_t StaticCameraProfile.currentAccessMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCameraProfile();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t StaticCameraProfile.snapshotControl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticCameraProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 44), a1, &qword_256D465F8);
}

uint64_t StaticCameraProfile.streamControl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticCameraProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 48), a1, &qword_256D44418);
}

uint64_t StaticCameraProfile.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 52));
}

uint64_t StaticCameraProfile.shouldShowInDashboard.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCameraProfile();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*StaticCameraProfile.shouldShowInDashboard.modify())(_QWORD)
{
  type metadata accessor for StaticCameraProfile();
  return nullsub_1;
}

uint64_t StaticCameraProfile.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticCameraProfile() + 56));
}

uint64_t StaticCameraProfile.isFavorite.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCameraProfile();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*StaticCameraProfile.isFavorite.modify())(_QWORD)
{
  type metadata accessor for StaticCameraProfile();
  return nullsub_1;
}

uint64_t StaticCameraProfile.recordingEventManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticCameraProfile();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 60), a1, &qword_256D46600);
}

uint64_t StaticCameraProfile.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v2 = v1;
  v4 = type metadata accessor for StaticCameraRecordingEventManager();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticCameraStreamControl();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F20();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v36 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v14);
  v37 = (uint64_t)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for StaticCameraSnapshotControl();
  v16 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v38 = (uint64_t)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v21 = (int *)type metadata accessor for StaticCameraProfile();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v1 + v21[6]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v22);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v21[7] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E5374D8();
  sub_23E538474();
  sub_23E538468();
  sub_23E1E7C20(v2 + v21[11], (uint64_t)v20, &qword_256D465F8);
  v23 = v43;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v43) == 1)
  {
    sub_23E538474();
    v24 = v46;
  }
  else
  {
    v25 = (uint64_t)v20;
    v26 = v38;
    sub_23E1E2FDC(v25, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
    sub_23E538474();
    sub_23E5374D8();
    v27 = v37;
    sub_23E1E7C20(v26 + *(int *)(v23 + 20), v37, &qword_2543330E0);
    v29 = v39;
    v28 = v40;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v27, 1, v40) == 1)
    {
      sub_23E538474();
    }
    else
    {
      v30 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v36, v27, v28);
      sub_23E538474();
      sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
    v24 = v46;
    sub_23E1E2FA0(v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
  }
  v31 = v44;
  sub_23E1E7C20(v2 + v21[12], v44, &qword_256D44418);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v24) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v32 = v41;
    sub_23E1E2FDC(v31, v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    sub_23E538474();
    sub_23E5374D8();
    sub_23E538468();
    sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
  }
  sub_23E538474();
  sub_23E538474();
  v33 = v47;
  sub_23E1E7C20(v2 + v21[15], v47, &qword_256D46600);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v33, 1, v49) == 1)
    return sub_23E538474();
  v35 = v42;
  sub_23E1E2FDC(v33, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
  sub_23E538474();
  sub_23E5374D8();
  return sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
}

uint64_t sub_23E4026C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4026F0 + 4 * byte_23E54EB90[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4026F0()
{
  return 1701667182;
}

uint64_t sub_23E402700()
{
  return 0x7364496D6F6F72;
}

uint64_t sub_23E402718()
{
  return 0x656D614E6D6F6F72;
}

unint64_t sub_23E402730()
{
  return 0xD000000000000011;
}

uint64_t sub_23E402778()
{
  return 0x746F687370616E73;
}

uint64_t sub_23E40279C()
{
  return 0x6F436D6165727473;
}

unint64_t sub_23E4027C0()
{
  return 0xD000000000000015;
}

uint64_t sub_23E402814()
{
  unsigned __int8 *v0;

  return sub_23E4026C8(*v0);
}

uint64_t sub_23E40281C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E40B060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E402840()
{
  sub_23E407E3C();
  return sub_23E538570();
}

uint64_t sub_23E402868()
{
  sub_23E407E3C();
  return sub_23E53857C();
}

uint64_t StaticCameraProfile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46608);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E407E3C();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticCameraProfile();
    LOBYTE(v13) = 1;
    sub_23E538270();
    v13 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 3;
    sub_23E5381EC();
    LOBYTE(v13) = 4;
    sub_23E5382AC();
    LOBYTE(v13) = 5;
    sub_23E53827C();
    LOBYTE(v13) = *(_BYTE *)(v3 + *(int *)(v9 + 40));
    v12 = 6;
    sub_23E407E80();
    sub_23E5382AC();
    LOBYTE(v13) = 7;
    type metadata accessor for StaticCameraSnapshotControl();
    sub_23E1EE1C4(&qword_256D46620, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl, (uint64_t)&protocol conformance descriptor for StaticCameraSnapshotControl);
    sub_23E538234();
    LOBYTE(v13) = 8;
    type metadata accessor for StaticCameraStreamControl();
    sub_23E1EE1C4(&qword_256D46628, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraStreamControl, (uint64_t)&protocol conformance descriptor for StaticCameraStreamControl);
    sub_23E538234();
    LOBYTE(v13) = 9;
    sub_23E53827C();
    LOBYTE(v13) = 10;
    sub_23E53827C();
    LOBYTE(v13) = 11;
    type metadata accessor for StaticCameraRecordingEventManager();
    sub_23E1EE1C4(&qword_256D46630, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager, (uint64_t)&protocol conformance descriptor for StaticCameraRecordingEventManager);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCameraProfile.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticCameraProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticCameraProfile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F80();
  v49 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v37 - v14;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46638);
  v16 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (int *)type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23E407E3C();
  v43 = v18;
  v21 = v46;
  sub_23E5384E0();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  v38 = v9;
  v39 = v13;
  v46 = v16;
  LOBYTE(v51) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v22 = v10;
  v23 = v48;
  v24 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v24(v48, v15, v22);
  LOBYTE(v51) = 1;
  v25 = sub_23E538144();
  v26 = v47;
  v27 = (uint64_t *)&v23[v47[5]];
  *v27 = v25;
  v27[1] = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v50 = 2;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v23[v26[6]] = v51;
  LOBYTE(v51) = 3;
  v29 = sub_23E5380D8();
  v30 = (uint64_t *)&v23[v26[7]];
  *v30 = v29;
  v30[1] = v31;
  LOBYTE(v51) = 4;
  v32 = v39;
  sub_23E538180();
  v24(&v23[v26[8]], v32, v22);
  LOBYTE(v51) = 5;
  v23[v26[9]] = sub_23E538150() & 1;
  v50 = 6;
  sub_23E407EC4();
  sub_23E538180();
  v23[v26[10]] = v51;
  type metadata accessor for StaticCameraSnapshotControl();
  LOBYTE(v51) = 7;
  sub_23E1EE1C4(&qword_256D46648, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl, (uint64_t)&protocol conformance descriptor for StaticCameraSnapshotControl);
  v33 = (uint64_t)v38;
  sub_23E538108();
  sub_23E1E4E3C(v33, (uint64_t)&v23[v26[11]], &qword_256D465F8);
  type metadata accessor for StaticCameraStreamControl();
  LOBYTE(v51) = 8;
  sub_23E1EE1C4(&qword_256D46650, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraStreamControl, (uint64_t)&protocol conformance descriptor for StaticCameraStreamControl);
  v34 = (uint64_t)v42;
  sub_23E538108();
  sub_23E1E4E3C(v34, (uint64_t)&v23[v26[12]], &qword_256D44418);
  LOBYTE(v51) = 9;
  v48[v47[13]] = sub_23E538150() & 1;
  LOBYTE(v51) = 10;
  v48[v47[14]] = sub_23E538150() & 1;
  type metadata accessor for StaticCameraRecordingEventManager();
  LOBYTE(v51) = 11;
  sub_23E1EE1C4(&qword_256D46658, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager, (uint64_t)&protocol conformance descriptor for StaticCameraRecordingEventManager);
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v44);
  v35 = (uint64_t)v48;
  sub_23E1E4E3C(v41, (uint64_t)&v48[v47[15]], &qword_256D46600);
  sub_23E1E2F50(v35, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  return sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E403520()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticCameraProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E403560()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticCameraProfile.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E403598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraProfile.init(from:)(a1, a2);
}

uint64_t sub_23E4035AC(_QWORD *a1)
{
  return StaticCameraProfile.encode(to:)(a1);
}

void StaticCameraProfile.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

void StaticCameraProfile.tileIcon.getter(HomeDataModel::Icon *a1@<X8>)
{
  Swift::String v1;

  v1._countAndFlagsBits = 0x69662E6F65646976;
  v1._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(a1, v1);
}

uint64_t StaticCameraProfile.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t StaticCameraProfile.foregroundColor.getter()
{
  return sub_23E53737C();
}

uint64_t StaticCameraProfile.isDoubleHigh.getter()
{
  return 0;
}

BOOL StaticCameraProfile.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticCameraProfile();
  sub_23E1E7C20(v0 + *(int *)(v4 + 48), (uint64_t)v3, &qword_256D44418);
  v5 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v3, &qword_256D44418);
    return 0;
  }
  else
  {
    v7 = v3[*(int *)(v5 + 20)];
    sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    return v7 == 2;
  }
}

uint64_t StaticCameraProfile.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticCameraProfile.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_23E403744(HomeDataModel::Icon *a1@<X8>)
{
  Swift::String v1;

  v1._countAndFlagsBits = 0x69662E6F65646976;
  v1._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(a1, v1);
}

uint64_t sub_23E403760()
{
  return sub_23E53737C();
}

uint64_t sub_23E403774(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

uint64_t sub_23E403780(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

BOOL sub_23E40378C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(v1 + *(int *)(a1 + 48), (uint64_t)v5, &qword_256D44418);
  v6 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D44418);
    return 0;
  }
  else
  {
    v8 = v5[*(int *)(v6 + 20)];
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    return v8 == 2;
  }
}

uint64_t sub_23E403868(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

unint64_t sub_23E403878()
{
  return 0xD000000000000013;
}

uint64_t sub_23E403898@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  unsigned int v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  id v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  void *v83;
  unint64_t v84;
  unsigned int v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  id v89;
  id v90;
  void *v91;
  char v92;
  id v93;
  void *v94;
  char v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void *v100;
  unsigned int (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  id v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  id v112;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v106 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v99 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v108 = (uint64_t)&v99 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23E536F80();
  v21 = *(_QWORD *)(v110 - 8);
  v22 = MEMORY[0x24BDAC7A8](v110);
  v107 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v111 = (char *)&v99 - v24;
  v25 = (int *)type metadata accessor for StaticCameraProfile();
  v109 = *((_QWORD *)v25 - 1);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = a1;
  v28 = objc_msgSend(a1, sel_accessory);
  if (!v28)
    goto LABEL_7;
  v29 = v28;
  v30 = objc_msgSend(v28, sel_home);
  if (!v30)
  {

LABEL_7:
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v109 + 56))(a4, 1, 1, v25);
  }
  v103 = v30;
  v105 = v29;
  v99 = v10;
  v100 = a3;
  v31 = objc_msgSend(v112, sel_accessory);
  v102 = a4;
  v104 = v21;
  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, 1, 1, v110);
    v39 = v108;
    goto LABEL_9;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, sel_uniqueIdentifier);

  v34 = v107;
  sub_23E536F68();

  v35 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v36 = v34;
  v37 = v110;
  v35(v20, v36, v110);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v37);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v37);
  v39 = v108;
  if (v38 == 1)
  {
LABEL_9:
    sub_23E536F74();
    sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
    goto LABEL_10;
  }
  v35(v111, v20, v110);
LABEL_10:
  if (*(_QWORD *)(a2 + 16) && (v41 = sub_23E1E3300((uint64_t)v111), (v42 & 1) != 0))
  {
    v43 = v41;
    v44 = *(_QWORD *)(a2 + 56);
    v45 = type metadata accessor for StaticAccessory(0);
    v46 = *(_QWORD *)(v45 - 8);
    v47 = v44 + *(_QWORD *)(v46 + 72) * v43;
    v39 = v108;
    sub_23E1E2F50(v47, v108, type metadata accessor for StaticAccessory);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v39, 0, 1, v45);
  }
  else
  {
    v48 = type metadata accessor for StaticAccessory(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v39, 1, 1, v48);
  }
  swift_bridgeObjectRelease();
  v49 = (char *)objc_msgSend(v105, sel_room);
  if (!v49)
    v49 = (char *)objc_msgSend(v103, sel_roomForEntireHome);
  v50 = objc_msgSend(v112, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E7C20(v39, (uint64_t)v16, &qword_254333468);
  v51 = type metadata accessor for StaticAccessory(0);
  v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48);
  v53 = v52(v16, 1, v51);
  v101 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
  if (v53 == 1)
  {
    sub_23E1E7C64((uint64_t)v16, &qword_254333468);
    v54 = objc_msgSend(v49, sel_name);
    v55 = sub_23E53755C();
    v57 = v56;

  }
  else
  {
    v58 = (uint64_t *)&v16[*(int *)(v51 + 20)];
    v55 = *v58;
    v57 = v58[1];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
  }
  v59 = v49;
  v60 = (uint64_t *)&v27[v25[5]];
  *v60 = v55;
  v60[1] = v57;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v61 = v104;
  v62 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_23E539650;
  v64 = v63 + v62;
  v65 = objc_msgSend(v59, sel_uniqueIdentifier);
  v66 = v107;
  sub_23E536F68();

  v67 = v66;
  v68 = v110;
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v64, v67, v110);
  v69 = sub_23E2CD9CC(v63);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)&v27[v25[6]] = v69;
  v107 = v59;
  v70 = objc_msgSend(v59, sel_name);
  v71 = sub_23E53755C();
  v73 = v72;

  v74 = (uint64_t *)&v27[v25[7]];
  *v74 = v71;
  v74[1] = v73;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(&v27[v25[8]], v111, v68);
  v75 = v108;
  v76 = v106;
  sub_23E1E7C20(v108, v106, &qword_254333468);
  if (v101(v76, 1, v51) == 1)
  {
    sub_23E1E7C64(v76, &qword_254333468);
    v77 = 0;
  }
  else
  {
    v77 = *(_BYTE *)(v76 + *(int *)(v51 + 108));
    sub_23E1E2FA0(v76, type metadata accessor for StaticAccessory);
  }
  v79 = (uint64_t)v99;
  v78 = v100;
  v80 = v109;
  v27[v25[9]] = v77;
  v81 = v112;
  v82 = objc_msgSend(v81, sel_userSettings);
  if (!v82)
  {

    goto LABEL_26;
  }
  v83 = v82;
  v84 = (unint64_t)objc_msgSend(v82, sel_currentAccessMode);

  if (v84 > 3)
  {
LABEL_26:
    LOBYTE(v85) = 0;
    goto LABEL_27;
  }
  v85 = 0x2040301u >> (8 * v84);
LABEL_27:
  v27[v25[10]] = v85;
  v86 = (uint64_t)&v27[v25[11]];
  v87 = v81;
  sub_23E2DBE24(v87, v86);
  v88 = (uint64_t)&v27[v25[12]];
  v89 = v87;
  sub_23E2C6260(v89, v88);
  v90 = objc_msgSend(v89, sel_accessory);
  if (v90)
  {
    v91 = v90;
    v92 = HMAccessory.shouldShowInDashboard.getter();

  }
  else
  {
    v92 = 0;
  }
  v27[v25[13]] = v92 & 1;
  v93 = objc_msgSend(v89, sel_accessory);
  if (v93)
  {
    v94 = v93;
    v95 = HMAccessory.isFavorite.getter();

  }
  else
  {
    v95 = 0;
  }
  v27[v25[14]] = v95 & 1;
  v96 = objc_msgSend(v89, sel_uniqueIdentifier);
  sub_23E536F68();

  v97 = type metadata accessor for StaticCameraRecordingEventManager();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v79, 0, 1, v97);

  sub_23E1E7C64(v75, &qword_254333468);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v111, v110);
  sub_23E1E4E3C(v79, (uint64_t)&v27[v25[15]], &qword_256D46600);
  v98 = v102;
  sub_23E1E2FDC((uint64_t)v27, v102, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v80 + 56))(v98, 0, 1, v25);
}

uint64_t StaticCameraProfile.controller.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v1 = v0;
  if (qword_256D3EDF0 != -1)
    swift_once();
  v2 = sub_23E34E234();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_23E1E3300(v1), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
    swift_retain();
  }
  else
  {
    v5 = 0;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t Array<A>.controllers.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD v32[2];
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BEE4AF8];
  v40 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v35 = v8;
    v36 = v5;
    v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v37 = *(_QWORD *)(v10 + 72);
    v38 = v6;
    v32[1] = a1;
    swift_bridgeObjectRetain();
    v33 = v4;
    v34 = v12;
    while (1)
    {
      sub_23E1E2F50(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      if (qword_256D3EDF0 != -1)
        swift_once();
      v16 = qword_256D44050;
      swift_getKeyPath();
      v39 = v16;
      sub_23E1EE1C4((unint64_t *)&qword_256D44060, (uint64_t (*)(uint64_t))type metadata accessor for CamerasDataModel, (uint64_t)&protocol conformance descriptor for CamerasDataModel);
      sub_23E537070();
      swift_release();
      v17 = v16 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_23E1E7C20(v17, (uint64_t)v4, &qword_254333F50);
      v18 = v38;
      v19 = v4;
      v20 = (uint64_t)v4;
      v21 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v19, 1, v36) != 1)
        break;
      sub_23E1E7C64(v20, &qword_254333F50);
      v4 = (char *)v20;
      if (!*(_QWORD *)(MEMORY[0x24BEE4B00] + 16))
        goto LABEL_3;
LABEL_16:
      sub_23E1E3300((uint64_t)v12);
      if ((v30 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        v31 = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        MEMORY[0x24264EA70](v31);
        if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
        goto LABEL_4;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
LABEL_4:
      v15 += v37;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return v40;
      }
    }
    v22 = v21;
    v23 = (uint64_t)v35;
    v24 = v22;
    (*(void (**)(char *, uint64_t))(v18 + 32))(v35, v20);
    swift_getKeyPath();
    v39 = v16;
    sub_23E537070();
    swift_release();
    v25 = (uint64_t *)(v16 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
    swift_beginAccess();
    v26 = *v25;
    if (*(_QWORD *)(v26 + 16))
    {
      swift_bridgeObjectRetain();
      v27 = sub_23E1E3300(v23);
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v23, v24);
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v23, v24);
    v29 = MEMORY[0x24BEE4B00];
LABEL_15:
    v4 = v33;
    v12 = v34;
    if (!*(_QWORD *)(v29 + 16))
      goto LABEL_3;
    goto LABEL_16;
  }
  return result;
}

uint64_t ArraySlice<A>.controllers.getter(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v21)
  {
    if ((v21 < 0) ^ v20 | (v21 == 0))
    {
      __break(1u);
      return result;
    }
    v39 = v14;
    v22 = *(_QWORD *)(v16 + 72);
    v35 = a1;
    swift_unknownObjectRetain();
    v40 = v22;
    v23 = a2 + v22 * a3;
    v37 = v10;
    v38 = v18;
    v36 = v12;
    while (1)
    {
      sub_23E1E2F50(v23, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      if (qword_256D3EDF0 != -1)
        swift_once();
      v24 = qword_256D44050;
      swift_getKeyPath();
      v41 = v24;
      sub_23E1EE1C4((unint64_t *)&qword_256D44060, (uint64_t (*)(uint64_t))type metadata accessor for CamerasDataModel, (uint64_t)&protocol conformance descriptor for CamerasDataModel);
      sub_23E537070();
      swift_release();
      v25 = v24 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_23E1E7C20(v25, (uint64_t)v10, &qword_254333F50);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
        break;
      sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
      if (!*(_QWORD *)(MEMORY[0x24BEE4B00] + 16))
        goto LABEL_4;
LABEL_17:
      sub_23E1E3300((uint64_t)v18);
      if ((v33 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        v34 = sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        MEMORY[0x24264EA70](v34);
        if (*(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
        goto LABEL_5;
      }
LABEL_4:
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
LABEL_5:
      v23 += v40;
      if (!--v21)
      {
        swift_unknownObjectRelease();
        return v42;
      }
    }
    v26 = v10;
    v27 = (uint64_t)v39;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v26, v11);
    swift_getKeyPath();
    v41 = v24;
    sub_23E537070();
    swift_release();
    v28 = (uint64_t *)(v24 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
    swift_beginAccess();
    v29 = *v28;
    if (*(_QWORD *)(v29 + 16))
    {
      swift_bridgeObjectRetain();
      v30 = sub_23E1E3300(v27);
      if ((v31 & 1) != 0)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v12 = v36;
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v11);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    v12 = v36;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v11);
    v32 = MEMORY[0x24BEE4B00];
LABEL_16:
    v10 = v37;
    v18 = v38;
    if (!*(_QWORD *)(v32 + 16))
      goto LABEL_4;
    goto LABEL_17;
  }
  return result;
}

uint64_t StaticCameraProfile.NearbyStaticItems.services.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.NearbyStaticItems.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCameraProfile.NearbyStaticItems.serviceGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static StaticCameraProfile.NearbyStaticItems.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_23E1F8844(*a1, *a2) & 1) != 0 && (sub_23E1F8F68(v2, v4) & 1) != 0)
    return sub_23E1F45A0(v3, v5);
  else
    return 0;
}

uint64_t StaticCameraProfile.NearbyStaticItems.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  swift_bridgeObjectRetain();
  sub_23E238230(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238254(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E237CF8(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E404A8C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F737365636361;
  if (*v0 != 1)
    v1 = 0x4765636976726573;
  if (*v0)
    return v1;
  else
    return 0x7365636976726573;
}

uint64_t sub_23E404AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E40B54C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E404B20()
{
  sub_23E407F18();
  return sub_23E538570();
}

uint64_t sub_23E404B48()
{
  sub_23E407F18();
  return sub_23E53857C();
}

uint64_t StaticCameraProfile.NearbyStaticItems.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46668);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E407F18();
  sub_23E5384EC();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  sub_23E297E64();
  sub_23E5382AC();
  if (!v2)
  {
    v10 = v13;
    v16 = v14;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
    sub_23E297A20();
    sub_23E5382AC();
    v16 = v10;
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
    sub_23E297DC8();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCameraProfile.NearbyStaticItems.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238254((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E237CF8((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t StaticCameraProfile.NearbyStaticItems.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46678);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E407F18();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v15 = 0;
  sub_23E298768();
  sub_23E538180();
  v9 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
  v15 = 1;
  sub_23E298324();
  swift_bridgeObjectRetain();
  sub_23E538180();
  v10 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
  v15 = 2;
  sub_23E2986CC();
  v14 = v10;
  swift_bridgeObjectRetain();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v14;
  *a2 = v9;
  a2[1] = v12;
  a2[2] = v11;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E405044(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  if ((sub_23E1F8844(*a1, *a2) & 1) != 0 && (sub_23E1F8F68(v2, v4) & 1) != 0)
    return sub_23E1F45A0(v3, v5);
  else
    return 0;
}

uint64_t sub_23E4050B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238254((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E237CF8((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E405148(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  swift_bridgeObjectRetain();
  sub_23E238230(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238254(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E237CF8(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4051C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E238254((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E237CF8((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E405258@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticCameraProfile.NearbyStaticItems.init(from:)(a1, a2);
}

uint64_t sub_23E40526C(_QWORD *a1)
{
  return StaticCameraProfile.NearbyStaticItems.encode(to:)(a1);
}

unint64_t StaticCameraProfile.nearbyItems(using:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t result;
  unint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  unint64_t *v56;

  v3 = v2;
  v54 = a1;
  v56 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v53 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v53 - v13;
  if (qword_254334098 != -1)
    swift_once();
  v15 = (void *)qword_254333F18;
  v16 = type metadata accessor for StaticCameraProfile();
  v17 = v2 + *(int *)(v16 + 32);
  v18 = (void *)sub_23E536F44();
  v19 = objc_msgSend(v15, sel_accessoryFor_, v18);

  if (!v19)
    goto LABEL_6;
  sub_23E267924(*(_QWORD *)(v3 + *(int *)(v16 + 24)), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
LABEL_6:
    v20 = MEMORY[0x24BEE4AF8];
    v21 = sub_23E2073C0(MEMORY[0x24BEE4AF8]);
    v22 = sub_23E207388(v20);
    result = sub_23E2072FC(v20);
    v24 = v56;
    *v56 = v21;
    v24[1] = v22;
    v24[2] = result;
    return result;
  }
  v25 = v14;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
  v26 = HMAccessory.customNearbyAccessoryIdentifiers.getter();
  if (!v26)
  {
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v42 = v55;
    v41(v55, v17, v7);
    v43 = v53;
    v41(v53, (uint64_t)v25, v7);
    v44 = (int *)type metadata accessor for StateSnapshot(0);
    v45 = *(_QWORD *)(v54 + v44[15]);
    v46 = *(_QWORD *)(v54 + v44[8]);
    v47 = *(_QWORD *)(v54 + v44[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v56;
    v34 = (uint64_t)v42;
    v36 = (uint64_t)v43;
    v37 = v45;
    v38 = v46;
    v39 = v47;
    v40 = 0;
    goto LABEL_11;
  }
  v27 = v26;
  if (*(_QWORD *)(v26 + 16))
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v28(v55, v17, v7);
    v29 = v53;
    v28(v53, (uint64_t)v25, v7);
    v30 = (int *)type metadata accessor for StateSnapshot(0);
    v31 = *(_QWORD *)(v54 + v30[15]);
    v32 = *(_QWORD *)(v54 + v30[8]);
    v33 = *(_QWORD *)(v54 + v30[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = (uint64_t)v55;
    v35 = v56;
    v36 = (uint64_t)v29;
    v37 = v31;
    v38 = v32;
    v39 = v33;
    v40 = v27;
LABEL_11:
    sub_23E405608(v34, v36, v37, v38, v39, v40, v35);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v25, v7);
  }
  swift_bridgeObjectRelease();
  v48 = MEMORY[0x24BEE4AF8];
  v49 = sub_23E2073C0(MEMORY[0x24BEE4AF8]);
  v50 = sub_23E207388(v48);
  v51 = sub_23E2072FC(v48);

  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  v52 = v56;
  *v56 = v49;
  v52[1] = v50;
  v52[2] = v51;
  return result;
}

uint64_t sub_23E405608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  int isUniquelyReferenced_nonNull_native;
  unint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t (*v84)();
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)();
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, uint64_t);
  int v122;
  char v123;
  unint64_t v124;
  uint64_t v125;
  _BOOL8 v126;
  uint64_t v127;
  char v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t result;
  unint64_t v136;
  unint64_t *v137;
  uint64_t v138;
  unint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  __int128 v167;
  unint64_t v168;
  unint64_t v169;

  v144 = a6;
  v145 = a4;
  v141 = a3;
  v154 = a2;
  v161 = a1;
  v139 = a7;
  v8 = 0;
  v148 = type metadata accessor for StaticService();
  v160 = *(_QWORD *)(v148 - 8);
  v9 = MEMORY[0x24BDAC7A8](v148);
  v142 = (uint64_t)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v147 = (char *)&v138 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v159 = (uint64_t)&v138 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v157 = (uint64_t)&v138 - v15;
  v16 = sub_23E536F80();
  v165 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v155 = (uint64_t)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v150 = (char *)&v138 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v156 = (uint64_t)&v138 - v21;
  v153 = type metadata accessor for StaticAccessory(0);
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v151 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for StaticServiceGroup();
  v162 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v158 = (uint64_t)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v138 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v138 - v29;
  *(_QWORD *)&v167 = MEMORY[0x24BEE4B08];
  v31 = a5 + 64;
  v32 = 1 << *(_BYTE *)(a5 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(a5 + 64);
  v35 = (unint64_t)(v32 + 63) >> 6;
  v163 = a5;
  swift_bridgeObjectRetain_n();
  v140 = 0;
  while (1)
  {
    if (v34)
    {
      v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v37 = v36 | (v8 << 6);
      goto LABEL_5;
    }
    v40 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (v40 >= v35)
      goto LABEL_25;
    v41 = *(_QWORD *)(v31 + 8 * v40);
    ++v8;
    if (!v41)
    {
      v8 = v40 + 1;
      if (v40 + 1 >= v35)
        goto LABEL_25;
      v41 = *(_QWORD *)(v31 + 8 * v8);
      if (!v41)
      {
        v8 = v40 + 2;
        if (v40 + 2 >= v35)
          goto LABEL_25;
        v41 = *(_QWORD *)(v31 + 8 * v8);
        if (!v41)
        {
          v8 = v40 + 3;
          if (v40 + 3 >= v35)
            goto LABEL_25;
          v41 = *(_QWORD *)(v31 + 8 * v8);
          if (!v41)
          {
            v8 = v40 + 4;
            if (v40 + 4 >= v35)
              goto LABEL_25;
            v41 = *(_QWORD *)(v31 + 8 * v8);
            if (!v41)
              break;
          }
        }
      }
    }
LABEL_24:
    v34 = (v41 - 1) & v41;
    v37 = __clz(__rbit64(v41)) + (v8 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(v163 + 56) + *(_QWORD *)(v162 + 72) * v37, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FDC((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v38 = swift_bridgeObjectRetain();
    v39 = sub_23E4FB788(v38);
    sub_23E268DF8(v39);
    sub_23E1E2FA0((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  }
  v42 = v40 + 5;
  if (v42 >= v35)
    goto LABEL_25;
  v41 = *(_QWORD *)(v31 + 8 * v42);
  if (v41)
  {
    v8 = v42;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v42 + 1;
    if (__OFADD__(v42, 1))
      goto LABEL_120;
    if (v8 >= v35)
      break;
    v41 = *(_QWORD *)(v31 + 8 * v8);
    ++v42;
    if (v41)
      goto LABEL_24;
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRelease();
  v43 = v167;
  v168 = MEMORY[0x24BEE4B00];
  v169 = MEMORY[0x24BEE4B00];
  v44 = v145;
  v45 = *(_QWORD *)(v145 + 16);
  v164 = v16;
  v146 = v167;
  if (!v45)
  {
LABEL_45:
    v78 = v141;
    v73 = v148;
    goto LABEL_46;
  }
  v46 = sub_23E1E3300(v161);
  if ((v47 & 1) == 0)
  {
    v78 = v141;
    v73 = v148;
    goto LABEL_43;
  }
  v48 = v151;
  v49 = sub_23E1E2F50(*(_QWORD *)(v44 + 56) + *(_QWORD *)(v152 + 72) * v46, (uint64_t)v151, type metadata accessor for StaticAccessory);
  v50 = *(_QWORD *)&v48[*(int *)(v153 + 80)];
  MEMORY[0x24BDAC7A8](v49);
  *(&v138 - 2) = (uint64_t)v48;
  swift_bridgeObjectRetain();
  v51 = v140;
  v52 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)(&v138 - 4), v50);
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v48, type metadata accessor for StaticAccessory);
  v43 = v146;
  swift_bridgeObjectRetain();
  v53 = sub_23E40896C(v52, v43);
  v140 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = *(_QWORD *)(v53 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v55 = v160;
  v56 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v152 = v53;
  v57 = v53 + v56;
  swift_beginAccess();
  v58 = *(_QWORD *)(v55 + 72);
  v153 = *(_QWORD *)(v165 + 16);
  v59 = type metadata accessor for StaticService;
  v60 = v164;
  v61 = v156;
  ((void (*)(uint64_t, uint64_t, uint64_t))v153)(v156, v57, v164);
  while (1)
  {
    v62 = v59;
    sub_23E1E2F50(v57, v157, (uint64_t (*)(_QWORD))v59);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v64 = v169;
    v166 = (_QWORD *)v169;
    v169 = 0x8000000000000000;
    v66 = sub_23E1E3300(v61);
    v67 = *(_QWORD *)(v64 + 16);
    v68 = (v65 & 1) == 0;
    v69 = v67 + v68;
    if (__OFADD__(v67, v68))
      goto LABEL_117;
    v70 = v65;
    if (*(_QWORD *)(v64 + 24) >= v69)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23E1E70F0();
    }
    else
    {
      sub_23E1FDD24(v69, isUniquelyReferenced_nonNull_native);
      v71 = sub_23E1E3300(v156);
      if ((v70 & 1) != (v72 & 1))
        goto LABEL_122;
      v66 = v71;
    }
    v73 = v148;
    v59 = v62;
    v74 = v166;
    if ((v70 & 1) != 0)
    {
      sub_23E1EA8B4(v157, v166[7] + v66 * v58, (uint64_t (*)(_QWORD))v62);
      v61 = v156;
    }
    else
    {
      v166[(v66 >> 6) + 8] |= 1 << v66;
      v61 = v156;
      ((void (*)(unint64_t, uint64_t, uint64_t))v153)(v74[6] + *(_QWORD *)(v165 + 72) * v66, v156, v60);
      sub_23E1E2FDC(v157, v74[7] + v66 * v58, (uint64_t (*)(_QWORD))v62);
      v75 = v74[2];
      v76 = __OFADD__(v75, 1);
      v77 = v75 + 1;
      if (v76)
        goto LABEL_118;
      v74[2] = v77;
      v74 = v166;
    }
    v169 = (unint64_t)v74;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v61, v60);
    v57 += v58;
    if (!--v54)
      break;
    ((void (*)(uint64_t, uint64_t, uint64_t))v153)(v61, v57, v60);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  v78 = v141;
LABEL_43:
  v43 = v146;
LABEL_46:
  v79 = 0;
  v80 = *(_QWORD *)(v78 + 64);
  v156 = v78 + 64;
  v81 = 1 << *(_BYTE *)(v78 + 32);
  if (v81 < 64)
    v82 = ~(-1 << v81);
  else
    v82 = -1;
  v83 = v82 & v80;
  v157 = (unint64_t)(v81 + 63) >> 6;
  v143 = v43 + 56;
  v84 = type metadata accessor for StaticService;
  v85 = (uint64_t)v147;
  while (2)
  {
    if (v83)
    {
      v86 = __clz(__rbit64(v83));
      v83 &= v83 - 1;
      v87 = v86 | (v79 << 6);
LABEL_67:
      v90 = *(_QWORD *)(v160 + 72);
      v91 = v159;
      sub_23E1E2F50(*(_QWORD *)(v78 + 56) + v90 * v87, v159, (uint64_t (*)(_QWORD))v84);
      v92 = v84;
      sub_23E1E2FDC(v91, v85, (uint64_t (*)(_QWORD))v84);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      if ((sub_23E537514() & 1) != 0)
        goto LABEL_50;
      v93 = *(unsigned __int8 *)(v85 + *(int *)(v73 + 84));
      if ((v93 - 5) < 4)
        goto LABEL_50;
      if (v93 != 32)
      {
        if (v93 == 35)
        {
          sub_23E4065B0(v85, v145, v144, (uint64_t)&v169, (uint64_t)&v168);
          goto LABEL_51;
        }
        v94 = *(_QWORD *)(v85 + *(int *)(v73 + 56));
        if (!*(_QWORD *)(v94 + 16))
        {
LABEL_92:
          v73 = v148;
          goto LABEL_51;
        }
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        swift_bridgeObjectRetain();
        v95 = sub_23E5374CC();
        v96 = -1 << *(_BYTE *)(v94 + 32);
        v97 = v95 & ~v96;
        v153 = v94 + 56;
        if (((*(_QWORD *)(v94 + 56 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) != 0)
        {
          v149 = ~v96;
          v152 = *(_QWORD *)(v165 + 72);
          v151 = *(char **)(v165 + 16);
          while (1)
          {
            v98 = v94;
            v99 = *(_QWORD *)(v94 + 48) + v152 * v97;
            v100 = v150;
            v101 = v164;
            ((void (*)(char *, unint64_t, uint64_t))v151)(v150, v99, v164);
            v102 = sub_23E537514();
            (*(void (**)(char *, uint64_t))(v165 + 8))(v100, v101);
            if ((v102 & 1) != 0)
              break;
            v97 = (v97 + 1) & v149;
            v94 = v98;
            if (((*(_QWORD *)(v153 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v78 = v141;
              goto LABEL_83;
            }
          }
          swift_bridgeObjectRelease();
          v103 = v146;
          v84 = v92;
          if (*(_QWORD *)(v146 + 16))
          {
            sub_23E53845C();
            StaticService.hash(into:)(&v167);
            v104 = sub_23E5384A4();
            v105 = -1 << *(_BYTE *)(v103 + 32);
            v106 = v104 & ~v105;
            if (((*(_QWORD *)(v143 + ((v106 >> 3) & 0xFFFFFFFFFFFFF8)) >> v106) & 1) != 0)
            {
              v107 = ~v105;
              v85 = (uint64_t)v147;
              while (1)
              {
                v108 = v142;
                sub_23E1E2F50(*(_QWORD *)(v146 + 48) + v106 * v90, v142, (uint64_t (*)(_QWORD))v84);
                v109 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v108, v85);
                sub_23E1E2FA0(v108, (uint64_t (*)(_QWORD))v84);
                if ((v109 & 1) != 0)
                  break;
                v106 = (v106 + 1) & v107;
                v85 = (uint64_t)v147;
                if (((*(_QWORD *)(v143 + ((v106 >> 3) & 0xFFFFFFFFFFFFF8)) >> v106) & 1) == 0)
                  goto LABEL_91;
              }
              v78 = v141;
              v73 = v148;
              v85 = (uint64_t)v147;
              goto LABEL_51;
            }
          }
          v85 = (uint64_t)v147;
LABEL_91:
          sub_23E4065B0(v85, v145, v144, (uint64_t)&v169, (uint64_t)&v168);
          v78 = v141;
          goto LABEL_92;
        }
        swift_bridgeObjectRelease();
LABEL_83:
        v73 = v148;
        v85 = (uint64_t)v147;
LABEL_50:
        v84 = v92;
      }
LABEL_51:
      sub_23E1E2FA0(v85, (uint64_t (*)(_QWORD))v84);
      continue;
    }
    break;
  }
  v76 = __OFADD__(v79++, 1);
  if (v76)
    goto LABEL_115;
  if (v79 >= v157)
  {
LABEL_94:
    swift_bridgeObjectRelease();
    swift_release();
    v110 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v110);
    v111 = v154;
    *(&v138 - 2) = v144;
    *(&v138 - 1) = v111;
    v112 = sub_23E45F4FC((uint64_t (*)(char *))sub_23E40B6DC, (uint64_t)(&v138 - 4), v163);
    swift_bridgeObjectRelease();
    v113 = *(_QWORD *)(v112 + 16);
    if (!v113)
    {
      v121 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
      v118 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_112:
      v133 = v164;
      v121(v161, v164);
      swift_bridgeObjectRelease();
      v121(v154, v133);
      swift_beginAccess();
      v134 = v169;
      result = swift_beginAccess();
      v136 = v168;
      v137 = v139;
      *v139 = v134;
      v137[1] = v136;
      v137[2] = (unint64_t)v118;
      return result;
    }
    v114 = v162;
    v115 = v112 + ((*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80));
    v163 = v112;
    swift_bridgeObjectRetain();
    v116 = *(_QWORD *)(v114 + 72);
    v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
    v118 = (_QWORD *)MEMORY[0x24BEE4B00];
    v119 = v155;
    v117(v155, v115, v164);
    while (1)
    {
      sub_23E1E2F50(v115, v158, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v122 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v167 = v118;
      v124 = sub_23E1E3300(v119);
      v125 = v118[2];
      v126 = (v123 & 1) == 0;
      v127 = v125 + v126;
      if (__OFADD__(v125, v126))
        goto LABEL_114;
      v128 = v123;
      if (v118[3] >= v127)
      {
        if ((v122 & 1) != 0)
        {
          v118 = (_QWORD *)v167;
          if ((v123 & 1) != 0)
            goto LABEL_96;
        }
        else
        {
          sub_23E21D978();
          v118 = (_QWORD *)v167;
          if ((v128 & 1) != 0)
            goto LABEL_96;
        }
      }
      else
      {
        sub_23E212BC4(v127, v122);
        v129 = sub_23E1E3300(v155);
        if ((v128 & 1) != (v130 & 1))
          goto LABEL_121;
        v124 = v129;
        v118 = (_QWORD *)v167;
        if ((v128 & 1) != 0)
        {
LABEL_96:
          sub_23E1EA8B4(v158, v118[7] + v124 * v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
          v119 = v155;
          goto LABEL_97;
        }
      }
      v118[(v124 >> 6) + 8] |= 1 << v124;
      v119 = v155;
      v117(v118[6] + *(_QWORD *)(v165 + 72) * v124, v155, v164);
      sub_23E1E2FDC(v158, v118[7] + v124 * v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v131 = v118[2];
      v76 = __OFADD__(v131, 1);
      v132 = v131 + 1;
      if (v76)
        goto LABEL_116;
      v118[2] = v132;
      v118 = (_QWORD *)v167;
LABEL_97:
      swift_bridgeObjectRelease();
      v120 = v164;
      v121 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
      v121(v119, v164);
      v115 += v116;
      if (!--v113)
      {
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
      v117(v119, v115, v120);
    }
  }
  v88 = *(_QWORD *)(v156 + 8 * v79);
  if (v88)
  {
LABEL_66:
    v83 = (v88 - 1) & v88;
    v87 = __clz(__rbit64(v88)) + (v79 << 6);
    goto LABEL_67;
  }
  v89 = v79 + 1;
  if (v79 + 1 >= v157)
    goto LABEL_94;
  v88 = *(_QWORD *)(v156 + 8 * v89);
  if (v88)
    goto LABEL_65;
  v89 = v79 + 2;
  if (v79 + 2 >= v157)
    goto LABEL_94;
  v88 = *(_QWORD *)(v156 + 8 * v89);
  if (v88)
    goto LABEL_65;
  v89 = v79 + 3;
  if (v79 + 3 >= v157)
    goto LABEL_94;
  v88 = *(_QWORD *)(v156 + 8 * v89);
  if (v88)
    goto LABEL_65;
  v89 = v79 + 4;
  if (v79 + 4 >= v157)
    goto LABEL_94;
  v88 = *(_QWORD *)(v156 + 8 * v89);
  if (v88)
  {
LABEL_65:
    v79 = v89;
    goto LABEL_66;
  }
  while (1)
  {
    v79 = v89 + 1;
    if (__OFADD__(v89, 1))
      break;
    if (v79 >= v157)
      goto LABEL_94;
    v88 = *(_QWORD *)(v156 + 8 * v79);
    ++v89;
    if (v88)
      goto LABEL_66;
  }
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  sub_23E5383C0();
  __break(1u);
LABEL_122:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

unint64_t sub_23E4065B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t result;
  uint64_t v25;
  char *v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v41 = a5;
  v42 = a4;
  v46 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - v13;
  v43 = sub_23E536F80();
  v15 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for StaticService();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for StaticAccessory(0);
  v45 = *(_QWORD *)(v39 - 8);
  v21 = MEMORY[0x24BDAC7A8](v39);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v38 - v25;
  if (*(_QWORD *)(a2 + 16))
  {
    result = sub_23E1E3300(a1 + *(int *)(v17 + 40));
    if ((v27 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v45 + 72) * result, (uint64_t)v23, type metadata accessor for StaticAccessory);
      sub_23E1E2FDC((uint64_t)v23, (uint64_t)v26, type metadata accessor for StaticAccessory);
      if (v46)
      {
        v28 = sub_23E20FAB0((uint64_t)v26, v46);
        sub_23E1E2F50(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v29 = (uint64_t)v44;
        if ((v28 & 1) == 0)
        {
          v30 = sub_23E20FAB0((uint64_t)v20, v46);
          sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v31 = v43;
          if ((v30 & 1) == 0)
            return sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory);
LABEL_9:
          v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
          v32(v29, a1, v31);
          sub_23E1E2F50(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
          swift_beginAccess();
          sub_23E20C620((uint64_t)v14, v29);
          swift_endAccess();
          StaticAccessory.primaryStaticService.getter((uint64_t)v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
          {
            v33 = sub_23E1E7C64((uint64_t)v12, &qword_254332DE8);
            v34 = 0;
          }
          else
          {
            v34 = v12[*(int *)(v17 + 84)];
            v33 = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          v47 = v34;
          if (ServiceKind.rawValue.getter(v33) == 0xD000000000000024 && v35 == 0x800000023E55F840)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v36 = sub_23E538354();
            swift_bridgeObjectRelease();
            if ((v36 & 1) == 0)
            {
              v32(v29, (uint64_t)v26, v31);
              v37 = v40;
              sub_23E1E2F50((uint64_t)v26, v40, type metadata accessor for StaticAccessory);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 1, v39);
              swift_beginAccess();
              sub_23E1E304C(v37, v29);
              swift_endAccess();
            }
          }
          return sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory);
        }
      }
      else
      {
        sub_23E1E2F50(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v29 = (uint64_t)v44;
      }
      sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v31 = v43;
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_23E4069E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  char v14;
  _QWORD v16[2];

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
    v13 = sub_23E20FAB0(a1, a2) & 1;
  else
    v13 = 2;
  sub_23E1E2F50(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  if (v13 == 2)
    v14 = sub_23E20FAB0((uint64_t)v9, *(_QWORD *)&v12[*(int *)(v10 + 32)]);
  else
    v14 = v13 != 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  return v14 & 1;
}

_QWORD *StaticCameraProfile.NearbyStaticItems.orderedVisibleTileInfos.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v43 = type metadata accessor for StaticService();
  v1 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for StaticAccessory(0);
  v4 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  v8 = v0[1];
  v9 = v0[2];
  v10 = swift_bridgeObjectRetain();
  v11 = 0;
  v12 = sub_23E401AA0(v10);
  v13 = *(_QWORD *)(v12 + 16);
  v44 = v9;
  if (v13)
  {
    v38 = 0;
    v39 = v8;
    v40 = v7;
    v41 = v1;
    v48 = MEMORY[0x24BEE4AF8];
    v14 = v12;
    sub_23E2CB468(0, v13, 0);
    v15 = v48;
    v16 = *(unsigned __int8 *)(v4 + 80);
    v37 = v14;
    v17 = v14 + ((v16 + 32) & ~v16);
    v18 = *(_QWORD *)(v4 + 72);
    v19 = v42;
    do
    {
      sub_23E1E2F50(v17, (uint64_t)v6, type metadata accessor for StaticAccessory);
      v48 = v15;
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_23E2CB468(v20 > 1, v21 + 1, 1);
        v19 = v42;
        v15 = v48;
      }
      v46 = v19;
      v47 = sub_23E1EE1C4(&qword_256D40F98, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
      sub_23E1E2F50((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_23E1E6C84(&v45, v15 + 40 * v21 + 32);
      sub_23E1E2FA0((uint64_t)v6, type metadata accessor for StaticAccessory);
      v17 += v18;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v7 = v40;
    v1 = v41;
    v11 = v38;
    v8 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_23E408DE0(v7, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v42 = v11;
    v48 = MEMORY[0x24BEE4AF8];
    sub_23E2CB468(0, v24, 0);
    v25 = v48;
    v26 = *(unsigned __int8 *)(v1 + 80);
    v41 = v23;
    v27 = v23 + ((v26 + 32) & ~v26);
    v28 = *(_QWORD *)(v1 + 72);
    v29 = v43;
    do
    {
      sub_23E1E2F50(v27, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v48 = v25;
      v31 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23E2CB468(v30 > 1, v31 + 1, 1);
        v29 = v43;
        v25 = v48;
      }
      v46 = v29;
      v47 = sub_23E1EE1C4(&qword_256D40F80, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
      v32 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
      sub_23E1E2F50((uint64_t)v3, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      *(_QWORD *)(v25 + 16) = v31 + 1;
      sub_23E1E6C84(&v45, v25 + 40 * v31 + 32);
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v27 += v28;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
  }
  v33 = swift_bridgeObjectRetain();
  v34 = sub_23E40173C(v33);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45 = v34;
  sub_23E25A0DC(v15);
  sub_23E25A0DC(v25);
  v35 = sub_23E3D1F78(MEMORY[0x24BEE4AF8], v45);
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t static StaticCameraProfile.test(name:isReachable:currentAccessMode:snapshotControl:streamControl:recordingEventManager:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v24 = a7;
  v25 = a1;
  v26 = a3;
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v23) = *a4;
  sub_23E536F74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23E539650;
  swift_bridgeObjectRetain();
  sub_23E536F74();
  v18 = sub_23E2CD9CC(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v19 = (int *)type metadata accessor for StaticCameraProfile();
  sub_23E536F74();
  sub_23E1E7C20(a5, a8 + v19[11], &qword_256D465F8);
  sub_23E1E7C20(a6, a8 + v19[12], &qword_256D44418);
  sub_23E1E7C20(v24, a8 + v19[15], &qword_256D46600);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a8, v16, v13);
  v21 = (_QWORD *)(a8 + v19[5]);
  *v21 = v25;
  v21[1] = a2;
  *(_QWORD *)(a8 + v19[6]) = v18;
  v22 = (_QWORD *)(a8 + v19[7]);
  *v22 = 0;
  v22[1] = 0;
  *(_BYTE *)(a8 + v19[9]) = v26;
  *(_BYTE *)(a8 + v19[10]) = BYTE4(v23);
  *(_BYTE *)(a8 + v19[13]) = 1;
  *(_BYTE *)(a8 + v19[14]) = 0;
  return result;
}

uint64_t static StaticCameraProfile.demo()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  char *v24;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_23E536F74();
  v15 = type metadata accessor for StaticCameraStreamControl();
  v10[*(int *)(v15 + 20)] = 2;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
  v16 = type metadata accessor for StaticCameraRecordingEventManager();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_23E536F74();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_23E539650;
  sub_23E536F74();
  v18 = sub_23E2CD9CC(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v19 = (int *)type metadata accessor for StaticCameraProfile();
  sub_23E536F74();
  sub_23E1E7C20((uint64_t)v13, a1 + v19[11], &qword_256D465F8);
  sub_23E1E7C20((uint64_t)v10, a1 + v19[12], &qword_256D44418);
  sub_23E1E7C20((uint64_t)v7, a1 + v19[15], &qword_256D46600);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v24, v2);
  v20 = (_QWORD *)(a1 + v19[5]);
  *v20 = 0x6D6143206F6D6544;
  v20[1] = 0xEB00000000617265;
  *(_QWORD *)(a1 + v19[6]) = v18;
  v21 = (_QWORD *)(a1 + v19[7]);
  *v21 = 0;
  v21[1] = 0;
  *(_BYTE *)(a1 + v19[9]) = 1;
  *(_BYTE *)(a1 + v19[10]) = 0;
  *(_BYTE *)(a1 + v19[13]) = 1;
  *(_BYTE *)(a1 + v19[14]) = 0;
  sub_23E1E7C64((uint64_t)v7, &qword_256D46600);
  sub_23E1E7C64((uint64_t)v10, &qword_256D44418);
  return sub_23E1E7C64((uint64_t)v13, &qword_256D465F8);
}

BOOL _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  _BOOL8 result;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int *v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v100 = type metadata accessor for StaticCameraRecordingEventManager();
  v97 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v94 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D466E8);
  MEMORY[0x24BDAC7A8](v96);
  v101 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v95 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v98 = (uint64_t)&v91 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v99 = (uint64_t)&v91 - v11;
  v107 = type metadata accessor for StaticCameraStreamControl();
  v12 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v102 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D466F0);
  MEMORY[0x24BDAC7A8](v104);
  v108 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v103 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v105 = (uint64_t)&v91 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v106 = (uint64_t)&v91 - v20;
  v21 = type metadata accessor for StaticCameraSnapshotControl();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D466F8);
  MEMORY[0x24BDAC7A8](v25);
  v109 = (uint64_t)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v91 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v91 - v34;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v93 = v12;
  v36 = type metadata accessor for StaticCameraProfile();
  v37 = *(int *)(v36 + 20);
  v38 = *(_QWORD *)(a1 + v37);
  v39 = *(_QWORD *)(a1 + v37 + 8);
  v40 = (_QWORD *)(a2 + v37);
  if (v38 == *v40 && v39 == v40[1])
    goto LABEL_5;
  v41 = a1;
  v42 = a2;
  v43 = v36;
  v44 = sub_23E538354();
  v36 = v43;
  a2 = v42;
  a1 = v41;
  v45 = v44;
  result = 0;
  if ((v45 & 1) != 0)
  {
LABEL_5:
    v47 = v36;
    if ((sub_23E1F8470(*(_QWORD *)(a1 + *(int *)(v36 + 24)), *(_QWORD *)(a2 + *(int *)(v36 + 24))) & 1) == 0)
      return 0;
    v48 = *(int *)(v47 + 28);
    v49 = (_QWORD *)(a1 + v48);
    v50 = *(_QWORD *)(a1 + v48 + 8);
    v92 = a2;
    v51 = (_QWORD *)(a2 + v48);
    v52 = v51[1];
    v53 = (int *)v47;
    if (v50)
    {
      if (!v52)
        return 0;
      v54 = *v49 == *v51;
      v55 = v92;
      if (!v54 || v50 != v52)
      {
        v56 = sub_23E538354();
        v53 = (int *)v47;
        v55 = v92;
        v57 = v56;
        result = 0;
        if ((v57 & 1) == 0)
          return result;
      }
    }
    else
    {
      v55 = v92;
      if (v52)
        return 0;
    }
    v58 = v55;
    v59 = v53;
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || *(unsigned __int8 *)(a1 + v59[9]) != *(unsigned __int8 *)(v58 + v59[9])
      || *(unsigned __int8 *)(a1 + v59[10]) != *(unsigned __int8 *)(v58 + v59[10]))
    {
      return 0;
    }
    sub_23E1E7C20(a1 + v59[11], (uint64_t)v35, &qword_256D465F8);
    v91 = v59;
    sub_23E1E7C20(v92 + v59[11], (uint64_t)v33, &qword_256D465F8);
    v60 = v109;
    v61 = v109 + *(int *)(v25 + 48);
    sub_23E1E7C20((uint64_t)v35, v109, &qword_256D465F8);
    sub_23E1E7C20((uint64_t)v33, v61, &qword_256D465F8);
    v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v62(v60, 1, v21) == 1)
    {
      sub_23E1E7C64((uint64_t)v33, &qword_256D465F8);
      sub_23E1E7C64((uint64_t)v35, &qword_256D465F8);
      if (v62(v61, 1, v21) == 1)
      {
        sub_23E1E7C64(v60, &qword_256D465F8);
LABEL_24:
        v66 = v91;
        v67 = v106;
        sub_23E1E7C20(a1 + v91[12], v106, &qword_256D44418);
        v68 = v92;
        v69 = v105;
        sub_23E1E7C20(v92 + v66[12], v105, &qword_256D44418);
        v70 = v108;
        v71 = v108 + *(int *)(v104 + 48);
        sub_23E1E7C20(v67, v108, &qword_256D44418);
        sub_23E1E7C20(v69, v71, &qword_256D44418);
        v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
        v73 = v107;
        if (v72(v70, 1, v107) == 1)
        {
          sub_23E1E7C64(v69, &qword_256D44418);
          sub_23E1E7C64(v67, &qword_256D44418);
          if (v72(v71, 1, v73) == 1)
          {
            sub_23E1E7C64(v70, &qword_256D44418);
LABEL_27:
            if (*(unsigned __int8 *)(a1 + v91[13]) != *(unsigned __int8 *)(v68 + v91[13])
              || *(unsigned __int8 *)(a1 + v91[14]) != *(unsigned __int8 *)(v68 + v91[14]))
            {
              return 0;
            }
            v74 = a1 + v91[15];
            v75 = v99;
            v76 = v91;
            sub_23E1E7C20(v74, v99, &qword_256D46600);
            v77 = v68 + v76[15];
            v78 = v98;
            sub_23E1E7C20(v77, v98, &qword_256D46600);
            v79 = v101;
            v80 = v101 + *(int *)(v96 + 48);
            sub_23E1E7C20(v75, v101, &qword_256D46600);
            sub_23E1E7C20(v78, v80, &qword_256D46600);
            v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
            v82 = v100;
            if (v81(v79, 1, v100) == 1)
            {
              sub_23E1E7C64(v78, &qword_256D46600);
              sub_23E1E7C64(v75, &qword_256D46600);
              if (v81(v80, 1, v82) == 1)
              {
                sub_23E1E7C64(v79, &qword_256D46600);
                return 1;
              }
              goto LABEL_41;
            }
            v88 = v95;
            sub_23E1E7C20(v79, v95, &qword_256D46600);
            if (v81(v80, 1, v82) == 1)
            {
              sub_23E1E7C64(v78, &qword_256D46600);
              sub_23E1E7C64(v75, &qword_256D46600);
              sub_23E1E2FA0(v88, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
LABEL_41:
              v63 = &qword_256D466E8;
              v64 = v79;
              goto LABEL_42;
            }
            v89 = v94;
            sub_23E1E2FDC(v80, v94, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
            v90 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            sub_23E1E2FA0(v89, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
            sub_23E1E7C64(v78, &qword_256D46600);
            sub_23E1E7C64(v75, &qword_256D46600);
            sub_23E1E2FA0(v88, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
            sub_23E1E7C64(v79, &qword_256D46600);
            return (v90 & 1) != 0;
          }
          goto LABEL_34;
        }
        v83 = v103;
        sub_23E1E7C20(v70, v103, &qword_256D44418);
        if (v72(v71, 1, v73) == 1)
        {
          sub_23E1E7C64(v69, &qword_256D44418);
          sub_23E1E7C64(v67, &qword_256D44418);
          sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
LABEL_34:
          v63 = &qword_256D466F0;
          v64 = v70;
          goto LABEL_42;
        }
        v84 = v102;
        sub_23E1E2FDC(v71, v102, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
        if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
        {
          v85 = *(int *)(v73 + 20);
          v86 = *(unsigned __int8 *)(v83 + v85);
          v87 = *(unsigned __int8 *)(v84 + v85);
          sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
          sub_23E1E7C64(v69, &qword_256D44418);
          sub_23E1E7C64(v67, &qword_256D44418);
          sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
          sub_23E1E7C64(v70, &qword_256D44418);
          if (v86 != v87)
            return 0;
          goto LABEL_27;
        }
        sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
        sub_23E1E7C64(v69, &qword_256D44418);
        sub_23E1E7C64(v67, &qword_256D44418);
        sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
        v64 = v70;
        v63 = &qword_256D44418;
LABEL_42:
        sub_23E1E7C64(v64, v63);
        return 0;
      }
    }
    else
    {
      sub_23E1E7C20(v60, (uint64_t)v30, &qword_256D465F8);
      if (v62(v61, 1, v21) != 1)
      {
        sub_23E1E2FDC(v61, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
        v65 = _s13HomeDataModel27StaticCameraSnapshotControlV2eeoiySbAC_ACtFZ_0((uint64_t)v30, (uint64_t)v24);
        sub_23E1E2FA0((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
        sub_23E1E7C64((uint64_t)v33, &qword_256D465F8);
        sub_23E1E7C64((uint64_t)v35, &qword_256D465F8);
        sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
        sub_23E1E7C64(v60, &qword_256D465F8);
        if (!v65)
          return 0;
        goto LABEL_24;
      }
      sub_23E1E7C64((uint64_t)v33, &qword_256D465F8);
      sub_23E1E7C64((uint64_t)v35, &qword_256D465F8);
      sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
    }
    v63 = &qword_256D466F8;
    v64 = v60;
    goto LABEL_42;
  }
  return result;
}

unint64_t sub_23E407E3C()
{
  unint64_t result;

  result = qword_256D46610;
  if (!qword_256D46610)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54F0F0, &type metadata for StaticCameraProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46610);
  }
  return result;
}

unint64_t sub_23E407E80()
{
  unint64_t result;

  result = qword_256D46618;
  if (!qword_256D46618)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.AccessMode, &type metadata for StaticCameraProfile.AccessMode);
    atomic_store(result, (unint64_t *)&qword_256D46618);
  }
  return result;
}

unint64_t sub_23E407EC4()
{
  unint64_t result;

  result = qword_256D46640;
  if (!qword_256D46640)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.AccessMode, &type metadata for StaticCameraProfile.AccessMode);
    atomic_store(result, (unint64_t *)&qword_256D46640);
  }
  return result;
}

unint64_t sub_23E407F18()
{
  unint64_t result;

  result = qword_256D46670;
  if (!qword_256D46670)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54F0A0, &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46670);
  }
  return result;
}

unint64_t sub_23E407F5C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v4 = v3;
  v44 = a2;
  v45 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332478);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v43 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v49 = (uint64_t)&v42 - v9;
  v51 = type metadata accessor for StaticCameraProfile();
  v10 = *(_QWORD *)(v51 - 8);
  v11 = MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (uint64_t)&v42 - v13;
  if (a1 >> 62)
    goto LABEL_32;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v14; v14 = sub_23E53803C())
  {
    v52 = v10;
    v42 = v4;
    v48 = a1 & 0xC000000000000001;
    v10 = MEMORY[0x24BEE4AF8];
    v4 = 4;
    v47 = v14;
    while (1)
    {
      v16 = v48 ? (id)MEMORY[0x24264F148](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v17 = v16;
      v18 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v19 = a1;
      v20 = objc_msgSend(v16, sel_cameraProfiles);
      if (!v20)
        goto LABEL_21;
      v21 = v20;
      sub_23E1E335C(0, &qword_254333350);
      v22 = sub_23E5377F0();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        a1 = sub_23E53803C();
        swift_bridgeObjectRelease();
        if (!a1)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      else
      {
        a1 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!a1)
          goto LABEL_20;
      }
      if ((v22 & 0xC000000000000001) != 0)
      {
        v23 = (id)MEMORY[0x24264F148](0, v22);
      }
      else
      {
        if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_31;
        v23 = *(id *)(v22 + 32);
      }
      v24 = v23;
      swift_bridgeObjectRelease();
      v25 = v44;
      swift_bridgeObjectRetain();
      v26 = v45;
      v27 = v24;
      v28 = v43;
      sub_23E403898(v27, v25, v26, v43);
      v29 = v52;
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      v31 = v51;
      if (v30(v28, 1, v51) == 1)
      {
        sub_23E1E7C64(v28, &qword_254332478);
LABEL_21:
        v34 = v52;
        v33 = v49;
        v31 = v51;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v49, 1, 1, v51);

        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
        goto LABEL_22;
      }
      v32 = v28;
      v33 = v49;
      sub_23E1E2FDC(v32, v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v31);

LABEL_22:
      v35 = v30(v33, 1, v31) == 1;
      v36 = v33;
      a1 = v19;
      if (v35)
      {
        sub_23E1E7C64(v36, &qword_254332478);
        v15 = v47;
      }
      else
      {
        v37 = v46;
        sub_23E1E2FDC(v36, v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        sub_23E1E2FDC(v37, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v15 = v47;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v10 = sub_23E51E2F8(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
        v40 = *(_QWORD *)(v10 + 16);
        v39 = *(_QWORD *)(v10 + 24);
        if (v40 >= v39 >> 1)
          v10 = sub_23E51E2F8(v39 > 1, v40 + 1, 1, v10);
        *(_QWORD *)(v10 + 16) = v40 + 1;
        sub_23E1E2FDC(v50, v10+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      }
      ++v4;
      if (v18 == v15)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E4083B4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticCameraProfile();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333B68);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticCameraProfile;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333B68);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D6A0();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212BB0(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E1EA8B4(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E4086E0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333B68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v10 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v11 = a1;
  v12 = 0;
  v13 = sub_23E407F5C(v10, a3, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v27 = 0;
    v28 = MEMORY[0x24BEE4AF8];
    sub_23E2CAF20(0, v14, 0);
    v15 = v28;
    v16 = *(_QWORD *)(type metadata accessor for StaticCameraProfile() - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v26 = v13;
    v18 = v13 + ((v17 + 32) & ~v17);
    v19 = *(_QWORD *)(v16 + 72);
    do
    {
      v20 = (uint64_t)&v8[*(int *)(v5 + 48)];
      sub_23E1E2F50(v18, v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      v21 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v20, v21);
      v28 = v15;
      v23 = *(_QWORD *)(v15 + 16);
      v22 = *(_QWORD *)(v15 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_23E2CAF20(v22 > 1, v23 + 1, 1);
        v15 = v28;
      }
      *(_QWORD *)(v15 + 16) = v23 + 1;
      sub_23E1E4E3C((uint64_t)v8, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v23, &qword_254333B68);
      v18 += v19;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v12 = v27;
    if (*(_QWORD *)(v15 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F248);
      v24 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v24 = MEMORY[0x24BEE4B00];
LABEL_10:
  v28 = v24;
  sub_23E4083B4(v15, 1, &v28);
  swift_bridgeObjectRelease();
  if (!v12)
    return v28;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E40896C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD v46[2];
  unint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int128 v59[5];
  uint64_t v60;

  v55 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v55);
  v54 = (uint64_t)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v46 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v46 - v14;
  result = MEMORY[0x24BEE4AF8];
  v60 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v46[1] = v2;
    v18 = 0;
    v19 = *(_QWORD *)(v13 + 72);
    v47 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v48 = v9;
    v20 = a1 + v47;
    v56 = a2 + 56;
    v57 = v19;
    v49 = a2;
    v50 = (char *)v46 - v14;
    v51 = v12;
    v52 = v20;
    v53 = v17;
    while (1)
    {
      sub_23E1E2F50(v20 + v57 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v22 = (uint64_t)v15;
      v23 = v15[*(int *)(v55 + 84)];
      if ((v23 - 5) >= 4)
      {
        if (qword_2543331F8 != -1)
          swift_once();
        v24 = off_2543331F0;
        if (!*((_QWORD *)off_2543331F0 + 2))
          goto LABEL_20;
        v25 = sub_23E53845C();
        v58 = v23;
        ServiceKind.rawValue.getter(v25);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        v26 = sub_23E5384A4();
        v27 = -1 << v24[32];
        v28 = v26 & ~v27;
        if (((*(_QWORD *)&v24[((v28 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v28) & 1) != 0)
        {
          v29 = ~v27;
          while (1)
          {
            LOBYTE(v59[0]) = *(_BYTE *)(*((_QWORD *)v24 + 6) + v28);
            v58 = v23;
            v30 = ServiceKind.rawValue.getter(v26);
            v32 = v31;
            if (v30 == ServiceKind.rawValue.getter(v30) && v32 == v33)
              break;
            v35 = sub_23E538354();
            swift_bridgeObjectRelease();
            v26 = swift_bridgeObjectRelease();
            if ((v35 & 1) != 0)
              goto LABEL_4;
            v28 = (v28 + 1) & v29;
            if (((*(_QWORD *)&v24[((v28 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v28) & 1) == 0)
              goto LABEL_20;
          }
          swift_bridgeObjectRelease_n();
LABEL_4:
          v15 = v50;
          v21 = (uint64_t)v51;
          sub_23E1E2F50((uint64_t)v50, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        }
        else
        {
LABEL_20:
          v15 = v50;
          v21 = (uint64_t)v51;
          sub_23E1E2F50((uint64_t)v50, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v37 = (uint64_t)v48;
          v36 = v49;
          if (!*(_QWORD *)(v49 + 16)
            || (sub_23E53845C(),
                StaticService.hash(into:)(v59),
                v38 = sub_23E5384A4(),
                v39 = -1 << *(_BYTE *)(v36 + 32),
                v40 = v38 & ~v39,
                ((*(_QWORD *)(v56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0))
          {
LABEL_25:
            sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            sub_23E1E2FDC((uint64_t)v15, v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v43 = v60;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23E2CB160(0, *(_QWORD *)(v43 + 16) + 1, 1);
              v43 = v60;
            }
            v45 = *(_QWORD *)(v43 + 16);
            v44 = *(_QWORD *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_23E2CB160(v44 > 1, v45 + 1, 1);
              v43 = v60;
            }
            *(_QWORD *)(v43 + 16) = v45 + 1;
            sub_23E1E2FDC(v54, v43 + v47 + v45 * v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v20 = v52;
            v17 = v53;
            goto LABEL_7;
          }
          v41 = ~v39;
          while (1)
          {
            sub_23E1E2F50(*(_QWORD *)(v36 + 48) + v40 * v57, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v42 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v37, v21);
            sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if ((v42 & 1) != 0)
              break;
            v40 = (v40 + 1) & v41;
            if (((*(_QWORD *)(v56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
              goto LABEL_25;
          }
        }
        sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v22 = (uint64_t)v15;
        v20 = v52;
        v17 = v53;
      }
      sub_23E1E2FA0(v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v15 = (char *)v22;
LABEL_7:
      if (++v18 == v17)
        return v60;
    }
  }
  return result;
}

uint64_t sub_23E408DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t i;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v49;
  BOOL v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v55 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for StaticService();
  v68 = *(_QWORD *)(v61 - 8);
  v8 = MEMORY[0x24BDAC7A8](v61);
  v62 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v54 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v57 = (uint64_t)&v54 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v54 - v16;
  result = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v54 - v19;
  v22 = 0;
  v69 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(a1 + 64);
  v65 = a1 + 64;
  v24 = 1 << *(_BYTE *)(a1 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v66 = (unint64_t)(v24 + 63) >> 6;
  v59 = a2;
  v60 = a1;
  v58 = v7;
  v63 = v20;
  v67 = (char *)&v54 - v19;
  v56 = v17;
  if ((v25 & v23) != 0)
    goto LABEL_6;
LABEL_7:
  v29 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    if (v29 < v66)
    {
      v30 = *(_QWORD *)(v65 + 8 * v29);
      ++v22;
      if (v30)
        goto LABEL_22;
      v22 = v29 + 1;
      if (v29 + 1 >= v66)
        goto LABEL_41;
      v30 = *(_QWORD *)(v65 + 8 * v22);
      if (v30)
        goto LABEL_22;
      v22 = v29 + 2;
      if (v29 + 2 >= v66)
        goto LABEL_41;
      v30 = *(_QWORD *)(v65 + 8 * v22);
      if (v30)
        goto LABEL_22;
      v22 = v29 + 3;
      if (v29 + 3 >= v66)
        goto LABEL_41;
      v30 = *(_QWORD *)(v65 + 8 * v22);
      if (v30)
      {
LABEL_22:
        v26 = (v30 - 1) & v30;
        for (i = __clz(__rbit64(v30)) + (v22 << 6); ; i = v27 | (v22 << 6))
        {
          v32 = *(_QWORD *)(v68 + 72);
          sub_23E1E2F50(*(_QWORD *)(a1 + 56) + v32 * i, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FDC((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (!*(_QWORD *)(a2 + 16) || (v33 = sub_23E1E3300((uint64_t)v21), v21 = v67, (v34 & 1) == 0))
          {
LABEL_5:
            result = sub_23E1E2FA0((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (!v26)
              goto LABEL_7;
            goto LABEL_6;
          }
          v35 = v57;
          sub_23E1E2F50(*(_QWORD *)(a2 + 56) + v33 * v32, v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v36 = v63;
          sub_23E1E2FDC(v35, v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v37 = *(unsigned __int8 *)(v36 + *(int *)(v61 + 68));
          v38 = v64;
          sub_23E1E2F50(v36, v64, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v37 == 1)
          {
            sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v17 = v56;
            v21 = v67;
            goto LABEL_35;
          }
          v39 = v55;
          if (*(_QWORD *)(v55 + 16))
          {
            v40 = sub_23E1E3300(v64 + *(int *)(v61 + 40));
            v17 = v56;
            if ((v41 & 1) != 0)
            {
              v42 = v40;
              v43 = *(_QWORD *)(v39 + 56);
              v44 = type metadata accessor for StaticAccessory(0);
              v45 = *(_QWORD *)(v44 - 8);
              v46 = v43 + *(_QWORD *)(v45 + 72) * v42;
              v47 = (uint64_t)v58;
              sub_23E1E2F50(v46, (uint64_t)v58, type metadata accessor for StaticAccessory);
              v48 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56);
              a1 = v60;
              v48(v47, 0, 1, v44);
              goto LABEL_33;
            }
            v44 = type metadata accessor for StaticAccessory(0);
            v47 = (uint64_t)v58;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v58, 1, 1, v44);
          }
          else
          {
            v44 = type metadata accessor for StaticAccessory(0);
            v47 = (uint64_t)v7;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v7, 1, 1, v44);
            v17 = v56;
          }
          a1 = v60;
LABEL_33:
          sub_23E1E2FA0(v64, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          type metadata accessor for StaticAccessory(0);
          v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v47, 1, v44);
          v7 = (char *)v47;
          sub_23E1E7C64(v47, &qword_254333468);
          v50 = v49 == 1;
          v21 = v67;
          a2 = v59;
          if (!v50)
            goto LABEL_5;
LABEL_35:
          sub_23E1E2FDC((uint64_t)v21, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v51 = v69;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E2CB160(0, *(_QWORD *)(v51 + 16) + 1, 1);
            v51 = v69;
          }
          v53 = *(_QWORD *)(v51 + 16);
          v52 = *(_QWORD *)(v51 + 24);
          if (v53 >= v52 >> 1)
          {
            sub_23E2CB160(v52 > 1, v53 + 1, 1);
            v51 = v69;
          }
          *(_QWORD *)(v51 + 16) = v53 + 1;
          result = sub_23E1E2FDC(v62, v51+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ v53 * v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          a2 = v59;
          a1 = v60;
          v7 = v58;
          v21 = v67;
          if (!v26)
            goto LABEL_7;
LABEL_6:
          v27 = __clz(__rbit64(v26));
          v26 &= v26 - 1;
        }
      }
      v31 = v29 + 4;
      if (v31 < v66)
      {
        v30 = *(_QWORD *)(v65 + 8 * v31);
        if (v30)
        {
          v22 = v31;
          goto LABEL_22;
        }
        while (1)
        {
          v22 = v31 + 1;
          if (__OFADD__(v31, 1))
            goto LABEL_43;
          if (v22 >= v66)
            break;
          v30 = *(_QWORD *)(v65 + 8 * v22);
          ++v31;
          if (v30)
            goto LABEL_22;
        }
      }
    }
LABEL_41:
    swift_release();
    return v69;
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23E409370()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D46680, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
}

uint64_t sub_23E40939C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D46690, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  a1[2] = sub_23E1EE1C4(&qword_256D46698, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  a1[3] = sub_23E1EE1C4(&qword_256D40E98, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  a1[4] = sub_23E1EE1C4(&qword_256D40D60, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  a1[5] = sub_23E1EE1C4(&qword_256D466A0, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  result = sub_23E1EE1C4(&qword_256D466A8, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
  a1[6] = result;
  return result;
}

unint64_t sub_23E40946C()
{
  unint64_t result;

  result = qword_256D466B0;
  if (!qword_256D466B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.NearbyStaticItems, &type metadata for StaticCameraProfile.NearbyStaticItems);
    atomic_store(result, (unint64_t *)&qword_256D466B0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticCameraProfile(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(char *, char *, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
    v14 = a3[7];
    v15 = a3[8];
    v16 = &a1[v14];
    v17 = &a2[v14];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = &a1[v15];
    v20 = &a2[v15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v19, v20, v7);
    v21 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    a1[v21] = a2[v21];
    v22 = a3[11];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = type metadata accessor for StaticCameraSnapshotControl();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v48 = v8;
      v8(v23, v24, v7);
      v29 = *(int *)(v25 + 20);
      __dst = &v23[v29];
      v30 = &v24[v29];
      v31 = sub_23E536F20();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      v8 = v48;
    }
    v34 = a3[12];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v37 = type metadata accessor for StaticCameraStreamControl();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v8(v35, v36, v7);
      v35[*(int *)(v37 + 20)] = v36[*(int *)(v37 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v40 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    a1[v40] = a2[v40];
    v41 = a3[15];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v44 = type metadata accessor for StaticCameraRecordingEventManager();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v8(v42, v43, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
  }
  return a1;
}

uint64_t destroy for StaticCameraProfile(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v15(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15(a1 + a2[8], v4);
  v5 = a1 + a2[11];
  v6 = type metadata accessor for StaticCameraSnapshotControl();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v15(v5, v4);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = sub_23E536F20();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = a1 + a2[12];
  v11 = type metadata accessor for StaticCameraStreamControl();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    v15(v10, v4);
  v12 = a1 + a2[15];
  v13 = type metadata accessor for StaticCameraRecordingEventManager();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v12, v4);
  return result;
}

uint64_t initializeWithCopy for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  char *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a1 + v14;
  v19 = a2 + v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v18, v19, v6);
  v20 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[11];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for StaticCameraSnapshotControl();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v46 = v7;
    v7((uint64_t)v22, (uint64_t)v23, v6);
    v27 = *(int *)(v24 + 20);
    __dst = &v22[v27];
    v28 = &v23[v27];
    v29 = sub_23E536F20();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    v7 = v46;
  }
  v32 = a3[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = type metadata accessor for StaticCameraStreamControl();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v33, (uint64_t)v34, v6);
    *((_BYTE *)v33 + *(int *)(v35 + 20)) = *((_BYTE *)v34 + *(int *)(v35 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  v39 = a3[15];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  v42 = type metadata accessor for StaticCameraRecordingEventManager();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v40, (uint64_t)v41, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  return a1;
}

uint64_t assignWithCopy for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(_BYTE *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  void *__dst;
  void (*v58)(uint64_t, char *, uint64_t);
  uint64_t v59;

  v6 = sub_23E536F80();
  v59 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = (void (*)(uint64_t, char *, uint64_t))v7;
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v14 = a3[11];
  v15 = a1 + v14;
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for StaticCameraSnapshotControl();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19((uint64_t)v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      v58(v15, v16, v6);
      v30 = *(int *)(v17 + 20);
      v31 = (void *)(v15 + v30);
      v32 = &v16[v30];
      v33 = sub_23E536F20();
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
      v36 = v35(v31, 1, v33);
      v37 = v35(v32, 1, v33);
      if (v36)
      {
        if (!v37)
        {
          (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v37)
        {
          (*(void (**)(void *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0) - 8) + 64);
      v28 = v31;
      v29 = v32;
LABEL_8:
      memcpy(v28, v29, v27);
      goto LABEL_14;
    }
    sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
LABEL_7:
    v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8) - 8) + 64);
    v28 = (void *)v15;
    v29 = v16;
    goto LABEL_8;
  }
  if (v21)
    goto LABEL_7;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v15, v16, v6);
  v22 = *(int *)(v17 + 20);
  __dst = (void *)(v15 + v22);
  v23 = &v16[v22];
  v24 = sub_23E536F20();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_14:
  v38 = a3[12];
  v39 = (_BYTE *)(a1 + v38);
  v40 = (_BYTE *)(a2 + v38);
  v41 = type metadata accessor for StaticCameraStreamControl();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v59 + 16))(v39, v40, v6);
      v39[*(int *)(v41 + 20)] = v40[*(int *)(v41 + 20)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v45)
  {
    sub_23E1E2FA0((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
LABEL_19:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_20;
  }
  v58((uint64_t)v39, v40, v6);
  v39[*(int *)(v41 + 20)] = v40[*(int *)(v41 + 20)];
LABEL_20:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v47 = a3[15];
  v48 = (void *)(a1 + v47);
  v49 = (void *)(a2 + v47);
  v50 = type metadata accessor for StaticCameraRecordingEventManager();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      v58((uint64_t)v48, (char *)v49, v6);
      return a1;
    }
    sub_23E1E2FA0((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
    goto LABEL_25;
  }
  if (v54)
  {
LABEL_25:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v59 + 16))(v48, v49, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t initializeWithTake for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  char *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v7(a1 + v9, a2 + v9, v6);
  v10 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[11];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for StaticCameraSnapshotControl();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v36 = v7;
    v7((uint64_t)v12, (uint64_t)v13, v6);
    v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    v18 = &v13[v17];
    v19 = sub_23E536F20();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v7 = v36;
  }
  v22 = a3[12];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = type metadata accessor for StaticCameraStreamControl();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v23, (uint64_t)v24, v6);
    *((_BYTE *)v23 + *(int *)(v25 + 20)) = *((_BYTE *)v24 + *(int *)(v25 + 20));
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[15];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = type metadata accessor for StaticCameraRecordingEventManager();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t assignWithTake for StaticCameraProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_BYTE *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  void *__dst;
  void (*v64)(uint64_t, char *, uint64_t);
  uint64_t v65;

  v6 = sub_23E536F80();
  v65 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v64 = (void (*)(uint64_t, char *, uint64_t))v7;
  v7(a1 + a3[8], a2 + a3[8], v6);
  v18 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[11];
  v20 = a1 + v19;
  v21 = (char *)(a2 + v19);
  v22 = type metadata accessor for StaticCameraSnapshotControl();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v64(v20, v21, v6);
      v35 = *(int *)(v22 + 20);
      v36 = (void *)(v20 + v35);
      v37 = &v21[v35];
      v38 = sub_23E536F20();
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
      v41 = v40(v36, 1, v38);
      v42 = v40(v37, 1, v38);
      if (v41)
      {
        if (!v42)
        {
          (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v42)
        {
          (*(void (**)(void *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
      }
      v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0) - 8) + 64);
      v33 = v36;
      v34 = v37;
LABEL_8:
      memcpy(v33, v34, v32);
      goto LABEL_14;
    }
    sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraSnapshotControl);
LABEL_7:
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8) - 8) + 64);
    v33 = (void *)v20;
    v34 = v21;
    goto LABEL_8;
  }
  if (v26)
    goto LABEL_7;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v20, v21, v6);
  v27 = *(int *)(v22 + 20);
  __dst = (void *)(v20 + v27);
  v28 = &v21[v27];
  v29 = sub_23E536F20();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v30 + 32))(__dst, v28, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_14:
  v43 = a3[12];
  v44 = (_BYTE *)(a1 + v43);
  v45 = (_BYTE *)(a2 + v43);
  v46 = type metadata accessor for StaticCameraStreamControl();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 32))(v44, v45, v6);
      v44[*(int *)(v46 + 20)] = v45[*(int *)(v46 + 20)];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v50)
  {
    sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
LABEL_19:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  v64((uint64_t)v44, v45, v6);
  v44[*(int *)(v46 + 20)] = v45[*(int *)(v46 + 20)];
LABEL_20:
  v52 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v52) = *(_BYTE *)(a2 + v52);
  v53 = a3[15];
  v54 = (void *)(a1 + v53);
  v55 = (void *)(a2 + v53);
  v56 = type metadata accessor for StaticCameraRecordingEventManager();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      v64((uint64_t)v54, (char *)v55, v6);
      return a1;
    }
    sub_23E1E2FA0((uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraRecordingEventManager);
    goto LABEL_25;
  }
  if (v60)
  {
LABEL_25:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v54, v55, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCameraProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E40A964(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[11];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[12];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[15];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCameraProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E40AA70(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[11];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[12];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46600);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[15];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E40AB6C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E1F1C1C(319, &qword_254333EB0, (void (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl);
    if (v1 <= 0x3F)
    {
      sub_23E1F1C1C(319, &qword_254333D28, (void (*)(uint64_t))type metadata accessor for StaticCameraStreamControl);
      if (v2 <= 0x3F)
      {
        sub_23E1F1C1C(319, &qword_2543332D8, (void (*)(uint64_t))type metadata accessor for StaticCameraRecordingEventManager);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *assignWithCopy for StaticCameraProfile.NearbyStaticItems(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.NearbyStaticItems()
{
  return &type metadata for StaticCameraProfile.NearbyStaticItems;
}

uint64_t storeEnumTagSinglePayload for StaticCameraProfile.NearbyStaticItems.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E40AD64 + 4 * byte_23E54EBA1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E40AD98 + 4 * byte_23E54EB9C[v4]))();
}

uint64_t sub_23E40AD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E40ADA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E40ADA8);
  return result;
}

uint64_t sub_23E40ADB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E40ADBCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E40ADC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E40ADC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.NearbyStaticItems.CodingKeys()
{
  return &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticCameraProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23E40AE30 + 4 * byte_23E54EBAB[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23E40AE64 + 4 * byte_23E54EBA6[v4]))();
}

uint64_t sub_23E40AE64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E40AE6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E40AE74);
  return result;
}

uint64_t sub_23E40AE80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E40AE88);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23E40AE8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E40AE94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.CodingKeys()
{
  return &type metadata for StaticCameraProfile.CodingKeys;
}

unint64_t sub_23E40AEB4()
{
  unint64_t result;

  result = qword_256D466B8;
  if (!qword_256D466B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EFC0, &type metadata for StaticCameraProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466B8);
  }
  return result;
}

unint64_t sub_23E40AEFC()
{
  unint64_t result;

  result = qword_256D466C0;
  if (!qword_256D466C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54F078, &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466C0);
  }
  return result;
}

unint64_t sub_23E40AF44()
{
  unint64_t result;

  result = qword_256D466C8;
  if (!qword_256D466C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EFE8, &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466C8);
  }
  return result;
}

unint64_t sub_23E40AF8C()
{
  unint64_t result;

  result = qword_256D466D0;
  if (!qword_256D466D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54F010, &type metadata for StaticCameraProfile.NearbyStaticItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466D0);
  }
  return result;
}

unint64_t sub_23E40AFD4()
{
  unint64_t result;

  result = qword_256D466D8;
  if (!qword_256D466D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EF30, &type metadata for StaticCameraProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466D8);
  }
  return result;
}

unint64_t sub_23E40B01C()
{
  unint64_t result;

  result = qword_256D466E0;
  if (!qword_256D466E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54EF58, &type metadata for StaticCameraProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D466E0);
  }
  return result;
}

uint64_t sub_23E40B060(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E569D10 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E569E50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746F687370616E73 && a2 == 0xEF6C6F72746E6F43 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F436D6165727473 && a2 == 0xED00006C6F72746ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569E70)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_23E40B54C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365636976726573 && a2 == 0xE800000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000736569 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4765636976726573 && a2 == 0xED00007370756F72)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E40B6DC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E4069E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

id sub_23E40B700()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  void (*v18)();
  uint64_t v19;

  objc_sync_enter(v0);
  v1 = OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection;
  v2 = *(void **)&v0[OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection];
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    sub_23E53755C();
    v4 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v5 = (void *)sub_23E537538();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = sub_23E40BCE8;
    v19 = v7;
    v8 = MEMORY[0x24BDAC760];
    v14 = MEMORY[0x24BDAC760];
    v15 = 1107296256;
    v16 = sub_23E300E8C;
    v17 = &block_descriptor_12_0;
    v9 = _Block_copy(&v14);
    swift_release();
    objc_msgSend(v6, sel_setInterruptionHandler_, v9);
    _Block_release(v9);
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = sub_23E40BCE8;
    v19 = v10;
    v14 = v8;
    v15 = 1107296256;
    v16 = sub_23E300E8C;
    v17 = &block_descriptor_16;
    v11 = _Block_copy(&v14);
    swift_release();
    objc_msgSend(v6, sel_setInvalidationHandler_, v11);
    _Block_release(v11);
    v12 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

  }
  objc_sync_exit(v0);
  return v3;
}

id sub_23E40B928()
{
  return sub_23E40BC3C((uint64_t (*)(_QWORD))type metadata accessor for _AlarmConnectionProvider);
}

uint64_t type metadata accessor for _AlarmConnectionProvider()
{
  return objc_opt_self();
}

id sub_23E40B964()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  void (*v18)();
  uint64_t v19;

  objc_sync_enter(v0);
  v1 = OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection;
  v2 = *(void **)&v0[OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection];
  if (v2)
  {
    v3 = v2;
  }
  else
  {
    sub_23E53755C();
    v4 = objc_allocWithZone(MEMORY[0x24BDD1988]);
    v5 = (void *)sub_23E537538();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 4096);

    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = sub_23E40BCC8;
    v19 = v7;
    v8 = MEMORY[0x24BDAC760];
    v14 = MEMORY[0x24BDAC760];
    v15 = 1107296256;
    v16 = sub_23E300E8C;
    v17 = &block_descriptor_28;
    v9 = _Block_copy(&v14);
    swift_release();
    objc_msgSend(v6, sel_setInterruptionHandler_, v9);
    _Block_release(v9);
    v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = sub_23E40BCC8;
    v19 = v10;
    v14 = v8;
    v15 = 1107296256;
    v16 = sub_23E300E8C;
    v17 = &block_descriptor_6_3;
    v11 = _Block_copy(&v14);
    swift_release();
    objc_msgSend(v6, sel_setInvalidationHandler_, v11);
    _Block_release(v11);
    v12 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v6;
    v3 = v6;

  }
  objc_sync_exit(v0);
  return v3;
}

void sub_23E40BB48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (char *)MEMORY[0x24264FF70](v3);
  if (v4)
  {
    v5 = *a2;
    v6 = *(void **)&v4[*a2];
    *(_QWORD *)&v4[v5] = 0;

  }
}

id sub_23E40BBE8(char *a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD))
{
  objc_super v5;

  *(_QWORD *)&a1[*a3] = 0;
  v5.receiver = a1;
  v5.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_23E40BC30()
{
  return sub_23E40BC3C((uint64_t (*)(_QWORD))type metadata accessor for _TimerConnectionProvider);
}

id sub_23E40BC3C(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for _TimerConnectionProvider()
{
  return objc_opt_self();
}

uint64_t sub_23E40BCA4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23E40BCC8()
{
  uint64_t v0;

  sub_23E40BB48(v0, &OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_TimerConnectionProvider__timerManagerServiceConnection);
}

void sub_23E40BCE8()
{
  uint64_t v0;

  sub_23E40BB48(v0, &OBJC_IVAR____TtC13HomeDataModelP33_06687A056795A35B04F0AB8E8B09184924_AlarmConnectionProvider__alarmManagerServiceConnection);
}

uint64_t OtherCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E40BD30(v1, a1);
}

uint64_t sub_23E40BD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OtherCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for OtherCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OtherCategoryInformation()
{
  uint64_t result;

  result = qword_256D46890;
  if (!qword_256D46890)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t OtherCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for OtherCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static OtherCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;

  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for OtherCategoryInformation(),
        sub_23E5225C0(*((_BYTE *)a1 + *(int *)(v4 + 20))),
        (v5 & 1) != 0))
  {
    return sub_23E335E88(*(uint64_t *)((char *)a1 + *(int *)(v4 + 24)), *(uint64_t *)((char *)a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

void OtherCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E40BEC8
     + 4
     * byte_23E54F180[*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for OtherCategoryInformation() + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E40BEC8()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  return swift_bridgeObjectRelease();
}

uint64_t OtherCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  OtherCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E40BFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E40BD30(v1, a1);
}

uint64_t OtherCategoryInformation.summary.getter()
{
  return 0;
}

uint64_t OtherCategoryInformation.shortSummary.getter()
{
  return 0;
}

uint64_t sub_23E40BFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_23E40C104(a2);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);
}

uint64_t OtherCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_23E40C104(a2);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  v5 = type metadata accessor for OtherCategoryInformation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, 1, 1, v5);
}

uint64_t OtherCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E40C08C()
{
  __int128 v1[4];

  sub_23E53845C();
  OtherCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E40C0CC()
{
  __int128 v1[4];

  sub_23E53845C();
  OtherCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E40C104(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E40C144(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E40C1B4(&qword_256D46820, (uint64_t)&protocol conformance descriptor for OtherCategoryInformation);
  result = sub_23E40C1B4(&qword_256D46828, (uint64_t)&protocol conformance descriptor for OtherCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E40C190()
{
  return sub_23E40C1B4(&qword_256D46830, (uint64_t)&protocol conformance descriptor for OtherCategoryInformation);
}

uint64_t sub_23E40C1B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for OtherCategoryInformation();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OtherCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E40C200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for OtherCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E40C288(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E40C300()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E40C380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23E410144(a1, (uint64_t)sub_23E41047C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;

  v50 = a3;
  v7 = (int *)type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F80();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(a4, a1, v10);
  v12 = (uint64_t *)(a1 + v7[5]);
  v14 = *v12;
  v13 = v12[1];
  v15 = (int *)type metadata accessor for ActionService();
  v16 = (_QWORD *)(a4 + v15[5]);
  *v16 = v14;
  v16[1] = v13;
  *(_BYTE *)(a4 + v15[6]) = *(_BYTE *)(a1 + v7[6]);
  *(_BYTE *)(a4 + v15[7]) = *(_BYTE *)(a1 + v7[7]);
  v11(a4 + v15[8], a1 + v7[10], v10);
  v17 = a1 + v7[11];
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = *(_BYTE *)(v17 + 8);
  v19 = a4 + v15[9];
  *(_QWORD *)v19 = v18;
  *(_BYTE *)(v19 + 8) = v17;
  v20 = (uint64_t *)(a1 + v7[20]);
  v21 = *v20;
  v22 = v20[1];
  v23 = (_QWORD *)(a4 + v15[10]);
  *v23 = v21;
  v23[1] = v22;
  *(_BYTE *)(a4 + v15[11]) = *(_BYTE *)(a1 + v7[21]);
  v24 = *(unsigned __int8 *)(a1 + v7[23]);
  sub_23E1E2F50(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v24 == 53)
    LOBYTE(v24) = v9[v7[21]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *(_BYTE *)(a4 + v15[12]) = v24;
  *(_BYTE *)(a4 + v15[13]) = *(_BYTE *)(a1 + v7[22]);
  v25 = a2;
  swift_bridgeObjectRetain();
  v26 = v50;
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_23E412088(v27, a2, (uint64_t)v26);
  swift_bridgeObjectRelease();
  v49 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + v15[14]) = v28;
  v51 = sub_23E410864(a1, v25);
  v29 = (uint64_t *)(a1 + v7[27]);
  v31 = *v29;
  v30 = v29[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v32 = sub_23E20DB70(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v33 = sub_23E410FF4(v32, v31, v26, &v51);
  v48 = a4;
  v34 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(a1 + v7[26]);
  v36 = swift_bridgeObjectRetain();
  v47 = sub_23E4112A0(v36, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v37 = (_QWORD *)sub_23E1E6638(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v38 = sub_23E4118B8(v37, v31, v33);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  v40 = v47;
  v39 = v48;
  v41 = (uint64_t *)(v48 + v15[16]);
  *v41 = v38;
  v41[1] = v34;
  *(_QWORD *)(v39 + v15[15]) = v40;
  v42 = v39;
  v43 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = swift_bridgeObjectRetain();
  v45 = sub_23E412088(v44, v43, (uint64_t)v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *(_QWORD *)(v42 + v15[17]) = v45;
  return result;
}

uint64_t ActionService.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionService();
  *(_WORD *)a1 = *(unsigned __int8 *)(v1 + *(int *)(result + 44)) | (*(unsigned __int8 *)(v1 + *(int *)(result + 52)) << 8);
  *(_WORD *)(a1 + 2) = 22528;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t ActionService.temperatureStringStatusIcon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for ActionService();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v2, (uint64_t)v6, v7);
  sub_23E4E357C((uint64_t)v6);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = sub_23E4E36E0((uint64_t)v6);
    result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
    if (v12)
    {
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      return result;
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

uint64_t ActionService.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unsigned __int8 v3;
  _BOOL4 v4;
  unsigned __int8 v5;
  BOOL v6;
  unsigned __int8 v7;
  uint64_t v8;
  Swift::Int_optional v9;

  v1 = type metadata accessor for ActionService();
  result = 2;
  switch(*(_BYTE *)(v0 + *(int *)(v1 + 44)))
  {
    case 3:
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x2A:
    case 0x2C:
    case 0x2F:
    case 0x30:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v3 = 3;
      goto LABEL_8;
    case 0xE:
    case 0x33:
    case 0x34:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v7 = -98;
      v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      v4 = v9.value > 0;
      goto LABEL_16;
    case 0x10:
    case 0x1C:
    case 0x22:
    case 0x29:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v3 = 105;
      goto LABEL_8;
    case 0x13:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v5 = -107;
      goto LABEL_10;
    case 0x18:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v3 = 65;
      goto LABEL_8;
    case 0x1E:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v5 = -100;
LABEL_10:
      v7 = v5;
      v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      v6 = v9.value == 1;
      goto LABEL_13;
    case 0x1F:
    case 0x26:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v3 = 84;
LABEL_8:
      v7 = v3;
      return sub_23E2B4680(&v7);
    case 0x23:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v7 = -96;
      v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      v6 = v9.value == 3;
      goto LABEL_13;
    case 0x2E:
      v8 = *(_QWORD *)(v0 + *(int *)(v1 + 60));
      v7 = -104;
      v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
      v6 = v9.value == 0;
LABEL_13:
      v4 = !v6;
LABEL_16:
      if (v9.is_nil)
        result = 2;
      else
        result = v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ActionService.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ActionService.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionService.isPrimary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionService() + 24));
}

uint64_t ActionService.isDoubleHigh.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionService() + 28));
}

uint64_t ActionService.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActionService() + 32);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ActionService.mediaSourceIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 36));
}

uint64_t ActionService.customIconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionService.serviceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t ActionService.displayServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t ActionService.serviceSubKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActionService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t ActionService.linkedStaticServices.getter()
{
  type metadata accessor for ActionService();
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.staticCharacteristicsBag.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.staticProfileBag.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 64));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ActionService.bridgedValveServices.getter()
{
  type metadata accessor for ActionService();
  return swift_bridgeObjectRetain();
}

void sub_23E40CCFC(uint64_t a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  char v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[2];
  void *v61;
  _OWORD v62[2];
  unsigned __int8 v63;

  v59 = a3;
  v56 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v4);
  v55 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v58 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v54 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v54 - v18;
  v20 = *a2++;
  v61 = v20;
  sub_23E1EA57C((uint64_t)a2, (uint64_t)v62);
  v21 = v20;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v62);
  sub_23E1EA57C((uint64_t)a2, (uint64_t)v62);
  sub_23E1EA76C(v62, v60);
  v22 = objc_msgSend(v21, sel_service);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, sel_uniqueIdentifier);

    sub_23E536F68();
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v25(v19, 0, 1, v6);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v25(v19, 1, 1, v6);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v17, v59, v6);
  v25(v17, 0, 1, v6);
  v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_23E1E7C20((uint64_t)v19, (uint64_t)v11, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v17, v26, &qword_254333F50);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v27((uint64_t)v11, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    if (v27(v26, 1, v6) == 1)
    {
      sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v28 = v58;
  sub_23E1E7C20((uint64_t)v11, v58, &qword_254333F50);
  if (v27(v26, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v6);
LABEL_9:
    sub_23E1E7C64((uint64_t)v11, &qword_254332798);
LABEL_20:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);

    return;
  }
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  v54 = v21;
  v30 = v28;
  v31 = v57;
  v29(v57, v26, v6);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v32 = sub_23E537514();
  v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  v33(v31, v6);
  sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
  sub_23E1E7C64((uint64_t)v19, &qword_254333F50);
  v34 = v30;
  v21 = v54;
  v33((char *)v34, v6);
  sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
  if ((v32 & 1) == 0)
    goto LABEL_20;
LABEL_12:
  v35 = *(_BYTE *)(v59 + *(int *)(type metadata accessor for StaticService() + 84));
  LOBYTE(v61) = v35;
  v36 = ServiceKind.requiredCharacteristicKinds.getter();
  LOBYTE(v61) = v35;
  v37 = ServiceKind.optionalCharacteristicKinds.getter();
  v38 = sub_23E1EAB5C(v37, v36);
  v39 = objc_msgSend(v21, sel_characteristicType);
  v40 = sub_23E53755C();
  v42 = v41;

  v43._countAndFlagsBits = v40;
  v43._object = v42;
  CharacteristicKind.init(rawValue:)(v43);
  if (v61 == 174)
    v44 = 0;
  else
    v44 = v61;
  v45 = sub_23E20F7B0(v44, v38);
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0)
    goto LABEL_20;
  v46 = objc_msgSend(v21, sel_characteristicType);
  v47 = sub_23E53755C();
  v49 = v48;

  v50._countAndFlagsBits = v47;
  v50._object = v49;
  CharacteristicKind.init(rawValue:)(v50);
  if (v61 == 174)
    v51 = 0;
  else
    v51 = v61;
  sub_23E1EA57C((uint64_t)v60, (uint64_t)&v61);
  v63 = -2;
  v52 = v21;
  v53 = v55;
  StaticCharacteristic.init(from:value:overrideLoadingState:)(v52, (uint64_t)&v61, &v63, v55);
  sub_23E20CF2C(v53, v51);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
}

uint64_t sub_23E40D248(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  _BYTE v18[7];
  unsigned __int8 v19;
  uint64_t v20;

  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = &v18[-v7];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v18[-v10];
  LOBYTE(v20) = *(_BYTE *)(a1 + *(int *)(v9 + 84));
  if (ServiceKind.rawValue.getter(v9) == 0xD000000000000024 && v12 == 0x800000023E55FB70)
  {
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v13 = sub_23E538354();
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v13 & 1) == 0)
    {
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2F50(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      goto LABEL_11;
    }
  }
  v14 = v11[*(int *)(v2 + 44) + 8];
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v14 & 1) != 0)
  {
LABEL_11:
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_12;
  }
  v20 = *(_QWORD *)&v8[*(int *)(v2 + 104)];
  v19 = 47;
  v15 = sub_23E2B4680(&v19);
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v15 == 2)
  {
LABEL_12:
    sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_13;
  }
  sub_23E1E2F50(a1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v15 & 1) == 0)
  {
LABEL_13:
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return 0;
  }
  v20 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
  v19 = 70;
  v16 = sub_23E2B4680(&v19);
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v16 != 2)
    return v16 & 1;
  return 0;
}

unint64_t sub_23E40D4CC(uint64_t *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  unint64_t v35;
  char v36;
  int v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char v40;
  uint64_t *v41;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  char v70;
  int v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t *v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];
  __int128 v94;
  uint64_t v95;
  char v96;
  __int128 v97;
  char v98;
  unsigned __int8 v99;
  unsigned __int8 v100;

  v90 = a3;
  v87 = a4;
  v89 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v82 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v84 = (char *)&v77 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v11);
  v83 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for StaticCharacteristic();
  v79 = *(_QWORD *)(v81 - 8);
  v13 = MEMORY[0x24BDAC7A8](v81);
  v78 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v80 = (uint64_t)&v77 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v86 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v77 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v77 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v77 - v26;
  v28 = *(int *)(v25 + 48);
  v29 = (char *)&v77 + v28 - v26;
  v30 = a2 + v28;
  v31 = sub_23E536F80();
  v32 = *(_QWORD *)(v31 - 8);
  v91 = a2;
  v92 = v32;
  v88 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v88(v27, a2, v31);
  v33 = v30;
  sub_23E1E2F50(v30, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  v34 = v90;
  if (*((_QWORD *)v90 + 2) && (v35 = sub_23E1E3300((uint64_t)v27), (v36 & 1) != 0))
  {
    v37 = *(char *)(*((_QWORD *)v34 + 7) + v35);
    sub_23E1E2FA0((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v38 = *(void (**)(char *, uint64_t))(v92 + 8);
    v38(v27, v31);
    if ((v37 & 0x80000000) == 0)
    {
      v39 = (uint64_t)&v24[*(int *)(v16 + 48)];
      v88(v24, v91, v31);
      sub_23E1E2F50(v33, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
      v40 = v37;
      v41 = v89;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v93[0] = *v41;
      *v41 = 0x8000000000000000;
      sub_23E21BE1C(v40, (uint64_t)v24, isUniquelyReferenced_nonNull_native);
      *v41 = v93[0];
      swift_bridgeObjectRelease();
      v38(v24, v31);
      result = sub_23E1E2FA0(v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
      if ((v40 & 1) != 0)
      {
        v44 = *v87;
        if (*(_QWORD *)(*v87 + 16))
        {
          result = sub_23E1EAF70(26);
          if ((v45 & 1) != 0)
          {
            v46 = v79;
            v47 = *(_QWORD *)(v44 + 56) + *(_QWORD *)(v79 + 72) * result;
            v48 = v78;
            sub_23E1E2F50(v47, v78, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v49 = v80;
            sub_23E1E2FDC(v48, v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56);
            v51 = (uint64_t)v84;
            v50(v84, 1, 1, v31);
            v100 = -82;
            v97 = xmmword_23E54F490;
            v98 = 5;
            v52 = sub_23E536F20();
            v53 = (uint64_t)v85;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v85, 1, 1, v52);
            v99 = -2;
            v95 = 0;
            v96 = 1;
            v54 = (uint64_t)v82;
            v50(v82, 1, 1, v31);
            memset(v93, 0, sizeof(v93));
            v94 = xmmword_23E53F080;
            v55 = v83;
            StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)(v51, &v100, (uint64_t)&v97, v53, &v99, (uint64_t)&v95, v54, v93, v83);
            sub_23E1E7C64(v54, &qword_254333F50);
            sub_23E1E7C64(v53, &qword_2543330E0);
            sub_23E1E7C64(v51, &qword_254333F50);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v55, 0, 1, v81);
            sub_23E20CF2C(v55, 26);
            return sub_23E1E2FA0(v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          }
        }
      }
      return result;
    }
    v90 = v38;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v90 = *(void (**)(char *, uint64_t))(v92 + 8);
    v90(v27, v31);
  }
  v56 = v33;
  v57 = sub_23E2CFF70((uint64_t)&unk_250EDB740);
  v58 = swift_bridgeObjectRetain();
  v59 = sub_23E4FCBF0(v58);
  v60 = sub_23E415924(v57, v59);
  swift_bridgeObjectRelease();
  v61 = *(_QWORD *)(v60 + 16);
  swift_release();
  v62 = (uint64_t)&v21[*(int *)(v16 + 48)];
  v63 = v91;
  v64 = v88;
  v88(v21, v91, v31);
  sub_23E1E2F50(v56, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  if (v61)
  {
    sub_23E1E7C64((uint64_t)v21, &qword_256D3F9B8);
    v65 = 0;
    v66 = v90;
  }
  else
  {
    v67 = v86;
    v68 = (uint64_t)&v86[*(int *)(v16 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v86, v21, v31);
    sub_23E1E2FDC(v62, v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v69 = (char *)(v68 + *(int *)(type metadata accessor for StaticLightProfile() + 24));
    v70 = *v69;
    v71 = v69[1];
    if (v71 == 2)
      v65 = v70;
    else
      v65 = v71;
    v72 = v68;
    v63 = v91;
    sub_23E1E2FA0(v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v73 = v67;
    v66 = v90;
    v90(v73, v31);
  }
  v74 = (uint64_t)&v24[*(int *)(v16 + 48)];
  v64(v24, v63, v31);
  sub_23E1E2F50(v56, v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  v75 = v89;
  v76 = swift_isUniquelyReferenced_nonNull_native();
  v93[0] = *v75;
  *v75 = 0x8000000000000000;
  sub_23E21BE1C(v65 & 1, (uint64_t)v24, v76);
  *v75 = v93[0];
  swift_bridgeObjectRelease();
  v66(v24, v31);
  return sub_23E1E2FA0(v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

uint64_t ActionService.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v3 = (int *)type metadata accessor for ActionService();
  v29 = *((_QWORD *)v3 - 1);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538474();
  sub_23E5374D8();
  if (*(_BYTE *)(v1 + v3[9] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  if (*(_QWORD *)(v1 + v3[10] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    v9 = swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_23E538474();
  }
  v31 = *(_BYTE *)(v1 + v3[11]);
  ServiceKind.rawValue.getter(v9);
  sub_23E5375EC();
  v10 = swift_bridgeObjectRelease();
  v30 = *(_BYTE *)(v1 + v3[12]);
  ServiceKind.rawValue.getter(v10);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v11 = *(unsigned __int8 *)(v1 + v3[13]);
  if ((_DWORD)v11 != 5)
  {
    sub_23E538474();
    __asm { BR              X9 }
  }
  sub_23E538474();
  v12 = v3[14];
  v28 = v1;
  v13 = *(_QWORD *)(v1 + v12);
  sub_23E538468();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v15 = v13 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v16 = *(_QWORD *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1E2F50(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      ActionService.hash(into:)(a1);
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  v17 = v28;
  v18 = *(_QWORD *)(v28 + v3[15]);
  swift_bridgeObjectRetain();
  sub_23E237124(a1, v18);
  swift_bridgeObjectRelease();
  v19 = (uint64_t *)(v17 + v3[16]);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_23E239D94(a1, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(a1, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v22 = *(_QWORD *)(v17 + v3[17]);
  result = sub_23E538468();
  v24 = *(_QWORD *)(v22 + 16);
  if (v24)
  {
    v25 = v22 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v26 = *(_QWORD *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1E2F50(v25, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      ActionService.hash(into:)(a1);
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      v25 += v26;
      --v24;
    }
    while (v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ActionService.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E40E050()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E40E090()
{
  __int128 v1[4];

  sub_23E53845C();
  ActionService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t ActionService.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  _BYTE v6[32];

  v1 = type metadata accessor for ActionService();
  v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 44));
  v6[31] = *(_BYTE *)(v0 + *(int *)(v1 + 44));
  ServiceKind.togglingCharacteristicKind.getter(v6);
  if (v6[0] == 174)
  {
    if (qword_256D3ED38 != -1)
      swift_once();
    swift_beginAccess();
    v3 = off_256D42460;
    swift_bridgeObjectRetain();
    v4 = sub_23E1E333C(v2, (uint64_t)v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 1;
  }
  return v4 & 1;
}

uint64_t ActionService.active.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 3;
  return sub_23E2B4680(&v2);
}

unint64_t ActionService.targetPosition.getter()
{
  return sub_23E410070(158);
}

uint64_t ActionService.powerState.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 105;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.targetDoorState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -107;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.inUse.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 65;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.targetLockMechanismState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -100;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.mute.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 84;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.targetSecuritySystemState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -96;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.targetHeatingCoolingMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -104;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for ActionService() + 60));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = *a1;
    swift_bridgeObjectRetain();
    v7 = sub_23E1EAF70(v6);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v5 + 56);
      v11 = type metadata accessor for StaticCharacteristic();
      v12 = *(_QWORD *)(v11 - 8);
      sub_23E1E2F50(v10 + *(_QWORD *)(v12 + 72) * v9, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      v15 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = type metadata accessor for StaticCharacteristic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t ActionService.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  swift_bridgeObjectRetain();
  sub_23E24D680((uint64_t (*)(char *))sub_23E412244, v3, a1);
  return swift_bridgeObjectRelease();
}

Swift::Bool_optional __swiftcall ActionService.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v4;
  uint64_t v5;

  v2 = *(_BYTE *)a1;
  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = v2;
  return (Swift::Bool_optional)sub_23E2B4680(&v4);
}

Swift::Int_optional __swiftcall ActionService.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  char v2;
  Swift::Int_optional v3;
  char v4;
  uint64_t v5;

  v2 = *(_BYTE *)a1;
  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = v2;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  v3.is_nil &= 1u;
  return v3;
}

Swift::Double_optional __swiftcall ActionService.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  double v4;
  unsigned __int8 v5;
  uint64_t v6;
  Swift::Double_optional result;

  v2 = *(_BYTE *)a1;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  v5 = v2;
  v3 = sub_23E2B51E4(&v5);
  result.value = v4;
  result.is_nil = v3;
  return result;
}

Swift::String_optional __swiftcall ActionService.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String_optional result;
  uint64_t v16;

  v2 = (unsigned __int8 *)a1;
  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_23E1EAF70(*v2), (v9 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      v11 = *(_QWORD *)v10;
      v12 = (void *)*((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v13 = v11;
  v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t ActionService.data(for:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(_QWORD *)(v7 + 16))
    return 0;
  v8 = sub_23E1EAF70(*a1);
  if ((v9 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    v11 = *(_QWORD *)v10;
    sub_23E2B8BF8(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = 0;
  }
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t ActionService.airParticulateDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 6;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.airParticulateSize.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 7;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.airQuality.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 8;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.batteryLevel.getter()
{
  return sub_23E410070(11);
}

unint64_t ActionService.brightness.getter()
{
  return sub_23E410070(12);
}

uint64_t ActionService.cameraNightVision.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 14;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.carbonDioxideDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 18;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.carbonDioxideLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 19;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.carbonDioxidePeakLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 20;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.carbonMonoxideDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 21;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.carbonMonoxideLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 22;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.carbonMonoxidePeakLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 23;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.chargingState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 24;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.colorTemperature.getter()
{
  return sub_23E410070(26);
}

uint64_t ActionService.configuredName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(27);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Int ActionService.contactState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 28;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.coolingThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 29;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.currentAirPurifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 30;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.currentDoorState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 31;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.currentFanState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 32;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.currentHeaterCoolerState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 33;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.currentHeatingCooling.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 34;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.currentHorizontalTilt.getter()
{
  return sub_23E410070(35);
}

Swift::Int ActionService.currentHumidifierDehumidifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 36;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.currentLightLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 37;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.currentLockMechanismState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 38;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.currentPosition.getter()
{
  return sub_23E410070(40);
}

uint64_t ActionService.currentRelativeHumidity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 41;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.currentSecuritySystemState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 42;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.currentTemperature.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 44;
  return sub_23E2B51E4(&v2);
}

unint64_t ActionService.currentTilt.getter()
{
  return sub_23E410070(45);
}

unint64_t ActionService.currentVerticalTilt.getter()
{
  return sub_23E410070(46);
}

Swift::Int ActionService.currentVisibilityState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 47;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.dehumidifierThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 48;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.filterChangeIndication.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 50;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.filterLifeLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 51;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.heatingThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 55;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.hue.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 57;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.humidifierThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 58;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.isConfigured.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 70;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.leakDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 74;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.manufacturer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(80);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.model.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(82);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.motionDetected.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 83;
  return sub_23E2B4680(&v2);
}

uint64_t ActionService.nightVision.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 86;
  return sub_23E2B4680(&v2);
}

uint64_t ActionService.nitrogenDioxideDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 87;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.obstructionDetected.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 88;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.occupancyDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.outletInUse.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 91;
  return sub_23E2B4680(&v2);
}

uint64_t ActionService.ozoneDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 94;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.pM10Density.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 95;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.pM2_5Density.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 96;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.positionState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.programMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.remainingDuration.getter()
{
  return sub_23E410070(112);
}

Swift::Int ActionService.rotationDirection.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 114;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.rotationSpeed.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 115;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.slatType.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.saturation.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 116;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.smokeDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = 127;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.statusActive.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -127;
  return sub_23E2B4680(&v2);
}

Swift::Int ActionService.statusFault.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -126;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.statusJammed.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.statusLowBattery.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -124;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.statusTampered.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -123;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.sulphurDioxideDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -121;
  return sub_23E2B51E4(&v2);
}

Swift::Int ActionService.swingMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -110;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.targetAirPurifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -109;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.targetFanState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.targetHeaterCoolerState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -105;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t ActionService.targetHorizontalTilt.getter()
{
  return sub_23E410070(153);
}

Swift::Int _s13HomeDataModel13ActionServiceV33humidifierDehumidifierTargetStateSo021HMCharacteristicValueh10HumidifiergI0VSgvg_0()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.targetRelativeHumidity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -97;
  return sub_23E2B51E4(&v2);
}

uint64_t ActionService.targetTemperature.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -94;
  return sub_23E2B51E4(&v2);
}

unint64_t ActionService.targetTilt.getter()
{
  return sub_23E410070(163);
}

unint64_t ActionService.targetVerticalTilt.getter()
{
  return sub_23E410070(164);
}

Swift::Int ActionService.temperatureUnits.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -90;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int ActionService.valveType.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t ActionService.version.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(168);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ActionService.volatileOrganicCompoundDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -87;
  return sub_23E2B51E4(&v2);
}

unint64_t ActionService.volume.getter()
{
  return sub_23E410070(170);
}

unint64_t sub_23E410070(char a1)
{
  uint64_t v1;
  char v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ActionService() + 60));
  v4 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
}

uint64_t ActionService.waterLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  v2 = -83;
  return sub_23E2B51E4(&v2);
}

uint64_t type metadata accessor for ActionService()
{
  uint64_t result;

  result = qword_256D46930;
  if (!qword_256D46930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E410144(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = type metadata accessor for StaticCharacteristic();
  v49 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v41 = (uint64_t)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v40 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333268);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (unsigned __int8 *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = -1 << *(_BYTE *)(a1 + 32);
  v19 = ~v18;
  v20 = *(_QWORD *)(a1 + 64);
  v21 = -v18;
  v42 = a1;
  v43 = a1 + 64;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v44 = v19;
  v45 = 0;
  v46 = v22 & v20;
  v47 = a2;
  v48 = a3;
  v40[2] = a1;
  swift_bridgeObjectRetain();
  v40[1] = a3;
  swift_retain();
  sub_23E287CDC((uint64_t)v17);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  while (1)
  {
    v26 = *v17;
    sub_23E1E2FDC((uint64_t)&v17[*(int *)(v23 + 48)], (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v27 = *a5;
    v29 = sub_23E1EAF70(v26);
    v30 = *(_QWORD *)(v27 + 16);
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (*(_QWORD *)(v27 + 24) >= v32)
    {
      if ((a4 & 1) != 0)
      {
        if ((v28 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E1E7CA0();
        if ((v33 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E217108(v32, a4 & 1);
      v34 = sub_23E1EAF70(v26);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_22;
      v29 = v34;
      if ((v33 & 1) != 0)
      {
LABEL_7:
        v25 = v41;
        sub_23E1E2F50((uint64_t)v14, v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        sub_23E1EA8B4(v25, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v49 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        goto LABEL_8;
      }
    }
    v36 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
    *(_BYTE *)(v36[6] + v29) = v26;
    sub_23E1E2FDC((uint64_t)v14, v36[7] + *(_QWORD *)(v49 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v37 = v36[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_21;
    v36[2] = v39;
LABEL_8:
    sub_23E287CDC((uint64_t)v17);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
    a4 = 1;
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) == 1)goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E41047C@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = (uint64_t)&a1[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333238) + 48)];
  v5 = (uint64_t)&a2[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333260) + 48)];
  *a2 = *a1;
  return sub_23E1E2F50(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
}

uint64_t _s13HomeDataModel13ActionServiceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  int v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for ActionService();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_23E538354() & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6]))
    return 0;
  if (*(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
    return 0;
  v10 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  if ((v10 & 1) == 0)
    return 0;
  v11 = v4[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = *(_BYTE *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = *(unsigned __int8 *)(a2 + v11 + 8);
  if ((v13 & 1) != 0)
  {
    if (!v15)
      return 0;
  }
  else
  {
    if (*v12 != *v14)
      LOBYTE(v15) = 1;
    if ((v15 & 1) != 0)
      return 0;
  }
  v16 = v4[10];
  v17 = (uint64_t *)(a1 + v16);
  v18 = *(_QWORD *)(a1 + v16 + 8);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  if (v18)
  {
    if (!v20)
      return 0;
    v10 = *v17;
    if (*v17 != *v19 || v18 != v20)
    {
      v10 = sub_23E538354();
      if ((v10 & 1) == 0)
        return 0;
    }
  }
  else if (v20)
  {
    return 0;
  }
  v21 = ServiceKind.rawValue.getter(v10);
  v23 = v22;
  if (v21 == ServiceKind.rawValue.getter(v21) && v23 == v24)
  {
    v25 = swift_bridgeObjectRelease_n();
  }
  else
  {
    v26 = sub_23E538354();
    swift_bridgeObjectRelease();
    v25 = swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      return 0;
  }
  v27 = ServiceKind.rawValue.getter(v25);
  v29 = v28;
  if (v27 == ServiceKind.rawValue.getter(v27) && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
      return 0;
  }
  v32 = v4[13];
  v33 = *(unsigned __int8 *)(a1 + v32);
  v34 = *(unsigned __int8 *)(a2 + v32);
  if (v33 == 5)
  {
    if (v34 != 5)
      return 0;
  }
  else
  {
    if (v34 == 5)
      return 0;
    sub_23E1F6874(v33);
    if ((v35 & 1) == 0)
      return 0;
  }
  if ((sub_23E262DA4(*(_QWORD *)(a1 + v4[14]), *(_QWORD *)(a2 + v4[14])) & 1) != 0)
  {
    v36 = v4[15];
    v37 = *(_QWORD *)(a1 + v36);
    v38 = *(_QWORD *)(a2 + v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = sub_23E1F69A8(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
    {
      v40 = v4[16];
      v41 = *(_QWORD *)(a1 + v40);
      v42 = *(_QWORD *)(a1 + v40 + 8);
      v43 = (uint64_t *)(a2 + v40);
      v44 = *v43;
      v45 = v43[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_23E2B1D74(v41, v44) & 1) != 0)
      {
        v46 = sub_23E2B2280(v42, v45);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
          return sub_23E262DA4(*(_QWORD *)(a1 + v4[17]), *(_QWORD *)(a2 + v4[17]));
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  return 0;
}

uint64_t sub_23E410864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[16];
  uint64_t v75;
  uint64_t v76[3];
  __int128 v77;
  uint64_t v78;
  char v79;
  unsigned __int8 v80;
  _QWORD v81[2];
  char v82;
  unsigned __int8 v83[17];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v4);
  v67 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v68 = (uint64_t)&v64 - v9;
  v10 = (int *)type metadata accessor for StaticService();
  v70 = *((_QWORD *)v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v69 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v72 = (uint64_t)&v64 - v16;
  v17 = type metadata accessor for StaticCharacteristic();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v64 = (uint64_t)&v64 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v71 = (uint64_t)&v64 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v64 - v28;
  v30 = sub_23E20E048(MEMORY[0x24BEE4AF8]);
  v75 = a1;
  v73 = sub_23E2573D4(v30, (void (*)(uint64_t *, _OWORD *))sub_23E412C20, (uint64_t)v74, a2);
  LOBYTE(v76[0]) = *(_BYTE *)(a1 + v10[21]);
  if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v31 == 0x800000023E55FF60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
      return v73;
  }
  v33 = v73;
  if (*(_QWORD *)(v73 + 16))
  {
    v34 = sub_23E1EAF70(4);
    if ((v35 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v33 + 56) + *(_QWORD *)(v18 + 72) * v34, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v17);
      sub_23E1E7C64((uint64_t)v29, &qword_2543332A0);
      return v33;
    }
  }
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v36(v29, 1, 1, v17);
  sub_23E1E7C64((uint64_t)v29, &qword_2543332A0);
  v37 = *(_QWORD *)(a1 + v10[26]);
  if (!*(_QWORD *)(v37 + 16))
  {
    v36(v27, 1, 1, v17);
LABEL_15:
    sub_23E1E7C64((uint64_t)v27, &qword_2543332A0);
    return v73;
  }
  swift_bridgeObjectRetain();
  v38 = sub_23E1EAF70(4);
  if ((v39 & 1) != 0)
  {
    sub_23E1E2F50(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v18 + 72) * v38, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  v36(v27, v40, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v27, 1, v17) == 1)
    goto LABEL_15;
  v41 = v71;
  sub_23E1E2FDC((uint64_t)v27, v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v42 = *(_QWORD *)(a1 + v10[25]);
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    v44 = v70;
    v45 = v42 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    v46 = *(_QWORD *)(v70 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_23E1E2F50(v45, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((sub_23E40D248((uint64_t)v12) & 1) != 0)
        break;
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v45 += v46;
      if (!--v43)
      {
        swift_bridgeObjectRelease();
        v47 = 1;
        v48 = v72;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    v48 = v72;
    sub_23E1E2FDC((uint64_t)v12, v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v47 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    v47 = 1;
    v48 = v72;
    v44 = v70;
  }
LABEL_23:
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v44 + 56))(v48, v47, 1, v10);
  swift_bridgeObjectRelease();
  v49 = v69;
  sub_23E1E7C20(v48, v69, &qword_254332DE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v44 + 48))(v49, 1, v10) == 1)
  {
    sub_23E1E7C64(v49, &qword_254332DE8);
LABEL_26:
    sub_23E1E7C64(v48, &qword_254332DE8);
    sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    return v73;
  }
  v50 = v49 + v10[11];
  v51 = *(_QWORD *)v50;
  v52 = *(unsigned __int8 *)(v50 + 8);
  sub_23E1E2FA0(v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v52 == 1)
    goto LABEL_26;
  v53 = sub_23E536F80();
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v54(v68, 1, 1, v53);
  v83[0] = -82;
  if (v51 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v51 <= 0x7FFFFFFF)
  {
    v81[0] = v51;
    v81[1] = 0;
    v82 = 5;
    v55 = sub_23E536F20();
    v56 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v67, 1, 1, v55);
    v80 = -2;
    v78 = 0;
    v79 = 1;
    v57 = (uint64_t)v66;
    v54((uint64_t)v66, 1, 1, v53);
    memset(v76, 0, sizeof(v76));
    v77 = xmmword_23E53F080;
    v58 = v64;
    v59 = v68;
    StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)(v68, v83, (uint64_t)v81, v56, &v80, (uint64_t)&v78, v57, v76, v64);
    sub_23E1E7C64(v57, &qword_254333F50);
    sub_23E1E7C64(v56, &qword_2543330E0);
    sub_23E1E7C64(v59, &qword_254333F50);
    v60 = v65;
    sub_23E1E2FDC(v58, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v61 = v73;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76[0] = v61;
    sub_23E1EA77C(v60, 4, isUniquelyReferenced_nonNull_native);
    v33 = v76[0];
    swift_bridgeObjectRelease();
    sub_23E1E7C64(v48, &qword_254332DE8);
    sub_23E1E2FA0(v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    return v33;
  }
  __break(1u);
  sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_23E410FF4(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t *v31;
  uint64_t v32;

  v30 = a3;
  v31 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v32 = a1;
  v13 = *(_QWORD *)(a2 + 64);
  v28 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v29 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    v24 = *(_QWORD *)(a2 + 48);
    v25 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v12, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * i, v25);
    v26 = *(_QWORD *)(a2 + 56);
    v27 = type metadata accessor for StaticLightProfile();
    sub_23E1E2F50(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * i, (uint64_t)&v12[*(int *)(v7 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    sub_23E412BD8((uint64_t)v12, (uint64_t)v10);
    sub_23E40D4CC(&v32, (uint64_t)v10, v30, v31);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_23E1E7C64((uint64_t)v10, &qword_256D3F9B8);
      return swift_release();
    }
    result = sub_23E1E7C64((uint64_t)v10, &qword_256D3F9B8);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v29)
      goto LABEL_26;
    v22 = *(_QWORD *)(v28 + 8 * v18);
    if (!v22)
      break;
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v29)
    goto LABEL_26;
  v22 = *(_QWORD *)(v28 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 2;
  if (v18 + 2 >= v29)
    goto LABEL_26;
  v22 = *(_QWORD *)(v28 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 3;
  if (v18 + 3 >= v29)
    goto LABEL_26;
  v22 = *(_QWORD *)(v28 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v18 + 4;
  if (v18 + 4 >= v29)
  {
LABEL_26:
    swift_release();
    return v32;
  }
  v22 = *(_QWORD *)(v28 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v29)
      goto LABEL_26;
    v22 = *(_QWORD *)(v28 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E4112A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69[3];
  __int128 v70;
  uint64_t v71;
  char v72;
  unsigned __int8 v73;
  _QWORD v74[2];
  char v75;
  unsigned __int8 v76[9];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v4);
  v67 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v62 - v9;
  v10 = type metadata accessor for StaticCharacteristic();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v66 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v63 = (uint64_t)&v62 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v62 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v62 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v62 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v62 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v62 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v62 - v30;
  swift_bridgeObjectRetain();
  v32 = swift_bridgeObjectRetain();
  v68 = sub_23E40C380(v32, a2);
  if (*(_QWORD *)(a2 + 16) && (v33 = sub_23E1EAF70(26), (v34 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + v11[9] * v33, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v35(v31, 0, 1, v10);
  }
  else
  {
    v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
    v35(v31, 1, 1, v10);
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_16;
  v36 = sub_23E1EAF70(57);
  if ((v37 & 1) == 0)
    goto LABEL_16;
  v38 = v11[9];
  sub_23E1E2F50(*(_QWORD *)(a1 + 56) + v38 * v36, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v35(v29, 0, 1, v10);
  sub_23E1E7C64((uint64_t)v29, &qword_2543332A0);
  if (!*(_QWORD *)(a1 + 16) || (v39 = v38, v40 = sub_23E1EAF70(116), (v41 & 1) == 0))
  {
    v29 = v26;
LABEL_16:
    v35(v29, 1, 1, v10);
    sub_23E1E7C64((uint64_t)v29, &qword_2543332A0);
    sub_23E1E7C20((uint64_t)v31, (uint64_t)v23, &qword_2543332A0);
    goto LABEL_17;
  }
  sub_23E1E2F50(*(_QWORD *)(a1 + 56) + v40 * v38, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v35(v26, 0, 1, v10);
  sub_23E1E7C64((uint64_t)v26, &qword_2543332A0);
  sub_23E1E7C20((uint64_t)v31, (uint64_t)v23, &qword_2543332A0);
  v42 = (unsigned int (*)(char *, uint64_t, uint64_t))v11[6];
  if (v42(v23, 1, v10) == 1)
  {
LABEL_17:
    sub_23E1E7C64((uint64_t)v23, &qword_2543332A0);
    v43 = v68;
    goto LABEL_18;
  }
  sub_23E1E7C64((uint64_t)v23, &qword_2543332A0);
  sub_23E1E7C20((uint64_t)v31, (uint64_t)v20, &qword_2543332A0);
  if (v42(v20, 1, v10) == 1)
  {
    sub_23E1E7C64((uint64_t)v20, &qword_2543332A0);
    v43 = v68;
    swift_bridgeObjectRetain();
    v44 = sub_23E1EAF70(26);
    v46 = v45;
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v69[0] = v43;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E1E7CA0();
        v43 = v69[0];
      }
      v48 = v62;
      sub_23E1E2FDC(*(_QWORD *)(v43 + 56) + v44 * v39, v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      sub_23E49FBCC(v44, v43);
      swift_bridgeObjectRelease();
      v49 = 0;
    }
    else
    {
      v49 = 1;
      v48 = v62;
    }
    v35((char *)v48, v49, 1, v10);
    sub_23E1E7C64(v48, &qword_2543332A0);
  }
  else
  {
    v51 = sub_23E536F80();
    v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
    v53 = (uint64_t)v65;
    v52(v65, 1, 1, v51);
    v76[0] = -82;
    v74[0] = 0;
    v74[1] = 0;
    v75 = 5;
    v54 = sub_23E536F20();
    v55 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v67, 1, 1, v54);
    v73 = -2;
    v71 = 0;
    v72 = 1;
    v56 = (uint64_t)v64;
    v52(v64, 1, 1, v51);
    memset(v69, 0, sizeof(v69));
    v70 = xmmword_23E53F080;
    v57 = v63;
    StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)(v53, v76, (uint64_t)v74, v55, &v73, (uint64_t)&v71, v56, v69, v63);
    sub_23E1E7C64(v56, &qword_254333F50);
    sub_23E1E7C64(v55, &qword_2543330E0);
    sub_23E1E7C64(v53, &qword_254333F50);
    sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v58 = v57;
    v59 = v66;
    sub_23E1E2FDC(v58, v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v60 = v68;
    v61 = swift_isUniquelyReferenced_nonNull_native();
    v69[0] = v60;
    sub_23E1EA77C(v59, 26, v61);
    v43 = v69[0];
    swift_bridgeObjectRelease();
  }
LABEL_18:
  sub_23E1E7C64((uint64_t)v31, &qword_2543332A0);
  return v43;
}

uint64_t sub_23E4118B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  unint64_t v60;
  char v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t result;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  uint64_t v122;
  _QWORD *v123;

  v118 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v101 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v100 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v96 - v8);
  v9 = type metadata accessor for StaticLightProfile();
  v110 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v99 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)&v96 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v104 = (uint64_t)&v96 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v96 - v16;
  v122 = sub_23E536F80();
  v119 = *(_QWORD *)(v122 - 8);
  v18 = MEMORY[0x24BDAC7A8](v122);
  v97 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v121 = (char *)&v96 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v117 = (char *)&v96 - v22;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  v23 = MEMORY[0x24BDAC7A8](v109);
  v108 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v116 = (uint64_t)&v96 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v106 = (char *)&v96 - v27;
  v28 = *(_QWORD *)(a2 + 64);
  v102 = a2 + 64;
  v29 = 1 << *(_BYTE *)(a2 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v103 = (unint64_t)(v29 + 63) >> 6;
  v111 = a2;
  swift_bridgeObjectRetain();
  v32 = 0;
  v107 = a3;
  v105 = v17;
  while (1)
  {
    if (v31)
    {
      v114 = (v31 - 1) & v31;
      v115 = v32;
      v36 = __clz(__rbit64(v31)) | (v32 << 6);
    }
    else
    {
      v37 = v32 + 1;
      if (__OFADD__(v32, 1))
        goto LABEL_43;
      if (v37 >= v103)
      {
LABEL_40:
        swift_release();
        return (uint64_t)v118;
      }
      v38 = *(_QWORD *)(v102 + 8 * v37);
      v39 = v32 + 1;
      if (!v38)
      {
        v39 = v32 + 2;
        if (v32 + 2 >= v103)
          goto LABEL_40;
        v38 = *(_QWORD *)(v102 + 8 * v39);
        if (!v38)
        {
          v39 = v32 + 3;
          if (v32 + 3 >= v103)
            goto LABEL_40;
          v38 = *(_QWORD *)(v102 + 8 * v39);
          if (!v38)
          {
            v39 = v32 + 4;
            if (v32 + 4 >= v103)
              goto LABEL_40;
            v38 = *(_QWORD *)(v102 + 8 * v39);
            if (!v38)
            {
              v40 = v32 + 5;
              if (v32 + 5 >= v103)
                goto LABEL_40;
              v38 = *(_QWORD *)(v102 + 8 * v40);
              if (!v38)
              {
                while (1)
                {
                  v39 = v40 + 1;
                  if (__OFADD__(v40, 1))
                    goto LABEL_44;
                  if (v39 >= v103)
                    goto LABEL_40;
                  v38 = *(_QWORD *)(v102 + 8 * v39);
                  ++v40;
                  if (v38)
                    goto LABEL_24;
                }
              }
              v39 = v32 + 5;
            }
          }
        }
      }
LABEL_24:
      v114 = (v38 - 1) & v38;
      v115 = v39;
      v36 = __clz(__rbit64(v38)) + (v39 << 6);
    }
    v41 = v111;
    v42 = *(_QWORD *)(v111 + 48);
    v112 = *(_QWORD *)(v119 + 72);
    v43 = *(void (**)(char *, unint64_t, uint64_t))(v119 + 16);
    v44 = (uint64_t)v106;
    v45 = v122;
    v43(v106, v42 + v112 * v36, v122);
    v46 = *(_QWORD *)(v41 + 56);
    v47 = v109;
    v113 = *(_QWORD *)(v110 + 72);
    sub_23E1E2F50(v46 + v113 * v36, v44 + *(int *)(v109 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v48 = v116;
    sub_23E412BD8(v44, v116);
    v49 = *(int *)(v47 + 48);
    v50 = v108;
    v51 = (uint64_t)&v108[v49];
    v52 = v48 + v49;
    v43(v108, v48, v45);
    sub_23E1E2F50(v52, v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v53 = v119;
    v54 = (uint64_t)v117;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v117, v50, v45);
    sub_23E1E2FA0(v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v55 = (uint64_t)&v50[*(int *)(v47 + 48)];
    v120 = (void (*)(char *, uint64_t, uint64_t))v43;
    v43(v50, v48, v45);
    sub_23E1E2F50(v52, v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v56 = v55;
    v34 = (uint64_t)v105;
    v57 = v45;
    sub_23E1E2FDC(v56, (uint64_t)v105, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v58 = *(void (**)(char *, uint64_t))(v53 + 8);
    v58(v50, v57);
    v59 = v107;
    if (!*(_QWORD *)(v107 + 16))
      break;
    v60 = sub_23E1E3300(v54);
    if ((v61 & 1) == 0)
      break;
    v62 = *(char *)(*(_QWORD *)(v59 + 56) + v60);
    if (v62 < 0)
      break;
    v63 = v62 & 1;
    v64 = v54;
    v65 = (uint64_t)v97;
    v66 = v122;
    v120(v97, v64, v122);
    v67 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v119 + 56);
    v68 = v100;
    v67(v100, 1, 1, v66);
    v69 = v58;
    v70 = (uint64_t)v101;
    v67(v101, 1, 1, v66);
    v71 = v98;
    StaticLightProfile.copyReplacing(id:isNaturalLightSupported:isNaturalLightEnabled:accessoryId:)(v68, 2u, v63, v70, v98);
    v72 = v70;
    v58 = v69;
    sub_23E1E7C64(v72, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v68, &qword_254333F50);
    v73 = (uint64_t)v71;
    v74 = v99;
    sub_23E1E2FDC(v73, v99, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v75 = v118;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v123 = v75;
    sub_23E1ED108(v74, v65, isUniquelyReferenced_nonNull_native);
    v118 = v123;
    swift_bridgeObjectRelease();
    v33 = v65;
LABEL_6:
    v31 = v114;
    v32 = v115;
    v35 = v122;
    v58((char *)v33, v122);
    sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v58(v117, v35);
    sub_23E1E7C64(v116, &qword_256D3F9B8);
  }
  v77 = (uint64_t)v121;
  v120(v121, v54, v122);
  v78 = v34;
  v79 = v34;
  v80 = v104;
  sub_23E1E2F50(v79, v104, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  v81 = v118;
  v82 = swift_isUniquelyReferenced_nonNull_native();
  v123 = v81;
  v84 = sub_23E1E3300(v77);
  v85 = v81[2];
  v86 = (v83 & 1) == 0;
  v87 = v85 + v86;
  if (!__OFADD__(v85, v86))
  {
    v88 = v83;
    if (v81[3] < v87)
    {
      sub_23E21993C(v87, v82);
      v89 = sub_23E1E3300((uint64_t)v121);
      if ((v88 & 1) != (v90 & 1))
        goto LABEL_45;
      v84 = v89;
      v91 = v123;
      if ((v88 & 1) == 0)
        goto LABEL_36;
LABEL_4:
      v118 = v91;
      sub_23E1EA8B4(v80, v91[7] + v84 * v113, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
LABEL_5:
      swift_bridgeObjectRelease();
      v33 = (uint64_t)v121;
      v34 = v78;
      goto LABEL_6;
    }
    if ((v82 & 1) != 0)
    {
      v91 = v123;
      if ((v83 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_23E2219E0();
      v91 = v123;
      if ((v88 & 1) != 0)
        goto LABEL_4;
    }
LABEL_36:
    v91[(v84 >> 6) + 8] |= 1 << v84;
    v120((char *)(v91[6] + v84 * v112), (uint64_t)v121, v122);
    sub_23E1E2FDC(v80, v91[7] + v84 * v113, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v92 = v91[2];
    v93 = __OFADD__(v92, 1);
    v94 = v92 + 1;
    if (v93)
      goto LABEL_42;
    v91[2] = v94;
    v118 = v123;
    goto LABEL_5;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E412088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a3;
  v6 = type metadata accessor for StaticService();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActionService();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v21[1] = v3;
    v24 = MEMORY[0x24BEE4AF8];
    sub_23E2CB3F4(0, v14, 0);
    v15 = v24;
    v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v22 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_23E1E2F50(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      swift_bridgeObjectRetain();
      v17 = v23;
      swift_bridgeObjectRetain();
      ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)(v9, a2, v17);
      v24 = v15;
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23E2CB3F4(v18 > 1, v19 + 1, 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_23E1E2FDC((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      v16 += v22;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_23E412244()
{
  return sub_23E2B4614() & 1;
}

uint64_t sub_23E412260()
{
  return sub_23E1EE1C4(&qword_256D468D0, (uint64_t (*)(uint64_t))type metadata accessor for ActionService, (uint64_t)&protocol conformance descriptor for ActionService);
}

char *initializeBufferWithCopyOfBuffer for ActionService(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    a1[v10] = a2[v10];
    v14 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    v15 = &a1[v14];
    v16 = &a2[v14];
    swift_bridgeObjectRetain();
    v8(v15, v16, v7);
    v17 = a3[9];
    v18 = a3[10];
    v19 = &a1[v17];
    v20 = &a2[v17];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    v19[8] = v20[8];
    v21 = &a1[v18];
    v22 = &a2[v18];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    a1[v24] = a2[v24];
    v25 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
    v26 = a3[16];
    *(_QWORD *)&a1[a3[15]] = *(_QWORD *)&a2[a3[15]];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    *(_QWORD *)&a1[a3[17]] = *(_QWORD *)&a2[a3[17]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionService(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = (_QWORD *)(a1 + v17);
  v21 = (_QWORD *)(a2 + v17);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  v25 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v11 = a3[9];
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  *(_BYTE *)(v12 + 8) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  v15 = a3[10];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[16];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v7(a1 + v9, a2 + v9, v6);
  v10 = a3[9];
  v11 = a3[10];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v14 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  return a1;
}

uint64_t assignWithTake for ActionService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v14 = a3[9];
  v15 = a3[10];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = (_QWORD *)(a1 + v15);
  v19 = (uint64_t *)(a2 + v15);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v23 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  v24 = a3[16];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionService()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E412A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionService()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E412AA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E412B1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E412BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23E412C20(uint64_t a1, void **a2)
{
  uint64_t v2;

  sub_23E40CCFC(a1, a2, *(_QWORD *)(v2 + 16));
}

id MTTimer.update<A>(state:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  return objc_msgSend(v3, sel_timerByUpdatingWithState_, (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3));
}

void MTTimer.timerState.getter(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(v1, sel_state);
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTTimerState;
  *a1 = v3;
}

void MTTimer.toggle()(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;

  if (objc_msgSend(v1, sel_state) == (id)2)
    v3 = 3;
  else
    v3 = 2;
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_23E412D18()
{
  id *v0;

  return objc_msgSend(*v0, sel_remainingTime);
}

id sub_23E412D28()
{
  id *v0;

  return objc_msgSend(*v0, sel_duration);
}

void sub_23E412D38(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*v1, sel_state);
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = &protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_23E412D80()
{
  id *v0;

  return objc_msgSend(*v0, sel_isFiring);
}

void sub_23E412DA0()
{
  id *v0;
  id v1;

  v1 = objc_msgSend(*v0, sel_timerID);
  sub_23E536F68();

}

id sub_23E412DEC()
{
  id *v0;

  return objc_msgSend(*v0, sel_isCurrentTimer);
}

void sub_23E412E0C(uint64_t *a1@<X8>)
{
  id *v1;
  uint64_t v3;
  uint64_t v4;

  if (objc_msgSend(*v1, sel_state) == (id)2)
    v3 = 3;
  else
    v3 = 2;
  type metadata accessor for MTTimerState(0);
  a1[3] = v4;
  a1[4] = (uint64_t)&protocol witness table for MTTimerState;
  *a1 = v3;
}

id sub_23E412E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id result;

  result = MTTimer.update<A>(state:)(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_23E412E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)(v3 + 24);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  sub_23E536F74();
  type metadata accessor for MockTimer();
  swift_allocObject();
  sub_23E412F78(0, 0, v10, 0, (uint64_t)v8, 0, v9, 0.0);
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_23E412F78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v9 = v8;
  v14 = a7;
  if (a8 > 0.0)
    a7 = a8;
  *(double *)(v9 + 16) = a7;
  *(double *)(v9 + 24) = v14;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 48) = a3;
  *(_BYTE *)(v9 + 56) = a4;
  v15 = v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a5, v16);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) = a6;
  sub_23E537E68();
  sub_23E537628();
  sub_23E5379D0();
  sub_23E537628();
  sub_23E5379D0();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  v18 = (_QWORD *)(v9 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_description);
  *v18 = 0;
  v18[1] = 0xE000000000000000;
  return v9;
}

uint64_t sub_23E4130F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_23E41315C()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)v0 + 16);
}

double sub_23E413168()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_23E413174()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23E4131A4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  a1[3] = &type metadata for MockTimerState;
  a1[4] = &off_250EEDAE0;
  *a1 = v2;
}

uint64_t sub_23E4131C8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 56);
}

uint64_t sub_23E4131D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID;
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E41321C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_description);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E413258()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer);
}

void sub_23E41326C(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = 2;
  if (*(_QWORD *)(*(_QWORD *)v1 + 48) == 2)
    v2 = 3;
  a1[3] = (uint64_t)&type metadata for MockTimerState;
  a1[4] = (uint64_t)&off_250EEDAE0;
  *a1 = v2;
}

uint64_t sub_23E41329C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_23E412E84(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_23E4132C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_23E53845C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_23E5384A4();
}

uint64_t sub_23E4133A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, *v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_23E413470()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = sub_23E536F80();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, *v0 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v1);
  sub_23E1EE1C4(&qword_254333DA0, v2, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return sub_23E5384A4();
}

uint64_t sub_23E413554(uint64_t *a1, uint64_t *a2)
{
  return sub_23E41377C(*a1, *a2);
}

uint64_t sub_23E413560(uint64_t a1)
{
  uint64_t result;

  result = sub_23E1EE1C4(&qword_256D46998, (uint64_t (*)(uint64_t))sub_23E41359C, MEMORY[0x24BEE5BD8]);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23E41359C()
{
  unint64_t result;

  result = qword_256D454B8;
  if (!qword_256D454B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D454B8);
  }
  return result;
}

uint64_t dispatch thunk of HomeTimerState.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeTimer.remainingTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HomeTimer.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HomeTimer.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HomeTimer.timerState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HomeTimer.isFiring.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HomeTimer.timerID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of HomeTimer.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HomeTimer.isCurrentTimer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeTimer.toggle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HomeTimer.update<A>(state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t sub_23E413630()
{
  return type metadata accessor for MockTimer();
}

uint64_t type metadata accessor for MockTimer()
{
  uint64_t result;

  result = qword_256D469C8;
  if (!qword_256D469C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E413674()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23E413714()
{
  return sub_23E1EE1C4(&qword_256D46B88, (uint64_t (*)(uint64_t))type metadata accessor for MockTimer, (uint64_t)&unk_23E54F588);
}

uint64_t sub_23E413740(uint64_t a1)
{
  uint64_t result;

  result = sub_23E1EE1C4(&qword_256D46B90, (uint64_t (*)(uint64_t))type metadata accessor for MockTimer, (uint64_t)&unk_23E54F5C0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E41377C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v4);
  v11(v8, a2 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_timerID, v4);
  v12 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v13(v10, v4);
  if ((v12 & 1) == 0 || *(double *)(a1 + 24) != *(double *)(a2 + 24) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_13;
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a2 + 40);
  if (!v14)
  {
    if (!v15)
      goto LABEL_11;
LABEL_13:
    v17 = 0;
    return v17 & 1;
  }
  if (!v15)
    goto LABEL_13;
  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && v14 == v15 || (v16 = sub_23E538354(), v17 = 0, (v16 & 1) != 0))
  {
LABEL_11:
    if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56))
    {
      v17 = *(_BYTE *)(a1 + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) ^ *(_BYTE *)(a2
                                                                                               + OBJC_IVAR____TtC13HomeDataModel9MockTimer_currentTimer) ^ 1;
      return v17 & 1;
    }
    goto LABEL_13;
  }
  return v17 & 1;
}

ValueMetadata *type metadata accessor for MockTimerState()
{
  return &type metadata for MockTimerState;
}

unint64_t sub_23E41392C()
{
  unint64_t result;

  result = qword_256D46B98;
  if (!qword_256D46B98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54F66C, &type metadata for MockTimerState);
    atomic_store(result, (unint64_t *)&qword_256D46B98);
  }
  return result;
}

BOOL static StaticCameraProfile.CameraMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticCameraProfile.CameraMode.hash(into:)()
{
  return sub_23E538468();
}

uint64_t StaticCameraProfile.CameraMode.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticCameraProfile.currentMode.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticCameraProfile();
  sub_23E1E7C20(v1 + *(int *)(v6 + 48), (uint64_t)v5, &qword_256D44418);
  v7 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v5, &qword_256D44418);
LABEL_5:
    v10 = 1;
    goto LABEL_6;
  }
  v9 = v5[*(int *)(v7 + 20)];
  result = sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
  if (v9 != 2)
    goto LABEL_5;
  v10 = 0;
LABEL_6:
  *a1 = v10;
  return result;
}

BOOL StaticCameraProfile.isAvailable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for StaticCameraProfile();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 36));
  sub_23E413B8C(v1, (uint64_t)v5);
  v7 = v6 == 1 && v5[*(int *)(v2 + 40)] > 2u;
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  return v7;
}

uint64_t sub_23E413B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id StaticCameraProfile.cameraSource.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t (*v23)();
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v30;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for StaticCameraProfile();
  v11 = v0 + *(int *)(v10 + 48);
  sub_23E1E7C20(v11, (uint64_t)v9, &qword_256D44418);
  v12 = type metadata accessor for StaticCameraStreamControl();
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (v13(v9, 1, v12) == 1)
  {
    sub_23E1E7C64((uint64_t)v9, &qword_256D44418);
LABEL_6:
    sub_23E1E7C20(v0 + *(int *)(v10 + 44), (uint64_t)v3, &qword_256D465F8);
    v17 = type metadata accessor for StaticCameraSnapshotControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v3, 1, v17) == 1)
    {
      v15 = &qword_256D465F8;
      v16 = (uint64_t)v3;
      goto LABEL_8;
    }
    if (qword_254334098 != -1)
      swift_once();
    v19 = (void *)qword_254333F18;
    v20 = (void *)sub_23E536F44();
    v21 = objc_msgSend(v19, sel_cameraProfileFor_, v20);

    v22 = objc_msgSend(v21, sel_snapshotControl);
    v18 = objc_msgSend(v22, sel_mostRecentSnapshot);

    v23 = type metadata accessor for StaticCameraSnapshotControl;
    v24 = (uint64_t)v3;
LABEL_15:
    sub_23E1E2FA0(v24, (uint64_t (*)(_QWORD))v23);
    return v18;
  }
  v14 = v9[*(int *)(v12 + 20)];
  sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
  if (v14 != 2)
    goto LABEL_6;
  sub_23E1E7C20(v11, (uint64_t)v7, &qword_256D44418);
  if (v13(v7, 1, v12) != 1)
  {
    if (qword_254334098 != -1)
      swift_once();
    v25 = (void *)qword_254333F18;
    v26 = (void *)sub_23E536F44();
    v27 = objc_msgSend(v25, sel_cameraProfileFor_, v26);

    v28 = objc_msgSend(v27, sel_streamControl);
    v18 = objc_msgSend(v28, sel_cameraStream);

    v23 = type metadata accessor for StaticCameraStreamControl;
    v24 = (uint64_t)v7;
    goto LABEL_15;
  }
  v15 = &qword_256D44418;
  v16 = (uint64_t)v7;
LABEL_8:
  sub_23E1E7C64(v16, v15);
  return 0;
}

Swift::Void __swiftcall StaticCameraProfile.takeSnapshot()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D465F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticCameraProfile();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 36));
  sub_23E413B8C(v1, (uint64_t)v8);
  if (v9 == 1)
  {
    v10 = v8[*(int *)(v5 + 40)];
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    if (v10 <= 2)
      return;
    sub_23E1E7C20(v1 + *(int *)(v5 + 44), (uint64_t)v4, &qword_256D465F8);
    v11 = type metadata accessor for StaticCameraSnapshotControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v4, 1, v11) == 1)
    {
      sub_23E1E7C64((uint64_t)v4, &qword_256D465F8);
      return;
    }
    StaticCameraSnapshotControl.takeSnapshot()();
    v12 = type metadata accessor for StaticCameraSnapshotControl;
    v13 = (uint64_t)v4;
  }
  else
  {
    v12 = type metadata accessor for StaticCameraProfile;
    v13 = (uint64_t)v8;
  }
  sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))v12);
}

Swift::Void __swiftcall StaticCameraProfile.startStreaming()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticCameraProfile();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v18 - v10;
  v12 = *(unsigned __int8 *)(v1 + *(int *)(v9 + 36));
  sub_23E413B8C(v1, (uint64_t)&v18 - v10);
  if (v12 != 1)
  {
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
    sub_23E413B8C(v1, (uint64_t)v8);
    goto LABEL_7;
  }
  v13 = v11[*(int *)(v5 + 40)];
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  sub_23E413B8C(v1, (uint64_t)v8);
  if (v13 < 3)
  {
LABEL_7:
    v16 = type metadata accessor for StaticCameraProfile;
    v17 = (uint64_t)v8;
    goto LABEL_8;
  }
  v14 = sub_23E414224();
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  if (v14)
    return;
  sub_23E1E7C20(v1 + *(int *)(v5 + 48), (uint64_t)v4, &qword_256D44418);
  v15 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_256D44418);
    return;
  }
  StaticCameraStreamControl.startStream()();
  v16 = type metadata accessor for StaticCameraStreamControl;
  v17 = (uint64_t)v4;
LABEL_8:
  sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))v16);
}

BOOL sub_23E414224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  sub_23E1E7C20(v1 + *(int *)(v2 + 48), (uint64_t)&v16 - v9, &qword_256D44418);
  v11 = type metadata accessor for StaticCameraStreamControl();
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (v12(v10, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_256D44418);
    sub_23E413B8C(v1, (uint64_t)v4);
  }
  else
  {
    v13 = v10[*(int *)(v11 + 20)];
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    sub_23E413B8C(v1, (uint64_t)v4);
    if (v13 == 2)
    {
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      return 1;
    }
  }
  sub_23E1E7C20((uint64_t)&v4[*(int *)(v2 + 48)], (uint64_t)v8, &qword_256D44418);
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  if (v12(v8, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_256D44418);
    return 0;
  }
  else
  {
    v15 = v8[*(int *)(v11 + 20)];
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    return v15 == 1;
  }
}

Swift::Void __swiftcall StaticCameraProfile.stopStreaming()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v20 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  v14 = v1 + *(int *)(v2 + 48);
  sub_23E1E7C20(v14, (uint64_t)&v20 - v12, &qword_256D44418);
  v15 = type metadata accessor for StaticCameraStreamControl();
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  if (v16(v13, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v13, &qword_256D44418);
    sub_23E413B8C(v1, (uint64_t)v4);
  }
  else
  {
    v17 = v13[*(int *)(v15 + 20)];
    sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
    sub_23E413B8C(v1, (uint64_t)v4);
    if (v17 == 2)
    {
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      goto LABEL_8;
    }
  }
  sub_23E1E7C20((uint64_t)&v4[*(int *)(v2 + 48)], (uint64_t)v11, &qword_256D44418);
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  if (v16(v11, 1, v15) == 1)
  {
    v18 = (uint64_t)v11;
LABEL_10:
    sub_23E1E7C64(v18, &qword_256D44418);
    return;
  }
  v19 = v11[*(int *)(v15 + 20)];
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
  if (v19 != 1)
    return;
LABEL_8:
  sub_23E1E7C20(v14, (uint64_t)v8, &qword_256D44418);
  if (v16(v8, 1, v15) == 1)
  {
    v18 = (uint64_t)v8;
    goto LABEL_10;
  }
  StaticCameraStreamControl.stopStream()();
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraStreamControl);
}

unint64_t sub_23E414660()
{
  unint64_t result;

  result = qword_256D46BA0;
  if (!qword_256D46BA0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.CameraMode, &type metadata for StaticCameraProfile.CameraMode);
    atomic_store(result, (unint64_t *)&qword_256D46BA0);
  }
  return result;
}

uint64_t _s10CameraModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E4146F0 + 4 * byte_23E54F6A9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E414724 + 4 * byte_23E54F6A4[v4]))();
}

uint64_t sub_23E414724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E41472C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E414734);
  return result;
}

uint64_t sub_23E414740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E414748);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E41474C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E414754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.CameraMode()
{
  return &type metadata for StaticCameraProfile.CameraMode;
}

uint64_t StaticMatterDevice.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  __int128 v20[16];
  _BYTE v21[256];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F418);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionEndpoint();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) == 2)
    return 0;
  StaticMatterDevice.mainActionEndpoint.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_256D3F418);
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    v11 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11) != 1)
    {
      if (*(_QWORD *)&v3[*(int *)(v11 + 28)] != 2
        && (v17 = *(_QWORD *)&v3[*(int *)(v11 + 36)], *(_QWORD *)(v17 + 16))
        && (v18 = sub_23E2112EC(10), (v19 & 1) != 0)
        && (sub_23E22328C((__int128 *)(*(_QWORD *)(v17 + 56) + (v18 << 8)), (uint64_t)v20),
            sub_23E22328C(v20, (uint64_t)v21),
            sub_23E23C5D0((uint64_t)v21) == 1))
      {
        v16 = *(unsigned __int8 *)(sub_23E23C5DC((uint64_t)v21) + 11);
      }
      else
      {
        v16 = 0;
      }
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      return v16;
    }
    sub_23E1E7C64((uint64_t)v3, &qword_256D3F450);
    return 0;
  }
  sub_23E1E2FDC((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
  v12 = *(_QWORD *)&v10[*(int *)(v7 + 44)];
  result = sub_23E26B68C(v12);
  if ((v15 & 1) == 0)
  {
    if (*(_DWORD *)(v12 + 36) == v14)
    {
      if (result != 1 << *(_BYTE *)(v12 + 32))
        sub_23E2CD37C(result, v14, v12, v21);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _WORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  int v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for StaticEndpoint();
  v38 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F950);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (_WORD *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 44));
  v11 = *(_QWORD *)(v10 + 64);
  v36 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v15 = (unint64_t)(v12 + 63) >> 6;
  v32 = v15 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = 0;
  v37 = v15;
  v33 = v10 + 104;
  v34 = v15 - 5;
LABEL_4:
  v35 = v17;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_9;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v26 < v37)
    {
      v27 = *(_QWORD *)(v36 + 8 * v26);
      if (v27)
        goto LABEL_13;
      if ((uint64_t)(v18 + 2) >= v37)
      {
        ++v18;
      }
      else
      {
        v27 = *(_QWORD *)(v36 + 8 * (v18 + 2));
        if (v27)
        {
          v26 = v18 + 2;
          goto LABEL_13;
        }
        if ((uint64_t)(v18 + 3) >= v37)
        {
          v18 += 2;
        }
        else
        {
          v27 = *(_QWORD *)(v36 + 8 * (v18 + 3));
          if (v27)
          {
            v26 = v18 + 3;
LABEL_13:
            v14 = (v27 - 1) & v27;
            v22 = __clz(__rbit64(v27)) + (v26 << 6);
            v18 = v26;
LABEL_9:
            v23 = *(_QWORD *)(v10 + 56);
            *v7 = *(_WORD *)(*(_QWORD *)(v10 + 48) + 2 * v22);
            v24 = v23 + *(_QWORD *)(v38 + 72) * v22;
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
            sub_23E1E2F50(v24, (uint64_t)v7 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
            (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 0, 1, v25);
            goto LABEL_19;
          }
          v26 = v18 + 4;
          if ((uint64_t)(v18 + 4) >= v37)
          {
            v18 += 3;
          }
          else
          {
            v27 = *(_QWORD *)(v36 + 8 * v26);
            if (v27)
              goto LABEL_13;
            while (v34 != v18)
            {
              v27 = *(_QWORD *)(v33 + 8 * v18++);
              if (v27)
              {
                v26 = v18 + 4;
                goto LABEL_13;
              }
            }
            v18 = v32;
          }
        }
      }
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v7, 1, 1, v28);
    v14 = 0;
LABEL_19:
    sub_23E4164CC((uint64_t)v7, (uint64_t)v9);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v9, 1, v29) == 1)
    {
      v31 = v35;
LABEL_38:
      swift_release();
      return v31 & 1;
    }
    sub_23E1E2FDC((uint64_t)&v9[*(int *)(v29 + 48)], (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    if (*(_QWORD *)&v3[*(int *)(v1 + 28)] != 2)
    {
      if (*(_QWORD *)(*(_QWORD *)&v3[*(int *)(v1 + 36)] + 16) && (sub_23E2112EC(10), (v30 & 1) != 0)
        || (v19 = swift_bridgeObjectRetain(), v20 = sub_23E415000(v19), swift_bridgeObjectRelease(), (v20 & 1) != 0))
      {
        result = sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        v17 = 1;
        if ((v35 & 1) == 0)
          goto LABEL_4;
        v31 = 0;
        goto LABEL_38;
      }
    }
    result = sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[15];
  char v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F418);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for ActionEndpoint();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) == 2)
  {
    static String.hfLocalized(_:)();
    return v11;
  }
  StaticMatterDevice.mainActionEndpoint.getter((uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_256D3F418);
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    v13 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v3, 1, v13) == 1)
    {
      sub_23E1E7C64((uint64_t)v3, &qword_256D3F450);
    }
    else
    {
      v12 = StaticEndpoint.statusString.getter();
      v19 = v18;
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      if (v19)
        return v12;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2FDC((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
  v14 = *(_QWORD *)&v10[*(int *)(v7 + 44)];
  result = sub_23E26B68C(v14);
  if ((v17 & 1) == 0)
  {
    if (*(_DWORD *)(v14 + 36) == v16)
    {
      if (result != 1 << *(_BYTE *)(v14 + 32))
        sub_23E2CD37C(result, v16, v14, &v21);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E415000(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unsigned int v12;

  v1 = 0;
  v2 = result + 56;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v8 = v7 | (v1 << 6);
      goto LABEL_22;
    }
    v9 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v1;
    if (!v10)
    {
      v1 = v9 + 1;
      if (v9 + 1 >= v6)
        return 0;
      v10 = *(_QWORD *)(v2 + 8 * v1);
      if (!v10)
      {
        v1 = v9 + 2;
        if (v9 + 2 >= v6)
          return 0;
        v10 = *(_QWORD *)(v2 + 8 * v1);
        if (!v10)
        {
          v1 = v9 + 3;
          if (v9 + 3 >= v6)
            return 0;
          v10 = *(_QWORD *)(v2 + 8 * v1);
          if (!v10)
            break;
        }
      }
    }
LABEL_21:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v1 << 6);
LABEL_22:
    v12 = *(unsigned __int8 *)(*(_QWORD *)(result + 48) + v8) - 4;
    if (v12 <= 0x11 && ((0x203ADu >> v12) & 1) != 0)
      return 1;
  }
  v11 = v9 + 4;
  if (v11 >= v6)
    return 0;
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v6)
      return 0;
    v10 = *(_QWORD *)(v2 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

char StaticMatterDevice.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  int v15;
  char v16;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  Swift::String v21;
  char v22;
  _BYTE v24[13];
  _BYTE v25[2];
  unsigned __int8 v26;

  v3 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v8);
  v9 = type metadata accessor for StaticEndpoint();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_256D3F450);
LABEL_7:
    sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    goto LABEL_8;
  }
  v10 = *(_QWORD *)&v8[*(int *)(v9 + 32)];
  v11 = sub_23E26B68C(v10);
  if ((v13 & 1) != 0)
  {
LABEL_21:
    __break(1u);
    return v11;
  }
  if (*(_DWORD *)(v10 + 36) != v12)
    goto LABEL_19;
  if (v11 == 1 << *(_BYTE *)(v10 + 32))
  {
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    goto LABEL_7;
  }
  sub_23E2CD37C(v11, v12, v10, v25);
  v17 = v25[0];
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  if (v17 != 26)
    goto LABEL_14;
LABEL_8:
  v14 = *(_QWORD *)&v5[*(int *)(v3 + 32)];
  v11 = sub_23E26B68C(v14);
  if ((v16 & 1) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(_DWORD *)(v14 + 36) != v15)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v11 == 1 << *(_BYTE *)(v14 + 32))
  {
    LOWORD(v17) = 26;
  }
  else
  {
    sub_23E2CD37C(v11, v15, v14, &v26);
    LOWORD(v17) = v26;
  }
LABEL_14:
  LOBYTE(v11) = sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v18 = v1 + *(int *)(v3 + 48);
  v19 = *(void **)(v18 + 24);
  if (v19)
  {
    v20 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v20;
    v21._object = v19;
    LOBYTE(v11) = IconSymbol.init(rawValue:)(v21);
    v22 = v25[1];
  }
  else
  {
    v22 = 88;
  }
  *(_WORD *)a1 = v17;
  *(_BYTE *)(a1 + 2) = 1;
  *(_BYTE *)(a1 + 3) = v22;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return v11;
}

uint64_t StaticMatterDevice.mainActionEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for StaticEndpoint();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D3F450);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v10 = type metadata accessor for StaticMatterDevice();
    v11 = *(_QWORD *)(v1 + *(int *)(v10 + 52));
    if (v11 && *(_QWORD *)(v11 + 16))
    {
      MEMORY[0x24BDAC7A8](v10);
      *(_QWORD *)&v14[-16] = v9;
      swift_bridgeObjectRetain();
      sub_23E24D298((uint64_t (*)(char *))sub_23E2B8BCC, v11, a1);
      swift_bridgeObjectRelease();
      return sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    }
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  }
  v13 = type metadata accessor for ActionEndpoint();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

uint64_t StaticMatterDevice.mainEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(v2 + *(int *)(v4 + 44));
  v15 = v2;
  swift_bridgeObjectRetain();
  sub_23E24D27C((uint64_t (*)(char *))sub_23E416514, v10, (uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_23E1E2F50(v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  v11 = type metadata accessor for StaticEndpoint();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_23E2676C4(*(_QWORD *)&v6[*(int *)(v4 + 44)], a1);
    sub_23E1E7C64((uint64_t)v9, &qword_256D3F450);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  return sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
}

uint64_t _s13HomeDataModel18StaticMatterDeviceV16tileStatusStringSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticMatterDevice.mainEndpoint.getter((uint64_t)v2);
  sub_23E1E7C64((uint64_t)v2, &qword_256D3F450);
  return 0;
}

uint64_t StaticMatterDevice.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11[16];
  _BYTE v12[256];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticMatterDevice();
  result = 0;
  if (*(_QWORD *)(v0 + *(int *)(v4 + 28)) == 1)
  {
    StaticMatterDevice.mainEndpoint.getter((uint64_t)v3);
    v6 = type metadata accessor for StaticEndpoint();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) == 1)
    {
      sub_23E1E7C64((uint64_t)v3, &qword_256D3F450);
    }
    else
    {
      v7 = *(_QWORD *)&v3[*(int *)(v6 + 36)];
      if (*(_QWORD *)(v7 + 16))
      {
        v8 = sub_23E2112EC(2);
        if ((v9 & 1) != 0)
        {
          sub_23E22328C((__int128 *)(*(_QWORD *)(v7 + 56) + (v8 << 8)), (uint64_t)v11);
          sub_23E22328C(v11, (uint64_t)v12);
          if (sub_23E23C5D0((uint64_t)v12) == 5)
          {
            v10 = sub_23E23C5DC((uint64_t)v12);
            if ((*(_BYTE *)(v10 + 22) & 1) == 0 && *(unsigned __int8 *)(v10 + 21) < 0xAu)
            {
              sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
              return 0x2E79726574746162;
            }
          }
        }
      }
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    }
    return 0;
  }
  return result;
}

BOOL sub_23E4158A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticEndpoint() + 32));
  v4 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for StaticMatterDevice() + 32));
  swift_bridgeObjectRetain();
  v5 = *(_QWORD *)(sub_23E415970(v4, v3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E416064)+ 16);
  swift_release();
  return v5 != 0;
}

uint64_t sub_23E415924(uint64_t a1, uint64_t a2)
{
  return sub_23E415970(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23E415AFC);
}

uint64_t sub_23E415970(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x24264FEBC](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_23E415AFC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  int64_t v51;
  uint64_t v52;
  unint64_t *v53;
  int64_t v54;
  int64_t v55;

  v4 = a4;
  v5 = a3;
  v53 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v26 = 0;
    v48 = a3 + 56;
    v27 = 1 << *(_BYTE *)(a3 + 32);
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v29 = v28 & *(_QWORD *)(a3 + 56);
    v50 = (unint64_t)(v27 + 63) >> 6;
    v52 = 0;
    v30 = a4 + 56;
    while (1)
    {
LABEL_37:
      if (v29)
      {
        v31 = __clz(__rbit64(v29));
        v29 &= v29 - 1;
        v32 = v31 | (v26 << 6);
      }
      else
      {
        v33 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_71;
        if (v33 >= v50)
          goto LABEL_66;
        v34 = *(_QWORD *)(v48 + 8 * v33);
        ++v26;
        if (!v34)
        {
          v26 = v33 + 1;
          if (v33 + 1 >= v50)
            goto LABEL_66;
          v34 = *(_QWORD *)(v48 + 8 * v26);
          if (!v34)
          {
            v26 = v33 + 2;
            if (v33 + 2 >= v50)
              goto LABEL_66;
            v34 = *(_QWORD *)(v48 + 8 * v26);
            if (!v34)
            {
              v35 = v33 + 3;
              if (v35 >= v50)
                goto LABEL_66;
              v34 = *(_QWORD *)(v48 + 8 * v35);
              if (!v34)
              {
                while (1)
                {
                  v26 = v35 + 1;
                  if (__OFADD__(v35, 1))
                    goto LABEL_73;
                  if (v26 >= v50)
                    break;
                  v34 = *(_QWORD *)(v48 + 8 * v26);
                  ++v35;
                  if (v34)
                    goto LABEL_52;
                }
LABEL_66:
                v46 = a2;
                v6 = v52;
LABEL_67:
                swift_retain();
                return sub_23E525ED0(v53, v46, v6, v5);
              }
              v26 = v35;
            }
          }
        }
LABEL_52:
        v29 = (v34 - 1) & v34;
        v32 = __clz(__rbit64(v34)) + (v26 << 6);
      }
      v36 = sub_23E53845C();
      CharacteristicKind.rawValue.getter(v36);
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      result = sub_23E5384A4();
      v37 = -1 << *(_BYTE *)(v4 + 32);
      v38 = result & ~v37;
      if (((*(_QWORD *)(v30 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
        continue;
      v55 = v26;
      v39 = ~v37;
      while (1)
      {
        v40 = CharacteristicKind.rawValue.getter(result);
        v42 = v41;
        if (v40 == CharacteristicKind.rawValue.getter(v40) && v42 == v43)
          break;
        v45 = sub_23E538354();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
          goto LABEL_63;
        v38 = (v38 + 1) & v39;
        v4 = a4;
        if (((*(_QWORD *)(v30 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
        {
          v26 = v55;
          v5 = a3;
          goto LABEL_37;
        }
      }
      result = swift_bridgeObjectRelease_n();
LABEL_63:
      v26 = v55;
      *(unint64_t *)((char *)v53 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      v5 = a3;
      v4 = a4;
      if (__OFADD__(v52, 1))
      {
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      ++v52;
    }
  }
  v6 = 0;
  v7 = 0;
  v49 = a4 + 56;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a4 + 56);
  v51 = (unint64_t)(v8 + 63) >> 6;
  v11 = a3 + 56;
LABEL_8:
  while (v10)
  {
    v10 &= v10 - 1;
LABEL_24:
    v16 = sub_23E53845C();
    CharacteristicKind.rawValue.getter(v16);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    result = sub_23E5384A4();
    v17 = -1 << *(_BYTE *)(v5 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v11 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      v54 = v7;
      v19 = ~v17;
      while (1)
      {
        v20 = CharacteristicKind.rawValue.getter(result);
        v22 = v21;
        if (v20 == CharacteristicKind.rawValue.getter(v20) && v22 == v23)
          break;
        v25 = sub_23E538354();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
          goto LABEL_7;
        v18 = (v18 + 1) & v19;
        v5 = a3;
        if (((*(_QWORD *)(v11 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        {
          v7 = v54;
          goto LABEL_8;
        }
      }
      result = swift_bridgeObjectRelease_n();
LABEL_7:
      v7 = v54;
      *(unint64_t *)((char *)v53 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v12 = __OFADD__(v6++, 1);
      v5 = a3;
      if (!v12)
        continue;
      __break(1u);
      goto LABEL_69;
    }
  }
  v13 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_70;
  if (v13 >= v51)
  {
LABEL_65:
    v46 = a2;
    goto LABEL_67;
  }
  v14 = *(_QWORD *)(v49 + 8 * v13);
  ++v7;
  if (v14)
    goto LABEL_23;
  v7 = v13 + 1;
  if (v13 + 1 >= v51)
    goto LABEL_65;
  v14 = *(_QWORD *)(v49 + 8 * v7);
  if (v14)
    goto LABEL_23;
  v7 = v13 + 2;
  if (v13 + 2 >= v51)
    goto LABEL_65;
  v14 = *(_QWORD *)(v49 + 8 * v7);
  if (v14)
  {
LABEL_23:
    v10 = (v14 - 1) & v14;
    goto LABEL_24;
  }
  v15 = v13 + 3;
  if (v15 >= v51)
    goto LABEL_65;
  v14 = *(_QWORD *)(v49 + 8 * v15);
  if (v14)
  {
    v7 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v51)
      goto LABEL_65;
    v14 = *(_QWORD *)(v49 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_23E416064(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t i;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;

  v43 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v26 = 0;
    v44 = a3 + 56;
    v27 = 1 << *(_BYTE *)(a3 + 32);
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v29 = v28 & *(_QWORD *)(a3 + 56);
    v46 = (unint64_t)(v27 + 63) >> 6;
    v30 = a4 + 56;
    v47 = 0;
    while (1)
    {
      if (v29)
      {
        v31 = __clz(__rbit64(v29));
        v29 &= v29 - 1;
        v32 = v31 | (v26 << 6);
      }
      else
      {
        v33 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v33 >= v46)
          goto LABEL_58;
        v34 = *(_QWORD *)(v44 + 8 * v33);
        ++v26;
        if (!v34)
        {
          v26 = v33 + 1;
          if (v33 + 1 >= v46)
            goto LABEL_58;
          v34 = *(_QWORD *)(v44 + 8 * v26);
          if (!v34)
          {
            v26 = v33 + 2;
            if (v33 + 2 >= v46)
              goto LABEL_58;
            v34 = *(_QWORD *)(v44 + 8 * v26);
            if (!v34)
            {
              v35 = v33 + 3;
              if (v35 >= v46)
                goto LABEL_58;
              v34 = *(_QWORD *)(v44 + 8 * v35);
              if (!v34)
              {
                while (1)
                {
                  v26 = v35 + 1;
                  if (__OFADD__(v35, 1))
                    goto LABEL_64;
                  if (v26 >= v46)
                    break;
                  v34 = *(_QWORD *)(v44 + 8 * v26);
                  ++v35;
                  if (v34)
                    goto LABEL_50;
                }
LABEL_58:
                swift_retain();
                return sub_23E526158(v43, a2, v47, a3);
              }
              v26 = v35;
            }
          }
        }
LABEL_50:
        v29 = (v34 - 1) & v34;
        v32 = __clz(__rbit64(v34)) + (v26 << 6);
      }
      v36 = *(char *)(*(_QWORD *)(a3 + 48) + v32);
      sub_23E53845C();
      v37 = dword_23E54F750[v36];
      sub_23E53848C();
      result = sub_23E5384A4();
      v38 = -1 << *(_BYTE *)(a4 + 32);
      v39 = result & ~v38;
      if (((*(_QWORD *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
      {
        v40 = *(_QWORD *)(a4 + 48);
        if (dword_23E54F750[*(char *)(v40 + v39)] == v37)
        {
LABEL_56:
          *(unint64_t *)((char *)v43 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
          if (__OFADD__(v47, 1))
            goto LABEL_62;
          ++v47;
        }
        else
        {
          v41 = ~v38;
          while (1)
          {
            v39 = (v39 + 1) & v41;
            if (((*(_QWORD *)(v30 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
              break;
            if (dword_23E54F750[*(char *)(v40 + v39)] == v37)
              goto LABEL_56;
          }
        }
      }
    }
  }
  v6 = 0;
  v7 = a4 + 56;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a4 + 56);
  v45 = (unint64_t)(v8 + 63) >> 6;
  v11 = a3 + 56;
  v47 = 0;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_22:
    v17 = *(char *)(*(_QWORD *)(a4 + 48) + v13);
    sub_23E53845C();
    v18 = dword_23E54F750[v17];
    sub_23E53848C();
    result = sub_23E5384A4();
    v19 = -1 << *(_BYTE *)(a3 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    v22 = 1 << v20;
    if (((1 << v20) & *(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v23 = *(_QWORD *)(a3 + 48);
      if (dword_23E54F750[*(char *)(v23 + v20)] == v18)
      {
LABEL_29:
        v43[v21] |= v22;
        if (__OFADD__(v47, 1))
          goto LABEL_61;
        ++v47;
      }
      else
      {
        for (i = v20 + 1; ; i = v25 + 1)
        {
          v25 = i & ~v19;
          if (((*(_QWORD *)(v11 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
            break;
          if (dword_23E54F750[*(char *)(v23 + v25)] == v18)
          {
            v21 = v25 >> 6;
            v22 = 1 << v25;
            goto LABEL_29;
          }
        }
      }
    }
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  if (v14 >= v45)
    goto LABEL_58;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_21;
  v6 = v14 + 1;
  if (v14 + 1 >= v45)
    goto LABEL_58;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 2;
  if (v14 + 2 >= v45)
    goto LABEL_58;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 3;
  if (v16 >= v45)
    goto LABEL_58;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v45)
      goto LABEL_58;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_23E4164CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_23E416514(uint64_t a1)
{
  uint64_t v1;

  return sub_23E4158A8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E416530(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E4165AC(&qword_256D3F910, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[2] = sub_23E4165AC(&qword_256D3F8E0, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[3] = sub_23E4165AC(&qword_256D40368, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  result = sub_23E4165AC(&qword_256D40370, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[4] = result;
  return result;
}

uint64_t sub_23E4165AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StaticMatterDevice();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StaticUser.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticUser.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticUser() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticUser.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticUser() + 24);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticUser.kind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticUser();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

BOOL static StaticUser.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticUser.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticUser();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E5374D8();
  return sub_23E538468();
}

uint64_t sub_23E4167C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4167E8 + 4 * byte_23E54F7C0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4167E8()
{
  return 1701667182;
}

uint64_t sub_23E4167F8()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E41680C()
{
  return 1684957547;
}

uint64_t sub_23E41681C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E419060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E416840()
{
  sub_23E41823C();
  return sub_23E538570();
}

uint64_t sub_23E416868()
{
  sub_23E41823C();
  return sub_23E53857C();
}

uint64_t StaticUser.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46BC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E41823C();
  sub_23E5384EC();
  v16 = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticUser();
    v15 = 1;
    sub_23E538270();
    v14 = 2;
    sub_23E5382AC();
    v13 = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v12 = 3;
    sub_23E418280();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticUser.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticUser();
  sub_23E5375EC();
  sub_23E5374D8();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticUser.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v31 = a2;
  v32 = sub_23E536F80();
  v35 = *(_QWORD *)(v32 - 8);
  v3 = MEMORY[0x24BDAC7A8](v32);
  v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)v29 - v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46BD8);
  v7 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticUser();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E41823C();
  v33 = v9;
  v13 = (uint64_t)v37;
  sub_23E5384E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = v5;
  v14 = v7;
  v37 = a1;
  v15 = v12;
  v16 = v35;
  v42 = 0;
  v17 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v19 = v32;
  v18 = v33;
  v20 = v34;
  sub_23E538180();
  v29[1] = v17;
  v21 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v22 = (uint64_t)v15;
  v21(v15, v36, v19);
  v41 = 1;
  v23 = sub_23E538144();
  v24 = v10;
  v25 = (uint64_t *)(v22 + *(int *)(v10 + 20));
  *v25 = v23;
  v25[1] = v26;
  v40 = 2;
  v27 = v30;
  v36 = 0;
  sub_23E538180();
  v21((char *)(v22 + *(int *)(v24 + 24)), v27, v19);
  v38 = 3;
  sub_23E4182C4();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v20);
  *(_BYTE *)(v22 + *(int *)(v24 + 28)) = v39;
  sub_23E418308(v22, v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  return sub_23E41834C(v22);
}

uint64_t sub_23E416EC4()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  sub_23E5374D8();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E416F88()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  sub_23E5374D8();
  return sub_23E538468();
}

uint64_t sub_23E417034()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  sub_23E5374D8();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E4170F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticUser.init(from:)(a1, a2);
}

uint64_t sub_23E417108(_QWORD *a1)
{
  return StaticUser.encode(to:)(a1);
}

uint64_t StaticUser.Kind.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E417144()
{
  sub_23E418454();
  return sub_23E538570();
}

uint64_t sub_23E41716C()
{
  sub_23E418454();
  return sub_23E53857C();
}

uint64_t sub_23E417194()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4171C0 + 4 * byte_23E54F7C4[*v0]))(0x72656E776FLL, 0xE500000000000000);
}

uint64_t sub_23E4171C0()
{
  return 0x7473696E696D6461;
}

uint64_t sub_23E4171E4()
{
  return 0x746E656469736572;
}

uint64_t sub_23E4171FC()
{
  return 0x7463697274736572;
}

uint64_t sub_23E417220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4191D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E417244()
{
  sub_23E418388();
  return sub_23E538570();
}

uint64_t sub_23E41726C()
{
  sub_23E418388();
  return sub_23E53857C();
}

uint64_t sub_23E417294()
{
  sub_23E418498();
  return sub_23E538570();
}

uint64_t sub_23E4172BC()
{
  sub_23E418498();
  return sub_23E53857C();
}

uint64_t sub_23E4172E4()
{
  sub_23E418410();
  return sub_23E538570();
}

uint64_t sub_23E41730C()
{
  sub_23E418410();
  return sub_23E53857C();
}

uint64_t sub_23E417334()
{
  sub_23E4183CC();
  return sub_23E538570();
}

uint64_t sub_23E41735C()
{
  sub_23E4183CC();
  return sub_23E53857C();
}

void StaticUser.Kind.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46BE8);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46BF0);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46BF8);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C00);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C08);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E418388();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E41753C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_23E418498();
  sub_23E5381E0();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t StaticUser.Kind.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticUser.Kind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C38);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C40);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C48);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46C58);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E418388();
  v15 = v28;
  sub_23E5384E0();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23E5381C8();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23E537ED4();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v19 = &type metadata for StaticUser.Kind;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_23E417B38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticUser.Kind.init(from:)(a1, a2);
}

void sub_23E417B4C(_QWORD *a1)
{
  StaticUser.Kind.encode(to:)(a1);
}

uint64_t StaticUser.user.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E417B78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E417BE4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E417C48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E417CA8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E417CF0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E417D58()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_userFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

void sub_23E417DB4(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  id v4;
  char v5;
  char v6;
  char v7[24];
  ValueMetadata *v8;
  unint64_t v9;

  v4 = objc_msgSend(a1, sel_homeAccessControlForUser_, a2);
  if (objc_msgSend(v4, sel_isOwner))
  {

    v5 = 0;
  }
  else
  {
    if (!objc_msgSend(v4, sel_isAdministrator))
    {
      if (objc_msgSend(v4, sel_isRestrictedGuest))
      {
        v8 = &type metadata for HomeKitFeatures;
        v9 = sub_23E20B680();
        v7[0] = 1;
        v6 = sub_23E5370AC();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);

        if ((v6 & 1) != 0)
        {
          v5 = 3;
          goto LABEL_10;
        }
      }
      else
      {

      }
      v5 = 2;
      goto LABEL_10;
    }

    v5 = 1;
  }
LABEL_10:
  *a3 = v5;
}

Swift::Bool __swiftcall StaticUser.hasAdminPrivilege()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  Swift::Bool v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for StaticUser();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 28));
  sub_23E418308(v1, (uint64_t)v5);
  if (v6)
    v7 = v5[*(int *)(v2 + 28)] == 1;
  else
    v7 = 1;
  sub_23E41834C((uint64_t)v5);
  return v7;
}

BOOL sub_23E417F3C(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_23E417F64(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_23E417F80(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_23E417F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;

  v0 = sub_23E536F80();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for StaticUser();
  __swift_allocate_value_buffer((uint64_t)v4, qword_256D46BA8);
  v5 = __swift_project_value_buffer((uint64_t)v4, (uint64_t)qword_256D46BA8);
  if (qword_256D3EE78 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v0, (uint64_t)qword_256D89810);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v7(v3, v6, v0);
  if (qword_256D3EE00 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v0, (uint64_t)qword_256D897C0);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  v9 = (_QWORD *)(v5 + v4[5]);
  *v9 = 0x5520656C706D6153;
  v9[1] = 0xEB00000000726573;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v5 + v4[6], v8, v0);
  *(_BYTE *)(v5 + v4[7]) = 0;
  return result;
}

uint64_t static StaticUser.sample.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EE70 != -1)
    swift_once();
  v2 = type metadata accessor for StaticUser();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D46BA8);
  return sub_23E418308(v3, a1);
}

uint64_t sub_23E418164(uint64_t a1)
{
  return sub_23E375F34(a1, qword_254334C30);
}

uint64_t sub_23E418180(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D89810);
}

BOOL _s13HomeDataModel10StaticUserV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  _BOOL8 result;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticUser();
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_23E538354(), result = 0, (v10 & 1) != 0))
  {
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      return *(unsigned __int8 *)(a1 + *(int *)(v4 + 28)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 28));
    return 0;
  }
  return result;
}

unint64_t sub_23E41823C()
{
  unint64_t result;

  result = qword_256D46BC8;
  if (!qword_256D46BC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FF1C, &type metadata for StaticUser.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46BC8);
  }
  return result;
}

unint64_t sub_23E418280()
{
  unint64_t result;

  result = qword_256D46BD0;
  if (!qword_256D46BD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticUser.Kind, &type metadata for StaticUser.Kind);
    atomic_store(result, (unint64_t *)&qword_256D46BD0);
  }
  return result;
}

unint64_t sub_23E4182C4()
{
  unint64_t result;

  result = qword_256D46BE0;
  if (!qword_256D46BE0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticUser.Kind, &type metadata for StaticUser.Kind);
    atomic_store(result, (unint64_t *)&qword_256D46BE0);
  }
  return result;
}

uint64_t sub_23E418308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E41834C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23E418388()
{
  unint64_t result;

  result = qword_256D46C10;
  if (!qword_256D46C10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FECC, &type metadata for StaticUser.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C10);
  }
  return result;
}

unint64_t sub_23E4183CC()
{
  unint64_t result;

  result = qword_256D46C18;
  if (!qword_256D46C18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FE7C, &type metadata for StaticUser.Kind.RestrictedGuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C18);
  }
  return result;
}

unint64_t sub_23E418410()
{
  unint64_t result;

  result = qword_256D46C20;
  if (!qword_256D46C20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FE2C, &type metadata for StaticUser.Kind.ResidentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C20);
  }
  return result;
}

unint64_t sub_23E418454()
{
  unint64_t result;

  result = qword_256D46C28;
  if (!qword_256D46C28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FDDC, &type metadata for StaticUser.Kind.AdministratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C28);
  }
  return result;
}

unint64_t sub_23E418498()
{
  unint64_t result;

  result = qword_256D46C30;
  if (!qword_256D46C30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FD8C, &type metadata for StaticUser.Kind.OwnerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C30);
  }
  return result;
}

uint64_t _s13HomeDataModel10StaticUserV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v29;
  uint64_t v31;

  v4 = type metadata accessor for StaticUser();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v31 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v31 - v15;
  v17 = *(int *)(v14 + 20);
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_23E418308(a1, (uint64_t)&v31 - v15);
    sub_23E418308(a2, (uint64_t)v13);
  }
  else
  {
    v22 = 1;
    v23 = sub_23E538354();
    sub_23E418308(a1, (uint64_t)v16);
    sub_23E418308(a2, (uint64_t)v13);
    if ((v23 & 1) != 0)
      goto LABEL_17;
  }
  v24 = *(int *)(v4 + 20);
  v25 = *(_QWORD *)&v16[v24];
  v26 = *(_QWORD *)&v16[v24 + 8];
  v27 = &v13[v24];
  if (v25 == *(_QWORD *)v27 && v26 == *((_QWORD *)v27 + 1))
  {
    sub_23E418308((uint64_t)v16, (uint64_t)v10);
    sub_23E418308((uint64_t)v13, (uint64_t)v7);
  }
  else
  {
    v29 = sub_23E538354();
    sub_23E418308((uint64_t)v16, (uint64_t)v10);
    sub_23E418308((uint64_t)v13, (uint64_t)v7);
    v22 = 0;
    if ((v29 & 1) == 0)
      goto LABEL_16;
  }
  v22 = MEMORY[0x24264E1E8](v10, v7);
LABEL_16:
  sub_23E41834C((uint64_t)v7);
  sub_23E41834C((uint64_t)v10);
LABEL_17:
  sub_23E41834C((uint64_t)v13);
  sub_23E41834C((uint64_t)v16);
  return v22 & 1;
}

uint64_t sub_23E4186B0()
{
  return sub_23E1EE1C4(&qword_256D46C68, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
}

unint64_t sub_23E4186E0()
{
  unint64_t result;

  result = qword_256D46C70;
  if (!qword_256D46C70)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticUser.Kind, &type metadata for StaticUser.Kind);
    atomic_store(result, (unint64_t *)&qword_256D46C70);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticUser(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = &a2[v10];
    swift_bridgeObjectRetain();
    v8(v14, v15, v7);
    a1[a3[7]] = a2[a3[7]];
  }
  return a1;
}

uint64_t destroy for StaticUser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t assignWithCopy for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for StaticUser(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticUser()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E418A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticUser()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E418AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.Kind()
{
  return &type metadata for StaticUser.Kind;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.CodingKeys()
{
  return &type metadata for StaticUser.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.OwnerCodingKeys()
{
  return &type metadata for StaticUser.Kind.OwnerCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.AdministratorCodingKeys()
{
  return &type metadata for StaticUser.Kind.AdministratorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.ResidentCodingKeys()
{
  return &type metadata for StaticUser.Kind.ResidentCodingKeys;
}

ValueMetadata *type metadata accessor for StaticUser.Kind.RestrictedGuestCodingKeys()
{
  return &type metadata for StaticUser.Kind.RestrictedGuestCodingKeys;
}

uint64_t _s13HomeDataModel10StaticUserV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E418BF0 + 4 * byte_23E54F7D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E418C24 + 4 * byte_23E54F7D0[v4]))();
}

uint64_t sub_23E418C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E418C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E418C34);
  return result;
}

uint64_t sub_23E418C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E418C48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E418C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E418C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticUser.CodingKeys()
{
  return &type metadata for StaticUser.CodingKeys;
}

unint64_t sub_23E418C74()
{
  unint64_t result;

  result = qword_256D46C78;
  if (!qword_256D46C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FB6C, &type metadata for StaticUser.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C78);
  }
  return result;
}

unint64_t sub_23E418CBC()
{
  unint64_t result;

  result = qword_256D46C80;
  if (!qword_256D46C80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FD64, &type metadata for StaticUser.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C80);
  }
  return result;
}

unint64_t sub_23E418D04()
{
  unint64_t result;

  result = qword_256D46C88;
  if (!qword_256D46C88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FC84, &type metadata for StaticUser.Kind.OwnerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C88);
  }
  return result;
}

unint64_t sub_23E418D4C()
{
  unint64_t result;

  result = qword_256D46C90;
  if (!qword_256D46C90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FCAC, &type metadata for StaticUser.Kind.OwnerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C90);
  }
  return result;
}

unint64_t sub_23E418D94()
{
  unint64_t result;

  result = qword_256D46C98;
  if (!qword_256D46C98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FC34, &type metadata for StaticUser.Kind.AdministratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46C98);
  }
  return result;
}

unint64_t sub_23E418DDC()
{
  unint64_t result;

  result = qword_256D46CA0;
  if (!qword_256D46CA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FC5C, &type metadata for StaticUser.Kind.AdministratorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CA0);
  }
  return result;
}

unint64_t sub_23E418E24()
{
  unint64_t result;

  result = qword_256D46CA8;
  if (!qword_256D46CA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FBE4, &type metadata for StaticUser.Kind.ResidentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CA8);
  }
  return result;
}

unint64_t sub_23E418E6C()
{
  unint64_t result;

  result = qword_256D46CB0;
  if (!qword_256D46CB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FC0C, &type metadata for StaticUser.Kind.ResidentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CB0);
  }
  return result;
}

unint64_t sub_23E418EB4()
{
  unint64_t result;

  result = qword_256D46CB8;
  if (!qword_256D46CB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FB94, &type metadata for StaticUser.Kind.RestrictedGuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CB8);
  }
  return result;
}

unint64_t sub_23E418EFC()
{
  unint64_t result;

  result = qword_256D46CC0;
  if (!qword_256D46CC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FBBC, &type metadata for StaticUser.Kind.RestrictedGuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CC0);
  }
  return result;
}

unint64_t sub_23E418F44()
{
  unint64_t result;

  result = qword_256D46CC8;
  if (!qword_256D46CC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FCD4, &type metadata for StaticUser.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CC8);
  }
  return result;
}

unint64_t sub_23E418F8C()
{
  unint64_t result;

  result = qword_256D46CD0;
  if (!qword_256D46CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FCFC, &type metadata for StaticUser.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CD0);
  }
  return result;
}

unint64_t sub_23E418FD4()
{
  unint64_t result;

  result = qword_256D46CD8;
  if (!qword_256D46CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FADC, &type metadata for StaticUser.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CD8);
  }
  return result;
}

unint64_t sub_23E41901C()
{
  unint64_t result;

  result = qword_256D46CE0;
  if (!qword_256D46CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54FB04, &type metadata for StaticUser.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CE0);
  }
  return result;
}

uint64_t sub_23E419060(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E4191D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72656E776FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473696E696D6461 && a2 == 0xED0000726F746172 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E656469736572 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463697274736572 && a2 == 0xEF74736575476465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E4193D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E419418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E419460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4194A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E4194E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E419528@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t updated;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t result;
  _QWORD v25[6];
  _QWORD *v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;

  v26 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v7);
  v25[5] = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  v29 = v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v25[4] = (char *)v25 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v30 = (char *)v25 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v31 = (char *)v25 - v19;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (*a3)
  {
    v27 = a2;
    v25[2] = a1;
    sub_23E1E2F50(a1, (uint64_t)v25 - v22, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
    v23 = (char *)&loc_23E4196F4 + *((int *)qword_23E41A2B8 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  v32 = 0;
  sub_23E41A2D8(a2, &v32, &v33);
  result = sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  *v26 = v33;
  return result;
}

uint64_t sub_23E41A2D8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  isUniquelyReferenced_nonNull_native = sub_23E536F80();
  v7 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x24BDAC7A8](isUniquelyReferenced_nonNull_native);
  v51 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = (_QWORD *)sub_23E207430(MEMORY[0x24BEE4AF8]);
  if (!a1)
  {
    if (!v9)
      v9 = sub_23E207430(MEMORY[0x24BEE4AF8]);
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  if (!((unint64_t)a1 >> 62))
  {
    v11 = *(_QWORD *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v41 = a3;
    if (v11)
      goto LABEL_4;
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRetain_n();
  v11 = sub_23E53803C();
  swift_bridgeObjectRelease();
  v41 = a3;
  if (!v11)
  {
LABEL_28:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    v9 = (unint64_t)v10;
    a3 = v41;
LABEL_29:
    result = swift_bridgeObjectRelease();
    *a3 = v9;
    return result;
  }
LABEL_4:
  a3 = 0;
  v44 = isUniquelyReferenced_nonNull_native;
  v45 = (unint64_t)a1 & 0xC000000000000001;
  v12 = 4;
  v42 = v11;
  v43 = v7;
  while (1)
  {
    v17 = v12 - 4;
    if (v45)
    {
      v18 = MEMORY[0x24264F148](v12 - 4, a1);
      v19 = __OFADD__(v17, 1);
      v20 = v12 - 3;
      if (v19)
        goto LABEL_24;
    }
    else
    {
      v18 = a1[v12];
      swift_retain();
      v19 = __OFADD__(v17, 1);
      v20 = v12 - 3;
      if (v19)
      {
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v46(v51, v18 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, isUniquelyReferenced_nonNull_native);
    v7 = *(_QWORD *)(v18 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms);
    v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers);
    v22 = *(void **)(v18 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError);
    v23 = *(void **)(v18 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError);
    v52 = (_QWORD *)v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_23E223038(v22);
    v49 = (uint64_t)v23;
    sub_23E223038(v23);
    sub_23E41B350((uint64_t *)&v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_23E530D04, sub_23E41C130);
    if (a3)
      break;
    v50 = (uint64_t)v22;
    v48 = v20;
    swift_bridgeObjectRelease();
    v24 = (uint64_t)v52;
    v52 = (_QWORD *)v21;
    swift_bridgeObjectRetain();
    sub_23E41B350((uint64_t *)&v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_23E530CF0, sub_23E41B3E0);
    swift_bridgeObjectRelease();
    v25 = (uint64_t)v52;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = v10;
    v27 = sub_23E1E3300(v51);
    v28 = v10[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      goto LABEL_25;
    v31 = v26;
    v32 = v10[3];
    v47 = 0;
    if (v32 >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23E21F9E8();
    }
    else
    {
      sub_23E2160DC(v30, isUniquelyReferenced_nonNull_native);
      v33 = sub_23E1E3300(v51);
      if ((v31 & 1) != (v34 & 1))
        goto LABEL_31;
      v27 = v33;
    }
    a3 = a1;
    v10 = v52;
    if ((v31 & 1) != 0)
    {
      v13 = (uint64_t *)(v52[7] + 32 * v27);
      v14 = (void *)v13[2];
      v15 = (void *)v13[3];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E223048(v14);
      sub_23E223048(v15);
      *v13 = v24;
      v13[1] = v25;
      v16 = v49;
      v13[2] = v50;
      v13[3] = v16;
      v7 = v43;
      isUniquelyReferenced_nonNull_native = v44;
    }
    else
    {
      v52[(v27 >> 6) + 8] |= 1 << v27;
      v7 = v43;
      isUniquelyReferenced_nonNull_native = v44;
      v46(v10[6] + *(_QWORD *)(v43 + 72) * v27, v51, v44);
      v35 = (uint64_t *)(v10[7] + 32 * v27);
      *v35 = v24;
      v35[1] = v25;
      v36 = v49;
      v35[2] = v50;
      v35[3] = v36;
      v37 = v10[2];
      v19 = __OFADD__(v37, 1);
      v38 = v37 + 1;
      if (v19)
        goto LABEL_26;
      v10[2] = v38;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v51, isUniquelyReferenced_nonNull_native);
    swift_release();
    ++v12;
    a1 = a3;
    a3 = v47;
    if (v48 == v42)
      goto LABEL_28;
  }
  swift_release();
  __break(1u);
LABEL_31:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E41A700@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)();
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v6 = 0;
  v7 = type metadata accessor for StaticAlarm();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  v12 = a2[1];
  v14 = (void *)a2[2];
  v13 = (void *)a2[3];
  v37 = v11;
  if (v11)
  {
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_23E41DDC0(v15, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v32 = 0;
    v33 = v12;
    v34 = v14;
    v35 = v13;
    v36 = a3;
    v40 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v38 = a1 + v40;
    v17 = *(_QWORD *)(v8 + 72);
    v31[1] = a1;
    swift_bridgeObjectRetain();
    v18 = 0;
    v19 = type metadata accessor for StaticAlarm;
    do
    {
      v20 = v38 + v17 * v18;
      v21 = *(_QWORD *)(v16 + 16);
      if (v21)
      {
        v22 = v10;
        v23 = v19;
        v24 = v16 + v40;
        swift_bridgeObjectRetain();
        do
        {
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v19 = v23;
            v10 = v22;
            goto LABEL_7;
          }
          v24 += v17;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        v19 = v23;
        v10 = v22;
      }
      sub_23E1E2F50(v20, (uint64_t)v10, (uint64_t (*)(_QWORD))v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_23E51FDF8(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v26 = *(_QWORD *)(v16 + 16);
      v25 = *(_QWORD *)(v16 + 24);
      if (v26 >= v25 >> 1)
        v16 = sub_23E51FDF8(v25 > 1, v26 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v26 + 1;
      sub_23E1E2FDC((uint64_t)v10, v16 + v40 + v26 * v17, (uint64_t (*)(_QWORD))v19);
LABEL_7:
      ++v18;
    }
    while (v18 != v39);
    swift_bridgeObjectRelease();
    v13 = v35;
    a3 = v36;
    v12 = v33;
    v14 = v34;
    v6 = v32;
  }
  if (v37)
  {
    swift_bridgeObjectRetain();
    sub_23E223038(v14);
    sub_23E223038(v13);
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v12 = MEMORY[0x24BEE4AF8];
  }
  v27 = (uint64_t)v13;
  v41 = v16;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_23E530D04, sub_23E41C130);
  if (v6)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v28 = v41;
    v41 = v12;
    swift_bridgeObjectRetain();
    sub_23E41B350(&v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_23E530CF0, sub_23E41B3E0);
    result = swift_bridgeObjectRelease();
    v30 = v41;
    *a3 = v28;
    a3[1] = v30;
    a3[2] = (uint64_t)v14;
    a3[3] = v27;
  }
  return result;
}

uint64_t sub_23E41AA0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = type metadata accessor for StaticAlarm();
  v6 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v14 = (void *)a2[2];
  v32 = a2[1];
  v33 = v14;
  v31 = (id)a2[3];
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v29 = v13;
    v30 = a3;
    v36 = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v15, 0);
    v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v34 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23E1E2F50(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &v8[*(int *)(v35 + 36)], v9);
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v16 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v36;
      }
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23E2058F8(v18 > 1, v19 + 1, 1);
        v16 = v36;
      }
      *(_QWORD *)(v16 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, v12, v9);
      v36 = v16;
      v17 += v34;
      --v15;
    }
    while (v15);
    v13 = v29;
    a3 = v30;
  }
  v21 = v32;
  v20 = v33;
  if (v13)
  {
    v22 = v13;
    swift_bridgeObjectRetain();
    v23 = sub_23E41E2A8(v22, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23E223038(v20);
    v24 = (uint64_t)v31;
    sub_23E223038(v31);
  }
  else
  {
    swift_bridgeObjectRelease();
    v24 = 0;
    v20 = 0;
    v21 = MEMORY[0x24BEE4AF8];
    v23 = MEMORY[0x24BEE4AF8];
  }
  v36 = v23;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_23E530D04, sub_23E41C130);
  swift_bridgeObjectRelease();
  v25 = v36;
  v36 = v21;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_23E530CF0, sub_23E41B3E0);
  result = swift_bridgeObjectRelease();
  v27 = v36;
  *a3 = v25;
  a3[1] = v27;
  a3[2] = (uint64_t)v20;
  a3[3] = v24;
  return result;
}

uint64_t sub_23E41AD08@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v6 = 0;
  v7 = type metadata accessor for StaticTimer();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)a2[2];
  v11 = (void *)a2[3];
  v31 = *a2;
  if (v31)
  {
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_23E41E034(v13, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = MEMORY[0x24BEE4AF8];
  }
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v27 = 0;
    v28 = v12;
    v29 = v11;
    v30 = a3;
    v34 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v32 = a1 + v34;
    v15 = *(_QWORD *)(v8 + 72);
    v26 = a1;
    swift_bridgeObjectRetain();
    v16 = 0;
    do
    {
      v17 = v32 + v15 * v16;
      v18 = *(_QWORD *)(v14 + 16);
      if (v18)
      {
        v19 = v14 + v34;
        swift_bridgeObjectRetain();
        do
        {
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
          v19 += v15;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
      }
      sub_23E1E2F50(v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_23E51F488(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v21 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      if (v21 >= v20 >> 1)
        v14 = sub_23E51F488(v20 > 1, v21 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v21 + 1;
      sub_23E1E2FDC((uint64_t)v10, v14 + v34 + v21 * v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
LABEL_7:
      ++v16;
    }
    while (v16 != v33);
    swift_bridgeObjectRelease();
    v11 = v29;
    a3 = v30;
    v6 = v27;
    v12 = v28;
  }
  v22 = v31;
  if (v31)
  {
    swift_bridgeObjectRetain();
    sub_23E223038(v12);
    sub_23E223038(v11);
  }
  else
  {
    v11 = 0;
    v12 = 0;
    v22 = MEMORY[0x24BEE4AF8];
  }
  v35 = v22;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_23E530D04, sub_23E41C130);
  if (v6)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = v35;
    v35 = v14;
    swift_bridgeObjectRetain();
    sub_23E41B350(&v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_23E530CF0, sub_23E41B3E0);
    result = swift_bridgeObjectRelease();
    v25 = v35;
    *a3 = v23;
    a3[1] = v25;
    a3[2] = (uint64_t)v12;
    a3[3] = (uint64_t)v11;
  }
  return result;
}

uint64_t sub_23E41B008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = type metadata accessor for StaticTimer();
  v6 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v30 = a2[1];
  v31 = v13;
  v14 = (void *)a2[3];
  v32 = (void *)a2[2];
  v33 = v14;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v29 = a3;
    v36 = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v15, 0);
    v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v34 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23E1E2F50(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &v8[*(int *)(v35 + 40)], v9);
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v16 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v36;
      }
      v19 = *(_QWORD *)(v16 + 16);
      v18 = *(_QWORD *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23E2058F8(v18 > 1, v19 + 1, 1);
        v16 = v36;
      }
      *(_QWORD *)(v16 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, v12, v9);
      v36 = v16;
      v17 += v34;
      --v15;
    }
    while (v15);
    a3 = v29;
  }
  v21 = v32;
  v20 = v33;
  v22 = v31;
  if (v31)
  {
    v23 = swift_bridgeObjectRetain();
    v24 = sub_23E41E608(v23, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23E223038(v21);
    sub_23E223038(v20);
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 0;
    v21 = 0;
    v24 = MEMORY[0x24BEE4AF8];
    v22 = MEMORY[0x24BEE4AF8];
  }
  v36 = v22;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t))sub_23E530D04, sub_23E41C130);
  swift_bridgeObjectRelease();
  v25 = v36;
  v36 = v24;
  swift_bridgeObjectRetain();
  sub_23E41B350(&v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t))sub_23E530CF0, sub_23E41B3E0);
  result = swift_bridgeObjectRelease();
  v27 = v36;
  *a3 = v25;
  a3[1] = v27;
  a3[2] = (uint64_t)v21;
  a3[3] = (uint64_t)v20;
  return result;
}

void sub_23E41B304(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E223048(a3);
    sub_23E223048(a4);
  }
}

uint64_t sub_23E41B350(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_23E41B3E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  double *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  int v42;
  double v43;
  double *v44;
  double v45;
  int *v46;
  double v47;
  int v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  double v57;
  double v58;
  double v59;
  int v60;
  double v61;
  double v62;
  double v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double *v82;
  int *v83;
  uint64_t v84;
  int v85;
  double v86;
  double v87;
  double v88;
  int v89;
  double v90;
  double v91;
  double v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  double *v156;
  uint64_t v157;
  double *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  double *v164;
  double *v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  double *v170;
  int *v171;
  double *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;

  v2 = v1;
  v171 = (int *)type metadata accessor for StaticTimer();
  v167 = *((_QWORD *)v171 - 1);
  v4 = MEMORY[0x24BDAC7A8](v171);
  v162 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v173 = (uint64_t)&v154 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (double *)((char *)&v154 - v9);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v170 = (double *)((char *)&v154 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (double *)((char *)&v154 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (double *)((char *)&v154 - v17);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (double *)((char *)&v154 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (double *)((char *)&v154 - v22);
  v175 = a1;
  v24 = a1[1];
  result = sub_23E53830C();
  if (result >= v24)
  {
    if (v24 < 0)
      goto LABEL_195;
    if (v24)
      return sub_23E41CC04(0, v24, 1, v175);
    return result;
  }
  if (v24 >= 0)
    v26 = v24;
  else
    v26 = v24 + 1;
  if (v24 < -1)
    goto LABEL_203;
  v27 = v24;
  v172 = v10;
  v157 = result;
  if (v24 < 2)
  {
    v31 = (char *)MEMORY[0x24BEE4AF8];
    v166 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
    v155 = MEMORY[0x24BEE4AF8];
    if (v24 != 1)
    {
      v34 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_161:
      if (v34 >= 2)
      {
        v148 = *v175;
        do
        {
          v149 = v34 - 2;
          if (v34 < 2)
            goto LABEL_190;
          if (!v148)
            goto LABEL_202;
          v150 = *(_QWORD *)&v31[16 * v149 + 32];
          v151 = *(_QWORD *)&v31[16 * v34 + 24];
          sub_23E41D188(v148 + *(_QWORD *)(v167 + 72) * v150, v148 + *(_QWORD *)(v167 + 72) * *(_QWORD *)&v31[16 * v34 + 16], v148 + *(_QWORD *)(v167 + 72) * v151, v166);
          if (v2)
            break;
          if (v151 < v150)
            goto LABEL_191;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v31 = sub_23E530CC8((uint64_t)v31);
          if (v149 >= *((_QWORD *)v31 + 2))
            goto LABEL_192;
          v152 = &v31[16 * v149 + 32];
          *(_QWORD *)v152 = v150;
          *((_QWORD *)v152 + 1) = v151;
          v153 = *((_QWORD *)v31 + 2);
          if (v34 > v153)
            goto LABEL_193;
          memmove(&v31[16 * v34 + 16], &v31[16 * v34 + 32], 16 * (v153 - v34));
          *((_QWORD *)v31 + 2) = v153 - 1;
          v34 = v153 - 1;
        }
        while (v153 > 2);
      }
LABEL_172:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v155 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v28 = v26 >> 1;
    v29 = sub_23E537844();
    *(_QWORD *)(v29 + 16) = v28;
    v30 = *(unsigned __int8 *)(v167 + 80);
    v155 = v29;
    v166 = v29 + ((v30 + 32) & ~v30);
  }
  v32 = v27;
  v33 = 0;
  v31 = (char *)MEMORY[0x24BEE4AF8];
  v164 = v15;
  v165 = v18;
  v156 = v21;
  v158 = v23;
LABEL_15:
  v35 = v33;
  v36 = v33 + 1;
  v163 = v33;
  v169 = v32;
  if (v33 + 1 >= v32)
  {
    v44 = v172;
    goto LABEL_76;
  }
  v37 = *v175;
  v38 = *(_QWORD *)(v167 + 72);
  v161 = v33 + 1;
  sub_23E1E2F50(v37 + v38 * v36, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v159 = v37;
  v174 = v38;
  v39 = v37 + v38 * v35;
  v40 = v156;
  sub_23E1E2F50(v39, (uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v41 = v171[8];
  v42 = *((unsigned __int8 *)v23 + v41);
  if (v42 == 1)
  {
    v44 = v172;
    v43 = *(double *)((char *)v23 + v171[6]);
  }
  else if (v42 == 2)
  {
    v43 = *v23;
    v44 = v172;
  }
  else
  {
    v43 = 0.0;
    v44 = v172;
    if (v42 == 3)
    {
      v45 = *v23;
      v46 = v171;
      sub_23E536ECC();
      v44 = v172;
      v43 = v45 + v47;
      v41 = v46[8];
      v18 = v165;
    }
  }
  v48 = *((unsigned __int8 *)v40 + v41);
  switch(v48)
  {
    case 1:
      v51 = *(double *)((char *)v40 + v171[6]);
      if (v43 != v51)
        goto LABEL_35;
      goto LABEL_33;
    case 2:
      v51 = *v40;
      if (v43 != *v40)
        goto LABEL_35;
      goto LABEL_33;
    case 3:
      v49 = *v40;
      sub_23E536ECC();
      v44 = v172;
      v51 = v49 + v50;
      if (v43 != v51)
        goto LABEL_35;
LABEL_33:
      LODWORD(v168) = MEMORY[0x24264E1E8]((char *)v23 + v171[10], (char *)v40 + v171[10]);
      goto LABEL_36;
  }
  if (v43 == 0.0)
    goto LABEL_33;
  v51 = 0.0;
LABEL_35:
  LODWORD(v168) = v43 < v51;
LABEL_36:
  sub_23E1E2FA0((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  sub_23E1E2FA0((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v36 = v35 + 2;
  v32 = v169;
  if (v35 + 2 < v169)
  {
    v52 = v159;
    v160 = v174 * v36;
    v161 *= v174;
    v53 = v171;
    while (1)
    {
      v54 = v36;
      sub_23E1E2F50(v52 + v160, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2F50(v52 + v161, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v55 = v53[8];
      v56 = *((unsigned __int8 *)v18 + v55);
      if (v56 == 1)
      {
        v57 = *(double *)((char *)v18 + v53[6]);
      }
      else if (v56 == 2)
      {
        v57 = *v18;
      }
      else
      {
        v57 = 0.0;
        if (v56 == 3)
        {
          v58 = *v18;
          sub_23E536ECC();
          v44 = v172;
          v57 = v58 + v59;
          v55 = v53[8];
        }
      }
      v60 = *((unsigned __int8 *)v15 + v55);
      switch(v60)
      {
        case 1:
          v63 = *(double *)((char *)v15 + v53[6]);
          if (v57 == v63)
            goto LABEL_54;
          break;
        case 2:
          v63 = *v15;
          if (v57 == *v15)
            goto LABEL_54;
          break;
        case 3:
          v61 = *v15;
          sub_23E536ECC();
          v44 = v172;
          v63 = v61 + v62;
          if (v57 == v63)
            goto LABEL_54;
          break;
        default:
          if (v57 == 0.0)
          {
LABEL_54:
            v64 = MEMORY[0x24264E1E8]((char *)v18 + v53[10], (char *)v15 + v53[10]);
            goto LABEL_57;
          }
          v63 = 0.0;
          break;
      }
      v64 = v57 < v63;
LABEL_57:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if (((v168 ^ v64) & 1) != 0)
      {
        v36 = v54;
        v35 = v163;
        v32 = v169;
        if ((v168 & 1) != 0)
          goto LABEL_63;
        goto LABEL_76;
      }
      v36 = v54 + 1;
      v52 += v174;
      v32 = v169;
      v53 = v171;
      if (v169 == v54 + 1)
      {
        v36 = v169;
        v35 = v163;
        break;
      }
    }
  }
  if ((v168 & 1) != 0)
  {
LABEL_63:
    if (v36 < v35)
      goto LABEL_196;
    if (v35 < v36)
    {
      v154 = v31;
      v65 = 0;
      v66 = v174 * (v36 - 1);
      v67 = v36 * v174;
      v68 = v35 * v174;
      do
      {
        if (v35 != v36 + v65 - 1)
        {
          v161 = v2;
          v70 = v159;
          if (!v159)
            goto LABEL_201;
          v71 = v36;
          v72 = v159 + v68;
          v168 = v159 + v66;
          sub_23E1E2FDC(v159 + v68, v162, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          if (v68 < v66 || v72 >= v70 + v67)
          {
            v69 = v168;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            v69 = v168;
            if (v68 != v66)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_23E1E2FDC(v162, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          v44 = v172;
          v36 = v71;
          v2 = v161;
        }
        ++v35;
        --v65;
        v66 -= v174;
        v67 -= v174;
        v68 += v174;
      }
      while (v35 < v36 + v65);
      v31 = v154;
      v18 = v165;
      v35 = v163;
      v32 = v169;
    }
  }
LABEL_76:
  if (v36 >= v32)
    goto LABEL_112;
  if (__OFSUB__(v36, v35))
    goto LABEL_194;
  if (v36 - v35 >= v157)
    goto LABEL_112;
  if (__OFADD__(v35, v157))
    goto LABEL_197;
  v73 = v169;
  if (v35 + v157 < v169)
    v73 = v35 + v157;
  if (v73 >= v35)
  {
    if (v36 == v73)
      goto LABEL_112;
    v154 = v31;
    v160 = v73;
    v161 = v2;
    v74 = *(_QWORD *)(v167 + 72);
    v174 = v74 * (v36 - 1);
    v168 = v74;
    v75 = v36 * v74;
LABEL_87:
    v77 = 0;
    v78 = v35;
    v169 = v36;
    while (1)
    {
      v79 = *v175;
      v80 = v75;
      v81 = v75 + v77 + *v175;
      v82 = v170;
      sub_23E1E2F50(v81, (uint64_t)v170, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2F50(v174 + v77 + v79, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v83 = v171;
      v84 = v171[8];
      v85 = *((unsigned __int8 *)v82 + v84);
      if (v85 == 1)
      {
        v86 = *(double *)((char *)v82 + v171[6]);
      }
      else if (v85 == 2)
      {
        v86 = *v82;
      }
      else
      {
        v86 = 0.0;
        if (v85 == 3)
        {
          v87 = *v82;
          sub_23E536ECC();
          v82 = v170;
          v44 = v172;
          v86 = v87 + v88;
          v84 = v83[8];
        }
      }
      v89 = *((unsigned __int8 *)v44 + v84);
      switch(v89)
      {
        case 1:
          v92 = *(double *)((char *)v44 + v83[6]);
          if (v86 == v92)
            goto LABEL_105;
          break;
        case 2:
          v92 = *v44;
          if (v86 == *v44)
            goto LABEL_105;
          break;
        case 3:
          v90 = *v44;
          sub_23E536ECC();
          v82 = v170;
          v44 = v172;
          v92 = v90 + v91;
          if (v86 == v92)
            goto LABEL_105;
          break;
        default:
          if (v86 == 0.0)
          {
LABEL_105:
            v93 = (uint64_t)v82;
            v94 = MEMORY[0x24264E1E8]((char *)v82 + v83[10], (char *)v44 + v83[10]);
            goto LABEL_108;
          }
          v92 = 0.0;
          break;
      }
      v94 = v86 < v92;
      v93 = (uint64_t)v82;
LABEL_108:
      sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2FA0(v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if ((v94 & 1) == 0)
      {
        v76 = v169;
        v75 = v80;
LABEL_86:
        v36 = v76 + 1;
        v174 += v168;
        v75 += v168;
        v35 = v163;
        if (v36 != v160)
          goto LABEL_87;
        v36 = v160;
        v2 = v161;
        v31 = v154;
        v15 = v164;
        v18 = v165;
LABEL_112:
        if (v36 < v35)
          goto LABEL_189;
        v169 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_23E530794(0, *((_QWORD *)v31 + 2) + 1, 1, v31);
        v98 = *((_QWORD *)v31 + 2);
        v97 = *((_QWORD *)v31 + 3);
        v34 = v98 + 1;
        v33 = v169;
        if (v98 >= v97 >> 1)
        {
          v147 = sub_23E530794((char *)(v97 > 1), v98 + 1, 1, v31);
          v33 = v169;
          v31 = v147;
        }
        *((_QWORD *)v31 + 2) = v34;
        v99 = v31 + 32;
        v100 = &v31[16 * v98 + 32];
        *(_QWORD *)v100 = v35;
        *((_QWORD *)v100 + 1) = v33;
        if (v98)
        {
LABEL_118:
          v101 = v34 - 1;
          if (v34 >= 4)
          {
            v106 = &v99[16 * v34];
            v107 = *((_QWORD *)v106 - 8);
            v108 = *((_QWORD *)v106 - 7);
            v112 = __OFSUB__(v108, v107);
            v109 = v108 - v107;
            if (v112)
              goto LABEL_178;
            v111 = *((_QWORD *)v106 - 6);
            v110 = *((_QWORD *)v106 - 5);
            v112 = __OFSUB__(v110, v111);
            v104 = v110 - v111;
            v105 = v112;
            if (v112)
              goto LABEL_179;
            v113 = v34 - 2;
            v114 = &v99[16 * v34 - 32];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v112 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v112)
              goto LABEL_181;
            v112 = __OFADD__(v104, v117);
            v118 = v104 + v117;
            if (v112)
              goto LABEL_184;
            if (v118 >= v109)
            {
              v136 = &v99[16 * v101];
              v138 = *(_QWORD *)v136;
              v137 = *((_QWORD *)v136 + 1);
              v112 = __OFSUB__(v137, v138);
              v139 = v137 - v138;
              if (v112)
                goto LABEL_188;
              v129 = v104 < v139;
            }
            else
            {
LABEL_131:
              if ((v105 & 1) != 0)
                goto LABEL_180;
              v113 = v34 - 2;
              v119 = &v99[16 * v34 - 32];
              v121 = *(_QWORD *)v119;
              v120 = *((_QWORD *)v119 + 1);
              v122 = __OFSUB__(v120, v121);
              v123 = v120 - v121;
              v124 = v122;
              if (v122)
                goto LABEL_183;
              v125 = &v99[16 * v101];
              v127 = *(_QWORD *)v125;
              v126 = *((_QWORD *)v125 + 1);
              v112 = __OFSUB__(v126, v127);
              v128 = v126 - v127;
              if (v112)
                goto LABEL_186;
              if (__OFADD__(v123, v128))
                goto LABEL_187;
              if (v123 + v128 < v104)
                goto LABEL_143;
              v129 = v104 < v128;
            }
            if (v129)
              v101 = v113;
          }
          else
          {
            if (v34 == 3)
            {
              v103 = *((_QWORD *)v31 + 4);
              v102 = *((_QWORD *)v31 + 5);
              v112 = __OFSUB__(v102, v103);
              v104 = v102 - v103;
              v105 = v112;
              goto LABEL_131;
            }
            v130 = *((_QWORD *)v31 + 4);
            v131 = *((_QWORD *)v31 + 5);
            v112 = __OFSUB__(v131, v130);
            v123 = v131 - v130;
            v124 = v112;
LABEL_143:
            if ((v124 & 1) != 0)
              goto LABEL_182;
            v132 = &v99[16 * v101];
            v134 = *(_QWORD *)v132;
            v133 = *((_QWORD *)v132 + 1);
            v112 = __OFSUB__(v133, v134);
            v135 = v133 - v134;
            if (v112)
              goto LABEL_185;
            if (v135 < v123)
              goto LABEL_14;
          }
          v140 = v101 - 1;
          if (v101 - 1 >= v34)
          {
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
            break;
          }
          if (!*v175)
            goto LABEL_200;
          v141 = v31;
          v142 = &v99[16 * v140];
          v143 = *(_QWORD *)v142;
          v144 = &v99[16 * v101];
          v145 = *((_QWORD *)v144 + 1);
          sub_23E41D188(*v175 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v142, *v175 + *(_QWORD *)(v167 + 72) * *(_QWORD *)v144, *v175 + *(_QWORD *)(v167 + 72) * v145, v166);
          if (v2)
            goto LABEL_172;
          if (v145 < v143)
            goto LABEL_175;
          if (v101 > *((_QWORD *)v141 + 2))
            goto LABEL_176;
          *(_QWORD *)v142 = v143;
          *(_QWORD *)&v99[16 * v140 + 8] = v145;
          v146 = *((_QWORD *)v141 + 2);
          if (v101 >= v146)
            goto LABEL_177;
          v31 = v141;
          v34 = v146 - 1;
          memmove(&v99[16 * v101], v144 + 16, 16 * (v146 - 1 - v101));
          *((_QWORD *)v141 + 2) = v146 - 1;
          v129 = v146 > 2;
          v15 = v164;
          v18 = v165;
          v33 = v169;
          if (!v129)
            goto LABEL_14;
          goto LABEL_118;
        }
        v34 = 1;
LABEL_14:
        v32 = v175[1];
        v23 = v158;
        if (v33 >= v32)
          goto LABEL_161;
        goto LABEL_15;
      }
      v95 = *v175;
      if (!*v175)
        goto LABEL_199;
      v75 = v80;
      v96 = v95 + v174 + v77;
      sub_23E1E2FDC(v95 + v80 + v77, v173, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      swift_arrayInitWithTakeFrontToBack();
      sub_23E1E2FDC(v173, v96, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v76 = v169;
      v77 -= v168;
      ++v78;
      v44 = v172;
      if (v169 == v78)
        goto LABEL_86;
    }
  }
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E41C130(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t *v159;

  v152 = type metadata accessor for StaticAlarm();
  v150 = *(_QWORD *)(v152 - 8);
  v2 = MEMORY[0x24BDAC7A8](v152);
  v146 = (uint64_t)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v156 = (uint64_t)&v138 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v138 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v157 = (uint64_t *)((char *)&v138 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v147 = (uint64_t *)((char *)&v138 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v138 - v14);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v138 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v138 - v19;
  v159 = a1;
  v21 = a1[1];
  result = sub_23E53830C();
  if (result >= v21)
  {
    if (v21 < 0)
      goto LABEL_157;
    if (v21)
      return sub_23E41CF28(0, v21, 1, v159);
    return result;
  }
  if (v21 >= 0)
    v23 = v21;
  else
    v23 = v21 + 1;
  if (v21 < -1)
    goto LABEL_165;
  v24 = result;
  v153 = v8;
  v141 = v20;
  v142 = v18;
  if (v21 < 2)
  {
    v28 = (char *)MEMORY[0x24BEE4AF8];
    v149 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    v139 = MEMORY[0x24BEE4AF8];
    if (v21 != 1)
    {
      v30 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_123:
      v130 = v28;
      if (v30 >= 2)
      {
        v131 = *v159;
        do
        {
          v132 = v30 - 2;
          if (v30 < 2)
            goto LABEL_152;
          if (!v131)
            goto LABEL_164;
          v133 = *(_QWORD *)&v130[16 * v132 + 32];
          v134 = *(_QWORD *)&v130[16 * v30 + 24];
          v135 = v151;
          sub_23E41D860(v131 + *(_QWORD *)(v150 + 72) * v133, v131 + *(_QWORD *)(v150 + 72) * *(_QWORD *)&v130[16 * v30 + 16], v131 + *(_QWORD *)(v150 + 72) * v134, v149);
          v151 = v135;
          if (v135)
            break;
          if (v134 < v133)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v130 = sub_23E530CC8((uint64_t)v130);
          if (v132 >= *((_QWORD *)v130 + 2))
            goto LABEL_154;
          v136 = &v130[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v130 + 2);
          if (v30 > v137)
            goto LABEL_155;
          memmove(&v130[16 * v30 + 16], &v130[16 * v30 + 32], 16 * (v137 - v30));
          *((_QWORD *)v130 + 2) = v137 - 1;
          v30 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v139 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v25 = v23 >> 1;
    v26 = sub_23E537844();
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v150 + 80);
    v139 = v26;
    v149 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v28 = (char *)MEMORY[0x24BEE4AF8];
  v148 = v15;
  v143 = v24;
  while (1)
  {
    v31 = v29;
    v32 = v29 + 1;
    if (v29 + 1 >= v21)
      break;
    v33 = *v159;
    v34 = *(_QWORD *)(v150 + 72);
    v35 = v141;
    sub_23E1E2F50(*v159 + v34 * v32, (uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    v154 = v33;
    v158 = v34;
    v36 = v33 + v34 * v31;
    v37 = v142;
    sub_23E1E2F50(v36, (uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    v38 = *v35 < *v37;
    if (*v35 == *v37 && (v39 = v35[1], v40 = v37[1], v38 = v39 < v40, v39 == v40))
      v41 = MEMORY[0x24264E1E8]((char *)v35 + *(int *)(v152 + 36), (char *)v37 + *(int *)(v152 + 36));
    else
      v41 = v38;
    v24 = v143;
    sub_23E1E2FA0((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    sub_23E1E2FA0((uint64_t)v141, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    v29 = v31 + 2;
    if (v31 + 2 < v21)
    {
      v42 = v21;
      v145 = v31;
      v140 = v28;
      v43 = v158 * v32;
      v44 = v154;
      v45 = v158 * v29;
      while (1)
      {
        v46 = v29;
        sub_23E1E2F50(v44 + v45, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v47 = v147;
        sub_23E1E2F50(v44 + v43, (uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v48 = (uint64_t)v47;
        v49 = *v15 < *v47;
        if (*v15 != *v47)
          goto LABEL_28;
        v50 = v15[1];
        v51 = v47[1];
        v49 = v50 < v51;
        if (v50 == v51)
        {
          v52 = MEMORY[0x24264E1E8]((char *)v15 + *(int *)(v152 + 36), (char *)v147 + *(int *)(v152 + 36));
          v48 = (uint64_t)v147;
          v53 = v52;
        }
        else
        {
LABEL_28:
          v53 = v49;
        }
        sub_23E1E2FA0(v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        if (((v41 ^ v53) & 1) != 0)
          break;
        ++v29;
        v44 += v158;
        if (v42 == v46 + 1)
        {
          v21 = v42;
          v29 = v42;
          v28 = v140;
          v31 = v145;
          goto LABEL_35;
        }
      }
      v28 = v140;
      v31 = v145;
      v21 = v42;
LABEL_35:
      v24 = v143;
    }
    v54 = v154;
    if ((v41 & 1) == 0)
      goto LABEL_49;
    if (v29 < v31)
      goto LABEL_158;
    if (v31 >= v29)
      goto LABEL_49;
    v144 = v21;
    v140 = v28;
    v55 = 0;
    v56 = v158 * (v29 - 1);
    v57 = v29 * v158;
    v58 = v31;
    v59 = v31 * v158;
    v60 = v153;
    do
    {
      if (v58 != v29 + v55 - 1)
      {
        if (!v54)
          goto LABEL_163;
        v155 = v54 + v56;
        sub_23E1E2FDC(v54 + v59, v146, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        if (v59 < v56 || v54 + v59 >= (unint64_t)(v54 + v57))
        {
          v61 = v155;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v61 = v155;
          if (v59 != v56)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_23E1E2FDC(v146, v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v60 = v153;
        v54 = v154;
      }
      ++v58;
      --v55;
      v56 -= v158;
      v57 -= v158;
      v59 += v158;
    }
    while (v58 < v29 + v55);
    v28 = v140;
    v15 = v148;
    v24 = v143;
    v21 = v144;
    if (v29 < v144)
      goto LABEL_50;
LABEL_75:
    if (v29 < v31)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_23E530794(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v79 = *((_QWORD *)v28 + 2);
    v78 = *((_QWORD *)v28 + 3);
    v30 = v79 + 1;
    if (v79 >= v78 >> 1)
      v28 = sub_23E530794((char *)(v78 > 1), v79 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v30;
    v80 = v28 + 32;
    v81 = &v28[16 * v79 + 32];
    *(_QWORD *)v81 = v31;
    *((_QWORD *)v81 + 1) = v29;
    if (v79)
    {
      while (1)
      {
        v82 = v30 - 1;
        if (v30 >= 4)
        {
          v87 = &v80[16 * v30];
          v88 = *((_QWORD *)v87 - 8);
          v89 = *((_QWORD *)v87 - 7);
          v93 = __OFSUB__(v89, v88);
          v90 = v89 - v88;
          if (v93)
            goto LABEL_140;
          v92 = *((_QWORD *)v87 - 6);
          v91 = *((_QWORD *)v87 - 5);
          v93 = __OFSUB__(v91, v92);
          v85 = v91 - v92;
          v86 = v93;
          if (v93)
            goto LABEL_141;
          v94 = v30 - 2;
          v95 = &v80[16 * v30 - 32];
          v97 = *(_QWORD *)v95;
          v96 = *((_QWORD *)v95 + 1);
          v93 = __OFSUB__(v96, v97);
          v98 = v96 - v97;
          if (v93)
            goto LABEL_143;
          v93 = __OFADD__(v85, v98);
          v99 = v85 + v98;
          if (v93)
            goto LABEL_146;
          if (v99 >= v90)
          {
            v117 = &v80[16 * v82];
            v119 = *(_QWORD *)v117;
            v118 = *((_QWORD *)v117 + 1);
            v93 = __OFSUB__(v118, v119);
            v120 = v118 - v119;
            if (v93)
              goto LABEL_150;
            v110 = v85 < v120;
            goto LABEL_112;
          }
        }
        else
        {
          if (v30 != 3)
          {
            v111 = *((_QWORD *)v28 + 4);
            v112 = *((_QWORD *)v28 + 5);
            v93 = __OFSUB__(v112, v111);
            v104 = v112 - v111;
            v105 = v93;
            goto LABEL_106;
          }
          v84 = *((_QWORD *)v28 + 4);
          v83 = *((_QWORD *)v28 + 5);
          v93 = __OFSUB__(v83, v84);
          v85 = v83 - v84;
          v86 = v93;
        }
        if ((v86 & 1) != 0)
          goto LABEL_142;
        v94 = v30 - 2;
        v100 = &v80[16 * v30 - 32];
        v102 = *(_QWORD *)v100;
        v101 = *((_QWORD *)v100 + 1);
        v103 = __OFSUB__(v101, v102);
        v104 = v101 - v102;
        v105 = v103;
        if (v103)
          goto LABEL_145;
        v106 = &v80[16 * v82];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v93 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v93)
          goto LABEL_148;
        if (__OFADD__(v104, v109))
          goto LABEL_149;
        if (v104 + v109 >= v85)
        {
          v110 = v85 < v109;
LABEL_112:
          if (v110)
            v82 = v94;
          goto LABEL_114;
        }
LABEL_106:
        if ((v105 & 1) != 0)
          goto LABEL_144;
        v113 = &v80[16 * v82];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v93 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v93)
          goto LABEL_147;
        if (v116 < v104)
          goto LABEL_14;
LABEL_114:
        v121 = v29;
        v122 = v82 - 1;
        if (v82 - 1 >= v30)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v159)
          goto LABEL_162;
        v123 = v28;
        v124 = &v80[16 * v122];
        v125 = *(_QWORD *)v124;
        v126 = &v80[16 * v82];
        v127 = *((_QWORD *)v126 + 1);
        v128 = v151;
        sub_23E41D860(*v159 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v124, *v159 + *(_QWORD *)(v150 + 72) * *(_QWORD *)v126, *v159 + *(_QWORD *)(v150 + 72) * v127, v149);
        v151 = v128;
        if (v128)
          goto LABEL_134;
        if (v127 < v125)
          goto LABEL_137;
        if (v82 > *((_QWORD *)v123 + 2))
          goto LABEL_138;
        *(_QWORD *)v124 = v125;
        *(_QWORD *)&v80[16 * v122 + 8] = v127;
        v129 = *((_QWORD *)v123 + 2);
        if (v82 >= v129)
          goto LABEL_139;
        v28 = v123;
        v30 = v129 - 1;
        memmove(&v80[16 * v82], v126 + 16, 16 * (v129 - 1 - v82));
        *((_QWORD *)v123 + 2) = v129 - 1;
        v38 = v129 > 2;
        v15 = v148;
        v29 = v121;
        if (!v38)
          goto LABEL_14;
      }
    }
    v30 = 1;
LABEL_14:
    v21 = v159[1];
    v24 = v143;
    if (v29 >= v21)
      goto LABEL_123;
  }
  ++v29;
LABEL_49:
  v60 = v153;
  if (v29 >= v21)
    goto LABEL_75;
LABEL_50:
  if (__OFSUB__(v29, v31))
    goto LABEL_156;
  if (v29 - v31 >= v24)
    goto LABEL_75;
  if (__OFADD__(v31, v24))
    goto LABEL_159;
  if (v31 + v24 >= v21)
    v62 = v21;
  else
    v62 = v31 + v24;
  if (v62 >= v31)
  {
    if (v29 != v62)
    {
      v140 = v28;
      v63 = *(_QWORD *)(v150 + 72);
      v158 = v63 * (v29 - 1);
      v154 = v63;
      v64 = v29 * v63;
      v144 = v62;
      v145 = v31;
      do
      {
        v66 = 0;
        v67 = v31;
        v155 = v29;
        while (1)
        {
          v68 = *v159;
          v69 = v64;
          v70 = v64 + v66 + *v159;
          v71 = v157;
          sub_23E1E2F50(v70, (uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          sub_23E1E2F50(v158 + v66 + v68, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v72 = *v71 < *v60;
          if (*v71 != *v60)
            goto LABEL_66;
          v73 = v71[1];
          v74 = v60[1];
          v72 = v73 < v74;
          if (v73 == v74)
            v75 = MEMORY[0x24264E1E8]((char *)v71 + *(int *)(v152 + 36), (char *)v60 + *(int *)(v152 + 36));
          else
LABEL_66:
            v75 = v72;
          v64 = v69;
          sub_23E1E2FA0((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          sub_23E1E2FA0((uint64_t)v157, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          if ((v75 & 1) == 0)
            break;
          v76 = *v159;
          if (!*v159)
            goto LABEL_161;
          v77 = v76 + v158 + v66;
          sub_23E1E2FDC(v76 + v69 + v66, v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v156, v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v65 = v155;
          v66 -= v154;
          ++v67;
          v60 = v153;
          if (v155 == v67)
            goto LABEL_60;
        }
        v65 = v155;
LABEL_60:
        v29 = v65 + 1;
        v158 += v154;
        v64 = v69 + v154;
        v31 = v145;
      }
      while (v29 != v144);
      v29 = v144;
      v28 = v140;
      v15 = v148;
    }
    goto LABEL_75;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E41CC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  double v23;
  double v24;
  double v25;
  int v26;
  double v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a1;
  v7 = (int *)type metadata accessor for StaticTimer();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v39 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (double *)((char *)&v33 - v11);
  result = MEMORY[0x24BDAC7A8](v10);
  v16 = (double *)((char *)&v33 - v15);
  v38 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v14 + 72);
    v42 = v17 * (v38 - 1);
    v37 = v17;
    v41 = v17 * v38;
    v36 = (double *)((char *)&v33 - v15);
LABEL_5:
    v18 = 0;
    v19 = v35;
    while (1)
    {
      v20 = *a4;
      sub_23E1E2F50(v41 + v18 + *a4, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v40 = v42 + v18;
      sub_23E1E2F50(v42 + v18 + v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v21 = v7[8];
      v22 = *((unsigned __int8 *)v16 + v21);
      if (v22 == 1)
      {
        v23 = *(double *)((char *)v16 + v7[6]);
      }
      else if (v22 == 2)
      {
        v23 = *v16;
      }
      else
      {
        v23 = 0.0;
        if (v22 == 3)
        {
          v24 = *v16;
          sub_23E536ECC();
          v23 = v24 + v25;
          v21 = v7[8];
        }
      }
      v26 = *((unsigned __int8 *)v12 + v21);
      switch(v26)
      {
        case 1:
          v29 = *(double *)((char *)v12 + v7[6]);
          if (v23 == v29)
            goto LABEL_23;
          break;
        case 2:
          v29 = *v12;
          if (v23 == *v12)
            goto LABEL_23;
          break;
        case 3:
          v27 = *v12;
          sub_23E536ECC();
          v29 = v27 + v28;
          if (v23 == v29)
            goto LABEL_23;
          break;
        default:
          if (v23 == 0.0)
          {
LABEL_23:
            v30 = MEMORY[0x24264E1E8]((char *)v16 + v7[10], (char *)v12 + v7[10]);
            goto LABEL_26;
          }
          v29 = 0.0;
          break;
      }
      v30 = v23 < v29;
LABEL_26:
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      result = sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if ((v30 & 1) == 0)
        goto LABEL_4;
      v31 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      v32 = v31 + v42 + v18;
      sub_23E1E2FDC(v31 + v41 + v18, v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v39, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v18 -= v37;
      ++v19;
      v16 = v36;
      if (v38 == v19)
      {
LABEL_4:
        v42 += v37;
        v41 += v37;
        if (++v38 == v34)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_23E41CF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a4;
  v27 = a1;
  v28 = type metadata accessor for StaticAlarm();
  v6 = MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v25 - v9);
  result = MEMORY[0x24BDAC7A8](v8);
  v14 = (uint64_t *)((char *)&v25 - v13);
  v30 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v34 = v15 * (v30 - 1);
    v29 = v15;
    v33 = v15 * v30;
LABEL_5:
    v16 = 0;
    v17 = v27;
    while (1)
    {
      v18 = *v32;
      sub_23E1E2F50(v33 + v16 + *v32, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      sub_23E1E2F50(v34 + v16 + v18, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v19 = *v14 < *v10;
      if (*v14 == *v10 && (v20 = v14[1], v21 = v10[1], v19 = v20 < v21, v20 == v21))
        v22 = MEMORY[0x24264E1E8]((char *)v14 + *(int *)(v28 + 36), (char *)v10 + *(int *)(v28 + 36));
      else
        v22 = v19;
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      result = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v34 += v29;
        v33 += v29;
        if (++v30 == v26)
          return result;
        goto LABEL_5;
      }
      v23 = *v32;
      if (!*v32)
        break;
      v24 = v23 + v34 + v16;
      sub_23E1E2FDC(v23 + v33 + v16, v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v31, v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v16 -= v29;
      if (v30 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E41D188(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  int v28;
  double v29;
  double v30;
  double v31;
  int v32;
  double v33;
  double v34;
  double v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  double v47;
  double v48;
  double v49;
  int v50;
  double v51;
  double v52;
  double v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  BOOL v57;
  unint64_t v58;
  uint64_t result;
  uint64_t v60;
  double *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;

  v66 = a3;
  v7 = (int *)type metadata accessor for StaticTimer();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (double *)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (double *)((char *)&v60 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (double *)((char *)&v60 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (double *)((char *)&v60 - v17);
  v65 = *(_QWORD *)(v19 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1)
    goto LABEL_100;
  v20 = v66 - a2;
  if (v66 - a2 == 0x8000000000000000 && v65 == -1)
    goto LABEL_101;
  v21 = (uint64_t)(a2 - a1) / v65;
  v69 = a1;
  v68 = a4;
  v22 = v20 / v65;
  if (v21 >= v20 / v65)
  {
    if (v22 < 0)
      goto LABEL_102;
    v24 = v22 * v65;
    if (a4 < a2 || a2 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v40 = a4 + v24;
    v67 = a4 + v24;
    v69 = a2;
    v64 = a1;
    if (v24 < 1 || a1 >= a2)
    {
LABEL_98:
      sub_23E5308A8(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
    v42 = -v65;
    v65 = (uint64_t)v7;
    v62 = v42;
    v63 = a4;
    v43 = v42;
    v61 = v13;
    while (1)
    {
      sub_23E1E2F50(v40 + v43, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v44 = a2 + v43;
      sub_23E1E2F50(a2 + v43, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v45 = v7[8];
      v46 = *((unsigned __int8 *)v13 + v45);
      if (v46 == 1)
      {
        v47 = *(double *)((char *)v13 + v7[6]);
      }
      else if (v46 == 2)
      {
        v47 = *v13;
      }
      else
      {
        v47 = 0.0;
        if (v46 == 3)
        {
          v48 = *v13;
          sub_23E536ECC();
          v47 = v48 + v49;
          v45 = v7[8];
        }
      }
      v50 = *((unsigned __int8 *)v10 + v45);
      switch(v50)
      {
        case 1:
          v53 = *(double *)((char *)v10 + v7[6]);
          if (v47 != v53)
            goto LABEL_81;
          break;
        case 2:
          v53 = *v10;
          if (v47 != *v10)
            goto LABEL_81;
          break;
        case 3:
          v51 = *v10;
          sub_23E536ECC();
          v53 = v51 + v52;
          if (v47 != v53)
            goto LABEL_81;
          break;
        default:
          if (v47 != 0.0)
          {
            v53 = 0.0;
LABEL_81:
            v54 = v47 < v53;
            goto LABEL_82;
          }
          break;
      }
      v54 = MEMORY[0x24264E1E8]((char *)v13 + v7[10], (char *)v10 + v7[10]);
LABEL_82:
      v55 = v66;
      v56 = v66 + v43;
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if ((v54 & 1) != 0)
      {
        if (v55 < a2 || v56 >= a2)
        {
          v7 = (int *)v65;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v57 = v55 == a2;
          v7 = (int *)v65;
          if (!v57)
            swift_arrayInitWithTakeBackToFront();
        }
        v13 = v61;
        v43 = v62;
        v69 += v62;
      }
      else
      {
        v58 = v67;
        v67 += v43;
        if (v55 < v58 || v56 >= v58)
        {
          v7 = (int *)v65;
          swift_arrayInitWithTakeFrontToBack();
          v44 = a2;
        }
        else if (v55 == v58)
        {
          v44 = a2;
          v7 = (int *)v65;
        }
        else
        {
          v7 = (int *)v65;
          swift_arrayInitWithTakeBackToFront();
          v44 = a2;
        }
        v13 = v61;
        v43 = v62;
      }
      v40 = v67;
      if (v67 > v63)
      {
        a2 = v44;
        v66 = v56;
        if (v44 > v64)
          continue;
      }
      goto LABEL_98;
    }
  }
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v65;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v25 = a4 + v23;
    v67 = a4 + v23;
    if (v23 >= 1 && a2 < v66)
    {
      while (1)
      {
        sub_23E1E2F50(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
        sub_23E1E2F50(a4, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
        v27 = v7[8];
        v28 = *((unsigned __int8 *)v18 + v27);
        if (v28 == 1)
        {
          v29 = *(double *)((char *)v18 + v7[6]);
        }
        else if (v28 == 2)
        {
          v29 = *v18;
        }
        else
        {
          v29 = 0.0;
          if (v28 == 3)
          {
            v30 = *v18;
            sub_23E536ECC();
            v29 = v30 + v31;
            v27 = v7[8];
          }
        }
        v32 = *((unsigned __int8 *)v16 + v27);
        switch(v32)
        {
          case 1:
            v35 = *(double *)((char *)v16 + v7[6]);
            if (v29 != v35)
              goto LABEL_40;
            break;
          case 2:
            v35 = *v16;
            if (v29 != *v16)
              goto LABEL_40;
            break;
          case 3:
            v33 = *v16;
            sub_23E536ECC();
            v35 = v33 + v34;
            if (v29 != v35)
              goto LABEL_40;
            break;
          default:
            if (v29 != 0.0)
            {
              v35 = 0.0;
LABEL_40:
              v36 = v29 < v35;
              goto LABEL_41;
            }
            break;
        }
        v36 = MEMORY[0x24264E1E8]((char *)v18 + v7[10], (char *)v16 + v7[10]);
LABEL_41:
        sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
        sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
        v37 = v69;
        if ((v36 & 1) != 0)
        {
          v38 = a2 + v65;
          if (v69 < a2 || v69 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v69 == a2)
          {
            v37 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v39 = v68 + v65;
          if (v69 < v68 || v69 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v69 != v68)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v68 = v39;
          v38 = a2;
        }
        v69 = v37 + v65;
        a4 = v68;
        if (v68 < v25)
        {
          a2 = v38;
          if (v38 < v66)
            continue;
        }
        goto LABEL_98;
      }
    }
    goto LABEL_98;
  }
LABEL_102:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E41D860(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t result;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v48 = type metadata accessor for StaticAlarm();
  v8 = MEMORY[0x24BDAC7A8](v48);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)((char *)&v46 - v12);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t *)((char *)&v46 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v46 - v17);
  v49 = *(_QWORD *)(v19 + 72);
  if (!v49)
  {
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (a2 - a1 == 0x8000000000000000 && v49 == -1)
    goto LABEL_73;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v49 == -1)
    goto LABEL_74;
  v21 = (uint64_t)(a2 - a1) / v49;
  v52 = a1;
  v51 = a4;
  v22 = v20 / v49;
  if (v21 >= v20 / v49)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v49;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v34 = a4 + v24;
      v50 = a4 + v24;
      v52 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v36 = -v49;
        v47 = a1;
        v49 = (uint64_t)v13;
        do
        {
          sub_23E1E2F50(v34 + v36, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v37 = a2 + v36;
          sub_23E1E2F50(a2 + v36, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v38 = *v13 < *v10;
          if (*v13 == *v10 && (v39 = v13[1], v40 = v10[1], v38 = v39 < v40, v39 == v40))
            v41 = MEMORY[0x24264E1E8]((char *)v13 + *(int *)(v48 + 36), (char *)v10 + *(int *)(v48 + 36));
          else
            v41 = v38;
          v42 = a3 + v36;
          sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          sub_23E1E2FA0(v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          if ((v41 & 1) != 0)
          {
            if (a3 < a2 || v42 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v43 = v47;
            }
            else
            {
              v43 = v47;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v52 += v36;
          }
          else
          {
            v44 = v50;
            v50 += v36;
            if (a3 < v44 || v42 >= v44)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = a2;
              v43 = v47;
            }
            else
            {
              v43 = v47;
              if (a3 != v44)
                swift_arrayInitWithTakeBackToFront();
              v37 = a2;
            }
          }
          v13 = (_QWORD *)v49;
          v34 = v50;
          if (v50 <= a4)
            break;
          a2 = v37;
          a3 += v36;
        }
        while (v37 > v43);
      }
      goto LABEL_71;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v49;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v25 = a4 + v23;
    v50 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        sub_23E1E2F50(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        sub_23E1E2F50(a4, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v27 = *v18 < *v16;
        if (*v18 == *v16 && (v28 = v18[1], v29 = v16[1], v27 = v28 < v29, v28 == v29))
          v30 = MEMORY[0x24264E1E8]((char *)v18 + *(int *)(v48 + 36), (char *)v16 + *(int *)(v48 + 36));
        else
          v30 = v27;
        sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v31 = v52;
        if ((v30 & 1) != 0)
        {
          v32 = a2 + v49;
          if (v52 < a2 || v52 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v52 == a2)
          {
            v31 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v33 = v51 + v49;
          if (v52 < v51 || v52 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v52 != v51)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v51 = v33;
          v32 = a2;
        }
        v52 = v31 + v49;
        a4 = v51;
        if (v51 >= v25)
          break;
        a2 = v32;
      }
      while (v32 < a3);
    }
LABEL_71:
    sub_23E5308B4(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_75:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E41DDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = type metadata accessor for StaticAlarm();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)v25 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v33 = (uint64_t)v25 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v25[1] = v2;
    v34 = MEMORY[0x24BEE4AF8];
    v31 = v13;
    sub_23E2CB26C(0, v13, 0);
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v29 = a1 + v16;
    v30 = v16;
    v32 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(v6 + 72);
    v28 = a2 + v16;
    v27 = a2;
    do
    {
      v18 = v29 + v17 * v15;
      if (v32)
      {
        swift_bridgeObjectRetain();
        v19 = v28;
        v20 = v32;
        while (1)
        {
          sub_23E1E2F50(v19, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
            break;
          sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v19 += v17;
          if (!--v20)
          {
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        swift_bridgeObjectRelease();
        v21 = v26;
        sub_23E1E2FDC((uint64_t)v9, v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        sub_23E1E2FDC(v21, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      }
      else
      {
LABEL_8:
        sub_23E1E2F50(v18, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      }
      v14 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB26C(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v34;
      }
      v23 = *(_QWORD *)(v14 + 16);
      v22 = *(_QWORD *)(v14 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_23E2CB26C(v22 > 1, v23 + 1, 1);
        v14 = v34;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v23 + 1;
      sub_23E1E2FDC(v33, v14 + v30 + v23 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    }
    while (v15 != v31);
  }
  return v14;
}

uint64_t sub_23E41E034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = type metadata accessor for StaticTimer();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v26 = (uint64_t)v25 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v33 = (uint64_t)v25 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v25[1] = v2;
    v34 = MEMORY[0x24BEE4AF8];
    v31 = v13;
    sub_23E2CB298(0, v13, 0);
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v29 = a1 + v16;
    v30 = v16;
    v32 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(v6 + 72);
    v28 = a2 + v16;
    v27 = a2;
    do
    {
      v18 = v29 + v17 * v15;
      if (v32)
      {
        swift_bridgeObjectRetain();
        v19 = v28;
        v20 = v32;
        while (1)
        {
          sub_23E1E2F50(v19, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
            break;
          sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          v19 += v17;
          if (!--v20)
          {
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        swift_bridgeObjectRelease();
        v21 = v26;
        sub_23E1E2FDC((uint64_t)v9, v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
        sub_23E1E2FDC(v21, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      }
      else
      {
LABEL_8:
        sub_23E1E2F50(v18, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      }
      v14 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB298(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v34;
      }
      v23 = *(_QWORD *)(v14 + 16);
      v22 = *(_QWORD *)(v14 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_23E2CB298(v22 > 1, v23 + 1, 1);
        v14 = v34;
      }
      ++v15;
      *(_QWORD *)(v14 + 16) = v23 + 1;
      sub_23E1E2FDC(v33, v14 + v30 + v23 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    }
    while (v15 != v31);
  }
  return v14;
}

uint64_t sub_23E41E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StaticAlarm();
  v11 = MEMORY[0x24BDAC7A8](v29);
  v34 = (uint64_t)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v28 - v14;
  result = MEMORY[0x24BEE4AF8];
  v41 = MEMORY[0x24BEE4AF8];
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v28[1] = v2;
    v17 = 0;
    v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v35 = *(_QWORD *)(v13 + 72);
    v36 = (char *)v28 - v14;
    v30 = v18;
    v31 = a1 + v18;
    v32 = a2;
    v19 = v38;
    do
    {
      v37 = v17;
      sub_23E1E2F50(v31 + v35 * v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v20 = *(_QWORD *)(a2 + 16);
      if (v20)
      {
        v40 = &v15[*(int *)(v29 + 36)];
        v21 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        swift_bridgeObjectRetain();
        v39 = *(_QWORD *)(v6 + 72);
        v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        while (1)
        {
          v22(v10, v21, v5);
          v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
          v23(v10, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v10, v5);
          sub_23E20BBB0();
          v24 = sub_23E537514();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
          if ((v24 & 1) != 0)
          {
            a2 = v32;
            swift_bridgeObjectRelease();
            v15 = v36;
            sub_23E1E2FA0((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
            goto LABEL_4;
          }
          v21 += v39;
          if (!--v20)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_12:
        v23(v10, 1, 1, v5);
      }
      a2 = v32;
      swift_bridgeObjectRelease();
      sub_23E1E2FDC((uint64_t)v36, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v25 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB26C(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v41;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23E2CB26C(v26 > 1, v27 + 1, 1);
        v25 = v41;
      }
      *(_QWORD *)(v25 + 16) = v27 + 1;
      sub_23E1E2FDC(v34, v25 + v30 + v27 * v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      v15 = v36;
LABEL_4:
      v17 = v37 + 1;
    }
    while (v37 + 1 != v33);
    return v41;
  }
  return result;
}

uint64_t sub_23E41E608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for StaticTimer();
  v11 = MEMORY[0x24BDAC7A8](v29);
  v34 = (uint64_t)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v28 - v14;
  result = MEMORY[0x24BEE4AF8];
  v41 = MEMORY[0x24BEE4AF8];
  v33 = *(_QWORD *)(a1 + 16);
  if (v33)
  {
    v28[1] = v2;
    v17 = 0;
    v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v35 = *(_QWORD *)(v13 + 72);
    v36 = (char *)v28 - v14;
    v30 = v18;
    v31 = a1 + v18;
    v32 = a2;
    v19 = v38;
    do
    {
      v37 = v17;
      sub_23E1E2F50(v31 + v35 * v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v20 = *(_QWORD *)(a2 + 16);
      if (v20)
      {
        v40 = &v15[*(int *)(v29 + 40)];
        v21 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        swift_bridgeObjectRetain();
        v39 = *(_QWORD *)(v6 + 72);
        v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
        while (1)
        {
          v22(v10, v21, v5);
          v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
          v23(v10, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v5) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v10, v5);
          sub_23E20BBB0();
          v24 = sub_23E537514();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
          if ((v24 & 1) != 0)
          {
            a2 = v32;
            swift_bridgeObjectRelease();
            v15 = v36;
            sub_23E1E2FA0((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
            goto LABEL_4;
          }
          v21 += v39;
          if (!--v20)
            goto LABEL_12;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
LABEL_12:
        v23(v10, 1, 1, v5);
      }
      a2 = v32;
      swift_bridgeObjectRelease();
      sub_23E1E2FDC((uint64_t)v36, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v25 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB298(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v41;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_23E2CB298(v26 > 1, v27 + 1, 1);
        v25 = v41;
      }
      *(_QWORD *)(v25 + 16) = v27 + 1;
      sub_23E1E2FDC(v34, v25 + v30 + v27 * v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v15 = v36;
LABEL_4:
      v17 = v37 + 1;
    }
    while (v37 + 1 != v33);
    return v41;
  }
  return result;
}

uint64_t sub_23E41E968(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E41E9CC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E41EA30(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD v44[8];
  int v45;
  int v46;
  int *v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;

  v4 = (int *)type metadata accessor for StaticActionSet();
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
    return 0;
  v9 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v10 = *(_QWORD *)(v5 + 72);
  v44[7] = a2;
  swift_bridgeObjectRetain();
  v11 = type metadata accessor for StaticActionSet;
  v62 = "ratioMetrics";
  v44[5] = "HMActionSetTypeHomeDeparture";
  v44[6] = "HMActionSetTypeHomeArrival";
  v44[3] = "HMActionSetTypeSleep";
  v44[4] = "HMActionSetTypeWakeUp";
  v44[2] = "HMActionSetTypeUserDefined";
  v44[1] = "HMActionSetTypeTriggerOwned";
  v47 = v4;
  do
  {
    sub_23E1E2F50(v9, (uint64_t)v7, (uint64_t (*)(_QWORD))v11);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    {
      v12 = v4[5];
      v13 = *(_QWORD *)&v7[v12];
      v14 = *(_QWORD *)&v7[v12 + 8];
      v15 = (_QWORD *)(a1 + v12);
      v16 = v13 == *v15 && v14 == v15[1];
      if (v16 || (sub_23E538354() & 1) != 0)
      {
        v17 = v4[6];
        v18 = v7[v17];
        v19 = *(unsigned __int8 *)(a1 + v17);
        if ((_DWORD)v18 == 7)
        {
          if (v19 == 7)
          {
            v20 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            if ((v20 & 1) != 0)
            {
              v21 = v4[8];
              v22 = *(_QWORD *)&v7[v21];
              v23 = *(_QWORD *)&v7[v21 + 8];
              v24 = v7[v21 + 16];
              v25 = *(_QWORD *)&v7[v21 + 24];
              v26 = *(_QWORD *)&v7[v21 + 32];
              v61 = v7[v21 + 40];
              v27 = *(_QWORD *)&v7[v21 + 56];
              v60 = *(_QWORD *)&v7[v21 + 48];
              v56 = v7[v21 + 64];
              v54 = *(_QWORD *)&v7[v21 + 72];
              v53 = *(_QWORD *)&v7[v21 + 80];
              v50 = v7[v21 + 88];
              v28 = (uint64_t *)(a1 + v21);
              v29 = *v28;
              v30 = v28[1];
              v31 = *((unsigned __int8 *)v28 + 16);
              v33 = v28[3];
              v32 = v28[4];
              v34 = *((unsigned __int8 *)v28 + 40);
              v35 = v28[7];
              v58 = v28[6];
              v59 = v27;
              v55 = *((unsigned __int8 *)v28 + 64);
              v52 = v28[9];
              v51 = v28[10];
              v49 = *((unsigned __int8 *)v28 + 88);
              v57 = v35;
              if (v22 == v29 && v23 == v30)
              {
                if (v24 != v31)
                  goto LABEL_3;
              }
              else
              {
                v45 = v31;
                v46 = v24;
                v48 = v34;
                v36 = v25;
                v37 = v11;
                v38 = v10;
                v39 = v26;
                v40 = v32;
                v41 = sub_23E538354();
                v32 = v40;
                v26 = v39;
                v10 = v38;
                v11 = v37;
                v25 = v36;
                v34 = v48;
                v4 = v47;
                if ((v41 & 1) == 0 || v46 != v45)
                  goto LABEL_3;
              }
              if ((v25 == v33 && v26 == v32 || (sub_23E538354() & 1) != 0)
                && v61 == v34
                && (v60 == v58 && v59 == v57 || (sub_23E538354() & 1) != 0)
                && v56 == v55
                && (v54 == v52 && v53 == v51 || (sub_23E538354() & 1) != 0)
                && v50 == v49
                && (sub_23E5372F8() & 1) != 0
                && (sub_23E1F8470(*(_QWORD *)&v7[v4[10]], *(_QWORD *)(a1 + v4[10])) & 1) != 0
                && v7[v4[11]] == *(_BYTE *)(a1 + v4[11])
                && (sub_23E336E44(*(_QWORD *)&v7[v4[12]], *(_QWORD *)(a1 + v4[12])) & 1) != 0
                && v7[v4[13]] == *(_BYTE *)(a1 + v4[13])
                && v7[v4[14]] == *(_BYTE *)(a1 + v4[14]))
              {
                sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
                v42 = 1;
                goto LABEL_42;
              }
            }
          }
        }
        else if (v19 != 7)
        {
          __asm { BR              X10 }
        }
      }
    }
LABEL_3:
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))v11);
    v9 += v10;
    --v8;
  }
  while (v8);
  v42 = 0;
LABEL_42:
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_23E41EF9C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  const char *v8;
  unint64_t v9;
  unint64_t v10;
  const char *v11;
  char v12;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (2)
  {
    v6 = 0x800000023E560B40;
    v7 = 0xD00000000000001ALL;
    switch(*(_BYTE *)(a2 + v5 + 32))
    {
      case 0:
        break;
      case 1:
        v7 = 0xD00000000000001CLL;
        v8 = "HMActionSetTypeHomeArrival";
        goto LABEL_13;
      case 2:
        v8 = "HMActionSetTypeHomeDeparture";
        v7 = 0xD000000000000015;
        goto LABEL_13;
      case 3:
        v8 = "HMActionSetTypeWakeUp";
        v7 = 0xD000000000000014;
        goto LABEL_13;
      case 4:
        v8 = "HMActionSetTypeSleep";
        goto LABEL_13;
      case 5:
        v7 = 0xD00000000000001BLL;
        v8 = "HMActionSetTypeUserDefined";
        goto LABEL_13;
      case 6:
        v7 = 0xD000000000000021;
        v8 = "HMActionSetTypeTriggerOwned";
LABEL_13:
        v6 = (unint64_t)v8 | 0x8000000000000000;
        break;
      default:
        if (a1 != 7)
          goto LABEL_4;
        goto LABEL_26;
    }
    v9 = 0x800000023E560B40;
    v10 = 0xD00000000000001ALL;
    switch(a1)
    {
      case 0:
        goto LABEL_18;
      case 1:
        v10 = 0xD00000000000001CLL;
        v11 = "HMActionSetTypeHomeArrival";
        goto LABEL_23;
      case 2:
        v11 = "HMActionSetTypeHomeDeparture";
        v10 = 0xD000000000000015;
        goto LABEL_23;
      case 3:
        v10 = 0xD000000000000014;
        v9 = 0x800000023E560BA0;
LABEL_18:
        if (v7 != v10)
          goto LABEL_25;
        goto LABEL_24;
      case 4:
        v11 = "HMActionSetTypeSleep";
        goto LABEL_23;
      case 5:
        v10 = 0xD00000000000001BLL;
        v11 = "HMActionSetTypeUserDefined";
        goto LABEL_23;
      case 6:
        v10 = 0xD000000000000021;
        v11 = "HMActionSetTypeTriggerOwned";
LABEL_23:
        v9 = (unint64_t)v11 | 0x8000000000000000;
        if (v7 != v10)
          goto LABEL_25;
LABEL_24:
        if (v6 != v9)
        {
LABEL_25:
          v12 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v12 & 1) != 0)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            return 1;
          }
LABEL_4:
          if (v2 == ++v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 1;
      default:
        goto LABEL_4;
    }
  }
}

uint64_t sub_23E41F1E4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_23E538354();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_23E538354() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E41F2A8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    v4 = (_BYTE *)(a3 + 40);
    do
    {
      if ((*v4 & 1) != 0)
      {
        if ((a2 & 1) != 0)
          return 1;
      }
      else if ((a2 & 1) == 0 && *((_QWORD *)v4 - 1) == a1)
      {
        return 1;
      }
      v4 += 16;
      --v3;
    }
    while (v3);
  }
  return 0;
}

uint64_t sub_23E41F2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v5 = (int *)type metadata accessor for StaticResident();
    v6 = *((_QWORD *)v5 - 1);
    v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 72);
    do
    {
      v9 = a2 + v7;
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_4;
      v10 = v5[5];
      v11 = *(_QWORD *)(v9 + v10);
      v12 = *(_QWORD *)(v9 + v10 + 8);
      v13 = (_QWORD *)(a1 + v10);
      v14 = v11 == *v13 && v12 == v13[1];
      if (!v14 && (sub_23E538354() & 1) == 0)
        goto LABEL_4;
      v15 = v5[6];
      v16 = (_QWORD *)(a2 + v7 + v15);
      v17 = v16[1];
      v18 = (_QWORD *)(a1 + v15);
      v19 = v18[1];
      if (v17)
      {
        if (!v19)
          goto LABEL_4;
        v20 = *v16 == *v18 && v17 == v19;
        if (!v20 && (sub_23E538354() & 1) == 0)
          goto LABEL_4;
      }
      else if (v19)
      {
        goto LABEL_4;
      }
      if ((sub_23E3372B8(*(_QWORD *)(a2 + v5[7] + v7), *(_QWORD *)(a1 + v5[7])) & 1) == 0
        || (sub_23E337498(*(_QWORD *)(a2 + v5[8] + v7), *(_QWORD *)(a1 + v5[8])) & 1) == 0)
      {
        goto LABEL_4;
      }
      v21 = v5[9];
      v22 = *(unsigned __int16 *)(a2 + v21 + v7);
      v23 = *(unsigned __int16 *)(a1 + v21);
      if (v22 >> 14)
      {
        if (v22 >> 14 == 1)
        {
          if ((v23 & 0xC000) != 0x4000
            || ((v22 & 1) == 0) == (v23 & 1)
            || ((((v22 & 0x100) == 0) ^ ((unsigned __int16)(v23 & 0x100) >> 8)) & 1) == 0)
          {
            goto LABEL_4;
          }
        }
        else
        {
          switch(v22)
          {
            case 0x8000u:
              if (v23 == 0x8000)
                goto LABEL_39;
              goto LABEL_4;
            case 0x8001u:
              v24 = 32769;
              break;
            case 0x8002u:
              if (v23 == 32770)
                goto LABEL_39;
              goto LABEL_4;
            case 0x8003u:
              if (v23 == 32771)
                goto LABEL_39;
              goto LABEL_4;
            default:
              v24 = 33024;
              break;
          }
          if (v23 != v24)
            goto LABEL_4;
        }
      }
      else if (v23 >> 14 || v23 != v22)
      {
        goto LABEL_4;
      }
LABEL_39:
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_4:
      v7 += v8;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticDoorLockCluster.init(path:device:limitedSnapshotController:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  int v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t result;
  unint64_t v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;

  v8 = *((unsigned __int16 *)a1 + 4);
  v9 = *((unsigned __int8 *)a1 + 10);
  v28 = *a1;
  v7 = v28;
  v29 = v8;
  v30 = v9;
  v10 = sub_23E230198(a2, a3, (uint64_t)&v28);
  v11 = sub_23E41E9CC(35, v10);
  swift_bridgeObjectRelease();
  v33 = v7;
  v34 = v8;
  v35 = v9;
  sub_23E2303A0(a2, a3, (uint64_t)&v33, 0x23u, (uint64_t)&v28);
  if (v31)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F898);
    v12 = swift_dynamicCast();
    v13 = v12 ^ 1;
    v14 = (unint64_t)v33 << 32;
    if (!v12)
      v14 = 0;
    v27 = v14;
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v28, &qword_256D3F8A8);
    v27 = 0;
    v13 = 1;
  }
  v31 = &type metadata for HomeAppFeatures;
  v32 = sub_23E20B720();
  LOBYTE(v28) = 4;
  v15 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v28);
  if ((v15 & 1) == 0)
  {
    result = swift_unknownObjectRelease();
    v23 = 0;
    v19 = 2;
LABEL_13:
    v22 = 0x1000000;
LABEL_14:
    v21 = v27;
    goto LABEL_15;
  }
  v16 = sub_23E22FBC4(a2, a3, v8);
  if (!sub_23E20F6AC(27, v16))
  {
    swift_unknownObjectRelease();
    v24 = *(_QWORD *)(v16 + 16) == 0;
    result = swift_bridgeObjectRelease();
    v23 = 0;
    v19 = 2 * v24;
    goto LABEL_13;
  }
  v26 = v11;
  swift_bridgeObjectRelease();
  v28 = v7;
  v29 = v8;
  v30 = v9;
  v17 = sub_23E230198(a2, a3, (uint64_t)&v28);
  v18 = sub_23E41E9CC(0, v17);
  swift_bridgeObjectRelease();
  v19 = v18 & 1;
  v33 = v7;
  v34 = v8;
  v35 = 27;
  sub_23E2303A0(a2, a3, (uint64_t)&v33, 0, (uint64_t)&v28);
  swift_unknownObjectRelease();
  if (!v31)
  {
    result = sub_23E1E7C64((uint64_t)&v28, &qword_256D3F8A8);
    v23 = 0;
    v22 = 0x1000000;
    v11 = v26;
    goto LABEL_14;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F898);
  result = swift_dynamicCast();
  v11 = v26;
  v21 = v27;
  if ((result & 1) != 0)
  {
    v22 = 0;
    v23 = v33;
  }
  else
  {
    v23 = 0;
    v22 = 0x1000000;
  }
LABEL_15:
  v25 = 256;
  if ((v11 & 1) == 0)
    v25 = 0;
  *(_QWORD *)a4 = v7;
  *(_QWORD *)(a4 + 8) = v8 | (v9 << 16) | v21;
  *(_BYTE *)(a4 + 20) = v19;
  *(_DWORD *)(a4 + 16) = v25 | v13 | (v23 << 16) | v22;
  return result;
}

uint64_t StaticDoorLockCluster.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  ValueMetadata *v30;
  unint64_t v31;

  v5 = *(_QWORD *)a1;
  v6 = *(unsigned __int16 *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 10);
  ObjectType = swift_getObjectType();
  v27 = v5;
  v28 = v6;
  v29 = v7;
  v9 = sub_23E4208A4(&v27, ObjectType, a2);
  v27 = v5;
  v28 = v6;
  v29 = v7;
  v10 = sub_23E420954(&v27, ObjectType, a2, 35);
  v30 = &type metadata for HomeAppFeatures;
  v31 = sub_23E20B720();
  LOBYTE(v27) = 4;
  v11 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if ((v11 & 1) == 0)
  {
    v23 = v10;
    result = swift_unknownObjectRelease();
    v17 = 0;
    goto LABEL_8;
  }
  if (!(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 24))(v6, ObjectType, a2))
  {
    result = swift_unknownObjectRelease();
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 20) = 0;
    LODWORD(v21) = 768;
    goto LABEL_16;
  }
  v13 = v12;
  v23 = v10;
  v14 = swift_getObjectType();
  v15 = MatterDescriptorCluster.availableClusterKinds.getter(v14, v13);
  v16 = sub_23E20F6AC(27, v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_unknownObjectRelease();
    result = swift_unknownObjectRelease();
    v17 = 0;
LABEL_12:
    v20 = 0;
    v19 = 0x1000000;
    goto LABEL_13;
  }
  v27 = v5;
  v28 = v6;
  v29 = 27;
  v17 = sub_23E420954(&v27, ObjectType, a2, 0);
  v24 = v5;
  v25 = v6;
  v26 = 27;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, _QWORD, uint64_t, uint64_t))(a2 + 48))(&v27, &v24, 0, ObjectType, a2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v30)
  {
    result = sub_23E1E7C64((uint64_t)&v27, &qword_254332260);
    goto LABEL_12;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    v20 = 0;
    v19 = 0x1000000;
    goto LABEL_13;
  }
  v19 = 0;
  v20 = v24;
LABEL_13:
  v22 = 256;
  if ((v23 & 1) == 0)
    v22 = 0;
  v21 = v22 & 0xFFFFFFFFFFFFFFFELL | HIDWORD(v9) & 1 | (v20 << 16) | v19;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6 | (v7 << 16) | (v9 << 32);
  *(_BYTE *)(a3 + 20) = (v17 & 1) != 0;
LABEL_16:
  *(_DWORD *)(a3 + 16) = v21;
  return result;
}

uint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.init(rawValue:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontLeft.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontCenter.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.frontRight.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backLeft.getter(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backCenter.getter(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

void static StaticDoorLockCluster.WalletKeyUWBApproachAngle.backRight.getter(_BYTE *a1@<X8>)
{
  *a1 = 32;
}

void sub_23E41FAE4()
{
  off_256D46CE8 = &unk_250EDB4D8;
}

unint64_t StaticDoorLockCluster.WalletKeyUWBApproachAngle.description.getter()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *v0;
  if (qword_256D3EE80 != -1)
    swift_once();
  v2 = *((_QWORD *)off_256D46CE8 + 2);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v9 = *((unsigned __int8 *)v4 - 16);
      if ((v9 & ~v1) == 0)
      {
        v10 = *(v4 - 1);
        v11 = *v4;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23E2CB054(0, v5[2] + 1, 1);
        v7 = v5[2];
        v6 = v5[3];
        if (v7 >= v6 >> 1)
          sub_23E2CB054(v6 > 1, v7 + 1, 1);
        v5[2] = v7 + 1;
        v8 = &v5[3 * v7];
        *((_BYTE *)v8 + 32) = v9;
        v8[5] = v10;
        v8[6] = v11;
      }
      v4 += 3;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
    v12 = v5[2];
    if (v12)
      goto LABEL_13;
LABEL_19:
    swift_release();
    v13 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v12)
    goto LABEL_19;
LABEL_13:
  v21 = v3;
  sub_23E2058B0(0, v12, 0);
  v13 = v21;
  v14 = v5 + 6;
  do
  {
    v16 = *(v14 - 1);
    v15 = *v14;
    v18 = *(_QWORD *)(v21 + 16);
    v17 = *(_QWORD *)(v21 + 24);
    swift_bridgeObjectRetain();
    if (v18 >= v17 >> 1)
      sub_23E2058B0(v17 > 1, v18 + 1, 1);
    *(_QWORD *)(v21 + 16) = v18 + 1;
    v19 = v21 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v16;
    *(_QWORD *)(v19 + 40) = v15;
    v14 += 3;
    --v12;
  }
  while (v12);
  swift_release();
LABEL_20:
  sub_23E537E68();
  swift_bridgeObjectRelease();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  MEMORY[0x24264EA94](v13, MEMORY[0x24BEE0D00]);
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

_BYTE *sub_23E41FD98@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23E41FDA4()
{
  sub_23E421B44();
  return sub_23E5377C0();
}

uint64_t sub_23E41FE00()
{
  sub_23E421B44();
  return sub_23E537784();
}

_BYTE *sub_23E41FE50@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_23E41FE64@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_23E41FE78@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23E41FE8C(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_23E41FEBC@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_23E41FEE8@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_23E41FF0C(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_23E41FF20(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_23E41FF34(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_23E41FF48@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23E41FF5C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23E41FF70(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23E41FF84(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23E41FF98()
{
  _BYTE *v0;

  return *v0 == 0;
}

_BYTE *sub_23E41FFA8(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

void StaticDoorLockCluster.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

unint64_t StaticDoorLockCluster.autoRelockTime.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 12) | ((unint64_t)*(unsigned __int8 *)(v0 + 16) << 32);
}

uint64_t StaticDoorLockCluster.autoRelockTimeSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t StaticDoorLockCluster.effectiveAutoRelockTimeSupported.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 17) & 1;
}

void StaticDoorLockCluster.walletKeyUWBApproachAngle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 19);
  *a1 = *(_BYTE *)(v1 + 18);
  a1[1] = v2;
}

uint64_t StaticDoorLockCluster.walletKeyUWBApproachAngleSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t StaticDoorLockCluster.effectiveWalletKeyUWBApproachAngleSupported.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 20) & 1;
}

uint64_t StaticDoorLockCluster.init(id:autoRelockTime:autoRelockTimeSupported:walletKeyUWBApproachAngle:walletKeyUWBApproachAngleSupported:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  __int16 v6;
  char v7;
  char v8;
  char v9;

  v6 = *(_WORD *)(result + 8);
  v7 = *(_BYTE *)(result + 10);
  v8 = *a4;
  v9 = a4[1];
  *(_QWORD *)a6 = *(_QWORD *)result;
  *(_WORD *)(a6 + 8) = v6;
  *(_BYTE *)(a6 + 10) = v7;
  *(_DWORD *)(a6 + 12) = a2;
  *(_BYTE *)(a6 + 16) = BYTE4(a2) & 1;
  *(_BYTE *)(a6 + 17) = a3;
  *(_BYTE *)(a6 + 18) = v8;
  *(_BYTE *)(a6 + 19) = v9;
  *(_BYTE *)(a6 + 20) = a5;
  return result;
}

uint64_t StaticDoorLockCluster.hash(into:)()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  unsigned __int8 v3;
  int v4;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[19];
  v4 = v0[20];
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  if (v1 == 1)
  {
    sub_23E538474();
    if (v2 == 2)
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23E538474();
  sub_23E53848C();
  if (v2 != 2)
LABEL_3:
    sub_23E538474();
LABEL_5:
  sub_23E538474();
  if ((v3 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if (v4 != 2)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E420184(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4201AC + 4 * byte_23E54FF90[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4201AC()
{
  return 0x6F6C65526F747561;
}

unint64_t sub_23E4201D0()
{
  return 0xD000000000000017;
}

unint64_t sub_23E4201EC()
{
  return 0xD000000000000019;
}

uint64_t sub_23E420224()
{
  unsigned __int8 *v0;

  return sub_23E420184(*v0);
}

uint64_t sub_23E42022C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E42201C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E420250()
{
  sub_23E421A74();
  return sub_23E538570();
}

uint64_t sub_23E420278()
{
  sub_23E421A74();
  return sub_23E53857C();
}

uint64_t StaticDoorLockCluster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  _DWORD v16[3];
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  char v25;
  int v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46CF0);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v20 = *((unsigned int *)v1 + 3);
  v26 = *((unsigned __int8 *)v1 + 16);
  v9 = *((unsigned __int8 *)v1 + 17);
  v18 = *((unsigned __int8 *)v1 + 18);
  v19 = v9;
  v10 = *((unsigned __int8 *)v1 + 19);
  v16[2] = *((unsigned __int8 *)v1 + 20);
  v17 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E421A74();
  sub_23E5384EC();
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v27 = 0;
  sub_23E248D7C();
  v11 = v22;
  sub_23E5382AC();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  v13 = v18;
  v14 = v17;
  v15 = v21;
  LOBYTE(v23) = 1;
  v27 = v26;
  sub_23E538258();
  LOBYTE(v23) = 2;
  sub_23E5381F8();
  LOBYTE(v23) = v13;
  BYTE1(v23) = v14;
  v27 = 3;
  sub_23E421AB8();
  sub_23E538234();
  LOBYTE(v23) = 4;
  sub_23E5381F8();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t StaticDoorLockCluster.hashValue.getter()
{
  sub_23E53845C();
  StaticDoorLockCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticDoorLockCluster.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  unsigned __int8 v20;
  int v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E421A74();
  sub_23E5384E0();
  if (!v2)
  {
    v22 = 0;
    sub_23E248DC0();
    sub_23E538180();
    v17 = v18;
    v9 = v19;
    v10 = v20;
    LOBYTE(v18) = 1;
    v15 = sub_23E53812C();
    v16 = v10;
    v21 = v9;
    LOBYTE(v18) = 2;
    LOBYTE(v10) = sub_23E5380E4();
    v22 = 3;
    sub_23E421AFC();
    sub_23E538108();
    LOBYTE(v9) = v18;
    HIDWORD(v14) = BYTE1(v18);
    LOBYTE(v18) = 4;
    v12 = sub_23E5380E4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v17;
    *(_WORD *)(a2 + 8) = v21;
    *(_BYTE *)(a2 + 10) = v16;
    v13 = BYTE4(v15);
    *(_DWORD *)(a2 + 12) = v15;
    *(_BYTE *)(a2 + 16) = v13 & 1;
    *(_BYTE *)(a2 + 17) = v10;
    *(_BYTE *)(a2 + 18) = v9;
    *(_BYTE *)(a2 + 19) = BYTE4(v14);
    *(_BYTE *)(a2 + 20) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E42077C()
{
  sub_23E53845C();
  StaticDoorLockCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E420800()
{
  sub_23E53845C();
  StaticDoorLockCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E42087C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticDoorLockCluster.init(from:)(a1, a2);
}

uint64_t sub_23E420890(_QWORD *a1)
{
  return StaticDoorLockCluster.encode(to:)(a1);
}

unint64_t sub_23E4208A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3;
  char v4;
  int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v9;
  __int16 v10;
  char v11;
  _QWORD v12[4];

  v3 = *((_WORD *)a1 + 4);
  v4 = *((_BYTE *)a1 + 10);
  v9 = *a1;
  v10 = v3;
  v11 = v4;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 35, a2);
  if (v12[3])
  {
    v5 = swift_dynamicCast();
    v6 = v9;
    v7 = v5 ^ 1;
    if (!v5)
      v6 = 0;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v12, &qword_254332260);
    v6 = 0;
    v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t sub_23E420954(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  __int16 v10;
  char v11;

  v5 = *((_WORD *)a1 + 4);
  v6 = *((_BYTE *)a1 + 10);
  v9 = *a1;
  v10 = v5;
  v11 = v6;
  v7 = (*(uint64_t (**)(uint64_t *))(a3 + 80))(&v9);
  LOBYTE(a4) = sub_23E41E9CC(a4, v7);
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t StaticDoorLockCluster.setAutoRelockTime(_:)(int a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + 244) = a1;
  *(_QWORD *)(v2 + 200) = *(_QWORD *)v1;
  *(_WORD *)(v2 + 248) = *(_WORD *)(v1 + 8);
  *(_BYTE *)(v2 + 155) = *(_BYTE *)(v1 + 10);
  return swift_task_switch();
}

uint64_t sub_23E4209EC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_DWORD *)(v0 + 244);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315650;
    *(_QWORD *)(v0 + 184) = sub_23E1FD768(0xD000000000000029, 0x800000023E56A0D0, &v11);
    sub_23E537CF4();
    *(_WORD *)(v5 + 12) = 2080;
    *(_QWORD *)(v0 + 192) = sub_23E1FD768(0xD000000000000015, 0x800000023E56A100, &v11);
    sub_23E537CF4();
    *(_WORD *)(v5 + 22) = 1024;
    *(_DWORD *)(v0 + 240) = v4;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v2, v3, "%s - %s: Starting to update autoRelockTime to %u.", (uint8_t *)v5, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v6, -1, -1);
    MEMORY[0x24264FEBC](v5, -1, -1);
  }

  v7 = *(_BYTE *)(v0 + 155);
  v8 = *(_WORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 216) = sub_23E1E335C(0, &qword_256D46D20);
  *(_QWORD *)(v0 + 144) = v9;
  *(_WORD *)(v0 + 152) = v8;
  *(_BYTE *)(v0 + 154) = v7;
  sub_23E5378F8();
  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E420C58()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 232) = sub_23E34F1E8(v0 + 144);
  return swift_task_switch();
}

uint64_t sub_23E420CA4()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v17;
  uint64_t v18;
  __int16 v19;
  char v20;
  uint64_t v21[2];
  __int16 v22;
  char v23;

  v1 = *(void **)(v0 + 232);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v3;
    v4 = sub_23E53755C();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    *(_QWORD *)(inited + 80) = sub_23E53755C();
    *(_QWORD *)(inited + 88) = v6;
    v7 = sub_23E5384C8();
    *(_QWORD *)(inited + 120) = sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
    *(_QWORD *)(inited + 96) = v7;
    sub_23E20D69C(inited);
    v8 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_23E537A60();
    objc_msgSend(v1, sel_writeAttributeAutoRelockTimeWithValue_expectedValueInterval_, v8, v9);

  }
  else
  {
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(v10, v11))
    {
      v19 = *(_WORD *)(v0 + 248);
      v20 = *(_BYTE *)(v0 + 155);
      v18 = *(_QWORD *)(v0 + 200);
      v17 = *(_DWORD *)(v0 + 244);
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v21[0] = v13;
      *(_DWORD *)v12 = 136315906;
      *(_QWORD *)(v0 + 176) = sub_23E1FD768(0xD000000000000029, 0x800000023E56A0D0, v21);
      sub_23E537CF4();
      *(_WORD *)(v12 + 12) = 2080;
      *(_QWORD *)(v0 + 160) = sub_23E1FD768(0xD000000000000015, 0x800000023E56A100, v21);
      sub_23E537CF4();
      *(_WORD *)(v12 + 22) = 1024;
      *(_DWORD *)(v0 + 156) = v17;
      sub_23E537CF4();
      *(_WORD *)(v12 + 28) = 2080;
      v21[1] = v18;
      v22 = v19;
      v23 = v20;
      v14 = ClusterPath.description.getter();
      *(_QWORD *)(v0 + 168) = sub_23E1FD768(v14, v15, v21);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v10, v11, "%s - %s: Unable to update to autoRelockTime to %u because could not create door lock cluster with %s", (uint8_t *)v12, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticDoorLockCluster.setWalletKeyUWBApproachAngle(_:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 203) = *a1;
  *(_QWORD *)(v2 + 240) = *(_QWORD *)v1;
  *(_WORD *)(v2 + 204) = *(_WORD *)(v1 + 8);
  *(_BYTE *)(v2 + 206) = *(_BYTE *)(v1 + 10);
  return swift_task_switch();
}

uint64_t sub_23E42100C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  __int16 v10;
  uint64_t v12;
  char v13;

  if (qword_254332E00 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 248) = __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_BYTE *)(v0 + 203);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 224) = sub_23E1FD768(0xD000000000000020, 0x800000023E56A120, &v12);
    sub_23E537CF4();
    *(_WORD *)(v5 + 12) = 2080;
    v13 = v4;
    v7 = StaticDoorLockCluster.WalletKeyUWBApproachAngle.description.getter();
    *(_QWORD *)(v0 + 232) = sub_23E1FD768(v7, v8, &v12);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v2, v3, "%s %s.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v6, -1, -1);
    MEMORY[0x24264FEBC](v5, -1, -1);
  }

  v9 = *(_BYTE *)(v0 + 206);
  v10 = *(_WORD *)(v0 + 204);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 240);
  *(_WORD *)(v0 + 200) = v10;
  *(_BYTE *)(v0 + 202) = v9;
  sub_23E5378F8();
  *(_QWORD *)(v0 + 256) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E42122C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = sub_23E350FB8(v0 + 24);
  v0[22] = v1;
  v0[23] = v2;
  v0[33] = v1;
  return swift_task_switch();
}

uint64_t sub_23E42127C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;

  if (*(_QWORD *)(v0 + 264))
  {
    v1 = *(_QWORD *)(v0 + 184);
    v2 = *(_BYTE *)(v0 + 206);
    v3 = *(_WORD *)(v0 + 204);
    v4 = *(_QWORD *)(v0 + 240);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E53B510;
    *(_QWORD *)(inited + 32) = sub_23E53755C();
    *(_QWORD *)(inited + 40) = v6;
    v7 = sub_23E53755C();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v7;
    *(_QWORD *)(inited + 56) = v8;
    *(_QWORD *)(inited + 80) = sub_23E53755C();
    *(_QWORD *)(inited + 88) = v9;
    v10 = sub_23E538420();
    *(_QWORD *)(inited + 120) = sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
    *(_QWORD *)(inited + 96) = v10;
    v11 = sub_23E20D69C(inited);
    ObjectType = swift_getObjectType();
    v25 = v4;
    v26 = v3;
    v27 = v2;
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    *(_QWORD *)(v0 + 144) = v11;
    *(_QWORD *)(v0 + 168) = v13;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(v1 + 64))(&v25, 0, v0 + 144, ObjectType, v1);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  }
  else
  {
    v14 = sub_23E537190();
    v15 = sub_23E537B08();
    if (os_log_type_enabled(v14, v15))
    {
      v23 = *(_BYTE *)(v0 + 206);
      v16 = *(_WORD *)(v0 + 204);
      v17 = *(_QWORD *)(v0 + 240);
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315394;
      *(_QWORD *)(v0 + 216) = sub_23E1FD768(0xD000000000000020, 0x800000023E56A120, &v24);
      sub_23E537CF4();
      *(_WORD *)(v18 + 12) = 2080;
      v25 = v17;
      v26 = v16;
      v27 = v23;
      v20 = ClusterPath.description.getter();
      *(_QWORD *)(v0 + 208) = sub_23E1FD768(v20, v21, &v24);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v14, v15, "%s: Unable to update wallet key uwb approach angle because device in current home with path %s could not be found.", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v19, -1, -1);
      MEMORY[0x24264FEBC](v18, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticDoorLockCluster.includeWalletKeyUWBApproachAngle(_:)(char *a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int16 v5;
  char v6;
  int v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = *a1;
  v4 = *v1;
  v5 = *((_WORD *)v1 + 4);
  v6 = *((_BYTE *)v1 + 10);
  v7 = *((_DWORD *)v1 + 3);
  v8 = *((_BYTE *)v1 + 16);
  v9 = *((_BYTE *)v1 + 17);
  v10 = *((_BYTE *)v1 + 18);
  v11 = *((_BYTE *)v1 + 19);
  v12 = *((_BYTE *)v1 + 20);
  if (v11)
    v13 = 0;
  else
    v13 = *((_BYTE *)v1 + 18);
  *(_QWORD *)(v2 + 16) = v4;
  *(_WORD *)(v2 + 24) = v5;
  *(_BYTE *)(v2 + 26) = v6;
  *(_DWORD *)(v2 + 28) = v7;
  *(_BYTE *)(v2 + 32) = v8;
  *(_BYTE *)(v2 + 33) = v9;
  *(_BYTE *)(v2 + 34) = v10;
  *(_BYTE *)(v2 + 35) = v11;
  *(_BYTE *)(v2 + 36) = v12;
  *(_BYTE *)(v2 + 37) = v13 | v3;
  v14 = swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v14;
  *(_QWORD *)v14 = v2;
  *(_QWORD *)(v14 + 8) = sub_23E421618;
  *(_BYTE *)(v14 + 203) = *(_BYTE *)(v2 + 37);
  *(_QWORD *)(v14 + 240) = *(_QWORD *)(v2 + 16);
  *(_WORD *)(v14 + 204) = *(_WORD *)(v2 + 24);
  *(_BYTE *)(v14 + 206) = *(_BYTE *)(v2 + 26);
  return swift_task_switch();
}

uint64_t sub_23E421618()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t StaticDoorLockCluster.excludeWalletKeyUWBApproachAngle(_:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 69) = *a1;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)v1;
  *(_WORD *)(v2 + 38) = *(_WORD *)(v1 + 8);
  *(_BYTE *)(v2 + 70) = *(_BYTE *)(v1 + 10);
  *(_DWORD *)(v2 + 64) = *(_DWORD *)(v1 + 12);
  *(_BYTE *)(v2 + 71) = *(_BYTE *)(v1 + 16);
  *(_WORD *)(v2 + 72) = *(_WORD *)(v1 + 17);
  *(_BYTE *)(v2 + 74) = *(_BYTE *)(v1 + 19);
  *(_BYTE *)(v2 + 75) = *(_BYTE *)(v1 + 20);
  return swift_task_switch();
}

uint64_t sub_23E4216BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  char v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  unsigned __int8 v11;
  char v12;
  char v13;
  int v14;
  char v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  if ((*(_BYTE *)(v0 + 74) & 1) != 0)
  {
    if (qword_254332E00 != -1)
      swift_once();
    v1 = sub_23E5371A8();
    __swift_project_value_buffer(v1, (uint64_t)qword_254333308);
    v2 = sub_23E537190();
    v3 = sub_23E537B08();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(_BYTE *)(v0 + 69);
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v19 = v6;
      *(_DWORD *)v5 = 136315138;
      *(_BYTE *)(v0 + 37) = v4;
      v7 = sub_23E5375D4();
      *(_QWORD *)(v0 + 40) = sub_23E1FD768(v7, v8, &v19);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v2, v3, "Couldn't remove UWB angle %s because we don't have a WalletKeyUWBApproachAngle", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v6, -1, -1);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(_BYTE *)(v0 + 75);
    v11 = *(_BYTE *)(v0 + 73);
    v12 = *(_BYTE *)(v0 + 72);
    v13 = *(_BYTE *)(v0 + 71);
    v14 = *(_DWORD *)(v0 + 64);
    v15 = *(_BYTE *)(v0 + 70);
    v16 = *(_WORD *)(v0 + 38);
    v17 = *(_BYTE *)(v0 + 69);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
    *(_WORD *)(v0 + 24) = v16;
    *(_BYTE *)(v0 + 26) = v15;
    *(_DWORD *)(v0 + 28) = v14;
    *(_BYTE *)(v0 + 32) = v13;
    *(_BYTE *)(v0 + 33) = v12;
    *(_WORD *)(v0 + 34) = v11;
    *(_BYTE *)(v0 + 36) = v10;
    *(_BYTE *)(v0 + 68) = v11 & ~v17;
    v18 = swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v18;
    *(_QWORD *)v18 = v0;
    *(_QWORD *)(v18 + 8) = sub_23E421918;
    *(_BYTE *)(v18 + 203) = *(_BYTE *)(v0 + 68);
    *(_QWORD *)(v18 + 240) = *(_QWORD *)(v0 + 16);
    *(_WORD *)(v18 + 204) = *(_WORD *)(v0 + 24);
    *(_BYTE *)(v18 + 206) = *(_BYTE *)(v0 + 26);
    return swift_task_switch();
  }
}

uint64_t sub_23E421918()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t _s13HomeDataModel21StaticDoorLockClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  int v9;
  char v10;
  char v11;

  result = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_23E550454[*(char *)(a1 + 10)] != dword_23E550454[*(char *)(a2 + 10)])
      return 0;
    v4 = *(unsigned __int8 *)(a1 + 17);
    v5 = *(unsigned __int8 *)(a1 + 18);
    v6 = *(_BYTE *)(a1 + 19);
    v7 = *(unsigned __int8 *)(a1 + 20);
    v8 = *(unsigned __int8 *)(a2 + 17);
    v9 = *(unsigned __int8 *)(a2 + 20);
    if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 16))
        return 0;
    }
    else
    {
      if (*(_DWORD *)(a1 + 12) == *(_DWORD *)(a2 + 12))
        v10 = *(_BYTE *)(a2 + 16);
      else
        v10 = 1;
      if ((v10 & 1) != 0)
        return 0;
    }
    if (v4 == 2)
    {
      if (v8 != 2)
        return 0;
    }
    else
    {
      result = 0;
      if (v8 == 2 || ((((v4 & 1) == 0) ^ v8) & 1) == 0)
        return result;
    }
    if ((v6 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 19))
        return 0;
    }
    else
    {
      if (v5 == *(unsigned __int8 *)(a2 + 18))
        v11 = *(_BYTE *)(a2 + 19);
      else
        v11 = 1;
      if ((v11 & 1) != 0)
        return 0;
    }
    if (v7 == 2)
    {
      if (v9 != 2)
        return 0;
    }
    else if (v9 == 2 || ((((v7 & 1) == 0) ^ v9) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_23E421A74()
{
  unint64_t result;

  result = qword_256D46CF8;
  if (!qword_256D46CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E550400, &type metadata for StaticDoorLockCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46CF8);
  }
  return result;
}

unint64_t sub_23E421AB8()
{
  unint64_t result;

  result = qword_256D46D00;
  if (!qword_256D46D00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D00);
  }
  return result;
}

unint64_t sub_23E421AFC()
{
  unint64_t result;

  result = qword_256D46D10;
  if (!qword_256D46D10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D10);
  }
  return result;
}

unint64_t sub_23E421B44()
{
  unint64_t result;

  result = qword_256D46D40;
  if (!qword_256D46D40)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D40);
  }
  return result;
}

unint64_t sub_23E421B8C()
{
  unint64_t result;

  result = qword_256D46D48;
  if (!qword_256D46D48)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D48);
  }
  return result;
}

unint64_t sub_23E421BD4()
{
  unint64_t result;

  result = qword_256D46D50;
  if (!qword_256D46D50)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D50);
  }
  return result;
}

unint64_t sub_23E421C1C()
{
  unint64_t result;

  result = qword_256D46D58;
  if (!qword_256D46D58)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster.WalletKeyUWBApproachAngle, &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle);
    atomic_store(result, (unint64_t *)&qword_256D46D58);
  }
  return result;
}

unint64_t sub_23E421C64()
{
  unint64_t result;

  result = qword_256D46D60;
  if (!qword_256D46D60)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster, &type metadata for StaticDoorLockCluster);
    atomic_store(result, (unint64_t *)&qword_256D46D60);
  }
  return result;
}

__n128 __swift_memcpy21_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticDoorLockCluster(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticDoorLockCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 21) = 0;
    if (a2)
      *(_BYTE *)(result + 17) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster()
{
  return &type metadata for StaticDoorLockCluster;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster.WalletKeyUWBApproachAngle()
{
  return &type metadata for StaticDoorLockCluster.WalletKeyUWBApproachAngle;
}

uint64_t storeEnumTagSinglePayload for StaticDoorLockCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E421DD0 + 4 * byte_23E54FF9A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E421E04 + 4 * byte_23E54FF95[v4]))();
}

uint64_t sub_23E421E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E421E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E421E14);
  return result;
}

uint64_t sub_23E421E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E421E28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E421E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E421E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticDoorLockCluster.CodingKeys()
{
  return &type metadata for StaticDoorLockCluster.CodingKeys;
}

unint64_t sub_23E421E54()
{
  unint64_t result;

  result = qword_256D46D68;
  if (!qword_256D46D68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5503D8, &type metadata for StaticDoorLockCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46D68);
  }
  return result;
}

unint64_t sub_23E421E9C()
{
  unint64_t result;

  result = qword_256D46D70;
  if (!qword_256D46D70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E550348, &type metadata for StaticDoorLockCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46D70);
  }
  return result;
}

unint64_t sub_23E421EE4()
{
  unint64_t result;

  result = qword_256D46D78;
  if (!qword_256D46D78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E550370, &type metadata for StaticDoorLockCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46D78);
  }
  return result;
}

uint64_t sub_23E421F28()
{
  char v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD v7[5];

  v7[3] = &type metadata for HomeAppFeatures;
  v7[4] = sub_23E20B720();
  LOBYTE(v7[0]) = 4;
  v0 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  v1 = MEMORY[0x24BEE4B00];
  if ((v0 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7[0] = v1;
    sub_23E21AD38((uint64_t)&unk_250EDCFE8, 27, isUniquelyReferenced_nonNull_native);
    v1 = v7[0];
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41DB0);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23E539650;
  *(_DWORD *)(v3 + 32) = 35;
  v4 = swift_isUniquelyReferenced_nonNull_native();
  v7[0] = v1;
  sub_23E21AD38(v3, 21, v4);
  v5 = v7[0];
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23E42201C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C65526F747561 && a2 == 0xEE00656D69546B63 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E56A150 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023E56A170 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000023E56A190)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

HomeDataModel::DeepLinkURLGenerator __swiftcall DeepLinkURLGenerator.init(host:path:)(Swift::String host, Swift::String path)
{
  Swift::String *v2;
  HomeDataModel::DeepLinkURLGenerator result;

  *v2 = host;
  v2[1] = path;
  result.path = path;
  result.host = host;
  return result;
}

void DeepLinkURLGenerator.generateDeepLink()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23E536B48();
  MEMORY[0x24BDAC7A8](v1);
  __asm { BR              X10; loc_23E422358 }
}

void *static DeepLinkDestination.allCases.getter()
{
  return &unk_250EDEE48;
}

uint64_t DeepLinkDestination.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E422838 + 4 * byte_23E5504E0[*v0]))(0x726F737365636361, 0xE900000000000079);
}

uint64_t sub_23E422838()
{
  return 0x79726F6765746163;
}

uint64_t sub_23E422850()
{
  return 0x72616F6268736164;
}

uint64_t sub_23E42286C()
{
  return 1836019570;
}

unint64_t sub_23E42287C()
{
  unint64_t result;

  result = qword_256D46D80;
  if (!qword_256D46D80)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DeepLinkURLGeneratorError, &type metadata for DeepLinkURLGeneratorError);
    atomic_store(result, (unint64_t *)&qword_256D46D80);
  }
  return result;
}

BOOL static DeepLinkURLGeneratorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DeepLinkURLGeneratorError.hash(into:)()
{
  return sub_23E538468();
}

uint64_t DeepLinkURLGeneratorError.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

unint64_t static NavigationConstants.privateURLScheme.getter()
{
  return 0xD000000000000016;
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional __swiftcall DeepLinkDestination.SecondaryDestination.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::DeepLinkDestination::SecondaryDestination_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static DeepLinkDestination.SecondaryDestination.allCases.getter()
{
  return &unk_250EDEF08;
}

uint64_t DeepLinkDestination.SecondaryDestination.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4229F4 + 4 * byte_23E5504E4[*v0]))(0x736172656D6163, 0xE700000000000000);
}

uint64_t sub_23E4229F4()
{
  return 0x6C6F72746E6F63;
}

uint64_t sub_23E422A08()
{
  return 0x657469726F766166;
}

uint64_t sub_23E422A24()
{
  return 0x73656E656373;
}

uint64_t sub_23E422A38()
{
  return 0x73676E6974746573;
}

void sub_23E422A50(char *a1)
{
  sub_23E522E1C(*a1);
}

void sub_23E422A5C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X9 }
}

uint64_t sub_23E422AA8()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E422B2C()
{
  __asm { BR              X10 }
}

uint64_t sub_23E422B68()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E422BD8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X9 }
}

uint64_t sub_23E422C20()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional sub_23E422CA4(Swift::String *a1)
{
  return DeepLinkDestination.SecondaryDestination.init(rawValue:)(*a1);
}

uint64_t sub_23E422CB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E422CE0 + 4 * byte_23E5504F8[*v0]))();
}

void sub_23E422CE0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6C6F72746E6F63;
  a1[1] = v1;
}

void sub_23E422CF8(_QWORD *a1@<X8>)
{
  *a1 = 0x657469726F766166;
  a1[1] = 0xE900000000000073;
}

void sub_23E422D18(_QWORD *a1@<X8>)
{
  *a1 = 0x73656E656373;
  a1[1] = 0xE600000000000000;
}

void sub_23E422D30(_QWORD *a1@<X8>)
{
  *a1 = 0x73676E6974746573;
  a1[1] = 0xE800000000000000;
}

void sub_23E422D4C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDEF30;
}

HomeDataModel::DeepLinkDestination::AcccessoryControlSecondaryDestination_optional __swiftcall DeepLinkDestination.AcccessoryControlSecondaryDestination.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeDataModel::DeepLinkDestination::AcccessoryControlSecondaryDestination_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static DeepLinkDestination.AcccessoryControlSecondaryDestination.allCases.getter()
{
  return &unk_250EDEFA8;
}

uint64_t DeepLinkDestination.AcccessoryControlSecondaryDestination.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 6449010;
}

uint64_t sub_23E422E00(char *a1, char *a2)
{
  return sub_23E522FA4(*a1, *a2);
}

uint64_t sub_23E422E0C()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E422E88()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E422EE0()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

HomeDataModel::DeepLinkDestination::AcccessoryControlSecondaryDestination_optional sub_23E422F58(Swift::String *a1)
{
  return DeepLinkDestination.AcccessoryControlSecondaryDestination.init(rawValue:)(*a1);
}

void sub_23E422F64(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 6449010;
  if (*v1)
    v2 = 0xD000000000000010;
  v3 = 0x800000023E561BC0;
  if (!*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_23E422FA0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDEFD0;
}

HomeDataModel::DeepLinkDestination_optional __swiftcall DeepLinkDestination.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::DeepLinkDestination_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_23E423008(char *a1)
{
  sub_23E522CC0(*a1);
}

void sub_23E423014()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X9 }
}

uint64_t sub_23E423068()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

void sub_23E4230D4()
{
  __asm { BR              X10 }
}

uint64_t sub_23E423118()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E423170()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X9 }
}

uint64_t sub_23E4231C0()
{
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

HomeDataModel::DeepLinkDestination_optional sub_23E42322C(Swift::String *a1)
{
  return DeepLinkDestination.init(rawValue:)(*a1);
}

uint64_t sub_23E423238()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E423270 + 4 * byte_23E550509[*v0]))();
}

void sub_23E423270(_QWORD *a1@<X8>)
{
  *a1 = 0x79726F6765746163;
  a1[1] = 0xE800000000000000;
}

void sub_23E42328C(_QWORD *a1@<X8>)
{
  *a1 = 0x72616F6268736164;
  a1[1] = 0xE900000000000064;
}

void sub_23E4232AC(_QWORD *a1@<X8>)
{
  *a1 = 1836019570;
  a1[1] = 0xE400000000000000;
}

void sub_23E4232C0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDF078;
}

BOOL static HomeDeepLinkKeys.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HomeDeepLinkKeys.hash(into:)()
{
  return sub_23E538468();
}

HomeDataModel::HomeDeepLinkKeys_optional __swiftcall HomeDeepLinkKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  HomeDataModel::HomeDeepLinkKeys_optional result;
  char v7;
  char v8;

  v2 = v1;
  v3 = stringValue._countAndFlagsBits == 0x79726F6765746163 && stringValue._object == (void *)0xE800000000000000;
  if (v3
    || (object = stringValue._object, countAndFlagsBits = stringValue._countAndFlagsBits, (sub_23E538354() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else if (countAndFlagsBits == 0x694C656369766564 && object == (void *)0xEA00000000007473
         || (sub_23E538354() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 1;
  }
  else if (countAndFlagsBits == 0x686372616573 && object == (void *)0xE600000000000000)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 2;
  }
  else
  {
    v8 = sub_23E538354();
    result.value = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      v7 = 2;
    else
      v7 = 3;
  }
  *v2 = v7;
  return result;
}

HomeDataModel::HomeDeepLinkKeys_optional __swiftcall HomeDeepLinkKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 3;
  return (HomeDataModel::HomeDeepLinkKeys_optional)intValue;
}

uint64_t HomeDeepLinkKeys.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t HomeDeepLinkKeys.intValue.getter()
{
  return 0;
}

uint64_t HomeDeepLinkKeys.stringValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x694C656369766564;
  if (*v0 != 1)
    v1 = 0x686372616573;
  if (*v0)
    return v1;
  else
    return 0x79726F6765746163;
}

uint64_t sub_23E42352C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x694C656369766564;
  if (*v0 != 1)
    v1 = 0x686372616573;
  if (*v0)
    return v1;
  else
    return 0x79726F6765746163;
}

uint64_t sub_23E42358C()
{
  sub_23E425DEC();
  return sub_23E538570();
}

uint64_t sub_23E4235B4()
{
  sub_23E425DEC();
  return sub_23E53857C();
}

uint64_t URLQueryItem.init<A>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_23E536AA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

uint64_t URLQueryItem.decodedValue<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E536AB8();
  if (v7)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8))(v6, v7, a1, a2);
  else
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a3, 1, 1, a1);
}

uint64_t Array<A>.encode()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v27 = MEMORY[0x24BEE4AF8];
    sub_23E2058B0(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v25 = v9;
    v26 = v3;
    do
    {
      v24(v5, v8, v2);
      v10 = sub_23E536F38();
      v12 = v11;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058B0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v27;
      }
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23E2058B0(v13 > 1, v14 + 1, 1);
        v7 = v27;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v3 = v26;
      v8 += v25;
      --v6;
    }
    while (v6);
  }
  v27 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  sub_23E1F9710((unint64_t *)&qword_254332BA0, &qword_254332B98, MEMORY[0x24BEE12B0]);
  v16 = sub_23E5374F0();
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = sub_23E423938(v16, v18);
  v21 = v20;
  v22 = sub_23E536E54();
  sub_23E22C908(v19, v21);
  return v22;
}

uint64_t sub_23E423938(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46E08);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_23E1E7C64((uint64_t)v14, &qword_256D46E10);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_23E537EF8();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_23E425318(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_23E537640();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_23E42537C(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_23E424C64();
    __asm { BR              X12 }
  }
  sub_23E1E6C84(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_23E536BCC();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

unint64_t sub_23E423E3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = _sSa13HomeDataModel10Foundation4UUIDVRszlE5querySayADGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23E423E60()
{
  uint64_t *v0;

  return Array<A>.encode()(*v0);
}

Swift::String_optional __swiftcall String.encode()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  Swift::String_optional result;

  v2 = v1;
  v3 = v0;
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = v2;
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

uint64_t sub_23E423E9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

HomeDataModel::UmbrellaCategory_optional __swiftcall UmbrellaCategory.init(query:)(Swift::String query)
{
  _BYTE *v1;
  _BYTE *v2;
  HomeDataModel::UmbrellaCategory_optional result;
  char v4;

  v2 = v1;
  result.value = UmbrellaCategory.init(rawValue:)(query).value;
  *v2 = v4;
  return result;
}

Swift::String_optional __swiftcall UmbrellaCategory.encode()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String_optional result;

  v1 = 8 * *v0;
  v2 = *(_QWORD *)&aClimate_0[v1];
  v3 = *(void **)((char *)&unk_23E550B28 + v1);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

HomeDataModel::UmbrellaCategory_optional sub_23E423EFC@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  HomeDataModel::UmbrellaCategory_optional result;
  char v5;

  result.value = UmbrellaCategory.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_23E423F30()
{
  char *v0;

  return *(_QWORD *)&aClimate_0[8 * *v0];
}

void static URLComponents.create(destination:secondary:queryItems:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  v2 = *a2;
  sub_23E536B3C();
  sub_23E536B30();
  sub_23E536B00();
  __asm { BR              X9 }
}

uint64_t sub_23E423FF8()
{
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E536B18();
  swift_bridgeObjectRetain();
  return sub_23E536AD0();
}

char URLComponents.destination.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23E536AF4();
  if (v3)
    LOBYTE(v2) = DeepLinkDestination.init(rawValue:)(*(Swift::String *)&v2);
  else
    *a1 = 4;
  return v2;
}

HomeDataModel::DeepLinkDestination::SecondaryDestination_optional URLComponents.secondary.getter@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  HomeDataModel::DeepLinkDestination::SecondaryDestination_optional result;
  _QWORD v15[4];
  _QWORD v16[2];

  v2 = sub_23E536B0C();
  v4 = v3;
  v16[0] = 47;
  v16[1] = 0xE100000000000000;
  v15[2] = v16;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)sub_23E4245F8(0x7FFFFFFFFFFFFFFFLL, 1, sub_23E425780, (uint64_t)v15, v2, v4);
  swift_bridgeObjectRelease();
  if (v5[2])
  {
    v6 = v5[4];
    v7 = v5[5];
    v8 = v5[6];
    v9 = v5[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24264E878](v6, v7, v8, v9);
    v12 = v11;
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = v10;
    v13._object = v12;
    return DeepLinkDestination.SecondaryDestination.init(rawValue:)(v13);
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    *a1 = 5;
  }
  return result;
}

uint64_t Collection<>.subscript.getter@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[32];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46D88);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14[16] = *a1;
  sub_23E5376F4();
  v11 = sub_23E536AC4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_256D46D88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, 1, 1, a2);
  }
  else
  {
    URLQueryItem.decodedValue<A>()(a2, a3, a4);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v10, v11);
  }
}

uint64_t sub_23E424300(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v3 = sub_23E536AAC();
  if (a2)
  {
    if (a2 == 1)
      v5 = 0x694C656369766564;
    else
      v5 = 0x686372616573;
    if (a2 == 1)
      v6 = 0xEA00000000007473;
    else
      v6 = 0xE600000000000000;
    if (v3 != v5)
      goto LABEL_13;
  }
  else
  {
    v6 = 0xE800000000000000;
    if (v3 != 0x79726F6765746163)
      goto LABEL_13;
  }
  if (v4 == v6)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
LABEL_13:
  v8 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t URL.deepLinkComponents()@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v2 = sub_23E536B48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46D90);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - v10;
  sub_23E536ADC();
  sub_23E4257B4((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_256D46D90);
    sub_23E1E7C64((uint64_t)v9, &qword_256D46D90);
LABEL_11:
    v16 = 1;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v16, 1, v2);
  }
  v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v12(v5, v9, v2);
  v13 = sub_23E536B24();
  if (!v14)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_256D46D90);
    goto LABEL_10;
  }
  if (v13 != 0xD000000000000016 || v14 != 0x800000023E56A1C0)
  {
    v15 = sub_23E538354();
    sub_23E1E7C64((uint64_t)v11, &qword_256D46D90);
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      goto LABEL_9;
LABEL_10:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_11;
  }
  sub_23E1E7C64((uint64_t)v11, &qword_256D46D90);
  swift_bridgeObjectRelease();
LABEL_9:
  v12(a1, v5, v2);
  v16 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v16, 1, v2);
}

uint64_t sub_23E4245F8(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_23E424A94(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_23E5376AC();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_23E537604();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_23E537604();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_23E5376B8();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_23E51FF74(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_23E51FF74((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_23E537604();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_23E5376B8();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_23E51FF74(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_23E51FF74((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_23E538000();
  __break(1u);
LABEL_42:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E424A94(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_23E5376B8();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_23E51FF74(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_23E51FF74((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E424BEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23E537670();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24264E8F0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

void sub_23E424C64()
{
  __asm { BR              X11 }
}

_QWORD *sub_23E424CC4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_23E424F54@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_23E425160(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_23E425220((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_23E425298((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_23E424FC8(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_23E42502C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_23E536B6C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_23E536B90();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_23E536B84();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_23E4250D8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_23E537E74();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E425160(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_23E425220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23E536B9C();
  swift_allocObject();
  result = sub_23E536B60();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_23E536E24();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_23E425298(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_23E536B9C();
  swift_allocObject();
  result = sub_23E536B60();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_23E425318(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_23E425160(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_23E425220((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_23E425298((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_23E42537C(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_23E536B9C();
      swift_allocObject();
      sub_23E536B78();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_23E536E24();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

unint64_t _sSa13HomeDataModel10Foundation4UUIDVRszlE5querySayADGSgSS_tcfC_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  _QWORD v33[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)&v28 - v7;
  v8 = sub_23E537598();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23E536E18();
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = 0;
  if (v11 >> 60 != 15)
  {
    sub_23E53758C();
    v13 = sub_23E537568();
    v12 = v14;
    if (v14)
    {
      v15 = v13;
      v33[0] = 44;
      v33[1] = 0xE100000000000000;
      MEMORY[0x24BDAC7A8](v13);
      *(&v28 - 2) = (uint64_t)v33;
      swift_bridgeObjectRetain();
      v16 = sub_23E4245F8(0x7FFFFFFFFFFFFFFFLL, 1, sub_23E425780, (uint64_t)(&v28 - 4), v15, v12);
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v29 = v9;
        v30 = v11;
        swift_bridgeObjectRetain();
        v28 = v16;
        v18 = (uint64_t *)(v16 + 56);
        v12 = MEMORY[0x24BEE4AF8];
        do
        {
          v20 = *(v18 - 3);
          v19 = *(v18 - 2);
          v21 = *(v18 - 1);
          v22 = *v18;
          swift_bridgeObjectRetain();
          MEMORY[0x24264E878](v20, v19, v21, v22);
          sub_23E536F2C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
          {
            sub_23E1E7C64((uint64_t)v2, &qword_254333F50);
          }
          else
          {
            v23 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
            v24 = v31;
            v23(v31, v2, v3);
            v23(v32, v24, v3);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v12 = sub_23E51E540(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
            v26 = *(_QWORD *)(v12 + 16);
            v25 = *(_QWORD *)(v12 + 24);
            if (v26 >= v25 >> 1)
              v12 = sub_23E51E540(v25 > 1, v26 + 1, 1, v12);
            *(_QWORD *)(v12 + 16) = v26 + 1;
            v23((char *)(v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v26), v32, v3);
          }
          v18 += 4;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        v9 = v29;
        v11 = v30;
      }
      else
      {
        v12 = MEMORY[0x24BEE4AF8];
      }
      sub_23E425EC0(v9, v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E425EC0(v9, v11);
    }
  }
  return v12;
}

uint64_t sub_23E425780(_QWORD *a1)
{
  return sub_23E425EF0(a1) & 1;
}

uint64_t sub_23E425798(uint64_t a1)
{
  uint64_t v1;

  return sub_23E424300(a1, *(_BYTE *)(v1 + 16)) & 1;
}

uint64_t sub_23E4257B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E425800()
{
  unint64_t result;

  result = qword_256D46D98;
  if (!qword_256D46D98)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DeepLinkURLGeneratorError, &type metadata for DeepLinkURLGeneratorError);
    atomic_store(result, (unint64_t *)&qword_256D46D98);
  }
  return result;
}

unint64_t sub_23E425848()
{
  unint64_t result;

  result = qword_256D46DA0;
  if (!qword_256D46DA0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DeepLinkDestination.SecondaryDestination, &type metadata for DeepLinkDestination.SecondaryDestination);
    atomic_store(result, (unint64_t *)&qword_256D46DA0);
  }
  return result;
}

uint64_t sub_23E42588C()
{
  return sub_23E1F9710(&qword_256D46DA8, &qword_256D46DB0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23E4258BC()
{
  unint64_t result;

  result = qword_256D46DB8;
  if (!qword_256D46DB8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DeepLinkDestination.AcccessoryControlSecondaryDestination, &type metadata for DeepLinkDestination.AcccessoryControlSecondaryDestination);
    atomic_store(result, (unint64_t *)&qword_256D46DB8);
  }
  return result;
}

uint64_t sub_23E425900()
{
  return sub_23E1F9710(&qword_256D46DC0, &qword_256D46DC8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23E425930()
{
  unint64_t result;

  result = qword_256D46DD0;
  if (!qword_256D46DD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DeepLinkDestination, &type metadata for DeepLinkDestination);
    atomic_store(result, (unint64_t *)&qword_256D46DD0);
  }
  return result;
}

uint64_t sub_23E425974()
{
  return sub_23E1F9710(&qword_256D46DD8, &qword_256D46DE0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23E4259A4()
{
  unint64_t result;

  result = qword_256D46DE8;
  if (!qword_256D46DE8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HomeDeepLinkKeys, &type metadata for HomeDeepLinkKeys);
    atomic_store(result, (unint64_t *)&qword_256D46DE8);
  }
  return result;
}

unint64_t sub_23E4259EC()
{
  unint64_t result;

  result = qword_256D46DF0;
  if (!qword_256D46DF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HomeDeepLinkKeys, &type metadata for HomeDeepLinkKeys);
    atomic_store(result, (unint64_t *)&qword_256D46DF0);
  }
  return result;
}

unint64_t sub_23E425A34()
{
  unint64_t result;

  result = qword_256D46DF8;
  if (!qword_256D46DF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HomeDeepLinkKeys, &type metadata for HomeDeepLinkKeys);
    atomic_store(result, (unint64_t *)&qword_256D46DF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkURLGenerator()
{
  return &type metadata for DeepLinkURLGenerator;
}

ValueMetadata *type metadata accessor for DeepLinkURLGeneratorError()
{
  return &type metadata for DeepLinkURLGeneratorError;
}

ValueMetadata *type metadata accessor for NavigationConstants()
{
  return &type metadata for NavigationConstants;
}

uint64_t storeEnumTagSinglePayload for DeepLinkDestination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E425AF8 + 4 * byte_23E550518[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E425B2C + 4 * byte_23E550513[v4]))();
}

uint64_t sub_23E425B2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425B34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E425B3CLL);
  return result;
}

uint64_t sub_23E425B48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E425B50);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E425B54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425B5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkDestination()
{
  return &type metadata for DeepLinkDestination;
}

uint64_t storeEnumTagSinglePayload for DeepLinkDestination.SecondaryDestination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E425BC4 + 4 * byte_23E550522[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E425BF8 + 4 * byte_23E55051D[v4]))();
}

uint64_t sub_23E425BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E425C08);
  return result;
}

uint64_t sub_23E425C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E425C1CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E425C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkDestination.SecondaryDestination()
{
  return &type metadata for DeepLinkDestination.SecondaryDestination;
}

uint64_t _s13HomeDataModel25DeepLinkURLGeneratorErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E425C90 + 4 * byte_23E55052C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E425CC4 + 4 * byte_23E550527[v4]))();
}

uint64_t sub_23E425CC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425CCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E425CD4);
  return result;
}

uint64_t sub_23E425CE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E425CE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E425CEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425CF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkDestination.AcccessoryControlSecondaryDestination()
{
  return &type metadata for DeepLinkDestination.AcccessoryControlSecondaryDestination;
}

uint64_t dispatch thunk of DeepLinkCodable.init(query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of DeepLinkCodable.encode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t storeEnumTagSinglePayload for HomeDeepLinkKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E425D6C + 4 * byte_23E550536[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E425DA0 + 4 * byte_23E550531[v4]))();
}

uint64_t sub_23E425DA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425DA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E425DB0);
  return result;
}

uint64_t sub_23E425DBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E425DC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E425DC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E425DD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeDeepLinkKeys()
{
  return &type metadata for HomeDeepLinkKeys;
}

unint64_t sub_23E425DEC()
{
  unint64_t result;

  result = qword_256D46E00;
  if (!qword_256D46E00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HomeDeepLinkKeys, &type metadata for HomeDeepLinkKeys);
    atomic_store(result, (unint64_t *)&qword_256D46E00);
  }
  return result;
}

uint64_t sub_23E425E30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E425E54()
{
  return swift_deallocObject();
}

_QWORD *sub_23E425E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_23E424FC8((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_23E425ED4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_23E425EC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23E22C908(a1, a2);
  return a1;
}

uint64_t sub_23E425ED4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E4250D8(a1, a2);
}

uint64_t sub_23E425EF0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_23E538354() & 1;
}

uint64_t StaticServiceGroup.set(_:for:options:context:)(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t *a4, _OWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 136) = a2;
  *(_BYTE *)(v6 + 208) = *a3;
  v7 = *a4;
  *(_QWORD *)(v6 + 144) = v5;
  *(_QWORD *)(v6 + 152) = v7;
  v8 = a5[1];
  *(_OWORD *)(v6 + 160) = *a5;
  *(_OWORD *)(v6 + 176) = v8;
  return swift_task_switch();
}

uint64_t sub_23E425F74()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t inited;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v11 = *(_OWORD *)(v0 + 160);
  v12 = *(_OWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_BYTE *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_BYTE *)(inited + 32) = v2;
  sub_23E1EA57C(v3, inited + 40);
  v5 = sub_23E20D564(inited);
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 120) = v1;
  *(_OWORD *)(v0 + 88) = v11;
  *(_OWORD *)(v0 + 104) = v12;
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v6;
  *(_QWORD *)v6 = v0;
  *(_QWORD *)(v6 + 8) = sub_23E20D304;
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v6 + 336) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v6 + 344) = v5;
  *(_QWORD *)(v6 + 352) = v7;
  *(_QWORD *)(v6 + 360) = v8;
  v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v6 + 368) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 384) = v9;
  return swift_task_switch();
}

uint64_t StaticServiceGroup.set(for:options:context:)(uint64_t a1, uint64_t a2, uint64_t *a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)(v5 + 336) = a1;
  *(_QWORD *)(v5 + 344) = a2;
  v6 = *a3;
  *(_QWORD *)(v5 + 352) = v4;
  *(_QWORD *)(v5 + 360) = v6;
  v7 = a4[1];
  *(_OWORD *)(v5 + 368) = *a4;
  *(_OWORD *)(v5 + 384) = v7;
  return swift_task_switch();
}

uint64_t sub_23E426094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  int64_t v41;
  _OWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  int64_t v47;
  _QWORD *v48;

  v1 = v0 + 56;
  v44 = (_OWORD *)(v0 + 136);
  v2 = v0 + 168;
  v45 = (_OWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v3 + 64);
  v39 = (_OWORD *)(v0 + 232);
  v40 = v3 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v3 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & v4;
  v42 = (_OWORD *)(v0 + 104);
  v41 = (unint64_t)(63 - v6) >> 6;
  v43 = *(_QWORD *)(v0 + 344);
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    *(_QWORD *)(v0 + 400) = v10;
    if (v7)
    {
      v46 = (v7 - 1) & v7;
      v47 = v9;
      v12 = __clz(__rbit64(v7)) | (v9 << 6);
      goto LABEL_27;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_48;
    if (v13 >= v41)
    {
LABEL_45:
      swift_release();
      *(_QWORD *)(v0 + 408) = sub_23E5378F8();
      *(_QWORD *)(v0 + 416) = sub_23E5378EC();
      sub_23E5378B0();
      return swift_task_switch();
    }
    v14 = *(_QWORD *)(v40 + 8 * v13);
    v15 = v9 + 1;
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v41)
        goto LABEL_45;
      v14 = *(_QWORD *)(v40 + 8 * v15);
      if (!v14)
      {
        v15 = v9 + 3;
        if (v9 + 3 >= v41)
          goto LABEL_45;
        v14 = *(_QWORD *)(v40 + 8 * v15);
        if (!v14)
        {
          v15 = v9 + 4;
          if (v9 + 4 >= v41)
            goto LABEL_45;
          v14 = *(_QWORD *)(v40 + 8 * v15);
          if (!v14)
          {
            v15 = v9 + 5;
            if (v9 + 5 >= v41)
              goto LABEL_45;
            v14 = *(_QWORD *)(v40 + 8 * v15);
            if (!v14)
              break;
          }
        }
      }
    }
LABEL_26:
    v46 = (v14 - 1) & v14;
    v47 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_27:
    v17 = *(_BYTE *)(*(_QWORD *)(v43 + 48) + v12);
    sub_23E1EA57C(*(_QWORD *)(v43 + 56) + 32 * v12, v0 + 24);
    *(_BYTE *)(v0 + 16) = v17;
    v18 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v1 + 16) = v18;
    *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 48);
    sub_23E1ED0A8();
    v19 = *(_BYTE *)(v0 + 56);
    *(_BYTE *)(v0 + 96) = v19;
    sub_23E1EA57C(v0 + 64, (uint64_t)v42);
    sub_23E1EA76C(v42, v44);
    LOBYTE(v48) = v19;
    static HMService.convert(_:characteristicKind:)((uint64_t)v44, (unsigned __int8 *)&v48, v2);
    sub_23E1E7C64((uint64_t)v44, &qword_254332260);
    v20 = *(unsigned __int8 *)(v0 + 56);
    sub_23E1EA5B8(v2, v0 + 200);
    if (*(_QWORD *)(v0 + 224))
    {
      v21 = v1;
      v22 = v2;
      sub_23E1EA76C((_OWORD *)(v0 + 200), v45);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48 = v10;
      v25 = sub_23E1EAF70(v20);
      v26 = v10[2];
      v27 = (v24 & 1) == 0;
      result = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v28 = v24;
      if (v10[3] < result)
      {
        sub_23E212890(result, isUniquelyReferenced_nonNull_native);
        v10 = v48;
        v29 = sub_23E1EAF70(v20);
        if ((v28 & 1) != (v30 & 1))
          return sub_23E5383C0();
        v25 = v29;
        if ((v28 & 1) == 0)
          goto LABEL_39;
LABEL_4:
        v11 = (_OWORD *)(v10[7] + 32 * v25);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        sub_23E1EA76C(v45, v11);
LABEL_5:
        swift_bridgeObjectRelease();
        v2 = v22;
        v1 = v21;
        v7 = v46;
        v9 = v47;
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v24 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_23E21D324();
        v10 = v48;
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
LABEL_39:
      v10[(v25 >> 6) + 8] |= 1 << v25;
      *(_BYTE *)(v10[6] + v25) = v20;
      result = (uint64_t)sub_23E1EA76C(v45, (_OWORD *)(v10[7] + 32 * v25));
      v36 = v10[2];
      v37 = __OFADD__(v36, 1);
      v38 = v36 + 1;
      if (v37)
        goto LABEL_49;
      v10[2] = v38;
      goto LABEL_5;
    }
    sub_23E1E7C64(v0 + 200, &qword_254332260);
    swift_bridgeObjectRetain();
    v31 = sub_23E1EAF70(v20);
    v33 = v32;
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
    {
      v34 = swift_isUniquelyReferenced_nonNull_native();
      v48 = v10;
      v7 = v46;
      if ((v34 & 1) == 0)
      {
        sub_23E21D324();
        v10 = v48;
      }
      sub_23E1EA76C((_OWORD *)(v10[7] + 32 * v31), v39);
      sub_23E49DC20(v31, (uint64_t)v10);
      swift_bridgeObjectRelease();
      v35 = v0 + 232;
    }
    else
    {
      v35 = v0 + 232;
      *v39 = 0u;
      *(_OWORD *)(v0 + 248) = 0u;
      v7 = v46;
    }
    sub_23E1E7C64(v35, &qword_254332260);
    v9 = v47;
LABEL_6:
    sub_23E1E7C64(v2, &qword_254332260);
    result = sub_23E1E7C64(v1, &qword_256D3EFD0);
  }
  v16 = v9 + 6;
  if (v9 + 6 >= v41)
    goto LABEL_45;
  v14 = *(_QWORD *)(v40 + 8 * v16);
  if (v14)
  {
    v15 = v9 + 6;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v41)
      goto LABEL_45;
    v14 = *(_QWORD *)(v40 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_26;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_23E4265A4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E426608()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 424) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E426668()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 432) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4266B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 440) = sub_23E536F44();
  *(_QWORD *)(v0 + 448) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E42671C()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[55];
  v2 = (void *)v0[54];
  swift_release();
  v0[57] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E426780()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _QWORD *v10;

  v1 = *(void **)(v0 + 456);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 360);
    v3 = objc_msgSend(v1, sel_services);
    sub_23E1ED0A8();
    v4 = sub_23E5377F0();
    *(_QWORD *)(v0 + 464) = v4;

    swift_bridgeObjectRetain();
    if ((v2 & 0x402) == 2)
    {
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 480) = v5;
      *v5 = v0;
      v5[1] = sub_23E42697C;
      return sub_23E48A304(*(_QWORD *)(v0 + 336), v4, *(_QWORD *)(v0 + 400));
    }
    else
    {
      v9 = *(_OWORD *)(v0 + 384);
      *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 368);
      *(_OWORD *)(v0 + 312) = v9;
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 472) = v10;
      *v10 = v0;
      v10[1] = sub_23E4268DC;
      return sub_23E48B088(*(_QWORD *)(v0 + 336), v0 + 328, (_OWORD *)(v0 + 296), v4, *(_QWORD *)(v0 + 400));
    }
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 336);
    v8 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E4268DC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E426944()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 456);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E42697C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t StaticServiceGroup.toggle(options:context:)(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  *(_QWORD *)(v4 + 192) = a1;
  *(_QWORD *)(v4 + 200) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  *(_QWORD *)(v4 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  v7 = type metadata accessor for StaticService();
  *(_QWORD *)(v4 + 232) = v7;
  *(_QWORD *)(v4 + 240) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  *(_QWORD *)(v4 + 264) = swift_task_alloc();
  v8 = swift_task_alloc();
  v9 = *a2;
  *(_QWORD *)(v4 + 272) = v8;
  *(_QWORD *)(v4 + 280) = v9;
  v10 = a3[1];
  *(_OWORD *)(v4 + 288) = *a3;
  *(_OWORD *)(v4 + 304) = v10;
  return swift_task_switch();
}

_QWORD *sub_23E426AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  unint64_t v44;
  _QWORD *v45;
  __int128 v46;
  unsigned __int8 v47;
  _QWORD *v48[2];

  *(_DWORD *)(v0 + 368) = *(_DWORD *)(type metadata accessor for StaticServiceGroup() + 44);
  v1 = swift_bridgeObjectRetain();
  sub_23E4FB788(v1);
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_23E249F8C(v2);
  swift_bridgeObjectRelease();
  v48[0] = v3;
  sub_23E45B100(v48);
  swift_bridgeObjectRelease();
  if (v48[0][2])
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 240) + 80);
    sub_23E2712F4((uint64_t)v48[0] + ((v4 + 32) & ~v4), *(_QWORD *)(v0 + 224));
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 224), &qword_254332DE8);
LABEL_8:
    v13 = *(_QWORD *)(v0 + 192);
    v14 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (_QWORD *)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 232);
  sub_23E2EA034(*(_QWORD *)(v0 + 224), v9);
  v11 = *(unsigned __int8 *)(v9 + *(int *)(v10 + 84));
  LOBYTE(v48[0]) = v11;
  ServiceKind.togglingCharacteristicKind.getter(&v47);
  v12 = v47;
  *(_BYTE *)(v0 + 376) = v47;
  if (v12 == 174)
  {
    sub_23E4273C0(*(_QWORD *)(v0 + 272));
    goto LABEL_8;
  }
  v16 = *(_QWORD *)(v0 + 216);
  v17 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  LOBYTE(v48[0]) = v11;
  ServiceKind.togglingCharacteristicKind.getter(&v47);
  if (v47 == 174)
  {
    if (qword_256D3ED38 != -1)
      swift_once();
    swift_beginAccess();
    v18 = off_256D42460;
    swift_bridgeObjectRetain();
    v19 = sub_23E1E333C(v11, (uint64_t)v18);
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
LABEL_18:
      v31 = *(_QWORD *)(v0 + 216);
      v32 = *(_QWORD *)(v0 + 192);
      sub_23E4273C0(*(_QWORD *)(v0 + 272));
      sub_23E1FDCC4(v31, v32);
      goto LABEL_9;
    }
  }
  v20 = swift_bridgeObjectRetain();
  sub_23E4FB788(v20);
  v21 = swift_bridgeObjectRetain();
  v22 = (_QWORD *)sub_23E249F8C(v21);
  swift_bridgeObjectRelease();
  v48[0] = v22;
  sub_23E45B100(v48);
  swift_bridgeObjectRelease();
  result = v48[0];
  *(_QWORD **)(v0 + 320) = v48[0];
  v23 = result[2];
  *(_QWORD *)(v0 + 328) = v23;
  if (!v23)
  {
    swift_release();
    goto LABEL_18;
  }
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_DWORD *)(v24 + 80);
  *(_DWORD *)(v0 + 372) = v25;
  *(_QWORD *)(v0 + 336) = 0;
  if (result[2])
  {
    v26 = v0 + 176;
    v27 = *(_QWORD *)(v24 + 72);
    sub_23E2712F4((uint64_t)result + ((v25 + 32) & ~(unint64_t)v25), *(_QWORD *)(v0 + 264));
    v28 = swift_bridgeObjectRetain();
    sub_23E4FB788(v28);
    v29 = swift_bridgeObjectRetain();
    v30 = sub_23E249F8C(v29);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 176) = v30;
    sub_23E45B100((_QWORD **)(v0 + 176));
    *(_QWORD *)(v0 + 344) = 0;
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(*(_QWORD *)v26 + 16);
    if (v33)
    {
      v34 = *(_QWORD *)v26
          + ((*(unsigned __int8 *)(v0 + 372) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 372));
      swift_retain();
      v35 = 0;
      do
      {
        v38 = *(_QWORD *)(v0 + 248);
        v37 = *(_QWORD *)(v0 + 256);
        sub_23E2712F4(v34, v37);
        sub_23E2712F4(v37, v38);
        v35 = v35 || StaticService.isActivated.getter();
        v36 = *(_QWORD *)(v0 + 256);
        sub_23E4273C0(*(_QWORD *)(v0 + 248));
        sub_23E4273C0(v36);
        v34 += v27;
        --v33;
      }
      while (v33);
      swift_release_n();
    }
    else
    {
      swift_release();
      v35 = 0;
    }
    v39 = *(_BYTE *)(v0 + 376);
    v41 = *(_QWORD *)(v0 + 304);
    v40 = *(_QWORD *)(v0 + 312);
    v46 = *(_OWORD *)(v0 + 288);
    v42 = *(_QWORD *)(v0 + 280);
    *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 88) = !v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E539650;
    *(_BYTE *)(inited + 32) = v39;
    sub_23E1EA57C(v0 + 88, inited + 40);
    v44 = sub_23E20D564(inited);
    *(_QWORD *)(v0 + 184) = v42;
    *(_OWORD *)(v0 + 120) = v46;
    *(_QWORD *)(v0 + 352) = v44;
    *(_QWORD *)(v0 + 136) = v41;
    *(_QWORD *)(v0 + 144) = v40;
    v45 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 360) = v45;
    *v45 = v0;
    v45[1] = sub_23E427038;
    return (_QWORD *)StaticService.set(for:options:context:)(*(_QWORD *)(v0 + 208), v44, (uint64_t *)(v0 + 184), (_OWORD *)(v0 + 120));
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23E427038()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 88;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return swift_task_switch();
}

uint64_t sub_23E4270A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 336) + 1;
  sub_23E4273C0(*(_QWORD *)(v0 + 264));
  sub_23E1E7C64(v3, &qword_254334340);
  result = sub_23E1FDCC4(v2, v3);
  if (v4 == v1)
  {
    swift_release();
    v6 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 192);
    sub_23E4273C0(*(_QWORD *)(v0 + 272));
    sub_23E1FDCC4(v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 344);
    v9 = *(_QWORD *)(v0 + 336) + 1;
    *(_QWORD *)(v0 + 336) = v9;
    v10 = *(_QWORD *)(v0 + 320);
    if (v9 >= *(_QWORD *)(v10 + 16))
    {
      __break(1u);
    }
    else
    {
      v11 = v0 + 176;
      v12 = *(_QWORD *)(*(_QWORD *)(v0 + 240) + 72);
      sub_23E2712F4(v10 + ((*(unsigned __int8 *)(v0 + 372) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 372)) + v12 * v9, *(_QWORD *)(v0 + 264));
      v13 = swift_bridgeObjectRetain();
      sub_23E4FB788(v13);
      v14 = swift_bridgeObjectRetain();
      v15 = sub_23E249F8C(v14);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 176) = v15;
      sub_23E45B100((_QWORD **)(v0 + 176));
      *(_QWORD *)(v0 + 344) = v8;
      if (v8)
      {
        return swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        v16 = *(_QWORD *)(*(_QWORD *)v11 + 16);
        if (v16)
        {
          v17 = *(_QWORD *)v11
              + ((*(unsigned __int8 *)(v0 + 372) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 372));
          swift_retain();
          v18 = 0;
          do
          {
            v21 = *(_QWORD *)(v0 + 248);
            v20 = *(_QWORD *)(v0 + 256);
            sub_23E2712F4(v17, v20);
            sub_23E2712F4(v20, v21);
            v18 = v18 || StaticService.isActivated.getter();
            v19 = *(_QWORD *)(v0 + 256);
            sub_23E4273C0(*(_QWORD *)(v0 + 248));
            sub_23E4273C0(v19);
            v17 += v12;
            --v16;
          }
          while (v16);
          swift_release_n();
        }
        else
        {
          swift_release();
          v18 = 0;
        }
        v22 = *(_BYTE *)(v0 + 376);
        v24 = *(_QWORD *)(v0 + 304);
        v23 = *(_QWORD *)(v0 + 312);
        v29 = *(_OWORD *)(v0 + 288);
        v25 = *(_QWORD *)(v0 + 280);
        *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE1328];
        *(_BYTE *)(v0 + 88) = !v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D3EFE0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_23E539650;
        *(_BYTE *)(inited + 32) = v22;
        sub_23E1EA57C(v0 + 88, inited + 40);
        v27 = sub_23E20D564(inited);
        *(_QWORD *)(v0 + 184) = v25;
        *(_OWORD *)(v0 + 120) = v29;
        *(_QWORD *)(v0 + 352) = v27;
        *(_QWORD *)(v0 + 136) = v24;
        *(_QWORD *)(v0 + 144) = v23;
        v28 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 360) = v28;
        *v28 = v0;
        v28[1] = sub_23E427038;
        return StaticService.set(for:options:context:)(*(_QWORD *)(v0 + 208), v27, (uint64_t *)(v0 + 184), (_OWORD *)(v0 + 120));
      }
    }
  }
  return result;
}

uint64_t sub_23E4273C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *static HMService.convert(_:characteristicKind:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  _OWORD *result;
  double v6;
  uint64_t v7;
  double v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];

  v4 = *a2;
  sub_23E1EA5B8(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_23E1EA76C(&v9, v11);
    if (v4 > 148)
    {
      if (v4 == 149 || v4 == 156)
        goto LABEL_16;
      if (v4 != 158)
        return sub_23E1EA76C(v11, (_OWORD *)a3);
      sub_23E1EA57C((uint64_t)v11, (uint64_t)&v9);
      result = (_OWORD *)swift_dynamicCast();
      if ((_DWORD)result)
      {
        v6 = v8;
        if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 >= 9.22337204e18)
            {
              __break(1u);
              goto LABEL_16;
            }
LABEL_24:
            v7 = (uint64_t)v6;
            goto LABEL_25;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      if (v4 == 3)
      {
        sub_23E1EA57C((uint64_t)v11, (uint64_t)&v9);
        if (swift_dynamicCast())
        {
          v7 = LOBYTE(v8);
          goto LABEL_25;
        }
        goto LABEL_26;
      }
      if (v4 != 12)
      {
        if (v4 != 114)
          return sub_23E1EA76C(v11, (_OWORD *)a3);
LABEL_16:
        sub_23E1EA57C((uint64_t)v11, (uint64_t)&v9);
        if (swift_dynamicCast())
        {
          v7 = (LOBYTE(v8) & 1) == 0;
LABEL_25:
          *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE1768];
          *(_QWORD *)a3 = v7;
          return (_OWORD *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        }
        goto LABEL_26;
      }
      sub_23E1EA57C((uint64_t)v11, (uint64_t)&v9);
      result = (_OWORD *)swift_dynamicCast();
      if ((_DWORD)result)
      {
        v6 = v8;
        if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 < 9.22337204e18)
              goto LABEL_24;
LABEL_34:
            __break(1u);
            return result;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
LABEL_26:
    result = (_OWORD *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    goto LABEL_27;
  }
  result = (_OWORD *)sub_23E1E9988((uint64_t)&v9);
LABEL_27:
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

HMCharacteristic_optional __swiftcall HMService.characteristic(for:)(HomeDataModel::CharacteristicKind a1)
{
  objc_class *v1;
  Swift::Bool v2;
  HMCharacteristic_optional result;

  v1 = (objc_class *)HMService.subscript.getter();
  result.value.super.isa = v1;
  result.is_nil = v2;
  return result;
}

uint64_t HMService.supportedCharacteristicKinds.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_serviceType);
  v3 = sub_23E53755C();
  v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  ServiceKind.init(rawValue:)(v6);
  v7 = ServiceKind.requiredCharacteristicKinds.getter();
  v8 = objc_msgSend(v1, sel_serviceType);
  v9 = sub_23E53755C();
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  ServiceKind.init(rawValue:)(v12);
  v13 = ServiceKind.optionalCharacteristicKinds.getter();
  return sub_23E1EAB5C(v13, v7);
}

HomeDataModel::ServiceKind_optional HMService.serviceKind.getter@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  HomeDataModel::ServiceKind_optional result;
  char v9;
  char v10;

  v3 = objc_msgSend(v1, sel_serviceType);
  v4 = sub_23E53755C();
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  result.value = ServiceKind.init(rawValue:)(v7).value;
  v9 = v10;
  if (v10 == 53)
    v9 = 0;
  *a1 = v9;
  return result;
}

uint64_t sub_23E4277B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v17 + 63) >> 6;
  v26 = a2;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_23E1FFF40((uint64_t)v10, v8);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25)
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25)
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25)
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v26;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

char HMService.associatedServiceKind.getter@<W0>(char *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  char v11;

  v3 = objc_msgSend(v1, sel_associatedServiceType);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23E53755C();
    v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    LOBYTE(v3) = ServiceKind.init(rawValue:)(v8);
    v9 = v11;
    if (v11 == 53)
      v9 = 0;
  }
  else
  {
    v9 = 53;
  }
  *a1 = v9;
  return (char)v3;
}

char HMService.serviceSubKind.getter@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  char v9;
  char v11;

  v3 = objc_msgSend(v1, sel_serviceSubtype);
  if (v3)
  {
    v4 = v3;
    v5 = sub_23E53755C();
    v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    LOBYTE(v3) = ServiceSubKind.init(rawValue:)(v8);
    v9 = v11;
    if (v11 == 5)
      v9 = 0;
  }
  else
  {
    v9 = 0;
  }
  *a1 = v9;
  return (char)v3;
}

uint64_t HMService.fetchedValue(for:)(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 48) = *a2;
  return swift_task_switch();
}

uint64_t sub_23E427B7C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  _OWORD *v4;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_23E427C0C;
    return HMCharacteristic.fetchedValue()(*(_QWORD *)(v0 + 16));
  }
  else
  {
    v4 = *(_OWORD **)(v0 + 16);
    *v4 = 0u;
    v4[1] = 0u;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E427C0C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 32);
  v3 = *v0;
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v3 + 8))();
}

void HMService.cachedValue(for:)(_BYTE *a1@<X0>, _OWORD *a2@<X8>)
{
  void *v3;
  void *v4;
  _OWORD v5[2];

  LOBYTE(v5[0]) = *a1;
  v3 = HMService.subscript.getter();
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v3, sel_value, *(_QWORD *)&v5[0]))
    {
      sub_23E537D24();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_23E266144((uint64_t)v5, (uint64_t)a2);

  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
}

uint64_t HMService.BOOL(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = v1;
  *(_BYTE *)(v2 + 73) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E427D10()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_23E427DB8;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_23E1E9988(v0 + 16);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
  }
}

uint64_t sub_23E427DB8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E427E10()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
  {
    if (swift_dynamicCast())
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
  }
  else
  {
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
}

Swift::Bool_optional __swiftcall HMService.cachedBool(for:)(HomeDataModel::CharacteristicKind a1)
{
  void *v1;
  void *v2;
  _OWORD v4[2];
  __int128 v5;
  __int128 v6;

  LOBYTE(v5) = *(_BYTE *)a1;
  v1 = HMService.subscript.getter();
  if (!v1)
  {
    v5 = 0u;
    v6 = 0u;
LABEL_10:
    sub_23E1E9988((uint64_t)&v5);
    return (Swift::Bool_optional)2;
  }
  v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_23E266144((uint64_t)v4, (uint64_t)&v5);

  if (!*((_QWORD *)&v6 + 1))
    goto LABEL_10;
  if (swift_dynamicCast())
    return (Swift::Bool_optional)v4[0];
  else
    return (Swift::Bool_optional)2;
}

uint64_t HMService.int(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = v1;
  *(_BYTE *)(v2 + 80) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E427F7C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 64) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_23E428028;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_23E1E9988(v0 + 16);
    return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
  }
}

uint64_t sub_23E428028()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E428080()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    if (v1)
      v2 = *(_QWORD *)(v0 + 48);
    else
      v2 = 0;
    v3 = v1 ^ 1u;
  }
  else
  {
    sub_23E1E9988(v0 + 16);
    v2 = 0;
    v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

Swift::Int_optional __swiftcall HMService.cachedInt(for:)(HomeDataModel::CharacteristicKind a1)
{
  void *v1;
  void *v2;
  int v3;
  Swift::Int v4;
  char v5;
  _OWORD v6[2];
  __int128 v7;
  __int128 v8;
  Swift::Int_optional result;

  LOBYTE(v7) = *(_BYTE *)a1;
  v1 = HMService.subscript.getter();
  if (!v1)
  {
    v7 = 0u;
    v8 = 0u;
LABEL_11:
    sub_23E1E9988((uint64_t)&v7);
    v4 = 0;
    v5 = 1;
    goto LABEL_12;
  }
  v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_23E266144((uint64_t)v6, (uint64_t)&v7);

  if (!*((_QWORD *)&v8 + 1))
    goto LABEL_11;
  v3 = swift_dynamicCast();
  if (v3)
    v4 = *(_QWORD *)&v6[0];
  else
    v4 = 0;
  v5 = v3 ^ 1;
LABEL_12:
  result.value = v4;
  result.is_nil = v5;
  return result;
}

uint64_t HMService.double(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = v1;
  *(_BYTE *)(v2 + 80) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E4281FC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 64) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_23E4282A8;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_23E1E9988(v0 + 16);
    return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
  }
}

uint64_t sub_23E4282A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E428300()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    if (v1)
      v2 = *(_QWORD *)(v0 + 48);
    else
      v2 = 0;
    v3 = v1 ^ 1u;
  }
  else
  {
    sub_23E1E9988(v0 + 16);
    v2 = 0;
    v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

Swift::Double_optional __swiftcall HMService.cachedDouble(for:)(HomeDataModel::CharacteristicKind a1)
{
  void *v1;
  void *v2;
  double v3;
  char v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;
  Swift::Double_optional result;

  LOBYTE(v6) = *(_BYTE *)a1;
  v1 = HMService.subscript.getter();
  if (!v1)
  {
    v6 = 0u;
    v7 = 0u;
LABEL_11:
    sub_23E1E9988((uint64_t)&v6);
    v4 = 0;
    goto LABEL_12;
  }
  v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_23E266144((uint64_t)v5, (uint64_t)&v6);

  if (!*((_QWORD *)&v7 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    v4 = v5[0];
  else
    v4 = 0;
LABEL_12:
  result.value = v3;
  result.is_nil = v4;
  return result;
}

uint64_t HMService.data(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 88) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E42847C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_23E428528;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_23E1E9988(v0 + 16);
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
}

uint64_t sub_23E428528()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E428580()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    v2 = v1 == 0;
    if (v1)
      v3 = *(_QWORD *)(v0 + 48);
    else
      v3 = 0;
    if (v2)
      v4 = 0xF000000000000000;
    else
      v4 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    sub_23E1E9988(v0 + 16);
    v3 = 0;
    v4 = 0xF000000000000000;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v3, v4);
}

uint64_t HMService.tlv8(for:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 88) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E428620()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = HMService.subscript.getter();
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_23E4286CC;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_23E1E9988(v0 + 16);
    return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xF000000000000000);
  }
}

uint64_t sub_23E4286CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t _sSo9HMServiceC13HomeDataModelE06cachedC03for10Foundation0C0VSgAC18CharacteristicKindO_tF_0(_BYTE *a1)
{
  void *v1;
  void *v2;
  _OWORD v4[2];
  __int128 v5;
  __int128 v6;

  LOBYTE(v5) = *a1;
  v1 = HMService.subscript.getter();
  if (!v1)
  {
    v5 = 0u;
    v6 = 0u;
LABEL_11:
    sub_23E1E9988((uint64_t)&v5);
    return 0;
  }
  v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_23E266144((uint64_t)v4, (uint64_t)&v5);

  if (!*((_QWORD *)&v6 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    return *(_QWORD *)&v4[0];
  else
    return 0;
}

uint64_t dispatch thunk of HMHomeRefresh.notifyHomeObserversOfChanged(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of HMHomeRefresh.notifyHomeObserversOfNewRoom(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id sub_23E42881C(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_hdm_matterNodeID);
  if (v1)
  {
    sub_23E5384D4();

    return 0;
  }
  return v1;
}

void sub_23E428A78()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  void *v8;

  v1 = objc_msgSend(v0, sel_accessories);
  sub_23E2068E8();
  v2 = sub_23E5377F0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x24264F148](i, v2);
      else
        v5 = *(id *)(v2 + 8 * i + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_hdm_matterNodeID);
      if (v7)
      {
        v8 = v7;
        sub_23E5384D4();

      }
    }
    goto LABEL_13;
  }
  __break(1u);
}

void __swiftcall CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKind:)(HomeDataModel::CharacteristicFetchSpecification *__return_ptr retstr, Swift::String loggingName, Swift::OpaquePointer serviceKinds, Swift::OpaquePointer associatedServiceKinds, HomeDataModel::CharacteristicKind characteristicKind)
{
  _BYTE *v5;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  void *v11;

  v5 = (_BYTE *)characteristicKind;
  object = loggingName._object;
  countAndFlagsBits = loggingName._countAndFlagsBits;
  swift_bridgeObjectRelease();
  LOBYTE(v5) = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46E60);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E539650;
  *(_BYTE *)(v10 + 32) = (_BYTE)v5;
  retstr->loggingName._countAndFlagsBits = countAndFlagsBits;
  retstr->loggingName._object = object;
  v11 = (void *)MEMORY[0x24BEE4AF8];
  retstr->serviceKinds = serviceKinds;
  retstr->associatedServiceKinds._rawValue = v11;
  retstr->characteristicKinds._rawValue = (void *)v10;
}

void __swiftcall CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKinds:)(HomeDataModel::CharacteristicFetchSpecification *__return_ptr retstr, Swift::String loggingName, Swift::OpaquePointer serviceKinds, Swift::OpaquePointer associatedServiceKinds, Swift::OpaquePointer characteristicKinds)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v10;

  object = loggingName._object;
  countAndFlagsBits = loggingName._countAndFlagsBits;
  swift_bridgeObjectRelease();
  retstr->loggingName._countAndFlagsBits = countAndFlagsBits;
  retstr->loggingName._object = object;
  v10 = (void *)MEMORY[0x24BEE4AF8];
  retstr->serviceKinds = serviceKinds;
  retstr->associatedServiceKinds._rawValue = v10;
  retstr->characteristicKinds = characteristicKinds;
}

uint64_t CharacteristicFetchSpecification.loggingName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CharacteristicFetchSpecification.serviceKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.associatedServiceKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.characteristicKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F18(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t CharacteristicFetchSpecification.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F18((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E428EC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F18(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E428F6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F24((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E260F18((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t _s13HomeDataModel32CharacteristicFetchSpecificationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = a2[2];
  v5 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if ((v8 || (sub_23E538354() & 1) != 0) && (sub_23E26217C(v2, v6) & 1) != 0 && (sub_23E26217C(v4, v5) & 1) != 0)
    return sub_23E262188(v3, v7);
  else
    return 0;
}

unint64_t sub_23E4290D4()
{
  unint64_t result;

  result = qword_256D46E68;
  if (!qword_256D46E68)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicFetchSpecification, &type metadata for CharacteristicFetchSpecification);
    atomic_store(result, (unint64_t *)&qword_256D46E68);
  }
  return result;
}

uint64_t destroy for CharacteristicFetchSpecification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CharacteristicFetchSpecification(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CharacteristicFetchSpecification(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CharacteristicFetchSpecification(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicFetchSpecification(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicFetchSpecification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicFetchSpecification()
{
  return &type metadata for CharacteristicFetchSpecification;
}

uint64_t StaticCharacteristic.stringValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = 0;
  v2 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  if (*((_BYTE *)v2 + 16) == 8)
  {
    v1 = *v2;
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t StaticCharacteristic.dataValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24);
  if (*(_BYTE *)(v1 + 16) != 10)
    return 0;
  v2 = *(_QWORD *)v1;
  sub_23E2B8BF8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

BOOL StaticCharacteristic.LoadingState.isReading.getter()
{
  unsigned __int8 *v0;

  return *v0 < 0x40u;
}

BOOL StaticCharacteristic.LoadingState.isWriting.getter()
{
  _BYTE *v0;

  return (*v0 & 0xC0) == 64;
}

uint64_t StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  void (*v84)(uint64_t, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t result;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  unsigned __int8 *v121;

  v97 = a7;
  v113 = a6;
  v121 = a5;
  v93 = a4;
  v116 = a1;
  v98 = a9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_23E536F20();
  v105 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119);
  v117 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for StaticCharacteristic();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v107 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v96 = (char *)&v91 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v95 = (char *)&v91 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v118 = (uint64_t)&v91 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v102 = (uint64_t)&v91 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v99 = (uint64_t)&v91 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v91 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v91 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v103 = (uint64_t)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v91 - v36;
  v38 = sub_23E536F80();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v115 = (char *)&v91 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v91 - v42;
  v44 = *a2;
  v45 = *(_QWORD *)(a3 + 8);
  v106 = *(_QWORD *)a3;
  v46 = *(unsigned __int8 *)(a3 + 16);
  v47 = *v121;
  v120 = v44;
  LODWORD(v121) = v47;
  v114 = *(_QWORD *)v113;
  v100 = *(unsigned __int8 *)(v113 + 8);
  v48 = *a8;
  v112 = a8[1];
  v113 = v48;
  v49 = a8[2];
  v110 = a8[3];
  v111 = v49;
  v109 = a8[4];
  sub_23E1E7C20(v116, (uint64_t)v37, &qword_254333F50);
  v50 = v108;
  sub_23E42D07C(v108, (uint64_t)v32);
  v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v51 = v101(v37, 1, v38);
  v116 = v38;
  v104 = v43;
  v92 = v39;
  if (v51 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v43, v32, v38);
    sub_23E42D0C0((uint64_t)v32);
    sub_23E1E7C64((uint64_t)v37, &qword_254333F50);
  }
  else
  {
    sub_23E42D0C0((uint64_t)v32);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v43, v37, v38);
  }
  v52 = v107;
  v53 = v50;
  v54 = (uint64_t)v95;
  v55 = (uint64_t)v94;
  v56 = v93;
  sub_23E42D07C(v53, (uint64_t)v30);
  if (v120 == 174)
    v120 = v30[v15[5]];
  sub_23E42D0C0((uint64_t)v30);
  v57 = v99;
  sub_23E42D07C(v53, v99);
  v58 = v106;
  v59 = v106;
  v108 = v45;
  LODWORD(v107) = v46;
  if (v46 == 255)
  {
    v60 = v57 + v15[6];
    v59 = *(_QWORD *)v60;
    v61 = *(unsigned __int8 *)(v60 + 16);
    v62 = *(_QWORD *)v60;
    v108 = *(_QWORD *)(v60 + 8);
    LODWORD(v107) = v61;
    sub_23E1E8058(v62, v108, v61);
    v58 = v106;
  }
  v106 = v59;
  sub_23E42D0FC(v58, v45, v46);
  sub_23E42D0C0(v57);
  sub_23E1E7C20(v56, v55, &qword_2543330E0);
  v63 = v102;
  sub_23E42D07C(v53, v102);
  v64 = v105;
  v65 = v119;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v55, 1, v119) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v117, v63 + v15[7], v65);
    sub_23E42D0C0(v63);
    sub_23E1E7C64(v55, &qword_2543330E0);
  }
  else
  {
    sub_23E42D0C0(v63);
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v117, v55, v65);
  }
  v66 = v98;
  v67 = v116;
  v68 = v97;
  v69 = (uint64_t)v96;
  v70 = (uint64_t)v52;
  v71 = v92;
  sub_23E42D07C(v53, v118);
  if (v121 >= 0xFE)
    LODWORD(v121) = *(unsigned __int8 *)(v118 + v15[8]);
  sub_23E42D0C0(v118);
  sub_23E42D07C(v53, v54);
  if (v100)
    v114 = *(_QWORD *)(v54 + v15[9]);
  sub_23E42D0C0(v54);
  v72 = v68;
  v73 = v103;
  sub_23E1E7C20(v72, v103, &qword_254333F50);
  sub_23E42D07C(v53, v69);
  if (v101((char *)v73, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v115, v69 + v15[10], v67);
    sub_23E42D0C0(v69);
    sub_23E1E7C64(v73, &qword_254333F50);
  }
  else
  {
    sub_23E42D0C0(v69);
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v115, v73, v67);
  }
  sub_23E42D07C(v53, v70);
  v75 = v110;
  v74 = v111;
  v77 = v112;
  v76 = v113;
  v78 = v113;
  v79 = v112;
  v80 = v111;
  v81 = v110;
  v82 = v109;
  if (v110 >> 8 == 0xFFFFFFFF)
  {
    v83 = (uint64_t *)(v70 + v15[11]);
    v78 = *v83;
    v79 = v83[1];
    v80 = v83[2];
    v81 = v83[3];
    v82 = v83[4];
    sub_23E42D110(*v83, v79, v80, v81);
    v75 = v110;
    v74 = v111;
    v77 = v112;
    v76 = v113;
  }
  sub_23E42D110(v76, v77, v74, v75);
  sub_23E42D0C0(v70);
  v84 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 32);
  v85 = v116;
  v84(v66, v104, v116);
  *(_BYTE *)(v66 + v15[5]) = v120;
  v86 = v66 + v15[6];
  v87 = v108;
  *(_QWORD *)v86 = v106;
  *(_QWORD *)(v86 + 8) = v87;
  *(_BYTE *)(v86 + 16) = (_BYTE)v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v66 + v15[7], v117, v119);
  *(_BYTE *)(v66 + v15[8]) = (_BYTE)v121;
  v88 = v115;
  *(_QWORD *)(v66 + v15[9]) = v114;
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v84)(v66 + v15[10], v88, v85);
  v90 = (uint64_t *)(v66 + v15[11]);
  *v90 = v78;
  v90[1] = v79;
  v90[2] = v80;
  v90[3] = v81;
  v90[4] = v82;
  return result;
}

uint64_t StaticCharacteristic.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticCharacteristic.characteristicKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCharacteristic();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t StaticCharacteristic.typedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 24);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  return sub_23E1E8058(v4, v5, v6);
}

uint64_t StaticCharacteristic.lastValueUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 28);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticCharacteristic.properties.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCharacteristic();
  *a1 = *(_QWORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticCharacteristic.serviceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticCharacteristic.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_23E42D110(v4, v5, v6, v7);
}

void StaticCharacteristic.hash(into:)()
{
  uint64_t v1;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for StaticCharacteristic();
  CharacteristicKind.rawValue.getter(v1);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  CharacteristicKind.Value.hash(into:)();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  __asm { BR              X11 }
}

uint64_t sub_23E429E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23E538468();
  sub_23E538468();
  sub_23E538468();
  sub_23E5374D8();
  v3 = (uint64_t *)(v1 + *(int *)(v2 + 44));
  v4 = v3[3];
  if (v4 >> 8 == 0xFFFFFFFF)
    return sub_23E538474();
  v7 = *v3;
  v6 = v3[1];
  v8 = v3[2];
  sub_23E538474();
  if (v4 >> 62)
  {
    sub_23E538468();
    if (v4 >> 62 == 1)
    {
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(v0);
    }
    else
    {
      sub_23E538468();
      return sub_23E23D564(v7, v6, v8, v4);
    }
  }
  else
  {
    sub_23E538468();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

uint64_t sub_23E429FAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E429FD4 + 4 * byte_23E550C84[a1]))(25705, 0xE200000000000000);
}

unint64_t sub_23E429FD4()
{
  return 0xD000000000000012;
}

uint64_t sub_23E429FF0()
{
  return 0x6C61566465707974;
}

uint64_t sub_23E42A00C()
{
  return 0x756C61567473616CLL;
}

uint64_t sub_23E42A030()
{
  return 0x53676E6964616F6CLL;
}

uint64_t sub_23E42A050()
{
  return 0x69747265706F7270;
}

uint64_t sub_23E42A070()
{
  return 0x4965636976726573;
}

uint64_t sub_23E42A08C()
{
  return 0x617461646174656DLL;
}

uint64_t sub_23E42A0A4()
{
  unsigned __int8 *v0;

  return sub_23E429FAC(*v0);
}

uint64_t sub_23E42A0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E42EA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E42A0D0()
{
  sub_23E42D124();
  return sub_23E538570();
}

uint64_t sub_23E42A0F8()
{
  sub_23E42D124();
  return sub_23E53857C();
}

uint64_t StaticCharacteristic.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  char v11;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v16[2];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46E88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E42D124();
  sub_23E5384EC();
  LOBYTE(v17) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticCharacteristic();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[5]);
    v20 = 1;
    sub_23E2B8AC0();
    sub_23E5382AC();
    v10 = (__int128 *)(v3 + v9[6]);
    v11 = *((_BYTE *)v10 + 16);
    v17 = *v10;
    LOBYTE(v18) = v11;
    v20 = 2;
    sub_23E42D168();
    sub_23E5382AC();
    v16[1] = v3 + v9[7];
    LOBYTE(v17) = 3;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E5382AC();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[8]);
    v20 = 4;
    sub_23E42D1AC();
    sub_23E5382AC();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v9[9]);
    v20 = 5;
    sub_23E42D1F0();
    sub_23E5382AC();
    LOBYTE(v17) = 6;
    sub_23E5382AC();
    v12 = (__int128 *)(v3 + v9[11]);
    v13 = *((_QWORD *)v12 + 4);
    v14 = v12[1];
    v17 = *v12;
    v18 = v14;
    v19 = v13;
    v20 = 7;
    sub_23E42D234();
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCharacteristic.hashValue.getter()
{
  sub_23E53845C();
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticCharacteristic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  char v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  int *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char v48;

  v35 = a2;
  v3 = sub_23E536F20();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23E536F80();
  v38 = *(_QWORD *)(v40 - 8);
  v5 = MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (void (*)(uint64_t, char *, uint64_t))((char *)v34 - v8);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46EB8);
  v9 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E42D124();
  v42 = v11;
  v15 = v44;
  sub_23E5384E0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v16 = v39;
  v44 = v7;
  v17 = v14;
  v18 = (uint64_t)a1;
  LOBYTE(v45) = 0;
  v19 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v20 = v40;
  sub_23E538180();
  v34[1] = v19;
  v21 = (uint64_t)v17;
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v22(v21, (char *)v41, v20);
  v48 = 1;
  sub_23E2B8B88();
  sub_23E538180();
  v41 = v22;
  *(_BYTE *)(v21 + *(int *)(v12 + 20)) = v45;
  v48 = 2;
  sub_23E42D278();
  sub_23E538180();
  v23 = v46;
  v24 = v21 + *(int *)(v12 + 24);
  *(_OWORD *)v24 = v45;
  *(_BYTE *)(v24 + 16) = v23;
  LOBYTE(v45) = 3;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v34[0] = v12;
  v25 = v16;
  v26 = v37;
  sub_23E538180();
  v27 = (int *)v34[0];
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v21 + *(int *)(v34[0] + 28), v25, v26);
  v48 = 4;
  sub_23E42D2BC();
  sub_23E538180();
  *(_BYTE *)(v21 + v27[8]) = v45;
  v48 = 5;
  sub_23E42D300();
  sub_23E538180();
  v28 = v27;
  v29 = v44;
  *(_QWORD *)(v21 + v28[9]) = v45;
  LOBYTE(v45) = 6;
  sub_23E538180();
  v41(v21 + v28[10], v29, v20);
  v48 = 7;
  sub_23E42D344();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v42, v43);
  v30 = v47;
  v31 = v21 + v28[11];
  v32 = v46;
  *(_OWORD *)v31 = v45;
  *(_OWORD *)(v31 + 16) = v32;
  *(_QWORD *)(v31 + 32) = v30;
  sub_23E42D07C(v21, v35);
  __swift_destroy_boxed_opaque_existential_0(v18);
  return sub_23E42D0C0(v21);
}

uint64_t sub_23E42AA54()
{
  sub_23E53845C();
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E42AA94()
{
  sub_23E53845C();
  StaticCharacteristic.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E42AACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristic.init(from:)(a1, a2);
}

uint64_t sub_23E42AAE0(_QWORD *a1)
{
  return StaticCharacteristic.encode(to:)(a1);
}

void StaticCharacteristic.LoadingState.init(from:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  char v4;

  sub_23E2E4310(&v4);

  *a2 = v4;
}

BOOL static StaticCharacteristic.LoadingState.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticCharacteristic.LoadingState.Source.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E42AB70()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D617246656D6F68;
  else
    return 0x65646F4D61746164;
}

uint64_t sub_23E42ABBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E42ED98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E42ABE0()
{
  sub_23E42D388();
  return sub_23E538570();
}

uint64_t sub_23E42AC08()
{
  sub_23E42D388();
  return sub_23E53857C();
}

uint64_t sub_23E42AC30()
{
  sub_23E42D410();
  return sub_23E538570();
}

uint64_t sub_23E42AC58()
{
  sub_23E42D410();
  return sub_23E53857C();
}

uint64_t sub_23E42AC80()
{
  sub_23E42D3CC();
  return sub_23E538570();
}

uint64_t sub_23E42ACA8()
{
  sub_23E42D3CC();
  return sub_23E53857C();
}

uint64_t StaticCharacteristic.LoadingState.Source.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46EE0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46EE8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46EF0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E42D388();
  sub_23E5384EC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23E42D3CC();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23E42D410();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StaticCharacteristic.LoadingState.Source.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticCharacteristic.LoadingState.Source.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F10);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F18);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F20);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E42D388();
  v11 = v33;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticCharacteristic.LoadingState.Source;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23E42D3CC();
    sub_23E5380C0();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23E42D410();
    v22 = v6;
    sub_23E5380C0();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23E42B240@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticCharacteristic.LoadingState.Source.init(from:)(a1, a2);
}

uint64_t sub_23E42B254(_QWORD *a1)
{
  return StaticCharacteristic.LoadingState.Source.encode(to:)(a1);
}

void StaticCharacteristic.LoadingState.hash(into:)()
{
  __asm { BR              X11 }
}

uint64_t sub_23E42B29C()
{
  sub_23E538468();
  return sub_23E538468();
}

uint64_t sub_23E42B2E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E42B318 + 4 * byte_23E550C90[*v0]))(0x64696C61766E69, 0xE700000000000000);
}

uint64_t sub_23E42B318()
{
  return 0x72506E4964616572;
}

uint64_t sub_23E42B33C()
{
  return 0x506E496574697277;
}

uint64_t sub_23E42B360()
{
  return 0x6F72724564616572;
}

uint64_t sub_23E42B37C()
{
  return 0x7964616572;
}

unint64_t sub_23E42B390()
{
  return 0xD000000000000015;
}

uint64_t sub_23E42B3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E42EEB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E42B3D0()
{
  sub_23E42D454();
  return sub_23E538570();
}

uint64_t sub_23E42B3F8()
{
  sub_23E42D454();
  return sub_23E53857C();
}

uint64_t sub_23E42B420()
{
  sub_23E42D630();
  return sub_23E538570();
}

uint64_t sub_23E42B448()
{
  sub_23E42D630();
  return sub_23E53857C();
}

uint64_t sub_23E42B470()
{
  sub_23E42D520();
  return sub_23E538570();
}

uint64_t sub_23E42B498()
{
  sub_23E42D520();
  return sub_23E53857C();
}

uint64_t sub_23E42B4C0()
{
  sub_23E42D5EC();
  return sub_23E538570();
}

uint64_t sub_23E42B4E8()
{
  sub_23E42D5EC();
  return sub_23E53857C();
}

uint64_t sub_23E42B510()
{
  sub_23E42D4DC();
  return sub_23E538570();
}

uint64_t sub_23E42B538()
{
  sub_23E42D4DC();
  return sub_23E53857C();
}

uint64_t sub_23E42B560()
{
  sub_23E42D498();
  return sub_23E538570();
}

uint64_t sub_23E42B588()
{
  sub_23E42D498();
  return sub_23E53857C();
}

uint64_t sub_23E42B5B0()
{
  sub_23E42D564();
  return sub_23E538570();
}

uint64_t sub_23E42B5D8()
{
  sub_23E42D564();
  return sub_23E53857C();
}

void StaticCharacteristic.LoadingState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD v15[17];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F28);
  v15[8] = *(_QWORD *)(v3 - 8);
  v15[9] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v15[7] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F30);
  v15[5] = *(_QWORD *)(v5 - 8);
  v15[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v15[4] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F38);
  v15[2] = *(_QWORD *)(v7 - 8);
  v15[3] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15[1] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F40);
  v15[13] = *(_QWORD *)(v9 - 8);
  v15[14] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v15[12] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F48);
  v15[10] = *(_QWORD *)(v11 - 8);
  v15[11] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F50);
  MEMORY[0x24BDAC7A8](v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46F58);
  v15[15] = *(_QWORD *)(v13 - 8);
  v15[16] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E42D454();
  sub_23E5384EC();
  __asm { BR              X10 }
}

uint64_t sub_23E42B838()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 70) = 1;
  sub_23E42D5EC();
  v4 = *(_QWORD *)(v3 - 96);
  sub_23E5381E0();
  *(_BYTE *)(v3 - 71) = v1 & 1;
  sub_23E42D5A8();
  v5 = *(_QWORD *)(v3 - 136);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v0, v4);
}

void StaticCharacteristic.LoadingState.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E42BAD8()
{
  sub_23E538468();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticCharacteristic.LoadingState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[8];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  char *v37;

  v31 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FA0);
  v24[7] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v35 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FA8);
  v24[3] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v34 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FB0);
  v24[6] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FB8);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FC0);
  v24[4] = *(_QWORD *)(v7 - 8);
  v24[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FC8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D46FD0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23E42D454();
  v18 = v37;
  sub_23E5384E0();
  if (!v18)
  {
    v37 = v12;
    v24[1] = v10;
    v24[2] = v9;
    v19 = sub_23E5381C8();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_23E537ED4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v22 = &type metadata for StaticCharacteristic.LoadingState;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
}

void sub_23E42C224()
{
  __asm { BR              X11 }
}

uint64_t sub_23E42C258()
{
  sub_23E538468();
  return sub_23E538468();
}

void sub_23E42C2A4()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_23E53845C();
  __asm { BR              X10 }
}

uint64_t sub_23E42C2DC()
{
  sub_23E538468();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E42C340@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristic.LoadingState.init(from:)(a1, a2);
}

void sub_23E42C354(_QWORD *a1)
{
  StaticCharacteristic.LoadingState.encode(to:)(a1);
}

uint64_t StaticCharacteristic.characteristic.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E42C384()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E42C3F0()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E42C454()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E42C4B4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E42C4FC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E42C564()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_characteristicFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticCharacteristic.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  char v6;

  sub_23E537E68();
  sub_23E537628();
  sub_23E536F80();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v1 = type metadata accessor for StaticCharacteristic();
  sub_23E537FDC();
  sub_23E537628();
  v2 = v0 + *(int *)(v1 + 24);
  v3 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  sub_23E1E8058(*(_QWORD *)v2, v5, v6);
  CharacteristicKind.Value.description.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E1EAB20(v3, v5, v6);
  sub_23E537628();
  return 0;
}

uint64_t sub_23E42C75C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  uint64_t result;
  char *v13;
  void (*v14)(uint64_t, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v0 = sub_23E536F20();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - v6;
  v8 = (int *)type metadata accessor for StaticCharacteristic();
  __swift_allocate_value_buffer((uint64_t)v8, qword_256D46E70);
  v9 = __swift_project_value_buffer((uint64_t)v8, (uint64_t)qword_256D46E70);
  sub_23E536F2C();
  v10 = sub_23E536F80();
  v19 = *(_QWORD *)(v10 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  result = v11(v7, 1, v10);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v18 = v2;
    sub_23E536ED8();
    v13 = v22;
    sub_23E536F2C();
    result = v11(v13, 1, v10);
    if ((_DWORD)result != 1)
    {
      v14 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
      v14(v9, v7, v10);
      *(_BYTE *)(v9 + v8[5]) = 105;
      v15 = v9 + v8[6];
      *(_OWORD *)v15 = xmmword_23E53C6F0;
      *(_BYTE *)(v15 + 16) = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v9 + v8[7], v18, v21);
      *(_BYTE *)(v9 + v8[8]) = -64;
      *(_QWORD *)(v9 + v8[9]) = 7;
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(v9 + v8[10], v22, v10);
      v16 = v9 + v8[11];
      *(_QWORD *)v16 = 0;
      *(_QWORD *)(v16 + 8) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      *(_OWORD *)(v16 + 24) = xmmword_23E53F080;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t static StaticCharacteristic.sample.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EE88 != -1)
    swift_once();
  v2 = type metadata accessor for StaticCharacteristic();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D46E70);
  return sub_23E42D07C(v3, a1);
}

void sub_23E42CA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23E42CA74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x23E42CC58);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_23E42CC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_23E42CA14((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_23E42CD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_23E536B6C();
  v11 = result;
  if (result)
  {
    result = sub_23E536B90();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_23E536B84();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_23E42CA14(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_23E42CE04(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_23E42CE50()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_23E42CE84 + dword_23E42D05C[v0 >> 62]))();
}

uint64_t sub_23E42CE94@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_23E42D07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E42D0C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E42D0FC(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_23E1E8058(result, a2, a3);
  return result;
}

uint64_t sub_23E42D110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)a4 >> 8 != 0xFFFFFFFF)
    return sub_23E1E80B8(a1, a2, a3, a4);
  return a1;
}

unint64_t sub_23E42D124()
{
  unint64_t result;

  result = qword_256D46E90;
  if (!qword_256D46E90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5519F0, &type metadata for StaticCharacteristic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46E90);
  }
  return result;
}

unint64_t sub_23E42D168()
{
  unint64_t result;

  result = qword_256D46E98;
  if (!qword_256D46E98)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Value, &type metadata for CharacteristicKind.Value);
    atomic_store(result, (unint64_t *)&qword_256D46E98);
  }
  return result;
}

unint64_t sub_23E42D1AC()
{
  unint64_t result;

  result = qword_256D46EA0;
  if (!qword_256D46EA0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState, &type metadata for StaticCharacteristic.LoadingState);
    atomic_store(result, (unint64_t *)&qword_256D46EA0);
  }
  return result;
}

unint64_t sub_23E42D1F0()
{
  unint64_t result;

  result = qword_256D46EA8;
  if (!qword_256D46EA8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D46EA8);
  }
  return result;
}

unint64_t sub_23E42D234()
{
  unint64_t result;

  result = qword_256D46EB0;
  if (!qword_256D46EB0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata, &type metadata for StaticCharacteristicMetadata);
    atomic_store(result, (unint64_t *)&qword_256D46EB0);
  }
  return result;
}

unint64_t sub_23E42D278()
{
  unint64_t result;

  result = qword_256D46EC0;
  if (!qword_256D46EC0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Value, &type metadata for CharacteristicKind.Value);
    atomic_store(result, (unint64_t *)&qword_256D46EC0);
  }
  return result;
}

unint64_t sub_23E42D2BC()
{
  unint64_t result;

  result = qword_256D46EC8;
  if (!qword_256D46EC8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState, &type metadata for StaticCharacteristic.LoadingState);
    atomic_store(result, (unint64_t *)&qword_256D46EC8);
  }
  return result;
}

unint64_t sub_23E42D300()
{
  unint64_t result;

  result = qword_256D46ED0;
  if (!qword_256D46ED0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D46ED0);
  }
  return result;
}

unint64_t sub_23E42D344()
{
  unint64_t result;

  result = qword_256D46ED8;
  if (!qword_256D46ED8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata, &type metadata for StaticCharacteristicMetadata);
    atomic_store(result, (unint64_t *)&qword_256D46ED8);
  }
  return result;
}

unint64_t sub_23E42D388()
{
  unint64_t result;

  result = qword_256D46EF8;
  if (!qword_256D46EF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5519A0, &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46EF8);
  }
  return result;
}

unint64_t sub_23E42D3CC()
{
  unint64_t result;

  result = qword_256D46F00;
  if (!qword_256D46F00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551950, &type metadata for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F00);
  }
  return result;
}

unint64_t sub_23E42D410()
{
  unint64_t result;

  result = qword_256D46F08;
  if (!qword_256D46F08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551900, &type metadata for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F08);
  }
  return result;
}

unint64_t sub_23E42D454()
{
  unint64_t result;

  result = qword_256D46F60;
  if (!qword_256D46F60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5518B0, &type metadata for StaticCharacteristic.LoadingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F60);
  }
  return result;
}

unint64_t sub_23E42D498()
{
  unint64_t result;

  result = qword_256D46F68;
  if (!qword_256D46F68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551860, &type metadata for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F68);
  }
  return result;
}

unint64_t sub_23E42D4DC()
{
  unint64_t result;

  result = qword_256D46F70;
  if (!qword_256D46F70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551810, &type metadata for StaticCharacteristic.LoadingState.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F70);
  }
  return result;
}

unint64_t sub_23E42D520()
{
  unint64_t result;

  result = qword_256D46F78;
  if (!qword_256D46F78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5517C0, &type metadata for StaticCharacteristic.LoadingState.ReadErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F78);
  }
  return result;
}

unint64_t sub_23E42D564()
{
  unint64_t result;

  result = qword_256D46F80;
  if (!qword_256D46F80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551770, &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F80);
  }
  return result;
}

unint64_t sub_23E42D5A8()
{
  unint64_t result;

  result = qword_256D46F88;
  if (!qword_256D46F88)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState.Source, &type metadata for StaticCharacteristic.LoadingState.Source);
    atomic_store(result, (unint64_t *)&qword_256D46F88);
  }
  return result;
}

unint64_t sub_23E42D5EC()
{
  unint64_t result;

  result = qword_256D46F90;
  if (!qword_256D46F90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551720, &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F90);
  }
  return result;
}

unint64_t sub_23E42D630()
{
  unint64_t result;

  result = qword_256D46F98;
  if (!qword_256D46F98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5516D0, &type metadata for StaticCharacteristic.LoadingState.InvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D46F98);
  }
  return result;
}

unint64_t sub_23E42D674()
{
  unint64_t result;

  result = qword_256D46FD8;
  if (!qword_256D46FD8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState.Source, &type metadata for StaticCharacteristic.LoadingState.Source);
    atomic_store(result, (unint64_t *)&qword_256D46FD8);
  }
  return result;
}

uint64_t sub_23E42D6E8()
{
  return sub_23E1EE1C4(&qword_256D46FE8, (uint64_t (*)(uint64_t))type metadata accessor for StaticCharacteristic, (uint64_t)&protocol conformance descriptor for StaticCharacteristic);
}

unint64_t sub_23E42D718()
{
  unint64_t result;

  result = qword_256D46FF0;
  if (!qword_256D46FF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState.Source, &type metadata for StaticCharacteristic.LoadingState.Source);
    atomic_store(result, (unint64_t *)&qword_256D46FF0);
  }
  return result;
}

unint64_t sub_23E42D760()
{
  unint64_t result;

  result = qword_256D46FF8;
  if (!qword_256D46FF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristic.LoadingState, &type metadata for StaticCharacteristic.LoadingState);
    atomic_store(result, (unint64_t *)&qword_256D46FF8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticCharacteristic(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v10 = (char *)a1 + v9;
    v11 = *(_QWORD *)((char *)a2 + v9);
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    v13 = *((_BYTE *)a2 + v9 + 16);
    sub_23E1E8058(v11, v12, v13);
    *(_QWORD *)v10 = v11;
    *((_QWORD *)v10 + 1) = v12;
    v10[16] = v13;
    v14 = a3[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23E536F20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
    v8((_QWORD *)((char *)a1 + a3[10]), (_QWORD *)((char *)a2 + a3[10]), v7);
    v19 = a3[11];
    v20 = (char *)a1 + v19;
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[3];
    if (v22 >> 8 == 0xFFFFFFFF)
    {
      v23 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v23;
      *((_QWORD *)v20 + 4) = v21[4];
    }
    else
    {
      v25 = *v21;
      v26 = v21[1];
      v27 = v21[2];
      v28 = v21[4];
      sub_23E1E80B8(*v21, v26, v27, v21[3]);
      *(_QWORD *)v20 = v25;
      *((_QWORD *)v20 + 1) = v26;
      *((_QWORD *)v20 + 2) = v27;
      *((_QWORD *)v20 + 3) = v22;
      *((_QWORD *)v20 + 4) = v28;
    }
  }
  return a1;
}

uint64_t assignWithCopy for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_BYTE *)(v10 + 16);
  sub_23E1E8058(*(_QWORD *)v10, v12, v13);
  v14 = *(_QWORD *)v9;
  v15 = *(_QWORD *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  v16 = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v9 + 16) = v13;
  sub_23E1EAB20(v14, v15, v16);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v21 = a3[11];
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *(_QWORD *)(a1 + v21 + 24);
  v25 = *(_QWORD *)(a2 + v21 + 24);
  v26 = v25 & 0xFFFFFFFFFFFFFF00;
  if (v24 >> 8 == 0xFFFFFFFF)
  {
    if (v26 == 0xFFFFFFFF00)
    {
      v27 = *(_OWORD *)v23;
      v28 = *((_OWORD *)v23 + 1);
      v22[4] = v23[4];
      *(_OWORD *)v22 = v27;
      *((_OWORD *)v22 + 1) = v28;
    }
    else
    {
      v31 = *v23;
      v32 = v23[1];
      v33 = v23[2];
      v34 = v23[4];
      sub_23E1E80B8(v31, v32, v33, v25);
      *v22 = v31;
      v22[1] = v32;
      v22[2] = v33;
      v22[3] = v25;
      v22[4] = v34;
    }
  }
  else if (v26 == 0xFFFFFFFF00)
  {
    sub_23E3ED978(v22);
    v29 = v23[4];
    v30 = *((_OWORD *)v23 + 1);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v30;
    v22[4] = v29;
  }
  else
  {
    v35 = *v23;
    v36 = v23[1];
    v37 = v23[2];
    v38 = v23[4];
    sub_23E1E80B8(v35, v36, v37, v25);
    v39 = *v22;
    v40 = v22[1];
    v41 = v22[2];
    v42 = v22[3];
    *v22 = v35;
    v22[1] = v36;
    v22[2] = v37;
    v22[3] = v25;
    v22[4] = v38;
    sub_23E1EAB4C(v39, v40, v41, v42);
  }
  return a1;
}

uint64_t initializeWithTake for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v16 = a3[11];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  return a1;
}

uint64_t sub_23E42DC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;
  int v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23E536F20();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_DWORD *)(a1 + *(int *)(a3 + 44) + 25);
  v15 = -2 - v14;
  if ((int)(-2 - v14) < 0)
    v15 = -1;
  if (v14 > 0x80000000)
    return (v15 + 1);
  else
    return 0;
}

uint64_t sub_23E42DCBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_23E536F20();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v15 = (_QWORD *)(a1 + *(int *)(a4 + 44));
  *v15 = 0;
  v15[1] = 0;
  v15[2] = 0;
  v15[3] = (unint64_t)~(_DWORD)a2 << 8;
  v15[4] = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristic.LoadingState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7D)
    goto LABEL_17;
  if (a2 + 131 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 131) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 131;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 131;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 131;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristic.LoadingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 131 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 131) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7C)
    return ((uint64_t (*)(void))((char *)&loc_23E42DE5C + 4 * byte_23E550CB5[v4]))();
  *a1 = a2 - 125;
  return ((uint64_t (*)(void))((char *)sub_23E42DE90 + 4 * byte_23E550CB0[v4]))();
}

uint64_t sub_23E42DE90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42DE98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E42DEA0);
  return result;
}

uint64_t sub_23E42DEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E42DEC0);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_23E42DEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42DECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42DED8(unsigned __int8 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (char)v1;
  v3 = v1 >> 6;
  v4 = (v1 | 0xFFFFFFFE) + 2 * (v1 >> 6);
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_BYTE *sub_23E42DEF8(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristic.LoadingState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E42DF58 + 4 * byte_23E550CBF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E42DF8C + 4 * byte_23E550CBA[v4]))();
}

uint64_t sub_23E42DF8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42DF94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E42DF9CLL);
  return result;
}

uint64_t sub_23E42DFA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E42DFB0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E42DFB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42DFBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.CodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.InvalidCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.InvalidCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys;
}

uint64_t _s13HomeDataModel20StaticCharacteristicV12LoadingStateO24ReadInProgressCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E42E03C + 4 * byte_23E550CC4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E42E05C + 4 * byte_23E550CC9[v4]))();
}

_BYTE *sub_23E42E03C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E42E05C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E42E064(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E42E06C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E42E074(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E42E07C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ReadErrorCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ReadErrorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ReadyCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ReadyCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys;
}

uint64_t _s13HomeDataModel20StaticCharacteristicV12LoadingStateO6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E42E114 + 4 * byte_23E550CD3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E42E148 + 4 * byte_23E550CCE[v4]))();
}

uint64_t sub_23E42E148(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42E150(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E42E158);
  return result;
}

uint64_t sub_23E42E164(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E42E16CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E42E170(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42E178(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.CodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E42E200 + 4 * byte_23E550CDD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E42E234 + 4 * byte_23E550CD8[v4]))();
}

uint64_t sub_23E42E234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42E23C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E42E244);
  return result;
}

uint64_t sub_23E42E250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E42E258);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E42E25C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E42E264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.CodingKeys()
{
  return &type metadata for StaticCharacteristic.CodingKeys;
}

unint64_t sub_23E42E284()
{
  unint64_t result;

  result = qword_256D47000;
  if (!qword_256D47000)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5511E8, &type metadata for StaticCharacteristic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47000);
  }
  return result;
}

unint64_t sub_23E42E2CC()
{
  unint64_t result;

  result = qword_256D47008;
  if (!qword_256D47008)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551340, &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47008);
  }
  return result;
}

unint64_t sub_23E42E314()
{
  unint64_t result;

  result = qword_256D47010;
  if (!qword_256D47010)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5514E8, &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47010);
  }
  return result;
}

unint64_t sub_23E42E35C()
{
  unint64_t result;

  result = qword_256D47018;
  if (!qword_256D47018)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5515A0, &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47018);
  }
  return result;
}

unint64_t sub_23E42E3A4()
{
  unint64_t result;

  result = qword_256D47020;
  if (!qword_256D47020)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5516A8, &type metadata for StaticCharacteristic.LoadingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47020);
  }
  return result;
}

unint64_t sub_23E42E3EC()
{
  unint64_t result;

  result = qword_256D47028;
  if (!qword_256D47028)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5515C8, &type metadata for StaticCharacteristic.LoadingState.InvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47028);
  }
  return result;
}

unint64_t sub_23E42E434()
{
  unint64_t result;

  result = qword_256D47030;
  if (!qword_256D47030)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5515F0, &type metadata for StaticCharacteristic.LoadingState.InvalidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47030);
  }
  return result;
}

unint64_t sub_23E42E47C()
{
  unint64_t result;

  result = qword_256D47038;
  if (!qword_256D47038)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551510, &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47038);
  }
  return result;
}

unint64_t sub_23E42E4C4()
{
  unint64_t result;

  result = qword_256D47040;
  if (!qword_256D47040)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551538, &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47040);
  }
  return result;
}

unint64_t sub_23E42E50C()
{
  unint64_t result;

  result = qword_256D47048;
  if (!qword_256D47048)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551458, &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47048);
  }
  return result;
}

unint64_t sub_23E42E554()
{
  unint64_t result;

  result = qword_256D47050;
  if (!qword_256D47050)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551480, &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47050);
  }
  return result;
}

unint64_t sub_23E42E59C()
{
  unint64_t result;

  result = qword_256D47058;
  if (!qword_256D47058)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551408, &type metadata for StaticCharacteristic.LoadingState.ReadErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47058);
  }
  return result;
}

unint64_t sub_23E42E5E4()
{
  unint64_t result;

  result = qword_256D47060;
  if (!qword_256D47060)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551430, &type metadata for StaticCharacteristic.LoadingState.ReadErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47060);
  }
  return result;
}

unint64_t sub_23E42E62C()
{
  unint64_t result;

  result = qword_256D47068;
  if (!qword_256D47068)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5513B8, &type metadata for StaticCharacteristic.LoadingState.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47068);
  }
  return result;
}

unint64_t sub_23E42E674()
{
  unint64_t result;

  result = qword_256D47070;
  if (!qword_256D47070)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5513E0, &type metadata for StaticCharacteristic.LoadingState.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47070);
  }
  return result;
}

unint64_t sub_23E42E6BC()
{
  unint64_t result;

  result = qword_256D47078;
  if (!qword_256D47078)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551368, &type metadata for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47078);
  }
  return result;
}

unint64_t sub_23E42E704()
{
  unint64_t result;

  result = qword_256D47080;
  if (!qword_256D47080)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551390, &type metadata for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47080);
  }
  return result;
}

unint64_t sub_23E42E74C()
{
  unint64_t result;

  result = qword_256D47088;
  if (!qword_256D47088)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551618, &type metadata for StaticCharacteristic.LoadingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47088);
  }
  return result;
}

unint64_t sub_23E42E794()
{
  unint64_t result;

  result = qword_256D47090;
  if (!qword_256D47090)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551640, &type metadata for StaticCharacteristic.LoadingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47090);
  }
  return result;
}

unint64_t sub_23E42E7DC()
{
  unint64_t result;

  result = qword_256D47098;
  if (!qword_256D47098)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551260, &type metadata for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47098);
  }
  return result;
}

unint64_t sub_23E42E824()
{
  unint64_t result;

  result = qword_256D470A0;
  if (!qword_256D470A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551288, &type metadata for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470A0);
  }
  return result;
}

unint64_t sub_23E42E86C()
{
  unint64_t result;

  result = qword_256D470A8;
  if (!qword_256D470A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551210, &type metadata for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470A8);
  }
  return result;
}

unint64_t sub_23E42E8B4()
{
  unint64_t result;

  result = qword_256D470B0;
  if (!qword_256D470B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551238, &type metadata for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470B0);
  }
  return result;
}

unint64_t sub_23E42E8FC()
{
  unint64_t result;

  result = qword_256D470B8;
  if (!qword_256D470B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5512B0, &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470B8);
  }
  return result;
}

unint64_t sub_23E42E944()
{
  unint64_t result;

  result = qword_256D470C0;
  if (!qword_256D470C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5512D8, &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470C0);
  }
  return result;
}

unint64_t sub_23E42E98C()
{
  unint64_t result;

  result = qword_256D470C8;
  if (!qword_256D470C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551158, &type metadata for StaticCharacteristic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470C8);
  }
  return result;
}

unint64_t sub_23E42E9D4()
{
  unint64_t result;

  result = qword_256D470D0;
  if (!qword_256D470D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E551180, &type metadata for StaticCharacteristic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D470D0);
  }
  return result;
}

uint64_t sub_23E42EA18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56A2E0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61566465707974 && a2 == 0xEA00000000006575 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756C61567473616CLL && a2 == 0xEF65746164705565 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53676E6964616F6CLL && a2 == 0xEC00000065746174 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23E42ED98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F4D61746164 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617246656D6F68 && a2 == 0xED00006B726F7765)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E42EEB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64696C61766E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E4964616572 && a2 == 0xEE0073736572676FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x506E496574697277 && a2 == 0xEF73736572676F72 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F72724564616572 && a2 == 0xE900000000000072 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7964616572 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56A300)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

double Duration.nanoseconds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23E5384F8();
  return (double)v0 * 1000000000.0 + (double)v1 * 0.000000001;
}

uint64_t sub_23E42F1BC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v1 = (int *)type metadata accessor for StateSnapshot(0);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + v1[15]) + 16);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + v1[9]) + 16);
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + v1[12]) + 16);
  v4 = __OFADD__(v5, v6);
  v7 = v5 + v6;
  if (v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + v1[16]) + 16);
  v4 = __OFADD__(v7, v8);
  v9 = v7 + v8;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v0 + v1[13]) + 16);
  result = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result < 0)
  {
LABEL_11:
    result = sub_23E538000();
    __break(1u);
  }
  return result;
}

double Duration.milliseconds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23E5384F8();
  return ((double)v0 * 1000000000.0 + (double)v1 * 0.000000001) / 1000000.0;
}

uint64_t Duration.millisecondsString.getter()
{
  sub_23E5384F8();
  sub_23E5379D0();
  sub_23E537628();
  return 0;
}

uint64_t sub_23E42F370@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;

  v2 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23E53854C();
  v6 = v5;
  v8 = v7;
  if (v4)
  {
    v41 = a2;
    swift_bridgeObjectRetain();
    v43 = (uint64_t *)v2;
    v9 = (_QWORD *)(v2 + 40);
    v10 = v4;
    do
    {
      v11 = MEMORY[0x24264F7C0](v6, v8, *(v9 - 1), *v9);
      v6 = v11;
      v8 = v12;
      v9 += 2;
      --v10;
    }
    while (v10);
    v42 = v11;
    v13 = v43;
    swift_bridgeObjectRelease();
    v14 = v43[4];
    v15 = v43[5];
    v40 = v4;
    v16 = v4 - 1;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v24 = v43 + 7;
      v25 = v16;
      v18 = v14;
      v17 = v15;
      do
      {
        v26 = *(v24 - 1);
        v27 = *v24;
        if ((sub_23E538510() & 1) != 0)
        {
          v18 = v26;
          v17 = v27;
        }
        v24 += 2;
        --v25;
      }
      while (v25);
      v13 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v28 = v43 + 7;
      do
      {
        v29 = *(v28 - 1);
        v30 = *v28;
        if ((sub_23E538510() & 1) != 0)
        {
          v14 = v29;
          v15 = v30;
        }
        v28 += 2;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = v43[5];
      v18 = v43[4];
    }
    v31 = sub_23E53854C();
    v33 = v32;
    swift_bridgeObjectRetain();
    v34 = v13 + 5;
    v4 = v40;
    v35 = v40;
    do
    {
      v31 = MEMORY[0x24264F7C0](v31, v33, *(v34 - 1), *v34);
      v33 = v36;
      v34 += 2;
      --v35;
    }
    while (v35);
    v2 = (uint64_t)v43;
    swift_bridgeObjectRelease();
    sub_23E4309A4();
    v21 = sub_23E538504();
    v23 = v37;
    a2 = v41;
  }
  else
  {
    v42 = v5;
    v18 = sub_23E53854C();
    v17 = v19;
    v14 = sub_23E53854C();
    v15 = v20;
    v21 = sub_23E53854C();
    v23 = v22;
  }
  result = sub_23E4307AC(v2);
  *a2 = v4;
  a2[1] = v42;
  a2[2] = v8;
  a2[3] = v18;
  a2[4] = v17;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v21;
  a2[8] = v23;
  a2[9] = result;
  a2[10] = v39;
  return result;
}

uint64_t sub_23E42F59C()
{
  sub_23E537E68();
  sub_23E537628();
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E538330();
  sub_23E537628();
  sub_23E538330();
  sub_23E537628();
  sub_23E538330();
  sub_23E537628();
  sub_23E538330();
  sub_23E537628();
  sub_23E538330();
  sub_23E537628();
  return 0;
}

void sub_23E42F728(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  double v12;
  double v13;
  char v14;
  char v15;
  double v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = 0.0;
  v6 = 0.0;
  if (v4)
  {
    if (v4 == 1)
    {
      v7 = 0;
LABEL_7:
      v10 = v4 - v7;
      v11 = (double *)(a1 + 8 * v7 + 32);
      do
      {
        v12 = *v11++;
        v6 = v6 + v12;
        --v10;
      }
      while (v10);
      goto LABEL_9;
    }
    v7 = v4 & 0x7FFFFFFFFFFFFFFELL;
    v8 = (double *)(a1 + 40);
    v9 = v4 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v6 = v6 + *(v8 - 1) + *v8;
      v8 += 2;
      v9 -= 2;
    }
    while (v9);
    if (v4 != v7)
      goto LABEL_7;
  }
LABEL_9:
  v13 = COERCE_DOUBLE(sub_23E3AB828(a1));
  v15 = v14;
  v16 = COERCE_DOUBLE(sub_23E3AA2D8(a1));
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    goto LABEL_18;
  if (v18 == 1)
  {
    v19 = 0;
    v20 = 0.0;
  }
  else
  {
    v19 = v18 & 0x7FFFFFFFFFFFFFFELL;
    v21 = (double *)(a1 + 40);
    v20 = 0.0;
    v22 = v18 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v20 = v20 + *(v21 - 1) + *v21;
      v21 += 2;
      v22 -= 2;
    }
    while (v22);
    if (v18 == v19)
      goto LABEL_17;
  }
  v23 = v18 - v19;
  v24 = (double *)(a1 + 8 * v19 + 32);
  do
  {
    v25 = *v24++;
    v20 = v20 + v25;
    --v23;
  }
  while (v23);
LABEL_17:
  v5 = v20 / (double)v18;
LABEL_18:
  if ((v17 & 1) != 0)
    v26 = 0.0;
  else
    v26 = v16;
  if ((v15 & 1) != 0)
    v27 = 0.0;
  else
    v27 = v13;
  v28 = sub_23E4309E8(a1);
  *(_QWORD *)a2 = v4;
  *(double *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = v27;
  *(double *)(a2 + 24) = v26;
  *(double *)(a2 + 32) = v5;
  *(double *)(a2 + 40) = v28;
}

double Duration.seconds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23E5384F8();
  return (double)v1 * 1.0e-18 + (double)v0;
}

uint64_t sub_23E42F8B8()
{
  sub_23E538468();
  sub_23E5374D8();
  sub_23E5374D8();
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t sub_23E42F978(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    _s14ElementMetricsVMa();
  return 0;
}

BOOL sub_23E42FA78(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23E42FA88()
{
  return sub_23E538468();
}

uint64_t sub_23E42FAAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7173491 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676172657661 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x766564647473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23E42FCEC()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E42FD30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E42FD60 + 4 * byte_23E551A58[a1]))(0x746E756F63, 0xE500000000000000);
}

uint64_t sub_23E42FD60()
{
  return 7173491;
}

uint64_t sub_23E42FD70()
{
  return 7235949;
}

uint64_t sub_23E42FD80()
{
  return 7889261;
}

uint64_t sub_23E42FD90()
{
  return 0x65676172657661;
}

uint64_t sub_23E42FDA8()
{
  return 0x766564647473;
}

void sub_23E42FDBC()
{
  _s14ElementMetricsV10CodingKeysOMa();
}

uint64_t sub_23E42FE04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x24264FDE4](&unk_23E551C60, a1);
  v3 = sub_23E5382F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_23E5384EC();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_23E5382A0();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_23E5382AC();
    *(_BYTE *)(v2 - 112) = 2;
    sub_23E5382AC();
    *(_BYTE *)(v2 - 112) = 3;
    sub_23E5382AC();
    *(_BYTE *)(v2 - 112) = 4;
    sub_23E5382AC();
    *(_BYTE *)(v2 - 112) = 5;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23E430008()
{
  sub_23E53845C();
  sub_23E42F8B8();
  return sub_23E5384A4();
}

void sub_23E43004C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[18];

  v16[1] = a3;
  v16[11] = *(_QWORD *)(a2 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v16[2] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v16[3] = (char *)v16 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v16[4] = (char *)v16 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v16[6] = (char *)v16 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v16[5] = (char *)v16 - v11;
  v16[14] = v12;
  v16[15] = v13;
  v16[16] = v14;
  v16[17] = v15;
  _s14ElementMetricsV10CodingKeysOMa();
}

void sub_23E430150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x24264FDE4](&unk_23E551C60, a1);
  v6 = sub_23E5381D4();
  *(_QWORD *)(v5 - 160) = v6;
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v1;
  _s14ElementMetricsVMa();
}

uint64_t sub_23E4301C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  *(_QWORD *)(v4 - 144) = a1;
  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 128) = (char *)&v24 - v6;
  v7 = v3[3];
  *(_QWORD *)(v4 - 152) = v3;
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v8 = *(_QWORD *)(v4 - 72);
  sub_23E5384E0();
  if (v8)
    return __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v4 - 152));
  v10 = *(_QWORD *)(v4 - 184);
  v9 = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v4 - 72) = v5;
  v11 = v2;
  *(_BYTE *)(v4 - 112) = 0;
  v12 = sub_23E538174();
  v13 = *(uint64_t **)(v4 - 128);
  *v13 = v12;
  *(_BYTE *)(v4 - 112) = 1;
  v14 = v1;
  v15 = *(_QWORD *)(v4 - 120);
  *(_QWORD *)(v4 - 224) = v14;
  sub_23E538180();
  v16 = *(int **)(v4 - 144);
  v17 = v10;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 32);
  v18((char *)v13 + v16[13], v17, v15);
  *(_BYTE *)(v4 - 112) = 2;
  sub_23E538180();
  v18((char *)v13 + v16[14], v9, v15);
  *(_BYTE *)(v4 - 112) = 3;
  v19 = *(_QWORD *)(v4 - 192);
  sub_23E538180();
  v18((char *)v13 + v16[15], v19, v15);
  *(_BYTE *)(v4 - 112) = 4;
  v20 = *(_QWORD *)(v4 - 200);
  sub_23E538180();
  v18((char *)v13 + v16[16], v20, v15);
  *(_BYTE *)(v4 - 112) = 5;
  v21 = *(_QWORD *)(v4 - 208);
  sub_23E538180();
  (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v4 - 224), *(_QWORD *)(v4 - 160));
  v18((char *)v13 + v16[17], v21, v15);
  v22 = *(_QWORD *)(v4 - 72);
  (*(void (**)(_QWORD, uint64_t *, int *))(v22 + 16))(*(_QWORD *)(v4 - 216), v13, v16);
  __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v4 - 152));
  return (*(uint64_t (**)(uint64_t *, int *))(v22 + 8))(v13, v16);
}

BOOL sub_23E4305C4(char *a1, char *a2)
{
  return sub_23E42FA78(*a1, *a2);
}

uint64_t sub_23E4305DC()
{
  return sub_23E42FCEC();
}

uint64_t sub_23E4305EC()
{
  return sub_23E42FA88();
}

uint64_t sub_23E4305FC()
{
  sub_23E53845C();
  sub_23E42FA88();
  return sub_23E5384A4();
}

uint64_t sub_23E430644()
{
  unsigned __int8 *v0;

  return sub_23E42FD30(*v0);
}

uint64_t sub_23E430654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E42FAAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E430684@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E4315B0();
  *a1 = result;
  return result;
}

uint64_t sub_23E4306B4(uint64_t a1)
{
  MEMORY[0x24264FDE4](&unk_23E551C60, a1);
  return sub_23E538570();
}

uint64_t sub_23E4306E8(uint64_t a1)
{
  MEMORY[0x24264FDE4](&unk_23E551C60, a1);
  return sub_23E53857C();
}

uint64_t sub_23E430724()
{
  sub_23E53845C();
  sub_23E42F8B8();
  return sub_23E5384A4();
}

uint64_t sub_23E430764(_QWORD *a1, _QWORD *a2)
{
  return sub_23E42F978(a1, a2);
}

void sub_23E430778(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_23E43004C(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_23E430798()
{
  sub_23E42FDBC();
}

uint64_t sub_23E4307AC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  double v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_23E53854C();
  v5 = v4;
  if (v2 < 2)
    return v3;
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)(a1 + 40);
  v7 = v2;
  do
  {
    v3 = MEMORY[0x24264F7C0](v3, v5, *(v6 - 1), *v6);
    v5 = v8;
    v6 += 2;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  sub_23E4309A4();
  sub_23E538504();
  v9 = sub_23E5384F8();
  v11 = (double)v9 * 1000000000.0 + (double)v10 * 0.000000001;
  swift_bridgeObjectRetain();
  v12 = a1 + 40;
  v13 = 0.0;
  v14 = v2;
  do
  {
    v15 = sub_23E5384F8();
    v17 = (double)v15 * 1000000000.0 + (double)v16 * 0.000000001 - v11;
    v18 = sub_23E5384F8();
    v13 = v13 + v17 * ((double)v18 * 1000000000.0 + (double)v19 * 0.000000001 - v11);
    v12 += 16;
    --v14;
  }
  while (v14);
  result = swift_bridgeObjectRelease();
  v21 = round(sqrt(v13 / (double)(uint64_t)(v2 - 1)));
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v21 < 9.22337204e18)
    return 1000000000 * (uint64_t)v21;
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_23E4309A4()
{
  unint64_t result;

  result = qword_254332528;
  if (!qword_254332528)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254332528);
  }
  return result;
}

double sub_23E4309E8(uint64_t a1)
{
  unint64_t v1;
  double *v2;
  double v3;
  uint64_t v4;
  unint64_t v5;
  double *v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  float64x2_t v12;
  float64x2_t *v13;
  uint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  unint64_t v19;
  double *v20;
  double v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 < 2)
    return 0.0;
  v2 = (double *)(a1 + 40);
  v3 = 0.0;
  v4 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v3 = v3 + *(v2 - 1) + *v2;
    v2 += 2;
    v4 -= 2;
  }
  while (v4);
  v5 = v1 - (v1 & 0x7FFFFFFFFFFFFFFELL);
  if (v5)
  {
    v6 = (double *)(a1 + 16 * (v1 >> 1) + 32);
    do
    {
      v7 = *v6++;
      v3 = v3 + v7;
      --v5;
    }
    while (v5);
  }
  v8 = v3 / (double)(uint64_t)v1;
  if (v1 >= 4)
  {
    v9 = v1 & 0x7FFFFFFFFFFFFFFCLL;
    v12 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v8, 0);
    v13 = (float64x2_t *)(a1 + 48);
    v10 = 0.0;
    v14 = v1 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      v15 = vsubq_f64(v13[-1], v12);
      v16 = vsubq_f64(*v13, v12);
      v17 = vmulq_f64(v15, v15);
      v18 = vmulq_f64(v16, v16);
      v10 = v10 + v17.f64[0] + v17.f64[1] + v18.f64[0] + v18.f64[1];
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v1 == v9)
      return sqrt(v10 / (double)(uint64_t)(v1 - 1));
  }
  else
  {
    v9 = 0;
    v10 = 0.0;
  }
  v19 = v1 - v9;
  v20 = (double *)(a1 + 8 * v9 + 32);
  do
  {
    v21 = *v20++;
    v10 = v10 + (v21 - v8) * (v21 - v8);
    --v19;
  }
  while (v19);
  return sqrt(v10 / (double)(uint64_t)(v1 - 1));
}

uint64_t sub_23E430AF0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E430AF8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E430B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + v6;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v6 + 8) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & (unint64_t)~v6)
     + v7 > 0x18)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ~v6;
    *a1 = *a2;
    v13 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v14 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v15(v13, v14, v4);
    v16 = (v8 + v13) & v12;
    v17 = (v8 + v14) & v12;
    v15(v16, v17, v4);
    v18 = (v8 + v16) & v12;
    v19 = (v8 + v17) & v12;
    v15(v18, v19, v4);
    v20 = (v8 + v18) & v12;
    v21 = (v8 + v19) & v12;
    v15(v20, v21, v4);
    v15((v8 + v20) & v12, (v8 + v21) & v12, v4);
  }
  return v3;
}

uint64_t sub_23E430CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (a1 + v4 + 8) & ~v4;
  v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v11(v5, v2);
  v6 = *(_QWORD *)(v3 + 64) + v4;
  v7 = (v6 + v5) & ~v4;
  v11(v7, v2);
  v8 = (v6 + v7) & ~v4;
  v11(v8, v2);
  v9 = (v6 + v8) & ~v4;
  v11(v9, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)((v6 + v9) & ~v4, v2);
}

_QWORD *sub_23E430D98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + v6;
  v11 = (v10 + v7) & ~v6;
  v12 = (v10 + v8) & ~v6;
  v9(v11, v12, v4);
  v13 = (v10 + v11) & ~v6;
  v14 = (v10 + v12) & ~v6;
  v9(v13, v14, v4);
  v15 = (v10 + v13) & ~v6;
  v16 = (v10 + v14) & ~v6;
  v9(v15, v16, v4);
  v9((v10 + v15) & ~v6, (v10 + v16) & ~v6, v4);
  return a1;
}

_QWORD *sub_23E430E8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + v6;
  v11 = (v10 + v7) & ~v6;
  v12 = (v10 + v8) & ~v6;
  v9(v11, v12, v4);
  v13 = (v10 + v11) & ~v6;
  v14 = (v10 + v12) & ~v6;
  v9(v13, v14, v4);
  v15 = (v10 + v13) & ~v6;
  v16 = (v10 + v14) & ~v6;
  v9(v15, v16, v4);
  v9((v10 + v15) & ~v6, (v10 + v16) & ~v6, v4);
  return a1;
}

_QWORD *sub_23E430F80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + v6;
  v11 = (v10 + v7) & ~v6;
  v12 = (v10 + v8) & ~v6;
  v9(v11, v12, v4);
  v13 = (v10 + v11) & ~v6;
  v14 = (v10 + v12) & ~v6;
  v9(v13, v14, v4);
  v15 = (v10 + v13) & ~v6;
  v16 = (v10 + v14) & ~v6;
  v9(v15, v16, v4);
  v9((v10 + v15) & ~v6, (v10 + v16) & ~v6, v4);
  return a1;
}

_QWORD *sub_23E431074(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64) + v6;
  v11 = (v10 + v7) & ~v6;
  v12 = (v10 + v8) & ~v6;
  v9(v11, v12, v4);
  v13 = (v10 + v11) & ~v6;
  v14 = (v10 + v12) & ~v6;
  v9(v13, v14, v4);
  v15 = (v10 + v13) & ~v6;
  v16 = (v10 + v14) & ~v6;
  v9(v15, v16, v4);
  v9((v10 + v15) & ~v6, (v10 + v16) & ~v6, v4);
  return a1;
}

uint64_t sub_23E431168(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = *(_QWORD *)(v4 + 64);
  v9 = ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v8 + v6 + ((v6 + 8) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6) + v8;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 8) & ~v6);
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_18;
LABEL_11:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v5 + v13 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E43124C + 4 * byte_23E551A5E[(v9 - 1)]))();
}

void sub_23E4312AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v8 + 8) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8) + v9;
  v11 = a3 >= v7;
  v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v7 < a2)
  {
    v14 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void _s14ElementMetricsVMa()
{
  JUMPOUT(0x24264FD54);
}

void sub_23E4314A8()
{
  JUMPOUT(0x24264FDE4);
}

void _s14ElementMetricsV10CodingKeysOMa()
{
  JUMPOUT(0x24264FD54);
}

uint64_t sub_23E4314C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E431510 + 4 * byte_23E551A71[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E431544 + 4 * byte_23E551A6C[v4]))();
}

uint64_t sub_23E431544(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E43154C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E431554);
  return result;
}

uint64_t sub_23E431560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E431568);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E43156C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E431574(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23E431580()
{
  JUMPOUT(0x24264FDE4);
}

void sub_23E431590()
{
  JUMPOUT(0x24264FDE4);
}

void sub_23E4315A0()
{
  JUMPOUT(0x24264FDE4);
}

uint64_t sub_23E4315B0()
{
  return 6;
}

uint64_t sub_23E4315B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  v6 = type metadata accessor for StaticAlarm();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_23E2CB26C(0, v10, 0);
    v11 = v17;
    for (i = a3 + 32; ; i += 40)
    {
      ((void (*)(uint64_t))v16[0])(i);
      if (v4)
        break;
      v4 = 0;
      v17 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23E2CB26C(v13 > 1, v14 + 1, 1);
        v11 = v17;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      sub_23E1E2FDC((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t CoordinationDataModel.onboard(siriEndpointProfile:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  ObjectType = swift_getObjectType();
  v2[39] = a2;
  v2[40] = ObjectType;
  v2[38] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v2[41] = v6;
  v2[42] = *(_QWORD *)(v6 - 8);
  v2[43] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v2[44] = v7;
  v2[45] = *(_QWORD *)(v7 - 8);
  v2[46] = swift_task_alloc();
  v2[47] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v2[48] = swift_task_alloc();
  v8 = sub_23E536F80();
  v2[49] = v8;
  v2[50] = *(_QWORD *)(v8 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = sub_23E5378F8();
  v2[57] = sub_23E5378EC();
  v2[58] = sub_23E5378B0();
  v2[59] = v9;
  return swift_task_switch();
}

uint64_t sub_23E431870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  os_log_type_t v62;
  void (*v63)(uint64_t, uint64_t);
  os_log_type_t type;
  uint64_t typea;
  NSObject *loga;
  os_log_t log;
  uint64_t v68;
  uint64_t v69[2];

  if (objc_msgSend(*(id *)(v0 + 304), sel_sessionState) == (id)1)
  {
    swift_release();
    if (qword_256D3ED18 != -1)
      swift_once();
    v1 = *(_QWORD *)(v0 + 440);
    v2 = *(_QWORD *)(v0 + 392);
    v3 = *(_QWORD *)(v0 + 400);
    v5 = *(void **)(v0 + 304);
    v4 = *(_QWORD *)(v0 + 312);
    v6 = sub_23E5371A8();
    __swift_project_value_buffer(v6, (uint64_t)qword_256D40BD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
    v7 = v5;
    v8 = sub_23E537190();
    v9 = sub_23E537B20();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 440);
    v12 = *(_QWORD *)(v0 + 392);
    v13 = *(_QWORD *)(v0 + 400);
    v14 = *(void **)(v0 + 304);
    if (v10)
    {
      loga = v8;
      v15 = swift_slowAlloc();
      type = v9;
      v16 = (_QWORD *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v69[0] = v68;
      *(_DWORD *)v15 = 138412546;
      *(_QWORD *)(v0 + 264) = v14;
      v17 = v14;
      sub_23E537CF4();
      *v16 = v14;

      *(_WORD *)(v15 + 12) = 2080;
      sub_23E288764();
      v18 = sub_23E538318();
      *(_QWORD *)(v0 + 240) = sub_23E1FD768(v18, v19, v69);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      _os_log_impl(&dword_23E1DF000, loga, type, "Session already active for %@ with parentUUID: %s, no need to onboard", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v68, -1, -1);
      MEMORY[0x24264FEBC](v15, -1, -1);

    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    if (qword_256D3ED18 != -1)
      swift_once();
    v20 = *(_QWORD *)(v0 + 432);
    v21 = *(_QWORD *)(v0 + 392);
    v22 = *(_QWORD *)(v0 + 400);
    v24 = *(void **)(v0 + 304);
    v23 = *(_QWORD *)(v0 + 312);
    v25 = sub_23E5371A8();
    *(_QWORD *)(v0 + 480) = __swift_project_value_buffer(v25, (uint64_t)qword_256D40BD0);
    v26 = *(NSObject **)(v22 + 16);
    *(_QWORD *)(v0 + 488) = v26;
    log = v26;
    ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v20, v23, v21);
    v27 = v24;
    v28 = sub_23E537190();
    v29 = sub_23E537B20();
    v30 = os_log_type_enabled(v28, v29);
    v31 = *(_QWORD *)(v0 + 432);
    v33 = *(_QWORD *)(v0 + 392);
    v32 = *(_QWORD *)(v0 + 400);
    v34 = *(void **)(v0 + 304);
    if (v30)
    {
      v62 = v29;
      v61 = *(_QWORD *)(v0 + 400);
      v35 = swift_slowAlloc();
      v59 = v31;
      v36 = (_QWORD *)swift_slowAlloc();
      typea = swift_slowAlloc();
      v69[0] = typea;
      *(_DWORD *)v35 = 138412546;
      *(_QWORD *)(v0 + 288) = v34;
      v60 = v28;
      v37 = v34;
      sub_23E537CF4();
      *v36 = v34;

      *(_WORD *)(v35 + 12) = 2080;
      sub_23E288764();
      v38 = sub_23E538318();
      *(_QWORD *)(v0 + 296) = sub_23E1FD768(v38, v39, v69);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v40(v59, v33);
      _os_log_impl(&dword_23E1DF000, v60, v62, "Update to loading state for %@ with parentUUID: %s", (uint8_t *)v35, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v36, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](typea, -1, -1);
      MEMORY[0x24264FEBC](v35, -1, -1);

    }
    else
    {

      v40 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v40(v31, v33);

    }
    v63 = v40;
    *(_QWORD *)(v0 + 496) = v40;
    if (qword_256D3ED08 != -1)
      swift_once();
    v42 = *(_QWORD *)(v0 + 424);
    v43 = *(_QWORD *)(v0 + 392);
    v44 = *(_QWORD *)(v0 + 400);
    v45 = *(uint64_t **)(v0 + 384);
    v46 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v0 + 504) = __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    *(_QWORD *)(v0 + 512) = *(_QWORD *)(v44 + 72);
    v47 = *(_DWORD *)(v44 + 80);
    *(_DWORD *)(v0 + 644) = v47;
    v48 = (v47 + 32) & ~(unint64_t)v47;
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_23E539650;
    ((void (*)(unint64_t, uint64_t, uint64_t))log)(v49 + v48, v46, v43);
    *v45 = v49;
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v0 + 520) = __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 528) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23E539640;
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v42, v46, v43);
    *(_QWORD *)(v0 + 536) = type metadata accessor for _CoordinationClassObject();
    v51 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v42, v43);
    v52 = swift_task_alloc();
    *(_QWORD *)(v52 + 16) = v42;
    v53 = MEMORY[0x24BEE4AF8];
    v54 = sub_23E4315B8((uint64_t)sub_23E364F60, v52, MEMORY[0x24BEE4AF8]);
    swift_task_dealloc();
    *(_QWORD *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v54;
    v55 = swift_task_alloc();
    *(_QWORD *)(v55 + 16) = v42;
    v56 = sub_23E474340((void (*)(uint64_t))sub_23E364F7C, v55, v53);
    *(_QWORD *)(v0 + 544) = 0;
    swift_task_dealloc();
    v63(v42, v43);
    *(_QWORD *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v56;
    *(_QWORD *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 1;
    *(_QWORD *)(v51 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 1;
    *(_QWORD *)(inited + 32) = v51;
    v69[0] = inited;
    sub_23E537808();
    v57 = v69[0];
    *(_QWORD *)(v0 + 552) = v69[0];
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 560) = v58;
    *v58 = v0;
    v58[1] = sub_23E432030;
    return sub_23E3F1F44(v0 + 232, *(_QWORD *)(v0 + 384), v57);
  }
}

uint64_t sub_23E432030()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 384);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E4320AC()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;

  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[61];
  v2 = v0[53];
  v29 = (void (*)(uint64_t, uint64_t))v0[62];
  v31 = v0[52];
  v3 = v0[49];
  v4 = v0[39];
  v33 = (void *)v0[38];
  v1(v2, v4, v3);
  v5 = swift_allocObject();
  v0[71] = v5;
  v1(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v2, v3);
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v2;
  v7 = MEMORY[0x24BEE4AF8];
  v8 = sub_23E4315B8((uint64_t)sub_23E365AA4, v6, MEMORY[0x24BEE4AF8]);
  swift_task_dealloc();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v2;
  v10 = sub_23E474340((void (*)(uint64_t))sub_23E365AC8, v9, v7);
  swift_task_dealloc();
  v29(v2, v3);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v10;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 3;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 3;
  v1(v31, v4, v3);
  v11 = v33;
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  if (os_log_type_enabled(v12, v13))
  {
    v35 = (void (*)(uint64_t, uint64_t))v0[62];
    v32 = v0[52];
    v30 = v0[49];
    v14 = (void *)v0[38];
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v36 = v34;
    *(_DWORD *)v15 = 138412546;
    v0[34] = v14;
    v17 = v14;
    sub_23E537CF4();
    *v16 = v14;

    *(_WORD *)(v15 + 12) = 2080;
    sub_23E288764();
    v18 = sub_23E538318();
    v0[35] = sub_23E1FD768(v18, v19, &v36);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v35(v32, v30);
    _os_log_impl(&dword_23E1DF000, v12, v13, "Perform onboarding for %@ with parentUUID: %s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v34, -1, -1);
    MEMORY[0x24264FEBC](v15, -1, -1);
  }
  else
  {
    v20 = (void (*)(uint64_t, uint64_t))v0[62];
    v21 = v0[52];
    v22 = v0[49];
    v23 = (void *)v0[38];

    v20(v21, v22);
  }

  v24 = (void *)v0[38];
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD79D0]), sel_init);
  v0[72] = v25;
  v0[7] = v0 + 25;
  v0[2] = v0;
  v0[3] = sub_23E4324A0;
  v26 = swift_continuation_init();
  v0[20] = MEMORY[0x24BDAC760];
  v27 = v0 + 20;
  v27[1] = 0x40000000;
  v27[2] = sub_23E432DC0;
  v27[3] = &block_descriptor_29;
  v27[4] = v26;
  objc_msgSend(v24, sel_applyOnboardingSelections_completionHandler_, v25, v27);
  return swift_continuation_await();
}

uint64_t sub_23E4324A0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 584) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E4324FC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(unint64_t, uint64_t, uint64_t);
  _QWORD *v36;
  os_log_type_t type;
  os_log_type_t typea[8];
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 488);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 392);
  v5 = *(void **)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 312);

  v1(v2, v4, v3);
  v6 = v5;
  v7 = sub_23E537190();
  v8 = sub_23E537B20();
  if (os_log_type_enabled(v7, v8))
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v33 = *(_QWORD *)(v0 + 408);
    v9 = *(_QWORD *)(v0 + 392);
    v10 = *(void **)(v0 + 304);
    v11 = swift_slowAlloc();
    v36 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    *(_QWORD *)(v0 + 248) = v10;
    v44 = v41;
    *(_DWORD *)v11 = 138412802;
    type = v8;
    v12 = v10;
    sub_23E537CF4();
    *v36 = v10;

    *(_WORD *)(v11 + 12) = 2080;
    sub_23E288764();
    v13 = sub_23E538318();
    *(_QWORD *)(v0 + 256) = sub_23E1FD768(v13, v14, &v44);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v39(v33, v9);
    *(_WORD *)(v11 + 22) = 1024;
    v15 = objc_msgSend(v12, sel_sessionState);

    *(_DWORD *)(v0 + 640) = v15 == (id)1;
    sub_23E537CF4();

    _os_log_impl(&dword_23E1DF000, v7, type, "Perform onboarding finish for %@ with parentUUID: %s with result %{BOOL}d", (uint8_t *)v11, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v36, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v41, -1, -1);
    MEMORY[0x24264FEBC](v11, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v17 = *(_QWORD *)(v0 + 408);
    v18 = *(_QWORD *)(v0 + 392);
    v19 = *(void **)(v0 + 304);

    v16(v17, v18);
  }

  if (objc_msgSend(*(id *)(v0 + 304), sel_sessionState) == (id)1)
  {
    swift_release();
    if (qword_254332250 != -1)
      swift_once();
    v35 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 488);
    v20 = *(uint64_t **)(v0 + 384);
    v34 = *(_QWORD *)(v0 + 392);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 368);
    v40 = *(_QWORD *)(v0 + 360);
    v21 = *(_QWORD *)(v0 + 344);
    v42 = *(_QWORD *)(v0 + 352);
    v22 = *(_QWORD *)(v0 + 328);
    v23 = *(_QWORD *)(v0 + 336);
    v24 = (*(unsigned __int8 *)(v0 + 644) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 644);
    v25 = *(_QWORD *)(v0 + 312);
    v26 = __swift_project_value_buffer(v22, (uint64_t)qword_254332420);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v26, v22);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23E539650;
    v35(v27 + v24, v25, v34);
    *v20 = v27;
    swift_storeEnumTagMultiPayload();
    sub_23E537940();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    (*(void (**)(os_log_type_t *, uint64_t))(v40 + 8))(*(os_log_type_t **)typea, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 568);
    v30 = *(_QWORD *)(v0 + 320);
    v43 = *(_OWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 592) = sub_23E5378EC();
    v31 = swift_task_alloc();
    *(_QWORD *)(v0 + 600) = v31;
    *(_OWORD *)(v31 + 16) = v43;
    *(_QWORD *)(v31 + 32) = v29;
    *(_QWORD *)(v31 + 40) = v30;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 608) = v32;
    *v32 = v0;
    v32[1] = sub_23E432A10;
    return sub_23E538324();
  }
}

uint64_t sub_23E432A10()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E432A7C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 648);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23E432B2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t inited;
  _QWORD *v8;
  void (*v10)(unint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 488);
  v3 = *(uint64_t **)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 312);
  v5 = (*(unsigned __int8 *)(v0 + 644) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 644);
  swift_willThrow();

  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E539650;
  v10(v6 + v5, v4, v2);
  *v3 = v6;
  swift_storeEnumTagMultiPayload();
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 616) = inited;
  *(_OWORD *)(inited + 16) = xmmword_23E539640;
  *(_QWORD *)(inited + 32) = v11;
  v12 = inited;
  sub_23E537808();
  *(_QWORD *)(v0 + 624) = v12;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 632) = v8;
  *v8 = v0;
  v8[1] = sub_23E432C8C;
  return sub_23E3F1F44(v0 + 224, *(_QWORD *)(v0 + 384), v12);
}

uint64_t sub_23E432C8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 384);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E432D08()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 584);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23E432DC0(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    swift_allocError();
    *v4 = a2;
    v5 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a3;
    return swift_continuation_throwingResume();
  }
}

void sub_23E432E40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v27 = a4;
  v28 = a5;
  v25 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47198);
  v8 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (id)objc_opt_self();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  v18 = v25;
  *(_QWORD *)(v17 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v24, v23);
  v19 = v28;
  *(_QWORD *)(v17 + v16) = v27;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = sub_23E43F240;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E433A44;
  aBlock[3] = &block_descriptor_165;
  v20 = _Block_copy(aBlock);
  v21 = v18;
  swift_retain();
  swift_release();
  v22 = objc_msgSend(v26, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v20, 20.0);
  _Block_release(v20);

}

uint64_t sub_23E433058(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  BOOL v34;
  int v35;
  os_log_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  char *v69;
  uint64_t updated;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;

  v71 = a6;
  v72 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v68 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v65 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v63 = *(_QWORD *)(v14 - 8);
  v64 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v59 = v19;
  v60 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v55 - v20;
  if (qword_256D3ED18 != -1)
    swift_once();
  v22 = sub_23E5371A8();
  __swift_project_value_buffer(v22, (uint64_t)qword_256D40BD0);
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v73(v21, a3, v16);
  v23 = a2;
  v24 = sub_23E537190();
  v25 = sub_23E537B20();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v58 = a4;
    v27 = v26;
    v28 = (_QWORD *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v74 = (uint64_t)v23;
    v75 = v56;
    *(_DWORD *)v27 = 138412802;
    v61 = v17;
    v57 = a3;
    v29 = v23;
    v55 = v24;
    v30 = v29;
    sub_23E537CF4();
    *v28 = v23;

    *(_WORD *)(v27 + 12) = 2080;
    sub_23E288764();
    v31 = sub_23E538318();
    v74 = sub_23E1FD768(v31, v32, &v75);
    a3 = v57;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v21, v16);
    *(_WORD *)(v27 + 22) = 1024;
    v33 = objc_msgSend(v30, sel_sessionState);

    v34 = v33 == (id)1;
    v17 = v61;
    v35 = v34;
    LODWORD(v74) = v35;
    sub_23E537CF4();

    v36 = v55;
    _os_log_impl(&dword_23E1DF000, v55, v25, "20 seconds timer time up for %@ with parentUUID: %s with result %{BOOL}d", (uint8_t *)v27, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v28, -1, -1);
    v37 = v56;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v37, -1, -1);
    MEMORY[0x24264FEBC](v27, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  }
  if (objc_msgSend(v23, sel_sessionState) == (id)1)
  {
    if (qword_254332250 != -1)
      swift_once();
    v38 = v67;
    v39 = __swift_project_value_buffer(v67, (uint64_t)qword_254332420);
    v41 = v65;
    v40 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v39, v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    v42 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_23E539650;
    v73((char *)(v43 + v42), a3, v16);
    *v68 = v43;
    swift_storeEnumTagMultiPayload();
    v44 = v62;
    sub_23E537940();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v38);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
    LOBYTE(v75) = 1;
  }
  else
  {
    v45 = sub_23E537934();
    v46 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v69, 1, 1, v45);
    v47 = v60;
    v73(v60, a3, v16);
    v48 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v49 = (v59 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject();
    v51 = v17;
    v52 = v50;
    *(_QWORD *)(v50 + 16) = 0;
    *(_QWORD *)(v50 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v50 + v48, v47, v16);
    v53 = v71;
    *(_QWORD *)(v52 + v49) = v72;
    *(_QWORD *)(v52 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8)) = v53;
    swift_retain();
    sub_23E26D2F4(v46, (uint64_t)&unk_256D471A8, v52);
    swift_release();
    LOBYTE(v75) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47198);
  return sub_23E5378C8();
}

uint64_t sub_23E433674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v5[10] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E4336D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_23E5378F8();
  *(_QWORD *)(v0 + 104) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E433740()
{
  swift_release();
  if (qword_256D3ED08 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4337A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 112) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E433804()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 120) = qword_256D89710;
  return swift_task_switch();
}

uint64_t sub_23E43384C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t inited;
  _QWORD *v9;
  uint64_t v11;

  v1 = (uint64_t *)v0[11];
  v3 = v0[8];
  v2 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E539650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, v3, v4);
  *v1 = v7;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  inited = swift_initStackObject();
  v0[16] = inited;
  *(_OWORD *)(inited + 16) = xmmword_23E539640;
  *(_QWORD *)(inited + 32) = v2;
  v11 = inited;
  sub_23E537808();
  v0[17] = v11;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_23E433990;
  return sub_23E3F1F44(v0[7], v0[11], v11);
}

uint64_t sub_23E433990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v2, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E433A08()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8) = *(_QWORD *)(v0 + 152);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CoordinationDataModel.addAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[62] = a2;
  v3[63] = v2;
  v3[61] = a1;
  v3[64] = swift_getObjectType();
  v3[65] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[66] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v3[67] = v4;
  v3[68] = *(_QWORD *)(v4 - 8);
  v3[69] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v3[70] = v5;
  v3[71] = *(_QWORD *)(v5 - 8);
  v3[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[73] = swift_task_alloc();
  v6 = *(_QWORD *)(type metadata accessor for StaticAlarm() - 8);
  v3[74] = v6;
  v3[75] = *(_QWORD *)(v6 + 64);
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v7 = sub_23E536F80();
  v3[78] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[79] = v8;
  v3[80] = *(_QWORD *)(v8 + 64);
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  v3[83] = sub_23E5378F8();
  v3[84] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E433BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 *v91;
  id aBlock;
  __int128 *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  void (*v97)(unint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  void (*v102)(uint64_t, uint64_t, uint64_t);
  _OWORD v103[3];
  uint64_t v104;

  v1 = *(_QWORD *)(v0 + 504);
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 496);
    swift_bridgeObjectRetain();
    v5 = sub_23E1E3300(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(void **)(v0 + 488);
      v8 = (__int128 *)(*(_QWORD *)(v3 + 56) + (v5 << 7));
      v9 = v8[3];
      v11 = *v8;
      v10 = v8[1];
      *(_OWORD *)(v0 + 48) = v8[2];
      *(_OWORD *)(v0 + 64) = v9;
      *(_OWORD *)(v0 + 16) = v11;
      *(_OWORD *)(v0 + 32) = v10;
      v12 = v8[7];
      v14 = v8[4];
      v13 = v8[5];
      *(_OWORD *)(v0 + 112) = v8[6];
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      sub_23E223058(v0 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 464) = v7;
      sub_23E282870();
      v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E1E6C84((__int128 *)(v0 + 400), v0 + 240);
        if (qword_256D3ED18 != -1)
          swift_once();
        v91 = (__int128 *)(v0 + 280);
        v93 = (__int128 *)(v0 + 360);
        v16 = *(_QWORD *)(v0 + 656);
        v17 = *(_QWORD *)(v0 + 632);
        v18 = *(_QWORD *)(v0 + 624);
        v19 = *(_QWORD *)(v0 + 496);
        v20 = sub_23E5371A8();
        __swift_project_value_buffer(v20, (uint64_t)qword_256D40BD0);
        v101 = (_QWORD *)(v0 + 240);
        sub_23E1FF9C8(v0 + 240, v0 + 320);
        v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
        v102(v16, v19, v18);
        v21 = sub_23E537190();
        v22 = sub_23E537B20();
        v23 = os_log_type_enabled(v21, v22);
        v24 = *(_QWORD *)(v0 + 656);
        v25 = *(_QWORD *)(v0 + 632);
        v26 = *(_QWORD *)(v0 + 624);
        if (v23)
        {
          v27 = swift_slowAlloc();
          v98 = swift_slowAlloc();
          *(_QWORD *)&v103[0] = v98;
          *(_DWORD *)v27 = 136315394;
          v94 = v25;
          v28 = *(_QWORD *)(v0 + 344);
          v29 = *(_QWORD *)(v0 + 352);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 320), v28);
          v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 64))(v28, v29);
          *(_QWORD *)(v0 + 472) = sub_23E1FD768(v30, v31, (uint64_t *)v103);
          sub_23E537CF4();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(v0 + 320);
          *(_WORD *)(v27 + 12) = 2080;
          sub_23E288764();
          v32 = sub_23E538318();
          *(_QWORD *)(v0 + 480) = sub_23E1FD768(v32, v33, (uint64_t *)v103);
          sub_23E537CF4();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v24, v26);
          _os_log_impl(&dword_23E1DF000, v21, v22, "attempt to add alarm %s for parent %s", (uint8_t *)v27, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v98, -1, -1);
          MEMORY[0x24264FEBC](v27, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_0(v0 + 320);
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
        }

        v34 = *(_QWORD *)(v0 + 648);
        v99 = *(_QWORD *)(v0 + 640);
        v96 = *(_QWORD *)(v0 + 632);
        v35 = *(_QWORD *)(v0 + 624);
        v85 = *(_QWORD *)(v0 + 616);
        v87 = *(_QWORD *)(v0 + 584);
        v36 = *(_QWORD *)(v0 + 496);
        v95 = *(void **)(v0 + 504);
        v89 = v36;
        v37 = *(_QWORD *)(v0 + 264);
        v38 = *(_QWORD *)(v0 + 272);
        v39 = __swift_project_boxed_opaque_existential_1(v101, v37);
        v40 = *(_QWORD *)(v37 - 8);
        v41 = swift_task_alloc();
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v40 + 16))(v41, v39, v37);
        v102(v34, v36, v35);
        sub_23E4A16D8(v41, v34, v37, v38, v85);
        swift_task_dealloc();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_23E539650;
        sub_23E1FF9C8((uint64_t)v101, v42 + 32);
        v43 = sub_23E537934();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v87, 1, 1, v43);
        v44 = v35;
        v102(v34, v89, v35);
        swift_bridgeObjectRetain();
        v45 = v95;
        v46 = sub_23E5378EC();
        v47 = (*(unsigned __int8 *)(v96 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
        v90 = v47 + v99;
        v48 = swift_allocObject();
        v49 = MEMORY[0x24BEE6930];
        *(_QWORD *)(v48 + 16) = v46;
        *(_QWORD *)(v48 + 24) = v49;
        *(_BYTE *)(v48 + 32) = 0;
        *(_QWORD *)(v48 + 40) = v42;
        *(_QWORD *)(v48 + 48) = v45;
        v100 = v47;
        v97 = *(void (**)(unint64_t, uint64_t, uint64_t))(v96 + 32);
        v97(v48 + v47, v34, v44);
        sub_23E26D014(v87, (uint64_t)&unk_256D44508, v48);
        swift_release();
        swift_bridgeObjectRelease();
        if (qword_254332250 != -1)
          swift_once();
        v82 = *(_QWORD *)(v0 + 648);
        v50 = *(_QWORD *)(v0 + 624);
        v51 = *(_QWORD *)(v0 + 616);
        v83 = *(_QWORD *)(v0 + 608);
        v84 = *(_QWORD *)(v0 + 600);
        v52 = *(_QWORD *)(v0 + 592);
        v77 = *(_QWORD *)(v0 + 576);
        v78 = *(_QWORD *)(v0 + 568);
        v79 = *(_QWORD *)(v0 + 560);
        v80 = v50;
        v53 = *(_QWORD *)(v0 + 552);
        v54 = *(_QWORD *)(v0 + 544);
        v55 = *(_QWORD *)(v0 + 536);
        v56 = *(_QWORD *)(v0 + 528);
        v57 = *(_QWORD *)(v0 + 496);
        v86 = *(void **)(v0 + 504);
        v88 = *(_QWORD *)(v0 + 512);
        v81 = v57;
        v58 = __swift_project_value_buffer(v55, (uint64_t)qword_254332420);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v58, v55);
        v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
        v102(v56, v57, v50);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
        v60 = *(unsigned __int8 *)(v52 + 80);
        v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_23E539650;
        sub_23E1E2F50(v51, v61 + ((v60 + 32) & ~v60), (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        *(_QWORD *)(v56 + v59) = v61;
        swift_storeEnumTagMultiPayload();
        sub_23E537940();
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
        v62 = *(_QWORD *)(v0 + 264);
        v63 = __swift_project_boxed_opaque_existential_1(v101, v62);
        v64 = *(_QWORD *)(v0 + 64);
        v65 = *(_OWORD *)(v0 + 32);
        v103[0] = *(_OWORD *)(v0 + 16);
        v103[1] = v65;
        v103[2] = *(_OWORD *)(v0 + 48);
        v104 = v64;
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D470E8);
        v67 = sub_23E4B5C1C((uint64_t)v63, v66, v62);
        sub_23E1FF9C8((uint64_t)v101, (uint64_t)v91);
        v102(v82, v81, v80);
        v68 = swift_allocObject();
        sub_23E1E6C84(v91, v68 + 16);
        v97(v68 + v100, v82, v80);
        *(_QWORD *)(v0 + 176) = sub_23E43E864;
        *(_QWORD *)(v0 + 184) = v68;
        *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
        *(_QWORD *)(v0 + 152) = 1107296256;
        *(_QWORD *)(v0 + 160) = sub_23E433A44;
        *(_QWORD *)(v0 + 168) = &block_descriptor_10;
        v69 = _Block_copy((const void *)(v0 + 144));
        swift_release();
        aBlock = objc_msgSend(v67, sel_addSuccessBlock_, v69);
        _Block_release(v69);

        sub_23E1FF9C8((uint64_t)v101, (uint64_t)v93);
        v102(v82, v81, v80);
        sub_23E1E2F50(v51, v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        v70 = (v90 + 7) & 0xFFFFFFFFFFFFFFF8;
        v71 = (v70 + v60 + 8) & ~v60;
        v72 = swift_allocObject();
        sub_23E1E6C84(v93, v72 + 16);
        v97(v72 + v100, v82, v80);
        *(_QWORD *)(v72 + v70) = v86;
        sub_23E1E2FDC(v83, v72 + v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        *(_QWORD *)(v72 + ((v84 + v71 + 7) & 0xFFFFFFFFFFFFFFF8)) = v88;
        *(_QWORD *)(v0 + 224) = sub_23E43E87C;
        *(_QWORD *)(v0 + 232) = v72;
        *(_QWORD *)(v0 + 192) = MEMORY[0x24BDAC760];
        *(_QWORD *)(v0 + 200) = 1107296256;
        *(_QWORD *)(v0 + 208) = sub_23E433A44;
        *(_QWORD *)(v0 + 216) = &block_descriptor_16_0;
        v73 = _Block_copy((const void *)(v0 + 192));
        v74 = v86;
        swift_release();
        v75 = objc_msgSend(aBlock, sel_addFailureBlock_, v73);
        _Block_release(v73);

        sub_23E223150(v0 + 16);
        sub_23E1E2FA0(v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v101);
      }
      else
      {
        *(_QWORD *)(v0 + 432) = 0;
        *(_OWORD *)(v0 + 400) = 0u;
        *(_OWORD *)(v0 + 416) = 0u;
        sub_23E223150(v0 + 16);
        sub_23E1E7C64(v0 + 400, &qword_256D40BF0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4345C4(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t updated;
  uint64_t v78;
  void (*v79)(_BYTE *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v78 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v76 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v73 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v70 = &v61[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v67 = &v61[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v66 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v61[-v20];
  if (qword_256D3ED18 != -1)
    swift_once();
  v22 = sub_23E5371A8();
  __swift_project_value_buffer(v22, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v82);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v69 = a3;
  v79 = v23;
  v23(v21, a3, v16);
  v24 = a1;
  v25 = a1;
  v26 = sub_23E537190();
  v27 = sub_23E537B08();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v62 = v28;
    v30 = v29;
    v63 = swift_slowAlloc();
    v81 = v63;
    *(_DWORD *)v30 = 136315650;
    v64 = a2;
    *(_QWORD *)&v65 = a4;
    v32 = v83;
    v31 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 64))(v32, v31);
    v80 = sub_23E1FD768(v33, v34, &v81);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v82);
    *(_WORD *)(v30 + 12) = 2080;
    sub_23E288764();
    v35 = sub_23E538318();
    v80 = sub_23E1FD768(v35, v36, &v81);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);
    *(_WORD *)(v30 + 22) = 2080;
    a2 = v64;
    swift_getErrorValue();
    v37 = sub_23E5383E4();
    v80 = sub_23E1FD768(v37, v38, &v81);
    a4 = (void *)v65;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v26, (os_log_type_t)v62, "failed to add alarm %s for parent %s due to %s", (uint8_t *)v30, 0x20u);
    v39 = v63;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v39, -1, -1);
    MEMORY[0x24264FEBC](v30, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v82);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v40 = swift_allocObject();
  v65 = xmmword_23E539650;
  *(_OWORD *)(v40 + 16) = xmmword_23E539650;
  sub_23E1FF9C8(a2, v40 + 32);
  v41 = sub_23E537934();
  v42 = (uint64_t)v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v68, 1, 1, v41);
  v43 = v67;
  v44 = v69;
  v79(v67, v69, v16);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v45 = a4;
  v46 = sub_23E5378EC();
  v47 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v48 = swift_allocObject();
  v49 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v48 + 16) = v46;
  *(_QWORD *)(v48 + 24) = v49;
  *(_BYTE *)(v48 + 32) = 1;
  *(_QWORD *)(v48 + 40) = v40;
  *(_QWORD *)(v48 + 48) = v45;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v17 + 32))(v48 + v47, v43, v16);
  sub_23E26D014(v42, (uint64_t)&unk_256D47190, v48);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v50 = v75;
  v51 = __swift_project_value_buffer(v75, (uint64_t)qword_254332420);
  v53 = v73;
  v52 = v74;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v74 + 16))(v73, v51, v50);
  v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
  v55 = v76;
  v79(v76, v44, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v56 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticAlarm() - 8) + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v65;
  sub_23E1E2F50(v78, v58 + v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)&v55[v54] = v58;
  swift_storeEnumTagMultiPayload();
  v59 = v70;
  sub_23E537940();
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v53, v50);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v71 + 8))(v59, v72);
}

void sub_23E434C84(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t CoordinationDataModel.deleteAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[66] = v3;
  v4[65] = a3;
  v4[63] = a1;
  v4[64] = a2;
  v4[67] = swift_getObjectType();
  v4[68] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[69] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v4[70] = v5;
  v4[71] = *(_QWORD *)(v5 - 8);
  v4[72] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v4[73] = v6;
  v4[74] = *(_QWORD *)(v6 - 8);
  v4[75] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v4[76] = swift_task_alloc();
  v7 = *(_QWORD *)(type metadata accessor for StaticAlarm() - 8);
  v4[77] = v7;
  v4[78] = *(_QWORD *)(v7 + 64);
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  v8 = sub_23E536F80();
  v4[81] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[82] = v9;
  v4[83] = *(_QWORD *)(v9 + 64);
  v4[84] = swift_task_alloc();
  v4[85] = swift_task_alloc();
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  v4[88] = sub_23E5378F8();
  v4[89] = sub_23E5378EC();
  v4[90] = sub_23E5378B0();
  v4[91] = v10;
  return swift_task_switch();
}

uint64_t sub_23E434E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 *v115;
  id aBlock;
  __int128 *v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(unint64_t, uint64_t, uint64_t);
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  _OWORD v133[3];
  uint64_t v134;

  v1 = *(_QWORD *)(v0 + 528) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_10;
  v3 = *(_QWORD *)(v0 + 520);
  swift_bridgeObjectRetain();
  v4 = sub_23E1E3300(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
LABEL_11:
    **(_QWORD **)(v0 + 504) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 520);
  v7 = *(_QWORD *)(v0 + 512);
  v8 = (__int128 *)(*(_QWORD *)(v2 + 56) + (v4 << 7));
  v9 = v8[3];
  v11 = *v8;
  v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  v12 = v8[7];
  v14 = v8[4];
  v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_23E223058(v0 + 16);
  swift_bridgeObjectRelease();
  sub_23E281AF0(v7, v6, v0 + 280);
  if (!*(_QWORD *)(v0 + 304))
  {
    swift_release();
    sub_23E1E7C64(v0 + 280, &qword_256D40BF0);
    if (qword_256D3ED18 != -1)
      swift_once();
    v34 = *(_QWORD *)(v0 + 680);
    v35 = *(_QWORD *)(v0 + 672);
    v36 = *(_QWORD *)(v0 + 656);
    v37 = *(_QWORD *)(v0 + 648);
    v38 = *(_QWORD *)(v0 + 520);
    v39 = *(_QWORD *)(v0 + 512);
    v40 = sub_23E5371A8();
    __swift_project_value_buffer(v40, (uint64_t)qword_256D40BD0);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v41(v34, v39, v37);
    v41(v35, v38, v37);
    v42 = sub_23E537190();
    v43 = sub_23E537B08();
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 680);
    v46 = *(_QWORD *)(v0 + 672);
    v47 = *(_QWORD *)(v0 + 656);
    v48 = *(_QWORD *)(v0 + 648);
    if (v44)
    {
      v123 = *(_QWORD *)(v0 + 672);
      v49 = swift_slowAlloc();
      v132 = swift_slowAlloc();
      *(_QWORD *)&v133[0] = v132;
      *(_DWORD *)v49 = 136315394;
      sub_23E288764();
      v50 = sub_23E538318();
      *(_QWORD *)(v0 + 472) = sub_23E1FD768(v50, v51, (uint64_t *)v133);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v52(v45, v48);
      *(_WORD *)(v49 + 12) = 2080;
      v53 = sub_23E538318();
      *(_QWORD *)(v0 + 464) = sub_23E1FD768(v53, v54, (uint64_t *)v133);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52(v123, v48);
      _os_log_impl(&dword_23E1DF000, v42, v43, "failed to found alarm with %s for parent %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v132, -1, -1);
      MEMORY[0x24264FEBC](v49, -1, -1);

      sub_23E223150(v0 + 16);
    }
    else
    {
      sub_23E223150(v0 + 16);
      v102 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v102(v45, v48);
      v102(v46, v48);

    }
    goto LABEL_11;
  }
  sub_23E1E6C84((__int128 *)(v0 + 280), v0 + 240);
  if (qword_256D3ED18 != -1)
    swift_once();
  v117 = (__int128 *)(v0 + 320);
  v115 = (__int128 *)(v0 + 400);
  v15 = *(_QWORD *)(v0 + 696);
  v16 = *(_QWORD *)(v0 + 656);
  v17 = *(_QWORD *)(v0 + 648);
  v18 = *(_QWORD *)(v0 + 520);
  v19 = sub_23E5371A8();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D40BD0);
  v130 = (_QWORD *)(v0 + 240);
  sub_23E1FF9C8(v0 + 240, v0 + 360);
  v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v131(v15, v18, v17);
  v20 = sub_23E537190();
  v21 = sub_23E537B20();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 696);
  v24 = *(_QWORD *)(v0 + 656);
  v25 = *(_QWORD *)(v0 + 648);
  if (v22)
  {
    v26 = swift_slowAlloc();
    v128 = swift_slowAlloc();
    *(_QWORD *)&v133[0] = v128;
    *(_DWORD *)v26 = 136315394;
    v122 = v24;
    v28 = *(_QWORD *)(v0 + 384);
    v27 = *(_QWORD *)(v0 + 392);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 360), v28);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 64))(v28, v27);
    *(_QWORD *)(v0 + 488) = sub_23E1FD768(v29, v30, (uint64_t *)v133);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    *(_WORD *)(v26 + 12) = 2080;
    sub_23E288764();
    v31 = sub_23E538318();
    *(_QWORD *)(v0 + 496) = sub_23E1FD768(v31, v32, (uint64_t *)v133);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v23, v25);
    _os_log_impl(&dword_23E1DF000, v20, v21, "attempt to delete alarm %s for parent %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v128, -1, -1);
    MEMORY[0x24264FEBC](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }

  v55 = *(_QWORD *)(v0 + 688);
  v126 = *(_QWORD *)(v0 + 664);
  v124 = *(_QWORD *)(v0 + 656);
  v56 = *(_QWORD *)(v0 + 648);
  v129 = *(_QWORD *)(v0 + 640);
  v118 = *(_QWORD *)(v0 + 608);
  v120 = *(void **)(v0 + 528);
  v57 = *(_QWORD *)(v0 + 520);
  v113 = v57;
  v58 = *(_QWORD *)(v0 + 264);
  v59 = *(_QWORD *)(v0 + 272);
  v60 = __swift_project_boxed_opaque_existential_1(v130, v58);
  v61 = *(_QWORD *)(v58 - 8);
  v62 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v61 + 16))(v62, v60, v58);
  v131(v55, v57, v56);
  sub_23E4A16D8(v62, v55, v58, v59, v129);
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)v130, v63 + 32);
  v64 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v118, 1, 1, v64);
  v65 = v56;
  v131(v55, v113, v56);
  swift_bridgeObjectRetain();
  v66 = v120;
  v67 = sub_23E5378EC();
  v68 = (*(unsigned __int8 *)(v124 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
  v121 = v68 + v126;
  v69 = swift_allocObject();
  v70 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v69 + 16) = v67;
  *(_QWORD *)(v69 + 24) = v70;
  *(_BYTE *)(v69 + 32) = 1;
  *(_QWORD *)(v69 + 40) = v63;
  *(_QWORD *)(v69 + 48) = v66;
  v127 = v68;
  v125 = *(void (**)(unint64_t, uint64_t, uint64_t))(v124 + 32);
  v125(v69 + v68, v55, v65);
  sub_23E26D014(v118, (uint64_t)&unk_256D470F8, v69);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_254332250 != -1)
    swift_once();
  v71 = *(_QWORD *)(v0 + 648);
  v106 = v71;
  v107 = *(_QWORD *)(v0 + 688);
  v72 = *(_QWORD *)(v0 + 640);
  v108 = *(_QWORD *)(v0 + 632);
  v73 = *(_QWORD *)(v0 + 616);
  v103 = *(_QWORD *)(v0 + 600);
  v104 = *(_QWORD *)(v0 + 592);
  v105 = *(_QWORD *)(v0 + 584);
  v74 = *(_QWORD *)(v0 + 576);
  v75 = *(_QWORD *)(v0 + 568);
  v76 = *(_QWORD *)(v0 + 560);
  v77 = *(_QWORD *)(v0 + 552);
  v111 = *(_QWORD *)(v0 + 536);
  v109 = *(_QWORD *)(v0 + 624);
  v110 = *(void **)(v0 + 528);
  v78 = *(_QWORD *)(v0 + 520);
  v119 = v78;
  v79 = __swift_project_value_buffer(v76, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v74, v79, v76);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
  v80 = *(int *)(v114 + 48);
  v131(v77, v78, v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v81 = *(unsigned __int8 *)(v73 + 80);
  v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_23E539650;
  v112 = (v81 + 32) & ~v81;
  sub_23E1E2F50(v72, v82 + v112, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)(v77 + v80) = v82;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v105);
  v83 = *(_QWORD *)(v0 + 264);
  v84 = __swift_project_boxed_opaque_existential_1(v130, v83);
  v85 = *(_QWORD *)(v0 + 64);
  v86 = *(_OWORD *)(v0 + 32);
  v133[0] = *(_OWORD *)(v0 + 16);
  v133[1] = v86;
  v133[2] = *(_OWORD *)(v0 + 48);
  v134 = v85;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D470E8);
  v88 = sub_23E4B5F50((uint64_t)v84, v87, v83);
  sub_23E1FF9C8((uint64_t)v130, (uint64_t)v115);
  v131(v107, v119, v106);
  v89 = swift_allocObject();
  sub_23E1E6C84(v115, v89 + 16);
  v125(v89 + v127, v107, v106);
  *(_QWORD *)(v0 + 224) = sub_23E43E898;
  *(_QWORD *)(v0 + 232) = v89;
  *(_QWORD *)(v0 + 192) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 200) = 1107296256;
  *(_QWORD *)(v0 + 208) = sub_23E433A44;
  *(_QWORD *)(v0 + 216) = &block_descriptor_27;
  v90 = _Block_copy((const void *)(v0 + 192));
  swift_release();
  aBlock = objc_msgSend(v88, sel_addSuccessBlock_, v90);
  _Block_release(v90);

  sub_23E1FF9C8((uint64_t)v130, (uint64_t)v117);
  v131(v107, v119, v106);
  sub_23E1E2F50(v72, v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  v91 = (v121 + 7) & 0xFFFFFFFFFFFFFFF8;
  v92 = (v91 + v81 + 8) & ~v81;
  v93 = swift_allocObject();
  sub_23E1E6C84(v117, v93 + 16);
  v125(v93 + v127, v107, v106);
  *(_QWORD *)(v93 + v91) = v110;
  sub_23E1E2FDC(v108, v93 + v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)(v93 + ((v109 + v92 + 7) & 0xFFFFFFFFFFFFFFF8)) = v111;
  *(_QWORD *)(v0 + 176) = sub_23E43E9B0;
  *(_QWORD *)(v0 + 184) = v93;
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 152) = 1107296256;
  *(_QWORD *)(v0 + 160) = sub_23E433A44;
  *(_QWORD *)(v0 + 168) = &block_descriptor_33;
  v94 = _Block_copy((const void *)(v0 + 144));
  v95 = v110;
  swift_release();
  v96 = objc_msgSend(aBlock, sel_addFailureBlock_, v94);
  _Block_release(v94);

  if (qword_256D3ED08 != -1)
    swift_once();
  v97 = *(_QWORD *)(v0 + 640);
  v98 = *(_QWORD *)(v0 + 552);
  v99 = *(int *)(v114 + 48);
  v131(v98, *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 648));
  v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_23E539650;
  sub_23E1E2F50(v97, v100 + v112, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)(v98 + v99) = v100;
  swift_storeEnumTagMultiPayload();
  v101 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 736) = v101;
  *v101 = v0;
  v101[1] = sub_23E435B7C;
  return sub_23E3F1F44(v0 + 480, *(_QWORD *)(v0 + 552), 0);
}

uint64_t sub_23E435B7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 552);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E435BE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 640);
  v2 = *(_QWORD **)(v0 + 504);
  swift_release();
  sub_23E223150(v0 + 16);
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *v2 = *(_QWORD *)(v0 + 480);
  __swift_destroy_boxed_opaque_existential_0(v0 + 240);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E435CDC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26 = v24;
    *(_DWORD *)v14 = 136315394;
    v23 = a4;
    v16 = v28;
    v15 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v16, v15);
    v25 = sub_23E1FD768(v17, v18, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    *(_WORD *)(v14 + 12) = 2080;
    sub_23E288764();
    v19 = sub_23E538318();
    v25 = sub_23E1FD768(v19, v20, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_23E1DF000, v12, v13, v23, (uint8_t *)v14, 0x16u);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

}

uint64_t sub_23E435F54(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t updated;
  uint64_t v79;
  void (*v80)(_BYTE *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v79 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v77 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v74 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v71 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v69 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v68 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v62[-v20];
  if (qword_256D3ED18 != -1)
    swift_once();
  v22 = sub_23E5371A8();
  __swift_project_value_buffer(v22, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v83);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v70 = a3;
  v23(v21, a3, v16);
  v24 = a1;
  v25 = a1;
  v26 = sub_23E537190();
  v27 = sub_23E537B08();
  v28 = v27;
  v29 = os_log_type_enabled(v26, v27);
  v80 = v23;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v63 = v28;
    v31 = v30;
    v64 = swift_slowAlloc();
    v82 = v64;
    *(_DWORD *)v31 = 136315650;
    v65 = a2;
    *(_QWORD *)&v66 = a4;
    v33 = v84;
    v32 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 64))(v33, v32);
    v81 = sub_23E1FD768(v34, v35, &v82);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    *(_WORD *)(v31 + 12) = 2080;
    sub_23E288764();
    v36 = sub_23E538318();
    v81 = sub_23E1FD768(v36, v37, &v82);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);
    *(_WORD *)(v31 + 22) = 2080;
    a2 = v65;
    swift_getErrorValue();
    v38 = sub_23E5383E4();
    v81 = sub_23E1FD768(v38, v39, &v82);
    v23 = v80;
    a4 = (void *)v66;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v26, (os_log_type_t)v63, "failed to delete alarm %s for parent %s due to %s", (uint8_t *)v31, 0x20u);
    v40 = v64;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v40, -1, -1);
    MEMORY[0x24264FEBC](v31, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v41 = swift_allocObject();
  v66 = xmmword_23E539650;
  *(_OWORD *)(v41 + 16) = xmmword_23E539650;
  sub_23E1FF9C8(a2, v41 + 32);
  v42 = sub_23E537934();
  v43 = (uint64_t)v69;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v69, 1, 1, v42);
  v44 = v68;
  v45 = v70;
  v23(v68, v70, v16);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v46 = a4;
  v47 = sub_23E5378EC();
  v48 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v49 = swift_allocObject();
  v50 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v49 + 16) = v47;
  *(_QWORD *)(v49 + 24) = v50;
  *(_BYTE *)(v49 + 32) = 0;
  *(_QWORD *)(v49 + 40) = v41;
  *(_QWORD *)(v49 + 48) = v46;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v17 + 32))(v49 + v48, v44, v16);
  sub_23E26D014(v43, (uint64_t)&unk_256D47188, v49);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v51 = v76;
  v52 = __swift_project_value_buffer(v76, (uint64_t)qword_254332420);
  v54 = v74;
  v53 = v75;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v75 + 16))(v74, v52, v51);
  v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
  v56 = v77;
  v80(v77, v45, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v57 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticAlarm() - 8) + 80);
  v58 = (v57 + 32) & ~v57;
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v66;
  sub_23E1E2F50(v79, v59 + v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)&v56[v55] = v59;
  swift_storeEnumTagMultiPayload();
  v60 = v71;
  sub_23E537940();
  (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v54, v51);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v72 + 8))(v60, v73);
}

uint64_t CoordinationDataModel.toggleAlarm(staticAlarmID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[80] = v3;
  v4[79] = a3;
  v4[78] = a2;
  v4[77] = a1;
  v4[81] = swift_getObjectType();
  v4[82] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[83] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v4[84] = v5;
  v4[85] = *(_QWORD *)(v5 - 8);
  v4[86] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v4[87] = v6;
  v4[88] = *(_QWORD *)(v6 - 8);
  v4[89] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v4[90] = swift_task_alloc();
  v4[91] = *(_QWORD *)(type metadata accessor for StaticAlarm() - 8);
  v4[92] = swift_task_alloc();
  v7 = sub_23E536F80();
  v4[93] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[94] = v8;
  v4[95] = *(_QWORD *)(v8 + 64);
  v4[96] = swift_task_alloc();
  v4[97] = swift_task_alloc();
  v4[98] = swift_task_alloc();
  v4[99] = swift_task_alloc();
  v4[100] = sub_23E5378F8();
  v4[101] = sub_23E5378EC();
  v4[102] = sub_23E5378B0();
  v4[103] = v9;
  return swift_task_switch();
}

uint64_t sub_23E4367B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  unint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  os_log_type_t typea;
  uint64_t type;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  __int128 *v146;
  _QWORD *v147;
  id v148;
  id v149;
  os_log_t log;
  void (*v151)(uint64_t, uint64_t, uint64_t);
  _QWORD *v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  _OWORD v156[3];
  uint64_t v157;

  v1 = *(_QWORD *)(v0 + 640) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_11;
  v3 = *(_QWORD *)(v0 + 632);
  swift_bridgeObjectRetain();
  v4 = sub_23E1E3300(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_release();
LABEL_12:
    **(_QWORD **)(v0 + 616) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 632);
  v7 = *(_QWORD *)(v0 + 624);
  v8 = (__int128 *)(*(_QWORD *)(v2 + 56) + (v4 << 7));
  v9 = v8[3];
  v11 = *v8;
  v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  v12 = v8[7];
  v14 = v8[4];
  v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_23E223058(v0 + 16);
  swift_bridgeObjectRelease();
  sub_23E281AF0(v7, v6, v0 + 240);
  if (!*(_QWORD *)(v0 + 264))
  {
    swift_release();
    sub_23E1E7C64(v0 + 240, &qword_256D40BF0);
LABEL_15:
    if (qword_256D3ED18 != -1)
      swift_once();
    v45 = *(_QWORD *)(v0 + 776);
    v46 = *(_QWORD *)(v0 + 768);
    v47 = *(_QWORD *)(v0 + 752);
    v48 = *(_QWORD *)(v0 + 744);
    v49 = *(_QWORD *)(v0 + 632);
    v50 = *(_QWORD *)(v0 + 624);
    v51 = sub_23E5371A8();
    __swift_project_value_buffer(v51, (uint64_t)qword_256D40BD0);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
    v52(v45, v50, v48);
    v52(v46, v49, v48);
    v53 = sub_23E537190();
    v54 = sub_23E537B08();
    v55 = os_log_type_enabled(v53, v54);
    v56 = *(_QWORD *)(v0 + 776);
    v57 = *(_QWORD *)(v0 + 768);
    v58 = *(_QWORD *)(v0 + 752);
    v59 = *(_QWORD *)(v0 + 744);
    if (v55)
    {
      v148 = *(id *)(v0 + 768);
      v60 = swift_slowAlloc();
      v155 = swift_slowAlloc();
      *(_QWORD *)&v156[0] = v155;
      *(_DWORD *)v60 = 136315394;
      sub_23E288764();
      v61 = sub_23E538318();
      *(_QWORD *)(v0 + 576) = sub_23E1FD768(v61, v62, (uint64_t *)v156);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v63(v56, v59);
      *(_WORD *)(v60 + 12) = 2080;
      v64 = sub_23E538318();
      *(_QWORD *)(v0 + 592) = sub_23E1FD768(v64, v65, (uint64_t *)v156);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v63((uint64_t)v148, v59);
      _os_log_impl(&dword_23E1DF000, v53, v54, "failed to found alarm with %s for parent %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v155, -1, -1);
      MEMORY[0x24264FEBC](v60, -1, -1);

      sub_23E223150(v0 + 16);
    }
    else
    {
      sub_23E223150(v0 + 16);
      v66 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v66(v56, v59);
      v66(v57, v59);

    }
    goto LABEL_12;
  }
  sub_23E1E6C84((__int128 *)(v0 + 240), v0 + 400);
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 832) = v15;
  v16 = *(_QWORD *)(v0 + 424);
  v17 = *(_QWORD *)(v0 + 432);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 400), v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 80))(v16, v17);
  if (!*(_QWORD *)(v0 + 384))
  {
    swift_release();
    sub_23E1E7C64(v0 + 360, &qword_256D47108);
    swift_deallocUninitializedObject();
    __swift_destroy_boxed_opaque_existential_0(v0 + 400);
    goto LABEL_15;
  }
  v152 = (_QWORD *)(v0 + 280);
  v18 = (_QWORD *)(v15 + 16);
  sub_23E1E6C84((__int128 *)(v0 + 360), v15 + 16);
  v19 = v15;
  if (qword_256D3ED18 != -1)
    swift_once();
  v146 = (__int128 *)(v0 + 320);
  v145 = (_QWORD *)(v0 + 440);
  v20 = *(_QWORD *)(v0 + 792);
  v21 = *(_QWORD *)(v0 + 752);
  v22 = *(_QWORD *)(v0 + 744);
  v23 = *(_QWORD *)(v0 + 632);
  v24 = sub_23E5371A8();
  __swift_project_value_buffer(v24, (uint64_t)qword_256D40BD0);
  v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v154(v20, v23, v22);
  swift_retain_n();
  v25 = sub_23E537190();
  v26 = sub_23E537B20();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(_QWORD *)(v0 + 792);
  v143 = *(_QWORD *)(v0 + 752);
  v29 = *(_QWORD *)(v0 + 744);
  v30 = v19;
  v147 = v18;
  if (v27)
  {
    typea = v26;
    v31 = swift_slowAlloc();
    v138 = swift_slowAlloc();
    *(_QWORD *)&v156[0] = v138;
    *(_DWORD *)v31 = 136315394;
    swift_beginAccess();
    v136 = v28;
    v33 = *(_QWORD *)(v19 + 40);
    v32 = *(_QWORD *)(v19 + 48);
    v34 = __swift_project_boxed_opaque_existential_1(v18, v33);
    v35 = v30;
    v36 = *(_QWORD *)(v33 - 8);
    v37 = swift_task_alloc();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v36 + 16))(v37, v34, v33);
    v38 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v32 + 8) + 64))(v33);
    v40 = v39;
    v41 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v30 = v35;
    v41(v37, v33);
    swift_task_dealloc();
    *(_QWORD *)(v0 + 600) = sub_23E1FD768(v38, v40, (uint64_t *)v156);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v31 + 12) = 2080;
    sub_23E288764();
    v42 = sub_23E538318();
    *(_QWORD *)(v0 + 608) = sub_23E1FD768(v42, v43, (uint64_t *)v156);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v136, v29);
    _os_log_impl(&dword_23E1DF000, v25, typea, "attempt to toggle alarm %s for parent %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v138, -1, -1);
    MEMORY[0x24264FEBC](v31, -1, -1);

    v18 = v147;
  }
  else
  {
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v28, v29);

  }
  v67 = *(_QWORD *)(v0 + 784);
  v139 = *(_QWORD *)(v0 + 752);
  v68 = *(_QWORD *)(v0 + 744);
  v153 = *(_QWORD *)(v0 + 736);
  v135 = *(_QWORD *)(v0 + 720);
  v137 = *(void **)(v0 + 640);
  v69 = *(_QWORD *)(v0 + 632);
  v133 = v69;
  swift_beginAccess();
  v71 = *(_QWORD *)(v30 + 40);
  v70 = *(_QWORD *)(v30 + 48);
  __swift_project_boxed_opaque_existential_1(v18, v71);
  LOBYTE(v70) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v70 + 8) + 48))(v71);
  swift_endAccess();
  swift_beginAccess();
  v73 = *(_QWORD *)(v30 + 40);
  v72 = *(_QWORD *)(v30 + 48);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v73);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v72 + 64))((v70 & 1) == 0, v73, v72);
  swift_endAccess();
  v144 = v30;
  v74 = *(_QWORD *)(v30 + 40);
  v75 = *(_QWORD *)(v30 + 48);
  v76 = __swift_project_boxed_opaque_existential_1(v18, v74);
  v77 = *(_QWORD *)(v74 - 8);
  v78 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v77 + 16))(v78, v76, v74);
  v154(v67, v69, v68);
  sub_23E4A16D8(v78, v67, v74, *(_QWORD *)(v75 + 8), v153);
  swift_task_dealloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)v18, (uint64_t)v152);
  v81 = *(_QWORD *)(v0 + 304);
  v80 = *(_QWORD *)(v0 + 312);
  v82 = __swift_project_boxed_opaque_existential_1(v152, v81);
  *(_QWORD *)(v79 + 56) = v81;
  *(_QWORD *)(v79 + 64) = *(_QWORD *)(v80 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v79 + 32));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(boxed_opaque_existential_1, v82, v81);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v152);
  v84 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v135, 1, 1, v84);
  v154(v67, v133, v68);
  swift_bridgeObjectRetain();
  v85 = v137;
  v86 = sub_23E5378EC();
  v87 = *(unsigned __int8 *)(v139 + 80);
  v131 = ~v87;
  v88 = (v87 + 56) & ~v87;
  v128 = v87;
  v89 = swift_allocObject();
  v90 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v89 + 16) = v86;
  *(_QWORD *)(v89 + 24) = v90;
  *(_BYTE *)(v89 + 32) = 0;
  *(_QWORD *)(v89 + 40) = v79;
  *(_QWORD *)(v89 + 48) = v85;
  v151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32);
  v151(v89 + v88, v67, v68);
  sub_23E26D014(v135, (uint64_t)&unk_256D47110, v89);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_254332250 != -1)
    swift_once();
  v129 = *(_QWORD *)(v0 + 784);
  v130 = *(_QWORD *)(v0 + 760);
  v91 = *(_QWORD *)(v0 + 744);
  v92 = *(_QWORD *)(v0 + 728);
  v93 = *(_QWORD *)(v0 + 712);
  v125 = *(_QWORD *)(v0 + 736);
  v126 = *(_QWORD *)(v0 + 704);
  v127 = *(_QWORD *)(v0 + 696);
  v94 = *(_QWORD *)(v0 + 688);
  v95 = *(_QWORD *)(v0 + 680);
  v96 = *(_QWORD *)(v0 + 672);
  v97 = *(_QWORD *)(v0 + 664);
  v132 = *(void **)(v0 + 640);
  v134 = *(_QWORD *)(v0 + 648);
  v98 = *(NSObject **)(v0 + 632);
  log = v98;
  v99 = __swift_project_value_buffer(v96, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v94, v99, v96);
  type = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44510);
  v100 = *(int *)(type + 48);
  v154(v97, (uint64_t)v98, v91);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v101 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = xmmword_23E539650;
  v140 = v101;
  sub_23E1E2F50(v125, v102 + v101, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)(v97 + v100) = v102;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
  (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v93, v127);
  sub_23E1FF9C8((uint64_t)v147, (uint64_t)v145);
  v103 = *(_QWORD *)(v0 + 464);
  v104 = __swift_project_boxed_opaque_existential_1(v145, v103);
  v105 = *(_QWORD *)(v0 + 64);
  v106 = *(_OWORD *)(v0 + 32);
  v156[0] = *(_OWORD *)(v0 + 16);
  v156[1] = v106;
  v156[2] = *(_OWORD *)(v0 + 48);
  v157 = v105;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D470E8);
  v108 = sub_23E4B6284((uint64_t)v104, v107, v103);
  v109 = v91;
  v124 = v91;
  v154(v129, (uint64_t)log, v91);
  v110 = (v128 + 24) & v131;
  v111 = swift_allocObject();
  *(_QWORD *)(v111 + 16) = v144;
  v151(v111 + v110, v129, v109);
  *(_QWORD *)(v0 + 224) = sub_23E43EA60;
  *(_QWORD *)(v0 + 232) = v111;
  *(_QWORD *)(v0 + 192) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 200) = 1107296256;
  *(_QWORD *)(v0 + 208) = sub_23E433A44;
  *(_QWORD *)(v0 + 216) = &block_descriptor_48;
  v112 = _Block_copy((const void *)(v0 + 192));
  swift_retain();
  swift_release();
  v149 = objc_msgSend(v108, sel_addSuccessBlock_, v112);
  _Block_release(v112);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v145);
  v154(v129, (uint64_t)log, v124);
  sub_23E1FF9C8(v0 + 400, (uint64_t)v146);
  v113 = (v130 + v110 + 7) & 0xFFFFFFFFFFFFFFF8;
  v114 = (v113 + 47) & 0xFFFFFFFFFFFFFFF8;
  v115 = swift_allocObject();
  *(_QWORD *)(v115 + 16) = v144;
  v151(v115 + v110, v129, v124);
  sub_23E1E6C84(v146, v115 + v113);
  *(_QWORD *)(v115 + v114) = v132;
  *(_QWORD *)(v115 + ((v114 + 15) & 0xFFFFFFFFFFFFFFF8)) = v134;
  *(_QWORD *)(v0 + 176) = sub_23E43EB48;
  *(_QWORD *)(v0 + 184) = v115;
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 152) = 1107296256;
  *(_QWORD *)(v0 + 160) = sub_23E433A44;
  *(_QWORD *)(v0 + 168) = &block_descriptor_54;
  v116 = _Block_copy((const void *)(v0 + 144));
  swift_retain();
  v117 = v132;
  swift_release();
  v118 = objc_msgSend(v149, sel_addFailureBlock_, v116);
  _Block_release(v116);

  if (qword_256D3ED08 != -1)
    swift_once();
  v119 = *(_QWORD *)(v0 + 736);
  v120 = *(_QWORD *)(v0 + 664);
  v121 = *(int *)(type + 48);
  v154(v120, *(_QWORD *)(v0 + 632), *(_QWORD *)(v0 + 744));
  v122 = swift_allocObject();
  *(_OWORD *)(v122 + 16) = xmmword_23E539650;
  sub_23E1E2F50(v119, v122 + v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)(v120 + v121) = v122;
  swift_storeEnumTagMultiPayload();
  v123 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 840) = v123;
  *v123 = v0;
  v123[1] = sub_23E4376AC;
  return sub_23E3F1F44(v0 + 584, *(_QWORD *)(v0 + 664), 0);
}

uint64_t sub_23E4376AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 664);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E437710()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 736);
  v2 = *(_QWORD **)(v0 + 616);
  swift_release();
  sub_23E223150(v0 + 16);
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  swift_release();
  *v2 = *(_QWORD *)(v0 + 584);
  __swift_destroy_boxed_opaque_existential_0(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E437804(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v9 = sub_23E5371A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_256D40BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  swift_retain_n();
  v10 = sub_23E537190();
  v11 = sub_23E537B20();
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc();
    v31 = v6;
    v14 = v13;
    v32 = swift_slowAlloc();
    v34 = v32;
    *(_DWORD *)v14 = 136315394;
    v28 = v14 + 4;
    v30 = v10;
    swift_beginAccess();
    v16 = a2[5];
    v15 = a2[6];
    v17 = __swift_project_boxed_opaque_existential_1(a2 + 2, v16);
    v29 = v12;
    v18 = *(_QWORD *)(v16 - 8);
    MEMORY[0x24BDAC7A8](v17);
    v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v15 + 8) + 64))(v16);
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
    v33 = sub_23E1FD768(v21, v23, &v34);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_23E288764();
    v24 = sub_23E538318();
    v33 = sub_23E1FD768(v24, v25, &v34);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v5);
    v26 = v30;
    _os_log_impl(&dword_23E1DF000, v30, (os_log_type_t)v29, "successfully toggled alarm %s for parent %s", (uint8_t *)v14, 0x16u);
    v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v27, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);

  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  }
}

uint64_t sub_23E437B14(void *a1, _QWORD *a2, uint64_t a3, _QWORD *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD v78[2];
  uint64_t v79;
  void *v80;
  int v81;
  os_log_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t updated;
  void (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;

  v90 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v97 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v96 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v95 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v93 = *(_QWORD *)(v11 - 8);
  v94 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v92 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v13);
  v88 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StaticAlarm();
  v91 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E536F80();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v87 = (char *)v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v78 - v22;
  if (qword_256D3ED18 != -1)
    swift_once();
  v100 = v17;
  v24 = sub_23E5371A8();
  __swift_project_value_buffer(v24, (uint64_t)qword_256D40BD0);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v25(v23, a3, v18);
  swift_retain();
  v26 = a1;
  swift_retain();
  v27 = a1;
  v28 = sub_23E537190();
  v29 = sub_23E537B08();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v99 = v25;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v79 = v19;
    v33 = v32;
    v83 = swift_slowAlloc();
    v102 = v83;
    *(_DWORD *)v33 = 136315650;
    v78[1] = v33 + 4;
    v82 = v28;
    swift_beginAccess();
    *(_QWORD *)&v85 = v18;
    v80 = a1;
    v34 = a2[5];
    v35 = a2[6];
    v36 = __swift_project_boxed_opaque_existential_1(a2 + 2, v34);
    v84 = a3;
    v37 = *(_QWORD *)(v34 - 8);
    MEMORY[0x24BDAC7A8](v36);
    v81 = v30;
    v39 = (char *)v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v39);
    v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v35 + 8) + 64))(v34);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v34);
    v25 = v99;
    v101 = sub_23E1FD768(v40, v42, &v102);
    sub_23E537CF4();
    v43 = v79;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    sub_23E288764();
    v44 = sub_23E538318();
    v101 = sub_23E1FD768(v44, v45, &v102);
    v18 = v85;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v18);
    *(_WORD *)(v33 + 22) = 2080;
    a3 = v84;
    v46 = v80;
    swift_getErrorValue();
    v47 = sub_23E5383E4();
    v101 = sub_23E1FD768(v47, v48, &v102);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    v49 = v82;
    _os_log_impl(&dword_23E1DF000, v82, (os_log_type_t)v81, "failed to toggle alarm %s for parent %s due to %s", (uint8_t *)v33, 0x20u);
    v50 = v83;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v50, -1, -1);
    MEMORY[0x24264FEBC](v33, -1, -1);

  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);

    v43 = v19;
  }
  v51 = a4[3];
  v52 = a4[4];
  v53 = __swift_project_boxed_opaque_existential_1(a4, v51);
  MEMORY[0x24BDAC7A8](v53);
  v55 = (char *)v78 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v56 + 16))(v55);
  v57 = (uint64_t)v87;
  v25(v87, a3, v18);
  sub_23E4A16D8((uint64_t)v55, v57, v51, v52, (uint64_t)v100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v58 = swift_allocObject();
  v85 = xmmword_23E539650;
  *(_OWORD *)(v58 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)a4, v58 + 32);
  v59 = sub_23E537934();
  v60 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v88, 1, 1, v59);
  v25((char *)v57, a3, v18);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v61 = v90;
  v62 = sub_23E5378EC();
  v63 = a3;
  v64 = (*(unsigned __int8 *)(v43 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v65 = swift_allocObject();
  v66 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v65 + 16) = v62;
  *(_QWORD *)(v65 + 24) = v66;
  *(_BYTE *)(v65 + 32) = 0;
  *(_QWORD *)(v65 + 40) = v58;
  *(_QWORD *)(v65 + 48) = v61;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v65 + v64, v57, v18);
  sub_23E26D014(v60, (uint64_t)&unk_256D47180, v65);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v67 = v89;
  v68 = __swift_project_value_buffer(v89, (uint64_t)qword_254332420);
  v69 = v95;
  v70 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v68, v67);
  v71 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
  v72 = v97;
  v99(v97, v63, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v73 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = v85;
  v75 = (uint64_t)v100;
  sub_23E1E2F50((uint64_t)v100, v74 + v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)&v72[v71] = v74;
  swift_storeEnumTagMultiPayload();
  v76 = v92;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v67);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v76, v94);
  return sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
}

uint64_t CoordinationDataModel.updateAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[85] = v2;
  v3[84] = a2;
  v3[83] = a1;
  v3[86] = swift_getObjectType();
  v3[87] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[88] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v3[89] = v4;
  v3[90] = *(_QWORD *)(v4 - 8);
  v3[91] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v3[92] = v5;
  v3[93] = *(_QWORD *)(v5 - 8);
  v3[94] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[95] = swift_task_alloc();
  v3[96] = *(_QWORD *)(type metadata accessor for StaticAlarm() - 8);
  v3[97] = swift_task_alloc();
  v6 = sub_23E536F80();
  v3[98] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[99] = v7;
  v3[100] = *(_QWORD *)(v7 + 64);
  v3[101] = swift_task_alloc();
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  v3[104] = sub_23E5378F8();
  v3[105] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4384EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  void *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 *v120;
  id aBlock;
  __int128 *v122;
  __int128 *v123;
  uint64_t v124;
  uint64_t v125;
  os_log_type_t type;
  void *typea;
  os_log_type_t typeb[8];
  os_log_t loga;
  os_log_t logb;
  os_log_t log;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  _QWORD *v139;
  _OWORD v140[3];
  uint64_t v141;

  v1 = *(_QWORD *)(v0 + 680);
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 672);
    swift_bridgeObjectRetain();
    v5 = sub_23E1E3300(v4);
    if ((v6 & 1) != 0)
    {
      v7 = *(void **)(v0 + 664);
      v8 = (__int128 *)(*(_QWORD *)(v3 + 56) + (v5 << 7));
      v9 = v8[3];
      v11 = *v8;
      v10 = v8[1];
      *(_OWORD *)(v0 + 48) = v8[2];
      *(_OWORD *)(v0 + 64) = v9;
      *(_OWORD *)(v0 + 16) = v11;
      *(_OWORD *)(v0 + 32) = v10;
      v12 = v8[7];
      v14 = v8[4];
      v13 = v8[5];
      *(_OWORD *)(v0 + 112) = v8[6];
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      sub_23E223058(v0 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 640) = v7;
      sub_23E282870();
      v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v135 = v0 + 16;
        v16 = *(_QWORD *)(v0 + 824);
        v17 = *(_QWORD *)(v0 + 792);
        v136 = *(_QWORD *)(v0 + 784);
        v18 = *(_QWORD *)(v0 + 672);
        sub_23E1E6C84((__int128 *)(v0 + 280), v0 + 240);
        v20 = *(_QWORD *)(v0 + 264);
        v19 = *(_QWORD *)(v0 + 272);
        v139 = (_QWORD *)(v0 + 240);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 240), v20);
        (*(void (**)(uint64_t, uint64_t))(v19 + 56))(v20, v19);
        sub_23E281AF0(v16, v18, v0 + 360);
        v21 = *(NSObject **)(v17 + 8);
        ((void (*)(uint64_t, uint64_t))v21)(v16, v136);
        if (*(_QWORD *)(v0 + 384))
        {
          v124 = v0 + 320;
          sub_23E1E6C84((__int128 *)(v0 + 360), v0 + 320);
          if (qword_256D3ED18 != -1)
            swift_once();
          v123 = (__int128 *)(v0 + 440);
          v122 = (__int128 *)(v0 + 480);
          v22 = *(_QWORD *)(v0 + 816);
          v23 = *(_QWORD *)(v0 + 792);
          v120 = (__int128 *)(v0 + 560);
          v24 = *(_QWORD *)(v0 + 784);
          v25 = *(_QWORD *)(v0 + 672);
          v26 = sub_23E5371A8();
          __swift_project_value_buffer(v26, (uint64_t)qword_256D40BD0);
          v27 = (_QWORD *)(v0 + 240);
          sub_23E1FF9C8((uint64_t)v139, v0 + 520);
          v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
          v28(v22, v25, v24);
          v29 = sub_23E537190();
          v30 = sub_23E537B20();
          v31 = os_log_type_enabled(v29, v30);
          v32 = *(_QWORD *)(v0 + 816);
          v33 = *(_QWORD *)(v0 + 784);
          v137 = v28;
          if (v31)
          {
            v34 = swift_slowAlloc();
            v132 = swift_slowAlloc();
            *(_QWORD *)&v140[0] = v132;
            *(_DWORD *)v34 = 136315394;
            v35 = *(_QWORD *)(v0 + 544);
            loga = v21;
            v36 = *(_QWORD *)(v0 + 552);
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 520), v35);
            v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 64))(v35, v36);
            *(_QWORD *)(v0 + 648) = sub_23E1FD768(v37, v38, (uint64_t *)v140);
            sub_23E537CF4();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v0 + 520);
            *(_WORD *)(v34 + 12) = 2080;
            sub_23E288764();
            v39 = sub_23E538318();
            *(_QWORD *)(v0 + 656) = sub_23E1FD768(v39, v40, (uint64_t *)v140);
            sub_23E537CF4();
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))loga)(v32, v33);
            _os_log_impl(&dword_23E1DF000, v29, v30, "attempt to update alarm %s for parent %s", (uint8_t *)v34, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24264FEBC](v132, -1, -1);
            v41 = v34;
            v27 = (_QWORD *)(v0 + 240);
            MEMORY[0x24264FEBC](v41, -1, -1);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_0(v0 + 520);
            ((void (*)(uint64_t, uint64_t))v21)(v32, v33);
          }

          v61 = *(_QWORD *)(v0 + 824);
          v133 = *(_QWORD *)(v0 + 800);
          v62 = *(_QWORD *)(v0 + 784);
          v114 = *(_QWORD *)(v0 + 776);
          v116 = *(_QWORD *)(v0 + 760);
          typea = *(void **)(v0 + 680);
          logb = *(os_log_t *)(v0 + 792);
          v63 = *(_QWORD *)(v0 + 672);
          v118 = v63;
          v64 = *(_QWORD *)(v0 + 264);
          v65 = *(_QWORD *)(v0 + 272);
          v66 = __swift_project_boxed_opaque_existential_1(v27, v64);
          v67 = *(_QWORD *)(v64 - 8);
          v68 = (uint64_t)v27;
          v69 = swift_task_alloc();
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v67 + 16))(v69, v66, v64);
          v137(v61, v63, v62);
          sub_23E4A16D8(v69, v61, v64, v65, v114);
          swift_task_dealloc();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
          v70 = swift_allocObject();
          *(_OWORD *)(v70 + 16) = xmmword_23E539650;
          sub_23E1FF9C8(v68, v70 + 32);
          v71 = sub_23E537934();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v116, 1, 1, v71);
          v72 = v62;
          v137(v61, v118, v62);
          swift_bridgeObjectRetain();
          v73 = typea;
          v74 = sub_23E5378EC();
          v75 = (LOBYTE(logb[10].isa) + 56) & ~(unint64_t)LOBYTE(logb[10].isa);
          v119 = v75 + v133;
          v76 = swift_allocObject();
          v77 = MEMORY[0x24BEE6930];
          *(_QWORD *)(v76 + 16) = v74;
          *(_QWORD *)(v76 + 24) = v77;
          *(_BYTE *)(v76 + 32) = 0;
          *(_QWORD *)(v76 + 40) = v70;
          *(_QWORD *)(v76 + 48) = v73;
          v134 = v75;
          log = (os_log_t)logb[4].isa;
          ((void (*)(unint64_t, uint64_t, uint64_t))log)(v76 + v75, v61, v72);
          sub_23E26D014(v116, (uint64_t)&unk_256D47120, v76);
          swift_release();
          swift_bridgeObjectRelease();
          if (qword_254332250 != -1)
            swift_once();
          v78 = *(_QWORD *)(v0 + 784);
          v111 = v78;
          v112 = *(_QWORD *)(v0 + 824);
          v79 = *(_QWORD *)(v0 + 776);
          v80 = *(_QWORD *)(v0 + 768);
          v108 = *(_QWORD *)(v0 + 752);
          v109 = *(_QWORD *)(v0 + 744);
          v110 = *(_QWORD *)(v0 + 736);
          v81 = *(_QWORD *)(v0 + 728);
          v82 = *(_QWORD *)(v0 + 720);
          v83 = *(_QWORD *)(v0 + 712);
          v84 = *(_QWORD *)(v0 + 704);
          v115 = *(_QWORD *)(v0 + 688);
          v117 = v79;
          v113 = *(void **)(v0 + 680);
          v85 = *(_QWORD *)(v0 + 672);
          *(_QWORD *)typeb = v85;
          v86 = __swift_project_value_buffer(v83, (uint64_t)qword_254332420);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v81, v86, v83);
          v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
          v137(v84, v85, v78);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
          v88 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
          v89 = swift_allocObject();
          *(_OWORD *)(v89 + 16) = xmmword_23E539650;
          sub_23E1E2F50(v79, v89 + v88, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          *(_QWORD *)(v84 + v87) = v89;
          swift_storeEnumTagMultiPayload();
          sub_23E537940();
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
          (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
          v90 = *(_QWORD *)(v0 + 264);
          v91 = __swift_project_boxed_opaque_existential_1(v139, v90);
          v92 = *(_QWORD *)(v0 + 64);
          v93 = *(_OWORD *)(v0 + 32);
          v140[0] = *(_OWORD *)(v0 + 16);
          v140[1] = v93;
          v140[2] = *(_OWORD *)(v0 + 48);
          v141 = v92;
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D470E8);
          v95 = sub_23E4B6284((uint64_t)v91, v94, v90);
          sub_23E1FF9C8((uint64_t)v139, (uint64_t)v120);
          v137(v112, *(_QWORD *)typeb, v111);
          v96 = swift_allocObject();
          sub_23E1E6C84(v120, v96 + 16);
          ((void (*)(unint64_t, uint64_t, uint64_t))log)(v96 + v134, v112, v111);
          *(_QWORD *)(v0 + 176) = sub_23E43EBBC;
          *(_QWORD *)(v0 + 184) = v96;
          *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
          *(_QWORD *)(v0 + 152) = 1107296256;
          *(_QWORD *)(v0 + 160) = sub_23E433A44;
          *(_QWORD *)(v0 + 168) = &block_descriptor_66;
          v97 = _Block_copy((const void *)(v0 + 144));
          swift_release();
          aBlock = objc_msgSend(v95, sel_addSuccessBlock_, v97);
          _Block_release(v97);

          sub_23E1FF9C8((uint64_t)v139, (uint64_t)v122);
          v137(v112, *(_QWORD *)typeb, v111);
          sub_23E1FF9C8(v124, (uint64_t)v123);
          v98 = (v119 + 7) & 0xFFFFFFFFFFFFFFF8;
          v99 = (v98 + 47) & 0xFFFFFFFFFFFFFFF8;
          v100 = swift_allocObject();
          sub_23E1E6C84(v122, v100 + 16);
          ((void (*)(unint64_t, uint64_t, uint64_t))log)(v100 + v134, v112, v111);
          sub_23E1E6C84(v123, v100 + v98);
          *(_QWORD *)(v100 + v99) = v113;
          *(_QWORD *)(v100 + ((v99 + 15) & 0xFFFFFFFFFFFFFFF8)) = v115;
          *(_QWORD *)(v0 + 224) = sub_23E43EC78;
          *(_QWORD *)(v0 + 232) = v100;
          *(_QWORD *)(v0 + 192) = MEMORY[0x24BDAC760];
          *(_QWORD *)(v0 + 200) = 1107296256;
          *(_QWORD *)(v0 + 208) = sub_23E433A44;
          *(_QWORD *)(v0 + 216) = &block_descriptor_72;
          v101 = _Block_copy((const void *)(v0 + 192));
          v102 = v113;
          swift_release();
          v103 = objc_msgSend(aBlock, sel_addFailureBlock_, v101);
          _Block_release(v101);

          sub_23E223150(v135);
          sub_23E1E2FA0(v117, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          __swift_destroy_boxed_opaque_existential_0(v124);
          v104 = v0 + 240;
        }
        else
        {
          sub_23E1E7C64(v0 + 360, &qword_256D40BF0);
          if (qword_256D3ED18 != -1)
            swift_once();
          v42 = *(_QWORD *)(v0 + 808);
          v43 = *(_QWORD *)(v0 + 792);
          v44 = *(_QWORD *)(v0 + 784);
          v45 = *(_QWORD *)(v0 + 672);
          v46 = sub_23E5371A8();
          __swift_project_value_buffer(v46, (uint64_t)qword_256D40BD0);
          v47 = v0 + 240;
          sub_23E1FF9C8((uint64_t)v139, v0 + 400);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v42, v45, v44);
          v48 = sub_23E537190();
          v49 = sub_23E537B08();
          if (os_log_type_enabled(v48, v49))
          {
            v50 = *(_QWORD *)(v0 + 824);
            v125 = *(_QWORD *)(v0 + 808);
            v51 = *(_QWORD *)(v0 + 784);
            v52 = v21;
            v53 = swift_slowAlloc();
            v138 = swift_slowAlloc();
            *(_QWORD *)&v140[0] = v138;
            *(_DWORD *)v53 = 136315394;
            v54 = *(_QWORD *)(v0 + 424);
            v55 = *(_QWORD *)(v0 + 432);
            __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 400), v54);
            type = v49;
            (*(void (**)(uint64_t, uint64_t))(v55 + 56))(v54, v55);
            sub_23E288764();
            v56 = sub_23E538318();
            v58 = v57;
            ((void (*)(uint64_t, uint64_t))v52)(v50, v51);
            *(_QWORD *)(v0 + 632) = sub_23E1FD768(v56, v58, (uint64_t *)v140);
            sub_23E537CF4();
            v47 = v0 + 240;
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v0 + 400);
            *(_WORD *)(v53 + 12) = 2080;
            v59 = sub_23E538318();
            *(_QWORD *)(v0 + 624) = sub_23E1FD768(v59, v60, (uint64_t *)v140);
            sub_23E537CF4();
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))v52)(v125, v51);
            _os_log_impl(&dword_23E1DF000, v48, type, "failed to found alarm with %s for parent %s", (uint8_t *)v53, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24264FEBC](v138, -1, -1);
            MEMORY[0x24264FEBC](v53, -1, -1);

            sub_23E223150(v135);
          }
          else
          {
            v105 = *(_QWORD *)(v0 + 808);
            v106 = *(_QWORD *)(v0 + 784);
            sub_23E223150(v135);
            __swift_destroy_boxed_opaque_existential_0(v0 + 400);
            ((void (*)(uint64_t, uint64_t))v21)(v105, v106);

          }
          v104 = v47;
        }
        __swift_destroy_boxed_opaque_existential_0(v104);
      }
      else
      {
        *(_QWORD *)(v0 + 312) = 0;
        *(_OWORD *)(v0 + 280) = 0u;
        *(_OWORD *)(v0 + 296) = 0u;
        sub_23E223150(v0 + 16);
        sub_23E1E7C64(v0 + 280, &qword_256D40BF0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4391CC(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t);
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE v73[4];
  int v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _QWORD *v80;
  _BYTE *v81;
  id v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t updated;
  void (*v92)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[3];
  uint64_t v97;
  uint64_t v98;

  v82 = a5;
  v80 = a4;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v90 = &v73[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v88 = *(_QWORD *)(v9 - 8);
  v89 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v87 = &v73[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v84 = &v73[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v13);
  v81 = &v73[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for StaticAlarm();
  v83 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v73[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_23E536F80();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v78 = &v73[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = &v73[-v22];
  if (qword_256D3ED18 != -1)
    swift_once();
  v93 = v17;
  v24 = sub_23E5371A8();
  __swift_project_value_buffer(v24, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v96);
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v19 + 16);
  v25(v23, a3, v18);
  v26 = a1;
  v27 = a1;
  v28 = sub_23E537190();
  v29 = sub_23E537B08();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v92 = v25;
  v77 = v19;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v95 = v75;
    *(_DWORD *)v32 = 136315650;
    *(_QWORD *)&v76 = a3;
    v34 = v97;
    v33 = v98;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    v35 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 64);
    v74 = v30;
    v36 = v35(v34, v33);
    v94 = sub_23E1FD768(v36, v37, &v95);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
    *(_WORD *)(v32 + 12) = 2080;
    sub_23E288764();
    v38 = sub_23E538318();
    v94 = sub_23E1FD768(v38, v39, &v95);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v23, v18);
    *(_WORD *)(v32 + 22) = 2080;
    a3 = v76;
    swift_getErrorValue();
    v40 = sub_23E5383E4();
    v94 = sub_23E1FD768(v40, v41, &v95);
    v25 = v92;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v28, (os_log_type_t)v74, "failed to update alarm %s for parent %s due to %s", (uint8_t *)v32, 0x20u);
    v42 = v75;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v42, -1, -1);
    MEMORY[0x24264FEBC](v32, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v23, v18);

  }
  v43 = v80;
  v44 = v80[3];
  v45 = v80[4];
  v46 = __swift_project_boxed_opaque_existential_1(v80, v44);
  MEMORY[0x24BDAC7A8](v46);
  v48 = &v73[-((v47 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v49 + 16))(v48);
  v50 = (uint64_t)v78;
  v25(v78, a3, v18);
  sub_23E4A16D8((uint64_t)v48, v50, v44, v45, (uint64_t)v93);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB0);
  v51 = swift_allocObject();
  v76 = xmmword_23E539650;
  *(_OWORD *)(v51 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)v43, v51 + 32);
  v52 = sub_23E537934();
  v53 = (uint64_t)v81;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v81, 1, 1, v52);
  v25((_BYTE *)v50, a3, v18);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v54 = v82;
  v55 = sub_23E5378EC();
  v56 = v77;
  v57 = a3;
  v58 = (*(unsigned __int8 *)(v77 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  v59 = swift_allocObject();
  v60 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v59 + 16) = v55;
  *(_QWORD *)(v59 + 24) = v60;
  *(_BYTE *)(v59 + 32) = 0;
  *(_QWORD *)(v59 + 40) = v51;
  *(_QWORD *)(v59 + 48) = v54;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v56 + 32))(v59 + v58, v50, v18);
  sub_23E26D014(v53, (uint64_t)&unk_256D47178, v59);
  swift_bridgeObjectRelease();
  swift_release();
  v61 = v18;
  if (qword_254332250 != -1)
    swift_once();
  v62 = v89;
  v63 = __swift_project_value_buffer(v89, (uint64_t)qword_254332420);
  v65 = v87;
  v64 = v88;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v88 + 16))(v87, v63, v62);
  v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44510) + 48);
  v67 = v90;
  v92(v90, v57, v61);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D10);
  v68 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
  v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v76;
  v70 = (uint64_t)v93;
  sub_23E1E2F50((uint64_t)v93, v69 + v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *(_QWORD *)&v67[v66] = v69;
  swift_storeEnumTagMultiPayload();
  v71 = v84;
  sub_23E537940();
  (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v65, v62);
  (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v71, v86);
  return sub_23E1E2FA0(v70, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
}

uint64_t CoordinationDataModel.addTimer(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[70] = v2;
  v3[69] = a2;
  v3[68] = a1;
  v3[71] = swift_getObjectType();
  v3[72] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[73] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v3[74] = v4;
  v3[75] = *(_QWORD *)(v4 - 8);
  v3[76] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v3[77] = v5;
  v3[78] = *(_QWORD *)(v5 - 8);
  v3[79] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[80] = swift_task_alloc();
  sub_23E536F20();
  v3[81] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47130);
  v3[82] = swift_task_alloc();
  v6 = type metadata accessor for StaticTimer();
  v3[83] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[84] = v7;
  v3[85] = *(_QWORD *)(v7 + 64);
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v8 = sub_23E536F80();
  v3[88] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[89] = v9;
  v3[90] = *(_QWORD *)(v9 + 64);
  v3[91] = swift_task_alloc();
  v3[92] = swift_task_alloc();
  v3[93] = swift_task_alloc();
  v3[94] = sub_23E5378F8();
  v3[95] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E439B4C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  void *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  __int128 *v112;
  void *aBlock;
  id aBlocka;
  __int128 *v115;
  _QWORD *v116;
  void (*v117)(uint64_t, uint64_t);
  void *v118;
  uint64_t v119;
  uint64_t type;
  os_log_type_t v121[8];
  void (*v122)(unint64_t, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  _QWORD *v130;
  _OWORD v131[3];
  uint64_t v132;

  v1 = *((_QWORD *)v0 + 70);
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v4 = *((_QWORD *)v0 + 69);
    swift_bridgeObjectRetain();
    v5 = sub_23E1E3300(v4);
    if ((v6 & 1) != 0)
    {
      v7 = (void *)*((_QWORD *)v0 + 68);
      v8 = (__int128 *)(*(_QWORD *)(v3 + 56) + (v5 << 7));
      v9 = v8[3];
      v11 = *v8;
      v10 = v8[1];
      v0[3] = v8[2];
      v0[4] = v9;
      v0[1] = v11;
      v0[2] = v10;
      v12 = v8[7];
      v14 = v8[4];
      v13 = v8[5];
      v0[7] = v8[6];
      v0[8] = v12;
      v0[5] = v14;
      v0[6] = v13;
      sub_23E223058((uint64_t)(v0 + 1));
      swift_bridgeObjectRelease();
      *((_QWORD *)v0 + 65) = v7;
      sub_23E282870();
      v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v127 = (uint64_t)(v0 + 1);
        sub_23E1E6C84((__int128 *)((char *)v0 + 280), (uint64_t)(v0 + 15));
        if (qword_256D3ED18 != -1)
          swift_once();
        v16 = *((_QWORD *)v0 + 93);
        v17 = *((_QWORD *)v0 + 89);
        v18 = *((_QWORD *)v0 + 88);
        v19 = *((_QWORD *)v0 + 69);
        v20 = sub_23E5371A8();
        __swift_project_value_buffer(v20, (uint64_t)qword_256D40BD0);
        v130 = v0 + 15;
        sub_23E1FF9C8((uint64_t)(v0 + 15), (uint64_t)v0 + 440);
        v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
        v128(v16, v19, v18);
        v21 = sub_23E537190();
        v22 = sub_23E537B20();
        v23 = os_log_type_enabled(v21, v22);
        v24 = *((_QWORD *)v0 + 93);
        v25 = (_QWORD *)*((_QWORD *)v0 + 89);
        v26 = *((_QWORD *)v0 + 88);
        if (v23)
        {
          v27 = swift_slowAlloc();
          v123 = swift_slowAlloc();
          *(_QWORD *)&v131[0] = v123;
          *(_DWORD *)v27 = 136315394;
          v116 = v25;
          v29 = *((_QWORD *)v0 + 58);
          v28 = *((_QWORD *)v0 + 59);
          __swift_project_boxed_opaque_existential_1((_QWORD *)v0 + 55, v29);
          v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v29, v28);
          *((_QWORD *)v0 + 66) = sub_23E1FD768(v30, v31, (uint64_t *)v131);
          sub_23E537CF4();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v0 + 440);
          *(_WORD *)(v27 + 12) = 2080;
          sub_23E288764();
          v32 = sub_23E538318();
          *((_QWORD *)v0 + 67) = sub_23E1FD768(v32, v33, (uint64_t *)v131);
          sub_23E537CF4();
          swift_bridgeObjectRelease();
          v117 = (void (*)(uint64_t, uint64_t))v116[1];
          v117(v24, v26);
          _os_log_impl(&dword_23E1DF000, v21, v22, "attempt to add timer %s for parent %s", (uint8_t *)v27, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264FEBC](v123, -1, -1);
          MEMORY[0x24264FEBC](v27, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v0 + 440);
          v117 = (void (*)(uint64_t, uint64_t))v25[1];
          v117(v24, v26);
        }

        v34 = *((_QWORD *)v0 + 92);
        v35 = *((_QWORD *)v0 + 88);
        *(_QWORD *)v121 = *((_QWORD *)v0 + 84);
        v124 = *((_QWORD *)v0 + 83);
        v36 = *((_QWORD *)v0 + 82);
        v37 = *((_QWORD *)v0 + 81);
        v38 = *((_QWORD *)v0 + 69);
        v39 = *((_QWORD *)v0 + 33);
        v40 = v0;
        type = *((_QWORD *)v0 + 34);
        v41 = __swift_project_boxed_opaque_existential_1(v130, v39);
        v42 = *(_QWORD *)(v39 - 8);
        v43 = swift_task_alloc();
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v42 + 16))(v43, v41, v39);
        v128(v34, v38, v35);
        sub_23E536F08();
        sub_23E4BB578(v43, v34, v37, v39, type, v36);
        swift_task_dealloc();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v121 + 48))(v36, 1, v124) == 1)
        {
          v44 = *((_QWORD *)v40 + 91);
          v45 = *((_QWORD *)v40 + 88);
          v46 = *((_QWORD *)v40 + 69);
          sub_23E1E7C64(*((_QWORD *)v40 + 82), &qword_256D47130);
          v47 = v130;
          sub_23E1FF9C8((uint64_t)v130, (uint64_t)v40 + 360);
          v128(v44, v46, v45);
          v48 = sub_23E537190();
          v49 = sub_23E537B08();
          v50 = os_log_type_enabled(v48, v49);
          v51 = *((_QWORD *)v40 + 91);
          v52 = *((_QWORD *)v40 + 88);
          if (v50)
          {
            v53 = swift_slowAlloc();
            v129 = swift_slowAlloc();
            *(_QWORD *)&v131[0] = v129;
            *(_DWORD *)v53 = 136315394;
            v54 = *((_QWORD *)v40 + 48);
            v55 = *((_QWORD *)v40 + 49);
            __swift_project_boxed_opaque_existential_1((_QWORD *)v40 + 45, v54);
            v56 = v54;
            v47 = v130;
            v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 72))(v56, v55);
            *((_QWORD *)v40 + 64) = sub_23E1FD768(v57, v58, (uint64_t *)v131);
            sub_23E537CF4();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v40 + 360);
            *(_WORD *)(v53 + 12) = 2080;
            sub_23E288764();
            v59 = sub_23E538318();
            *((_QWORD *)v40 + 63) = sub_23E1FD768(v59, v60, (uint64_t *)v131);
            sub_23E537CF4();
            swift_bridgeObjectRelease();
            v117(v51, v52);
            _os_log_impl(&dword_23E1DF000, v48, v49, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v53, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24264FEBC](v129, -1, -1);
            MEMORY[0x24264FEBC](v53, -1, -1);

            sub_23E223150(v127);
          }
          else
          {
            sub_23E223150(v127);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v40 + 360);
            v117(v51, v52);

          }
          v0 = v40;
          v100 = (uint64_t)v47;
        }
        else
        {
          v112 = v40 + 20;
          aBlock = v40 + 9;
          v61 = *((_QWORD *)v40 + 92);
          v115 = v40 + 25;
          v118 = v40 + 12;
          v125 = *((_QWORD *)v40 + 90);
          v62 = *((_QWORD *)v40 + 89);
          v63 = *((_QWORD *)v40 + 88);
          v64 = *((_QWORD *)v40 + 80);
          v65 = (void *)*((_QWORD *)v40 + 70);
          v66 = *((_QWORD *)v40 + 69);
          sub_23E1E2FDC(*((_QWORD *)v40 + 82), *((_QWORD *)v40 + 87), (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
          v67 = swift_allocObject();
          *(_OWORD *)(v67 + 16) = xmmword_23E539650;
          sub_23E1FF9C8((uint64_t)v130, v67 + 32);
          v68 = sub_23E537934();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v64, 1, 1, v68);
          v128(v61, v66, v63);
          swift_bridgeObjectRetain();
          v69 = v65;
          v70 = sub_23E5378EC();
          v71 = (*(unsigned __int8 *)(v62 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
          v111 = v71 + v125;
          v72 = swift_allocObject();
          v73 = MEMORY[0x24BEE6930];
          *(_QWORD *)(v72 + 16) = v70;
          *(_QWORD *)(v72 + 24) = v73;
          *(_BYTE *)(v72 + 32) = 0;
          *(_QWORD *)(v72 + 40) = v67;
          *(_QWORD *)(v72 + 48) = v69;
          v122 = *(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 32);
          v126 = v71;
          v122(v72 + v71, v61, v63);
          sub_23E26D014(v64, (uint64_t)&unk_256D44528, v72);
          swift_release();
          swift_bridgeObjectRelease();
          v0 = v40;
          if (qword_254332250 != -1)
            swift_once();
          v106 = *((_QWORD *)v40 + 92);
          v74 = *((_QWORD *)v40 + 88);
          v75 = *((_QWORD *)v40 + 87);
          v119 = v75;
          v107 = *((_QWORD *)v40 + 86);
          v108 = *((_QWORD *)v40 + 85);
          v76 = *((_QWORD *)v40 + 84);
          v102 = *((_QWORD *)v40 + 79);
          v103 = *((_QWORD *)v40 + 78);
          v104 = *((_QWORD *)v40 + 77);
          v77 = *((_QWORD *)v40 + 76);
          v78 = *((_QWORD *)v40 + 75);
          v79 = *((_QWORD *)v40 + 74);
          v80 = *((_QWORD *)v0 + 73);
          v109 = (void *)*((_QWORD *)v0 + 70);
          v110 = *((_QWORD *)v0 + 71);
          v81 = *((_QWORD *)v0 + 69);
          v105 = v81;
          v82 = __swift_project_value_buffer(v79, (uint64_t)qword_254332420);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v77, v82, v79);
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
          v128(v80, v81, v74);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
          v84 = *(unsigned __int8 *)(v76 + 80);
          v85 = swift_allocObject();
          *(_OWORD *)(v85 + 16) = xmmword_23E539650;
          sub_23E1E2F50(v75, v85 + ((v84 + 32) & ~v84), (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          *(_QWORD *)(v80 + v83) = v85;
          swift_storeEnumTagMultiPayload();
          sub_23E537940();
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
          v86 = *((_QWORD *)v0 + 33);
          v87 = __swift_project_boxed_opaque_existential_1(v130, v86);
          v88 = *((_QWORD *)v0 + 15);
          v89 = *(__int128 *)((char *)v0 + 88);
          v131[0] = *(__int128 *)((char *)v0 + 72);
          v131[1] = v89;
          v131[2] = *(__int128 *)((char *)v0 + 104);
          v132 = v88;
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47138);
          v91 = sub_23E4B5C1C((uint64_t)v87, v90, v86);
          sub_23E1FF9C8((uint64_t)v130, (uint64_t)v112);
          v128(v106, v105, v74);
          v92 = swift_allocObject();
          sub_23E1E6C84(v112, v92 + 16);
          v122(v92 + v126, v106, v74);
          *((_QWORD *)v0 + 22) = sub_23E43ECEC;
          *((_QWORD *)v0 + 23) = v92;
          *((_QWORD *)v0 + 18) = MEMORY[0x24BDAC760];
          *((_QWORD *)v0 + 19) = 1107296256;
          *((_QWORD *)v0 + 20) = sub_23E433A44;
          *((_QWORD *)v0 + 21) = &block_descriptor_82;
          v93 = _Block_copy(aBlock);
          swift_release();
          aBlocka = objc_msgSend(v91, sel_addSuccessBlock_, v93);
          _Block_release(v93);

          sub_23E1FF9C8((uint64_t)v130, (uint64_t)v115);
          v128(v106, v105, v74);
          sub_23E1E2F50(v119, v107, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          v94 = (v111 + 7) & 0xFFFFFFFFFFFFFFF8;
          v95 = (v94 + v84 + 8) & ~v84;
          v96 = swift_allocObject();
          sub_23E1E6C84(v115, v96 + 16);
          v122(v96 + v126, v106, v74);
          *(_QWORD *)(v96 + v94) = v109;
          sub_23E1E2FDC(v107, v96 + v95, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          *(_QWORD *)(v96 + ((v108 + v95 + 7) & 0xFFFFFFFFFFFFFFF8)) = v110;
          *((_QWORD *)v0 + 28) = sub_23E43ED04;
          *((_QWORD *)v0 + 29) = v96;
          *((_QWORD *)v0 + 24) = MEMORY[0x24BDAC760];
          *((_QWORD *)v0 + 25) = 1107296256;
          *((_QWORD *)v0 + 26) = sub_23E433A44;
          *((_QWORD *)v0 + 27) = &block_descriptor_88;
          v97 = _Block_copy(v118);
          v98 = v109;
          swift_release();
          v99 = objc_msgSend(aBlocka, sel_addFailureBlock_, v97);
          _Block_release(v97);

          sub_23E223150(v127);
          sub_23E1E2FA0(v119, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
          v100 = (uint64_t)v130;
        }
        __swift_destroy_boxed_opaque_existential_0(v100);
      }
      else
      {
        *((_QWORD *)v0 + 39) = 0;
        *(__int128 *)((char *)v0 + 280) = 0u;
        *(__int128 *)((char *)v0 + 296) = 0u;
        sub_23E223150((uint64_t)(v0 + 1));
        sub_23E1E7C64((uint64_t)v0 + 280, &qword_256D40C00);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*((uint64_t (**)(void))v0 + 1))();
}

uint64_t sub_23E43A7B8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE v61[12];
  int v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t updated;
  uint64_t v78;
  void (*v79)(_BYTE *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[3];
  uint64_t v83;
  uint64_t v84;

  v78 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v76 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v73 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v71 = *(_QWORD *)(v12 - 8);
  v72 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v70 = &v61[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v68 = &v61[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v67 = &v61[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v66 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v61[-v20];
  if (qword_256D3ED18 != -1)
    swift_once();
  v22 = sub_23E5371A8();
  __swift_project_value_buffer(v22, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v82);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v69 = a3;
  v79 = v23;
  v23(v21, a3, v16);
  v24 = a1;
  v25 = a1;
  v26 = sub_23E537190();
  v27 = sub_23E537B08();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v62 = v28;
    v30 = v29;
    v63 = swift_slowAlloc();
    v81 = v63;
    *(_DWORD *)v30 = 136315650;
    v64 = a2;
    *(_QWORD *)&v65 = a4;
    v32 = v83;
    v31 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 72))(v32, v31);
    v80 = sub_23E1FD768(v33, v34, &v81);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v82);
    *(_WORD *)(v30 + 12) = 2080;
    sub_23E288764();
    v35 = sub_23E538318();
    v80 = sub_23E1FD768(v35, v36, &v81);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);
    *(_WORD *)(v30 + 22) = 2080;
    a2 = v64;
    swift_getErrorValue();
    v37 = sub_23E5383E4();
    v80 = sub_23E1FD768(v37, v38, &v81);
    a4 = (void *)v65;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v26, (os_log_type_t)v62, "failed to add timer %s for parent %s due to %s", (uint8_t *)v30, 0x20u);
    v39 = v63;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v39, -1, -1);
    MEMORY[0x24264FEBC](v30, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v82);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
  v40 = swift_allocObject();
  v65 = xmmword_23E539650;
  *(_OWORD *)(v40 + 16) = xmmword_23E539650;
  sub_23E1FF9C8(a2, v40 + 32);
  v41 = sub_23E537934();
  v42 = (uint64_t)v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v68, 1, 1, v41);
  v43 = v67;
  v44 = v69;
  v79(v67, v69, v16);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v45 = a4;
  v46 = sub_23E5378EC();
  v47 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v48 = swift_allocObject();
  v49 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v48 + 16) = v46;
  *(_QWORD *)(v48 + 24) = v49;
  *(_BYTE *)(v48 + 32) = 1;
  *(_QWORD *)(v48 + 40) = v40;
  *(_QWORD *)(v48 + 48) = v45;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v17 + 32))(v48 + v47, v43, v16);
  sub_23E26D014(v42, (uint64_t)&unk_256D47170, v48);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v50 = v75;
  v51 = __swift_project_value_buffer(v75, (uint64_t)qword_254332420);
  v53 = v73;
  v52 = v74;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v74 + 16))(v73, v51, v50);
  v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
  v55 = v76;
  v79(v76, v44, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
  v56 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticTimer() - 8) + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v65;
  sub_23E1E2F50(v78, v58 + v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)&v55[v54] = v58;
  swift_storeEnumTagMultiPayload();
  v59 = v70;
  sub_23E537940();
  (*(void (**)(_BYTE *, uint64_t))(v52 + 8))(v53, v50);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v71 + 8))(v59, v72);
}

uint64_t CoordinationDataModel.toggleTimerState(staticTimerID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[88] = v3;
  v4[87] = a3;
  v4[86] = a2;
  v4[85] = a1;
  v4[89] = swift_getObjectType();
  v4[90] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[91] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v4[92] = v5;
  v4[93] = *(_QWORD *)(v5 - 8);
  v4[94] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v4[95] = v6;
  v4[96] = *(_QWORD *)(v6 - 8);
  v4[97] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v4[98] = swift_task_alloc();
  sub_23E536F20();
  v4[99] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47130);
  v4[100] = swift_task_alloc();
  v7 = type metadata accessor for StaticTimer();
  v4[101] = v7;
  v4[102] = *(_QWORD *)(v7 - 8);
  v4[103] = swift_task_alloc();
  v8 = sub_23E536F80();
  v4[104] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[105] = v9;
  v4[106] = *(_QWORD *)(v9 + 64);
  v4[107] = swift_task_alloc();
  v4[108] = swift_task_alloc();
  v4[109] = swift_task_alloc();
  v4[110] = swift_task_alloc();
  v4[111] = swift_task_alloc();
  v4[112] = swift_task_alloc();
  v4[113] = sub_23E5378F8();
  v4[114] = sub_23E5378EC();
  v4[115] = sub_23E5378B0();
  v4[116] = v10;
  return swift_task_switch();
}

uint64_t sub_23E43B07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  void *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  __int128 *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  __int128 *v146;
  void (*v147)(uint64_t, uint64_t);
  __int128 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t (**v155)(uint64_t, _QWORD);
  id v156;
  uint64_t v157;
  uint64_t v158;
  os_log_type_t typea[8];
  os_log_type_t type[8];
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, void *);
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  void (*v169)(uint64_t, uint64_t, id);
  os_log_type_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  _OWORD v175[3];
  uint64_t v176;

  v1 = *(_QWORD *)(v0 + 704) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_10;
  v3 = *(_QWORD *)(v0 + 696);
  swift_bridgeObjectRetain();
  v4 = sub_23E1E3300(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
LABEL_11:
    **(_QWORD **)(v0 + 680) = 0;
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 696);
  v7 = *(_QWORD *)(v0 + 688);
  v8 = (__int128 *)(*(_QWORD *)(v2 + 56) + (v4 << 7));
  v9 = v8[3];
  v11 = *v8;
  v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  v12 = v8[7];
  v14 = v8[4];
  v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_23E223058(v0 + 16);
  swift_bridgeObjectRelease();
  sub_23E281AFC(v7, v6, v0 + 240);
  v174 = v0;
  if (!*(_QWORD *)(v0 + 264))
  {
    swift_release();
    sub_23E1E7C64(v0 + 240, &qword_256D40C00);
    if (qword_256D3ED18 != -1)
      swift_once();
    v34 = *(_QWORD *)(v0 + 864);
    v35 = *(_QWORD *)(v0 + 856);
    v36 = *(_QWORD *)(v0 + 840);
    v37 = *(_QWORD *)(v0 + 832);
    v38 = *(_QWORD *)(v0 + 696);
    v39 = *(_QWORD *)(v0 + 688);
    v40 = sub_23E5371A8();
    __swift_project_value_buffer(v40, (uint64_t)qword_256D40BD0);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v41(v34, v39, v37);
    v41(v35, v38, v37);
    v42 = sub_23E537190();
    v43 = sub_23E537B08();
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 864);
    v46 = *(_QWORD *)(v0 + 856);
    v47 = *(_QWORD *)(v0 + 840);
    v48 = *(_QWORD *)(v0 + 832);
    if (v44)
    {
      v170 = v43;
      v49 = swift_slowAlloc();
      v173 = swift_slowAlloc();
      *(_QWORD *)&v175[0] = v173;
      *(_DWORD *)v49 = 136315394;
      sub_23E288764();
      v50 = sub_23E538318();
      *(_QWORD *)(v0 + 648) = sub_23E1FD768(v50, v51, (uint64_t *)v175);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v52(v45, v48);
      *(_WORD *)(v49 + 12) = 2080;
      v53 = sub_23E538318();
      *(_QWORD *)(v0 + 640) = sub_23E1FD768(v53, v54, (uint64_t *)v175);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52(v46, v48);
      _os_log_impl(&dword_23E1DF000, v42, v170, "failed to found timer with %s for parent %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v173, -1, -1);
      MEMORY[0x24264FEBC](v49, -1, -1);

      sub_23E223150(v0 + 16);
    }
    else
    {
      sub_23E223150(v0 + 16);
      v130 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v130(v45, v48);
      v130(v46, v48);

    }
    goto LABEL_11;
  }
  v167 = (_QWORD *)(v0 + 400);
  v172 = (uint64_t *)(v0 + 440);
  sub_23E1E6C84((__int128 *)(v0 + 240), v0 + 280);
  if (qword_256D3ED18 != -1)
    swift_once();
  v15 = *(_QWORD *)(v0 + 896);
  v16 = *(_QWORD *)(v0 + 840);
  v17 = *(void **)(v0 + 832);
  v18 = *(_QWORD *)(v0 + 696);
  v19 = sub_23E5371A8();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D40BD0);
  v168 = (_QWORD *)(v0 + 280);
  sub_23E1FF9C8(v0 + 280, v0 + 560);
  v169 = *(void (**)(uint64_t, uint64_t, id))(v16 + 16);
  v169(v15, v18, v17);
  v20 = sub_23E537190();
  v21 = sub_23E537B20();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 896);
  v24 = *(_QWORD *)(v0 + 840);
  v25 = *(_QWORD *)(v0 + 832);
  v149 = v0 + 656;
  v163 = v0 + 16;
  if (v22)
  {
    v26 = swift_slowAlloc();
    v161 = swift_slowAlloc();
    *(_QWORD *)&v175[0] = v161;
    *(_DWORD *)v26 = 136315394;
    v27 = *(_QWORD *)(v0 + 584);
    v28 = *(_QWORD *)(v0 + 592);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 560), v27);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v27, v28);
    *(_QWORD *)(v0 + 664) = sub_23E1FD768(v29, v30, (uint64_t *)v175);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 560);
    *(_WORD *)(v26 + 12) = 2080;
    sub_23E288764();
    v31 = sub_23E538318();
    *(_QWORD *)(v0 + 672) = sub_23E1FD768(v31, v32, (uint64_t *)v175);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v147 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v147(v23, v25);
    _os_log_impl(&dword_23E1DF000, v20, v21, "attempt to update timer %s for parent %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v161, -1, -1);
    MEMORY[0x24264FEBC](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 560);
    v147 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v147(v23, v25);
  }

  v152 = *(_QWORD *)(v0 + 888);
  v154 = *(id *)(v0 + 832);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 816);
  v162 = *(_QWORD *)(v0 + 808);
  v157 = *(_QWORD *)(v0 + 800);
  v55 = *(_QWORD *)(v0 + 792);
  v150 = *(_QWORD *)(v0 + 696);
  v56 = *(_QWORD *)(v0 + 304);
  v57 = *(_QWORD *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1(v168, v56);
  (*(void (**)(uint64_t, uint64_t))(v57 + 88))(v56, v57);
  v58 = *(_QWORD *)(v0 + 304);
  v59 = *(_QWORD *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1(v168, v58);
  v60 = *(_QWORD *)(v0 + 424);
  v61 = *(_QWORD *)(v0 + 432);
  v62 = __swift_project_boxed_opaque_existential_1(v167, v60);
  v63 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 96);
  *(_QWORD *)(v174 + 464) = v58;
  *(_QWORD *)(v174 + 472) = v59;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v172);
  v63(v62, v60, v61, v58, v59);
  __swift_project_boxed_opaque_existential_1(v172, *(_QWORD *)(v174 + 464));
  v65 = v152;
  v169(v152, v150, v154);
  sub_23E536F08();
  v66 = *(_QWORD *)(v58 - 8);
  v67 = swift_task_alloc();
  v151 = (uint64_t)boxed_opaque_existential_1;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v66 + 16))(v67, boxed_opaque_existential_1, v58);
  v153 = v58;
  v155 = (uint64_t (**)(uint64_t, _QWORD))v59;
  sub_23E4BB578(v67, v65, v55, v58, v59, v157);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)typea + 48))(v157, 1, v162) == 1)
  {
    v68 = (_QWORD *)(v174 + 480);
    v69 = *(_QWORD *)(v174 + 872);
    v70 = *(void **)(v174 + 832);
    v71 = *(_QWORD *)(v174 + 800);
    v72 = *(_QWORD *)(v174 + 696);
    swift_release();
    sub_23E1E7C64(v71, &qword_256D47130);
    v73 = (uint64_t)v172;
    sub_23E1FF9C8((uint64_t)v172, v174 + 480);
    v169(v69, v72, v70);
    v74 = sub_23E537190();
    v75 = sub_23E537B08();
    v76 = os_log_type_enabled(v74, v75);
    v77 = *(_QWORD *)(v174 + 872);
    v0 = v174;
    v78 = *(_QWORD *)(v174 + 832);
    if (v76)
    {
      v79 = swift_slowAlloc();
      v171 = swift_slowAlloc();
      *(_QWORD *)&v175[0] = v171;
      *(_DWORD *)v79 = 136315394;
      v81 = *(_QWORD *)(v174 + 504);
      v80 = *(_QWORD *)(v174 + 512);
      __swift_project_boxed_opaque_existential_1(v68, v81);
      v82 = v155[9](v81, v80);
      *(_QWORD *)(v174 + 632) = sub_23E1FD768(v82, v83, (uint64_t *)v175);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
      *(_WORD *)(v79 + 12) = 2080;
      sub_23E288764();
      v84 = sub_23E538318();
      *(_QWORD *)(v174 + 624) = sub_23E1FD768(v84, v85, (uint64_t *)v175);
      v73 = (uint64_t)v172;
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v147(v77, v78);
      _os_log_impl(&dword_23E1DF000, v74, v75, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v171, -1, -1);
      MEMORY[0x24264FEBC](v79, -1, -1);

      sub_23E223150(v163);
    }
    else
    {
      sub_23E223150(v163);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
      v147(v77, v78);

    }
    **(_QWORD **)(v174 + 680) = 0;
    __swift_destroy_boxed_opaque_existential_0(v73);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v167);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v168);
    goto LABEL_12;
  }
  v148 = (__int128 *)(v174 + 320);
  v86 = *(_QWORD *)(v174 + 888);
  v141 = (__int128 *)(v174 + 360);
  v146 = (__int128 *)(v174 + 520);
  v165 = *(_QWORD *)(v174 + 848);
  v87 = *(_QWORD *)(v174 + 840);
  v88 = *(void **)(v174 + 832);
  v89 = *(_QWORD *)(v174 + 784);
  v90 = *(void **)(v174 + 704);
  v91 = *(_QWORD *)(v174 + 696);
  sub_23E1E2FDC(*(_QWORD *)(v174 + 800), *(_QWORD *)(v174 + 824), (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
  v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)v172, v92 + 32);
  v93 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v89, 1, 1, v93);
  v169(v86, v91, v88);
  swift_bridgeObjectRetain();
  v94 = v90;
  v95 = sub_23E5378EC();
  v96 = *(unsigned __int8 *)(v87 + 80);
  v142 = ~v96;
  v97 = (v96 + 56) & ~v96;
  v143 = v96;
  *(_QWORD *)type = v97 + v165;
  v98 = swift_allocObject();
  v99 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v98 + 16) = v95;
  *(_QWORD *)(v98 + 24) = v99;
  *(_BYTE *)(v98 + 32) = 0;
  *(_QWORD *)(v98 + 40) = v92;
  *(_QWORD *)(v98 + 48) = v94;
  v164 = *(void (**)(uint64_t, uint64_t, void *))(v87 + 32);
  v166 = v97;
  v164(v98 + v97, v86, v88);
  sub_23E26D014(v89, (uint64_t)&unk_256D47148, v98);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_254332250 != -1)
    swift_once();
  v158 = *(_QWORD *)(v174 + 888);
  v137 = *(_QWORD *)(v174 + 880);
  v138 = *(_QWORD *)(v174 + 848);
  v100 = *(void **)(v174 + 832);
  v101 = *(_QWORD *)(v174 + 816);
  v102 = *(_QWORD *)(v174 + 776);
  v131 = *(_QWORD *)(v174 + 824);
  v132 = *(_QWORD *)(v174 + 768);
  v134 = *(_QWORD *)(v174 + 760);
  v135 = v100;
  v103 = *(_QWORD *)(v174 + 752);
  v104 = *(_QWORD *)(v174 + 744);
  v105 = *(_QWORD *)(v174 + 736);
  v106 = *(_QWORD *)(v174 + 728);
  v139 = *(void **)(v174 + 704);
  v140 = *(_QWORD *)(v174 + 712);
  v107 = *(_QWORD *)(v174 + 696);
  v133 = v107;
  v136 = *(_QWORD *)(v174 + 688);
  v108 = __swift_project_value_buffer(v105, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))(v103, v108, v105);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
  v109 = *(int *)(v145 + 48);
  v169(v106, v107, v100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
  v110 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_23E539650;
  v144 = v110;
  sub_23E1E2F50(v131, v111 + v110, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)(v106 + v109) = v111;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v105);
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v102, v134);
  v112 = *(_QWORD *)(v174 + 120);
  v113 = *(_OWORD *)(v174 + 88);
  v175[0] = *(_OWORD *)(v174 + 72);
  v175[1] = v113;
  v175[2] = *(_OWORD *)(v174 + 104);
  v176 = v112;
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47138);
  v115 = sub_23E4B6284(v151, v114, v153);
  sub_23E1FF9C8((uint64_t)v172, (uint64_t)v141);
  v169(v158, v133, v100);
  v116 = swift_allocObject();
  sub_23E1E6C84(v141, v116 + 16);
  v164(v116 + v166, v158, v100);
  *(_QWORD *)(v174 + 176) = sub_23E43ED20;
  *(_QWORD *)(v174 + 184) = v116;
  *(_QWORD *)(v174 + 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v174 + 152) = 1107296256;
  *(_QWORD *)(v174 + 160) = sub_23E433A44;
  *(_QWORD *)(v174 + 168) = &block_descriptor_99;
  v117 = _Block_copy((const void *)(v174 + 144));
  swift_release();
  v156 = objc_msgSend(v115, sel_addSuccessBlock_, v117);
  _Block_release(v117);

  sub_23E1FF9C8((uint64_t)v172, (uint64_t)v146);
  v169(v158, v133, v135);
  sub_23E1FF9C8((uint64_t)v168, (uint64_t)v148);
  v169(v137, v136, v135);
  v118 = (*(_QWORD *)type + 7) & 0xFFFFFFFFFFFFFFF8;
  v119 = (v118 + 47) & 0xFFFFFFFFFFFFFFF8;
  v120 = (v143 + v119 + 8) & v142;
  v121 = swift_allocObject();
  sub_23E1E6C84(v146, v121 + 16);
  v164(v121 + v166, v158, v135);
  sub_23E1E6C84(v148, v121 + v118);
  *(_QWORD *)(v121 + v119) = v139;
  v164(v121 + v120, v137, v135);
  *(_QWORD *)(v121 + ((v120 + v138 + 7) & 0xFFFFFFFFFFFFFFF8)) = v140;
  *(_QWORD *)(v174 + 224) = sub_23E43EDFC;
  *(_QWORD *)(v174 + 232) = v121;
  *(_QWORD *)(v174 + 192) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v174 + 200) = 1107296256;
  *(_QWORD *)(v174 + 208) = sub_23E433A44;
  *(_QWORD *)(v174 + 216) = &block_descriptor_105;
  v122 = _Block_copy((const void *)(v174 + 192));
  v123 = v139;
  swift_release();
  v124 = objc_msgSend(v156, sel_addFailureBlock_, v122);
  _Block_release(v122);

  if (qword_256D3ED08 != -1)
    swift_once();
  v125 = *(_QWORD *)(v174 + 824);
  v126 = *(_QWORD *)(v174 + 728);
  v127 = *(int *)(v145 + 48);
  v169(v126, *(_QWORD *)(v174 + 696), *(id *)(v174 + 832));
  v128 = swift_allocObject();
  *(_OWORD *)(v128 + 16) = xmmword_23E539650;
  sub_23E1E2F50(v125, v128 + v144, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)(v126 + v127) = v128;
  swift_storeEnumTagMultiPayload();
  v129 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v174 + 936) = v129;
  *v129 = v174;
  v129[1] = sub_23E43C140;
  return sub_23E3F1F44(v149, *(_QWORD *)(v174 + 728), 0);
}

uint64_t sub_23E43C140()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 728);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E43C1A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 824);
  v2 = *(_QWORD **)(v0 + 680);
  swift_release();
  sub_23E223150(v0 + 16);
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *v2 = *(_QWORD *)(v0 + 656);
  __swift_destroy_boxed_opaque_existential_0(v0 + 440);
  __swift_destroy_boxed_opaque_existential_0(v0 + 400);
  __swift_destroy_boxed_opaque_existential_0(v0 + 280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E43C2E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3ED18 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26 = v24;
    *(_DWORD *)v14 = 136315394;
    v23 = a4;
    v16 = v28;
    v15 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 72))(v16, v15);
    v25 = sub_23E1FD768(v17, v18, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    *(_WORD *)(v14 + 12) = 2080;
    sub_23E288764();
    v19 = sub_23E538318();
    v25 = sub_23E1FD768(v19, v20, &v26);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_23E1DF000, v12, v13, v23, (uint8_t *)v14, 0x16u);
    v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

}

uint64_t sub_23E43C55C(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t updated;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v97 = a6;
  v98 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v95 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v92 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v90 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v89 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v99 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E536F20();
  MEMORY[0x24BDAC7A8](v16);
  v102 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47130);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)&v103 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for StaticTimer();
  v104 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v107 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23E536F80();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v106 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v85 - v25;
  if (qword_256D3ED18 != -1)
    swift_once();
  v27 = sub_23E5371A8();
  __swift_project_value_buffer(v27, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)&v111);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v105 = a3;
  v108 = v28;
  v28(v26, a3, v21);
  v29 = a1;
  v30 = a1;
  v31 = sub_23E537190();
  v32 = sub_23E537B08();
  v33 = os_log_type_enabled(v31, v32);
  v91 = v12;
  v88 = v22;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v100 = v21;
    v35 = v34;
    v85 = swift_slowAlloc();
    v110 = v85;
    *(_DWORD *)v35 = 136315650;
    v86 = a4;
    v37 = v112;
    v36 = v113;
    __swift_project_boxed_opaque_existential_1(&v111, v112);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 72))(v37, v36);
    v109 = sub_23E1FD768(v38, v39, &v110);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v111);
    *(_WORD *)(v35 + 12) = 2080;
    sub_23E288764();
    v40 = sub_23E538318();
    v109 = sub_23E1FD768(v40, v41, &v110);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v100);
    *(_WORD *)(v35 + 22) = 2080;
    a4 = v86;
    swift_getErrorValue();
    v42 = sub_23E5383E4();
    v109 = sub_23E1FD768(v42, v43, &v110);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v31, v32, "failed to update timer %s for parent %s due to %s", (uint8_t *)v35, 0x20u);
    v44 = v85;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v44, -1, -1);
    v45 = v35;
    v21 = v100;
    MEMORY[0x24264FEBC](v45, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v111);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);

  }
  v46 = a4[3];
  v47 = a4[4];
  v48 = __swift_project_boxed_opaque_existential_1(a4, v46);
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v85 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v51 + 16))(v50);
  v53 = v105;
  v52 = (uint64_t)v106;
  v108(v106, v105, v21);
  v54 = (uint64_t)v102;
  sub_23E536F08();
  v55 = v103;
  sub_23E4BB578((uint64_t)v50, v52, v54, v46, v47, v103);
  v56 = v104;
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v55, 1, v101);
  v58 = v107;
  if (v57 == 1)
  {
    v59 = &qword_256D47130;
    v60 = (uint64_t *)v55;
    return sub_23E1E7C64((uint64_t)v60, v59);
  }
  sub_23E1E2FDC(v55, v107, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v61 = v98;
  sub_23E281AFC(v97, v53, (uint64_t)&v111);
  if (!v112)
  {
    sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    v59 = &qword_256D40C00;
    v60 = &v111;
    return sub_23E1E7C64((uint64_t)v60, v59);
  }
  sub_23E1E7C64((uint64_t)&v111, &qword_256D40C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
  v62 = swift_allocObject();
  v103 = xmmword_23E539650;
  *(_OWORD *)(v62 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)a4, v62 + 32);
  v63 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v99, 1, 1, v63);
  v64 = v106;
  v108(v106, v53, v21);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v65 = v61;
  v66 = sub_23E5378EC();
  v67 = v88;
  v68 = (*(unsigned __int8 *)(v88 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v69 = swift_allocObject();
  v70 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v69 + 16) = v66;
  *(_QWORD *)(v69 + 24) = v70;
  *(_BYTE *)(v69 + 32) = 0;
  *(_QWORD *)(v69 + 40) = v62;
  *(_QWORD *)(v69 + 48) = v65;
  v71 = v64;
  v72 = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v69 + v68, v71, v21);
  sub_23E26D014(v99, (uint64_t)&unk_256D47168, v69);
  swift_bridgeObjectRelease();
  swift_release();
  v73 = v53;
  if (qword_254332250 != -1)
    swift_once();
  v74 = v94;
  v75 = __swift_project_value_buffer(v94, (uint64_t)qword_254332420);
  v76 = v93;
  v77 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v75, v74);
  v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
  v79 = v95;
  v108(v95, v73, v72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
  v80 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = v103;
  v82 = v107;
  sub_23E1E2F50(v107, v81 + v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)&v79[v78] = v81;
  swift_storeEnumTagMultiPayload();
  v83 = v89;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v74);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v83, v91);
  return sub_23E1E2FA0(v82, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
}

uint64_t CoordinationDataModel.deleteTimer(staticTimerID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[73] = v3;
  v4[72] = a3;
  v4[71] = a2;
  v4[70] = a1;
  v4[74] = swift_getObjectType();
  v4[75] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[76] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v4[77] = v5;
  v4[78] = *(_QWORD *)(v5 - 8);
  v4[79] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v4[80] = v6;
  v4[81] = *(_QWORD *)(v6 - 8);
  v4[82] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v4[83] = swift_task_alloc();
  sub_23E536F20();
  v4[84] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47130);
  v4[85] = swift_task_alloc();
  v7 = type metadata accessor for StaticTimer();
  v4[86] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[87] = v8;
  v4[88] = *(_QWORD *)(v8 + 64);
  v4[89] = swift_task_alloc();
  v4[90] = swift_task_alloc();
  v9 = sub_23E536F80();
  v4[91] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[92] = v10;
  v4[93] = *(_QWORD *)(v10 + 64);
  v4[94] = swift_task_alloc();
  v4[95] = swift_task_alloc();
  v4[96] = swift_task_alloc();
  v4[97] = swift_task_alloc();
  v4[98] = swift_task_alloc();
  v4[99] = sub_23E5378F8();
  v4[100] = sub_23E5378EC();
  v4[101] = sub_23E5378B0();
  v4[102] = v11;
  return swift_task_switch();
}

uint64_t sub_23E43D070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  _BOOL4 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  void *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  __int128 *v139;
  uint64_t v140;
  uint64_t v141;
  id aBlock;
  __int128 *v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  os_log_type_t type[8];
  os_log_type_t typea[8];
  os_log_t loga;
  os_log_t logb;
  os_log_t log;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  void (*v157)(uint64_t, uint64_t, uint64_t);
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  _OWORD v161[3];
  uint64_t v162;

  v1 = *(_QWORD *)(v0 + 584) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_10;
  v3 = *(_QWORD *)(v0 + 576);
  swift_bridgeObjectRetain();
  v4 = sub_23E1E3300(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
LABEL_11:
    **(_QWORD **)(v0 + 560) = 0;
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 576);
  v7 = *(_QWORD *)(v0 + 568);
  v8 = (__int128 *)(*(_QWORD *)(v2 + 56) + (v4 << 7));
  v9 = v8[3];
  v11 = *v8;
  v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  v12 = v8[7];
  v14 = v8[4];
  v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_23E223058(v0 + 16);
  swift_bridgeObjectRelease();
  sub_23E281AFC(v7, v6, v0 + 240);
  if (!*(_QWORD *)(v0 + 264))
  {
    swift_release();
    sub_23E1E7C64(v0 + 240, &qword_256D40C00);
    if (qword_256D3ED18 != -1)
      swift_once();
    v34 = *(_QWORD *)(v0 + 760);
    v35 = *(_QWORD *)(v0 + 752);
    v36 = *(_QWORD *)(v0 + 736);
    v37 = *(_QWORD *)(v0 + 728);
    v38 = *(_QWORD *)(v0 + 576);
    v39 = *(_QWORD *)(v0 + 568);
    v40 = sub_23E5371A8();
    __swift_project_value_buffer(v40, (uint64_t)qword_256D40BD0);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v41(v34, v39, v37);
    v41(v35, v38, v37);
    v42 = sub_23E537190();
    v43 = sub_23E537B08();
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 760);
    v46 = *(_QWORD *)(v0 + 752);
    v47 = *(_QWORD *)(v0 + 736);
    v48 = *(_QWORD *)(v0 + 728);
    if (v44)
    {
      *(_QWORD *)type = *(_QWORD *)(v0 + 752);
      v49 = swift_slowAlloc();
      v160 = swift_slowAlloc();
      *(_QWORD *)&v161[0] = v160;
      *(_DWORD *)v49 = 136315394;
      sub_23E288764();
      v50 = sub_23E538318();
      *(_QWORD *)(v0 + 528) = sub_23E1FD768(v50, v51, (uint64_t *)v161);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v52(v45, v48);
      *(_WORD *)(v49 + 12) = 2080;
      v53 = sub_23E538318();
      *(_QWORD *)(v0 + 520) = sub_23E1FD768(v53, v54, (uint64_t *)v161);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v52(*(_QWORD *)type, v48);
      _os_log_impl(&dword_23E1DF000, v42, v43, "failed to found timer with %s for parent %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v160, -1, -1);
      MEMORY[0x24264FEBC](v49, -1, -1);

      sub_23E223150(v0 + 16);
    }
    else
    {
      sub_23E223150(v0 + 16);
      v128 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v128(v45, v48);
      v128(v46, v48);

    }
    goto LABEL_11;
  }
  sub_23E1E6C84((__int128 *)(v0 + 240), v0 + 280);
  if (qword_256D3ED18 != -1)
    swift_once();
  v15 = *(_QWORD *)(v0 + 784);
  v16 = *(_QWORD *)(v0 + 736);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 576);
  v19 = sub_23E5371A8();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D40BD0);
  v159 = (_QWORD *)(v0 + 280);
  sub_23E1FF9C8(v0 + 280, v0 + 360);
  v157 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v157(v15, v18, v17);
  v20 = sub_23E537190();
  v21 = sub_23E537B20();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 784);
  v24 = *(_QWORD *)(v0 + 736);
  v25 = *(_QWORD *)(v0 + 728);
  v145 = v0 + 536;
  v154 = v0 + 16;
  if (v22)
  {
    v26 = swift_slowAlloc();
    loga = (os_log_t)swift_slowAlloc();
    *(_QWORD *)&v161[0] = loga;
    *(_DWORD *)v26 = 136315394;
    v146 = v24;
    v28 = *(_QWORD *)(v0 + 384);
    v27 = *(_QWORD *)(v0 + 392);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 360), v28);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(v28, v27);
    *(_QWORD *)(v0 + 544) = sub_23E1FD768(v29, v30, (uint64_t *)v161);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    *(_WORD *)(v26 + 12) = 2080;
    sub_23E288764();
    v31 = sub_23E538318();
    *(_QWORD *)(v0 + 552) = sub_23E1FD768(v31, v32, (uint64_t *)v161);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    v144 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
    v144(v23, v25);
    _os_log_impl(&dword_23E1DF000, v20, v21, "attempt to delete timer %s for parent %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](loga, -1, -1);
    MEMORY[0x24264FEBC](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    v144 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v144(v23, v25);
  }

  v55 = *(_QWORD *)(v0 + 776);
  v56 = *(_QWORD *)(v0 + 728);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 696);
  logb = *(os_log_t *)(v0 + 688);
  v57 = *(_QWORD *)(v0 + 680);
  v58 = *(_QWORD *)(v0 + 672);
  v59 = *(_QWORD *)(v0 + 576);
  v60 = *(_QWORD *)(v0 + 304);
  v61 = v0;
  v147 = *(_QWORD *)(v0 + 312);
  v62 = __swift_project_boxed_opaque_existential_1(v159, v60);
  v63 = *(_QWORD *)(v60 - 8);
  v64 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v63 + 16))(v64, v62, v60);
  v157(v55, v59, v56);
  sub_23E536F08();
  sub_23E4BB578(v64, v55, v58, v60, v147, v57);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, os_log_t))(*(_QWORD *)typea + 48))(v57, 1, logb) == 1)
  {
    v65 = (_QWORD *)(v61 + 400);
    v66 = *(_QWORD *)(v61 + 768);
    v67 = *(_QWORD *)(v61 + 728);
    v68 = *(_QWORD *)(v61 + 680);
    v69 = *(_QWORD *)(v61 + 576);
    swift_release();
    sub_23E1E7C64(v68, &qword_256D47130);
    v70 = (uint64_t)v159;
    sub_23E1FF9C8((uint64_t)v159, v61 + 400);
    v157(v66, v69, v67);
    v71 = sub_23E537190();
    v72 = sub_23E537B08();
    v73 = os_log_type_enabled(v71, v72);
    v74 = *(_QWORD *)(v61 + 768);
    v75 = *(_QWORD *)(v61 + 728);
    v0 = v61;
    if (v73)
    {
      v76 = swift_slowAlloc();
      v158 = swift_slowAlloc();
      *(_QWORD *)&v161[0] = v158;
      *(_DWORD *)v76 = 136315394;
      v78 = *(_QWORD *)(v61 + 424);
      v77 = *(_QWORD *)(v0 + 432);
      __swift_project_boxed_opaque_existential_1(v65, *(_QWORD *)(v0 + 424));
      v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 72))(v78, v77);
      *(_QWORD *)(v0 + 512) = sub_23E1FD768(v79, v80, (uint64_t *)v161);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
      *(_WORD *)(v76 + 12) = 2080;
      sub_23E288764();
      v81 = sub_23E538318();
      *(_QWORD *)(v0 + 504) = sub_23E1FD768(v81, v82, (uint64_t *)v161);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      v144(v74, v75);
      _os_log_impl(&dword_23E1DF000, v71, v72, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v76, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v158, -1, -1);
      v83 = v76;
      v70 = (uint64_t)v159;
      MEMORY[0x24264FEBC](v83, -1, -1);

      sub_23E223150(v154);
    }
    else
    {
      sub_23E223150(v154);
      __swift_destroy_boxed_opaque_existential_0(v61 + 400);
      v144(v74, v75);

    }
    **(_QWORD **)(v0 + 560) = 0;
    __swift_destroy_boxed_opaque_existential_0(v70);
    goto LABEL_12;
  }
  v139 = (__int128 *)(v61 + 320);
  v84 = *(_QWORD *)(v61 + 776);
  v143 = (__int128 *)(v61 + 440);
  v155 = *(_QWORD *)(v61 + 744);
  v85 = *(_QWORD *)(v61 + 736);
  v86 = *(_QWORD *)(v61 + 728);
  v87 = *(_QWORD *)(v61 + 664);
  v88 = *(void **)(v61 + 584);
  v89 = *(_QWORD *)(v61 + 576);
  sub_23E1E2FDC(*(_QWORD *)(v61 + 680), *(_QWORD *)(v61 + 720), (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
  v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_23E539650;
  sub_23E1FF9C8((uint64_t)v159, v90 + 32);
  v91 = sub_23E537934();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v87, 1, 1, v91);
  v157(v84, v89, v86);
  swift_bridgeObjectRetain();
  v92 = v88;
  v93 = sub_23E5378EC();
  v94 = (*(unsigned __int8 *)(v85 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  v148 = v94 + v155;
  v95 = swift_allocObject();
  v96 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v95 + 16) = v93;
  *(_QWORD *)(v95 + 24) = v96;
  *(_BYTE *)(v95 + 32) = 1;
  *(_QWORD *)(v95 + 40) = v90;
  *(_QWORD *)(v95 + 48) = v92;
  v156 = v94;
  log = *(os_log_t *)(v85 + 32);
  ((void (*)(unint64_t, uint64_t, uint64_t))log)(v95 + v94, v84, v86);
  sub_23E26D014(v87, (uint64_t)&unk_256D47158, v95);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_254332250 != -1)
    swift_once();
  v97 = *(_QWORD *)(v61 + 728);
  v132 = v97;
  v133 = *(_QWORD *)(v61 + 776);
  v98 = *(_QWORD *)(v61 + 720);
  v134 = v98;
  v135 = *(_QWORD *)(v61 + 712);
  v99 = *(_QWORD *)(v61 + 696);
  v129 = *(_QWORD *)(v61 + 656);
  v130 = *(_QWORD *)(v61 + 648);
  v131 = *(_QWORD *)(v61 + 640);
  v100 = *(_QWORD *)(v61 + 632);
  v101 = *(_QWORD *)(v61 + 624);
  v102 = *(_QWORD *)(v61 + 616);
  v103 = *(_QWORD *)(v61 + 608);
  v138 = *(_QWORD *)(v61 + 592);
  v136 = *(_QWORD *)(v61 + 704);
  v137 = *(void **)(v61 + 584);
  v104 = *(_QWORD *)(v61 + 576);
  v105 = __swift_project_value_buffer(v102, (uint64_t)qword_254332420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v100, v105, v102);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44530);
  v106 = *(int *)(v141 + 48);
  v157(v103, v104, v97);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
  v107 = *(unsigned __int8 *)(v99 + 80);
  v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_23E539650;
  v140 = (v107 + 32) & ~v107;
  sub_23E1E2F50(v98, v108 + v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)(v103 + v106) = v108;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v102);
  (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v129, v131);
  v109 = *(_QWORD *)(v61 + 304);
  v110 = __swift_project_boxed_opaque_existential_1(v159, v109);
  v111 = *(_QWORD *)(v61 + 120);
  v112 = *(_OWORD *)(v61 + 88);
  v161[0] = *(_OWORD *)(v61 + 72);
  v161[1] = v112;
  v161[2] = *(_OWORD *)(v61 + 104);
  v162 = v111;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47138);
  v114 = sub_23E4B5F50((uint64_t)v110, v113, v109);
  sub_23E1FF9C8((uint64_t)v159, (uint64_t)v139);
  v157(v133, v104, v132);
  v115 = swift_allocObject();
  sub_23E1E6C84(v139, v115 + 16);
  ((void (*)(unint64_t, uint64_t, uint64_t))log)(v115 + v156, v133, v132);
  *(_QWORD *)(v61 + 176) = sub_23E43EEF4;
  *(_QWORD *)(v61 + 184) = v115;
  *(_QWORD *)(v61 + 144) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v61 + 152) = 1107296256;
  *(_QWORD *)(v61 + 160) = sub_23E433A44;
  *(_QWORD *)(v61 + 168) = &block_descriptor_117;
  v116 = _Block_copy((const void *)(v61 + 144));
  swift_release();
  aBlock = objc_msgSend(v114, sel_addSuccessBlock_, v116);
  _Block_release(v116);

  sub_23E1FF9C8((uint64_t)v159, (uint64_t)v143);
  v157(v133, v104, v132);
  sub_23E1E2F50(v134, v135, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v117 = (v148 + 7) & 0xFFFFFFFFFFFFFFF8;
  v118 = (v117 + v107 + 8) & ~v107;
  v119 = swift_allocObject();
  sub_23E1E6C84(v143, v119 + 16);
  ((void (*)(unint64_t, uint64_t, uint64_t))log)(v119 + v156, v133, v132);
  *(_QWORD *)(v119 + v117) = v137;
  sub_23E1E2FDC(v135, v119 + v118, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)(v119 + ((v136 + v118 + 7) & 0xFFFFFFFFFFFFFFF8)) = v138;
  *(_QWORD *)(v61 + 224) = sub_23E43F088;
  *(_QWORD *)(v61 + 232) = v119;
  *(_QWORD *)(v61 + 192) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v61 + 200) = 1107296256;
  *(_QWORD *)(v61 + 208) = sub_23E433A44;
  *(_QWORD *)(v61 + 216) = &block_descriptor_123;
  v120 = _Block_copy((const void *)(v61 + 192));
  v121 = v137;
  swift_release();
  v122 = objc_msgSend(aBlock, sel_addFailureBlock_, v120);
  _Block_release(v120);

  if (qword_256D3ED08 != -1)
    swift_once();
  v123 = *(_QWORD *)(v61 + 720);
  v124 = *(_QWORD *)(v61 + 608);
  v125 = *(int *)(v141 + 48);
  v157(v124, *(_QWORD *)(v61 + 576), *(_QWORD *)(v61 + 728));
  v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_23E539650;
  sub_23E1E2F50(v123, v126 + v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)(v124 + v125) = v126;
  swift_storeEnumTagMultiPayload();
  v127 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v61 + 824) = v127;
  *v127 = v61;
  v127[1] = sub_23E43E008;
  return sub_23E3F1F44(v145, *(_QWORD *)(v61 + 608), 0);
}

uint64_t sub_23E43E008()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 608);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E43E06C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(_QWORD **)(v0 + 560);
  swift_release();
  sub_23E223150(v0 + 16);
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *v2 = *(_QWORD *)(v0 + 536);
  __swift_destroy_boxed_opaque_existential_0(v0 + 280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E43E194(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE v62[12];
  int v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t updated;
  uint64_t v79;
  void (*v80)(_BYTE *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  uint64_t v85;

  v79 = a5;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x24BDAC7A8](updated);
  v77 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v74 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44448);
  v72 = *(_QWORD *)(v12 - 8);
  v73 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v71 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v14);
  v69 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_23E536F80();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v68 = &v62[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = &v62[-v20];
  if (qword_256D3ED18 != -1)
    swift_once();
  v22 = sub_23E5371A8();
  __swift_project_value_buffer(v22, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(a2, (uint64_t)v83);
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v70 = a3;
  v23(v21, a3, v16);
  v24 = a1;
  v25 = a1;
  v26 = sub_23E537190();
  v27 = sub_23E537B08();
  v28 = v27;
  v29 = os_log_type_enabled(v26, v27);
  v80 = v23;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v63 = v28;
    v31 = v30;
    v64 = swift_slowAlloc();
    v82 = v64;
    *(_DWORD *)v31 = 136315650;
    v65 = a2;
    *(_QWORD *)&v66 = a4;
    v33 = v84;
    v32 = v85;
    __swift_project_boxed_opaque_existential_1(v83, v84);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 72))(v33, v32);
    v81 = sub_23E1FD768(v34, v35, &v82);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    *(_WORD *)(v31 + 12) = 2080;
    sub_23E288764();
    v36 = sub_23E538318();
    v81 = sub_23E1FD768(v36, v37, &v82);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);
    *(_WORD *)(v31 + 22) = 2080;
    a2 = v65;
    swift_getErrorValue();
    v38 = sub_23E5383E4();
    v81 = sub_23E1FD768(v38, v39, &v82);
    v23 = v80;
    a4 = (void *)v66;
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v26, (os_log_type_t)v63, "failed to delete timer %s for parent %s due to %s", (uint8_t *)v31, 0x20u);
    v40 = v64;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v40, -1, -1);
    MEMORY[0x24264FEBC](v31, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v21, v16);

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CB8);
  v41 = swift_allocObject();
  v66 = xmmword_23E539650;
  *(_OWORD *)(v41 + 16) = xmmword_23E539650;
  sub_23E1FF9C8(a2, v41 + 32);
  v42 = sub_23E537934();
  v43 = (uint64_t)v69;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v69, 1, 1, v42);
  v44 = v68;
  v45 = v70;
  v23(v68, v70, v16);
  sub_23E5378F8();
  swift_bridgeObjectRetain();
  v46 = a4;
  v47 = sub_23E5378EC();
  v48 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v49 = swift_allocObject();
  v50 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v49 + 16) = v47;
  *(_QWORD *)(v49 + 24) = v50;
  *(_BYTE *)(v49 + 32) = 0;
  *(_QWORD *)(v49 + 40) = v41;
  *(_QWORD *)(v49 + 48) = v46;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v17 + 32))(v49 + v48, v44, v16);
  sub_23E26D014(v43, (uint64_t)&unk_256D47160, v49);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_254332250 != -1)
    swift_once();
  v51 = v76;
  v52 = __swift_project_value_buffer(v76, (uint64_t)qword_254332420);
  v54 = v74;
  v53 = v75;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v75 + 16))(v74, v52, v51);
  v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D44530) + 48);
  v56 = v77;
  v80(v77, v45, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D08);
  v57 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticTimer() - 8) + 80);
  v58 = (v57 + 32) & ~v57;
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v66;
  sub_23E1E2F50(v79, v59 + v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *(_QWORD *)&v56[v55] = v59;
  swift_storeEnumTagMultiPayload();
  v60 = v71;
  sub_23E537940();
  (*(void (**)(_BYTE *, uint64_t))(v53 + 8))(v54, v51);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v72 + 8))(v60, v73);
}

void sub_23E43E850(uint64_t a1)
{
  uint64_t v1;

  sub_23E432E40(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23E43E864(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully added alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E435CDC);
}

uint64_t sub_23E43E87C(uint64_t a1)
{
  return sub_23E43F09C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_23E4345C4);
}

uint64_t sub_23E43E898(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully deleted alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E435CDC);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for StaticAlarm();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v0 + v3, v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8(v0 + v7 + *(int *)(v5 + 36), v1);
  v8(v0 + v7 + *(int *)(v5 + 40), v1);
  return swift_deallocObject();
}

uint64_t sub_23E43E9B0(uint64_t a1)
{
  return sub_23E43F09C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_23E435F54);
}

uint64_t sub_23E43E9C4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23E43E9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23E43EA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  sub_23E437804(a1, *(_QWORD **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23E43EAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);

  return swift_deallocObject();
}

uint64_t sub_23E43EB48(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23E437B14(a1, *(_QWORD **)(v1 + 16), v1 + v4, (_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23E43EBBC(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully updated alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E435CDC);
}

uint64_t sub_23E43EBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);

  return swift_deallocObject();
}

uint64_t sub_23E43EC78(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23E4391CC(a1, v1 + 16, v1 + v4, (_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23E43ECEC(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully added timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E43C2E4);
}

uint64_t sub_23E43ED04(uint64_t a1)
{
  return sub_23E43F09C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_23E43A7B8);
}

uint64_t sub_23E43ED20(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully updated timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E43C2E4);
}

uint64_t sub_23E43ED34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + 7 + v4) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v3 + v6 + 8) & ~v3;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v5);

  v8(v0 + v7, v1);
  return swift_deallocObject();
}

uint64_t sub_23E43EDFC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 56) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + 7 + v5) & 0xFFFFFFFFFFFFFFF8;
  return sub_23E43C55C(a1, v1 + 16, v1 + v5, (_QWORD *)(v1 + v6), *(void **)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v4 + ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4));
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E43EEF4(uint64_t a1)
{
  return sub_23E43EF08(a1, (uint64_t)"successfully deleted timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E43C2E4);
}

uint64_t sub_23E43EF08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  return a3(a1, v3 + 16, v3 + ((v7 + 56) & ~v7), a2);
}

uint64_t objectdestroy_84Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for StaticTimer();
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v8 = v0 + v3;
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v8, v1);

  v10 = v0 + v7 + v5[5];
  v11 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  v9(v0 + v7 + v5[10], v1);
  v9(v0 + v7 + v5[11], v1);
  return swift_deallocObject();
}

uint64_t sub_23E43F088(uint64_t a1)
{
  return sub_23E43F09C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))sub_23E43E194);
}

uint64_t sub_23E43F09C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD, unint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD *)(sub_23E536F80() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(a2(0) - 8);
  v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return a3(a1, v3 + 16, v3 + v7, *(_QWORD *)(v3 + v8), v3 + v10, *(_QWORD *)(v3 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23E43F164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47198);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E43F240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(sub_23E536F80() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D47198) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23E433058(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, *(_QWORD *)(v1 + v8), *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23E43F2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E43F368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E433674(a1, v6, v7, v8, v9);
}

uint64_t StaticService.service.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E43F4A4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E43F510()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E43F574()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E43F5D4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E43F61C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E43F684()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_serviceFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticService.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  _BYTE v6[32];

  v1 = type metadata accessor for StaticService();
  v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 84));
  v6[31] = *(_BYTE *)(v0 + *(int *)(v1 + 84));
  ServiceKind.togglingCharacteristicKind.getter(v6);
  if (v6[0] == 174)
  {
    if (qword_256D3ED38 != -1)
      swift_once();
    swift_beginAccess();
    v3 = off_256D42460;
    swift_bridgeObjectRetain();
    v4 = sub_23E1E333C(v2, (uint64_t)v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 1;
  }
  return v4 & 1;
}

void StaticService.togglingCharacteristicKind.getter(_BYTE *a1@<X8>)
{
  type metadata accessor for StaticService();
  ServiceKind.togglingCharacteristicKind.getter(a1);
}

Swift::Bool_optional __swiftcall StaticService.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v4;
  uint64_t v5;

  v2 = *(_BYTE *)a1;
  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = v2;
  return (Swift::Bool_optional)sub_23E2B4680(&v4);
}

unint64_t StaticService.currentPosition.getter()
{
  return sub_23E4486B0(40);
}

Swift::Int StaticService.currentDoorState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 31;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.currentLockMechanismState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 38;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.currentSecuritySystemState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 42;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.inUse.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 65;
  return sub_23E2B4680(&v2);
}

uint64_t StaticService.active.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 3;
  return sub_23E2B4680(&v2);
}

uint64_t sub_23E43F9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23E44DA5C(a1, (uint64_t)sub_23E1E706C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)@<X0>(uint64_t (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,char a23,unsigned __int8 *a24,unsigned __int8 *a25,uint64_t a26,uint64_t a27,unsigned __int8 *a28,char a29,uint64_t *a30,uint64_t **a31,uint64_t a32,void (**a33)(uint64_t, uint64_t, uint64_t),uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unsigned __int8 *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  int v141;
  int v142;
  uint64_t *v143;
  uint64_t v144;
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  int v152;
  int v153;
  void (**v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  int v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (**v195)(uint64_t, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t *v202;
  uint64_t **v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  __int16 v211;
  uint64_t v212;
  uint64_t v213;
  void (**v214)(uint64_t, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v226;
  int v227;
  char *v228;
  uint64_t *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  char *v252;
  uint64_t **v253;
  int v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void (**v274)(uint64_t, uint64_t, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unsigned __int8 *v281;
  unsigned __int8 *v282;
  unsigned __int8 *v283;
  int v284;
  uint64_t v285;
  uint64_t (*v286)(char *, uint64_t, uint64_t);
  int *v287;
  char v288;
  __int128 v289;
  uint64_t v290;
  char v291;
  char v292;
  char v293;

  v37 = v36;
  v238 = a8;
  v284 = a7;
  v254 = a6;
  v227 = a5;
  v256 = a4;
  v258 = a3;
  v272 = a2;
  v286 = a1;
  v271 = a9;
  v274 = a33;
  v253 = a31;
  v251 = a30;
  v281 = a28;
  v282 = a25;
  v283 = a24;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v270 = (uint64_t)&v226 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v232 = (char *)&v226 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v280 = (uint64_t)&v226 - v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v269 = (uint64_t)&v226 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v243 = (char *)&v226 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v279 = (uint64_t)&v226 - v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v268 = (uint64_t)&v226 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v228 = (char *)&v226 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v278 = (uint64_t)&v226 - v55;
  v287 = (int *)type metadata accessor for StaticService();
  v56 = MEMORY[0x24BDAC7A8](v287);
  v267 = (uint64_t)&v226 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x24BDAC7A8](v56);
  v266 = (char *)&v226 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v265 = (char *)&v226 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v262 = (uint64_t)&v226 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v231 = (char *)&v226 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v259 = (uint64_t)&v226 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v257 = (uint64_t)&v226 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v255 = (uint64_t)&v226 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v252 = (char *)&v226 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v226 = (uint64_t)&v226 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v250 = (uint64_t)&v226 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v249 = (uint64_t)&v226 - v79;
  v80 = MEMORY[0x24BDAC7A8](v78);
  v246 = (uint64_t)&v226 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v245 = (char *)&v226 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v244 = (char *)&v226 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v242 = (uint64_t)&v226 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v241 = (uint64_t)&v226 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v240 = (uint64_t)&v226 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v239 = (char *)&v226 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  v237 = (uint64_t)&v226 - v95;
  v96 = MEMORY[0x24BDAC7A8](v94);
  v273 = (uint64_t)&v226 - v97;
  v98 = MEMORY[0x24BDAC7A8](v96);
  v236 = (uint64_t)&v226 - v99;
  v100 = MEMORY[0x24BDAC7A8](v98);
  v235 = (uint64_t)&v226 - v101;
  v102 = MEMORY[0x24BDAC7A8](v100);
  v234 = (char *)&v226 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  v233 = (char *)&v226 - v105;
  v106 = MEMORY[0x24BDAC7A8](v104);
  v108 = (char *)&v226 - v107;
  v109 = MEMORY[0x24BDAC7A8](v106);
  v111 = (char *)&v226 - v110;
  v112 = MEMORY[0x24BDAC7A8](v109);
  v114 = (char *)&v226 - v113;
  MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v226 - v115;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v118 = MEMORY[0x24BDAC7A8](v117);
  v263 = (uint64_t)&v226 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = MEMORY[0x24BDAC7A8](v118);
  v264 = (uint64_t)&v226 - v121;
  v122 = MEMORY[0x24BDAC7A8](v120);
  v260 = (uint64_t)&v226 - v123;
  v124 = MEMORY[0x24BDAC7A8](v122);
  v276 = (uint64_t)&v226 - v125;
  v126 = MEMORY[0x24BDAC7A8](v124);
  v247 = (uint64_t)&v226 - v127;
  v128 = MEMORY[0x24BDAC7A8](v126);
  v275 = (uint64_t)&v226 - v129;
  v130 = MEMORY[0x24BDAC7A8](v128);
  v132 = (char *)&v226 - v131;
  MEMORY[0x24BDAC7A8](v130);
  v134 = (char *)&v226 - v133;
  v135 = sub_23E536F80();
  v136 = *(unsigned __int8 **)(v135 - 8);
  v137 = MEMORY[0x24BDAC7A8](v135);
  v277 = (uint64_t)&v226 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v137);
  v140 = (char *)&v226 - v139;
  LODWORD(v283) = *v283;
  LODWORD(v282) = *v282;
  LODWORD(v281) = *v281;
  v248 = *v251;
  v251 = *v253;
  v229 = v253[1];
  LODWORD(v253) = *(unsigned __int8 *)v274;
  sub_23E1E7C20((uint64_t)v286, (uint64_t)v134, &qword_254333F50);
  sub_23E1E2F50(v37, (uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v286 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v136 + 6);
  v141 = v286(v134, 1, v135);
  v285 = v135;
  v274 = (void (**)(uint64_t, uint64_t, uint64_t))v136;
  if (v141 == 1)
  {
    (*((void (**)(char *, char *, uint64_t))v136 + 2))(v140, v116, v135);
    sub_23E1E2FA0((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64((uint64_t)v134, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    (*((void (**)(char *, char *, uint64_t))v136 + 4))(v140, v134, v135);
  }
  v142 = v256;
  sub_23E1E2F50(v37, (uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v261 = v140;
  if (v258)
  {
    v230 = v258;
  }
  else
  {
    v143 = (uint64_t *)&v114[v287[5]];
    v144 = v143[1];
    v272 = *v143;
    v230 = v144;
    swift_bridgeObjectRetain();
  }
  v145 = v227;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, (uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v142 == 2)
    v146 = v111[v287[6]];
  else
    v146 = v142 & 1;
  LODWORD(v258) = v146;
  v147 = v236;
  v148 = (uint64_t)v234;
  v149 = (uint64_t)v233;
  sub_23E1E2FA0((uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v145 == 2)
  {
    v150 = v287;
    v256 = v108[v287[7]];
  }
  else
  {
    v256 = v145 & 1;
    v150 = v287;
  }
  v151 = v285;
  v152 = v254;
  sub_23E1E2FA0((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v149, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v284 == 2)
    v284 = *(unsigned __int8 *)(v149 + v150[9]);
  sub_23E1E2FA0(v149, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v148, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v152 == 2)
    v153 = *(unsigned __int8 *)(v148 + v150[8]);
  else
    v153 = v152 & 1;
  v254 = v153;
  v154 = v274;
  sub_23E1E2FA0(v148, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E7C20(v238, (uint64_t)v132, &qword_254333F50);
  v155 = v235;
  sub_23E1E2F50(v37, v235, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v286(v132, 1, v151) == 1)
  {
    v154[2](v277, v155 + v150[10], v151);
    sub_23E1E2FA0(v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64((uint64_t)v132, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v154[4](v277, (uint64_t)v132, v151);
  }
  v156 = v273;
  v157 = (uint64_t)v243;
  v158 = (uint64_t)v239;
  if ((a13 & 1) != 0)
  {
    v236 = 0;
    LODWORD(v235) = 1;
    v159 = (uint64_t)v228;
  }
  else
  {
    sub_23E1E2F50(v37, v147, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((a11 & 1) != 0)
    {
      v160 = v147 + v150[11];
      v236 = *(_QWORD *)v160;
      LODWORD(v235) = *(unsigned __int8 *)(v160 + 8);
    }
    else
    {
      LODWORD(v235) = 0;
      v236 = a10;
    }
    v159 = (uint64_t)v228;
    v156 = v273;
    sub_23E1E2FA0(v147, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v161 = v244;
  sub_23E1E7C20(a12, v159, &qword_2543332A8);
  sub_23E1E2F50(v37, v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v162 = type metadata accessor for StaticDeviceMetadata();
  v163 = *(_QWORD *)(v162 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v159, 1, v162) == 1)
  {
    v164 = v250;
    sub_23E1E7C20(v156 + v150[12], v278, &qword_2543332A8);
    sub_23E1E2FA0(v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v159, &qword_2543332A8);
  }
  else
  {
    v164 = v250;
    sub_23E1E2FA0(v156, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v165 = v159;
    v166 = v278;
    sub_23E1E2FDC(v165, v278, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v163 + 56))(v166, 0, 1, v162);
  }
  sub_23E1E7C20(v37 + v150[13], v157, &qword_2543330E0);
  v167 = v237;
  sub_23E1E2F50(v37, v237, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v168 = sub_23E536F20();
  v169 = *(_QWORD *)(v168 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v157, 1, v168) == 1)
  {
    sub_23E1E7C20(v167 + v150[13], v279, &qword_2543330E0);
    sub_23E1E2FA0(v167, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v157, &qword_2543330E0);
  }
  else
  {
    sub_23E1E2FA0(v167, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v170 = v157;
    v171 = v279;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 32))(v279, v170, v168);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v169 + 56))(v171, 0, 1, v168);
  }
  sub_23E1E2F50(v37, v158, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v173 = v164;
  if (a14)
  {
    v238 = a14;
  }
  else
  {
    v238 = *(_QWORD *)(v158 + v150[14]);
    swift_bridgeObjectRetain();
  }
  v174 = (uint64_t)v161;
  v175 = v285;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v158, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v176 = v240;
  sub_23E1E2F50(v37, v240, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v177 = a16;
  if (!a16)
  {
    a15 = *(_QWORD *)(v176 + v150[15]);
    v177 = swift_bridgeObjectRetain();
  }
  v250 = v177;
  v273 = a15;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v176, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v178 = v241;
  sub_23E1E2F50(v37, v241, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a17 == 2)
    v179 = *(unsigned __int8 *)(v178 + v150[16]);
  else
    v179 = a17 & 1;
  LODWORD(v243) = v179;
  sub_23E1E2FA0(v178, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v180 = v242;
  sub_23E1E2F50(v37, v242, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a18 == 2)
    v181 = *(unsigned __int8 *)(v180 + v150[17]);
  else
    v181 = a18 & 1;
  v182 = (uint64_t)v245;
  sub_23E1E2FA0(v180, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v174, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a19 == 2)
    v183 = *(unsigned __int8 *)(v174 + v150[18]);
  else
    v183 = a19 & 1;
  LODWORD(v242) = v183;
  sub_23E1E2FA0(v174, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v182, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a20 == 2)
    v184 = *(unsigned __int8 *)(v182 + v150[19]);
  else
    v184 = a20 & 1;
  LODWORD(v244) = v184;
  v185 = v257;
  v186 = v246;
  sub_23E1E2FA0(v182, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((a23 & 1) != 0)
  {
    v257 = 0;
    v246 = 0;
  }
  else
  {
    sub_23E1E2F50(v37, v186, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (a22)
    {
      v257 = a21;
      v246 = a22;
    }
    else
    {
      v187 = (uint64_t *)(v186 + v150[20]);
      v188 = v187[1];
      v257 = *v187;
      v246 = v188;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v186, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v189 = v249;
  sub_23E1E2F50(v37, v249, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((_DWORD)v283 == 53)
    LODWORD(v283) = *(unsigned __int8 *)(v189 + v150[21]);
  sub_23E1E2FA0(v189, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v173, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((_DWORD)v282 == 5)
    LODWORD(v282) = *(unsigned __int8 *)(v173 + v150[22]);
  sub_23E1E2FA0(v173, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v190 = (uint64_t)v266;
  if ((a29 & 1) != 0)
  {
    LODWORD(v281) = 53;
  }
  else
  {
    v191 = v226;
    sub_23E1E2F50(v37, v226, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((_DWORD)v281 == 53)
      LODWORD(v281) = *(unsigned __int8 *)(v191 + v150[23]);
    sub_23E1E2FA0(v191, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v192 = (uint64_t)v252;
  v193 = v247;
  sub_23E1E7C20(a26, v247, &qword_254333F50);
  sub_23E1E2F50(v37, v192, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v286((char *)v193, 1, v175) == 1)
  {
    sub_23E1E7C20(v192 + v150[24], v275, &qword_254333F50);
    sub_23E1E2FA0(v192, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v193, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v192, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v195 = v274;
    v194 = v275;
    v274[4](v275, v193, v175);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v195[7])(v194, 0, 1, v175);
  }
  v196 = v259;
  v197 = v255;
  sub_23E1E2F50(v37, v255, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a27)
  {
    v259 = a27;
  }
  else
  {
    v259 = *(_QWORD *)(v197 + v150[25]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v197, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v185, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  LODWORD(v245) = v181;
  if (v248)
  {
    v255 = v248;
  }
  else
  {
    v255 = *(_QWORD *)(v185 + v150[26]);
    swift_bridgeObjectRetain();
  }
  v198 = (uint64_t)v232;
  v199 = (uint64_t)v231;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v185, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v196, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v200 = (uint64_t)v251;
  if (v251)
  {
    v201 = v251;
    v202 = v229;
  }
  else
  {
    v203 = (uint64_t **)(v196 + v150[27]);
    v201 = *v203;
    v202 = v203[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_23E44374C(v200);
  sub_23E1E2FA0(v196, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E7C20(a32, v198, &qword_2543332B8);
  sub_23E1E2F50(v37, v199, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v204 = type metadata accessor for StaticSoftwareUpdate(0);
  v205 = *(_QWORD *)(v204 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48))(v198, 1, v204) == 1)
  {
    sub_23E1E7C20(v199 + v287[28], v280, &qword_2543332B8);
    sub_23E1E2FA0(v199, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v198, &qword_2543332B8);
  }
  else
  {
    sub_23E1E2FA0(v199, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v206 = v280;
    sub_23E1E2FDC(v198, v280, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v205 + 56))(v206, 0, 1, v204);
  }
  v207 = (uint64_t)v265;
  v208 = v262;
  sub_23E1E2F50(v37, v262, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((_DWORD)v253 == 2)
    v209 = *(_BYTE *)(v208 + v287[29]);
  else
    v209 = v253 & 1;
  sub_23E1E2FA0(v208, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v37, v207, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (a34)
  {
    v210 = a34;
  }
  else
  {
    v210 = *(_QWORD *)(v207 + v287[30]);
    swift_bridgeObjectRetain();
  }
  v211 = a36;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v207, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v212 = v260;
  sub_23E1E7C20(a35, v260, &qword_254333F50);
  sub_23E1E2F50(v37, v190, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v213 = v285;
  if (v286((char *)v212, 1, v285) == 1)
  {
    sub_23E1E7C20(v190 + v287[31], v276, &qword_254333F50);
    sub_23E1E2FA0(v190, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E7C64(v212, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v190, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v214 = v274;
    v215 = v212;
    v216 = v276;
    v274[4](v276, v215, v213);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v214[7])(v216, 0, 1, v213);
  }
  v217 = v267;
  sub_23E1E2F50(v37, v267, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((a36 & 0x10000) != 0)
  {
    v219 = v217 + v287[32];
    v211 = *(_WORD *)v219;
    v218 = *(_BYTE *)(v219 + 2);
  }
  else
  {
    v218 = 0;
  }
  sub_23E1E2FA0(v217, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v220 = v268;
  sub_23E1E4E3C(v278, v268, &qword_2543332A8);
  v221 = v269;
  sub_23E1E4E3C(v279, v269, &qword_2543330E0);
  v293 = (char)v283;
  v292 = (char)v282;
  v291 = (char)v281;
  v222 = v264;
  sub_23E1E4E3C(v275, v264, &qword_254333F50);
  *((_QWORD *)&v289 + 1) = v202;
  v290 = v255;
  *(_QWORD *)&v289 = v201;
  v223 = v270;
  sub_23E1E4E3C(v280, v270, &qword_2543332B8);
  v288 = v209;
  v224 = v263;
  sub_23E1E4E3C(v276, v263, &qword_254333F50);
  return sub_23E4439E0((uint64_t)v261, v272, v230, v258, v256, v254, v284, v277, v271, v236, v235, v220, v221, v238, v273, v250, (char)v243, (char)v245, v242,
           (char)v244,
           v257,
           v246,
           &v293,
           &v292,
           &v291,
           v222,
           v259,
           &v290,
           &v289,
           v223,
           &v288,
           v210,
           v224,
           v211,
           v218);
}

BOOL StaticService.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BOOL8 v9;
  unsigned __int8 v10;
  char v12;
  unsigned __int8 v14;
  char v15;
  Swift::Int value;
  char v20;
  char v21;
  _BYTE v22[7];
  unsigned __int8 v23;
  uint64_t v24;
  Swift::Int_optional v25;
  Swift::Int_optional v26;
  Swift::Int_optional v27;
  Swift::Int_optional v28;
  Swift::Int_optional v29;
  Swift::Int_optional v30;

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = &v22[-v7];
  v9 = 0;
  switch(*(_BYTE *)(v1 + *(int *)(v6 + 84)))
  {
    case 3:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v23 = 30;
      v26 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v26.is_nil && v26.value == 2;
    case 0xE:
    case 0x33:
    case 0x34:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v23 = 40;
      v25 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v25.is_nil && v25.value > 0;
    case 0x10:
    case 0x1C:
    case 0x22:
    case 0x29:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v10 = 105;
      goto LABEL_21;
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x2A:
    case 0x2C:
    case 0x30:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v10 = 3;
      goto LABEL_21;
    case 0x13:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v14 = 31;
      goto LABEL_26;
    case 0x18:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v10 = 65;
      goto LABEL_21;
    case 0x1E:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v14 = 38;
LABEL_26:
      v23 = v14;
      v27 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v27.is_nil && v27.value != 1;
    case 0x1F:
    case 0x26:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v10 = 84;
LABEL_21:
      v23 = v10;
      v15 = sub_23E2B4680(&v23);
      if (v15 == 2)
        return 0;
      else
        return v15 & 1;
    case 0x23:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v23 = 42;
      v28 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v28.is_nil && v28.value != 3;
    case 0x2E:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v23 = 34;
      v29 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      if (v29.is_nil)
      {
        sub_23E1E2F50(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      else
      {
        value = v29.value;
        sub_23E1E2F50(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (value)
        {
          v9 = 1;
          goto LABEL_47;
        }
      }
      v24 = *(_QWORD *)&v8[*(int *)(v2 + 104)];
      v23 = -104;
      v30 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      v9 = !v30.is_nil && v30.value != 0;
LABEL_47:
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      return v9;
    case 0x2F:
      v24 = *(_QWORD *)(v1 + *(int *)(v2 + 104));
      v23 = 3;
      v12 = sub_23E2B4680(&v23);
      if (v12 == 2)
      {
        sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_42:
        sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        return 0;
      }
      v20 = v12;
      sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v20 & 1) == 0)
        goto LABEL_42;
      v24 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
      v23 = 65;
      v21 = sub_23E2B4680(&v23);
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      return v21 & 1;
    default:
      return v9;
  }
}

unint64_t StaticService.brightness.getter()
{
  return sub_23E4486B0(12);
}

uint64_t StaticService.rotationSpeed.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 115;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.currentTemperature.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 44;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.currentRelativeHumidity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 41;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.airQuality.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 8;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.carbonDioxideDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 18;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.carbonMonoxideDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 21;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.contactState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 28;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.currentAirPurifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 30;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.targetDoorState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -107;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.powerState.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 105;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticService.targetHeaterCoolerState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -105;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.currentHeaterCoolerState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 33;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.heatingThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 55;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.coolingThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 29;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.currentHumidifierDehumidifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 36;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.humidifierThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 58;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.dehumidifierThreshold.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 48;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.programMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.leakDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 74;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.currentLightLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 37;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.targetLockMechanismState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -100;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.motionDetected.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 83;
  return sub_23E2B4680(&v2);
}

unint64_t StaticService.targetPosition.getter()
{
  return sub_23E4486B0(158);
}

Swift::Int StaticService.positionState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.occupancyDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.smokeDetected.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 127;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.statusFault.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -126;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.targetSecuritySystemState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -96;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.targetAirPurifierState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -109;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int_optional __swiftcall StaticService.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  char v2;
  Swift::Int_optional v3;
  char v4;
  uint64_t v5;

  v2 = *(_BYTE *)a1;
  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = v2;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  v3.is_nil &= 1u;
  return v3;
}

uint64_t StaticService.configuredName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(27);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Int StaticService.targetHeatingCoolingMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -104;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.currentHeatingCooling.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 34;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.targetTemperature.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -94;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.isSensor.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (qword_2543331F8 != -1)
    swift_once();
  v1 = off_2543331F0;
  v2 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 84));
  return sub_23E1E333C(v2, (uint64_t)v1);
}

uint64_t StaticService.displayServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t result;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 92));
  sub_23E1E2F50(v2, (uint64_t)v7, v9);
  if (v8 == 53)
    LOBYTE(v8) = v7[*(int *)(v4 + 84)];
  result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *a1 = v8;
  return result;
}

uint64_t StaticService.set(displayName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E4420F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_23E5378F8();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442160()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4421C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442224()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 168) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E44226C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E536F44();
  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4422D4()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[22];
  v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E442338()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 192);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = sub_23E537538();
  *(_QWORD *)(v0 + 200) = v2;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E4423FC;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_23E267484;
  v4[3] = &block_descriptor_30;
  v4[4] = v3;
  objc_msgSend(v1, sel_updateName_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_23E4423FC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E44245C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 200);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E442494()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticService.set(staticRoom:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_23E4424F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = sub_23E5378F8();
  *(_QWORD *)(v0 + 144) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442560()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4425C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442624()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 160) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E44266C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = sub_23E536F44();
  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4426D4()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[21];
  v2 = (void *)v0[20];
  swift_release();
  v0[23] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E442738()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v0 + 184), sel_accessory);
    *(_QWORD *)(v0 + 192) = v2;

    if (v2)
    {
      v3 = objc_msgSend(v2, sel_home);
      *(_QWORD *)(v0 + 200) = v3;
      if (v3)
      {
        *(_QWORD *)(v0 + 208) = sub_23E5378EC();
        sub_23E5378B0();
        return swift_task_switch();
      }

    }
  }
  sub_23E44DA18();
  swift_allocError();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E442834()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E442870()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4428D0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 224) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E442918()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 232) = sub_23E536F44();
  *(_QWORD *)(v0 + 240) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442984()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[29];
  v2 = (void *)v0[28];
  swift_release();
  v0[31] = objc_msgSend(v2, sel_roomFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4429E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 248);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 192);
    v2 = *(void **)(v0 + 200);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E442AE8;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_23E267484;
    v5[3] = &block_descriptor_2_2;
    v5[4] = v4;
    objc_msgSend(v2, sel_assignAccessory_toRoom_completionHandler_, v3, v1, v5);
    return swift_continuation_await();
  }
  else
  {

    sub_23E44DA18();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E442AE8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E442B48()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 248);
  v2 = *(void **)(v0 + 200);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E442B88()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticService.set(showInDashboard:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E442BF8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442C64()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E442CC8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442D28()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E442D70()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442DD8()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E442E3C()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMService.shouldShowInDashboard.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticService.set(favorite:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E442EA8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442F14()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E442F78()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E442FD8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E443020()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E443088()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4430EC()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMService.isFavorite.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t StaticService.batteryLevel.getter()
{
  return sub_23E4486B0(11);
}

Swift::Int StaticService.chargingState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 24;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23E4431B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378F8();
  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E44321C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E443280()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4432E0()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 64) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E443328()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = sub_23E536F44();
  *(_QWORD *)(v0 + 80) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E443390()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[9];
  v2 = (void *)v0[8];
  swift_release();
  v0[11] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4433F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    v4 = v1;
    HMService.customIconSFSymbol.setter(v2, v3);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticService.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticService.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticService.isPrimary.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 24));
}

uint64_t StaticService.isDoubleHigh.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 28));
}

uint64_t StaticService.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 32));
}

uint64_t StaticService.isLowBattery.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 36));
}

uint64_t StaticService.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticService() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticService.mediaSourceIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 44));
}

uint64_t StaticService.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticService();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 48), a1, &qword_2543332A8);
}

uint64_t StaticService.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticService();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 52), a1, &qword_2543330E0);
}

uint64_t StaticService.roomIds.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticService.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 64));
}

uint64_t StaticService.accessoryShowsAsIndividualTiles.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 68));
}

uint64_t StaticService.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 72));
}

uint64_t StaticService.contributesToHomeStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 76));
}

uint64_t StaticService.customIconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E44374C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t StaticService.serviceSubKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticService.associatedServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t StaticService.parentServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticService();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 96), a1, &qword_254333F50);
}

uint64_t StaticService.linkedStaticServices.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticCharacteristicsBag.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticProfileBag.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 108));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticService();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 112), a1, &qword_2543332B8);
}

uint64_t StaticService.homeNonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 116));
  return result;
}

uint64_t StaticService.bridgedValveServices.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.bridgeAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticService();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 124), a1, &qword_254333F50);
}

uint64_t StaticService.matterEndpointID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for StaticService();
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 128)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 128) + 2) << 16);
}

uint64_t StaticService.matterEndpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  __int16 v6;

  result = type metadata accessor for StaticService();
  v4 = (uint64_t *)(v1 + *(int *)(result + 132));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  LOBYTE(v4) = *((_BYTE *)v4 + 10);
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 10) = (_BYTE)v4;
  return result;
}

uint64_t sub_23E4439E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,char *a23,char *a24,char *a25,uint64_t a26,uint64_t a27,uint64_t *a28,__int128 *a29,uint64_t a30,char *a31,uint64_t a32,uint64_t a33,__int16 a34,char a35)
{
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  int *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  char v54;
  char v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  char v59;

  v54 = *a23;
  v55 = *a24;
  v56 = *a25;
  v58 = *a28;
  v59 = *a31;
  v40 = sub_23E536F80();
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
  v57 = *a29;
  v41(a9, a1, v40);
  v42 = (int *)type metadata accessor for StaticService();
  v43 = (_QWORD *)(a9 + v42[5]);
  *v43 = a2;
  v43[1] = a3;
  *(_BYTE *)(a9 + v42[6]) = a4;
  *(_BYTE *)(a9 + v42[7]) = a5;
  *(_BYTE *)(a9 + v42[8]) = a6;
  *(_BYTE *)(a9 + v42[9]) = a7;
  v41(a9 + v42[10], a8, v40);
  v44 = a9 + v42[11];
  *(_QWORD *)v44 = a10;
  *(_BYTE *)(v44 + 8) = a11 & 1;
  sub_23E1E4E3C(a12, a9 + v42[12], &qword_2543332A8);
  sub_23E1E4E3C(a13, a9 + v42[13], &qword_2543330E0);
  *(_QWORD *)(a9 + v42[14]) = a14;
  v45 = (_QWORD *)(a9 + v42[15]);
  *v45 = a15;
  v45[1] = a16;
  *(_BYTE *)(a9 + v42[16]) = a17;
  *(_BYTE *)(a9 + v42[17]) = a18;
  *(_BYTE *)(a9 + v42[18]) = a19;
  *(_BYTE *)(a9 + v42[19]) = a20;
  v46 = (_QWORD *)(a9 + v42[20]);
  *v46 = a21;
  v46[1] = a22;
  *(_BYTE *)(a9 + v42[21]) = v54;
  *(_BYTE *)(a9 + v42[22]) = v55;
  *(_BYTE *)(a9 + v42[23]) = v56;
  sub_23E1E4E3C(a26, a9 + v42[24], &qword_254333F50);
  *(_QWORD *)(a9 + v42[25]) = a27;
  *(_QWORD *)(a9 + v42[26]) = v58;
  *(_OWORD *)(a9 + v42[27]) = v57;
  sub_23E1E4E3C(a30, a9 + v42[28], &qword_2543332B8);
  *(_BYTE *)(a9 + v42[29]) = v59;
  *(_QWORD *)(a9 + v42[30]) = a32;
  result = sub_23E1E4E3C(a33, a9 + v42[31], &qword_254333F50);
  v48 = a9 + v42[32];
  *(_WORD *)v48 = a34;
  *(_BYTE *)(v48 + 2) = a35 & 1;
  v49 = a9 + v42[33];
  *(_QWORD *)v49 = 0;
  *(_WORD *)(v49 + 8) = 0;
  *(_BYTE *)(v49 + 10) = 1;
  return result;
}

uint64_t sub_23E443CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,char *a23,char *a24,char *a25,uint64_t a26,uint64_t a27,uint64_t *a28,__int128 *a29,uint64_t a30,char *a31,uint64_t a32,uint64_t a33,__int16 a34,char a35,uint64_t *a36)
{
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  int *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  char v55;
  char v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  char v61;
  __int16 v62;
  uint64_t v63;

  v55 = *a23;
  v56 = *a24;
  v57 = *a25;
  v59 = *a28;
  v60 = *a31;
  v63 = *a36;
  v61 = *((_BYTE *)a36 + 10);
  v62 = *((_WORD *)a36 + 4);
  v39 = sub_23E536F80();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
  v58 = *a29;
  v40(a9, a1, v39);
  v41 = (int *)type metadata accessor for StaticService();
  v42 = (_QWORD *)(a9 + v41[5]);
  *v42 = a2;
  v42[1] = a3;
  *(_BYTE *)(a9 + v41[6]) = a4;
  *(_BYTE *)(a9 + v41[7]) = a5;
  *(_BYTE *)(a9 + v41[8]) = a6;
  *(_BYTE *)(a9 + v41[9]) = a7;
  v40(a9 + v41[10], a8, v39);
  v43 = a9 + v41[11];
  *(_QWORD *)v43 = a10;
  *(_BYTE *)(v43 + 8) = a11 & 1;
  sub_23E1E4E3C(a12, a9 + v41[12], &qword_2543332A8);
  sub_23E1E4E3C(a13, a9 + v41[13], &qword_2543330E0);
  *(_QWORD *)(a9 + v41[14]) = a14;
  v44 = (_QWORD *)(a9 + v41[15]);
  *v44 = a15;
  v44[1] = a16;
  *(_BYTE *)(a9 + v41[16]) = a17;
  *(_BYTE *)(a9 + v41[17]) = a18;
  *(_BYTE *)(a9 + v41[18]) = a19;
  *(_BYTE *)(a9 + v41[19]) = a20;
  v45 = (_QWORD *)(a9 + v41[20]);
  *v45 = a21;
  v45[1] = a22;
  *(_BYTE *)(a9 + v41[21]) = v55;
  *(_BYTE *)(a9 + v41[22]) = v56;
  *(_BYTE *)(a9 + v41[23]) = v57;
  sub_23E1E4E3C(a26, a9 + v41[24], &qword_254333F50);
  *(_QWORD *)(a9 + v41[25]) = a27;
  *(_QWORD *)(a9 + v41[26]) = v59;
  *(_OWORD *)(a9 + v41[27]) = v58;
  sub_23E1E4E3C(a30, a9 + v41[28], &qword_2543332B8);
  *(_BYTE *)(a9 + v41[29]) = v60;
  *(_QWORD *)(a9 + v41[30]) = a32;
  result = sub_23E1E4E3C(a33, a9 + v41[31], &qword_254333F50);
  v47 = a9 + v41[32];
  *(_WORD *)v47 = a34;
  *(_BYTE *)(v47 + 2) = a35 & 1;
  v48 = a9 + v41[33];
  *(_QWORD *)v48 = v63;
  *(_WORD *)(v48 + 8) = v62;
  *(_BYTE *)(v48 + 10) = v61;
  return result;
}

uint64_t StaticService.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (**v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (**v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;

  v2 = v1;
  v4 = type metadata accessor for StaticSoftwareUpdate(0);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v69 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v6);
  v74 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for StaticService();
  v79 = *((_QWORD *)v8 - 1);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v67 - v12;
  v14 = sub_23E536F80();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v80 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v77 = (uint64_t)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v73 = (uint64_t)&v67 - v20;
  v83 = sub_23E536F20();
  v72 = *(void (***)(char *, char *, uint64_t))(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v68 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StaticDeviceMetadata();
  v70 = *(_QWORD *)(v25 - 8);
  v71 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23E1EE1C4(&qword_254333DA0, v15, MEMORY[0x24BDCEA88]);
  v82 = v14;
  sub_23E5374D8();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  if (*(_BYTE *)(v2 + v8[9]) != 2)
    sub_23E538474();
  sub_23E538474();
  sub_23E5374D8();
  if (*(_BYTE *)(v2 + v8[11] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  sub_23E1E7C20(v2 + v8[12], (uint64_t)v30, &qword_2543332A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v30, 1, v71) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    sub_23E538474();
    StaticDeviceMetadata.hash(into:)();
    sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  v31 = v82;
  v32 = v72;
  sub_23E1E7C20(v2 + v8[13], (uint64_t)v24, &qword_2543330E0);
  v33 = v83;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v32[6])(v24, 1, v83) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v34 = v24;
    v35 = v31;
    v36 = v68;
    v32[4](v68, v34, v33);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    v37 = v36;
    v31 = v35;
    ((void (*)(char *, uint64_t))v32[1])(v37, v33);
  }
  v38 = *(_QWORD *)(v2 + v8[14]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v38);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v8[15] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  if (*(_QWORD *)(v2 + v8[20] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    v39 = swift_bridgeObjectRelease();
  }
  else
  {
    v39 = sub_23E538474();
  }
  v40 = v80;
  v85 = *(_BYTE *)(v2 + v8[21]);
  ServiceKind.rawValue.getter(v39);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v41 = v8[22];
  v83 = v2;
  v42 = *(unsigned __int8 *)(v2 + v41);
  if ((_DWORD)v42 != 5)
  {
    sub_23E538474();
    __asm { BR              X9 }
  }
  sub_23E538474();
  v43 = *(unsigned __int8 *)(v83 + v8[23]);
  if (v43 == 53)
  {
    sub_23E538474();
  }
  else
  {
    v44 = sub_23E538474();
    v84 = v43;
    ServiceKind.rawValue.getter(v44);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  v45 = v83;
  v46 = v73;
  sub_23E1E7C20(v83 + v8[24], v73, &qword_254333F50);
  v72 = *(void (***)(char *, char *, uint64_t))(v40 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v72)(v46, 1, v31) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v47 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v78, v46, v31);
    sub_23E538474();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v31);
  }
  v48 = *(_QWORD *)(v45 + v8[25]);
  sub_23E538468();
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    v50 = v48 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
    v51 = *(_QWORD *)(v79 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1E2F50(v50, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      StaticService.hash(into:)(a1);
      sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v50 += v51;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    v45 = v83;
  }
  v52 = *(_QWORD *)(v45 + v8[26]);
  swift_bridgeObjectRetain();
  sub_23E237124(a1, v52);
  swift_bridgeObjectRelease();
  v53 = (uint64_t *)(v45 + v8[27]);
  v54 = *v53;
  v55 = v53[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_23E239D94(a1, v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E239908(a1, v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v56 = v74;
  sub_23E1E7C20(v45 + v8[28], v74, &qword_2543332B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v56, 1, v76) == 1)
  {
    sub_23E538474();
    v57 = v82;
  }
  else
  {
    v58 = v69;
    sub_23E1E2FDC(v56, v69, type metadata accessor for StaticSoftwareUpdate);
    sub_23E538474();
    v57 = v82;
    sub_23E5374D8();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_23E1E2FA0(v58, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_23E538468();
  v59 = *(_QWORD *)(v45 + v8[30]);
  sub_23E538468();
  v60 = *(_QWORD *)(v59 + 16);
  if (v60)
  {
    v61 = v59 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
    v62 = *(_QWORD *)(v79 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1E2F50(v61, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      StaticService.hash(into:)(a1);
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v61 += v62;
      --v60;
    }
    while (v60);
    swift_bridgeObjectRelease();
    v45 = v83;
  }
  v63 = v77;
  sub_23E1E7C20(v45 + v8[31], v77, &qword_254333F50);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v72)(v63, 1, v57) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v64 = v80;
    v65 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v78, v63, v57);
    sub_23E538474();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v57);
  }
  if (*(_BYTE *)(v45 + v8[32] + 2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538480();
  }
  if (*(_BYTE *)(v45 + v8[33] + 10) == 1)
    return sub_23E538474();
  sub_23E538474();
  sub_23E538498();
  return sub_23E538480();
}

uint64_t sub_23E444B40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E444B68 + 4 * byte_23E551CEF[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E444B68()
{
  return 1701667182;
}

uint64_t sub_23E444B78()
{
  return 0x72616D6972507369;
}

uint64_t sub_23E444B98()
{
  return 0x656C62756F447369;
}

uint64_t sub_23E444BB8()
{
  return 0x6168636165527369;
}

uint64_t sub_23E444BD8()
{
  return 0x746142776F4C7369;
}

uint64_t sub_23E444BF8()
{
  return 0x726F737365636361;
}

unint64_t sub_23E444C18()
{
  return 0xD000000000000015;
}

unint64_t sub_23E444E04()
{
  return 0xD000000000000014;
}

unint64_t sub_23E444E1C()
{
  return 0xD000000000000011;
}

unint64_t sub_23E444E34()
{
  return 0xD000000000000010;
}

void sub_23E444E4C()
{
  JUMPOUT(0x23E444E60);
}

uint64_t sub_23E444E6C()
{
  unsigned __int8 *v0;

  return sub_23E444B40(*v0);
}

uint64_t sub_23E444E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E44EED4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E444E98(_BYTE *a1@<X8>)
{
  *a1 = 30;
}

uint64_t sub_23E444EA4()
{
  sub_23E44DE20();
  return sub_23E538570();
}

uint64_t sub_23E444ECC()
{
  sub_23E44DE20();
  return sub_23E53857C();
}

uint64_t StaticService.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __int16 v13;
  _QWORD v15[3];
  unint64_t v16;
  __int128 v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D471E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E44DE20();
  sub_23E5384EC();
  LOBYTE(v17) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticService();
    LOBYTE(v17) = 1;
    sub_23E538270();
    LOBYTE(v17) = 2;
    sub_23E53827C();
    LOBYTE(v17) = 3;
    sub_23E53827C();
    LOBYTE(v17) = 4;
    sub_23E53827C();
    LOBYTE(v17) = 5;
    sub_23E5381F8();
    LOBYTE(v17) = 6;
    sub_23E5382AC();
    LOBYTE(v17) = 7;
    sub_23E53821C();
    v16 = v3 + v9[12];
    LOBYTE(v17) = 8;
    type metadata accessor for StaticDeviceMetadata();
    sub_23E1EE1C4(&qword_256D471F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
    sub_23E538234();
    v16 = v3 + v9[13];
    LOBYTE(v17) = 9;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v9[14]);
    v18 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v17) = 11;
    sub_23E5381EC();
    LOBYTE(v17) = 12;
    sub_23E53827C();
    LOBYTE(v17) = 13;
    sub_23E53827C();
    LOBYTE(v17) = 14;
    sub_23E53827C();
    LOBYTE(v17) = 15;
    sub_23E53827C();
    LOBYTE(v17) = 16;
    sub_23E5381EC();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[21]);
    v18 = 17;
    v16 = sub_23E2BE8AC();
    sub_23E5382AC();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[22]);
    v18 = 18;
    sub_23E396A20();
    sub_23E538234();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[23]);
    v18 = 19;
    sub_23E538234();
    LOBYTE(v17) = 20;
    sub_23E538234();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v9[25]);
    v18 = 21;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47200);
    v15[2] = sub_23E44DEEC(&qword_256D47208, &qword_256D40DD0, (uint64_t)&protocol conformance descriptor for StaticService, MEMORY[0x24BEE12A0]);
    v16 = v10;
    sub_23E5382AC();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v9[26]);
    v18 = 22;
    sub_23E44DE64();
    sub_23E5382AC();
    v17 = *(_OWORD *)(v3 + v9[27]);
    v18 = 23;
    sub_23E44DEA8();
    sub_23E5382AC();
    v15[1] = v3 + v9[28];
    LOBYTE(v17) = 24;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_23E1EE1C4(&qword_256D46470, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
    sub_23E538234();
    LOBYTE(v17) = *(_BYTE *)(v3 + v9[29]);
    v18 = 25;
    sub_23E3760D8();
    sub_23E5382AC();
    *(_QWORD *)&v17 = *(_QWORD *)(v3 + v9[30]);
    v18 = 26;
    sub_23E5382AC();
    LOBYTE(v17) = 27;
    sub_23E538234();
    LOBYTE(v17) = 28;
    sub_23E53824C();
    v11 = (uint64_t *)(v3 + v9[33]);
    v12 = *v11;
    v13 = *((_WORD *)v11 + 4);
    LOBYTE(v11) = *((_BYTE *)v11 + 10);
    *(_QWORD *)&v17 = v12;
    WORD4(v17) = v13;
    BYTE10(v17) = (_BYTE)v11;
    v18 = 29;
    sub_23E2CE674();
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticService.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticService.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __int16 v46;
  char v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  __int128 v64;
  char v65;

  v55 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v53 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v54 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v52 = (uint64_t)&v50 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v9);
  v56 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E536F80();
  v63 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47220);
  v20 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = (int *)type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v62);
  v60 = a1;
  v61 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E44DE20();
  v57 = v22;
  v24 = v59;
  sub_23E5384E0();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  v50 = v13;
  v51 = v17;
  v59 = v20;
  LOBYTE(v64) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v25 = v14;
  v27 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v28 = v61;
  v27(v61, v19, v14);
  LOBYTE(v64) = 1;
  v29 = sub_23E538144();
  v30 = v62;
  v31 = (uint64_t *)&v28[v62[5]];
  *v31 = v29;
  v31[1] = v32;
  LOBYTE(v64) = 2;
  v28[v30[6]] = sub_23E538150() & 1;
  LOBYTE(v64) = 3;
  v28[v30[7]] = sub_23E538150() & 1;
  LOBYTE(v64) = 4;
  v28[v30[8]] = sub_23E538150() & 1;
  LOBYTE(v64) = 5;
  v28[v30[9]] = sub_23E5380E4();
  LOBYTE(v64) = 6;
  v33 = v51;
  sub_23E538180();
  v27(&v28[v30[10]], v33, v25);
  LOBYTE(v64) = 7;
  v34 = sub_23E5380FC();
  v35 = &v28[v30[11]];
  *(_QWORD *)v35 = v34;
  v35[8] = v36 & 1;
  type metadata accessor for StaticDeviceMetadata();
  LOBYTE(v64) = 8;
  sub_23E1EE1C4(&qword_256D47228, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
  v37 = (uint64_t)v50;
  sub_23E538108();
  sub_23E1E4E3C(v37, (uint64_t)&v28[v30[12]], &qword_2543332A8);
  sub_23E536F20();
  LOBYTE(v64) = 9;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538108();
  sub_23E1E4E3C(v56, (uint64_t)&v61[v62[13]], &qword_2543330E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v65 = 10;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v61[v62[14]] = v64;
  LOBYTE(v64) = 11;
  v38 = sub_23E5380D8();
  v39 = (uint64_t *)&v61[v62[15]];
  *v39 = v38;
  v39[1] = v40;
  LOBYTE(v64) = 12;
  v61[v62[16]] = sub_23E538150() & 1;
  LOBYTE(v64) = 13;
  v61[v62[17]] = sub_23E538150() & 1;
  LOBYTE(v64) = 14;
  v61[v62[18]] = sub_23E538150() & 1;
  LOBYTE(v64) = 15;
  v61[v62[19]] = sub_23E538150() & 1;
  LOBYTE(v64) = 16;
  v41 = sub_23E5380D8();
  v42 = (uint64_t *)&v61[v62[20]];
  *v42 = v41;
  v42[1] = v43;
  v65 = 17;
  sub_23E2BE868();
  sub_23E538180();
  v61[v62[21]] = v64;
  v65 = 18;
  sub_23E396AEC();
  sub_23E538108();
  v61[v62[22]] = v64;
  v65 = 19;
  sub_23E538108();
  v61[v62[23]] = v64;
  LOBYTE(v64) = 20;
  sub_23E538108();
  sub_23E1E4E3C(v52, (uint64_t)&v61[v62[24]], &qword_254333F50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47200);
  v65 = 21;
  sub_23E44DEEC(&qword_256D47230, &qword_256D40EE0, (uint64_t)&protocol conformance descriptor for StaticService, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v61[v62[25]] = v64;
  v65 = 22;
  sub_23E44DF70();
  sub_23E538180();
  *(_QWORD *)&v61[v62[26]] = v64;
  v65 = 23;
  sub_23E44DFB4();
  sub_23E538180();
  *(_OWORD *)&v61[v62[27]] = v64;
  type metadata accessor for StaticSoftwareUpdate(0);
  LOBYTE(v64) = 24;
  sub_23E1EE1C4(&qword_256D464A8, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
  sub_23E538108();
  sub_23E1E4E3C(v53, (uint64_t)&v61[v62[28]], &qword_2543332B8);
  v65 = 25;
  sub_23E376160();
  sub_23E538180();
  v61[v62[29]] = v64;
  v65 = 26;
  sub_23E538180();
  *(_QWORD *)&v61[v62[30]] = v64;
  LOBYTE(v64) = 27;
  sub_23E538108();
  sub_23E1E4E3C(v54, (uint64_t)&v61[v62[31]], &qword_254333F50);
  LOBYTE(v64) = 28;
  v44 = sub_23E538120();
  v45 = &v61[v62[32]];
  *(_WORD *)v45 = v44;
  v45[2] = BYTE2(v44) & 1;
  v65 = 29;
  sub_23E2CE784();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v58);
  v46 = WORD4(v64);
  v47 = BYTE10(v64);
  v48 = (uint64_t)v61;
  v49 = &v61[v62[33]];
  *(_QWORD *)v49 = v64;
  *((_WORD *)v49 + 4) = v46;
  v49[10] = v47;
  sub_23E1E2F50(v48, v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  return sub_23E1E2FA0(v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E446750()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E446790()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticService.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E4467C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticService.init(from:)(a1, a2);
}

uint64_t sub_23E4467DC(_QWORD *a1)
{
  return StaticService.encode(to:)(a1);
}

void StaticService.foregroundColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  uint64_t (*v7)(_QWORD);
  _BYTE v8[16];

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 92));
  sub_23E1E2F50(v1, (uint64_t)v5, v7);
  if (v6 == 53)
    LOBYTE(v6) = v5[*(int *)(v2 + 84)];
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v8[15] = v6;
  ServiceKind.foregroundColor.getter();
}

uint64_t StaticService.displayAsServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t (*v9)(_QWORD);
  uint64_t result;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for StaticService();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 92));
  sub_23E1E2F50(v2, (uint64_t)v7, v9);
  if (v8 == 53)
    LOBYTE(v8) = v7[*(int *)(v4 + 84)];
  result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *a1 = v8;
  return result;
}

uint64_t StaticService.serviceKinds.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDE8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E539650;
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticService() + 84));
  return v1;
}

uint64_t StaticService.primaryServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticService();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t sub_23E4469D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E1E7C20(v2 + *(int *)(a1 + 52), a2, &qword_2543330E0);
}

void StaticService.tileIcon.getter(HomeDataModel::Icon *a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  void *v8;
  uint64_t v9;
  Swift::String v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;

  v3 = (int *)type metadata accessor for StaticService();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(v1 + *(int *)(v4 + 80));
  v8 = (void *)v7[1];
  if (v8)
  {
    v9 = *v7;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v9;
    v10._object = v8;
    Icon.init(customIconName:)(a1, v10);
  }
  else
  {
    v11 = *(unsigned __int8 *)(v1 + v3[23]);
    sub_23E1E2F50(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v11 == 53)
      LOBYTE(v11) = v6[v3[21]];
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v14 = v11;
    v13 = *(_BYTE *)(v1 + v3[22]);
    Icon.init(serviceKind:serviceSubKind:)(a1, (HomeDataModel::ServiceKind)&v14, (HomeDataModel::ServiceSubKind_optional)&v13);
  }
}

void sub_23E446B0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  _BYTE v7[16];

  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(unsigned __int8 *)(v3 + *(int *)(a1 + 92));
  sub_23E1E2F50(v3, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v6 == 53)
    LOBYTE(v6) = v5[*(int *)(a1 + 84)];
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v7[15] = v6;
  ServiceKind.foregroundColor.getter();
}

uint64_t sub_23E446BAC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

double sub_23E446BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FDE8);
  v3 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_23E539650;
  *(_BYTE *)(v3 + 32) = *(_BYTE *)(v1 + *(int *)(a1 + 84));
  return result;
}

uint64_t sub_23E446C04@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 84));
  return result;
}

uint64_t sub_23E446C14@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t result;
  uint64_t v10;

  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v5 + *(int *)(a1 + 92));
  sub_23E1E2F50(v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v8 == 53)
    LOBYTE(v8) = v7[*(int *)(a1 + 84)];
  result = sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *a2 = v8;
  return result;
}

uint64_t sub_23E446CAC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 72));
}

uint64_t sub_23E446CB8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 64));
}

uint64_t sub_23E446CC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E446CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 60));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23E446D0C(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_23E446D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23C694;
  v4[7] = a1;
  v4[8] = v1;
  return swift_task_switch();
}

uint64_t StaticService.toggle()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_23E446D94()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 48) = 2;
  *(_OWORD *)(v0 + 16) = xmmword_23E53C8E0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23E446E18;
  return StaticService.toggle(options:context:)(*(_QWORD *)(v0 + 56), (_QWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
}

uint64_t sub_23E446E18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t StaticService.isVisibleService.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StaticService();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v37[-v10];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v37[-v13];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v37[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v37[-v18];
  if (qword_2543331F8 != -1)
    swift_once();
  v20 = sub_23E1E333C(*(unsigned __int8 *)(v1 + *(int *)(v5 + 84)), (uint64_t)off_2543331F0);
  sub_23E1E2F50(v1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v20 & 1) != 0)
  {
    sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_9:
    sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_10:
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_11:
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_12;
  }
  sub_23E1E7C20((uint64_t)&v19[*(int *)(v5 + 96)], (uint64_t)v4, &qword_254333F50);
  sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v21 = sub_23E536F80();
  v22 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v4, 1, v21);
  sub_23E1E7C64((uint64_t)v4, &qword_254333F50);
  v23 = sub_23E1E2F50(v1, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v22 != 1)
    goto LABEL_9;
  v37[12] = v17[*(int *)(v5 + 84)];
  if (ServiceKind.rawValue.getter(v23) == 0xD000000000000024 && v24 == 0x800000023E55F810)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v27 = sub_23E538354();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v28 = sub_23E1E2F50(v1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v27 & 1) != 0)
    goto LABEL_10;
  v37[13] = v14[*(int *)(v5 + 84)];
  if (ServiceKind.rawValue.getter(v28) == 0xD000000000000024 && v29 == 0x800000023E55FB70)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v30 = sub_23E538354();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v31 = sub_23E1E2F50(v1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if ((v30 & 1) != 0)
    goto LABEL_11;
  v37[14] = v11[*(int *)(v5 + 84)];
  if (ServiceKind.rawValue.getter(v31) == 0xD000000000000024 && v32 == 0x800000023E560050)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v33 = sub_23E538354();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v34 = sub_23E1E2F50(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v25 = 0;
  if ((v33 & 1) != 0)
    goto LABEL_13;
  v37[15] = v8[*(int *)(v5 + 84)];
  if (ServiceKind.rawValue.getter(v34) != 0xD000000000000024 || v35 != 0x800000023E560080)
  {
    v36 = sub_23E538354();
    swift_bridgeObjectRelease();
    v25 = v36 ^ 1;
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_12:
  v25 = 0;
LABEL_13:
  sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v25 & 1;
}

char StaticService.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int v7;
  uint64_t (*v8)(_QWORD);
  char result;
  __int16 v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  char v15;
  _BYTE v16[16];

  v3 = (int *)type metadata accessor for StaticService();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(unsigned __int8 *)(v1 + *(int *)(v4 + 92));
  sub_23E1E2F50(v1, (uint64_t)v6, v8);
  if (v7 == 53)
    LOWORD(v7) = v6[v3[21]];
  result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v10 = *(unsigned __int8 *)(v1 + v3[22]);
  v11 = (uint64_t *)(v1 + v3[20]);
  v12 = (void *)v11[1];
  if (v12)
  {
    v13 = *v11;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v13;
    v14._object = v12;
    result = IconSymbol.init(rawValue:)(v14).value;
    v15 = v16[15];
  }
  else
  {
    v15 = 88;
  }
  *(_WORD *)a1 = v7 | (v10 << 8);
  *(_BYTE *)(a1 + 2) = 0;
  *(_BYTE *)(a1 + 3) = v15;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t StaticService.temperatureStringStatusIcon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v2, (uint64_t)v6, v7);
  sub_23E4E38CC((uint64_t)v6);
  if (v9)
  {
    v10 = v8;
    v11 = v9;
    v12 = sub_23E4E3AB8((uint64_t)v6);
    result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v12)
    {
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      return result;
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

uint64_t StaticService.mute.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 84;
  return sub_23E2B4680(&v2);
}

void *sub_23E447560()
{
  void *result;

  result = (void *)sub_23E2CDCB0((uint64_t)&unk_250EDAB30);
  off_2543331F0 = result;
  return result;
}

uint64_t static StaticService.sensorKinds.getter()
{
  if (qword_2543331F8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  swift_bridgeObjectRetain();
  sub_23E24D680((uint64_t (*)(char *))sub_23E412244, v3, a1);
  return swift_bridgeObjectRelease();
}

Swift::Double_optional __swiftcall StaticService.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  char v3;
  double v4;
  unsigned __int8 v5;
  uint64_t v6;
  Swift::Double_optional result;

  v2 = *(_BYTE *)a1;
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  v5 = v2;
  v3 = sub_23E2B51E4(&v5);
  result.value = v4;
  result.is_nil = v3;
  return result;
}

Swift::String_optional __swiftcall StaticService.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String_optional result;
  uint64_t v16;

  v2 = (unsigned __int8 *)a1;
  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_23E1EAF70(*v2), (v9 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      v11 = *(_QWORD *)v10;
      v12 = (void *)*((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v13 = v11;
  v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t StaticService.data(for:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v7 + 16))
    return 0;
  v8 = sub_23E1EAF70(*a1);
  if ((v9 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    v11 = *(_QWORD *)v10;
    sub_23E2B8BF8(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = 0;
  }
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t StaticService.airParticulateDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 6;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.airParticulateSize.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 7;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.cameraNightVision.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 14;
  return sub_23E2B4680(&v2);
}

uint64_t StaticService.carbonDioxideLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 19;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.carbonDioxidePeakLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 20;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.carbonMonoxideLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 22;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.carbonMonoxidePeakLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 23;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticService.colorTemperature.getter()
{
  return sub_23E4486B0(26);
}

Swift::Int StaticService.currentFanState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 32;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticService.currentHorizontalTilt.getter()
{
  return sub_23E4486B0(35);
}

unint64_t StaticService.currentTilt.getter()
{
  return sub_23E4486B0(45);
}

unint64_t StaticService.currentVerticalTilt.getter()
{
  return sub_23E4486B0(46);
}

Swift::Int StaticService.currentVisibilityState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 47;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.filterChangeIndication.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 50;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.filterLifeLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 51;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.hue.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 57;
  return sub_23E2B51E4(&v2);
}

Swift::Int _s13HomeDataModel13StaticServiceV33targetHumidifierDehumidifierStateSo027HMCharacteristicValueTargetghI0VSgvg_0()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.isConfigured.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 70;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.lockPhysicalControls.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 78;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.manufacturer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(80);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.model.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(82);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.nightVision.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 86;
  return sub_23E2B4680(&v2);
}

uint64_t StaticService.nitrogenDioxideDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 87;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.obstructionDetected.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 88;
  return sub_23E2B4680(&v2);
}

uint64_t StaticService.outletInUse.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 91;
  return sub_23E2B4680(&v2);
}

uint64_t StaticService.ozoneDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 94;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.pM10Density.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 95;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.pM2_5Density.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 96;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticService.remainingDuration.getter()
{
  return sub_23E4486B0(112);
}

Swift::Int StaticService.rotationDirection.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 114;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticService.setDuration.getter()
{
  return sub_23E4486B0(123);
}

Swift::Int StaticService.slatType.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.saturation.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = 116;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.statusActive.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -127;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticService.statusJammed.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.statusLowBattery.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -124;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.statusTampered.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -123;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.sulphurDioxideDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -121;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticService.swingMode.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -110;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.targetFanState.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticService.targetHorizontalTilt.getter()
{
  return sub_23E4486B0(153);
}

uint64_t StaticService.targetRelativeHumidity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -97;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticService.targetTilt.getter()
{
  return sub_23E4486B0(163);
}

unint64_t StaticService.targetVerticalTilt.getter()
{
  return sub_23E4486B0(164);
}

Swift::Int StaticService.temperatureUnits.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -90;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticService.valveType.getter()
{
  uint64_t v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticService.version.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(168);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.volatileOrganicCompoundDensity.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -87;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticService.volume.getter()
{
  return sub_23E4486B0(170);
}

unint64_t sub_23E4486B0(char a1)
{
  uint64_t v1;
  char v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
}

uint64_t StaticService.waterLevel.getter()
{
  uint64_t v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v2 = -83;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticService.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticService();
  sub_23E267924(*(_QWORD *)(v1 + *(int *)(v6 + 56)), (uint64_t)v5);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  __break(1u);
  return result;
}

uint64_t sub_23E448804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E267924(*(_QWORD *)(v2 + *(int *)(a1 + 56)), (uint64_t)v7);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  __break(1u);
  return result;
}

uint64_t StaticService.set(includedInStatus:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E4488DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E448948()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4489AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E448A0C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E448A54()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E448ABC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E448B20()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMService.contributesToHomeStatus.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticService.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;

  BYTE8(v3) = 0;
  sub_23E537E68();
  sub_23E537628();
  v1 = type metadata accessor for StaticService();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E536F80();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  *(_QWORD *)&v3 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 84));
  ServiceKind.localizedDescription.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  ServiceKind.localizedDescription.getter();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return *(_QWORD *)((char *)&v3 + 1);
}

uint64_t static StaticService.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(int *)(type metadata accessor for StaticService() + 24);
  if ((*(_BYTE *)(a2 + v4) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(a1 + v4) & 1) == 0)
    JUMPOUT(0x24264E1E8);
  return 1;
}

uint64_t sub_23E448D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 24);
  if ((*(_BYTE *)(a2 + v3) & 1) != 0)
    return 0;
  if (*(_BYTE *)(a1 + v3) != 1)
    JUMPOUT(0x24264E1E8);
  return 1;
}

uint64_t sub_23E448DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  v3 = *(int *)(a3 + 24);
  if ((*(_BYTE *)(a1 + v3) & 1) != 0)
  {
    v4 = 1;
  }
  else if (*(_BYTE *)(a2 + v3) == 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = MEMORY[0x24264E1E8](a2, a1) ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23E448E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  v3 = *(int *)(a3 + 24);
  if ((*(_BYTE *)(a2 + v3) & 1) != 0)
  {
    v4 = 1;
  }
  else if (*(_BYTE *)(a1 + v3) == 1)
  {
    v4 = 0;
  }
  else
  {
    v4 = MEMORY[0x24264E1E8]() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23E448E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 24);
  if ((*(_BYTE *)(a1 + v3) & 1) != 0)
    return 0;
  if (*(_BYTE *)(a2 + v3) != 1)
    JUMPOUT(0x24264E1E8);
  return 1;
}

uint64_t Collection<>.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for StaticCharacteristic();
  v3 = sub_23E5376DC();
  v4 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v3 + 16))
  {
    sub_23E1E2F50(v3 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v5, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E448F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticService() + 104));
  swift_bridgeObjectRetain();
  sub_23E24D680((uint64_t (*)(char *))sub_23E452ECC, v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E448FD0@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  char v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t updated;
  void *v50;
  uint64_t v51;
  uint64_t *v52;
  int v53;
  char v54;

  v51 = a6;
  v53 = a5;
  v50 = a4;
  v52 = a7;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v48 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v22 = *a2;
  sub_23E1E7C20(a3, (uint64_t)v17, &qword_254334340);
  v23 = type metadata accessor for StateSnapshot(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v17, 1, v23) != 1)
  {
    v46 = v11;
    v47 = v20;
    v30 = *(_QWORD *)&v17[*(int *)(v23 + 32)];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StateSnapshot);
    v31 = objc_msgSend(v22, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v30 + 16))
    {
      v24 = v22;
      v32 = sub_23E1E3300((uint64_t)v14);
      if ((v33 & 1) != 0)
      {
        v34 = v32;
        v35 = *(_QWORD *)(v30 + 56);
        v36 = type metadata accessor for StaticAccessory(0);
        v37 = *(_QWORD *)(v36 - 8);
        v38 = v35 + *(_QWORD *)(v37 + 72) * v34;
        v39 = (uint64_t)v47;
        sub_23E1E2F50(v38, (uint64_t)v47, type metadata accessor for StaticAccessory);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v36);
LABEL_8:
        v26 = v52;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v46);
        v27 = v51;
        v28 = v50;
        v29 = v53;
        v20 = v47;
        goto LABEL_9;
      }
    }
    else
    {
      v24 = v22;
    }
    v40 = type metadata accessor for StaticAccessory(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v47, 1, 1, v40);
    goto LABEL_8;
  }
  v24 = v22;
  sub_23E1E7C64((uint64_t)v17, &qword_254334340);
  v25 = type metadata accessor for StaticAccessory(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  v26 = v52;
  v28 = v50;
  v27 = v51;
  v29 = v53;
LABEL_9:
  v41 = (uint64_t)v48;
  v42 = v29 & 1;
  *v48 = v28;
  swift_storeEnumTagMultiPayload();
  v54 = v42;
  swift_bridgeObjectRetain();
  v43 = sub_23E44E320(v41, (uint64_t)v28, v24, &v54, 1, (uint64_t)v20, v27);
  sub_23E1E2FA0(v41, type metadata accessor for StateSnapshot.UpdateType);
  v44 = sub_23E43F9B4(v43, v21);
  result = sub_23E1E7C64((uint64_t)v20, &qword_254333468);
  *v26 = v44;
  return result;
}

uint64_t sub_23E449334@<X0>(void **a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  void *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  int v46;
  id v47;
  id v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  unint64_t v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  id v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  id v146;
  unint64_t v147;
  int v148;
  unsigned __int8 v149;
  unsigned __int8 v150;
  unsigned __int8 v151;

  v142 = a8;
  v143 = a4;
  v144 = a7;
  v145 = a3;
  v146 = a5;
  v139 = a9;
  v13 = sub_23E536F80();
  v132 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v137 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v123 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v134 = (uint64_t)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v126 = (uint64_t)&v123 - v21;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v23 = MEMORY[0x24BDAC7A8](updated);
  v135 = (uint64_t)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v127 = (char *)&v123 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v140 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = MEMORY[0x24BDAC7A8](v27);
  v136 = (char *)&v123 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v125 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v123 - v32);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v128 = (char *)&v123 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v133 = (char *)&v123 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v141 = (uint64_t)&v123 - v37;
  v38 = *a1;
  if ((a2 & 1) != 0)
  {
    if (qword_2543331E8 != -1)
      swift_once();
    v39 = qword_254334BB8;
    v40 = objc_msgSend(v38, sel_serviceType);
    v41 = sub_23E53755C();
    v43 = v42;

    v44._countAndFlagsBits = v41;
    v44._object = v43;
    ServiceKind.init(rawValue:)(v44);
    v45 = v149 == 53 ? 0 : v149;
    if ((sub_23E1E333C(v45, v39) & 1) == 0)
    {
      v79 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v139, 1, 1, v79);
    }
  }
  v124 = v13;
  v46 = a6 & 1;
  v47 = v145;
  v48 = objc_msgSend(v145, sel_services, v17);
  v147 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v49 = sub_23E5377F0();

  v50 = v38;
  v51 = sub_23E44EBF8(v49, v50);
  v138 = v9;
  swift_bridgeObjectRelease();

  MEMORY[0x24BDAC7A8](v52);
  v54 = v143;
  v53 = v144;
  v55 = (unint64_t)v146;
  *(&v123 - 6) = v143;
  *(&v123 - 5) = v55;
  *(&v123 - 4) = (uint64_t)v47;
  *((_BYTE *)&v123 - 24) = v46;
  v56 = v142;
  v121 = v53;
  v122 = v142;
  v57 = v138;
  v130 = sub_23E1E3304((void (*)(id *))sub_23E452A80, (uint64_t)(&v123 - 8), v51);
  v131 = v57;
  swift_bridgeObjectRelease();
  v138 = v50;
  v148 = v46;
  v129 = sub_23E44B168(v50, v55, v47, v54, v46, v53, v56);
  v58 = objc_msgSend(v47, sel_services);
  v59 = sub_23E5377F0();

  if (v59 >> 62)
  {
LABEL_43:
    swift_bridgeObjectRetain();
    v60 = sub_23E53803C();
    if (v60)
    {
LABEL_10:
      v147 = v59 & 0xC000000000000001;
      v61 = 4;
      while (1)
      {
        if (v147)
          v62 = (id)MEMORY[0x24264F148](v61 - 4, v59);
        else
          v62 = *(id *)(v59 + 8 * v61);
        v63 = v62;
        v64 = v61 - 3;
        if (__OFADD__(v61 - 4, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        v65 = objc_msgSend(v62, sel_serviceType);
        v66 = sub_23E53755C();
        v68 = v67;

        if (v66 == sub_23E53755C() && v68 == v69)
          break;
        v71 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v71 & 1) != 0)
          goto LABEL_24;

        ++v61;
        if (v64 == v60)
          goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
LABEL_24:
      v81 = (uint64_t)v127;
      swift_bridgeObjectRelease_n();
      sub_23E1E2F50(v143, v81, type metadata accessor for StateSnapshot.UpdateType);
      v150 = v148;
      v82 = type metadata accessor for StaticService();
      v83 = *(_QWORD *)(v82 - 8);
      v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56);
      v85 = (uint64_t)v128;
      v84(v128, 1, 1, v82);
      v86 = v126;
      sub_23E1E7C20(v144, v126, &qword_254333468);
      v87 = type metadata accessor for StaticAccessory(0);
      v88 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 48))(v86, 1, v87);
      v76 = v142;
      if (v88 == 1)
      {
        sub_23E1E7C64(v86, &qword_254333468);
        v89 = v125;
        v84((char *)v125, 1, 1, v82);
        v78 = (uint64_t)v136;
        v77 = (uint64_t)v137;
        v73 = (uint64_t)v133;
      }
      else
      {
        v90 = v86;
        v91 = *(_QWORD *)(v86 + *(int *)(v87 + 76));
        swift_bridgeObjectRetain();
        sub_23E1E2FA0(v90, type metadata accessor for StaticAccessory);
        v92 = objc_msgSend(v63, sel_uniqueIdentifier);
        v93 = v123;
        sub_23E536F68();

        if (*(_QWORD *)(v91 + 16))
        {
          v94 = sub_23E1E3300(v93);
          v89 = v125;
          if ((v95 & 1) != 0)
          {
            sub_23E1E2F50(*(_QWORD *)(v91 + 56) + *(_QWORD *)(v83 + 72) * v94, (uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v96 = 0;
          }
          else
          {
            v96 = 1;
          }
          v81 = (uint64_t)v127;
          v85 = (uint64_t)v128;
          v73 = (uint64_t)v133;
        }
        else
        {
          v96 = 1;
          v73 = (uint64_t)v133;
          v85 = (uint64_t)v128;
          v89 = v125;
        }
        v84((char *)v89, v96, 1, v82);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v123, v124);
        v78 = (uint64_t)v136;
        v77 = (uint64_t)v137;
      }
      swift_bridgeObjectRetain();
      v97 = v145;
      v98 = v146;
      sub_23E44A0A4(v81, v98, v63, v97, &v150, MEMORY[0x24BEE4AF8], v85, MEMORY[0x24BEE4AF8], v73, v89, v76);
      v75 = v139;
      v74 = v140;
      goto LABEL_34;
    }
  }
  else
  {
    v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v60)
      goto LABEL_10;
  }
LABEL_21:
  swift_bridgeObjectRelease_n();
  v72 = type metadata accessor for StaticService();
  v73 = (uint64_t)v133;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v133, 1, 1, v72);
  v75 = v139;
  v74 = v140;
  v76 = v142;
  v78 = (uint64_t)v136;
  v77 = (uint64_t)v137;
LABEL_34:
  v99 = v141;
  sub_23E1E4E3C(v73, v141, &qword_254332DE8);
  v100 = v135;
  sub_23E1E2F50(v143, v135, type metadata accessor for StateSnapshot.UpdateType);
  v151 = v148;
  sub_23E1E7C20(v99, v78, &qword_254332DE8);
  v101 = v134;
  sub_23E1E7C20(v144, v134, &qword_254333468);
  v102 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v101, 1, v102) == 1)
  {
    v103 = v138;
    v104 = v138;
    sub_23E1E7C64(v101, &qword_254333468);
    v105 = type metadata accessor for StaticService();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v74, 1, 1, v105);
  }
  else
  {
    v106 = v101;
    v107 = *(_QWORD *)(v101 + *(int *)(v102 + 76));
    v108 = v138;
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v106, type metadata accessor for StaticAccessory);
    v109 = objc_msgSend(v108, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v107 + 16) && (v110 = sub_23E1E3300(v77), (v111 & 1) != 0))
    {
      v112 = v110;
      v113 = *(_QWORD *)(v107 + 56);
      v114 = type metadata accessor for StaticService();
      v115 = *(_QWORD *)(v114 - 8);
      sub_23E1E2F50(v113 + *(_QWORD *)(v115 + 72) * v112, (uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v116 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v115 + 56);
      v78 = (uint64_t)v136;
      v77 = (uint64_t)v137;
      v117 = v114;
      v74 = v140;
      v116(v140, 0, 1, v117);
    }
    else
    {
      v118 = type metadata accessor for StaticService();
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v74, 1, 1, v118);
    }
    v103 = v138;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v77, v124);
  }
  swift_bridgeObjectRetain();
  v119 = v145;
  v120 = v146;
  sub_23E44A0A4(v100, v120, v103, v119, &v151, v130, v78, v129, v75, v74, v76);
  return sub_23E1E7C64(v141, &qword_254332DE8);
}

uint64_t sub_23E449D48@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t updated;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;

  v56 = a6;
  v53 = a3;
  v54 = a7;
  v52 = a4;
  v55 = a8;
  v10 = a5 & 1;
  v50 = sub_23E536F80();
  v11 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v49 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v48 - v20;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  sub_23E1E2F50(a2, (uint64_t)v24, v26);
  v57 = v10;
  v27 = type metadata accessor for StaticService();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v51 = v21;
  v29(v21, 1, 1, v27);
  sub_23E1E7C20(v56, (uint64_t)v15, &qword_254333468);
  v30 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v15, 1, v30) == 1)
  {
    v31 = v25;
    sub_23E1E7C64((uint64_t)v15, &qword_254333468);
    v29((char *)v19, 1, 1, v27);
    v32 = v55;
    v34 = v53;
    v33 = v54;
    v36 = (uint64_t)v51;
    v35 = v52;
  }
  else
  {
    v56 = v11;
    v37 = *(_QWORD *)&v15[*(int *)(v30 + 76)];
    v48 = v25;
    v38 = v25;
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticAccessory);
    v39 = objc_msgSend(v38, sel_uniqueIdentifier);
    v40 = (uint64_t)v49;
    sub_23E536F68();

    if (*(_QWORD *)(v37 + 16))
    {
      v41 = sub_23E1E3300(v40);
      v42 = v50;
      if ((v43 & 1) != 0)
      {
        sub_23E1E2F50(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v28 + 72) * v41, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v44 = 0;
      }
      else
      {
        v44 = 1;
      }
    }
    else
    {
      v44 = 1;
      v42 = v50;
    }
    v29((char *)v19, v44, 1, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v40, v42);
    v33 = v54;
    v32 = v55;
    v35 = v52;
    v34 = v53;
    v36 = (uint64_t)v51;
    v25 = v48;
  }
  swift_bridgeObjectRetain();
  v45 = v35;
  v46 = v34;
  return sub_23E44A0A4((uint64_t)v24, v46, v25, v45, &v57, MEMORY[0x24BEE4AF8], v36, MEMORY[0x24BEE4AF8], v32, v19, v33);
}

uint64_t sub_23E44A0A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  id v58;
  void *v59;
  id v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  _BOOL4 v75;
  id v76;
  char v77;
  id v78;
  uint64_t v79;
  void *v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  char v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  id v95;
  void *v96;
  id v97;
  void (*v98)(uint64_t, id, uint64_t);
  uint64_t v99;
  id v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  void *v113;
  void *v114;
  Swift::String v115;
  char v116;
  id v117;
  void *v118;
  uint64_t v119;
  void *v120;
  void *v121;
  Swift::String v122;
  char v123;
  id v124;
  void *v125;
  uint64_t v126;
  void *v127;
  void *v128;
  Swift::String v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  int *v133;
  unsigned int (*v134)(uint64_t, uint64_t, int *);
  uint64_t v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  BOOL v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int16 v152;
  id v153;
  void *v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  int v164;
  int v165;
  int v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  int v170;
  char *v171;
  char *v172;
  uint64_t updated;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int *v197;
  uint64_t v198;
  id v199;
  void (*v200)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v201;
  char v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  char v206;
  char v207;
  char v208;

  v184 = a8;
  v185 = a6;
  v198 = a1;
  v199 = a2;
  v188 = a9;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v183 = (uint64_t)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v179 = (uint64_t)&v161 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v19);
  v195 = (uint64_t)&v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v21);
  v194 = (uint64_t)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for StaticService();
  v196 = *(_QWORD *)(v23 - 8);
  v197 = (int *)v23;
  MEMORY[0x24BDAC7A8](v23);
  v186 = (uint64_t)&v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E536F80();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v171 = (char *)&v161 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v191 = (uint64_t)&v161 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v190 = (uint64_t)&v161 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v172 = (char *)&v161 - v33;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v34 = MEMORY[0x24BDAC7A8](updated);
  v181 = (uint64_t)&v161 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v174 = (uint64_t)&v161 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v161 - v38;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v182 = (uint64_t)&v161 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v189 = (uint64_t)&v161 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v169 = (uint64_t)&v161 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v201 = (uint64_t)&v161 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v161 - v49;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v176 = (uint64_t)&v161 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v52);
  v175 = *a5;
  v192 = (uint64_t)&v161 - v54;
  sub_23E44C67C(a4, (uint64_t)&v161 - v54);
  v187 = a7;
  v180 = sub_23E44C7A4(a7);
  v178 = sub_23E44C934(a3, a4);
  v177 = v55;
  v56 = objc_msgSend(a4, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v57 = sub_23E5377F0();

  v58 = a3;
  v59 = sub_23E44E92C(v57);
  swift_bridgeObjectRelease();

  v193 = v50;
  if (v59)
  {
    v60 = objc_msgSend(v59, sel_uniqueIdentifier);

    sub_23E536F68();
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v62 = v50;
    v63 = 0;
  }
  else
  {
    v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v62 = v50;
    v63 = 1;
  }
  v200 = v61;
  v61((uint64_t)v62, v63, 1, v25);
  if (objc_msgSend(a4, sel_isBridged))
  {
    v64 = objc_msgSend(v199, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v65 = sub_23E5377F0();

    v66 = a4;
    v67 = sub_23E44E5C4(v65, v66);
    swift_bridgeObjectRelease();

    if (v67)
    {
      v68 = objc_msgSend(v67, (SEL)0x250EFBD48);

      sub_23E536F68();
      v69 = 0;
    }
    else
    {
      v69 = 1;
    }
  }
  else
  {
    v69 = 1;
  }
  v200(v201, v69, 1, v25);
  sub_23E1E2F50(v198, (uint64_t)v39, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    v70 = *((_QWORD *)v39 + 1);
    swift_bridgeObjectRelease();
    v71 = objc_msgSend(a4, (SEL)0x250EFBD48);
    v72 = (uint64_t)v172;
    sub_23E536F68();

    if (*(_QWORD *)(v70 + 16) && (v73 = sub_23E1E3300(v72), (v74 & 1) != 0))
    {
      LODWORD(updated) = *(unsigned __int8 *)(*(_QWORD *)(v70 + 56) + v73);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v72, v25);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v72, v25);
      LODWORD(updated) = objc_msgSend(a4, sel_isReachable);
    }
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v39, type metadata accessor for StateSnapshot.UpdateType);
    v75 = (objc_msgSend(a4, sel_isReachable) & 1) != 0
       || objc_msgSend(a4, sel_suspendedState) == (id)3
       || objc_msgSend(a4, sel_suspendedState) == (id)2;
    LODWORD(updated) = v75;
  }
  v76 = objc_msgSend(v58, (SEL)0x250EFBD48);
  sub_23E536F68();

  LODWORD(v172) = objc_msgSend(v58, sel_isPrimaryService);
  v77 = sub_23E1E59D0();
  if (v77 == 2)
  {
    v78 = objc_msgSend(v58, sel_serviceType);
    v79 = sub_23E53755C();
    v81 = v80;

    v82._countAndFlagsBits = v79;
    v82._object = v81;
    LOBYTE(v83) = ServiceKind.init(rawValue:)(v82);
    v84 = v204;
    if (v204 == 53)
      v84 = 0;
    LOBYTE(v204) = v84;
    v170 = ServiceKind.isDoubleHighByDefault.getter(v83);
  }
  else
  {
    v170 = v77 & 1;
  }
  v85 = v171;
  v86 = objc_msgSend(a4, (SEL)0x250EFBD48);
  sub_23E536F68();

  v87 = objc_msgSend(v58, sel_mediaSourceIdentifier);
  v168 = v87;
  if (v87)
  {
    v88 = v87;
    v171 = (char *)objc_msgSend(v87, sel_integerValue);

  }
  else
  {
    v171 = 0;
  }
  v89 = a4;
  v90 = v194;
  sub_23E1E4FB8(v89, v194);
  v91 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v90, 0, 1, v91);
  HMService.dateAdded.getter(v195);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v92 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_23E539650;
  v94 = v93 + v92;
  v95 = objc_msgSend(v89, sel_room);
  if (v95)
  {
    v96 = v95;
    v97 = objc_msgSend(v95, (SEL)0x250EFBD48);

    sub_23E536F68();
    v98 = *(void (**)(uint64_t, id, uint64_t))(v26 + 32);
    v99 = v169;
    v98(v169, v85, v25);
    v200(v99, 0, 1, v25);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v99, 1, v25) != 1)
    {
      v98(v94, (id)v99, v25);
      goto LABEL_32;
    }
  }
  else
  {
    v99 = v169;
    v200(v169, 1, 1, v25);
  }
  v100 = objc_msgSend(v199, sel_roomForEntireHome);
  v101 = v99;
  v102 = objc_msgSend(v100, (SEL)0x250EFBD48);

  sub_23E536F68();
  (*(void (**)(unint64_t, id, uint64_t))(v26 + 32))(v94, v85, v25);
  sub_23E1E7C64(v101, &qword_254333F50);
LABEL_32:
  v103 = v174;
  if (*(_QWORD *)(v93 + 16))
    v174 = sub_23E2CD9CC(v93);
  else
    v174 = MEMORY[0x24BEE4B08];
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v104 = objc_msgSend(v89, sel_room);
  if (v104)
  {
    v105 = v104;
    v106 = objc_msgSend(v104, sel_name);
  }
  else
  {
    v105 = objc_msgSend(v199, sel_roomForEntireHome);
    v106 = objc_msgSend(v105, sel_name);
  }
  v107 = v106;

  v169 = sub_23E53755C();
  v167 = v108;

  v166 = HMService.shouldShowInDashboard.getter();
  v165 = HMAccessory.showAsIndividualTiles.getter();
  v164 = HMService.isFavorite.getter();
  if ((HMService.contributesToHomeStatus.getter() & 1) != 0)
    v163 = HMAccessory.contributesToHomeStatus.getter();
  else
    v163 = 0;
  v109 = v181;
  v200 = a10;
  v181 = HMService.customIconSFSymbol.getter();
  v162 = v110;
  v111 = objc_msgSend(v58, sel_serviceType);
  v112 = sub_23E53755C();
  v114 = v113;

  v115._countAndFlagsBits = v112;
  v115._object = v114;
  ServiceKind.init(rawValue:)(v115);
  v116 = v204;
  if (v204 == 53)
    v116 = 0;
  v208 = v116;
  v117 = objc_msgSend(v58, sel_serviceSubtype);
  if (v117)
  {
    v118 = v117;
    v119 = sub_23E53755C();
    v121 = v120;

    v122._countAndFlagsBits = v119;
    v122._object = v121;
    ServiceSubKind.init(rawValue:)(v122);
    v123 = v204;
    if (v204 == 5)
      v123 = 0;
  }
  else
  {
    v123 = 0;
  }
  v207 = v123;
  v124 = objc_msgSend(v58, sel_associatedServiceType);
  if (v124)
  {
    v125 = v124;
    v126 = sub_23E53755C();
    v128 = v127;

    v129._countAndFlagsBits = v126;
    v129._object = v128;
    ServiceKind.init(rawValue:)(v129);
    v130 = v204;
    if (v204 == 53)
      v130 = 0;
  }
  else
  {
    v130 = 53;
  }
  v206 = v130;
  sub_23E1E7C20((uint64_t)v193, v189, &qword_254333F50);
  v131 = v198;
  sub_23E1E2F50(v198, v103, type metadata accessor for StateSnapshot.UpdateType);
  v132 = v179;
  sub_23E1E7C20((uint64_t)v200, v179, &qword_254332DE8);
  v133 = v197;
  v134 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v196 + 48);
  if (v134(v132, 1, v197) == 1)
  {
    sub_23E1E7C64(v132, &qword_254332DE8);
    v135 = 0;
  }
  else
  {
    v135 = *(_QWORD *)(v132 + v133[26]);
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *(_QWORD *)&v204 = v135;
  v136 = v58;
  sub_23E2B74A8(v103, v136, (uint64_t *)&v204, a11, (unint64_t *)&v205);
  sub_23E1E2F50(v131, v109, type metadata accessor for StateSnapshot.UpdateType);
  v137 = v183;
  sub_23E1E7C20((uint64_t)v200, v183, &qword_254332DE8);
  if (v134(v137, 1, v133) == 1)
  {
    sub_23E1E7C64(v137, &qword_254332DE8);
    v138 = 0;
    v139 = 0;
  }
  else
  {
    v140 = (uint64_t *)(v137 + v133[27]);
    v141 = v137;
    v138 = *v140;
    v139 = v140[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v141, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v142 = v168 == 0;
  *(_QWORD *)&v203 = v138;
  *((_QWORD *)&v203 + 1) = v139;
  v143 = v136;
  v144 = v89;
  v145 = v199;
  sub_23E1E59DC(v144, v109, v143, v145, (uint64_t *)&v203, &v204);
  v203 = v204;
  v146 = v176;
  sub_23E1E7C20(v192, v176, &qword_2543332B8);
  v202 = v175;
  if (v184)
    v147 = v184;
  else
    v147 = MEMORY[0x24BEE4AF8];
  v148 = v182;
  sub_23E1E7C20(v201, v182, &qword_254333F50);
  v149 = sub_23E537C88();
  v160 = v142;
  v150 = v186;
  sub_23E4439E0(v190, v178, v177, (char)v172, v170 & 1, updated, v180, v191, v186, (uint64_t)v171, v160, v194, v195, v174, v169, v167, v166 & 1, v165 & 1, v164 & 1,
    v163 & 1,
    v181,
    v162,
    &v208,
    &v207,
    &v206,
    v189,
    v185,
    &v205,
    &v203,
    v146,
    &v202,
    v147,
    v148,
    v149,
    (v149 & 0x1FFFF) >> 16);
  v151 = v150 + v133[32];
  if ((*(_BYTE *)(v151 + 2) & 1) != 0
    || (v152 = *(_WORD *)v151,
        (v153 = objc_msgSend(v144, sel_hdm_matterNodeID)) == 0))
  {

    goto LABEL_67;
  }
  v154 = v153;
  *(_QWORD *)&v204 = 0;
  BYTE8(v204) = 1;
  sub_23E5384D4();

  if ((BYTE8(v204) & 1) != 0)
  {
LABEL_67:
    v156 = 0;
    v152 = 0;
    v155 = 1;
    goto LABEL_68;
  }
  v155 = 0;
  v156 = v204;
LABEL_68:
  v157 = (uint64_t)v193;
  sub_23E1E7C64((uint64_t)v200, &qword_254332DE8);
  sub_23E1E7C64(v187, &qword_254332DE8);
  sub_23E1E2FA0(v131, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E1E7C64(v201, &qword_254333F50);
  sub_23E1E7C64(v157, &qword_254333F50);
  sub_23E1E7C64(v192, &qword_2543332B8);
  *(_QWORD *)&v204 = v156;
  WORD4(v204) = v152;
  BYTE10(v204) = v155;
  v158 = v188;
  StaticService.copyReplacing(matterEndpointPath:)((uint64_t)&v204, v188);
  sub_23E1E2FA0(v150, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v196 + 56))(v158, 0, 1, v197);
}

uint64_t sub_23E44B168(void *a1, unint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  BOOL v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  Swift::String v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  void *v82;
  unint64_t v83;
  id v84;
  unint64_t v85;
  uint64_t v86;
  void *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  unint64_t v94;
  char *v95;
  char v96;
  uint64_t v97;

  v79 = a6;
  v80 = a7;
  v81 = a5;
  v78 = a4;
  v82 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333170);
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = a1;
  v11 = objc_msgSend(a1, sel_serviceType);
  v12 = sub_23E53755C();
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  LOBYTE(v16) = ServiceKind.init(rawValue:)(v15);
  v17 = v97;
  if (v97 == 53)
    v17 = 0;
  LOBYTE(v97) = v17;
  if (ServiceKind.rawValue.getter(v16) == 0xD000000000000024 && v18 == 0x800000023E55FBA0)
    goto LABEL_5;
  v19 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    v41 = objc_msgSend(v84, sel_serviceType);
    v42 = sub_23E53755C();
    v44 = v43;

    v45._countAndFlagsBits = v42;
    v45._object = v44;
    LOBYTE(v46) = ServiceKind.init(rawValue:)(v45);
    v47 = v97;
    if (v97 == 53)
      v47 = 0;
    LOBYTE(v97) = v47;
    if (ServiceKind.rawValue.getter(v46) == 0xD000000000000024 && v48 == 0x800000023E55FA50)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    v49 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0)
      return 0;
  }
LABEL_7:
  v20 = objc_msgSend((id)a2, sel_accessories, v78, v79, v80);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v21 = sub_23E5377F0();

  v97 = MEMORY[0x24BEE4AF8];
  if (v21 >> 62)
  {
LABEL_48:
    swift_bridgeObjectRetain();
    v22 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v83 = a2;
    if (v22)
    {
LABEL_9:
      a2 = 0;
      v88 = v21;
      v89 = v21 & 0xC000000000000001;
      v85 = v21 + 32;
      v86 = v21 & 0xFFFFFFFFFFFFFF8;
      v95 = "00-8000-0026BB765291";
      v94 = 0x800000023E55FFF0;
      v87 = (void *)v22;
      do
      {
        if (v89)
        {
          v23 = (id)MEMORY[0x24264F148](a2, v21);
          v24 = __OFADD__(a2++, 1);
          if (v24)
            goto LABEL_46;
        }
        else
        {
          if (a2 >= *(_QWORD *)(v86 + 16))
            goto LABEL_47;
          v23 = *(id *)(v85 + 8 * a2);
          v24 = __OFADD__(a2++, 1);
          if (v24)
            goto LABEL_46;
        }
        v93 = v23;
        v25 = objc_msgSend(v23, sel_services);
        sub_23E1E335C(0, (unint64_t *)&qword_254333378);
        v26 = sub_23E5377F0();

        if (v26 >> 62)
        {
          swift_bridgeObjectRetain();
          v27 = sub_23E53803C();
          if (v27)
          {
LABEL_20:
            v28 = 4;
            while (1)
            {
              v29 = (v26 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x24264F148](v28 - 4, v26)
                  : *(id *)(v26 + 8 * v28);
              v30 = v29;
              v31 = v28 - 3;
              if (__OFADD__(v28 - 4, 1))
                break;
              v32 = objc_msgSend(v29, sel_serviceType);
              v33 = sub_23E53755C();
              v35 = v34;

              v36._countAndFlagsBits = v33;
              v36._object = v35;
              LOBYTE(v37) = ServiceKind.init(rawValue:)(v36);
              v38 = v96;
              if (v96 == 53)
                v38 = 0;
              v96 = v38;
              if (ServiceKind.rawValue.getter(v37) == 0xD000000000000024 && v39 == v94)
              {
                swift_bridgeObjectRelease_n();

                swift_bridgeObjectRelease();
LABEL_34:
                sub_23E537F1C();
                sub_23E537F4C();
                sub_23E537F58();
                sub_23E537F28();
                goto LABEL_11;
              }
              v21 = sub_23E538354();

              swift_bridgeObjectRelease();
              if ((v21 & 1) != 0)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_34;
              }
              ++v28;
              if (v31 == v27)
                goto LABEL_10;
            }
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }
        }
        else
        {
          v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v27)
            goto LABEL_20;
        }
LABEL_10:
        swift_bridgeObjectRelease_n();

LABEL_11:
        v21 = v88;
      }
      while ((void *)a2 != v87);
      swift_bridgeObjectRelease();
      v40 = v97;
      a2 = v83;
      if ((v97 & 0x8000000000000000) == 0)
        goto LABEL_50;
      goto LABEL_62;
    }
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v83 = a2;
    if (v22)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  v40 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) == 0)
  {
LABEL_50:
    if ((v40 & 0x4000000000000000) == 0)
    {
      v50 = *(_QWORD *)(v40 + 16);
      if (!v50)
        goto LABEL_63;
      goto LABEL_52;
    }
  }
LABEL_62:
  swift_bridgeObjectRetain();
  v50 = sub_23E53803C();
  swift_release();
  if (!v50)
  {
LABEL_63:
    swift_release();
    v52 = MEMORY[0x24BEE4AF8];
    if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_64:
      v60 = MEMORY[0x24BEE4B00];
      goto LABEL_65;
    }
LABEL_61:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3C0);
    v60 = sub_23E53806C();
LABEL_65:
    v61 = v82;
    v97 = v60;
    sub_23E452A9C(v52, 1, &v97);
    v62 = v81 & 1;
    swift_bridgeObjectRelease();
    v63 = v97;
    v64 = objc_msgSend(v61, sel_uniqueIdentifiersForBridgedAccessories);
    if (v64)
    {
      v65 = v64;
      sub_23E536F80();
      v66 = sub_23E5377F0();

      MEMORY[0x24BDAC7A8](v67);
      v68 = v78;
      *(&v78 - 8) = v63;
      *(&v78 - 7) = v68;
      *(&v78 - 6) = a2;
      *((_BYTE *)&v78 - 40) = v62;
      v69 = (uint64_t)v84;
      *(&v78 - 4) = v79;
      *(&v78 - 3) = v69;
      *(&v78 - 2) = v80;
      v70 = sub_23E4739A0((void (*)(_QWORD))sub_23E452EA4, (uint64_t)(&v78 - 10), v66);
      swift_release();
LABEL_69:
      swift_bridgeObjectRelease();
      return v70;
    }
    swift_release();
    v71 = objc_msgSend(v84, sel_linkedServices);
    if (v71)
    {
      v72 = v71;
      sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v73 = (uint64_t)v61;
      v74 = sub_23E5377F0();

      MEMORY[0x24BDAC7A8](v75);
      *(&v78 - 6) = v78;
      *(&v78 - 5) = a2;
      *(&v78 - 4) = v73;
      *((_BYTE *)&v78 - 24) = v62;
      v76 = v80;
      *(&v78 - 2) = v79;
      *(&v78 - 1) = v76;
      v70 = sub_23E1E3304((void (*)(id *))sub_23E452E60, (uint64_t)(&v78 - 8), v74);
      goto LABEL_69;
    }
    return 0;
  }
LABEL_52:
  v97 = MEMORY[0x24BEE4AF8];
  sub_23E2CB4C0(0, v50 & ~(v50 >> 63), 0);
  if ((v50 & 0x8000000000000000) == 0)
  {
    v51 = 0;
    v52 = v97;
    do
    {
      if ((v40 & 0xC000000000000001) != 0)
        v53 = (id)MEMORY[0x24264F148](v51, v40);
      else
        v53 = *(id *)(v40 + 8 * v51 + 32);
      v54 = v53;
      v55 = *(int *)(v91 + 48);
      v56 = objc_msgSend(v53, sel_uniqueIdentifier);
      v57 = (uint64_t)v92;
      sub_23E536F68();

      *(_QWORD *)(v57 + v55) = v54;
      v97 = v52;
      v59 = *(_QWORD *)(v52 + 16);
      v58 = *(_QWORD *)(v52 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_23E2CB4C0(v58 > 1, v59 + 1, 1);
        v57 = (uint64_t)v92;
        v52 = v97;
      }
      ++v51;
      *(_QWORD *)(v52 + 16) = v59 + 1;
      sub_23E1E4E3C(v57, v52+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v59, &qword_254333170);
    }
    while (v50 != v51);
    swift_release();
    a2 = v83;
    if (!*(_QWORD *)(v52 + 16))
      goto LABEL_64;
    goto LABEL_61;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E44B9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t, unint64_t)@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t updated;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  unsigned __int8 v45;
  id v46;
  char v47;
  uint64_t result;
  uint64_t v49;
  unsigned __int8 v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  id v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  id v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, unint64_t);
  uint64_t v90;
  char *v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  unsigned __int8 v98[2];
  unsigned __int8 v99;
  unint64_t v100;

  v10 = v9;
  v85 = a7;
  v89 = a3;
  v90 = a6;
  v87 = a5;
  v16 = type metadata accessor for StaticService();
  v96 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v83 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_23E536F80();
  v84 = *(_QWORD *)(v95 - 8);
  v18 = MEMORY[0x24BDAC7A8](v95);
  v94 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v76 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v22);
  v88 = (uint64_t)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v86 = (uint64_t)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v92 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v76 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)&v76 - v29;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v93 = (uint64_t)&v76 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v96 + 56))(a9, 1, 1, v16);
  v32 = sub_23E1E3300(a1);
  if ((v33 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v96 + 56))(a9, 1, 1, v16);
  v82 = v16;
  v81 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v32);
  v34 = (unint64_t)objc_msgSend(v81, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v16 = sub_23E5377F0();

  v100 = MEMORY[0x24BEE4AF8];
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v35 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v35 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v76 = v21;
  v80 = a4;
  if (!v35)
  {
    result = swift_bridgeObjectRelease();
    v34 = MEMORY[0x24BEE4AF8];
    v16 = v82;
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_48;
    goto LABEL_23;
  }
  v79 = a8;
  v77 = a9;
  v78 = v9;
  if (v35 < 1)
  {
    __break(1u);
LABEL_52:
    v97 = (id)MEMORY[0x24264F148](0, v34);
    swift_release();
    v49 = (uint64_t)v91;
LABEL_28:
    v50 = v87 & 1;
    sub_23E1E2F50((uint64_t)v89, v93, type metadata accessor for StateSnapshot.UpdateType);
    v98[0] = v50;
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v96 + 56);
    v51(v49, 1, 1, v16);
    v52 = v88;
    sub_23E1E7C20(v90, v88, &qword_254333468);
    v53 = type metadata accessor for StaticAccessory(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53) == 1)
    {
      sub_23E1E7C64(v52, &qword_254333468);
    }
    else
    {
      v54 = *(_QWORD *)(v52 + *(int *)(v53 + 76));
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v52, type metadata accessor for StaticAccessory);
      v55 = objc_msgSend(v85, sel_uniqueIdentifier);
      v56 = (uint64_t)v76;
      sub_23E536F68();

      v57 = *(_QWORD *)(v54 + 16);
      v89 = v51;
      if (v57)
      {
        v58 = sub_23E1E3300(v56);
        v59 = v56;
        if ((v60 & 1) != 0)
        {
          sub_23E1E2F50(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v96 + 72) * v58, v86, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v61 = 0;
        }
        else
        {
          v61 = 1;
        }
      }
      else
      {
        v61 = 1;
        v59 = v56;
      }
      v62 = v84;
      v63 = v86;
      v89(v86, v61, 1, v16);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v96 + 48))(v63, 1, v16) != 1)
      {
        v79 = a8;
        v65 = *(_QWORD *)(v63 + *(int *)(v16 + 120));
        swift_bridgeObjectRetain();
        sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v90 = v65;
        v66 = *(_QWORD *)(v65 + 16);
        if (v66)
        {
          v77 = a9;
          v78 = v10;
          v67 = v90 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
          v68 = *(_QWORD *)(v96 + 72);
          swift_bridgeObjectRetain();
          v69 = (uint64_t)v83;
          v70 = v94;
          while (1)
          {
            sub_23E1E2F50(v67, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v71 = objc_msgSend(v97, sel_uniqueIdentifier);
            sub_23E536F68();

            LOBYTE(v71) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
            v72 = *(void (**)(char *, uint64_t))(v62 + 8);
            v72(v70, v95);
            if ((v71 & 1) != 0)
              break;
            sub_23E1E2FA0(v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v67 += v68;
            if (!--v66)
            {
              swift_bridgeObjectRelease();
              a9 = v77;
              v16 = v82;
              v49 = (uint64_t)v91;
              v59 = (uint64_t)v76;
              goto LABEL_43;
            }
          }
          swift_bridgeObjectRelease();
          v73 = (uint64_t)v92;
          sub_23E1E2FDC(v69, (uint64_t)v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v89(v73, 0, 1, v82);
          swift_bridgeObjectRelease();
          a9 = v77;
          v49 = (uint64_t)v91;
          v72(v76, v95);
        }
        else
        {
LABEL_43:
          v89((uint64_t)v92, 1, 1, v16);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v59, v95);
        }
        a8 = v79;
        a4 = v80;
        v64 = v92;
        goto LABEL_46;
      }
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v59, v95);
      sub_23E1E7C64(v63, &qword_254332DE8);
      a4 = v80;
      v51 = v89;
    }
    v64 = v92;
    v51((uint64_t)v92, 1, 1, v16);
LABEL_46:
    swift_bridgeObjectRetain();
    v74 = a4;
    return sub_23E44A0A4(v93, v74, v97, v81, v98, MEMORY[0x24BEE4AF8], v49, MEMORY[0x24BEE4AF8], a9, v64, a8);
  }
  v36 = 0;
  v97 = (id)0x800000023E55FFF0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0)
      v37 = (id)MEMORY[0x24264F148](v36, v16);
    else
      v37 = *(id *)(v16 + 8 * v36 + 32);
    v38 = v37;
    v39 = objc_msgSend(v37, sel_serviceType, v76);
    v40 = sub_23E53755C();
    v42 = v41;

    v43._countAndFlagsBits = v40;
    v43._object = v42;
    LOBYTE(v44) = ServiceKind.init(rawValue:)(v43);
    v45 = v99;
    if (v99 == 53)
      v45 = 0;
    v98[1] = v45;
    if (ServiceKind.rawValue.getter(v44) == 0xD000000000000024 && v46 == v97)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      sub_23E537F28();
      goto LABEL_10;
    }
    v47 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v47 & 1) != 0)
      goto LABEL_9;

LABEL_10:
    ++v36;
  }
  while (v35 != v36);
  result = swift_bridgeObjectRelease();
  v34 = v100;
  v10 = v78;
  a8 = v79;
  a9 = v77;
  a4 = v80;
  v16 = v82;
  if ((v100 & 0x8000000000000000) == 0)
  {
LABEL_23:
    if ((v34 & 0x4000000000000000) != 0)
      goto LABEL_48;
    if (*(_QWORD *)(v34 + 16))
      goto LABEL_25;
LABEL_49:

    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v96 + 56))(a9, 1, 1, v16);
  }
LABEL_48:
  swift_bridgeObjectRetain();
  v75 = sub_23E53803C();
  result = swift_release();
  if (!v75)
    goto LABEL_49;
LABEL_25:
  if ((v34 & 0xC000000000000001) != 0)
    goto LABEL_52;
  v49 = (uint64_t)v91;
  if (*(_QWORD *)(v34 + 16))
  {
    v97 = *(id *)(v34 + 32);
    swift_release();
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E44C244@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t updated;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68[2];
  unsigned __int8 v69;

  v62 = a3;
  v63 = a7;
  v64 = a2;
  v65 = a6;
  v61 = a4;
  v66 = a8;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  v58 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333468);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v67 = (uint64_t)&v56 - v21;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  v26 = objc_msgSend(v25, sel_serviceType);
  v27 = sub_23E53755C();
  v29 = v28;

  v30._countAndFlagsBits = v27;
  v30._object = v29;
  LOBYTE(v31) = ServiceKind.init(rawValue:)(v30);
  v32 = v69;
  if (v69 == 53)
    v32 = 0;
  v68[1] = v32;
  if (ServiceKind.rawValue.getter(v31) == 0xD000000000000024 && v33 == 0x800000023E55FFF0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      v51 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v66, 1, 1, v51);
    }
  }
  v59 = v8;
  sub_23E1E2F50(v64, (uint64_t)v24, type metadata accessor for StateSnapshot.UpdateType);
  v68[0] = a5 & 1;
  v35 = type metadata accessor for StaticService();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  v37(v67, 1, 1, v35);
  sub_23E1E7C20(v65, (uint64_t)v16, &qword_254333468);
  v38 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v16, 1, v38) == 1)
  {
    v39 = v25;
    sub_23E1E7C64((uint64_t)v16, &qword_254333468);
    v37((uint64_t)v20, 1, 1, v35);
    v40 = v66;
    v42 = v62;
    v41 = v63;
  }
  else
  {
    v43 = *(_QWORD *)&v16[*(int *)(v38 + 76)];
    v44 = v25;
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
    v45 = objc_msgSend(v44, sel_uniqueIdentifier);
    v46 = (uint64_t)v60;
    sub_23E536F68();

    if (*(_QWORD *)(v43 + 16))
    {
      v47 = sub_23E1E3300(v46);
      v40 = v66;
      v48 = v57;
      if ((v49 & 1) != 0)
      {
        sub_23E1E2F50(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v36 + 72) * v47, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v50 = 0;
      }
      else
      {
        v50 = 1;
      }
      v42 = v62;
    }
    else
    {
      v50 = 1;
      v40 = v66;
      v42 = v62;
      v48 = v57;
    }
    v37((uint64_t)v20, v50, 1, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v48);
    v41 = v63;
  }
  v53 = v61;
  swift_bridgeObjectRetain();
  v54 = v53;
  v55 = v42;
  return sub_23E44A0A4((uint64_t)v24, v55, v25, v54, v68, MEMORY[0x24BEE4AF8], v67, MEMORY[0x24BEE4AF8], v40, v20, v41);
}

uint64_t sub_23E44C67C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = objc_msgSend(a1, sel_softwareUpdateController);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_availableUpdate);

    if (v6)
      return sub_23E34672C(v6, a1, a2);
  }
  if (objc_msgSend(a1, sel_isFirmwareUpdateAvailable))
  {
    v8 = objc_msgSend(a1, sel_uniqueIdentifier);
    sub_23E536F68();

    v9 = type metadata accessor for StaticSoftwareUpdate(0);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    swift_storeEnumTagMultiPayload();
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a2;
    v12 = 0;
    v13 = v9;
  }
  else
  {
    v13 = type metadata accessor for StaticSoftwareUpdate(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
    v11 = a2;
    v12 = 1;
  }
  return v10(v11, v12, 1, v13);
}

uint64_t sub_23E44C7A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  Swift::Int value;
  _BYTE v12[7];
  char v13;
  uint64_t v14;
  Swift::Int_optional v15;
  Swift::Int_optional v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E7C20(a1, (uint64_t)v4, &qword_254332DE8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    return 2;
  }
  sub_23E1E2FDC((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v10 = *(_QWORD *)&v8[*(int *)(v5 + 104)];
  v14 = v10;
  v13 = 11;
  v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (!v15.is_nil && v15.value <= 9)
  {
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return 1;
  }
  v14 = v10;
  v13 = -124;
  v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (v16.is_nil)
  {
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    value = v16.value;
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (value == 1)
      return 1;
  }
  return 0;
}

uint64_t sub_23E44C934(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  void *v53;
  uint64_t v55;
  void *v56;
  char *v57;
  char v58;
  char v59;

  v4 = sub_23E536FB0();
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E53752C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v55 - v11;
  v13 = objc_msgSend(a1, sel_serviceType);
  v14 = sub_23E53755C();
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  LOBYTE(v18) = ServiceKind.init(rawValue:)(v17);
  v19 = v59;
  if (v59 == 53)
    v19 = 0;
  v58 = v19;
  if (ServiceKind.rawValue.getter(v18) == 0xD000000000000024 && v20 == 0x800000023E55FF60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      v33 = objc_msgSend(a1, sel_name);
      v31 = sub_23E53755C();

      return v31;
    }
  }
  v56 = a1;
  v22 = objc_msgSend(a2, sel_category, v6);
  v23 = objc_msgSend(v22, sel_categoryType);

  v24 = sub_23E53755C();
  v26 = v25;

  if (v24 == sub_23E53755C() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v28 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      v34 = objc_msgSend(a2, sel_category);
      v35 = objc_msgSend(v34, sel_categoryType);

      v36 = sub_23E53755C();
      v38 = v37;

      if (v36 == sub_23E53755C() && v38 == v39)
      {
        swift_bridgeObjectRelease_n();
        v29 = v55;
        v32 = v56;
      }
      else
      {
        sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = v55;
        v32 = v56;
      }
      sub_23E537520();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v29);
      if (qword_254333338 != -1)
        swift_once();
      v40 = (id)qword_254334BC8;
      sub_23E536FA4();
      v31 = sub_23E5375A4();
      goto LABEL_22;
    }
  }
  sub_23E537520();
  v29 = v55;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v55);
  if (qword_254333338 != -1)
    swift_once();
  v30 = (id)qword_254334BC8;
  sub_23E536FA4();
  v31 = sub_23E5375A4();
  v32 = v56;
LABEL_22:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v29);
  v41 = objc_msgSend(v32, sel_configuredName);
  if (v41)
  {
    v42 = v41;
    v43 = sub_23E53755C();
    v45 = v44;

    v46 = objc_msgSend(v32, sel_defaultName);
    if (v46)
    {
      v47 = v46;
      v48 = sub_23E53755C();
      v50 = v49;

      if (v48 == v43 && v50 == v45)
      {
        swift_bridgeObjectRelease_n();
        return v31;
      }
      v51 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
        return v31;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v52 = objc_msgSend(v32, sel_configuredName);
  if (v52)
  {
    v53 = v52;
    v31 = sub_23E53755C();
    swift_bridgeObjectRelease();

  }
  return v31;
}

uint64_t StaticService.copyReplacing(matterEndpointPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void (*v25)(void);
  int *v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int16 *v53;
  unsigned int v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int16 v86;
  char v87;
  char v88;
  __int128 v89;
  uint64_t v90;
  char v91;
  char v92;
  char v93[9];

  v3 = v2;
  v84 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v5);
  v82 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v83 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v56 - v10;
  v57 = (uint64_t)&v56 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = v17;
  v18 = sub_23E536F80();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v21;
  MEMORY[0x24BDAC7A8](v19);
  v81 = (uint64_t)&v56 - v22;
  v73 = *(_QWORD *)a1;
  v23 = *(unsigned __int16 *)(a1 + 8);
  v71 = *(unsigned __int8 *)(a1 + 10);
  v72 = v23;
  v25 = *(void (**)(void))(v24 + 16);
  v25();
  v26 = (int *)type metadata accessor for StaticService();
  v27 = (uint64_t *)(v3 + v26[5]);
  v28 = *(unsigned __int8 *)(v3 + v26[6]);
  v29 = v26[8];
  v78 = *(unsigned __int8 *)(v3 + v26[7]);
  v79 = *(unsigned __int8 *)(v3 + v29);
  v80 = v28;
  v31 = *v27;
  v30 = v27[1];
  v75 = v31;
  v76 = v30;
  v32 = v3 + v26[10];
  v77 = *(unsigned __int8 *)(v3 + v26[9]);
  ((void (*)(char *, uint64_t, uint64_t))v25)(v21, v32, v18);
  v33 = v26[12];
  v34 = v3 + v26[11];
  v70 = *(_QWORD *)v34;
  v69 = *(unsigned __int8 *)(v34 + 8);
  sub_23E1E7C20(v3 + v33, (uint64_t)v17, &qword_2543332A8);
  sub_23E1E7C20(v3 + v26[13], (uint64_t)v14, &qword_2543330E0);
  v35 = v26[15];
  v66 = *(_QWORD *)(v3 + v26[14]);
  v36 = *(_QWORD *)(v3 + v35 + 8);
  v65 = *(_QWORD *)(v3 + v35);
  v64 = v36;
  v37 = v26[17];
  v63 = *(unsigned __int8 *)(v3 + v26[16]);
  v62 = *(unsigned __int8 *)(v3 + v37);
  v38 = v26[19];
  v61 = *(unsigned __int8 *)(v3 + v26[18]);
  v60 = *(unsigned __int8 *)(v3 + v38);
  v39 = (uint64_t *)(v3 + v26[20]);
  v93[0] = *(_BYTE *)(v3 + v26[21]);
  v40 = *(_BYTE *)(v3 + v26[23]);
  v92 = *(_BYTE *)(v3 + v26[22]);
  v91 = v40;
  v41 = v3 + v26[24];
  v43 = *v39;
  v42 = v39[1];
  v59 = v43;
  v58 = v42;
  sub_23E1E7C20(v41, (uint64_t)v11, &qword_254333F50);
  v44 = *(_QWORD *)(v3 + v26[25]);
  v45 = *(_QWORD *)(v3 + v26[26]);
  v46 = v26[28];
  v47 = (_QWORD *)(v3 + v26[27]);
  v48 = v47[1];
  *(_QWORD *)&v89 = *v47;
  *((_QWORD *)&v89 + 1) = v48;
  v90 = v45;
  v49 = v82;
  sub_23E1E7C20(v3 + v46, v82, &qword_2543332B8);
  v50 = v26[30];
  v88 = *(_BYTE *)(v3 + v26[29]);
  v51 = *(_QWORD *)(v3 + v50);
  v52 = v83;
  sub_23E1E7C20(v3 + v26[31], v83, &qword_254333F50);
  v53 = (unsigned __int16 *)(v3 + v26[32]);
  v54 = *v53;
  LODWORD(v53) = *((unsigned __int8 *)v53 + 2);
  v85 = v73;
  v86 = v72;
  v87 = v71;
  sub_23E443CFC(v81, v75, v76, v80, v78, v79, v77, (uint64_t)v74, v84, v70, v69, (uint64_t)v68, (uint64_t)v67, v66, v65, v64, v63, v62, v61,
    v60,
    v59,
    v58,
    v93,
    &v92,
    &v91,
    v57,
    v44,
    &v90,
    &v89,
    v49,
    &v88,
    v51,
    v52,
    v54,
    (v54 | ((_DWORD)v53 << 16)) >> 16,
    &v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E44D3E4()
{
  uint64_t result;

  result = sub_23E2CDCB0((uint64_t)&unk_250EDB3C8);
  qword_254334BB8 = result;
  return result;
}

uint64_t sub_23E44D408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char v63;
  __int128 v64;
  unint64_t v65;
  char v66;
  char v67;
  char v68;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v0);
  v61 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v54 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v54 - v15;
  v17 = sub_23E536F80();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for StaticService();
  __swift_allocate_value_buffer(v21, qword_256D89828);
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_256D89828);
  if (qword_256D3EEA0 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v17, (uint64_t)qword_256D89858);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v62(v20, v23, v17);
  sub_23E536F2C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v55 = v22;
    v56 = v16;
    v57 = v20;
    v58 = v11;
    v25 = type metadata accessor for StaticDeviceMetadata();
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
    v59 = v7;
    v26(v7, 1, 1, v25);
    sub_23E536ED8();
    v27 = sub_23E536F20();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 0, 1, v27);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    v28 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v29 = swift_allocObject();
    v54 = xmmword_23E539650;
    *(_OWORD *)(v29 + 16) = xmmword_23E539650;
    v30 = v29 + v28;
    if (qword_256D3EE50 != -1)
      swift_once();
    v60 = v4;
    v31 = type metadata accessor for StaticRoom(0);
    v32 = __swift_project_value_buffer(v31, (uint64_t)qword_256D45950);
    v62((char *)v30, v32, v17);
    v33 = v61;
    if (*(_QWORD *)(v29 + 16))
      v62 = (void (*)(char *, uint64_t, uint64_t))sub_23E2CD9CC(v29);
    else
      v62 = (void (*)(char *, uint64_t, uint64_t))MEMORY[0x24BEE4B08];
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v34 = (uint64_t *)(v32 + *(int *)(v31 + 20));
    v35 = *v34;
    v36 = v34[1];
    v68 = 28;
    v67 = 5;
    v66 = 53;
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v38 = (uint64_t)v14;
    v37(v14, 1, 1, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333440);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
    v40 = *(unsigned __int8 *)(*(_QWORD *)(v39 - 8) + 80);
    v41 = (v40 + 32) & ~v40;
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = v54;
    v43 = (_BYTE *)(v42 + v41);
    v44 = *(int *)(v39 + 48);
    *v43 = 105;
    v45 = qword_256D3EE88;
    swift_bridgeObjectRetain();
    if (v45 != -1)
      swift_once();
    v46 = type metadata accessor for StaticCharacteristic();
    v47 = __swift_project_value_buffer(v46, (uint64_t)qword_256D46E70);
    sub_23E1E2F50(v47, (uint64_t)&v43[v44], (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v65 = sub_23E20E048(v42);
    v48 = MEMORY[0x24BEE4AF8];
    v49 = sub_23E1E6638(MEMORY[0x24BEE4AF8]);
    v50 = sub_23E1E661C(v48);
    *(_QWORD *)&v64 = v49;
    *((_QWORD *)&v64 + 1) = v50;
    v51 = type metadata accessor for StaticSoftwareUpdate(0);
    v52 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v33, 1, 1, v51);
    v63 = 0;
    v53 = (uint64_t)v58;
    v37(v58, 1, 1, v17);
    return sub_23E4439E0((uint64_t)v57, 0x4C20656C706D6153, 0xEC00000074686769, 1, 0, 1, 0, (uint64_t)v56, v55, 0, 1, (uint64_t)v59, (uint64_t)v60, (uint64_t)v62, v35, v36, 0, 0, 0,
             1,
             0xD000000000000012,
             0x800000023E560480,
             &v68,
             &v67,
             &v66,
             v38,
             v48,
             (uint64_t *)&v65,
             &v64,
             v52,
             &v63,
             v48,
             v53,
             0,
             1);
  }
  return result;
}

uint64_t sub_23E44D9E0(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D89840);
}

uint64_t sub_23E44D9FC(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D89858);
}

unint64_t sub_23E44DA18()
{
  unint64_t result;

  result = qword_256D471C8;
  if (!qword_256D471C8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DataModel.Errors, &type metadata for DataModel.Errors);
    atomic_store(result, (unint64_t *)&qword_256D471C8);
  }
  return result;
}

uint64_t sub_23E44DA5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v10 = type metadata accessor for StaticService();
  v46 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v45 = (uint64_t)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v44 - v13;
  v56 = sub_23E536F80();
  v47 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333138);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v49 = a1;
  v50 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v51 = v21;
  v52 = 0;
  v53 = v24 & v22;
  v54 = a2;
  v55 = a3;
  v44[1] = a1;
  swift_bridgeObjectRetain();
  v44[0] = a3;
  swift_retain();
  sub_23E287634((uint64_t)v19);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  v48 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v27 = type metadata accessor for StaticService;
  while (1)
  {
    v29 = (uint64_t)&v19[*(int *)(v25 + 48)];
    v48(v16, v19, v56);
    v30 = v27;
    sub_23E1E2FDC(v29, (uint64_t)v14, (uint64_t (*)(_QWORD))v27);
    v31 = *a5;
    v33 = sub_23E1E3300((uint64_t)v16);
    v34 = *(_QWORD *)(v31 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (*(_QWORD *)(v31 + 24) >= v36)
    {
      if ((a4 & 1) != 0)
      {
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E1E70F0();
        if ((v37 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E1FDD24(v36, a4 & 1);
      v38 = sub_23E1E3300((uint64_t)v16);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_22;
      v33 = v38;
      if ((v37 & 1) != 0)
      {
LABEL_7:
        v28 = v45;
        v27 = v30;
        sub_23E1E2F50((uint64_t)v14, v45, (uint64_t (*)(_QWORD))v30);
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))v30);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v56);
        sub_23E452A3C(v28, *(_QWORD *)(*a5 + 56) + *(_QWORD *)(v46 + 72) * v33);
        goto LABEL_8;
      }
    }
    v40 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v33 >> 6) + 64) |= 1 << v33;
    v48((char *)(v40[6] + *(_QWORD *)(v47 + 72) * v33), v16, v56);
    v27 = v30;
    sub_23E1E2FDC((uint64_t)v14, v40[7] + *(_QWORD *)(v46 + 72) * v33, (uint64_t (*)(_QWORD))v30);
    v41 = v40[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_21;
    v40[2] = v43;
LABEL_8:
    sub_23E287634((uint64_t)v19);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v19, 1, v25) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

unint64_t sub_23E44DE20()
{
  unint64_t result;

  result = qword_256D471F0;
  if (!qword_256D471F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552194, &type metadata for StaticService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D471F0);
  }
  return result;
}

unint64_t sub_23E44DE64()
{
  unint64_t result;

  result = qword_256D47210;
  if (!qword_256D47210)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicsBag, &type metadata for StaticCharacteristicsBag);
    atomic_store(result, (unint64_t *)&qword_256D47210);
  }
  return result;
}

unint64_t sub_23E44DEA8()
{
  unint64_t result;

  result = qword_256D47218;
  if (!qword_256D47218)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticProfileBag, &type metadata for StaticProfileBag);
    atomic_store(result, (unint64_t *)&qword_256D47218);
  }
  return result;
}

uint64_t sub_23E44DEEC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D47200);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E44DF70()
{
  unint64_t result;

  result = qword_256D47238;
  if (!qword_256D47238)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicsBag, &type metadata for StaticCharacteristicsBag);
    atomic_store(result, (unint64_t *)&qword_256D47238);
  }
  return result;
}

unint64_t sub_23E44DFB4()
{
  unint64_t result;

  result = qword_256D47240;
  if (!qword_256D47240)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticProfileBag, &type metadata for StaticProfileBag);
    atomic_store(result, (unint64_t *)&qword_256D47240);
  }
  return result;
}

uint64_t sub_23E44DFF8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticService();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticService;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333F70);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E1E70F0();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E1FDD24(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E452A3C(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E44E320(uint64_t a1, uint64_t a2, void *a3, char *a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v33 = a6;
  v34 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a4;
  v17 = objc_msgSend(a3, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v18 = sub_23E5377F0();

  v35[16] = a5;
  v36 = a3;
  v37 = a1;
  v38 = a2;
  v39 = v16;
  v40 = v33;
  v41 = v34;
  v19 = 0;
  v20 = sub_23E1E3304((void (*)(id *))sub_23E452A14, (uint64_t)v35, v18);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v34 = 0;
    v42 = MEMORY[0x24BEE4AF8];
    sub_23E1E3020(0, v21, 0);
    v22 = v42;
    v23 = *(_QWORD *)(type metadata accessor for StaticService() - 8);
    v24 = *(unsigned __int8 *)(v23 + 80);
    v33 = v20;
    v25 = v20 + ((v24 + 32) & ~v24);
    v26 = *(_QWORD *)(v23 + 72);
    do
    {
      v27 = (uint64_t)&v15[*(int *)(v12 + 48)];
      sub_23E1E2F50(v25, v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v28 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v15, v27, v28);
      v42 = v22;
      v30 = *(_QWORD *)(v22 + 16);
      v29 = *(_QWORD *)(v22 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_23E1E3020(v29 > 1, v30 + 1, 1);
        v22 = v42;
      }
      *(_QWORD *)(v22 + 16) = v30 + 1;
      sub_23E1E4E3C((uint64_t)v15, v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v30, &qword_254333F70);
      v25 += v26;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v19 = v34;
    if (*(_QWORD *)(v22 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543333B8);
      v31 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v31 = MEMORY[0x24BEE4B00];
LABEL_10:
  v42 = v31;
  sub_23E44DFF8(v22, 1, &v42);
  swift_bridgeObjectRelease();
  if (!v19)
    return v42;
  result = swift_release();
  __break(1u);
  return result;
}

id sub_23E44E5C4(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char **v14;
  id v15;
  BOOL v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  char *v42;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v30 - v10;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    v11 = sub_23E53803C();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v12 = 0;
      v13 = a1 & 0xC000000000000001;
      v31 = a1 + 32;
      v32 = a1 & 0xC000000000000001;
      v14 = &selRef_homeManager_didAddHome_;
      v36 = a1;
      v33 = v11;
      do
      {
        if (v13)
        {
          v15 = (id)MEMORY[0x24264F148](v12, a1);
          v16 = __OFADD__(v12++, 1);
          if (v16)
            goto LABEL_22;
        }
        else
        {
          v15 = *(id *)(v31 + 8 * v12);
          v16 = __OFADD__(v12++, 1);
          if (v16)
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        v17 = v15;
        v18 = objc_msgSend(v15, v14[345]);
        if (v18)
        {
          v19 = v18;
          v38 = v17;
          v35 = v12;
          v20 = sub_23E5377F0();

          v21 = objc_msgSend(v34, sel_uniqueIdentifier);
          sub_23E536F68();

          v22 = *(_QWORD *)(v20 + 16);
          v37 = v20;
          if (v22)
          {
            v23 = v20 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
            swift_bridgeObjectRetain();
            v24 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
            v40 = *(_QWORD *)(v7 + 72);
            v41 = v24;
            while (1)
            {
              v41(v5, v23, v6);
              v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
              v25(v5, 0, 1, v6);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
                break;
              v26 = v39;
              (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v5, v6);
              sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v27 = sub_23E537514();
              v28 = *(void (**)(char *, uint64_t))(v7 + 8);
              v28(v26, v6);
              if ((v27 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v28(v42, v6);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v38;
              }
              v23 += v40;
              if (!--v22)
                goto LABEL_19;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
LABEL_19:
            v25(v5, 1, 1, v6);
          }
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v42, v6);

          swift_bridgeObjectRelease();
          v12 = v35;
          a1 = v36;
          v13 = v32;
          v11 = v33;
          v14 = &selRef_homeManager_didAddHome_;
        }
        else
        {

          a1 = v36;
        }
      }
      while (v12 != v11);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_23E44E92C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = a1;
  if (a1 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 0;
      v22 = v2;
      v23 = v1 & 0xC000000000000001;
      v20 = v1 + 32;
      v21 = v1;
      do
      {
        if (v23)
          v4 = (id)MEMORY[0x24264F148](v3, v1);
        else
          v4 = *(id *)(v20 + 8 * v3);
        v5 = v4;
        if (__OFADD__(v3++, 1))
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v7 = objc_msgSend(v4, sel_linkedServices);
        if (v7)
        {
          v8 = v7;
          sub_23E1E335C(0, (unint64_t *)&qword_254333378);
          v9 = sub_23E5377F0();

          if (v9 >> 62)
          {
            swift_bridgeObjectRetain();
            v10 = sub_23E53803C();
            if (!v10)
            {
LABEL_30:

              swift_bridgeObjectRelease_n();
              continue;
            }
          }
          else
          {
            v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v10)
              goto LABEL_30;
          }
          v1 = v9 & 0xC000000000000001;
          if ((v9 & 0xC000000000000001) != 0)
            v11 = (id)MEMORY[0x24264F148](0, v9);
          else
            v11 = *(id *)(v9 + 32);
          v12 = v11;
          v13 = sub_23E537C58();

          if ((v13 & 1) != 0)
          {
LABEL_32:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return v5;
          }
          v2 = v22;
          if (v10 != 1)
          {
            if (v1)
            {
              v14 = 1;
              while (1)
              {
                MEMORY[0x24264F148](v14, v9);
                v15 = v14 + 1;
                if (__OFADD__(v14, 1))
                  break;
                v1 = sub_23E537C58();
                swift_unknownObjectRelease();
                if ((v1 & 1) != 0)
                  goto LABEL_32;
                ++v14;
                if (v15 == v10)
                  goto LABEL_28;
              }
              __break(1u);
            }
            else
            {
              v1 = 5;
              while (1)
              {
                v16 = v1 - 3;
                if (__OFADD__(v1 - 4, 1))
                  break;
                v17 = *(id *)(v9 + 8 * v1);
                v18 = sub_23E537C58();

                if ((v18 & 1) != 0)
                  goto LABEL_32;
                ++v1;
                if (v16 == v10)
                {
LABEL_28:

                  swift_bridgeObjectRelease_n();
                  v1 = v21;
                  v2 = v22;
                  goto LABEL_5;
                }
              }
            }
            __break(1u);
            goto LABEL_36;
          }

          swift_bridgeObjectRelease_n();
          v1 = v21;
        }
        else
        {

        }
LABEL_5:
        ;
      }
      while (v3 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E44EBF8(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a1;
  v30 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_39;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v24 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v28 = a2;
      v29 = v3 + 32;
      v26 = v3 & 0xC000000000000001;
      v27 = v4;
      v25 = v3 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v6)
        {
          v8 = (id)MEMORY[0x24264F148](v5, v24);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v7 + 16))
          {
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          v8 = *(id *)(v29 + 8 * v5);
        }
        v9 = v8;
        if (__OFADD__(v5++, 1))
          goto LABEL_36;
        v11 = objc_msgSend(a2, sel_linkedServices);
        if (v11)
          break;

LABEL_5:
        if (v5 == v4)
          return v30;
      }
      v12 = v11;
      v3 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v13 = sub_23E5377F0();

      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_23E53803C();
        if (!v14)
        {
LABEL_32:

          swift_bridgeObjectRelease_n();
          goto LABEL_5;
        }
      }
      else
      {
        v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v14)
          goto LABEL_32;
      }
      v15 = (v13 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](0, v13) : *(id *)(v13 + 32);
      v16 = v15;
      v17 = sub_23E537C58();

      if ((v17 & 1) != 0)
        break;
      if (v14 == 1)
      {
LABEL_28:

        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        v18 = 1;
        while (1)
        {
          MEMORY[0x24264F148](v18, v13);
          a2 = (void *)(v18 + 1);
          if (__OFADD__(v18, 1))
            goto LABEL_37;
          v19 = sub_23E537C58();
          swift_unknownObjectRelease();
          if ((v19 & 1) != 0)
            goto LABEL_16;
          ++v18;
          if (a2 == (void *)v14)
            goto LABEL_28;
        }
      }
      v20 = 5;
      while (1)
      {
        a2 = (void *)(v20 - 3);
        if (__OFADD__(v20 - 4, 1))
          break;
        v21 = *(id *)(v13 + 8 * v20);
        v22 = sub_23E537C58();

        if ((v22 & 1) != 0)
          goto LABEL_16;
        ++v20;
        if (a2 == (void *)v14)
          goto LABEL_28;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      v4 = sub_23E53803C();
      if (!v4)
        return MEMORY[0x24BEE4AF8];
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    sub_23E537F1C();
    sub_23E537F4C();
    sub_23E537F58();
    v3 = (uint64_t)&v30;
    sub_23E537F28();
LABEL_29:
    v4 = v27;
    a2 = v28;
    v7 = v25;
    v6 = v26;
    goto LABEL_5;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E44EED4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72616D6972507369 && a2 == 0xE900000000000079 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746142776F4C7369 && a2 == 0xEC00000079726574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56A420 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023E56A440 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E56A460 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E568EC0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4B65636976726573 && a2 == 0xEB00000000646E69 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x5365636976726573 && a2 == 0xEE00646E694B6275 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E56A480 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6553746E65726170 && a2 == 0xEF64496563697672 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E56A4A0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E56A4C0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56A4E0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569D70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E56A500 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E56A520 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E56A540 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E56A560)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 29;
    else
      return 30;
  }
}

uint64_t sub_23E44FAE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E448F50(a1, a2);
}

uint64_t sub_23E44FB00()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D47258, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
}

uint64_t sub_23E44FB2C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D47268, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[2] = sub_23E1EE1C4(&qword_256D47270, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[3] = sub_23E1EE1C4(&qword_256D40EE0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[4] = sub_23E1EE1C4(&qword_256D40DD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[5] = sub_23E1EE1C4(&qword_256D47278, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  result = sub_23E1EE1C4(&qword_256D47280, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[6] = result;
  return result;
}

uint64_t sub_23E44FBF8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D40EE0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[2] = sub_23E1EE1C4(&qword_256D40DD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[3] = sub_23E1EE1C4(&qword_256D47278, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  result = sub_23E1EE1C4(&qword_256D47280, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
  a1[4] = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticService(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  int EnumCaseMultiPayload;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  int *updated;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  uint64_t v143;
  char *v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  char *__dst;
  void (*v147)(char *, char *, uint64_t);
  uint64_t v148;
  uint64_t v149;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = sub_23E536F80();
  v148 = *(_QWORD *)(v7 - 8);
  v8 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
  v8(a1, a2, v7);
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  a1[v10] = a2[v10];
  v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v14] = a2[v14];
  v15 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  swift_bridgeObjectRetain();
  v8(v16, v17, v7);
  v18 = a3[11];
  v19 = a3[12];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v24 = (int *)type metadata accessor for StaticDeviceMetadata();
  v25 = *((_QWORD *)v24 - 1);
  v149 = v7;
  v147 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v8(v22, v23, v7);
    v28 = v24[5];
    v29 = &v22[v28];
    v30 = &v23[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    v32 = v24[6];
    v33 = &v22[v32];
    v34 = &v23[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v24[7];
    v37 = &v22[v36];
    v38 = &v23[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v24[8];
    v41 = &v22[v40];
    v42 = &v23[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v22[v24[9]] = v23[v24[9]];
    v22[v24[10]] = v23[v24[10]];
    v22[v24[11]] = v23[v24[11]];
    v44 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = v149;
    swift_bridgeObjectRetain();
    v44(v22, 0, 1, v24);
  }
  v45 = a3[13];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = sub_23E536F20();
  v49 = *(_QWORD *)(v48 - 8);
  v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v143 = v48;
  v141 = v49;
  if (v142(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v51 = a3[15];
  *(_QWORD *)&a1[a3[14]] = *(_QWORD *)&a2[a3[14]];
  v52 = &a1[v51];
  v53 = &a2[v51];
  v54 = *((_QWORD *)v53 + 1);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = v54;
  v55 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v55] = a2[v55];
  v56 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v56] = a2[v56];
  v57 = a3[20];
  v58 = a3[21];
  v59 = &a1[v57];
  v60 = &a2[v57];
  v61 = *((_QWORD *)v60 + 1);
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *((_QWORD *)v59 + 1) = v61;
  a1[v58] = a2[v58];
  v62 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v62] = a2[v62];
  v63 = a3[24];
  v64 = &a1[v63];
  v65 = &a2[v63];
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v145 = v66;
  if (v66(v65, 1, v7))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v147(v64, v65, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v64, 0, 1, v7);
  }
  v68 = a3[26];
  *(_QWORD *)&a1[a3[25]] = *(_QWORD *)&a2[a3[25]];
  *(_QWORD *)&a1[v68] = *(_QWORD *)&a2[v68];
  v69 = a3[27];
  v70 = a3[28];
  v71 = &a1[v69];
  v72 = &a2[v69];
  v73 = *((_QWORD *)v72 + 1);
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *((_QWORD *)v71 + 1) = v73;
  __dst = &a1[v70];
  v144 = a2;
  v74 = &a2[v70];
  v75 = type metadata accessor for StaticSoftwareUpdate(0);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v77(v74, 1, v75))
  {
    v139 = v76;
    v147(__dst, v74, v149);
    v82 = *(int *)(v75 + 20);
    v83 = &__dst[v82];
    v84 = &v74[v82];
    v85 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v140 = v75;
    if (EnumCaseMultiPayload == 2)
    {
      v87 = __dst;
      v97 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v97;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v98 = updated[5];
      v99 = &v83[v98];
      v100 = &v84[v98];
      swift_bridgeObjectRetain();
      if (v142(v100, 1, v143))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v99, v100, v143);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v99, 0, 1, v143);
      }
      v80 = v144;
      v81 = v145;
      v107 = updated[6];
      v108 = &v83[v107];
      v109 = &v84[v107];
      v110 = *((_QWORD *)v109 + 1);
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = v110;
      v111 = updated[7];
      v112 = &v83[v111];
      v113 = &v84[v111];
      v114 = *((_QWORD *)v113 + 1);
      *(_QWORD *)v112 = *(_QWORD *)v113;
      *((_QWORD *)v112 + 1) = v114;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v83[*(int *)(v115 + 48)] = v84[*(int *)(v115 + 48)];
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v87 = __dst;
        v80 = v144;
        if (EnumCaseMultiPayload)
        {
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          v79 = v149;
        }
        else
        {
          v79 = v149;
          v147(v83, v84, v149);
          v88 = (int *)type metadata accessor for StaticHH2Update(0);
          v83[v88[5]] = v84[v88[5]];
          v89 = v88[6];
          v90 = &v83[v89];
          v91 = &v84[v89];
          v93 = *(_QWORD *)v91;
          v92 = *((_QWORD *)v91 + 1);
          *(_QWORD *)v90 = v93;
          *((_QWORD *)v90 + 1) = v92;
          v94 = v88[7];
          v95 = &v83[v94];
          v96 = &v84[v94];
          v95[8] = v96[8];
          *(_QWORD *)v95 = *(_QWORD *)v96;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        v81 = v145;
        goto LABEL_29;
      }
      v87 = __dst;
      v102 = *((_QWORD *)v84 + 1);
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = v102;
      v138 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v103 = v138[5];
      v104 = &v83[v103];
      v105 = &v84[v103];
      swift_bridgeObjectRetain();
      v80 = v144;
      if (v142(v105, 1, v143))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v104, v105, v143);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v104, 0, 1, v143);
      }
      v81 = v145;
      v116 = v138[6];
      v117 = &v83[v116];
      v118 = &v84[v116];
      v119 = *((_QWORD *)v118 + 1);
      *(_QWORD *)v117 = *(_QWORD *)v118;
      *((_QWORD *)v117 + 1) = v119;
      v120 = v138[7];
      v121 = &v83[v120];
      v122 = &v84[v120];
      v123 = *((_QWORD *)v122 + 1);
      *(_QWORD *)v121 = *(_QWORD *)v122;
      *((_QWORD *)v121 + 1) = v123;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v83[*(int *)(v124 + 48)] = v84[*(int *)(v124 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    v79 = v149;
LABEL_29:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v87, 0, 1, v140);
    goto LABEL_30;
  }
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  v79 = v149;
  v80 = v144;
  v81 = v145;
LABEL_30:
  v125 = a3[30];
  a1[a3[29]] = *((_BYTE *)v80 + a3[29]);
  *(_QWORD *)&a1[v125] = *(_QWORD *)((char *)v80 + v125);
  v126 = a3[31];
  v127 = &a1[v126];
  v128 = (char *)v80 + v126;
  swift_bridgeObjectRetain();
  if (v81(v128, 1, v79))
  {
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    v147(v127, v128, v79);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v127, 0, 1, v79);
  }
  v130 = a3[32];
  v131 = a3[33];
  v132 = &a1[v130];
  v133 = (uint64_t)v80 + v130;
  *(_WORD *)v132 = *(_WORD *)v133;
  v132[2] = *(_BYTE *)(v133 + 2);
  v134 = &a1[v131];
  v135 = (uint64_t)v80 + v131;
  *(_QWORD *)v134 = *(_QWORD *)v135;
  *(_DWORD *)(v134 + 7) = *(_DWORD *)(v135 + 7);
  return a1;
}

uint64_t assignWithCopy for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void (*v35)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(void *, uint64_t, uint64_t);
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  int EnumCaseMultiPayload;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  int v101;
  int *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char v109;
  uint64_t updated;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE *v130;
  _BYTE *v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int16 *v137;
  __int16 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *__src;
  uint64_t v152;
  char *__dst;
  int *__dsta;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  unsigned int (*v158)(char *, uint64_t, uint64_t);
  void (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;

  v6 = sub_23E536F80();
  v162 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v159 = v7;
  v7(a1 + a3[10], a2 + a3[10], v6);
  v11 = a3[11];
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  *(_BYTE *)(v12 + 8) = *((_BYTE *)v13 + 8);
  *(_QWORD *)v12 = v14;
  v15 = a3[12];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)type metadata accessor for StaticDeviceMetadata();
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  v161 = v6;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v162 + 16))(v16, v17, v6);
      v23 = v18[5];
      v24 = &v16[v23];
      v25 = &v17[v23];
      *v24 = *v25;
      v24[1] = v25[1];
      v26 = v18[6];
      v27 = &v16[v26];
      v28 = &v17[v26];
      *v27 = *v28;
      v27[1] = v28[1];
      v29 = v18[7];
      v30 = &v16[v29];
      v31 = &v17[v29];
      *v30 = *v31;
      v30[1] = v31[1];
      v32 = v18[8];
      v33 = &v16[v32];
      v34 = &v17[v32];
      *v33 = *v34;
      v33[1] = v34[1];
      v16[v18[9]] = v17[v18[9]];
      v16[v18[10]] = v17[v18[10]];
      v16[v18[11]] = v17[v18[11]];
      v35 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_6:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  v159((uint64_t)v16, (uint64_t)v17, v6);
  v84 = v18[5];
  v85 = &v16[v84];
  v86 = &v17[v84];
  *v85 = *v86;
  v85[1] = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = v18[6];
  v88 = &v16[v87];
  v89 = &v17[v87];
  *v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v90 = v18[7];
  v91 = &v16[v90];
  v92 = &v17[v90];
  *v91 = *v92;
  v91[1] = v92[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v93 = v18[8];
  v94 = &v16[v93];
  v95 = &v17[v93];
  *v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[v18[9]] = v17[v18[9]];
  v16[v18[10]] = v17[v18[10]];
  v16[v18[11]] = v17[v18[11]];
LABEL_7:
  v37 = a3[13];
  v38 = (void *)(a1 + v37);
  v39 = (void *)(a2 + v37);
  v40 = sub_23E536F20();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  v157 = v41;
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
LABEL_12:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_13:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[15];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v49 = a3[20];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  *v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  v52 = a3[24];
  v53 = (_BYTE *)(a1 + v52);
  v54 = (_BYTE *)(a2 + v52);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
  v56 = v55(a1 + v52, 1, v6);
  v57 = v55((uint64_t)v54, 1, v6);
  v160 = v55;
  v158 = (unsigned int (*)(char *, uint64_t, uint64_t))v42;
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v162 + 16))(v53, v54, v6);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v53, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v57)
  {
    (*(void (**)(_BYTE *, uint64_t))(v162 + 8))(v53, v6);
LABEL_18:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_19;
  }
  v159((uint64_t)v53, (uint64_t)v54, v6);
LABEL_19:
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a3[27];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_QWORD *)(a1 + v59) = *(_QWORD *)(a2 + v59);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v62 = a3[28];
  v63 = (char *)(a1 + v62);
  v64 = (char *)(a2 + v62);
  v65 = type metadata accessor for StaticSoftwareUpdate(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (v68)
  {
    if (!v69)
    {
      v70 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
      v70(v63, v64, v161);
      v71 = *(int *)(v65 + 20);
      v72 = &v63[v71];
      v73 = &v64[v71];
      v155 = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v111 = *(int *)(updated + 20);
        v152 = updated;
        __dst = &v72[v111];
        v112 = &v73[v111];
        swift_bridgeObjectRetain();
        __src = v112;
        if (v158(v112, 1, v40))
        {
LABEL_39:
          v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
LABEL_47:
          v122 = *(int *)(v152 + 24);
          v123 = &v72[v122];
          v124 = &v73[v122];
          *(_QWORD *)v123 = *(_QWORD *)v124;
          *((_QWORD *)v123 + 1) = *((_QWORD *)v124 + 1);
          v125 = *(int *)(v152 + 28);
          v126 = &v72[v125];
          v127 = &v73[v125];
          *(_QWORD *)v126 = *(_QWORD *)v127;
          *((_QWORD *)v126 + 1) = *((_QWORD *)v127 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          v72[*(int *)(v128 + 48)] = v73[*(int *)(v128 + 48)];
          goto LABEL_48;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v72, v73, *(_QWORD *)(*(v155 - 1) + 64));
LABEL_49:
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            goto LABEL_50;
          }
          v70(v72, v73, v161);
          v75 = (int *)type metadata accessor for StaticHH2Update(0);
          v72[v75[5]] = v73[v75[5]];
          v76 = v75[6];
          v77 = &v72[v76];
          v78 = &v73[v76];
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = *((_QWORD *)v78 + 1);
          v79 = v75[7];
          v80 = &v72[v79];
          v81 = &v73[v79];
          v82 = v81[8];
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[8] = v82;
          swift_bridgeObjectRetain();
LABEL_48:
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        }
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
        v113 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v114 = *(int *)(v113 + 20);
        v152 = v113;
        __dst = &v72[v114];
        v112 = &v73[v114];
        swift_bridgeObjectRetain();
        __src = v112;
        if (v158(v112, 1, v40))
          goto LABEL_39;
      }
      (*(void (**)(char *, char *, uint64_t))(v157 + 16))(__dst, v112, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(__dst, 0, 1, v40);
      goto LABEL_47;
    }
LABEL_27:
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
LABEL_50:
    v96 = v161;
    goto LABEL_51;
  }
  if (v69)
  {
    sub_23E1E2FA0((uint64_t)v63, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_27;
  }
  v96 = v161;
  v159((uint64_t)v63, (uint64_t)v64, v161);
  if (a1 == a2)
    goto LABEL_51;
  v97 = *(int *)(v65 + 20);
  v98 = &v63[v97];
  v99 = &v64[v97];
  sub_23E1E2FA0((uint64_t)v98, type metadata accessor for StaticSoftwareUpdate.Kind);
  v100 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v101 = swift_getEnumCaseMultiPayload();
  if (v101 == 2)
  {
    *(_QWORD *)v98 = *(_QWORD *)v99;
    *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
    v116 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v117 = *(int *)(v116 + 20);
    __dsta = (int *)v116;
    v156 = &v98[v117];
    v118 = &v99[v117];
    swift_bridgeObjectRetain();
    if (v158(v118, 1, v40))
    {
LABEL_42:
      v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v156, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
LABEL_60:
      v144 = __dsta[6];
      v145 = &v98[v144];
      v146 = &v99[v144];
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *((_QWORD *)v145 + 1) = *((_QWORD *)v146 + 1);
      v147 = __dsta[7];
      v148 = &v98[v147];
      v149 = &v99[v147];
      *(_QWORD *)v148 = *(_QWORD *)v149;
      *((_QWORD *)v148 + 1) = *((_QWORD *)v149 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v98[*(int *)(v150 + 48)] = v99[*(int *)(v150 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
LABEL_59:
    (*(void (**)(char *, char *, uint64_t))(v157 + 16))(v156, v118, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v156, 0, 1, v40);
    goto LABEL_60;
  }
  if (v101 == 1)
  {
    *(_QWORD *)v98 = *(_QWORD *)v99;
    *((_QWORD *)v98 + 1) = *((_QWORD *)v99 + 1);
    v120 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v121 = *(int *)(v120 + 20);
    __dsta = (int *)v120;
    v156 = &v98[v121];
    v118 = &v99[v121];
    swift_bridgeObjectRetain();
    if (v158(v118, 1, v40))
      goto LABEL_42;
    goto LABEL_59;
  }
  if (v101)
  {
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v98, v99, v161);
    v102 = (int *)type metadata accessor for StaticHH2Update(0);
    v98[v102[5]] = v99[v102[5]];
    v103 = v102[6];
    v104 = &v98[v103];
    v105 = &v99[v103];
    *(_QWORD *)v104 = *(_QWORD *)v105;
    *((_QWORD *)v104 + 1) = *((_QWORD *)v105 + 1);
    v106 = v102[7];
    v107 = &v98[v106];
    v108 = &v99[v106];
    v109 = v108[8];
    *(_QWORD *)v107 = *(_QWORD *)v108;
    v107[8] = v109;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_51:
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_QWORD *)(a1 + a3[30]) = *(_QWORD *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v129 = a3[31];
  v130 = (_BYTE *)(a1 + v129);
  v131 = (_BYTE *)(a2 + v129);
  v132 = v160(a1 + v129, 1, v96);
  v133 = v160((uint64_t)v131, 1, v96);
  if (!v132)
  {
    if (!v133)
    {
      v159((uint64_t)v130, (uint64_t)v131, v96);
      goto LABEL_57;
    }
    (*(void (**)(_BYTE *, uint64_t))(v162 + 8))(v130, v96);
    goto LABEL_56;
  }
  if (v133)
  {
LABEL_56:
    v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v162 + 16))(v130, v131, v96);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v130, 0, 1, v96);
LABEL_57:
  v135 = a3[32];
  v136 = a1 + v135;
  v137 = (__int16 *)(a2 + v135);
  v138 = *v137;
  *(_BYTE *)(v136 + 2) = *((_BYTE *)v137 + 2);
  *(_WORD *)v136 = v138;
  v139 = a3[33];
  v140 = a1 + v139;
  v141 = (uint64_t *)(a2 + v139);
  v142 = *v141;
  *(_DWORD *)(v140 + 7) = *(_DWORD *)((char *)v141 + 7);
  *(_QWORD *)v140 = v142;
  return a1;
}

uint64_t initializeWithTake for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void *, const void *, uint64_t);
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  char *v50;
  int *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int *updated;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(const void *, uint64_t, uint64_t);
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  void (*v82)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v8(a1 + v11, a2 + v11, v6);
  v12 = a3[11];
  v13 = a3[12];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (char *)(a1 + v13);
  v17 = (char *)(a2 + v13);
  v18 = (int *)type metadata accessor for StaticDeviceMetadata();
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v16, (uint64_t)v17, v6);
    *(_OWORD *)&v16[v18[5]] = *(_OWORD *)&v17[v18[5]];
    *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
    *(_OWORD *)&v16[v18[7]] = *(_OWORD *)&v17[v18[7]];
    *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    v16[v18[11]] = v17[v18[11]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[13];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_23E536F20();
  v25 = *(_QWORD *)(v24 - 8);
  v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v80(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v32 = a3[24];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v82 = v8;
  v79 = v25;
  if (v81(a2 + v32, 1, v6))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v33, (uint64_t)v34, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  v36 = a3[26];
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  v37 = a3[28];
  *(_OWORD *)(a1 + a3[27]) = *(_OWORD *)(a2 + a3[27]);
  v38 = (char *)(a1 + v37);
  v39 = (char *)(a2 + v37);
  v40 = type metadata accessor for StaticSoftwareUpdate(0);
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    v44 = v81;
    v43 = (void (*)(void *, const void *, uint64_t))v82;
    goto LABEL_25;
  }
  v77 = v41;
  v78 = v7;
  v82((uint64_t)v38, (uint64_t)v39, v6);
  v45 = *(int *)(v40 + 20);
  v46 = &v38[v45];
  v47 = &v39[v45];
  v48 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v50 = v38;
      if (EnumCaseMultiPayload)
      {
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v7 = v78;
        v43 = (void (*)(void *, const void *, uint64_t))v82;
      }
      else
      {
        v43 = (void (*)(void *, const void *, uint64_t))v82;
        v82((uint64_t)v46, (uint64_t)v47, v6);
        v51 = (int *)type metadata accessor for StaticHH2Update(0);
        v46[v51[5]] = v47[v51[5]];
        *(_OWORD *)&v46[v51[6]] = *(_OWORD *)&v47[v51[6]];
        v52 = v51[7];
        v53 = &v46[v52];
        v54 = &v47[v52];
        v53[8] = v54[8];
        *(_QWORD *)v53 = *(_QWORD *)v54;
        swift_storeEnumTagMultiPayload();
        v7 = v78;
      }
      v44 = v81;
      v60 = v77;
      v61 = v50;
      goto LABEL_24;
    }
    v76 = v38;
    *(_OWORD *)v46 = *(_OWORD *)v47;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v58 = updated[5];
    v56 = &v46[v58];
    v57 = &v47[v58];
    if (v80(&v47[v58], 1, v24))
      goto LABEL_19;
LABEL_22:
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v56, v57, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v56, 0, 1, v24);
    goto LABEL_23;
  }
  v76 = v38;
  *(_OWORD *)v46 = *(_OWORD *)v47;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v55 = updated[5];
  v56 = &v46[v55];
  v57 = &v47[v55];
  if (!v80(&v47[v55], 1, v24))
    goto LABEL_22;
LABEL_19:
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
LABEL_23:
  *(_OWORD *)&v46[updated[6]] = *(_OWORD *)&v47[updated[6]];
  *(_OWORD *)&v46[updated[7]] = *(_OWORD *)&v47[updated[7]];
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  v46[*(int *)(v62 + 48)] = v47[*(int *)(v62 + 48)];
  swift_storeEnumTagMultiPayload();
  v60 = v77;
  v7 = v78;
  v44 = v81;
  v43 = (void (*)(void *, const void *, uint64_t))v82;
  v61 = v76;
LABEL_24:
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v40);
LABEL_25:
  v63 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_QWORD *)(a1 + v63) = *(_QWORD *)(a2 + v63);
  v64 = a3[31];
  v65 = (void *)(a1 + v64);
  v66 = (const void *)(a2 + v64);
  if (v44(a2 + v64, 1, v6))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v43(v65, v66, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v65, 0, 1, v6);
  }
  v68 = a3[32];
  v69 = a3[33];
  v70 = a1 + v68;
  v71 = a2 + v68;
  *(_WORD *)v70 = *(_WORD *)v71;
  *(_BYTE *)(v70 + 2) = *(_BYTE *)(v71 + 2);
  v72 = a1 + v69;
  v73 = a2 + v69;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_DWORD *)(v72 + 7) = *(_DWORD *)(v73 + 7);
  return a1;
}

uint64_t assignWithTake for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  int v64;
  int v65;
  void (*v66)(uint64_t, char *, uint64_t);
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  int EnumCaseMultiPayload;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  size_t v75;
  void *v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  char *v100;
  uint64_t v101;
  int v102;
  int *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int *updated;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(void);
  _QWORD *__dst;
  char *__dsta;
  void (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;

  v6 = sub_23E536F80();
  v141 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v139 = v7;
  v7(a1 + a3[10], a2 + a3[10], v6);
  v15 = a3[11];
  v16 = a3[12];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = (_BYTE *)(a1 + v16);
  v20 = (_BYTE *)(a2 + v16);
  v21 = (int *)type metadata accessor for StaticDeviceMetadata();
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v141 + 32))(v19, v20, v6);
      *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
      *(_OWORD *)&v19[v21[6]] = *(_OWORD *)&v20[v21[6]];
      *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
      *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
      v19[v21[9]] = v20[v21[9]];
      v19[v21[10]] = v20[v21[10]];
      v19[v21[11]] = v20[v21[11]];
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  v139((uint64_t)v19, (uint64_t)v20, v6);
  v78 = v21[5];
  v79 = &v19[v78];
  v80 = (uint64_t *)&v20[v78];
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = v21[6];
  v84 = &v19[v83];
  v85 = (uint64_t *)&v20[v83];
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  v88 = v21[7];
  v89 = &v19[v88];
  v90 = (uint64_t *)&v20[v88];
  v92 = *v90;
  v91 = v90[1];
  *v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
  v93 = v21[8];
  v94 = &v19[v93];
  v95 = (uint64_t *)&v20[v93];
  v97 = *v95;
  v96 = v95[1];
  *v94 = v97;
  v94[1] = v96;
  swift_bridgeObjectRelease();
  v19[v21[9]] = v20[v21[9]];
  v19[v21[10]] = v20[v21[10]];
  v19[v21[11]] = v20[v21[11]];
LABEL_7:
  v27 = a3[13];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = sub_23E536F20();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(void))(v31 + 48);
  v33 = ((uint64_t (*)(void *, uint64_t, uint64_t))v32)(v28, 1, v30);
  v136 = v32;
  v34 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v32)(v29, 1, v30);
  v135 = v31;
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_13:
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  v36 = a3[15];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (uint64_t *)(a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v42 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[20];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v49 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  v50 = (_BYTE *)(a1 + v49);
  v51 = (_BYTE *)(a2 + v49);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
  v53 = v52(a1 + v49, 1, v6);
  v54 = v52((uint64_t)v51, 1, v6);
  v140 = v52;
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v141 + 32))(v50, v51, v6);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v50, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v54)
  {
    (*(void (**)(_BYTE *, uint64_t))(v141 + 8))(v50, v6);
LABEL_18:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_19;
  }
  v139((uint64_t)v50, (uint64_t)v51, v6);
LABEL_19:
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  v56 = a3[27];
  v57 = a1 + v56;
  v58 = a2 + v56;
  *(_QWORD *)(a1 + v56) = *(_QWORD *)(a2 + v56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  swift_bridgeObjectRelease();
  v59 = a3[28];
  v60 = a1 + v59;
  v61 = (char *)(a2 + v59);
  v62 = type metadata accessor for StaticSoftwareUpdate(0);
  __dst = *(_QWORD **)(v62 - 8);
  v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__dst[6];
  v64 = v63(v60, 1, v62);
  v65 = v63((uint64_t)v61, 1, v62);
  if (v64)
  {
    if (!v65)
    {
      v66 = *(void (**)(uint64_t, char *, uint64_t))(v141 + 32);
      v66(v60, v61, v6);
      v67 = *(int *)(v62 + 20);
      v68 = (_OWORD *)(v60 + v67);
      v69 = &v61[v67];
      v134 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v68 = *(_OWORD *)v69;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v108 = updated[5];
        v132 = &v69[v108];
        v133 = (char *)v68 + v108;
        if (v136())
        {
LABEL_40:
          v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v133, v132, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
LABEL_48:
          *(_OWORD *)((char *)v68 + updated[6]) = *(_OWORD *)&v69[updated[6]];
          *(_OWORD *)((char *)v68 + updated[7]) = *(_OWORD *)&v69[updated[7]];
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v68 + *(int *)(v116 + 48)) = v69[*(int *)(v116 + 48)];
          goto LABEL_49;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
LABEL_50:
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))__dst[7])(v60, 0, 1, v62);
            goto LABEL_51;
          }
          v66((uint64_t)v68, v69, v6);
          v71 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v68 + v71[5]) = v69[v71[5]];
          *(_OWORD *)((char *)v68 + v71[6]) = *(_OWORD *)&v69[v71[6]];
          v72 = v71[7];
          v73 = (char *)v68 + v72;
          v74 = &v69[v72];
          v73[8] = v74[8];
          *(_QWORD *)v73 = *(_QWORD *)v74;
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        *v68 = *(_OWORD *)v69;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v109 = updated[5];
        v132 = &v69[v109];
        v133 = (char *)v68 + v109;
        if (v136())
          goto LABEL_40;
      }
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v133, v132, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v133, 0, 1, v30);
      goto LABEL_48;
    }
    goto LABEL_27;
  }
  if (v65)
  {
    sub_23E1E2FA0(v60, type metadata accessor for StaticSoftwareUpdate);
LABEL_27:
    v75 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
    v76 = (void *)v60;
    v77 = v61;
    goto LABEL_28;
  }
  v139(v60, (uint64_t)v61, v6);
  if (a1 == a2)
    goto LABEL_51;
  v98 = *(int *)(v62 + 20);
  v99 = (_OWORD *)(v60 + v98);
  v100 = &v61[v98];
  sub_23E1E2FA0((uint64_t)v99, type metadata accessor for StaticSoftwareUpdate.Kind);
  v101 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v102 = swift_getEnumCaseMultiPayload();
  if (v102 != 2)
  {
    if (v102 != 1)
    {
      if (!v102)
      {
        (*(void (**)(_OWORD *, char *, uint64_t))(v141 + 32))(v99, v100, v6);
        v103 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v99 + v103[5]) = v100[v103[5]];
        *(_OWORD *)((char *)v99 + v103[6]) = *(_OWORD *)&v100[v103[6]];
        v104 = v103[7];
        v105 = (char *)v99 + v104;
        v106 = &v100[v104];
        v105[8] = v106[8];
        *(_QWORD *)v105 = *(_QWORD *)v106;
        swift_storeEnumTagMultiPayload();
        goto LABEL_51;
      }
      v75 = *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64);
      v76 = v99;
      v77 = v100;
LABEL_28:
      memcpy(v76, v77, v75);
      goto LABEL_51;
    }
    *v99 = *(_OWORD *)v100;
    v111 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v115 = v111[5];
    __dsta = (char *)v99 + v115;
    v113 = &v100[v115];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v136)(&v100[v115], 1, v30))
      goto LABEL_43;
LABEL_59:
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(__dsta, v113, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v135 + 56))(__dsta, 0, 1, v30);
    goto LABEL_60;
  }
  *v99 = *(_OWORD *)v100;
  v111 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v112 = v111[5];
  __dsta = (char *)v99 + v112;
  v113 = &v100[v112];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v136)(&v100[v112], 1, v30))
    goto LABEL_59;
LABEL_43:
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  memcpy(__dsta, v113, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
LABEL_60:
  *(_OWORD *)((char *)v99 + v111[6]) = *(_OWORD *)&v100[v111[6]];
  *(_OWORD *)((char *)v99 + v111[7]) = *(_OWORD *)&v100[v111[7]];
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
  *((_BYTE *)v99 + *(int *)(v131 + 48)) = v100[*(int *)(v131 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_51:
  v117 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_QWORD *)(a1 + v117) = *(_QWORD *)(a2 + v117);
  swift_bridgeObjectRelease();
  v118 = a3[31];
  v119 = (_BYTE *)(a1 + v118);
  v120 = (_BYTE *)(a2 + v118);
  v121 = v140(a1 + v118, 1, v6);
  v122 = v140((uint64_t)v120, 1, v6);
  if (!v121)
  {
    if (!v122)
    {
      v139((uint64_t)v119, (uint64_t)v120, v6);
      goto LABEL_57;
    }
    (*(void (**)(_BYTE *, uint64_t))(v141 + 8))(v119, v6);
    goto LABEL_56;
  }
  if (v122)
  {
LABEL_56:
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v141 + 32))(v119, v120, v6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v119, 0, 1, v6);
LABEL_57:
  v124 = a3[32];
  v125 = a3[33];
  v126 = a1 + v124;
  v127 = a2 + v124;
  *(_WORD *)v126 = *(_WORD *)v127;
  *(_BYTE *)(v126 + 2) = *(_BYTE *)(v127 + 2);
  v128 = a1 + v125;
  v129 = a2 + v125;
  *(_QWORD *)v128 = *(_QWORD *)v129;
  *(_DWORD *)(v128 + 7) = *(_DWORD *)(v129 + 7);
  return a1;
}

uint64_t sub_23E452594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[12];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[24];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
          v14 = *(_QWORD *)(v8 - 8);
          v15 = a3[28];
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23E4526BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[12];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[13];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[24];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[28];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t getEnumTagSinglePayload for StaticService.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE3)
    goto LABEL_17;
  if (a2 + 29 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 29) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 29;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 29;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 29;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1E;
  v8 = v6 - 30;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticService.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_23E4528BC + 4 * byte_23E551D12[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_23E4528F0 + 4 * byte_23E551D0D[v4]))();
}

uint64_t sub_23E4528F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E4528F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E452900);
  return result;
}

uint64_t sub_23E45290C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E452914);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_23E452918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E452920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticService.CodingKeys()
{
  return &type metadata for StaticService.CodingKeys;
}

unint64_t sub_23E452940()
{
  unint64_t result;

  result = qword_256D47288;
  if (!qword_256D47288)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55216C, &type metadata for StaticService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47288);
  }
  return result;
}

unint64_t sub_23E452988()
{
  unint64_t result;

  result = qword_256D47290;
  if (!qword_256D47290)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5520DC, &type metadata for StaticService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47290);
  }
  return result;
}

unint64_t sub_23E4529D0()
{
  unint64_t result;

  result = qword_256D47298;
  if (!qword_256D47298)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552104, &type metadata for StaticService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47298);
  }
  return result;
}

uint64_t sub_23E452A14@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E449334(a1, *(_BYTE *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_BYTE *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2);
}

uint64_t sub_23E452A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E452A80(uint64_t a1)
{
  return sub_23E452E7C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E449D48);
}

uint64_t sub_23E452A9C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(unint64_t, char *, uint64_t);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333170);
  result = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v60 = v3;
    v61 = a1;
    v17 = *(int *)(result + 48);
    v59 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v18 = a1 + v59;
    v64 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    sub_23E1E7C20(v18, (uint64_t)v15, &qword_254333170);
    v65 = v8;
    v66 = v7;
    v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19(v10, v15, v7);
    v62 = v17;
    v63 = v15;
    v20 = *(_QWORD *)&v15[v17];
    v67 = a3;
    v21 = *a3;
    v23 = sub_23E1E3300((uint64_t)v10);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v27 = v22;
    v28 = *(_QWORD *)(v21 + 24);
    v58 = (void (*)(unint64_t, char *, uint64_t))v19;
    if (v28 < v26)
    {
      sub_23E219598(v26, a2 & 1);
      v29 = sub_23E1E3300((uint64_t)v10);
      if ((v27 & 1) != (v30 & 1))
      {
LABEL_28:
        result = sub_23E5383C0();
        __break(1u);
        return result;
      }
      v23 = v29;
      v31 = v67;
      v32 = v65;
      v33 = v66;
      if ((v27 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
      v34 = *(_QWORD *)(*v31 + 56);

      *(_QWORD *)(v34 + 8 * v23) = v20;
      v31 = v67;
      v35 = v16 - 1;
      if (v16 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      v40 = v61 + v64 + v59;
      while (1)
      {
        v42 = (uint64_t)v63;
        sub_23E1E7C20(v40, (uint64_t)v63, &qword_254333170);
        v43 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 32);
        v43(v10, v42, v33);
        v44 = *(_QWORD *)(v42 + v62);
        v45 = *v31;
        v47 = sub_23E1E3300((uint64_t)v10);
        v48 = *(_QWORD *)(v45 + 16);
        v49 = (v46 & 1) == 0;
        v50 = v48 + v49;
        if (__OFADD__(v48, v49))
          goto LABEL_26;
        v51 = v46;
        if (*(_QWORD *)(v45 + 24) < v50)
        {
          sub_23E219598(v50, 1);
          v52 = sub_23E1E3300((uint64_t)v10);
          if ((v51 & 1) != (v53 & 1))
            goto LABEL_28;
          v47 = v52;
        }
        v31 = v67;
        if ((v51 & 1) != 0)
        {
          v32 = v65;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v66);
          v41 = *(_QWORD *)(*v31 + 56);

          *(_QWORD *)(v41 + 8 * v47) = v44;
          v31 = v67;
        }
        else
        {
          v54 = (_QWORD *)*v67;
          *(_QWORD *)(*v67 + 8 * (v47 >> 6) + 64) |= 1 << v47;
          v32 = v65;
          v43((char *)(v54[6] + *(_QWORD *)(v65 + 72) * v47), (uint64_t)v10, v66);
          *(_QWORD *)(v54[7] + 8 * v47) = v44;
          v55 = v54[2];
          v38 = __OFADD__(v55, 1);
          v56 = v55 + 1;
          if (v38)
            goto LABEL_27;
          v54[2] = v56;
        }
        v40 += v64;
        --v35;
        v33 = v66;
        if (!v35)
          return swift_bridgeObjectRelease();
      }
    }
    v31 = v67;
    v32 = v65;
    v33 = v66;
    if ((a2 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_23E22157C();
      v31 = v67;
      if ((v27 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v36 = (_QWORD *)*v31;
    *(_QWORD *)(*v31 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v58(v36[6] + *(_QWORD *)(v32 + 72) * v23, v10, v33);
    *(_QWORD *)(v36[7] + 8 * v23) = v20;
    v37 = v36[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v36[2] = v39;
    v33 = v66;
    v35 = v16 - 1;
    if (v16 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_23E452E60(uint64_t a1)
{
  return sub_23E452E7C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E44C244);
}

uint64_t sub_23E452E7C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_23E452EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E44B9D0(a1, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v2 + 24), *(void **)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), a2);
}

uint64_t sub_23E452ECC()
{
  return sub_23E412244() & 1;
}

void sub_23E452EF4(uint64_t a1)
{
  sub_23E452F58(a1, 0xD000000000000011, 0x800000023E56A6B0, (unsigned __int8 *)&byte_256D472A0);
}

uint64_t static NSUserDefaults.forceNativeMatter.getter()
{
  return sub_23E452FF8(&qword_256D3EEA8, (unsigned __int8 *)&byte_256D472A0);
}

void sub_23E452F34(uint64_t a1)
{
  sub_23E452F58(a1, 0xD000000000000018, 0x800000023E56A690, byte_256D472A1);
}

void sub_23E452F58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  id v5;
  void *v6;
  unsigned __int8 v7;

  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v6 = (void *)sub_23E537538();
  v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  *a4 = v7;
}

uint64_t static NSUserDefaults.forceNewAccessoryDetails.getter()
{
  return sub_23E452FF8(&qword_256D3EEB0, byte_256D472A1);
}

uint64_t sub_23E452FF8(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_23E453030(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  Swift::String v13;
  int countAndFlagsBits_low;
  void *object;
  HomeDataModel::StaticRenderingMode renderingMode;
  void *v17;
  void *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  int v25;
  uint64_t v26;
  void *v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  int *v41;
  uint64_t countAndFlagsBits;
  int v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  char v51;
  HomeDataModel::Icon v52;
  uint64_t v53;

  v3 = (int *)type metadata accessor for StaticService();
  v4 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v39 = v6;
    v37 = v1;
    v53 = MEMORY[0x24BEE4AF8];
    sub_23E2CB1CC(0, v7, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v40 = *(_QWORD *)(v4 + 72);
    v38 = (unint64_t)"iceTypeCapitalizedPlural";
    v41 = v3;
    do
    {
      v10 = (uint64_t *)(v9 + v3[20]);
      v11 = (void *)v10[1];
      if (v11)
      {
        v12 = *v10;
        swift_bridgeObjectRetain();
        v13._countAndFlagsBits = v12;
        v13._object = v11;
        IconSymbol.init(rawValue:)(v13);
        countAndFlagsBits_low = LOBYTE(v52.tileOnStateIconInfo.name._countAndFlagsBits);
        if (LOBYTE(v52.tileOnStateIconInfo.name._countAndFlagsBits) == 88)
        {
          if (qword_256D3ED80 != -1)
            swift_once();
          object = (void *)unk_256D42D60;
          countAndFlagsBits = qword_256D42D58;
          renderingMode = byte_256D42D68;
          v17 = (void *)unk_256D42D78;
          v46 = byte_256D42D80;
          v18 = (void *)unk_256D42D90;
          v47 = qword_256D42D70;
          v48 = qword_256D42D88;
          v49 = byte_256D42D98;
          v19 = unk_256D42DA8;
          v45 = qword_256D42DA0;
          v43 = byte_256D42DB0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44 = v19;
        }
        else
        {
          v22 = IconSymbol.onStateSymbolName.getter();
          v24 = v23;
          if ((((_BYTE)countAndFlagsBits_low - 27) & 0xF8) != 0)
            v25 = 2;
          else
            v25 = 0x20202020200uLL >> (8 * (countAndFlagsBits_low - 27));
          v49 = v25;
          LOBYTE(v52.tileOnStateIconInfo.name._countAndFlagsBits) = countAndFlagsBits_low;
          v26 = IconSymbol.rawValue.getter();
          v17 = v27;
          if ((countAndFlagsBits_low - 28) >= 0x14)
            v28 = 0;
          else
            v28 = byte_23E552592[(char)(countAndFlagsBits_low - 28)];
          v47 = v26;
          v48 = v22;
          v46 = v28;
          if (countAndFlagsBits_low == 31)
          {
            v43 = 0;
            v44 = v38 | 0x8000000000000000;
            v45 = 0xD000000000000014;
          }
          else
          {
            LOBYTE(v52.tileOnStateIconInfo.name._countAndFlagsBits) = countAndFlagsBits_low;
            v29 = IconSymbol.rawValue.getter();
            v44 = v30;
            v45 = v29;
            if ((countAndFlagsBits_low - 41) < 7 || countAndFlagsBits_low == 28)
              v43 = 2;
            else
              v43 = 0;
          }
          v18 = v24;
          countAndFlagsBits = v22;
          object = v24;
          renderingMode = (char)v49;
        }
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(unsigned __int8 *)(v9 + v3[23]);
        v21 = (uint64_t)v39;
        sub_23E1E2F50(v9, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v20 == 53)
          LOBYTE(v20) = *(_BYTE *)(v21 + v3[21]);
        sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v51 = v20;
        v50 = *(_BYTE *)(v9 + v3[22]);
        Icon.init(serviceKind:serviceSubKind:)(&v52, (HomeDataModel::ServiceKind)&v51, (HomeDataModel::ServiceSubKind_optional)&v50);
        object = v52.tileOnStateIconInfo.name._object;
        countAndFlagsBits = v52.tileOnStateIconInfo.name._countAndFlagsBits;
        renderingMode = v52.tileOnStateIconInfo.renderingMode;
        v17 = v52.tileOffStateIconInfo.name._object;
        v46 = v52.tileOffStateIconInfo.renderingMode;
        v18 = v52.accessoryControlOnStateIconInfo.name._object;
        v47 = v52.tileOffStateIconInfo.name._countAndFlagsBits;
        v48 = v52.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
        v49 = v52.accessoryControlOnStateIconInfo.renderingMode;
        v44 = (unint64_t)v52.accessoryControlOffStateIconInfo.name._object;
        v45 = v52.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
        v43 = v52.accessoryControlOffStateIconInfo.renderingMode;
      }
      v8 = v53;
      v31 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB1CC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v53;
      }
      v33 = *(_QWORD *)(v8 + 16);
      v32 = *(_QWORD *)(v8 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_23E2CB1CC(v32 > 1, v33 + 1, 1);
        v8 = v53;
      }
      *(_QWORD *)(v8 + 16) = v33 + 1;
      v34 = v8 + 96 * v33;
      *(_QWORD *)(v34 + 32) = countAndFlagsBits;
      *(_QWORD *)(v34 + 40) = object;
      *(_BYTE *)(v34 + 48) = renderingMode;
      *(_QWORD *)(v34 + 56) = v47;
      *(_QWORD *)(v34 + 64) = v31;
      *(_BYTE *)(v34 + 72) = v46;
      *(_QWORD *)(v34 + 80) = v48;
      *(_QWORD *)(v34 + 88) = v18;
      *(_BYTE *)(v34 + 96) = v49;
      v35 = v44;
      *(_QWORD *)(v34 + 104) = v45;
      *(_QWORD *)(v34 + 112) = v35;
      v9 += v40;
      *(_BYTE *)(v34 + 120) = v43;
      --v7;
      v3 = v41;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23E453440(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int16 v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  Swift::String v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;

  v3 = (int *)type metadata accessor for StaticService();
  v4 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v21 = v1;
    v25 = MEMORY[0x24BEE4AF8];
    sub_23E2CB420(0, v7, 0);
    v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v22 = *(_QWORD *)(v4 + 72);
    v23 = v6;
    do
    {
      v10 = *(unsigned __int8 *)(v9 + v3[23]);
      sub_23E1E2F50(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v10 == 53)
        LOWORD(v10) = v6[v3[21]];
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v11 = *(unsigned __int8 *)(v9 + v3[22]);
      v12 = (uint64_t *)(v9 + v3[20]);
      v13 = (void *)v12[1];
      if (v13)
      {
        v14 = *v12;
        swift_bridgeObjectRetain();
        v15._countAndFlagsBits = v14;
        v15._object = v13;
        IconSymbol.init(rawValue:)(v15);
        v16 = v24;
      }
      else
      {
        v16 = 88;
      }
      v8 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB420(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v25;
      }
      v18 = *(_QWORD *)(v8 + 16);
      v17 = *(_QWORD *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_23E2CB420(v17 > 1, v18 + 1, 1);
        v8 = v25;
      }
      *(_QWORD *)(v8 + 16) = v18 + 1;
      v19 = v8 + 24 * v18;
      *(_WORD *)(v19 + 32) = v10 | (v11 << 8);
      *(_BYTE *)(v19 + 34) = 0;
      *(_BYTE *)(v19 + 35) = v16;
      *(_QWORD *)(v19 + 40) = 0;
      *(_QWORD *)(v19 + 48) = 0;
      v6 = v23;
      v9 += v22;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23E453628(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(char *);

  v25 = a1;
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(a3 + 56);
  v23 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v24 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v19 = v18 | (v17 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v25(v9);
    result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v17 >= v24)
    return swift_release();
  v21 = *(_QWORD *)(v23 + 8 * v17);
  if (v21)
  {
LABEL_19:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_5;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v24)
    return swift_release();
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v17 + 2;
  if (v17 + 2 >= v24)
    return swift_release();
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v17 + 3;
  if (v17 + 3 >= v24)
    return swift_release();
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v17 + 4;
  if (v17 + 4 >= v24)
    return swift_release();
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
  {
LABEL_18:
    v17 = v22;
    goto LABEL_19;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v24)
      return swift_release();
    v21 = *(_QWORD *)(v23 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E453864(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v4 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = (id)MEMORY[0x24264F148](i - 4, a1);
          v6 = i - 3;
          if (__OFADD__(v4, 1))
            goto LABEL_15;
        }
        else
        {
          v5 = *(id *)(a1 + 8 * i);
          v6 = i - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        v7 = v5;
        v8 = objc_msgSend(v7, sel_accessory);
        v9 = objc_msgSend(v8, sel_room);

        if (v9)
        {
          MEMORY[0x24264EA70]();
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23E537820();
          sub_23E53785C();
          sub_23E537808();
        }
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t StaticServiceGroup.staticServices.getter()
{
  uint64_t v0;

  type metadata accessor for StaticServiceGroup();
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB788(v0);
}

uint64_t StaticServiceGroup.set(displayName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E453A48()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_23E5378F8();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E453AB4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E453B18()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E453B78()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 168) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E453BC0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E536F44();
  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E453C28()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[22];
  v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E453C8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 192);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = sub_23E537538();
  *(_QWORD *)(v0 + 200) = v2;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E4423FC;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_23E267484;
  v4[3] = &block_descriptor_31;
  v4[4] = v3;
  objc_msgSend(v1, sel_updateName_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t StaticServiceGroup.tileStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  Swift::Bool v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v49 - v9;
  v11 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E45738C();
  v16 = v15;
  v17 = *(unsigned __int8 *)(v0 + *(int *)(v11 + 24));
  sub_23E1E2F50(v1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v53 = v11;
  if (v17 != 1)
  {
LABEL_27:
    v34 = (uint64_t)v4;
    sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    static String.hfLocalized(_:)();
    v36 = v35;
    v38 = v37;
    v39 = v55;
    v40 = v16;
LABEL_28:
    v41 = StaticServiceGroup.isUpdating.getter();
    v42 = swift_bridgeObjectRetain();
    sub_23E4FB788(v42);
    v43 = swift_bridgeObjectRetain();
    v44 = (_QWORD *)sub_23E249F8C(v43);
    swift_bridgeObjectRelease();
    v57 = v44;
    sub_23E45B100(&v57);
    swift_bridgeObjectRelease();
    if (v57[2])
    {
      sub_23E1E2F50((uint64_t)v57 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v45 = 0;
    }
    else
    {
      v45 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v34, v45, 1, v5);
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v34, 1, v5) == 1)
    {
      sub_23E1E7C64(v34, &qword_254332DE8);
      v46 = 0;
      if ((v41 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      v46 = StaticService.tileCharacteristicStateString.getter();
      sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v41 & 1) == 0)
      {
LABEL_33:
        if (v38)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v40)
            return v14;
          else
            return v46;
        }
        return v36;
      }
    }
    static String.hfLocalized(_:)();
    v36 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v36;
  }
  v49 = v1;
  v50 = v14;
  v51 = v4;
  v52 = v16;
  v54 = v13;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23E4FB788(v18);
  v20 = v19;
  v21 = v19 + 56;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(v19 + 56);
  v25 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain();
  v26 = 0;
  while (v24)
  {
    v27 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v28 = v27 | (v26 << 6);
LABEL_6:
    sub_23E1E2F50(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v55 + 72) * v28, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v57 = *(_QWORD **)&v8[*(int *)(v5 + 104)];
    v56 = v8[*(int *)(v5 + 84)];
    v29 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v56);
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (!v29)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v4 = v51;
      v16 = v52;
      v14 = v50;
      v13 = v54;
      goto LABEL_27;
    }
  }
  v30 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  v31 = (uint64_t)v54;
  if (v30 >= v25)
    goto LABEL_38;
  v32 = *(_QWORD *)(v21 + 8 * v30);
  ++v26;
  if (v32)
    goto LABEL_25;
  v26 = v30 + 1;
  if (v30 + 1 >= v25)
    goto LABEL_38;
  v32 = *(_QWORD *)(v21 + 8 * v26);
  if (v32)
    goto LABEL_25;
  v26 = v30 + 2;
  if (v30 + 2 >= v25)
    goto LABEL_38;
  v32 = *(_QWORD *)(v21 + 8 * v26);
  if (v32)
    goto LABEL_25;
  v26 = v30 + 3;
  if (v30 + 3 >= v25)
    goto LABEL_38;
  v32 = *(_QWORD *)(v21 + 8 * v26);
  if (v32)
    goto LABEL_25;
  v26 = v30 + 4;
  if (v30 + 4 >= v25)
    goto LABEL_38;
  v32 = *(_QWORD *)(v21 + 8 * v26);
  if (v32)
  {
LABEL_25:
    v24 = (v32 - 1) & v32;
    v28 = __clz(__rbit64(v32)) + (v26 << 6);
    goto LABEL_6;
  }
  v33 = v30 + 5;
  if (v33 >= v25)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v36 = 0;
    v38 = 0;
    v34 = (uint64_t)v51;
    v40 = v52;
    v14 = v50;
    v39 = v55;
    goto LABEL_28;
  }
  v32 = *(_QWORD *)(v21 + 8 * v33);
  if (v32)
  {
    v26 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v26 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v26 >= v25)
      goto LABEL_38;
    v32 = *(_QWORD *)(v21 + 8 * v26);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_43:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t StaticServiceGroup.set(staticRoom:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E4542B4()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_23E454344;
  return sub_23E5380B4();
}

uint64_t sub_23E454344()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t StaticServiceGroup.serviceGroup.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E4543B8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E454424()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E454488()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4544E8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E454530()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E454598()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticServiceGroup.set(showInDashboard:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_23E454610()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = sub_23E5378F8();
  *(_QWORD *)(v0 + 80) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E45467C()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4546E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E454740()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 96) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E454788()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = sub_23E536F44();
  *(_QWORD *)(v0 + 112) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4547F0()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[13];
  v2 = (void *)v0[12];
  swift_release();
  v0[15] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return swift_task_switch();
}

void sub_23E454854()
{
  _QWORD *v0;
  void *v1;
  id v2;
  unint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;

  v1 = (void *)v0[15];
  if (*((_BYTE *)v0 + 128) != 1)
  {
    if (!v1)
      goto LABEL_22;
    v7 = objc_msgSend(v1, sel_services);
    sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    v8 = sub_23E5377F0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_23E53803C();
      if (!v9)
        goto LABEL_21;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_21;
    }
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_25;
    }
    v10 = 0;
    v23 = v8 & 0xC000000000000001;
    v11 = v8;
    do
    {
      if (v23)
        v12 = (id)MEMORY[0x24264F148](v10, v8);
      else
        v12 = *(id *)(v8 + 8 * v10 + 32);
      v13 = v12;
      ++v10;
      v14 = objc_msgSend(v12, sel_applicationData, v23);
      v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 0);
      v16 = (void *)sub_23E537538();
      objc_msgSend(v14, sel_setObject_forKeyedSubscript_, v15, v16);

      v17 = objc_msgSend(v13, sel_applicationData);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v13;
      v0[6] = sub_23E45B1A4;
      v0[7] = v18;
      v0[2] = MEMORY[0x24BDAC760];
      v0[3] = 1107296256;
      v0[4] = sub_23E50B358;
      v0[5] = &block_descriptor_4;
      v19 = _Block_copy(v0 + 2);
      v20 = v13;
      swift_release();
      objc_msgSend(v20, sel_updateApplicationData_completionHandler_, v17, v19);
      _Block_release(v19);

      v8 = v11;
    }
    while (v9 != v10);
LABEL_21:

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  if (!v1)
  {
LABEL_22:
    ((void (*)(void))v0[1])();
    return;
  }
  v2 = objc_msgSend(v1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v3 = sub_23E5377F0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v21)
      goto LABEL_5;
LABEL_19:
    v22 = (void *)v0[15];
    swift_bridgeObjectRelease();

    goto LABEL_22;
  }
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_19;
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x24264F148](0, v3);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_8:
    v5 = v4;
    v6 = (void *)v0[15];
    swift_bridgeObjectRelease();
    HMService.shouldShowInDashboard.setter(1);

    goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t StaticServiceGroup.set(favorite:)()
{
  uint64_t v0;

  return sub_23E35DBAC(*(uint64_t (**)(void))(v0 + 8));
}

_QWORD *StaticServiceGroup.sortedStaticServices.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  type metadata accessor for StaticServiceGroup();
  v0 = swift_bridgeObjectRetain();
  sub_23E4FB788(v0);
  v1 = swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_23E249F8C(v1);
  swift_bridgeObjectRelease();
  v4 = v2;
  sub_23E45B100(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

BOOL StaticServiceGroup.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v15;
  _QWORD *v16;

  v0 = type metadata accessor for StaticService();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - v5;
  type metadata accessor for StaticServiceGroup();
  v7 = swift_bridgeObjectRetain();
  sub_23E4FB788(v7);
  v8 = swift_bridgeObjectRetain();
  v9 = (_QWORD *)sub_23E249F8C(v8);
  swift_bridgeObjectRelease();
  v16 = v9;
  sub_23E45B100(&v16);
  swift_bridgeObjectRelease();
  v10 = v16[2];
  if (v10)
  {
    v11 = (char *)v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v12 = *(_QWORD *)(v1 + 72);
    swift_retain();
    v13 = 0;
    do
    {
      sub_23E1E2F50((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2F50((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v13 = v13 || StaticService.isActivated.getter();
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_release_n();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v13;
}

uint64_t StaticServiceGroup.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticServiceGroup.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticServiceGroup.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 24));
}

uint64_t StaticServiceGroup.homeNonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticServiceGroup();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t StaticServiceGroup.roomIds.getter()
{
  type metadata accessor for StaticServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t StaticServiceGroup.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticServiceGroup.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 40));
}

uint64_t StaticServiceGroup.staticServicesDictionary.getter()
{
  type metadata accessor for StaticServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t StaticServiceGroup.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538468();
  v5 = *(_QWORD *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v4[9] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  sub_23E538474();
  v6 = *(_QWORD *)(v2 + v4[11]);
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E4550C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4550E8 + 4 * byte_23E5521F0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4550E8()
{
  return 1701667182;
}

uint64_t sub_23E4550F8()
{
  return 0x6168636165527369;
}

unint64_t sub_23E455118()
{
  return 0xD000000000000015;
}

unint64_t sub_23E455170()
{
  return 0xD000000000000018;
}

uint64_t sub_23E455190()
{
  unsigned __int8 *v0;

  return sub_23E4550C0(*v0);
}

uint64_t sub_23E455198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E45D314(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4551BC()
{
  sub_23E45C36C();
  return sub_23E538570();
}

uint64_t sub_23E4551E4()
{
  sub_23E45C36C();
  return sub_23E53857C();
}

uint64_t StaticServiceGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D472D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E45C36C();
  sub_23E5384EC();
  LOBYTE(v11) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticServiceGroup();
    LOBYTE(v11) = 1;
    sub_23E538270();
    LOBYTE(v11) = 2;
    sub_23E53827C();
    LOBYTE(v11) = *(_BYTE *)(v3 + v9[7]);
    v12 = 3;
    sub_23E3760D8();
    sub_23E5382AC();
    v11 = *(_QWORD *)(v3 + v9[8]);
    v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v11) = 5;
    sub_23E5381EC();
    LOBYTE(v11) = 6;
    sub_23E53827C();
    v11 = *(_QWORD *)(v3 + v9[11]);
    v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
    sub_23E297E64();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticServiceGroup.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticServiceGroup.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticServiceGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v25 = a2;
  v26 = sub_23E536F80();
  v3 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D472E8);
  v5 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E45C36C();
  v29 = v7;
  v11 = v30;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v12 = v5;
  v30 = v3;
  v13 = (uint64_t)v10;
  LOBYTE(v31) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v26;
  v14 = v27;
  sub_23E538180();
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v13, v14, v15);
  LOBYTE(v31) = 1;
  v16 = sub_23E538144();
  v17 = (uint64_t *)(v13 + v8[5]);
  *v17 = v16;
  v17[1] = v18;
  LOBYTE(v31) = 2;
  *(_BYTE *)(v13 + v8[6]) = sub_23E538150() & 1;
  v32 = 3;
  sub_23E376160();
  sub_23E538180();
  *(_BYTE *)(v13 + v8[7]) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v32 = 4;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  v19 = v28;
  sub_23E538180();
  *(_QWORD *)(v13 + v8[8]) = v31;
  LOBYTE(v31) = 5;
  v20 = sub_23E5380D8();
  v21 = (uint64_t *)(v13 + v8[9]);
  *v21 = v20;
  v21[1] = v22;
  LOBYTE(v31) = 6;
  *(_BYTE *)(v13 + v8[10]) = sub_23E538150() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v32 = 7;
  sub_23E298768();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v19);
  *(_QWORD *)(v13 + v8[11]) = v31;
  sub_23E1E2F50(v13, v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  __swift_destroy_boxed_opaque_existential_0(0);
  return sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
}

uint64_t sub_23E455A14()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticServiceGroup.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E455A54()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticServiceGroup.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E455A8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticServiceGroup.init(from:)(a1, a2);
}

uint64_t sub_23E455AA0(_QWORD *a1)
{
  return StaticServiceGroup.encode(to:)(a1);
}

void StaticServiceGroup.foregroundColor.getter()
{
  char v0;

  StaticServiceGroup.displayAsServiceKind.getter(&v0);
  ServiceKind.foregroundColor.getter();
}

uint64_t StaticServiceGroup.displayAsServiceKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  int v12;
  uint64_t result;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticServiceGroup() + 44));
  sub_23E1F1324(v9, (uint64_t)v8);
  v10 = type metadata accessor for StaticService();
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (v11(v8, 1, v10) == 1)
  {
    swift_bridgeObjectRetain();
    sub_23E1E7C64((uint64_t)v8, &qword_254332DE8);
  }
  else
  {
    v12 = v8[*(int *)(v10 + 92)];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v12 != 53)
    {
      result = swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  sub_23E1F1324(v9, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v11(v6, 1, v10) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v6, &qword_254332DE8);
    LOBYTE(v12) = 0;
  }
  else
  {
    LOBYTE(v12) = v6[*(int *)(v10 + 84)];
    result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
LABEL_8:
  *a1 = v12;
  return result;
}

uint64_t StaticServiceGroup.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  type metadata accessor for StaticServiceGroup();
  v2 = swift_bridgeObjectRetain();
  sub_23E4FB788(v2);
  v3 = swift_bridgeObjectRetain();
  v4 = (_QWORD *)sub_23E249F8C(v3);
  swift_bridgeObjectRelease();
  v28 = v4;
  sub_23E45B100(&v28);
  swift_bridgeObjectRelease();
  v5 = sub_23E453030((uint64_t)v28);
  swift_release();
  sub_23E455DF0(v5, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  v6 = v29;
  if (v29)
  {
    v7 = v39;
    v9 = v37;
    v8 = v38;
    v11 = v35;
    v10 = v36;
    v13 = v33;
    v12 = v34;
    v15 = v31;
    v14 = v32;
    result = v30;
    *(_QWORD *)a1 = v28;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = result;
    *(_QWORD *)(a1 + 24) = v15;
    *(_QWORD *)(a1 + 32) = v14;
    *(_BYTE *)(a1 + 40) = v13;
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 80) = v8;
    *(_BYTE *)(a1 + 88) = v7;
  }
  else
  {
    if (qword_256D3ED80 != -1)
      swift_once();
    v17 = unk_256D42D60;
    v18 = byte_256D42D68;
    v19 = qword_256D42D70;
    v20 = unk_256D42D78;
    v21 = byte_256D42D80;
    v22 = qword_256D42D88;
    v23 = unk_256D42D90;
    v24 = byte_256D42D98;
    v25 = qword_256D42DA0;
    v26 = unk_256D42DA8;
    v27 = byte_256D42DB0;
    *(_QWORD *)a1 = qword_256D42D58;
    *(_QWORD *)(a1 + 8) = v17;
    *(_BYTE *)(a1 + 16) = v18;
    *(_QWORD *)(a1 + 24) = v19;
    *(_QWORD *)(a1 + 32) = v20;
    *(_BYTE *)(a1 + 40) = v21;
    *(_QWORD *)(a1 + 48) = v22;
    *(_QWORD *)(a1 + 56) = v23;
    *(_BYTE *)(a1 + 64) = v24;
    *(_QWORD *)(a1 + 72) = v25;
    *(_QWORD *)(a1 + 80) = v26;
    *(_BYTE *)(a1 + 88) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23E455DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  char v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v2 = a1;
  sub_23E3CF234(a1);
  v4 = objc_allocWithZone(MEMORY[0x24BDD14E0]);
  v5 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    v35 = a2;
    swift_bridgeObjectRetain();
    v8 = 0;
    v56 = 0;
    v48 = 0;
    v49 = 0;
    v46 = 0;
    v47 = 0;
    v44 = 0;
    v45 = 0;
    v42 = 0;
    v43 = 0;
    v40 = 0;
    v41 = 0;
    v39 = 0;
    v38 = 0;
    v36 = v6;
    v37 = v2;
    do
    {
      v9 = v2 + v8;
      v10 = *(_QWORD *)(v2 + v8 + 32);
      v11 = *(_QWORD *)(v2 + v8 + 40);
      v12 = *(unsigned __int8 *)(v2 + v8 + 48);
      v13 = *(_QWORD *)(v2 + v8 + 56);
      v14 = *(_QWORD *)(v2 + v8 + 64);
      v15 = *(unsigned __int8 *)(v2 + v8 + 72);
      v16 = *(_QWORD *)(v2 + v8 + 80);
      v17 = *(_QWORD *)(v2 + v8 + 88);
      v18 = *(unsigned __int8 *)(v2 + v8 + 96);
      v19 = *(_QWORD *)(v2 + v8 + 104);
      v20 = *(_QWORD *)(v2 + v8 + 112);
      v21 = *(_BYTE *)(v9 + 120);
      v54 = v12;
      v55 = v10;
      v52 = v15;
      v53 = v13;
      v50 = v18;
      v51 = v16;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v22 = objc_msgSend(v6, sel_countForObject_, sub_23E5383A8());
      swift_unknownObjectRelease();
      if ((uint64_t)v56 >= (uint64_t)v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E45D644(v49, v48);
        v56 = v22;
        v48 = v11;
        v49 = v55;
        v46 = v53;
        v47 = v54;
        v44 = v52;
        v45 = v14;
        v42 = v17;
        v43 = v51;
        v40 = v19;
        v41 = v50;
        v39 = v20;
        v38 = v21;
      }
      v8 += 96;
      --v7;
      v6 = v36;
      v2 = v37;
    }
    while (v7);

    swift_bridgeObjectRelease();
    a2 = v35;
    v24 = v48;
    v23 = v49;
    v26 = v46;
    v25 = v47;
    v28 = v44;
    v27 = v45;
    v30 = v42;
    v29 = v43;
    v32 = v40;
    v31 = v41;
    result = v39;
    v34 = v38;
  }
  else
  {

    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0;
    result = 0;
    v34 = 0;
  }
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v28;
  *(_QWORD *)(a2 + 48) = v29;
  *(_QWORD *)(a2 + 56) = v30;
  *(_QWORD *)(a2 + 64) = v31;
  *(_QWORD *)(a2 + 72) = v32;
  *(_QWORD *)(a2 + 80) = result;
  *(_BYTE *)(a2 + 88) = v34;
  return result;
}

void sub_23E4560A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  sub_23E3CF3A8(a1);
  v4 = objc_allocWithZone(MEMORY[0x24BDD14E0]);
  v5 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v19 = a2;
    v8 = (unsigned __int16 *)(a1 + 32);
    swift_bridgeObjectRetain();
    v22 = 0;
    v23 = 0;
    v20 = 1;
    v21 = 0;
    do
    {
      v9 = *v8;
      v10 = *((unsigned __int8 *)v8 + 2);
      v11 = *((unsigned __int8 *)v8 + 3);
      v12 = *((_QWORD *)v8 + 1);
      v13 = *((_QWORD *)v8 + 2);
      swift_bridgeObjectRetain_n();
      v14 = v6;
      v15 = objc_msgSend(v6, sel_countForObject_, sub_23E5383A8());
      swift_unknownObjectRelease();
      if ((uint64_t)v23 >= (uint64_t)v15)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E45D630(v22, v21, v20);
        v22 = v9 | (v10 << 16) | (v11 << 24);
        v23 = v15;
        v20 = v13;
        v21 = v12;
      }
      v8 += 12;
      --v7;
      v6 = v14;
    }
    while (v7);

    swift_bridgeObjectRelease();
    a2 = v19;
    v16 = v20;
    v18 = v21;
    v17 = v22;
  }
  else
  {

    v17 = 0;
    v18 = 0;
    v16 = 1;
  }
  *a2 = v17;
  a2[1] = v18;
  a2[2] = v16;
}

uint64_t Array.mostCommon.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  id v27;
  char *v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)&v24 - v10;
  sub_23E537FD0();
  v11 = objc_allocWithZone(MEMORY[0x24BDD14E0]);
  v12 = (void *)sub_23E5377E4();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithArray_, v12);

  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v26 = a3;
  v25(a3, 1, 1, a2);
  v14 = swift_bridgeObjectRetain();
  if (!MEMORY[0x24264EB0C](v14, a2))
  {

    return swift_bridgeObjectRelease();
  }
  v27 = v13;
  v15 = 0;
  v16 = 0;
  while (1)
  {
    v17 = sub_23E537850();
    sub_23E537814();
    if ((v17 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v28, a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, a2);
      v18 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_12;
      goto LABEL_7;
    }
    result = sub_23E537EA4();
    if (v24 != 8)
      break;
    v29 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 16))(v28, &v29, a2);
    swift_unknownObjectRelease();
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_12:
      __break(1u);
LABEL_13:

      return swift_bridgeObjectRelease();
    }
LABEL_7:
    v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v19(v9, v28, a2);
    v20 = objc_msgSend(v27, sel_countForObject_, sub_23E538348());
    swift_unknownObjectRelease();
    if ((uint64_t)v16 >= (uint64_t)v20)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a2);
    }
    else
    {
      v21 = sub_23E537CC4();
      v22 = v26;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v26, v21);
      v19(v22, v9, a2);
      v25(v22, 0, 1, a2);
      v16 = v20;
    }
    ++v15;
    if (v18 == MEMORY[0x24264EB0C](a1, a2))
      goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t StaticServiceGroup.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t StaticServiceGroup.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[5];
  int64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE *v30;
  char *v31;
  char v32;

  v1 = type metadata accessor for StaticService();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - v6;
  v8 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 44));
  v9 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v8 + 64);
  v27 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v13 = 0;
  v31 = "951.1.8.1.4\n";
  v26[3] = v1;
  v26[4] = v8;
  v26[2] = v2;
  v26[1] = v8 + 64;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v13 << 6);
    }
    else
    {
      v18 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v18 >= v27)
        goto LABEL_37;
      v19 = *(_QWORD *)(v9 + 8 * v18);
      ++v13;
      if (!v19)
      {
        v13 = v18 + 1;
        if (v18 + 1 >= v27)
          goto LABEL_37;
        v19 = *(_QWORD *)(v9 + 8 * v13);
        if (!v19)
        {
          v13 = v18 + 2;
          if (v18 + 2 >= v27)
            goto LABEL_37;
          v19 = *(_QWORD *)(v9 + 8 * v13);
          if (!v19)
          {
            v13 = v18 + 3;
            if (v18 + 3 >= v27)
              goto LABEL_37;
            v19 = *(_QWORD *)(v9 + 8 * v13);
            if (!v19)
            {
              v13 = v18 + 4;
              if (v18 + 4 >= v27)
                goto LABEL_37;
              v19 = *(_QWORD *)(v9 + 8 * v13);
              if (!v19)
              {
                v20 = v18 + 5;
                if (v20 >= v27)
                {
LABEL_37:
                  swift_release();
                  swift_bridgeObjectRelease();
                  return 1;
                }
                v19 = *(_QWORD *)(v9 + 8 * v20);
                if (!v19)
                {
                  while (1)
                  {
                    v13 = v20 + 1;
                    if (__OFADD__(v20, 1))
                      break;
                    if (v13 >= v27)
                      goto LABEL_37;
                    v19 = *(_QWORD *)(v9 + 8 * v13);
                    ++v20;
                    if (v19)
                      goto LABEL_34;
                  }
LABEL_39:
                  __break(1u);
                  JUMPOUT(0x23E456EC8);
                }
                v13 = v20;
              }
            }
          }
        }
      }
LABEL_34:
      v12 = (v19 - 1) & v19;
      v15 = __clz(__rbit64(v19)) + (v13 << 6);
    }
    sub_23E1E2F50(*(_QWORD *)(v8 + 56) + *(_QWORD *)(v2 + 72) * v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v16 = v5[*(int *)(v1 + 84)];
    if (v16 > 0x30 || ((1 << v16) & 0x1964491330008) == 0)
      break;
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  if (qword_256D3ED38 != -1)
    swift_once();
  swift_beginAccess();
  if (*((_QWORD *)off_256D42460 + 2))
  {
    v30 = off_256D42460;
    v21 = sub_23E53845C();
    v32 = v16;
    ServiceKind.rawValue.getter(v21);
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v22 = sub_23E5384A4();
    v23 = -1 << v30[32];
    v24 = v22 & ~v23;
    v29 = v30 + 56;
    if (((*(_QWORD *)&v30[((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v24) & 1) != 0)
    {
      v28 = ~v23;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticServiceGroup.toggle()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_23E45708C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 48) = 2;
  *(_OWORD *)(v0 + 16) = xmmword_23E53C8E0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23E446E18;
  return StaticServiceGroup.toggle(options:context:)(*(_QWORD *)(v0 + 56), (uint64_t *)(v0 + 48), (_OWORD *)(v0 + 16));
}

void sub_23E457114()
{
  char v0;

  StaticServiceGroup.displayAsServiceKind.getter(&v0);
  ServiceKind.foregroundColor.getter();
}

uint64_t StaticServiceGroup.isDoubleHigh.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v3 = swift_bridgeObjectRetain();
  sub_23E4FB788(v3);
  v4 = swift_bridgeObjectRetain();
  v5 = (_QWORD *)sub_23E249F8C(v4);
  swift_bridgeObjectRelease();
  v14 = v5;
  sub_23E45B100(&v14);
  swift_bridgeObjectRelease();
  v6 = v14;
  v7 = v14[2];
  v8 = type metadata accessor for StaticService();
  v9 = *(_QWORD *)(v8 - 8);
  if (v7)
  {
    sub_23E1E2F50((uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, v10, 1, v8);
  swift_release();
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_254332DE8);
    return 0;
  }
  else
  {
    v11 = v2[*(int *)(v8 + 28)];
    sub_23E1E2FA0((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  return v11;
}

uint64_t StaticServiceGroup.isFavorite.getter()
{
  return 0;
}

uint64_t sub_23E4572D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4572DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23E457318(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_23E457328(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23C694;
  v4[7] = a1;
  v4[8] = v1;
  return swift_task_switch();
}

uint64_t sub_23E45738C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[6];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v22 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v22);
  v23 = (char *)v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v24);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticSoftwareUpdate(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StaticService();
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v12 = swift_bridgeObjectRetain();
  sub_23E4FB788(v12);
  v13 = swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_23E249F8C(v13);
  swift_bridgeObjectRelease();
  v28 = v14;
  sub_23E45B100(&v28);
  swift_bridgeObjectRelease();
  v15 = v28[2];
  if (v15)
  {
    v16 = (char *)v28 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    v21[4] = v28;
    v21[5] = v23 + 8;
    swift_retain();
    v21[2] = 0x800000023E568230;
    v21[3] = 0x800000023E5681B0;
    v21[1] = 0x800000023E5681E0;
    do
    {
      sub_23E1E2F50((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E7C20((uint64_t)&v11[*(int *)(v25 + 112)], (uint64_t)v5, &qword_2543332B8);
      v18 = v27;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v27) != 1)
      {
        sub_23E1E2FDC((uint64_t)v5, (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
        sub_23E1E2F50((uint64_t)&v8[*(int *)(v18 + 20)], (uint64_t)v2, type metadata accessor for StaticSoftwareUpdate.Kind);
        v19 = (char *)&loc_23E457670 + 4 * byte_23E5521F8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      sub_23E1E7C64((uint64_t)v5, &qword_2543332B8);
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  return 0;
}

uint64_t StaticServiceGroup.isUpdating.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[3];
  _QWORD *v15;

  v0 = type metadata accessor for StaticService();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v4 = swift_bridgeObjectRetain();
  sub_23E4FB788(v4);
  v5 = swift_bridgeObjectRetain();
  v6 = (_QWORD *)sub_23E249F8C(v5);
  swift_bridgeObjectRelease();
  v15 = v6;
  sub_23E45B100(&v15);
  swift_bridgeObjectRelease();
  v7 = v15[2];
  if (v7)
  {
    v8 = (char *)v15 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v9 = *(_QWORD *)(v1 + 72);
    v14[1] = v15;
    swift_retain();
    while (1)
    {
      sub_23E1E2F50((uint64_t)v8, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v15) = v3[*(int *)(v0 + 84)];
      swift_bridgeObjectRetain();
      v10 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      v11 = swift_bridgeObjectRetain();
      v12 = sub_23E2B91CC(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v12 & 1) != 0)
        break;
      v8 += v9;
      if (!--v7)
      {
        swift_release_n();
        return 0;
      }
    }
    swift_release_n();
    return 1;
  }
  else
  {
    swift_release();
    return 0;
  }
}

uint64_t StaticServiceGroup.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  Swift::Bool v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int64_t v56;
  char v57;
  _QWORD *v58[2];
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v50 - v10;
  v12 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_23E457F88();
  v16 = v15;
  v17 = *(unsigned __int8 *)(v1 + *(int *)(v12 + 24));
  sub_23E1E2F50(v1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v54 = v12;
  if (v17 != 1)
  {
LABEL_27:
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    static String.hfLocalized(_:)();
    v34 = v33;
    v36 = v35;
    v37 = v16;
    goto LABEL_28;
  }
  v50 = v1;
  v51 = v16;
  v52 = v4;
  v55 = v14;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23E4FB788(v18);
  v20 = v19;
  v21 = v19 + 56;
  v22 = 1 << *(_BYTE *)(v19 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & *(_QWORD *)(v19 + 56);
  v56 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain();
  v25 = 0;
  while (v24)
  {
    v26 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v27 = v26 | (v25 << 6);
LABEL_6:
    sub_23E1E2F50(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v6 + 72) * v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v58[0] = *(_QWORD **)&v9[*(int *)(v5 + 104)];
    v57 = v9[*(int *)(v5 + 84)];
    v28 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v57);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (!v28)
    {
      swift_release();
      swift_bridgeObjectRelease();
      v16 = v51;
      v4 = v52;
      v14 = v55;
      goto LABEL_27;
    }
  }
  v29 = v25 + 1;
  if (__OFADD__(v25, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  v30 = (uint64_t)v55;
  if (v29 >= v56)
    goto LABEL_35;
  v31 = *(_QWORD *)(v21 + 8 * v29);
  ++v25;
  if (v31)
    goto LABEL_25;
  v25 = v29 + 1;
  if (v29 + 1 >= v56)
    goto LABEL_35;
  v31 = *(_QWORD *)(v21 + 8 * v25);
  if (v31)
    goto LABEL_25;
  v25 = v29 + 2;
  if (v29 + 2 >= v56)
    goto LABEL_35;
  v31 = *(_QWORD *)(v21 + 8 * v25);
  if (v31)
    goto LABEL_25;
  v25 = v29 + 3;
  if (v29 + 3 >= v56)
    goto LABEL_35;
  v31 = *(_QWORD *)(v21 + 8 * v25);
  if (v31)
    goto LABEL_25;
  v25 = v29 + 4;
  if (v29 + 4 >= v56)
    goto LABEL_35;
  v31 = *(_QWORD *)(v21 + 8 * v25);
  if (v31)
  {
LABEL_25:
    v24 = (v31 - 1) & v31;
    v27 = __clz(__rbit64(v31)) + (v25 << 6);
    goto LABEL_6;
  }
  v32 = v29 + 5;
  if (v32 < v56)
  {
    v31 = *(_QWORD *)(v21 + 8 * v32);
    if (!v31)
    {
      while (1)
      {
        v25 = v32 + 1;
        if (__OFADD__(v32, 1))
          break;
        if (v25 >= v56)
          goto LABEL_35;
        v31 = *(_QWORD *)(v21 + 8 * v25);
        ++v32;
        if (v31)
          goto LABEL_25;
      }
LABEL_43:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x23E457EECLL);
    }
    v25 = v32;
    goto LABEL_25;
  }
LABEL_35:
  swift_release();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v34 = 0;
  v36 = 0;
  v37 = v51;
  v4 = v52;
LABEL_28:
  v38 = StaticServiceGroup.isUpdating.getter();
  v39 = swift_bridgeObjectRetain();
  sub_23E4FB788(v39);
  v40 = swift_bridgeObjectRetain();
  v41 = (_QWORD *)sub_23E249F8C(v40);
  swift_bridgeObjectRelease();
  v58[0] = v41;
  sub_23E45B100(v58);
  swift_bridgeObjectRelease();
  if (v58[0][2])
  {
    sub_23E1E2F50((uint64_t)v58[0] + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v42, 1, v5);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    v43 = 0;
    v44 = 0;
    v45 = v53;
  }
  else
  {
    switch(v4[*(int *)(v5 + 84)])
    {
      case 14:
      case 51:
      case 52:
        v46 = StaticService.motorizedDoorOrWindowTargetString.getter();
        break;
      case 28:
        v46 = StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
        break;
      case 35:
        StaticService.securitySystemTargetString.getter();
        break;
      case 46:
        v46 = StaticService.targetThermostatString.getter();
        break;
      default:
        v46 = StaticService.tileCharacteristicStateString.getter();
        break;
    }
    v43 = v46;
    v44 = v47;
    v45 = v53;
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v58[0] = v34;
  v58[1] = v36;
  v59 = v38 & 1;
  v60 = 0;
  v61 = v43;
  v62 = v44;
  v63 = v45;
  v64 = v37;
  v48 = sub_23E3F4850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_23E457F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[6];
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v26 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v30);
  v31 = (uint64_t)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticSoftwareUpdate(0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticService();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v12 = swift_bridgeObjectRetain();
  sub_23E4FB788(v12);
  v13 = swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_23E249F8C(v13);
  swift_bridgeObjectRelease();
  v34 = v14;
  sub_23E45B100(&v34);
  swift_bridgeObjectRelease();
  v15 = v34[2];
  if (v15)
  {
    v16 = (char *)v34 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    v25[4] = v34;
    v25[5] = v28 + 8;
    swift_retain();
    v18 = 0;
    v19 = 0;
    v29 = 0x800000023E5652B0;
    v25[2] = 0x800000023E568230;
    v25[3] = 0x800000023E5681B0;
    v25[1] = 0x800000023E5681E0;
    v27 = 0x800000023E568200;
    do
    {
      sub_23E1E2F50((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (!v19)
      {
        sub_23E1E7C20((uint64_t)&v11[*(int *)(v8 + 112)], (uint64_t)v4, &qword_2543332B8);
        v22 = v33;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v4, 1, v33) != 1)
        {
          sub_23E1E2FDC((uint64_t)v4, (uint64_t)v7, type metadata accessor for StaticSoftwareUpdate);
          sub_23E1E2F50((uint64_t)&v7[*(int *)(v22 + 20)], v31, type metadata accessor for StaticSoftwareUpdate.Kind);
          v23 = (char *)&loc_23E4582B0 + 4 * byte_23E552202[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        sub_23E1E7C64((uint64_t)v4, &qword_2543332B8);
        if ((v11[*(int *)(v8 + 36)] & 1) != 0)
        {
          static String.hfLocalized(_:)();
          v18 = v20;
          v19 = v21;
        }
        else
        {
          v18 = 0;
          v19 = 0;
        }
      }
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_release_n();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v18;
}

uint64_t StaticServiceGroup.hasDetailAttentionMessages.getter()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t (*v21)();
  uint64_t v22;
  char *v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  v26 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v26);
  v1 = (char *)v25 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v27);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticSoftwareUpdate(0);
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (uint64_t)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticService();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v13 = swift_bridgeObjectRetain();
  sub_23E4FB788(v13);
  v14 = swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_23E249F8C(v14);
  swift_bridgeObjectRelease();
  v31 = v15;
  sub_23E45B100(&v31);
  swift_bridgeObjectRelease();
  v16 = v31[2];
  if (v16)
  {
    v17 = v1;
    v18 = (char *)v31 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v25[1] = v17 + 8;
    v25[2] = v17;
    v29 = *(_QWORD *)(v10 + 72);
    v25[0] = v31;
    swift_retain();
    v19 = type metadata accessor for StaticService;
    v20 = v28;
    while (1)
    {
      v21 = v19;
      sub_23E1E2F50((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(_QWORD))v19);
      sub_23E1E7C20((uint64_t)&v12[*(int *)(v9 + 112)], (uint64_t)v6, &qword_2543332B8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v7) != 1)
      {
        v22 = v30;
        sub_23E1E2FDC((uint64_t)v6, v30, type metadata accessor for StaticSoftwareUpdate);
        sub_23E1E2F50(v22 + *(int *)(v7 + 20), (uint64_t)v3, type metadata accessor for StaticSoftwareUpdate.Kind);
        v23 = (char *)&loc_23E4586C0 + 4 * byte_23E55220C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      sub_23E1E7C64((uint64_t)v6, &qword_2543332B8);
      if ((v12[*(int *)(v9 + 36)] & 1) != 0)
        break;
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))v21);
      v18 += v29;
      v19 = v21;
      if (!--v16)
      {
        swift_release_n();
        return 0;
      }
    }
    static String.hfLocalized(_:)();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_release_n();
    return 1;
  }
  else
  {
    swift_release();
    return 0;
  }
}

uint64_t StaticServiceGroup.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  __int16 v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12[2];
  uint64_t v13;

  type metadata accessor for StaticServiceGroup();
  v2 = swift_bridgeObjectRetain();
  sub_23E4FB788(v2);
  v3 = swift_bridgeObjectRetain();
  v4 = (_QWORD *)sub_23E249F8C(v3);
  swift_bridgeObjectRelease();
  v12[0] = v4;
  sub_23E45B100(v12);
  swift_bridgeObjectRelease();
  v5 = sub_23E453440((uint64_t)v12[0]);
  swift_release();
  sub_23E4560A8(v5, (uint64_t *)v12);
  result = swift_bridgeObjectRelease();
  v7 = v13;
  if (v13 == 1)
  {
    v8 = 0;
    v9 = 0;
    v7 = 0;
    LOBYTE(v10) = 88;
    LOBYTE(v11) = 4;
  }
  else
  {
    v8 = (__int16)v12[0];
    v9 = v12[1];
    v11 = (unint64_t)v12[0] >> 16;
    v10 = (unint64_t)v12[0] >> 24;
  }
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = v11;
  *(_BYTE *)(a1 + 3) = v10;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v7;
  return result;
}

uint64_t StaticServiceGroup.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v38 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v38);
  v1 = (char *)v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (uint64_t)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticSoftwareUpdate(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (uint64_t)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for StaticService();
  v8 = *((_QWORD *)v7 - 1);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v33 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v17 = swift_bridgeObjectRetain();
  sub_23E4FB788(v17);
  v18 = swift_bridgeObjectRetain();
  v19 = (_QWORD *)sub_23E249F8C(v18);
  swift_bridgeObjectRelease();
  v46 = v19;
  sub_23E45B100(&v46);
  swift_bridgeObjectRelease();
  v20 = v46[2];
  if (!v20)
  {
    v30 = 1;
    goto LABEL_13;
  }
  v34 = v16;
  v35 = v8;
  v21 = (char *)v46 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v36 = v1 + 8;
  v37 = v1;
  v45 = *(_QWORD *)(v8 + 72);
  v33[1] = v46;
  swift_retain();
  while (1)
  {
    sub_23E1E2F50((uint64_t)v21, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v22 = v13[v7[8]];
    sub_23E1E2F50((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v22 == 1)
      break;
    LOBYTE(v46) = v11[v7[21]];
    swift_bridgeObjectRetain();
    v23 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    v24 = swift_bridgeObjectRetain();
    v25 = sub_23E2B91CC(v24, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v25 & 1) != 0)
      goto LABEL_8;
LABEL_4:
    sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v21 += v45;
    if (!--v20)
    {
      swift_release();
      v30 = 1;
      v16 = v34;
      v8 = v35;
      goto LABEL_13;
    }
  }
  sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_8:
  v26 = v44;
  sub_23E1E7C20((uint64_t)&v13[v7[28]], v44, &qword_2543332B8);
  v27 = v43;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v26, 1, v43) != 1)
  {
    v28 = v39;
    sub_23E1E2FDC(v26, v39, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E2F50(v28 + *(int *)(v27 + 20), v40, type metadata accessor for StaticSoftwareUpdate.Kind);
    v29 = (char *)&loc_23E458D68 + 4 * byte_23E552216[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  sub_23E1E7C64(v26, &qword_2543332B8);
  if ((v13[v7[9]] & 1) == 0)
    goto LABEL_4;
  swift_release();
  v16 = v34;
  sub_23E1E2FDC((uint64_t)v13, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v30 = 0;
  v8 = v35;
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v8 + 56))(v16, v30, 1, v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(v16, 1, v7) == 1)
  {
    sub_23E1E7C64((uint64_t)v16, &qword_254332DE8);
    return 0;
  }
  else
  {
    v31 = StaticService.tileStatusStringIconSymbolSuffix.getter();
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  return v31;
}

uint64_t StaticServiceGroup.roomId.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  _QWORD v21[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v21 - v12;
  if (qword_254334098 != -1)
    swift_once();
  v14 = qword_254333F18;
  swift_getKeyPath();
  v21[1] = v14;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v15 = v14 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v16 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v17 = type metadata accessor for StaticHome();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v15 + v16 + *(int *)(v17 + 24), v7);
  v18 = type metadata accessor for StaticServiceGroup();
  sub_23E267924(*(_QWORD *)(v2 + *(int *)(v18 + 32)), (uint64_t)v6);
  v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v11, v13, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v19(a1, v11, v7);
    return sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return ((uint64_t (*)(char *, char *, uint64_t))v19)(a1, v6, v7);
  }
}

uint64_t sub_23E45915C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  return swift_task_switch();
}

uint64_t sub_23E459178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16);
  type metadata accessor for StaticServiceGroup();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_23E4FB788(v3);
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v1;
  sub_23E453628((void (*)(char *))sub_23E45D694, v5, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E459210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v18[0] = a3;
  v18[1] = a2;
  v4 = type metadata accessor for StaticRoom(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_23E1E2F50(a1, (uint64_t)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2F50(v18[0], (uint64_t)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StaticRoom);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = (v9 + *(unsigned __int8 *)(v5 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_23E1E2FDC((uint64_t)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2FDC((uint64_t)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for StaticRoom);
  sub_23E459434((uint64_t)v12, (uint64_t)&unk_256D47348, v16);
  return sub_23E1E7C64((uint64_t)v12, &qword_254334B40);
}

uint64_t sub_23E4593DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_23E23C694;
  return StaticService.set(staticRoom:)(a5);
}

uint64_t sub_23E459434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v9, &qword_254334B40);
  v10 = sub_23E537934();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23E1E7C64((uint64_t)v9, &qword_254334B40);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_23E5378B0();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

int *sub_23E4595C4@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, int64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(uint64_t, int64_t);
  char *v44;
  id v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  unint64_t v74;
  id v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  int64_t v91;
  unint64_t v92;
  int64_t v93;
  char v94;
  uint64_t v95;
  void (*v96)(unint64_t, uint64_t, int64_t);
  int64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  int *result;
  _QWORD *v107;
  char **v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  int64_t v113;
  int v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  char *v121;
  id v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  id v133[2];

  v112 = a1;
  v115 = a5;
  v127 = type metadata accessor for StaticService();
  v130 = *(_QWORD *)(v127 - 8);
  v8 = MEMORY[0x24BDAC7A8](v127);
  v126 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v125 = (uint64_t)&v110 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  v128 = *(_QWORD *)(v11 - 8);
  v129 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F80();
  v131 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v116 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v121 = (char *)&v110 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v123 = (uint64_t)&v110 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v120 = (char *)&v110 - v24;
  v114 = *a2;
  v122 = a3;
  v25 = objc_msgSend(a3, sel_services);
  v117 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v26 = sub_23E5377F0();

  v133[0] = (id)MEMORY[0x24BEE4B08];
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_23E53803C();
    if (v27)
      goto LABEL_3;
  }
  else
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27)
    {
LABEL_3:
      if (v27 >= 1)
      {
        v111 = a4;
        v28 = 0;
        v124 = v26 & 0xC000000000000001;
        v118 = v27;
        v119 = v26;
        while (1)
        {
          if (v124)
            v29 = (id)MEMORY[0x24264F148](v28, v26);
          else
            v29 = *(id *)(v26 + 8 * v28 + 32);
          v30 = v29;
          v31 = objc_msgSend(v29, sel_accessory);
          if (v31
            && (v32 = v31, v33 = objc_msgSend(v31, sel_room), v32, v33))
          {
            v34 = objc_msgSend(v33, sel_uniqueIdentifier);

            v35 = v123;
            sub_23E536F68();

            v36 = v131;
            v37 = *(void (**)(char *, uint64_t, int64_t))(v131 + 32);
            v37(v16, v35, v17);
            (*(void (**)(char *, _QWORD, uint64_t, int64_t))(v36 + 56))(v16, 0, 1, v17);
            if ((*(unsigned int (**)(char *, uint64_t, int64_t))(v36 + 48))(v16, 1, v17) != 1)
            {
              v38 = v120;
              v37(v120, (uint64_t)v16, v17);
              v39 = v131;
              v40 = v121;
              (*(void (**)(char *, char *, int64_t))(v131 + 16))(v121, v38, v17);
              v41 = v123;
              v42 = v40;
              v26 = v119;
              sub_23E1FFF40(v123, v42);
              v43 = *(void (**)(uint64_t, int64_t))(v39 + 8);
              v43(v41, v17);
              v44 = v38;
              v27 = v118;
              v43((uint64_t)v44, v17);
              goto LABEL_7;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, int64_t))(v131 + 56))(v16, 1, 1, v17);
          }
          sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
LABEL_7:

          if (v27 == ++v28)
          {
            swift_bridgeObjectRelease_n();
            v124 = (unint64_t)v133[0];
            a4 = v111;
            goto LABEL_18;
          }
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
  }
  swift_bridgeObjectRelease_n();
  v124 = MEMORY[0x24BEE4B08];
LABEL_18:
  v45 = objc_msgSend(v122, sel_services);
  v46 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v47 = 0;
  v48 = sub_23E45C3B0(v46, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *((_QWORD *)v48 + 2);
  if (v49)
  {
    v121 = 0;
    v50 = v17;
    v133[0] = (id)MEMORY[0x24BEE4AF8];
    sub_23E1E3020(0, v49, 0);
    v51 = (uint64_t)v133[0];
    v52 = *(unsigned __int8 *)(v130 + 80);
    v120 = v48;
    v53 = (uint64_t)&v48[(v52 + 32) & ~v52];
    v54 = *(_QWORD *)(v130 + 72);
    do
    {
      v55 = (uint64_t)&v13[*(int *)(v129 + 48)];
      sub_23E1E2F50(v53, v55, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, uint64_t, int64_t))(v131 + 16))(v13, v55, v50);
      v133[0] = (id)v51;
      v57 = *(_QWORD *)(v51 + 16);
      v56 = *(_QWORD *)(v51 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_23E1E3020(v56 > 1, v57 + 1, 1);
        v51 = (uint64_t)v133[0];
      }
      *(_QWORD *)(v51 + 16) = v57 + 1;
      sub_23E1E4E3C((uint64_t)v13, v51+ ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80))+ *(_QWORD *)(v128 + 72) * v57, &qword_254333F70);
      v53 += v54;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
    v17 = v50;
    v47 = (unint64_t)v121;
    if (*(_QWORD *)(v51 + 16))
      goto LABEL_24;
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543333B8);
      v58 = sub_23E53806C();
      goto LABEL_27;
    }
  }
  v58 = MEMORY[0x24BEE4B00];
LABEL_27:
  v133[0] = (id)v58;
  sub_23E45C714(v51, 1, (uint64_t *)v133, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, &qword_254333F70, (void (*)(void))sub_23E1FDD24, (void (*)(void))sub_23E1E70F0);
  if (v47)
    goto LABEL_87;
  swift_bridgeObjectRelease();
  v129 = (uint64_t)v133[0];
  v59 = objc_msgSend(v122, sel_services);
  v60 = sub_23E5377F0();

  if (v60 >> 62)
  {
LABEL_83:
    swift_bridgeObjectRetain();
    v61 = sub_23E53803C();
  }
  else
  {
    v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v113 = v17;
  v128 = v47;
  if (v61)
  {
    if (v61 < 1)
      goto LABEL_85;
    v62 = 0;
    v63 = 0;
    while (1)
    {
      if ((v60 & 0xC000000000000001) != 0)
      {
        v64 = (id)MEMORY[0x24264F148](v62, v60);
        if ((v63 & 1) != 0)
          goto LABEL_33;
      }
      else
      {
        v64 = *(id *)(v60 + 8 * v62 + 32);
        if ((v63 & 1) != 0)
          goto LABEL_33;
      }
      v65 = objc_msgSend(v64, sel_applicationData);
      v66 = (void *)sub_23E537538();
      v67 = objc_msgSend(v65, sel_objectForKeyedSubscript_, v66);

      if (v67)
      {
        v133[0] = v67;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v63 = v132;

          goto LABEL_34;
        }
      }
LABEL_33:

      v63 = 1;
LABEL_34:
      if (v61 == ++v62)
        goto LABEL_43;
    }
  }
  v63 = 0;
LABEL_43:
  swift_bridgeObjectRelease_n();
  v68 = objc_msgSend(v122, sel_services);
  v69 = sub_23E5377F0();

  v47 = sub_23E453864(v69);
  swift_bridgeObjectRelease();
  v70 = sub_23E4FD810(v47);
  swift_bridgeObjectRelease();
  v71 = sub_23E267AAC(v70);
  if (!v71)
  {
    swift_bridgeObjectRelease();
LABEL_51:
    v121 = 0;
    v128 = 0;
    goto LABEL_52;
  }
  v72 = (void *)v71;
  if ((v70 & 0xC000000000000001) != 0)
    v47 = sub_23E537DB4();
  else
    v47 = *(_QWORD *)(v70 + 16);
  swift_bridgeObjectRelease();
  if (v47 != 1)
  {

    goto LABEL_51;
  }
  v73 = objc_msgSend(v72, sel_name);
  v121 = (char *)sub_23E53755C();
  v128 = v74;

LABEL_52:
  v75 = v122;
  v76 = objc_msgSend(v122, sel_uniqueIdentifier);
  sub_23E536F68();

  v77 = objc_msgSend(v75, sel_name);
  v122 = (id)sub_23E53755C();
  v79 = v78;

  v80 = swift_retain();
  v81 = sub_23E4FB788(v80);
  v82 = v81;
  v83 = v81 + 56;
  v84 = 1 << *(_BYTE *)(v81 + 32);
  v85 = -1;
  if (v84 < 64)
    v85 = ~(-1 << v84);
  v60 = v85 & *(_QWORD *)(v81 + 56);
  v17 = (unint64_t)(v84 + 63) >> 6;
  swift_bridgeObjectRetain();
  v86 = 0;
  v87 = (uint64_t)v126;
  while (v60)
  {
    v88 = __clz(__rbit64(v60));
    v60 &= v60 - 1;
    v89 = v88 | (v86 << 6);
LABEL_56:
    v90 = v125;
    sub_23E1E2F50(*(_QWORD *)(v82 + 48) + *(_QWORD *)(v130 + 72) * v89, v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC(v90, v87, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v47 = *(unsigned __int8 *)(v87 + *(int *)(v127 + 32));
    sub_23E1E2FA0(v87, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v47 & 1) == 0)
    {
      v94 = 0;
LABEL_78:
      swift_release();
      swift_bridgeObjectRelease();
      v95 = v124;
      if (*(_QWORD *)(v124 + 16))
      {
        v96 = *(void (**)(unint64_t, uint64_t, int64_t))(v131 + 32);
        v97 = v113;
      }
      else
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
        v98 = v131;
        v99 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        v100 = swift_allocObject();
        *(_OWORD *)(v100 + 16) = xmmword_23E539650;
        v101 = v100 + v99;
        v102 = objc_msgSend(v112, sel_roomForEntireHome);
        v103 = objc_msgSend(v102, sel_uniqueIdentifier);

        v104 = v123;
        sub_23E536F68();

        v96 = *(void (**)(unint64_t, uint64_t, int64_t))(v98 + 32);
        v97 = v113;
        v96(v101, v104, v113);
        v95 = sub_23E2CD9CC(v100);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
      }
      v105 = v115;
      v96(v115, (uint64_t)v116, v97);
      result = (int *)type metadata accessor for StaticServiceGroup();
      v107 = (_QWORD *)(v105 + result[5]);
      *v107 = v122;
      v107[1] = v79;
      *(_BYTE *)(v105 + result[6]) = v94;
      *(_BYTE *)(v105 + result[7]) = v114;
      *(_QWORD *)(v105 + result[8]) = v95;
      v108 = (char **)(v105 + result[9]);
      v109 = v128;
      *v108 = v121;
      v108[1] = (char *)v109;
      *(_BYTE *)(v105 + result[10]) = v63;
      *(_QWORD *)(v105 + result[11]) = v129;
      return result;
    }
  }
  v91 = v86 + 1;
  if (__OFADD__(v86, 1))
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v91 >= v17)
  {
LABEL_77:
    v94 = 1;
    goto LABEL_78;
  }
  v92 = *(_QWORD *)(v83 + 8 * v91);
  ++v86;
  if (v92)
    goto LABEL_75;
  v86 = v91 + 1;
  if (v91 + 1 >= v17)
    goto LABEL_77;
  v92 = *(_QWORD *)(v83 + 8 * v86);
  if (v92)
    goto LABEL_75;
  v86 = v91 + 2;
  if (v91 + 2 >= v17)
    goto LABEL_77;
  v92 = *(_QWORD *)(v83 + 8 * v86);
  if (v92)
    goto LABEL_75;
  v86 = v91 + 3;
  if (v91 + 3 >= v17)
    goto LABEL_77;
  v92 = *(_QWORD *)(v83 + 8 * v86);
  if (v92)
    goto LABEL_75;
  v86 = v91 + 4;
  if (v91 + 4 >= v17)
    goto LABEL_77;
  v92 = *(_QWORD *)(v83 + 8 * v86);
  if (v92)
  {
LABEL_75:
    v60 = (v92 - 1) & v92;
    v89 = __clz(__rbit64(v92)) + (v86 << 6);
    goto LABEL_56;
  }
  v93 = v91 + 5;
  if (v93 >= v17)
    goto LABEL_77;
  v92 = *(_QWORD *)(v83 + 8 * v93);
  if (v92)
  {
    v86 = v93;
    goto LABEL_75;
  }
  while (1)
  {
    v86 = v93 + 1;
    if (__OFADD__(v93, 1))
      break;
    if (v86 >= v17)
      goto LABEL_77;
    v92 = *(_QWORD *)(v83 + 8 * v86);
    ++v93;
    if (v92)
      goto LABEL_75;
  }
LABEL_86:
  __break(1u);
LABEL_87:
  swift_bridgeObjectRelease();
  result = (int *)swift_release();
  __break(1u);
  return result;
}

Swift::Bool_optional __swiftcall StaticServiceGroup.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  unsigned __int8 v17[9];
  _QWORD *v18;

  v1 = (unsigned __int8 *)a1;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = *v1;
  type metadata accessor for StaticServiceGroup();
  v7 = swift_bridgeObjectRetain();
  sub_23E4FB788(v7);
  v8 = swift_bridgeObjectRetain();
  v9 = (_QWORD *)sub_23E249F8C(v8);
  swift_bridgeObjectRelease();
  v18 = v9;
  sub_23E45B100(&v18);
  swift_bridgeObjectRelease();
  v10 = v18[2];
  if (v10)
  {
    v11 = (char *)v18 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    swift_retain();
    v13 = 0;
    do
    {
      sub_23E1E2F50((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v18 = *(_QWORD **)&v5[*(int *)(v2 + 104)];
      v17[0] = v6;
      v14 = sub_23E2B4680(v17);
      if (v14 != 2)
        v13 |= v14;
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_release_n();
  }
  else
  {
    swift_release();
    v13 = 0;
  }
  return (Swift::Bool_optional)(v13 & 1);
}

Swift::Int_optional __swiftcall StaticServiceGroup.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int value;
  Swift::Bool v19;
  Swift::Int v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  Swift::Int_optional v24;
  Swift::Int_optional result;

  v1 = (char *)a1;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  type metadata accessor for StaticServiceGroup();
  v7 = swift_bridgeObjectRetain();
  sub_23E4FB788(v7);
  v8 = swift_bridgeObjectRetain();
  v9 = (_QWORD *)sub_23E249F8C(v8);
  swift_bridgeObjectRelease();
  v23 = v9;
  sub_23E45B100(&v23);
  swift_bridgeObjectRelease();
  v10 = v23[2];
  swift_release();
  if (!v10)
    goto LABEL_12;
  v11 = swift_bridgeObjectRetain();
  sub_23E4FB788(v11);
  v12 = swift_bridgeObjectRetain();
  v13 = (_QWORD *)sub_23E249F8C(v12);
  swift_bridgeObjectRelease();
  v23 = v13;
  sub_23E45B100(&v23);
  swift_bridgeObjectRelease();
  v14 = v23[2];
  if (!v14)
  {
    swift_release();
LABEL_12:
    v17 = 0;
    goto LABEL_13;
  }
  v21 = v10;
  v15 = (char *)v23 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v16 = *(_QWORD *)(v3 + 72);
  swift_retain();
  v17 = 0;
  do
  {
    sub_23E1E2F50((uint64_t)v15, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v23 = *(_QWORD **)&v5[*(int *)(v2 + 104)];
    v22 = v6;
    v24 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v22);
    if (v24.is_nil)
      value = 0;
    else
      value = v24.value;
    if (value > v17)
      v17 = value;
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v15 += v16;
    --v14;
  }
  while (v14);
  swift_release_n();
  v10 = v21;
LABEL_13:
  v19 = v10 == 0;
  v20 = v17;
  result.value = v20;
  result.is_nil = v19;
  return result;
}

Swift::Double_optional __swiftcall StaticServiceGroup.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  Swift::Bool v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  double value;
  _QWORD *v40;
  unint64_t v41;
  char v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unsigned __int8 v48[9];
  _QWORD *v49;
  Swift::Int_optional v50;
  Swift::Double_optional result;

  v1 = (unsigned __int8 *)a1;
  v2 = type metadata accessor for StaticCharacteristic();
  v46 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticService();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  type metadata accessor for StaticServiceGroup();
  v13 = swift_bridgeObjectRetain();
  sub_23E4FB788(v13);
  v14 = swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_23E249F8C(v14);
  swift_bridgeObjectRelease();
  v49 = v15;
  sub_23E45B100(&v49);
  swift_bridgeObjectRelease();
  v16 = v49[2];
  v17 = swift_release();
  if (!v16)
    goto LABEL_14;
  v47 = v12;
  LOBYTE(v49) = v12;
  if (CharacteristicKind.rawValue.getter(v17) != 0xD000000000000024 || v19 != 0x800000023E55E160)
  {
    v45 = v2;
    v20 = sub_23E538354();
    v21 = swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
      goto LABEL_9;
    LOBYTE(v49) = v47;
    if (CharacteristicKind.rawValue.getter(v21) != 0xD000000000000024 || v22 != 0x800000023E55EC70)
    {
      v23 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_9;
      v31 = swift_bridgeObjectRetain();
      sub_23E4FB788(v31);
      v32 = swift_bridgeObjectRetain();
      v33 = (_QWORD *)sub_23E249F8C(v32);
      swift_bridgeObjectRelease();
      v49 = v33;
      sub_23E45B100(&v49);
      swift_bridgeObjectRelease();
      v34 = v49[2];
      v35 = v47;
      if (!v34)
      {
        swift_release();
        v29 = 0;
        goto LABEL_16;
      }
      v36 = (char *)v49 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v37 = *(_QWORD *)(v6 + 72);
      v44 = v49;
      swift_retain();
      v38 = 0.0;
      while (1)
      {
        sub_23E1E2F50((uint64_t)v36, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v40 = *(_QWORD **)&v8[*(int *)(v5 + 104)];
        if (!v40[2])
          goto LABEL_27;
        v41 = sub_23E1EAF70(v35);
        if ((v42 & 1) == 0)
          goto LABEL_27;
        sub_23E1E2F50(v40[7] + *(_QWORD *)(v46 + 72) * v41, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        v43 = &v4[*(int *)(v45 + 24)];
        if (v43[16] != 7)
          break;
        value = *(double *)v43;
        sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
LABEL_20:
        if (v38 < value)
          v38 = value;
        sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v36 += v37;
        if (!--v34)
        {
          swift_release_n();
          v29 = LOBYTE(v38);
          goto LABEL_16;
        }
      }
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
LABEL_27:
      v49 = v40;
      v48[0] = v35;
      v50 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v48);
      value = 0.0;
      if (!v50.is_nil)
        value = (double)v50.value;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
LABEL_9:
  v24 = swift_bridgeObjectRetain();
  sub_23E4FB788(v24);
  v25 = swift_bridgeObjectRetain();
  v26 = (_QWORD *)sub_23E249F8C(v25);
  swift_bridgeObjectRelease();
  v49 = v26;
  sub_23E45B100(&v49);
  swift_bridgeObjectRelease();
  v27 = v47;
  if (v49[2])
  {
    sub_23E1E2F50((uint64_t)v49 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, v28, 1, v5);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    v49 = *(_QWORD **)&v11[*(int *)(v5 + 104)];
    v48[0] = v27;
    v29 = sub_23E2B51E4(v48);
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_16;
  }
  sub_23E1E7C64((uint64_t)v11, &qword_254332DE8);
LABEL_14:
  v29 = 0;
LABEL_16:
  v30 = v29;
  result.value = v18;
  result.is_nil = v30;
  return result;
}

uint64_t StaticServiceGroup.copyReplacing(id:name:isReachable:homeNonResponsiveType:roomIds:roomName:shouldShowInDashboard:staticServicesDictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _BYTE *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  _QWORD *v66;
  _QWORD *v67;
  _BYTE v68[4];
  int v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;

  v12 = v11;
  v75 = a8;
  v76 = a1;
  v83 = a2;
  v84 = a7;
  v72 = a6;
  v77 = a5;
  v69 = a4;
  v70 = a3;
  v14 = (int *)type metadata accessor for StaticServiceGroup();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v82 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v81 = &v68[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v74 = &v68[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v71 = &v68[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v78 = &v68[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = &v68[-v26];
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = &v68[-v29];
  MEMORY[0x24BDAC7A8](v28);
  v32 = &v68[-v31];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v33);
  v35 = &v68[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = sub_23E536F80();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = &v68[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LODWORD(v77) = *v77;
  v41 = v40;
  sub_23E1E7C20(v76, (uint64_t)v35, &qword_254333F50);
  sub_23E1E2F50(v12, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v42 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v41);
  v80 = v41;
  v73 = v37;
  if (v42 == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(v39, v32, v41);
    sub_23E1E2FA0((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E7C64((uint64_t)v35, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32))(v39, v35, v41);
  }
  v43 = (uint64_t)v74;
  v44 = v70;
  v45 = v69;
  sub_23E1E2F50(v12, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v79 = v39;
  if (v44)
  {
    v46 = v44;
  }
  else
  {
    v47 = (uint64_t *)&v30[v14[5]];
    v46 = v47[1];
    v83 = *v47;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  sub_23E1E2F50(v12, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  if (v45 == 2)
    v48 = v27[v14[6]];
  else
    v48 = v45 & 1;
  LODWORD(v76) = v48;
  v49 = v75;
  v50 = (uint64_t)v71;
  sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v51 = v78;
  sub_23E1E2F50(v12, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  if ((_DWORD)v77 == 2)
    v52 = v51[v14[7]];
  else
    v52 = v77 & 1;
  LODWORD(v77) = v52;
  v53 = v72;
  sub_23E1E2FA0((uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  sub_23E1E2F50(v12, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  if (v53)
  {
    v54 = v53;
  }
  else
  {
    v54 = *(_QWORD *)(v50 + v14[8]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  sub_23E1E2F50(v12, v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v55 = v49;
  if (!v49)
  {
    v56 = (uint64_t *)(v43 + v14[9]);
    v55 = v56[1];
    v84 = *v56;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v57 = v81;
  sub_23E1E2F50(v12, (uint64_t)v81, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  if (a10 == 2)
    v58 = v57[v14[10]];
  else
    v58 = a10 & 1;
  v59 = (uint64_t)v57;
  v60 = v73;
  sub_23E1E2FA0(v59, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v61 = v12;
  v62 = v82;
  sub_23E1E2F50(v61, (uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  v63 = (uint64_t)v62;
  if (a11)
  {
    v64 = a11;
  }
  else
  {
    v64 = *(_QWORD *)&v62[v14[11]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  result = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v60 + 32))(a9, v79, v80);
  v66 = (_QWORD *)(a9 + v14[5]);
  *v66 = v83;
  v66[1] = v46;
  *(_BYTE *)(a9 + v14[6]) = v76;
  *(_BYTE *)(a9 + v14[7]) = (_BYTE)v77;
  *(_QWORD *)(a9 + v14[8]) = v54;
  v67 = (_QWORD *)(a9 + v14[9]);
  *v67 = v84;
  v67[1] = v55;
  *(_BYTE *)(a9 + v14[10]) = v58;
  *(_QWORD *)(a9 + v14[11]) = v64;
  return result;
}

uint64_t StaticServiceGroup.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;

  sub_23E537E68();
  swift_bridgeObjectRelease();
  v7 = 0x2065636976726553;
  v8 = 0xEF272070756F7267;
  type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E536F80();
  sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23E538318();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v0 = swift_bridgeObjectRetain();
  sub_23E4FB788(v0);
  v1 = swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_23E249F8C(v1);
  swift_bridgeObjectRelease();
  v6 = v2;
  sub_23E45B100(&v6);
  swift_bridgeObjectRelease();
  v3 = v6;
  v4 = type metadata accessor for StaticService();
  MEMORY[0x24264EA94](v3, v4);
  sub_23E537628();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return v7;
}

uint64_t sub_23E45B100(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for StaticService() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E530CDC(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E45B1AC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E45B180()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E45B1A4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E45E5EC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E45B1AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;

  v2 = v1;
  v4 = type metadata accessor for StaticService();
  v125 = *(_QWORD *)(v4 - 8);
  v126 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v122 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v132 = (uint64_t)&v117 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v129 = (uint64_t)&v117 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v128 = (uint64_t)&v117 - v11;
  v12 = a1[1];
  result = sub_23E53830C();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_140;
    if (v12)
      return sub_23E45BB7C(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_148;
  v119 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v124 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v118 = MEMORY[0x24BEE4AF8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
      if (v20 >= 2)
      {
        v110 = *a1;
        do
        {
          v111 = v20 - 2;
          if (v20 < 2)
            goto LABEL_135;
          if (!v110)
            goto LABEL_147;
          v112 = v18;
          v113 = *(_QWORD *)&v18[16 * v111 + 32];
          v114 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_23E45BDB0(v110 + *(_QWORD *)(v125 + 72) * v113, v110 + *(_QWORD *)(v125 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v110 + *(_QWORD *)(v125 + 72) * v114, v124);
          if (v2)
            break;
          if (v114 < v113)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_23E530CC8((uint64_t)v18);
          if (v111 >= *((_QWORD *)v112 + 2))
            goto LABEL_137;
          v115 = &v112[16 * v111 + 32];
          *(_QWORD *)v115 = v113;
          *((_QWORD *)v115 + 1) = v114;
          v116 = *((_QWORD *)v112 + 2);
          if (v20 > v116)
            goto LABEL_138;
          memmove(&v112[16 * v20 + 16], &v112[16 * v20 + 32], 16 * (v116 - v20));
          *((_QWORD *)v112 + 2) = v116 - 1;
          v20 = v116 - 1;
          v18 = v112;
        }
        while (v116 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v118 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_23E537844();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v125 + 80);
    v118 = v16;
    v124 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v131 = a1;
  while (1)
  {
    v21 = v19 + 1;
    v123 = v19;
    if (v19 + 1 >= v12)
    {
      v37 = v19 + 1;
      goto LABEL_58;
    }
    v120 = v2;
    v22 = *a1;
    v23 = *(_QWORD *)(v125 + 72);
    v24 = v128;
    sub_23E1E2F50(*a1 + v23 * v21, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v127 = v22;
    v130 = v12;
    v25 = v129;
    sub_23E1E2F50(v22 + v23 * v19, v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v26 = MEMORY[0x24264E1E8](v24, v25);
    v27 = v25;
    v28 = v130;
    sub_23E1E2FA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0(v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v133 = v23;
    if (v19 + 2 >= v28)
    {
      v32 = v19 + 2;
      if ((v26 & 1) == 0)
        goto LABEL_37;
    }
    else
    {
      v29 = v23;
      v30 = v23 * v21;
      v31 = v127;
      v32 = v19 + 2;
      v33 = v29 * (v19 + 2);
      do
      {
        v34 = v128;
        sub_23E1E2F50(v31 + v33, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v35 = v129;
        sub_23E1E2F50(v31 + v30, v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v36 = MEMORY[0x24264E1E8](v34, v35);
        sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (((v26 ^ v36) & 1) != 0)
        {
          v28 = v130;
          a1 = v131;
          v19 = v123;
          if ((v26 & 1) == 0)
            goto LABEL_37;
          goto LABEL_24;
        }
        v31 += v133;
        ++v32;
      }
      while (v130 != v32);
      v28 = v130;
      a1 = v131;
      v32 = v130;
      v19 = v123;
      if ((v26 & 1) == 0)
      {
LABEL_37:
        v37 = v32;
        break;
      }
    }
LABEL_24:
    v38 = v133;
    if (v32 < v19)
      goto LABEL_141;
    v37 = v32;
    if (v19 >= v32)
      break;
    v117 = v18;
    v39 = 0;
    v40 = v133 * (v32 - 1);
    v41 = v32 * v133;
    v42 = v19 * v133;
    v43 = v127;
    do
    {
      if (v19 != v37 + v39 - 1)
      {
        if (!v43)
          goto LABEL_146;
        sub_23E1E2FDC(v43 + v42, v122, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v42 < v40 || v43 + v42 >= (unint64_t)(v43 + v41))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v42 != v40)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_23E1E2FDC(v122, v43 + v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        a1 = v131;
        v37 = v32;
        v38 = v133;
      }
      ++v19;
      --v39;
      v40 -= v38;
      v41 -= v38;
      v42 += v38;
    }
    while (v19 < v37 + v39);
    v18 = v117;
    v2 = v120;
    v19 = v123;
    v28 = v130;
    if (v37 < v130)
      goto LABEL_41;
LABEL_58:
    if (v37 < v19)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v130 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23E530794(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v59 = *((_QWORD *)v18 + 2);
    v58 = *((_QWORD *)v18 + 3);
    v20 = v59 + 1;
    if (v59 >= v58 >> 1)
      v18 = sub_23E530794((char *)(v58 > 1), v59 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v60 = v18 + 32;
    v61 = &v18[16 * v59 + 32];
    v62 = v130;
    *(_QWORD *)v61 = v19;
    *((_QWORD *)v61 + 1) = v62;
    if (v59)
    {
      while (1)
      {
        v63 = v20 - 1;
        if (v20 >= 4)
        {
          v68 = &v60[16 * v20];
          v69 = *((_QWORD *)v68 - 8);
          v70 = *((_QWORD *)v68 - 7);
          v74 = __OFSUB__(v70, v69);
          v71 = v70 - v69;
          if (v74)
            goto LABEL_123;
          v73 = *((_QWORD *)v68 - 6);
          v72 = *((_QWORD *)v68 - 5);
          v74 = __OFSUB__(v72, v73);
          v66 = v72 - v73;
          v67 = v74;
          if (v74)
            goto LABEL_124;
          v75 = v20 - 2;
          v76 = &v60[16 * v20 - 32];
          v78 = *(_QWORD *)v76;
          v77 = *((_QWORD *)v76 + 1);
          v74 = __OFSUB__(v77, v78);
          v79 = v77 - v78;
          if (v74)
            goto LABEL_126;
          v74 = __OFADD__(v66, v79);
          v80 = v66 + v79;
          if (v74)
            goto LABEL_129;
          if (v80 >= v71)
          {
            v98 = &v60[16 * v63];
            v100 = *(_QWORD *)v98;
            v99 = *((_QWORD *)v98 + 1);
            v74 = __OFSUB__(v99, v100);
            v101 = v99 - v100;
            if (v74)
              goto LABEL_133;
            v91 = v66 < v101;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v92 = *((_QWORD *)v18 + 4);
            v93 = *((_QWORD *)v18 + 5);
            v74 = __OFSUB__(v93, v92);
            v85 = v93 - v92;
            v86 = v74;
            goto LABEL_89;
          }
          v65 = *((_QWORD *)v18 + 4);
          v64 = *((_QWORD *)v18 + 5);
          v74 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          v67 = v74;
        }
        if ((v67 & 1) != 0)
          goto LABEL_125;
        v75 = v20 - 2;
        v81 = &v60[16 * v20 - 32];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v84 = __OFSUB__(v82, v83);
        v85 = v82 - v83;
        v86 = v84;
        if (v84)
          goto LABEL_128;
        v87 = &v60[16 * v63];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v74 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v74)
          goto LABEL_131;
        if (__OFADD__(v85, v90))
          goto LABEL_132;
        if (v85 + v90 >= v66)
        {
          v91 = v66 < v90;
LABEL_95:
          if (v91)
            v63 = v75;
          goto LABEL_97;
        }
LABEL_89:
        if ((v86 & 1) != 0)
          goto LABEL_127;
        v94 = &v60[16 * v63];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v74 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v74)
          goto LABEL_130;
        if (v97 < v85)
          goto LABEL_14;
LABEL_97:
        v102 = v63 - 1;
        if (v63 - 1 >= v20)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v103 = *a1;
        if (!*a1)
          goto LABEL_145;
        v104 = v18;
        v105 = &v60[16 * v102];
        v106 = *(_QWORD *)v105;
        v107 = &v60[16 * v63];
        v108 = *((_QWORD *)v107 + 1);
        sub_23E45BDB0(v103 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v105, v103 + *(_QWORD *)(v125 + 72) * *(_QWORD *)v107, v103 + *(_QWORD *)(v125 + 72) * v108, v124);
        if (v2)
          goto LABEL_117;
        if (v108 < v106)
          goto LABEL_120;
        if (v63 > *((_QWORD *)v104 + 2))
          goto LABEL_121;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v60[16 * v102 + 8] = v108;
        v109 = *((_QWORD *)v104 + 2);
        if (v63 >= v109)
          goto LABEL_122;
        v18 = v104;
        v20 = v109 - 1;
        memmove(&v60[16 * v63], v107 + 16, 16 * (v109 - 1 - v63));
        *((_QWORD *)v104 + 2) = v109 - 1;
        a1 = v131;
        if (v109 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v130;
    if (v130 >= v12)
      goto LABEL_106;
  }
  v2 = v120;
  if (v37 >= v28)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v37, v19))
    goto LABEL_139;
  if (v37 - v19 >= v119)
    goto LABEL_58;
  if (__OFADD__(v19, v119))
    goto LABEL_142;
  if (v19 + v119 >= v28)
    v44 = v28;
  else
    v44 = v19 + v119;
  if (v44 >= v19)
  {
    if (v37 != v44)
    {
      v117 = v18;
      v120 = v2;
      v121 = v44;
      v45 = *(_QWORD *)(v125 + 72);
      v133 = v45 * (v37 - 1);
      v127 = v45;
      v46 = v37 * v45;
      do
      {
        v48 = 0;
        v130 = v37;
        while (1)
        {
          v49 = *a1;
          v50 = v46;
          v51 = v46 + v48 + *a1;
          v52 = a1;
          v53 = v128;
          sub_23E1E2F50(v51, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v54 = v129;
          sub_23E1E2F50(v133 + v48 + v49, v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          LOBYTE(v49) = MEMORY[0x24264E1E8](v53, v54);
          sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FA0(v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v49 & 1) == 0)
            break;
          v55 = *v52;
          if (!*v52)
            goto LABEL_144;
          v46 = v50;
          v56 = v55 + v133 + v48;
          sub_23E1E2FDC(v55 + v50 + v48, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v132, v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v48 -= v127;
          ++v19;
          v47 = v130;
          a1 = v131;
          if (v130 == v19)
            goto LABEL_51;
        }
        v47 = v130;
        a1 = v52;
        v46 = v50;
LABEL_51:
        v37 = v47 + 1;
        v133 += v127;
        v46 += v127;
        v19 = v123;
      }
      while (v37 != v121);
      v37 = v121;
      v2 = v120;
      v18 = v117;
    }
    goto LABEL_58;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E45BB7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v26 = type metadata accessor for StaticService();
  v7 = MEMORY[0x24BDAC7A8](v26);
  v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v27 = (uint64_t)&v23 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v29 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v32 = v15 * (v29 - 1);
    v28 = v15;
    v31 = v15 * v29;
LABEL_5:
    v16 = 0;
    v17 = v25;
    while (1)
    {
      v18 = *a4;
      sub_23E1E2F50(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v19 = v27;
      sub_23E1E2F50(v32 + v16 + v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v18) = MEMORY[0x24264E1E8](v14, v19);
      sub_23E1E2FA0(v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      result = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v32 + v16;
      sub_23E1E2FDC(v20 + v31 + v16, v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v30, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v16 -= v28;
      ++v17;
      a4 = v21;
      if (v29 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E45BDB0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v43 = type metadata accessor for StaticService();
  v8 = MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_23E1E2F50(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_23E1E2F50(a2 + v27, v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v33 = MEMORY[0x24264E1E8](v31, v32);
          v34 = v32;
          v11 = (char *)v31;
          sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_23E1E2F50(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2F50(a4, v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v21 = MEMORY[0x24264E1E8](v11, v20);
        sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_23E530898(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18StaticServiceGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for StaticServiceGroup();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_23E538354() & 1) == 0
    || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7])
    || (sub_23E1F8470(*(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a2 + v4[8])) & 1) == 0)
  {
    return 0;
  }
  v10 = v4[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = *(_QWORD *)(a1 + v10 + 8);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  if (v12)
  {
    if (!v14)
      return 0;
    v15 = *v11 == *v13 && v12 == v14;
    if (!v15 && (sub_23E538354() & 1) == 0)
      return 0;
  }
  else if (v14)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + v4[10]) != *(unsigned __int8 *)(a2 + v4[10]))
    return 0;
  return sub_23E1F8844(*(_QWORD *)(a1 + v4[11]), *(_QWORD *)(a2 + v4[11]));
}

unint64_t sub_23E45C36C()
{
  unint64_t result;

  result = qword_256D472E0;
  if (!qword_256D472E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552534, &type metadata for StaticServiceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D472E0);
  }
  return result;
}

char *sub_23E45C3B0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v3 = v2;
  v6 = sub_23E536F80();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for StaticService();
  v12 = *(_QWORD *)(v36 - 8);
  v13 = MEMORY[0x24BDAC7A8](v36);
  v35 = (uint64_t)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v31 = (uint64_t)v30 - v15;
  if (a1 >> 62)
    goto LABEL_22;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v16; v16 = sub_23E53803C())
  {
    v39 = v8;
    v30[1] = v3;
    v34 = a1 & 0xC000000000000001;
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v3 = 4;
    v32 = v16;
    v33 = a1;
    while (1)
    {
      v18 = v34 ? (id)MEMORY[0x24264F148](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v19 = v18;
      a1 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v20 = objc_msgSend(v18, sel_uniqueIdentifier);
      v21 = (uint64_t)v39;
      sub_23E536F68();

      if (*(_QWORD *)(a2 + 16) && (v22 = sub_23E1E3300(v21), (v23 & 1) != 0))
      {
        sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v12 + 72) * v22, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      v25 = v36;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, v24, 1, v36);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v25) == 1)
      {
        sub_23E1E7C64((uint64_t)v11, &qword_254332DE8);
      }
      else
      {
        v26 = v31;
        sub_23E1E2FDC((uint64_t)v11, v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FDC(v26, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = (char *)sub_23E1E3348(0, *((_QWORD *)v8 + 2) + 1, 1, (unint64_t)v8);
        v28 = *((_QWORD *)v8 + 2);
        v27 = *((_QWORD *)v8 + 3);
        if (v28 >= v27 >> 1)
          v8 = (char *)sub_23E1E3348(v27 > 1, v28 + 1, 1, (unint64_t)v8);
        *((_QWORD *)v8 + 2) = v28 + 1;
        sub_23E1E2FDC(v35, (uint64_t)&v8[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v28], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      ++v3;
      v17 = a1 == v32;
      a1 = v33;
      if (v17)
      {
        swift_bridgeObjectRelease();
        return v8;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E45C714(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5, void (*a6)(void), void (*a7)(void))
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(void);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(_QWORD);
  uint64_t *v56;

  v47 = a6;
  v56 = a3;
  v55 = a4;
  v12 = a4(0);
  v50 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v46 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v54 = (uint64_t)&v42 - v15;
  v16 = sub_23E536F80();
  v52 = *(_QWORD *)(v16 - 8);
  v53 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a5;
  v19 = __swift_instantiateConcreteTypeFromMangledName(a5);
  result = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
    return result;
  v43 = a7;
  v44 = a1;
  v45 = v7;
  v49 = &v23[*(int *)(result + 48)];
  v25 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v48 = *(_QWORD *)(v21 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23E1E7C20(v25, (uint64_t)v23, v51);
    v28 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
    v29 = v23;
    v28(v18, v23, v53);
    sub_23E1E2FDC((uint64_t)v49, v54, v55);
    v30 = *v56;
    v32 = sub_23E1E3300((uint64_t)v18);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v31 & 1) == 0;
    if (__OFADD__(v33, v34))
      break;
    v35 = v31;
    if (*(_QWORD *)(v30 + 24) >= v33 + v34)
    {
      if ((a2 & 1) != 0)
      {
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        v43();
        if ((v35 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      v47();
      v36 = sub_23E1E3300((uint64_t)v18);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_20;
      v32 = v36;
      if ((v35 & 1) != 0)
      {
LABEL_3:
        v26 = v55;
        v27 = v46;
        sub_23E1E2FDC(v54, v46, v55);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v53);
        sub_23E1EA8B4(v27, *(_QWORD *)(*v56 + 56) + *(_QWORD *)(v50 + 72) * v32, v26);
        goto LABEL_4;
      }
    }
    v38 = (_QWORD *)*v56;
    *(_QWORD *)(*v56 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    v28((char *)(v38[6] + *(_QWORD *)(v52 + 72) * v32), v18, v53);
    sub_23E1E2FDC(v54, v38[7] + *(_QWORD *)(v50 + 72) * v32, v55);
    v39 = v38[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_19;
    v38[2] = v41;
LABEL_4:
    v25 += v48;
    a2 = 1;
    --v24;
    v23 = v29;
    if (!v24)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E45CA34()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D472F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
}

uint64_t sub_23E45CA60(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D47308, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[2] = sub_23E1EE1C4(&qword_256D47310, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[3] = sub_23E1EE1C4(&qword_256D40ED0, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[4] = sub_23E1EE1C4(&qword_256D40DB8, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[5] = sub_23E1EE1C4(&qword_256D47318, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  result = sub_23E1EE1C4(&qword_256D47320, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[6] = result;
  return result;
}

uint64_t sub_23E45CB2C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D40ED0, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[2] = sub_23E1EE1C4(&qword_256D40DB8, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[3] = sub_23E1EE1C4(&qword_256D47318, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  result = sub_23E1EE1C4(&qword_256D47320, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
  a1[4] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticServiceGroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (_QWORD *)((char *)a1 + v14);
    v17 = (_QWORD *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticServiceGroup(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[9];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v13 = a3[9];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticServiceGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E45D068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticServiceGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E45D0F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticServiceGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E45D1BC + 4 * byte_23E55221F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E45D1F0 + 4 * byte_23E55221A[v4]))();
}

uint64_t sub_23E45D1F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E45D1F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E45D200);
  return result;
}

uint64_t sub_23E45D20C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E45D214);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E45D218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E45D220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticServiceGroup.CodingKeys()
{
  return &type metadata for StaticServiceGroup.CodingKeys;
}

unint64_t sub_23E45D240()
{
  unint64_t result;

  result = qword_256D47328;
  if (!qword_256D47328)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55250C, &type metadata for StaticServiceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47328);
  }
  return result;
}

unint64_t sub_23E45D288()
{
  unint64_t result;

  result = qword_256D47330;
  if (!qword_256D47330)
  {
    result = MEMORY[0x24264FDE4](&unk_23E55247C, &type metadata for StaticServiceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47330);
  }
  return result;
}

unint64_t sub_23E45D2D0()
{
  unint64_t result;

  result = qword_256D47338;
  if (!qword_256D47338)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5524A4, &type metadata for StaticServiceGroup.CodingKeys);
    atomic_store(result, &qword_256D47338);
  }
  return result;
}

uint64_t sub_23E45D314(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569D70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E564730)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_23E45D630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E45D644(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E45D694(uint64_t a1)
{
  uint64_t v1;

  return sub_23E459210(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E45D6AC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int EnumCaseMultiPayload;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unsigned int (*v31)(unint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for StaticService();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v30 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for StaticRoom(0);
  v33 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  swift_unknownObjectRelease();
  v32 = v0;
  v5 = v0 + v3;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v0 + v3, v6);
  swift_bridgeObjectRelease();
  v8(v0 + v3 + v1[10], v6);
  v9 = v0 + v3 + v1[12];
  v10 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v8(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = v5 + v1[13];
  v12 = sub_23E536F20();
  v13 = *(_QWORD *)(v12 - 8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v29(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v28 = v13;
  v14 = v30 + v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v5 + v1[24];
  v31 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v31(v15, 1, v6))
    v8(v15, v6);
  v16 = v3 + v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v5 + v1[28];
  v18 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v19 = v16;
    v8(v17, v6);
    v20 = v17 + *(int *)(v18 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v22 = v20 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v29(v22, 1, v12))
        (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v22, v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_16;
      v8(v20, v6);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
    v16 = v19;
  }
LABEL_16:
  v23 = v16 & ~v33;
  swift_bridgeObjectRelease();
  v24 = v5 + v1[31];
  if (!v31(v24, 1, v6))
    v8(v24, v6);
  v8(v32 + v23, v6);
  swift_bridgeObjectRelease();
  v25 = v32 + v23 + *(int *)(v4 + 28);
  v26 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
  {
    v8(v25, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8(v32 + v23 + *(int *)(v4 + 32), v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E45DB40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(type metadata accessor for StaticService() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticRoom(0) - 8) + 80);
  v6 = v0 + ((v3 + v4 + v5) & ~v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23E23D584;
  v8 = (_QWORD *)swift_task_alloc();
  v7[2] = v8;
  *v8 = v7;
  v8[1] = sub_23E23C694;
  return StaticService.set(staticRoom:)(v6);
}

uint64_t sub_23E45DC00()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D47350);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D47350);
  return sub_23E53719C();
}

uint64_t static Logger.cameraClipAssetCache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3EEB8 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D47350);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23E45DCF0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CameraClipAssetLibraryCache()
{
  return objc_opt_self();
}

void HMService.isFavorite.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E45F2E0;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_32;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void HMService.shouldShowInDashboard.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E45F2E0;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_6_4;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void HMService.customIconSFSymbol.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;

  if (a2)
  {
    IconSymbol.init(rawValue:)(*(Swift::String *)&a1);
    if (v6 != 88)
    {
      v4 = v6;
      static IconSymbol.convertToCAPackageIcon(iconSymbol:)(&v4, &v5);
      if (v5 == 58)
      {
        HMService.customIconSymbol.setter(0, 0);
      }
      else
      {
        v2 = HFCAPackageIconIdentifier.rawValue.getter();
        HMService.customIconSymbol.setter(v2, v3);
      }
    }
  }
}

void HMService.contributesToHomeStatus.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E45E8DC;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_12_1;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t HMService.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = (void *)sub_23E537538();
  v8 = objc_msgSend(v6, sel_objectForKeyedSubscript_, v7);

  if (!v8)
    goto LABEL_5;
  v20[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  v10 = v20[1];
  v9 = v20[2];
  sub_23E1E335C(0, &qword_256D47458);
  sub_23E1E335C(0, &qword_256D47460);
  v11 = sub_23E537B2C();
  v14 = (void *)v11;
  if (!v11)
  {
    sub_23E22C908(v10, v9);
LABEL_5:
    v12 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  v15 = sub_23E536F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v5, 1, 1, v15);
  sub_23E45E8F4();
  sub_23E53809C();
  sub_23E22C908(v10, v9);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    v18 = a1;
    v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v5, v15);
    v18 = a1;
    v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMService.isFavorite.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  unsigned __int8 v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v5;
  return result;
}

uint64_t HMService.customIconSFSymbol.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Swift::String v3;
  char v5;
  char v6;
  char v7;

  v0 = HMService.customIconSymbol.getter();
  v2 = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v0;
    v3._object = v2;
    HFCAPackageIconIdentifier.init(rawValue:)(v3);
    if (v7 != 58)
    {
      swift_bridgeObjectRelease();
      v6 = v7;
      static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)(&v6, &v5);
      return IconSymbol.rawValue.getter();
    }
  }
  return v0;
}

unint64_t static HMService.serviceContributesToHomeStatusKey.getter()
{
  return 0xD000000000000030;
}

unint64_t static HMService.serviceIconIDKey.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static HMService.serviceIsFavoriteKey.getter()
{
  return 0xD000000000000025;
}

unint64_t static HMService.serviceShouldShowInDashboardKey.getter()
{
  return 0xD00000000000002BLL;
}

void (*HMService.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMService.shouldShowInDashboard.getter() & 1;
  return sub_23E45E628;
}

void sub_23E45E628(uint64_t a1)
{
  HMService.shouldShowInDashboard.setter(*(_BYTE *)(a1 + 8));
}

uint64_t sub_23E45E64C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void (*HMService.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMService.isFavorite.getter() & 1;
  return sub_23E45E6A8;
}

void sub_23E45E6A8(uint64_t a1)
{
  HMService.isFavorite.setter(*(_BYTE *)(a1 + 8));
}

void (*HMService.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMService.contributesToHomeStatus.getter() & 1;
  return sub_23E45E704;
}

void sub_23E45E704(uint64_t a1)
{
  HMService.contributesToHomeStatus.setter(*(_BYTE *)(a1 + 8));
}

void HMService.customIconSymbol.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  if (a2)
  {
    v3 = objc_msgSend(v2, sel_applicationData);
    v4 = (id)sub_23E537538();
    v5 = (void *)sub_23E537538();
    objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);
    swift_bridgeObjectRelease();

  }
  else
  {
    v4 = objc_msgSend(v2, sel_applicationData);
    v5 = (void *)sub_23E537538();
    objc_msgSend(v4, sel_setObject_forKeyedSubscript_, 0, v5);
  }

  v6 = objc_msgSend(v2, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  v10[4] = sub_23E45F2E0;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_18;
  v8 = _Block_copy(v10);
  v9 = v2;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t sub_23E45E8DC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E45EEA0(a1, *(void **)(v1 + 16));
}

unint64_t sub_23E45E8F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D47468;
  if (!qword_256D47468)
  {
    v1 = sub_23E536F20();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCE980], v1);
    atomic_store(result, (unint64_t *)&qword_256D47468);
  }
  return result;
}

void (*HMService.customIconSFSymbol.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  void *v7;
  char v9;
  char v10;
  char v11;

  a1[2] = v1;
  v3 = HMService.customIconSymbol.getter();
  v5 = v4;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = v3;
    v6._object = v5;
    HFCAPackageIconIdentifier.init(rawValue:)(v6);
    if (v11 != 58)
    {
      swift_bridgeObjectRelease();
      v10 = v11;
      static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)(&v10, &v9);
      v3 = IconSymbol.rawValue.getter();
      v5 = v7;
    }
  }
  *a1 = v3;
  a1[1] = (uint64_t)v5;
  return sub_23E45E9D8;
}

void sub_23E45E9D8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10[2];

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    v3 = a1[1];
    swift_bridgeObjectRetain();
    HMService.customIconSFSymbol.setter(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = a1[1];
    if (v4)
    {
      v5 = *a1;
      IconSymbol.init(rawValue:)(*(Swift::String *)(&v4 - 1));
      if (v8 != 88)
      {
        v10[0] = v8;
        static IconSymbol.convertToCAPackageIcon(iconSymbol:)(v10, &v9);
        if (v9 == 58)
        {
          v6 = 0;
          v7 = 0;
        }
        else
        {
          v10[1] = v9;
          v6 = HFCAPackageIconIdentifier.rawValue.getter();
        }
        HMService.customIconSymbol.setter(v6, v7);
      }
    }
  }
}

void (*HMService.customIconSymbol.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = HMService.customIconSymbol.getter();
  a1[1] = v3;
  return sub_23E45EACC;
}

void sub_23E45EACC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    HMService.customIconSymbol.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    HMService.customIconSymbol.setter(*a1, v2);
  }
}

uint64_t sub_23E45EB2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v4);
  return HMService.dateAdded.setter((uint64_t)v4);
}

uint64_t HMService.dateAdded.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id aBlock[8];

  v2 = v1;
  aBlock[7] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23E536F14();
    sub_23E2DA2F4((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_23E536EA8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[0] = 0;
  v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 1, aBlock);

  v14 = aBlock[0];
  if (v13)
  {
    v15 = sub_23E536E6C();
    v17 = v16;

    v18 = objc_msgSend(v2, sel_applicationData);
    v19 = (void *)sub_23E536E48();
    v20 = (void *)sub_23E537538();
    objc_msgSend(v18, sel_setObject_forKeyedSubscript_, v19, v20);

    v21 = objc_msgSend(v2, sel_applicationData);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v2;
    aBlock[4] = sub_23E45F2E0;
    aBlock[5] = v22;
    aBlock[0] = (id)MEMORY[0x24BDAC760];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_23E50B358;
    aBlock[3] = &block_descriptor_24;
    v23 = _Block_copy(aBlock);
    v24 = v2;
    swift_release();
    objc_msgSend(v24, sel_updateApplicationData_completionHandler_, v21, v23);
    _Block_release(v23);

    sub_23E22C908(v15, v17);
  }
  else
  {
    v25 = v14;
    v26 = (void *)sub_23E536D10();

    swift_willThrow();
  }
  return sub_23E2DA2F4(a1);
}

uint64_t sub_23E45EEA0(uint64_t a1, void *a2)
{
  uint64_t updated;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v18;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334090 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v6, (uint64_t)qword_254333EE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  v15 = objc_msgSend(a2, sel_accessory);
  v16 = objc_msgSend(v15, sel_home);

  *v5 = v16;
  swift_storeEnumTagMultiPayload();
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void (*HMService.dateAdded.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  HMService.dateAdded.getter((uint64_t)v4);
  return sub_23E45F0C8;
}

void sub_23E45F0C8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_23E2DAD9C((uint64_t)v3, (uint64_t)v2);
    HMService.dateAdded.setter((uint64_t)v2);
    sub_23E2DA2F4((uint64_t)v3);
  }
  else
  {
    HMService.dateAdded.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t sub_23E45F124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMService.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E45F150(char *a1)
{
  HMService.shouldShowInDashboard.setter(*a1);
}

uint64_t sub_23E45F174@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMService.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E45F1A0(char *a1)
{
  HMService.isFavorite.setter(*a1);
}

uint64_t sub_23E45F1C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMService.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E45F1F0(char *a1)
{
  HMService.contributesToHomeStatus.setter(*a1);
}

uint64_t sub_23E45F214@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HMService.customIconSFSymbol.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E45F23C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))HMService.customIconSFSymbol.setter);
}

uint64_t sub_23E45F248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HMService.customIconSymbol.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E45F270(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_30Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))HMService.customIconSymbol.setter);
}

uint64_t keypath_set_30Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_23E45F2BC@<X0>(uint64_t a1@<X8>)
{
  return HMService.dateAdded.getter(a1);
}

uint64_t sub_23E45F314(uint64_t (*a1)(_OWORD *))
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v4 = sub_23E536D4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCD520];
  v14 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BEE4AF8];
  sub_23E537C10();

  sub_23E1EE1C4(&qword_256D47630, v5, MEMORY[0x24BDCD530]);
  while (1)
  {
    sub_23E537CDC();
    if (!v16)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v4);
      sub_23E1E7C64((uint64_t)&v15, &qword_254332260);
      return v18;
    }
    sub_23E1EA76C(&v15, v17);
    v8 = a1(v17);
    if (v2)
      break;
    if ((v8 & 1) != 0)
    {
      sub_23E1EA76C(v17, &v15);
      v9 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB1B0(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v18;
      }
      v11 = *(_QWORD *)(v9 + 16);
      v10 = *(_QWORD *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_23E2CB1B0(v10 > 1, v11 + 1, 1);
        v9 = v18;
      }
      *(_QWORD *)(v9 + 16) = v11 + 1;
      sub_23E1EA76C(&v15, (_OWORD *)(v9 + 32 * v11 + 32));
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_23E45F4FC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t (*v41)(char *);
  uint64_t v42;
  unint64_t v43;

  v41 = a1;
  v42 = a2;
  v5 = type metadata accessor for StaticServiceGroup();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v37 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v35 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v35 - v13;
  v15 = 0;
  v16 = a3;
  v17 = *(_QWORD *)(a3 + 64);
  v39 = a3 + 64;
  v18 = 1 << *(_BYTE *)(a3 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v38 = MEMORY[0x24BEE4AF8];
  v43 = MEMORY[0x24BEE4AF8];
  v20 = v19 & v17;
  v40 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v40)
      goto LABEL_32;
    v24 = *(_QWORD *)(v39 + 8 * v15);
    if (!v24)
      break;
LABEL_18:
    v20 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_19:
    v26 = *(_QWORD *)(v6 + 72);
    sub_23E4612E8(*(_QWORD *)(v16 + 56) + v26 * v22, (uint64_t)v11);
    sub_23E46132C((uint64_t)v11, (uint64_t)v14);
    v27 = v41(v14);
    if (v3)
    {
      sub_23E461370((uint64_t)v14);
      v34 = v38;
      swift_release();
LABEL_33:
      swift_release();
      return v34;
    }
    if ((v27 & 1) != 0)
    {
      sub_23E46132C((uint64_t)v14, v37);
      v28 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2CB494(0, *(_QWORD *)(v28 + 16) + 1, 1);
      v29 = v43;
      v31 = *(_QWORD *)(v43 + 16);
      v30 = *(_QWORD *)(v43 + 24);
      v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        v38 = v31 + 1;
        v36 = v31;
        sub_23E2CB494(v30 > 1, v31 + 1, 1);
        v32 = v38;
        v31 = v36;
        v29 = v43;
      }
      *(_QWORD *)(v29 + 16) = v32;
      v33 = *(unsigned __int8 *)(v6 + 80);
      v38 = v29;
      result = sub_23E46132C(v37, v29 + ((v33 + 32) & ~v33) + v31 * v26);
    }
    else
    {
      result = sub_23E461370((uint64_t)v14);
    }
  }
  v25 = v15 + 1;
  if (v15 + 1 >= v40)
    goto LABEL_32;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v25 = v15 + 2;
  if (v15 + 2 >= v40)
    goto LABEL_32;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v25 = v15 + 3;
  if (v15 + 3 >= v40)
    goto LABEL_32;
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v25 = v15 + 4;
  if (v15 + 4 >= v40)
  {
LABEL_32:
    v34 = v38;
    goto LABEL_33;
  }
  v24 = *(_QWORD *)(v39 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v15 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v40)
      goto LABEL_32;
    v24 = *(_QWORD *)(v39 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E45F80C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23E536A94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23E536A7C();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id COAlarmManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E45F8C8(a1, a2, a3, (SEL *)&selRef_addAlarm_);
}

id COAlarmManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E45F8C8(a1, a2, a3, (SEL *)&selRef_updateAlarm_);
}

id sub_23E45F8C8(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;
  void *v12;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E335C(0, &qword_256D46238);
  swift_dynamicCast();
  v8 = v12;
  v9 = objc_msgSend(v4, *a4, v12);

  return v9;
}

id COAlarmManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E45F8C8(a1, a2, a3, (SEL *)&selRef_removeAlarm_);
}

id sub_23E45F99C()
{
  id *v0;

  return objc_msgSend(*v0, sel_alarms);
}

id sub_23E45F9C0(char a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_alarmsIncludingSleepAlarm_, a1 & 1);
}

id sub_23E45F9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.add<A>(_:)(a1, a2, a3);
}

id sub_23E45FA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.update<A>(_:)(a1, a2, a3);
}

id sub_23E45FA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.remove<A>(_:)(a1, a2, a3);
}

id sub_23E45FA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E45FA64(a1, a2, a3, a4, (SEL *)&selRef_snoozeAlarmWithIdentifier_);
}

id sub_23E45FA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E45FA64(a1, a2, a3, a4, (SEL *)&selRef_dismissAlarmWithIdentifier_);
}

id sub_23E45FA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void **v5;
  void *v7;
  void *v8;
  id v9;

  v7 = *v5;
  v8 = (void *)sub_23E537538();
  v9 = objc_msgSend(v7, *a5, v8);

  return v9;
}

id sub_23E45FAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v7 = *v4;
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23E45F80C;
  v11[3] = &block_descriptor_33;
  v8 = _Block_copy(v11);
  swift_retain();
  v9 = objc_msgSend(v7, sel_addObserverForName_queue_usingBlock_, a1, a2, v8);
  _Block_release(v8);
  swift_release();
  return v9;
}

id sub_23E45FB7C(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

id sub_23E45FB90()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v2 = (void *)sub_23E5377E4();
  v3 = objc_msgSend(v1, sel_alarmsForAccessories_, v2);

  return v3;
}

id sub_23E45FC00(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_alarmsForAccessory_, a1);
}

uint64_t dispatch thunk of HomeAlarmManager.alarms()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(includingSleepAlarm:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeAlarmManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of HomeAlarmManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HomeAlarmManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of HomeAlarmManager.snoozeAlarm(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HomeAlarmManager.dismissAlarm(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of HomeAlarmManager.addObserver(forName:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of HomeAlarmManager.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HomeAlarmManager.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(forAccessories:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of HomeAlarmManager._canDispatchForAssociatedAccessory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HomeAlarmManager.init(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

_QWORD *sub_23E45FC98(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v2 = (_QWORD *)v1;
  *(_BYTE *)(v1 + 16) = 0;
  v4 = MEMORY[0x24BEE4AF8];
  v2[4] = MEMORY[0x24BEE4AF8];
  v2[5] = sub_23E222EF4(v4);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1650]), sel_init);
  v2[3] = v5;
  sub_23E1E335C(0, &qword_256D45630);
  v6 = v5;
  v7 = (void *)MEMORY[0x24264EE9C](v4);
  v8 = a1;
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_23E45FD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t result;
  id v20;
  id v21;
  void *v22;
  _QWORD *v23;
  __int128 v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_23E3AE994();
  if (v6)
  {
    v7 = (void *)v6;
    v8 = *(_QWORD *)(v2 + 40);
    if (*(_QWORD *)(v8 + 16) && (v9 = sub_23E211704(0), (v10 & 1) != 0))
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = v11 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_23E1FF9C8(v13, (uint64_t)v24);
          if ((sub_23E460420((uint64_t)v24, a1, a2) & 1) != 0)
            break;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
          v13 += 40;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        sub_23E1E6C84(v24, (uint64_t)&v25);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        v27 = 0;
        v25 = 0u;
        v26 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v26 + 1))
      {
        sub_23E1E7C64((uint64_t)&v25, &qword_256D40BF0);
        sub_23E3B012C();
        v22 = (void *)swift_allocError();
        *v23 = 0xD000000000000010;
        v23[1] = 0x800000023E569490;
        v17 = (id)sub_23E536D04();
        v18 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v17);

        goto LABEL_14;
      }
    }
    else
    {
      v27 = 0;
      v25 = 0u;
      v26 = 0u;
    }
    sub_23E1E7C64((uint64_t)&v25, &qword_256D40BF0);
    v14 = *(void **)(v3 + 24);
    v15 = objc_msgSend(v14, sel_objectForKey_, v7);
    if (!v15)
    {
      sub_23E1E335C(0, &qword_256D45630);
      v15 = (id)MEMORY[0x24264EE9C](MEMORY[0x24BEE4AF8]);
    }
    v16 = objc_msgSend(v15, sel_arrayByAddingObject_, sub_23E538348());
    swift_unknownObjectRelease();
    if (v16)
    {
      objc_msgSend(v14, sel_setObject_forKey_, v16, v7);

      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v18 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v17);

LABEL_14:
      return (uint64_t)v18;
    }
    __break(1u);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v21 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id sub_23E4600A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E4600E0(a1, a2, a3, 1u, 0x800000023E569470, (uint64_t (*)(_OWORD *))sub_23E4613BC);
}

id sub_23E4600C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E4600E0(a1, a2, a3, 2u, 0x800000023E569450, (uint64_t (*)(_OWORD *))sub_23E4610C8);
}

id sub_23E4600E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t (*a6)(_OWORD *))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  __int128 v36[3];
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v10 = v6;
  v13 = sub_23E3AE994();
  if (!v13)
  {
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v29 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v28);

    return v29;
  }
  v14 = (void *)v13;
  v15 = *(_QWORD *)(v6 + 40);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_23E211704(a4), (v17 & 1) != 0))
  {
    v35 = a5;
    v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = v18 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_23E1FF9C8(v20, (uint64_t)v36);
        if ((sub_23E460420((uint64_t)v36, a1, a2) & 1) != 0)
          break;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        v20 += 40;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      sub_23E1E6C84(v36, (uint64_t)&v37);
      swift_bridgeObjectRelease();
      v30 = v35;
      if (*((_QWORD *)&v38 + 1))
      {
LABEL_18:
        sub_23E1E7C64((uint64_t)&v37, &qword_256D40BF0);
        sub_23E3B012C();
        v31 = (void *)swift_allocError();
        *v32 = 0xD000000000000013;
        v32[1] = v30;
        v33 = (void *)sub_23E536D04();
        v34 = objc_msgSend((id)objc_opt_self(), sel_futureWithError_, v33);

        return v34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_15:
      v30 = v35;
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v38 + 1))
        goto LABEL_18;
    }
  }
  else
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
  }
  sub_23E1E7C64((uint64_t)&v37, &qword_256D40BF0);
  v21 = *(void **)(v10 + 24);
  v22 = objc_msgSend(v21, sel_objectForKey_, v14);
  if (v22)
  {
    v23 = (id)MEMORY[0x24BDAC7A8](v22);
    sub_23E45F314(a6);
    v24 = (void *)sub_23E5377E4();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setObject_forKey_, v24, v14);

  }
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v26 = objc_msgSend((id)objc_opt_self(), sel_futureWithResult_, v25);

  return v26;
}

uint64_t sub_23E460420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _BYTE v11[40];

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23E1FF9C8(v5, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
  swift_dynamicCast();
  v8 = sub_23E537514();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8 & 1;
}

BOOL sub_23E4604F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];

  v17 = a3;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18[-1] - v11;
  sub_23E1EA57C(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
  swift_dynamicCast();
  v14 = v19;
  v13 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(uint64_t, uint64_t))(v13 + 56))(v14, v13);
  (*(void (**)(uint64_t, uint64_t))(a4 + 56))(v17, a4);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  LOBYTE(v13) = sub_23E537514();
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  return (v13 & 1) == 0;
}

uint64_t sub_23E460678()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  type metadata accessor for MockObserver();
  result = swift_dynamicCastClass();
  if (result)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    v2 = sub_23E3AFC00((unint64_t *)(v0 + 32));
    result = swift_unknownObjectRelease();
    v3 = *(_QWORD *)(v0 + 32);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_23E53803C();
      result = swift_bridgeObjectRelease();
      if (v4 >= v2)
        goto LABEL_4;
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v4 >= v2)
      {
LABEL_4:
        sub_23E460CC4(v2, v4);
        return swift_endAccess();
      }
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_23E460764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v12;
  unint64_t v13;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23E537E68();
  swift_bridgeObjectRelease();
  v12 = 0xD00000000000001FLL;
  v13 = 0x800000023E56A890;
  v6 = (void *)sub_23E3AE994();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_uniqueIdentifier);

    sub_23E536F68();
    sub_23E536F38();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v9 = *(id *)(v1 + 24);
  v10 = objc_msgSend(v9, sel_description);
  sub_23E53755C();

  sub_23E537628();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t type metadata accessor for MockAlarmManager()
{
  return objc_opt_self();
}

uint64_t sub_23E460920(uint64_t a1, uint64_t a2)
{
  return sub_23E45FD78(a1, a2);
}

id sub_23E460940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E4600A0(a1, a2, a3);
}

id sub_23E460960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E4600C0(a1, a2, a3);
}

id sub_23E460984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E460F90(a3, a4);
}

uint64_t sub_23E4609AC()
{
  return sub_23E460678();
}

unint64_t sub_23E4609CC()
{
  return sub_23E460764();
}

_QWORD *sub_23E4609EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _QWORD *result;

  type metadata accessor for MockAlarmManager();
  v4 = swift_allocObject();
  result = sub_23E45FC98(a1);
  *a2 = v4;
  return result;
}

id sub_23E460A6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E460AF4()
{
  return type metadata accessor for MockObserver();
}

uint64_t type metadata accessor for MockObserver()
{
  uint64_t result;

  result = qword_256D47618;
  if (!qword_256D47618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E460B38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MockAlarmManager.Action(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E460BFC + 4 * byte_23E552625[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E460C30 + 4 * byte_23E552620[v4]))();
}

uint64_t sub_23E460C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E460C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E460C40);
  return result;
}

uint64_t sub_23E460C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E460C54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E460C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E460C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MockAlarmManager.Action()
{
  return &type metadata for MockAlarmManager.Action;
}

unint64_t sub_23E460C80()
{
  unint64_t result;

  result = qword_256D47628;
  if (!qword_256D47628)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552710, &type metadata for MockAlarmManager.Action);
    atomic_store(result, (unint64_t *)&qword_256D47628);
  }
  return result;
}

uint64_t sub_23E460CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_23E53803C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24264F154](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for MockObserver();
  swift_arrayDestroy();
  if (!v6)
    return sub_23E537808();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_23E53803C();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_23E537808();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_23E53803C();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

id sub_23E460F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  objc_super v14;

  v3 = v2;
  v6 = (objc_class *)type metadata accessor for MockObserver();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = (uint64_t *)&v7[OBJC_IVAR____TtC13HomeDataModel12MockObserver_block];
  *v8 = 0;
  v8[1] = 0;
  swift_retain();
  v9 = v7;
  sub_23E536F74();
  v10 = *v8;
  *v8 = a1;
  v8[1] = a2;
  swift_retain();
  sub_23E22D1F8(v10);

  v14.receiver = v9;
  v14.super_class = v6;
  v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_release();
  swift_beginAccess();
  v12 = v11;
  MEMORY[0x24264EA70]();
  if (*(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_23E537820();
  sub_23E53785C();
  sub_23E537808();
  swift_endAccess();
  return v12;
}

BOOL sub_23E4610C8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23E4604F0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_23E4610E8(uint64_t a1, uint64_t a2)
{
  return sub_23E461138(a1, a2, (uint64_t (*)(void))sub_23E20106C, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E4610FC(uint64_t a1, uint64_t a2)
{
  return sub_23E461138(a1, a2, (uint64_t (*)(void))sub_23E51F49C, type metadata accessor for StaticRoom);
}

uint64_t sub_23E461110(uint64_t a1, uint64_t a2)
{
  return sub_23E461138(a1, a2, (uint64_t (*)(void))sub_23E51E2F8, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E461124(uint64_t a1, uint64_t a2)
{
  return sub_23E461138(a1, a2, (uint64_t (*)(void))sub_23E51E5A4, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E461138(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_22;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_28;
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, v10);
    v24 = v22 - v9;
    if (!v23)
    {
      *(_QWORD *)(v6 + 16) = v24;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E4612E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticServiceGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E46132C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticServiceGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E461370(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticServiceGroup();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MockError()
{
  return &type metadata for MockError;
}

BOOL sub_23E4613BC(uint64_t a1)
{
  return sub_23E4610C8(a1);
}

uint64_t sub_23E4613D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = type metadata accessor for StaticAccessory(0);
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v40 = (uint64_t)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (uint64_t)v33 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v33[1] = v1;
  v44 = MEMORY[0x24BEE4AF8];
  sub_23E2058B0(0, v7, 0);
  result = sub_23E26B560(a1);
  v11 = result;
  v12 = 0;
  v14 = v13 & 1;
  v15 = a1 + 64;
  v35 = v7;
  v36 = v10;
  v34 = a1 + 88;
  v37 = a1 + 64;
  v38 = a1;
  while ((v14 & 1) == 0)
  {
    if (v11 < 0 || v11 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      break;
    }
    v17 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v15 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_30;
    v43 = v10;
    v18 = v39;
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v41 + 72) * v11, v39, type metadata accessor for StaticAccessory);
    v19 = v18;
    v20 = v40;
    sub_23E1E2FDC(v19, v40, type metadata accessor for StaticAccessory);
    v21 = (uint64_t *)(v20 + *(int *)(v42 + 20));
    v22 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0(v20, type metadata accessor for StaticAccessory);
    v8 = v44;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_23E2058B0(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v44;
    }
    v25 = *(_QWORD *)(v8 + 16);
    v24 = *(_QWORD *)(v8 + 24);
    v26 = v43;
    if (v25 >= v24 >> 1)
    {
      result = sub_23E2058B0(v24 > 1, v25 + 1, 1);
      v26 = v43;
      v8 = v44;
    }
    *(_QWORD *)(v8 + 16) = v25 + 1;
    v27 = v8 + 16 * v25;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v23;
    a1 = v38;
    v16 = 1 << *(_BYTE *)(v38 + 32);
    if (v11 >= v16)
      goto LABEL_31;
    v15 = v37;
    v28 = *(_QWORD *)(v37 + 8 * v17);
    if ((v28 & (1 << v11)) == 0)
      goto LABEL_32;
    if (*(_DWORD *)(v38 + 36) != (_DWORD)v26)
      goto LABEL_33;
    v29 = v28 & (-2 << (v11 & 0x3F));
    if (v29)
    {
      v16 = __clz(__rbit64(v29)) | v11 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = v17 + 1;
      v31 = (unint64_t)(v16 + 63) >> 6;
      if (v17 + 1 < v31)
      {
        v32 = *(_QWORD *)(v37 + 8 * v30);
        if (!v32)
        {
          v30 = v17 + 2;
          if (v17 + 2 >= v31)
            goto LABEL_4;
          v32 = *(_QWORD *)(v37 + 8 * v30);
          if (!v32)
          {
            while (v31 - 3 != v17)
            {
              v32 = *(_QWORD *)(v34 + 8 * v17++);
              if (v32)
              {
                result = sub_23E23D578(v11, v26, 0);
                v30 = v17 + 2;
                goto LABEL_20;
              }
            }
            result = sub_23E23D578(v11, v26, 0);
            goto LABEL_4;
          }
        }
LABEL_20:
        v16 = __clz(__rbit64(v32)) + (v30 << 6);
      }
    }
LABEL_4:
    v10 = v36;
    v14 = 0;
    ++v12;
    v11 = v16;
    if (v12 == v35)
      return v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E461708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;

  v47 = a4;
  v52 = a3;
  v6 = type metadata accessor for StaticAccessory(0);
  v49 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v48 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v55 = (uint64_t)&v46 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v46 - v20;
  sub_23E1E7C20(a1, (uint64_t)&v46 - v20, &qword_2543332B8);
  v22 = *(_QWORD *)(a2 + 56);
  v53 = a2 + 56;
  v23 = 1 << *(_BYTE *)(a2 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v54 = (unint64_t)(v23 + 63) >> 6;
  v57 = a2;
  result = swift_bridgeObjectRetain();
  v27 = 0;
  v56 = v17;
  v51 = v8;
  while (1)
  {
    if (v25)
    {
      v30 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v31 = v30 | (v27 << 6);
      goto LABEL_24;
    }
    v32 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v32 >= v54)
      goto LABEL_31;
    v33 = *(_QWORD *)(v53 + 8 * v32);
    ++v27;
    if (!v33)
    {
      v27 = v32 + 1;
      if (v32 + 1 >= v54)
        goto LABEL_31;
      v33 = *(_QWORD *)(v53 + 8 * v27);
      if (!v33)
      {
        v27 = v32 + 2;
        if (v32 + 2 >= v54)
          goto LABEL_31;
        v33 = *(_QWORD *)(v53 + 8 * v27);
        if (!v33)
        {
          v27 = v32 + 3;
          if (v32 + 3 >= v54)
            goto LABEL_31;
          v33 = *(_QWORD *)(v53 + 8 * v27);
          if (!v33)
            break;
        }
      }
    }
LABEL_23:
    v25 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v27 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v13, *(_QWORD *)(v57 + 48) + *(_QWORD *)(v9 + 72) * v31, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8) == 1)
      goto LABEL_32;
    v58 = v27;
    v35 = v9;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v59, v13, v8);
    sub_23E1E7C20((uint64_t)v21, (uint64_t)v17, &qword_2543332B8);
    v36 = type metadata accessor for StaticSoftwareUpdate(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v17, 1, v36) == 1)
    {
      v38 = v13;
      v39 = v21;
      sub_23E1E7C64((uint64_t)v17, &qword_2543332B8);
      v40 = v52;
      if (*(_QWORD *)(v52 + 16) && (v41 = sub_23E1E3300(v59), (v42 & 1) != 0))
      {
        v43 = v48;
        sub_23E1E2F50(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v49 + 72) * v41, v48, type metadata accessor for StaticAccessory);
        v29 = v55;
        sub_23E1E7C20(v43 + *(int *)(v50 + 104), v55, &qword_2543332B8);
        sub_23E1E2FA0(v43, type metadata accessor for StaticAccessory);
      }
      else
      {
        v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
        v45 = v55;
        v44(v55, 1, 1, v36);
        v29 = v45;
      }
      v21 = v39;
      v13 = v38;
      v8 = v51;
    }
    else
    {
      v28 = (uint64_t)v17;
      v29 = v55;
      sub_23E1E2FDC(v28, v55, type metadata accessor for StaticSoftwareUpdate);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v29, 0, 1, v36);
    }
    v9 = v35;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v59, v8);
    sub_23E1E7C64((uint64_t)v21, &qword_2543332B8);
    result = sub_23E1E4E3C(v29, (uint64_t)v21, &qword_2543332B8);
    v17 = v56;
    v27 = v58;
  }
  v34 = v32 + 4;
  if (v34 >= v54)
  {
LABEL_31:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v13, 1, 1, v8);
LABEL_32:
    swift_release();
    sub_23E1E4E3C((uint64_t)v21, v47, &qword_2543332B8);
    return swift_bridgeObjectRelease();
  }
  v33 = *(_QWORD *)(v53 + 8 * v34);
  if (v33)
  {
    v27 = v34;
    goto LABEL_23;
  }
  while (1)
  {
    v27 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v27 >= v54)
      goto LABEL_31;
    v33 = *(_QWORD *)(v53 + 8 * v27);
    ++v34;
    if (v33)
      goto LABEL_23;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E461BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v43 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v34 - v8;
  v9 = type metadata accessor for StaticMediaSystemComponent();
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - v13;
  v15 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v40 = (unint64_t)(v16 + 63) >> 6;
  v19 = a1;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v38 = MEMORY[0x24BEE4AF8];
  if (!v18)
    goto LABEL_7;
LABEL_4:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v41 + 72) * i, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E1E7C20((uint64_t)&v12[*(int *)(v42 + 32)], (uint64_t)v4, &qword_254333F50);
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v4, 1, v5) == 1)
    {
      result = sub_23E1E7C64((uint64_t)v4, &qword_254333F50);
      if (v18)
        goto LABEL_4;
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v27(v36, v4, v5);
      v27(v37, v36, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v38 = sub_23E51E540(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
      v29 = *(_QWORD *)(v38 + 16);
      v28 = *(_QWORD *)(v38 + 24);
      v30 = v29 + 1;
      if (v29 >= v28 >> 1)
      {
        v34 = *(_QWORD *)(v38 + 16);
        v35 = v29 + 1;
        v33 = sub_23E51E540(v28 > 1, v29 + 1, 1, v38);
        v29 = v34;
        v30 = v35;
        v38 = v33;
      }
      v31 = v37;
      v32 = v38;
      *(_QWORD *)(v38 + 16) = v30;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v32+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v29, v31, v5);
      if (v18)
        goto LABEL_4;
    }
LABEL_7:
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v40)
      goto LABEL_29;
    v25 = *(_QWORD *)(v39 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v40)
        goto LABEL_29;
      v25 = *(_QWORD *)(v39 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v40)
          goto LABEL_29;
        v25 = *(_QWORD *)(v39 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v40)
            goto LABEL_29;
          v25 = *(_QWORD *)(v39 + 8 * v21);
          if (!v25)
            break;
        }
      }
    }
LABEL_22:
    v18 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v40)
  {
LABEL_29:
    swift_release();
    return v38;
  }
  v25 = *(_QWORD *)(v39 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v40)
      goto LABEL_29;
    v25 = *(_QWORD *)(v39 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E461FC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = type metadata accessor for StaticMediaSystemComponent();
  v23 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v20 - v6;
  v24 = MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v22 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v22)
      goto LABEL_23;
    v18 = *(_QWORD *)(v21 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v22)
        goto LABEL_23;
      v18 = *(_QWORD *)(v21 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v22)
          goto LABEL_23;
        v18 = *(_QWORD *)(v21 + 8 * v13);
        if (!v18)
        {
          v13 = v17 + 3;
          if (v17 + 3 >= v22)
            goto LABEL_23;
          v18 = *(_QWORD *)(v21 + 8 * v13);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v16 = *(_QWORD *)&v5[*(int *)(v2 + 28)];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    result = sub_23E25A9FC(v16);
  }
  v19 = v17 + 4;
  if (v19 >= v22)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  v18 = *(_QWORD *)(v21 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v22)
      goto LABEL_23;
    v18 = *(_QWORD *)(v21 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E462220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, char a14, char a15, unsigned __int8 *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  unsigned __int8 *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unsigned __int8 *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  int v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, char *, uint64_t);
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  unsigned __int8 *v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t result;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  unsigned __int8 *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  int v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t (*v198)(char *, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  unsigned __int8 *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  unsigned __int8 *v217;
  uint64_t v218;

  v29 = v28;
  v185 = a8;
  v211 = a7;
  v183 = a6;
  v182 = a5;
  v210 = a4;
  v180 = a3;
  v209 = a2;
  v203 = a21;
  v204 = a1;
  v217 = a16;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v208 = (uint64_t)&v178 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v215 = (uint64_t)&v178 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v199 = (uint64_t)&v178 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v214 = (uint64_t)&v178 - v38;
  v39 = (int *)type metadata accessor for StaticMediaSystem();
  v40 = MEMORY[0x24BDAC7A8](v39);
  v207 = (uint64_t)&v178 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v206 = (uint64_t)&v178 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v193 = (char *)&v178 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v192 = (char *)&v178 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v191 = (uint64_t)&v178 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v190 = (char *)&v178 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v189 = (uint64_t)&v178 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v201 = (char *)&v178 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v200 = (uint64_t)&v178 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v197 = (uint64_t)&v178 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v187 = (char *)&v178 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v186 = (char *)&v178 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v218 = (uint64_t)&v178 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v184 = (char *)&v178 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v196 = (uint64_t)&v178 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v195 = (uint64_t)&v178 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v181 = (char *)&v178 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v179 = (uint64_t)&v178 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v194 = (uint64_t)&v178 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v80 = (char *)&v178 - v79;
  v81 = MEMORY[0x24BDAC7A8](v78);
  v83 = (char *)&v178 - v82;
  MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v178 - v84;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v87 = MEMORY[0x24BDAC7A8](v86);
  v202 = (uint64_t)&v178 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v87);
  v90 = (char *)&v178 - v89;
  v91 = sub_23E536F80();
  v92 = *(_QWORD *)(v91 - 8);
  v93 = MEMORY[0x24BDAC7A8](v91);
  v213 = (char *)&v178 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v93);
  v96 = (char *)&v178 - v95;
  LODWORD(v217) = *v217;
  v188 = *v203;
  v98 = v97;
  sub_23E1E7C20(v204, (uint64_t)v90, &qword_254333F50);
  sub_23E1E2F50(v29, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v198 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
  v99 = v198(v90, 1, v98);
  v216 = v98;
  v212 = v92;
  if (v99 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v96, v85, v98);
    sub_23E1E2FA0((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E7C64((uint64_t)v90, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v96, v90, v98);
  }
  v100 = v183;
  v101 = v182;
  v102 = v180;
  sub_23E1E2F50(v29, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (v102)
  {
    v103 = v102;
  }
  else
  {
    v104 = &v83[v39[5]];
    v103 = *((_QWORD *)v104 + 1);
    v209 = *(_QWORD *)v104;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (v101)
  {
    v105 = v101;
  }
  else
  {
    v106 = &v80[v39[6]];
    v105 = (unsigned __int8 *)*((_QWORD *)v106 + 1);
    v210 = *(_QWORD *)v106;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v107 = v199;
  sub_23E1E7C20(v100, v199, &qword_2543330E0);
  v108 = v194;
  sub_23E1E2F50(v29, v194, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v109 = sub_23E536F20();
  v110 = *(_QWORD *)(v109 - 8);
  v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v107, 1, v109);
  v203 = v105;
  if (v111 == 1)
  {
    sub_23E1E7C20(v108 + v39[7], v214, &qword_2543330E0);
    sub_23E1E2FA0(v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E7C64(v107, &qword_2543330E0);
  }
  else
  {
    sub_23E1E2FA0(v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v112 = v214;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v214, v107, v109);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v112, 0, 1, v109);
  }
  v113 = v185;
  v114 = (uint64_t)v181;
  v115 = v179;
  sub_23E1E2F50(v29, v179, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (v113)
  {
    v199 = v113;
  }
  else
  {
    v116 = (uint64_t *)(v115 + v39[8]);
    v117 = v116[1];
    v211 = *v116;
    v199 = v117;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v115, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v114, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v204 = v103;
  v205 = v96;
  if (a10 == 2)
    v118 = *(unsigned __int8 *)(v114 + v39[9]);
  else
    v118 = a10 & 1;
  LODWORD(v194) = v118;
  v119 = v190;
  v120 = (uint64_t)v184;
  sub_23E1E2FA0(v114, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v121 = v195;
  sub_23E1E2F50(v29, v195, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a11 == 2)
    v122 = *(unsigned __int8 *)(v121 + v39[10]);
  else
    v122 = a11 & 1;
  LODWORD(v190) = v122;
  sub_23E1E2FA0(v121, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v123 = v196;
  sub_23E1E2F50(v29, v196, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a12 == 2)
    v124 = *(unsigned __int8 *)(v123 + v39[11]);
  else
    v124 = a12 & 1;
  LODWORD(v195) = v124;
  v125 = (uint64_t)v119;
  v126 = (uint64_t)v186;
  sub_23E1E2FA0(v123, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v120, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a13 == 2)
    v127 = *(unsigned __int8 *)(v120 + v39[12]);
  else
    v127 = a13 & 1;
  LODWORD(v186) = v127;
  sub_23E1E2FA0(v120, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v128 = v218;
  sub_23E1E2F50(v29, v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a14 == 2)
    v129 = *(unsigned __int8 *)(v128 + v39[13]);
  else
    v129 = a14 & 1;
  LODWORD(v185) = v129;
  sub_23E1E2FA0(v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v126, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a15 == 2)
    v130 = *(unsigned __int8 *)(v126 + v39[14]);
  else
    v130 = a15 & 1;
  LODWORD(v184) = v130;
  v131 = (uint64_t)v187;
  v218 = a17;
  sub_23E1E2FA0(v126, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if ((_DWORD)v217 == 6)
    LODWORD(v217) = *(unsigned __int8 *)(v131 + v39[15]);
  sub_23E1E2FA0(v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v132 = v197;
  sub_23E1E2F50(v29, v197, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v133 = a18;
  if (!a18)
  {
    v134 = (uint64_t *)(v132 + v39[16]);
    v133 = v134[1];
    v218 = *v134;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v135 = v200;
  sub_23E1E2F50(v29, v200, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v136 = a19;
  v137 = (uint64_t)v201;
  if (!a19)
    v136 = swift_bridgeObjectRetain();
  v197 = v136;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v135, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v138 = v208;
  sub_23E1E7C20(a20, v208, &qword_2543332B8);
  sub_23E1E2F50(v29, v137, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v139 = type metadata accessor for StaticSoftwareUpdate(0);
  v140 = v137;
  v141 = *(_QWORD *)(v139 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v138, 1, v139) == 1)
  {
    sub_23E1E7C20(v140 + v39[18], v215, &qword_2543332B8);
    sub_23E1E2FA0(v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E7C64(v138, &qword_2543332B8);
  }
  else
  {
    sub_23E1E2FA0(v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v142 = v215;
    sub_23E1E2FDC(v138, v215, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v142, 0, 1, v139);
  }
  v143 = (uint64_t)v193;
  v144 = (uint64_t)v192;
  v145 = v189;
  v146 = v188;
  sub_23E1E2F50(v29, v189, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (v146 == 2)
    v147 = *(unsigned __int8 *)(v145 + v39[19]);
  else
    v147 = v146 & 1;
  LODWORD(v201) = v147;
  sub_23E1E2FA0(v145, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v148 = v202;
  sub_23E1E7C20(a22, v202, &qword_254333F50);
  v149 = v148;
  sub_23E1E2F50(v29, v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v150 = v148;
  v151 = v216;
  v152 = v198((char *)v150, 1, v216);
  v196 = v133;
  if (v152 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v212 + 16))(v213, v125 + v39[20], v151);
    sub_23E1E2FA0(v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E7C64(v149, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, uint64_t, uint64_t))(v212 + 32))(v213, v149, v151);
  }
  v153 = v191;
  v154 = v218;
  v208 = a24;
  sub_23E1E2F50(v29, v191, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a23)
  {
    v155 = a23;
  }
  else
  {
    v155 = *(_QWORD *)(v153 + v39[21]);
    swift_bridgeObjectRetain();
  }
  v218 = v154;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v153, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v144, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v156 = a25;
  if (!a25)
  {
    v157 = (uint64_t *)(v144 + v39[22]);
    v156 = v157[1];
    v208 = *v157;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v144, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  sub_23E1E2F50(v29, v143, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a26)
  {
    v158 = a26;
  }
  else
  {
    v158 = *(_QWORD *)(v143 + v39[23]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v143, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v159 = v206;
  sub_23E1E2F50(v29, v206, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (a27)
  {
    v160 = a27;
  }
  else
  {
    v160 = *(_QWORD *)(v159 + v39[24]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v161 = v29;
  v162 = v207;
  sub_23E1E2F50(v161, v207, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v163 = v162;
  if (a28)
  {
    v164 = a28;
  }
  else
  {
    v164 = *(_QWORD *)(v162 + v39[25]);
    swift_bridgeObjectRetain();
  }
  v165 = v212;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v163, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v166 = *(void (**)(uint64_t, char *, uint64_t))(v165 + 32);
  v167 = v216;
  v166(a9, v205, v216);
  v168 = (_QWORD *)(a9 + v39[5]);
  v169 = v204;
  *v168 = v209;
  v168[1] = v169;
  v170 = (_QWORD *)(a9 + v39[6]);
  v171 = v203;
  *v170 = v210;
  v170[1] = v171;
  sub_23E1E4E3C(v214, a9 + v39[7], &qword_2543330E0);
  v172 = (_QWORD *)(a9 + v39[8]);
  v173 = v199;
  *v172 = v211;
  v172[1] = v173;
  *(_BYTE *)(a9 + v39[9]) = v194;
  *(_BYTE *)(a9 + v39[10]) = (_BYTE)v190;
  *(_BYTE *)(a9 + v39[11]) = v195;
  *(_BYTE *)(a9 + v39[12]) = (_BYTE)v186;
  *(_BYTE *)(a9 + v39[13]) = v185;
  *(_BYTE *)(a9 + v39[14]) = (_BYTE)v184;
  *(_BYTE *)(a9 + v39[15]) = (_BYTE)v217;
  v174 = (_QWORD *)(a9 + v39[16]);
  v175 = v196;
  *v174 = v218;
  v174[1] = v175;
  *(_QWORD *)(a9 + v39[17]) = v197;
  sub_23E1E4E3C(v215, a9 + v39[18], &qword_2543332B8);
  *(_BYTE *)(a9 + v39[19]) = (_BYTE)v201;
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v166)(a9 + v39[20], v213, v167);
  *(_QWORD *)(a9 + v39[21]) = v155;
  v177 = (_QWORD *)(a9 + v39[22]);
  *v177 = v208;
  v177[1] = v156;
  *(_QWORD *)(a9 + v39[23]) = v158;
  *(_QWORD *)(a9 + v39[24]) = v160;
  *(_QWORD *)(a9 + v39[25]) = v164;
  return result;
}

BOOL StaticMediaSystem.isActivated.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 60)) == 1;
}

uint64_t StaticMediaSystem.staticMediaSystemComponents.getter()
{
  uint64_t v0;

  type metadata accessor for StaticMediaSystem();
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE50(v0);
}

uint64_t StaticMediaSystem.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticMediaSystem.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.category.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaSystem();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 28), a1, &qword_2543330E0);
}

uint64_t StaticMediaSystem.iconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.isDoubleHigh.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 36));
}

uint64_t StaticMediaSystem.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 40));
}

uint64_t StaticMediaSystem.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 44));
}

uint64_t StaticMediaSystem.isCompatible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 48));
}

uint64_t StaticMediaSystem.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 52));
}

uint64_t StaticMediaSystem.hasValidSettings.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 56));
}

uint64_t StaticMediaSystem.playbackState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaSystem();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t StaticMediaSystem.audioDestinationId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.symptoms.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMediaSystem();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 72), a1, &qword_2543332B8);
}

uint64_t StaticMediaSystem.homeNonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMediaSystem();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t StaticMediaSystem.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticMediaSystem() + 80);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticMediaSystem.roomIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.accessoryIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.deviceIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.staticMediaSystemComponentsDictionary.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for StaticSoftwareUpdate(0);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v6);
  v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F80();
  v29 = sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v15 = (int *)type metadata accessor for StaticMediaSystem();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E1E7C20(v1 + v15[7], (uint64_t)v14, &qword_2543330E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v17 = v30;
  v16 = v31;
  v18 = (uint64_t)v28;
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  if (*(_BYTE *)(v1 + v15[15]) == 6)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538468();
  }
  if (*(_QWORD *)(v1 + v15[16] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v19 = *(_QWORD *)(v1 + v15[17]);
  sub_23E538474();
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_23E240D30((uint64_t)a1, v19);
    swift_bridgeObjectRelease();
  }
  sub_23E1E7C20(v1 + v15[18], v18, &qword_2543332B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v20 = v27;
    sub_23E1E2FDC(v18, v27, type metadata accessor for StaticSoftwareUpdate);
    sub_23E538474();
    sub_23E5374D8();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_23E1E2FA0(v20, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_23E538468();
  sub_23E5374D8();
  v21 = *(_QWORD *)(v1 + v15[21]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v21);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v15[22] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v22 = *(_QWORD *)(v2 + v15[23]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v22);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v2 + v15[24]);
  swift_bridgeObjectRetain();
  sub_23E240E98(a1, v23);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v2 + v15[25]);
  swift_bridgeObjectRetain();
  sub_23E239390((uint64_t)a1, v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E463B24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E463B4C + 4 * byte_23E5527A0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E463B4C()
{
  return 1701667182;
}

uint64_t sub_23E463B5C()
{
  return 0x79726F6765746163;
}

uint64_t sub_23E463B74()
{
  return 0x6564644165746164;
}

uint64_t sub_23E463B90()
{
  return 0x626D79536E6F6369;
}

uint64_t sub_23E463BB0()
{
  return 0x656C62756F447369;
}

uint64_t sub_23E463BD0()
{
  return 0x69726F7661467369;
}

unint64_t sub_23E463BEC()
{
  return 0xD000000000000015;
}

uint64_t sub_23E463CE4()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E463CF8()
{
  return 0x7364496D6F6F72;
}

uint64_t sub_23E463D10()
{
  return 0x656D614E6D6F6F72;
}

uint64_t sub_23E463D28()
{
  return 0x726F737365636361;
}

uint64_t sub_23E463D48()
{
  return 0x6449656369766564;
}

void sub_23E463D68()
{
  JUMPOUT(0x23E463D7CLL);
}

uint64_t sub_23E463D88()
{
  unsigned __int8 *v0;

  return sub_23E463B24(*v0);
}

uint64_t sub_23E463D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E46ABF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E463DB4()
{
  sub_23E4669D4();
  return sub_23E538570();
}

uint64_t sub_23E463DDC()
{
  sub_23E4669D4();
  return sub_23E53857C();
}

uint64_t StaticMediaSystem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v11;
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47638);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4669D4();
  sub_23E5384EC();
  LOBYTE(v12) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticMediaSystem();
    LOBYTE(v12) = 1;
    sub_23E538270();
    LOBYTE(v12) = 2;
    sub_23E538270();
    v11 = (int *)v9;
    LOBYTE(v12) = 3;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
    LOBYTE(v12) = 4;
    sub_23E538270();
    LOBYTE(v12) = 5;
    sub_23E53827C();
    LOBYTE(v12) = 6;
    sub_23E53827C();
    LOBYTE(v12) = 7;
    sub_23E53827C();
    LOBYTE(v12) = 8;
    sub_23E53827C();
    LOBYTE(v12) = 9;
    sub_23E53827C();
    LOBYTE(v12) = 10;
    sub_23E53827C();
    LOBYTE(v12) = *(_BYTE *)(v3 + v11[15]);
    v13 = 11;
    sub_23E3FCAC4();
    sub_23E538234();
    LOBYTE(v12) = 12;
    sub_23E5381EC();
    v12 = *(_QWORD *)(v3 + v11[17]);
    v13 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
    sub_23E3FCC18(&qword_256D46460, (uint64_t (*)(void))sub_23E3FCB4C, MEMORY[0x24BEE1700]);
    sub_23E538234();
    LOBYTE(v12) = 14;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_23E1EE1C4(&qword_256D46470, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
    sub_23E538234();
    LOBYTE(v12) = *(_BYTE *)(v3 + v11[19]);
    v13 = 15;
    sub_23E3760D8();
    sub_23E5382AC();
    LOBYTE(v12) = 16;
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v11[21]);
    v13 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v12) = 18;
    sub_23E5381EC();
    v12 = *(_QWORD *)(v3 + v11[23]);
    v13 = 19;
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v11[24]);
    v13 = 20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D47648);
    sub_23E466A18(&qword_256D47650, &qword_256D46440, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    v12 = *(_QWORD *)(v3 + v11[25]);
    v13 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D47658);
    sub_23E466A9C();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaSystem.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystem.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticMediaSystem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *);
  char *v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v45 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v52 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v40 - v12;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47670);
  v14 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (int *)type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v51);
  v49 = a1;
  v50 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4669D4();
  v46 = v16;
  v18 = v48;
  sub_23E5384E0();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  v48 = v7;
  v43 = v11;
  LOBYTE(v53) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v19 = *(void (**)(char *, char *))(v52 + 32);
  v20 = v50;
  v42 = v8;
  v19(v50, v13);
  LOBYTE(v53) = 1;
  v21 = sub_23E538144();
  v22 = v51;
  v23 = (uint64_t *)&v20[v51[5]];
  *v23 = v21;
  v23[1] = v24;
  LOBYTE(v53) = 2;
  v25 = sub_23E538144();
  v41 = (void (*)(char *, char *, uint64_t))v19;
  v26 = (uint64_t *)&v20[v22[6]];
  *v26 = v25;
  v26[1] = v27;
  sub_23E536F20();
  LOBYTE(v53) = 3;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v28 = (uint64_t)v48;
  sub_23E538108();
  sub_23E1E4E3C(v28, (uint64_t)&v20[v22[7]], &qword_2543330E0);
  LOBYTE(v53) = 4;
  v29 = sub_23E538144();
  v30 = (uint64_t *)&v20[v22[8]];
  *v30 = v29;
  v30[1] = v31;
  LOBYTE(v53) = 5;
  v20[v22[9]] = sub_23E538150() & 1;
  LOBYTE(v53) = 6;
  v20[v22[10]] = sub_23E538150() & 1;
  LOBYTE(v53) = 7;
  v20[v22[11]] = sub_23E538150() & 1;
  LOBYTE(v53) = 8;
  v20[v22[12]] = sub_23E538150() & 1;
  LOBYTE(v53) = 9;
  v50[v51[13]] = sub_23E538150() & 1;
  LOBYTE(v53) = 10;
  v50[v51[14]] = sub_23E538150() & 1;
  v54 = 11;
  sub_23E3FCB90();
  sub_23E538108();
  v50[v51[15]] = v53;
  LOBYTE(v53) = 12;
  v32 = sub_23E5380D8();
  v33 = (uint64_t *)&v50[v51[16]];
  *v33 = v32;
  v33[1] = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
  v54 = 13;
  sub_23E3FCC18(&qword_256D46498, (uint64_t (*)(void))sub_23E3FCC80, MEMORY[0x24BEE1720]);
  sub_23E538108();
  *(_QWORD *)&v50[v51[17]] = v53;
  type metadata accessor for StaticSoftwareUpdate(0);
  LOBYTE(v53) = 14;
  sub_23E1EE1C4(&qword_256D464A8, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
  sub_23E538108();
  sub_23E1E4E3C(v45, (uint64_t)&v50[v51[18]], &qword_2543332B8);
  v54 = 15;
  sub_23E376160();
  sub_23E538180();
  v50[v51[19]] = v53;
  LOBYTE(v53) = 16;
  sub_23E538180();
  v41(&v50[v51[20]], v43, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v54 = 17;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v50[v51[21]] = v53;
  LOBYTE(v53) = 18;
  v35 = sub_23E5380D8();
  v36 = (uint64_t *)&v50[v51[22]];
  *v36 = v35;
  v36[1] = v37;
  v54 = 19;
  sub_23E538180();
  *(_QWORD *)&v50[v51[23]] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47648);
  v54 = 20;
  sub_23E466A18(&qword_256D47678, &qword_256D46480, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v50[v51[24]] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47658);
  v54 = 21;
  sub_23E466B38();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v47);
  v38 = (uint64_t)v50;
  *(_QWORD *)&v50[v51[25]] = v53;
  sub_23E1E2F50(v38, v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  return sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_23E4650D4()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystem.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E465114()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticMediaSystem.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E46514C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaSystem.init(from:)(a1, a2);
}

uint64_t sub_23E465160(_QWORD *a1)
{
  return StaticMediaSystem.encode(to:)(a1);
}

uint64_t StaticMediaSystem.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v1, (uint64_t)v5, v6);
  return Icon.init(staticMediaSystem:)((uint64_t)v5, a1);
}

uint64_t StaticMediaSystem.foregroundColor.getter()
{
  return sub_23E537364();
}

void StaticMediaSystem.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMediaSystem.tileStatusString.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v1 = (int *)type metadata accessor for StaticMediaSystem();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = 0;
  v6 = 0;
  if ((*(_BYTE *)(v0 + *(int *)(v2 + 52)) & 1) == 0)
  {
    static String.hfLocalized(_:)();
    v5 = v7;
    v6 = v8;
  }
  v9 = *(_BYTE *)(v0 + v1[14]);
  if (*(_BYTE *)(v0 + v1[15]) == 6)
  {
    v10 = 0;
  }
  else
  {
    v17[15] = *(_BYTE *)(v0 + v1[15]);
    v10 = sub_23E23F874();
  }
  v11 = sub_23E34CB08(v0 + v1[18], 0);
  v13 = v12;
  sub_23E1E2F50(v0, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (!v13)
  {
    v11 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v4[v1[17]]);
    v13 = v14;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if ((v9 & 1) != 0)
  {
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13)
        return v11;
      else
        return v10;
    }
  }
  else
  {
    static String.hfLocalized(_:)();
    v5 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t StaticMediaSystem.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticMediaSystem.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E465438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E1E7C20(v2 + *(int *)(a1 + 28), a2, &qword_2543330E0);
}

uint64_t sub_23E465460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  return Icon.init(staticMediaSystem:)((uint64_t)v5, a2);
}

uint64_t sub_23E4654D4()
{
  return sub_23E537364();
}

uint64_t sub_23E4654E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E4654F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 88));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL sub_23E465528(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(a1 + 60)) == 1;
}

unint64_t sub_23E465540()
{
  return 0xD000000000000011;
}

uint64_t StaticMediaSystem.mediaSystem.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E465578()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4655E4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E465648()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4656A8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4656F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E465758()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_mediaSystemFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticMediaSystem.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticMediaSystem();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  v7 = 0;
  if ((*(_BYTE *)(v0 + *(int *)(v3 + 52)) & 1) == 0)
  {
    static String.hfLocalized(_:)();
    v6 = v8;
    v7 = v9;
  }
  v10 = *(_BYTE *)(v0 + v2[14]);
  if (*(_BYTE *)(v0 + v2[15]) == 6)
  {
    v11 = 0;
    v12 = 0;
  }
  else
  {
    LOBYTE(v21) = *(_BYTE *)(v0 + v2[15]);
    v11 = sub_23E23F874();
    v12 = v13;
  }
  v14 = sub_23E34CB08(v1 + v2[18], 1);
  v16 = v15;
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (!v16)
  {
    v14 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v5[v2[17]]);
    v16 = v17;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v21 = v6;
  v22 = v7;
  v23 = 0;
  v24 = v10 ^ 1;
  v25 = v11;
  v26 = v12;
  v27 = v14;
  v28 = v16;
  v18 = sub_23E3F4850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t StaticMediaSystem.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  int *v1;

  v1 = (int *)type metadata accessor for StaticMediaSystem();
  return sub_23E3FDF78(*(_BYTE *)(v0 + v1[13]), v0 + v1[18], *(_QWORD *)(v0 + v1[17]));
}

uint64_t StaticMediaSystem.hasDetailAttentionMessages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for StaticMediaSystem();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 1;
  sub_23E34CB08(v1 + *(int *)(v3 + 72), 1);
  v8 = v7;
  swift_bridgeObjectRelease();
  sub_23E1E2F50(v1, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  if (!v8)
  {
    _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)&v5[*(int *)(v2 + 68)]);
    if (v9)
      swift_bridgeObjectRelease();
    else
      v6 = 0;
  }
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  return v6;
}

uint64_t sub_23E465A74@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  id v49;
  void *v50;
  id v51;
  char v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  _QWORD v77[2];
  char *v78;
  uint64_t v79;
  int v80;
  id v81;
  uint64_t v82;
  char v83;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v78 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v79 = (uint64_t)v77 - v15;
  v80 = *a3;
  v83 = v80;
  v81 = a2;
  v16 = sub_23E245D40(a1, a4, a2, &v83, a5);
  swift_bridgeObjectRelease();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_23E461BE8(v17);
  v77[1] = 0;
  swift_bridgeObjectRelease();
  v82 = sub_23E4FD850(v18);
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v20 = objc_msgSend(a1, sel_configuredName);
  v21 = sub_23E53755C();
  v23 = v22;

  swift_bridgeObjectRelease();
  v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0)
    v24 = v21 & 0xFFFFFFFFFFFFLL;
  if (v24)
  {
    v25 = objc_msgSend(a1, sel_configuredName);
  }
  else
  {
    v30 = objc_msgSend(a1, sel_category);
    v31 = objc_msgSend(v30, sel_categoryType);

    v32 = sub_23E53755C();
    v34 = v33;

    v27 = sub_23E1E54CC(v32, v34);
    v29 = v35;
    swift_bridgeObjectRelease();
    if (v29)
      goto LABEL_7;
    v25 = objc_msgSend(a1, sel_name);
  }
  v26 = v25;
  v27 = sub_23E53755C();
  v29 = v28;

LABEL_7:
  v36 = (int *)type metadata accessor for StaticMediaSystem();
  v37 = (uint64_t *)(a6 + v36[5]);
  *v37 = v27;
  v37[1] = v29;
  v38 = objc_msgSend(a1, sel_category);
  v39 = objc_msgSend(v38, (SEL)&selRef_resetAndRemoveAllCHIPPairingsFromAccessory_completion_ + 4);

  v40 = sub_23E53755C();
  v42 = v41;

  v43 = (uint64_t *)(a6 + v36[6]);
  *v43 = v40;
  v43[1] = v42;
  HMMediaSystem.dateAdded.getter(a6 + v36[7]);
  swift_bridgeObjectRetain();
  v44 = sub_23E466BD4(v82, a4);
  swift_bridgeObjectRelease();
  v45 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(v44);
  v47 = v46;
  swift_bridgeObjectRelease();
  v48 = (uint64_t *)(a6 + v36[8]);
  *v48 = v45;
  v48[1] = v47;
  *(_BYTE *)(a6 + v36[9]) = sub_23E478888() & 1;
  *(_BYTE *)(a6 + v36[10]) = HMMediaSystem.isFavorite.getter() & 1;
  *(_BYTE *)(a6 + v36[11]) = HMMediaSystem.shouldShowInDashboard.getter() & 1;
  *(_BYTE *)(a6 + v36[12]) = objc_msgSend(a1, sel_isCompatible);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v44) = sub_23E466FD8(1, v16, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a6 + v36[13]) = v44 & 1;
  v49 = objc_msgSend(a1, sel_settings);
  if (v49
    && (v50 = v49, v51 = objc_msgSend(v49, sel_rootGroup), v50, v51))
  {

    v52 = 1;
  }
  else
  {
    v52 = 0;
  }
  *(_BYTE *)(a6 + v36[14]) = v52;
  v53 = objc_msgSend(v81, sel_uniqueIdentifier);
  sub_23E536F68();

  v54 = swift_bridgeObjectRetain();
  v55 = sub_23E461FC8(v54);
  swift_bridgeObjectRelease();
  v56 = sub_23E4FD850(v55);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v56 + 16) == 1)
  {
    v57 = swift_bridgeObjectRetain();
    v58 = (_QWORD *)sub_23E4613D4(v57);
    swift_bridgeObjectRelease();
    if (v58[2])
    {
      v60 = v58[4];
      v59 = v58[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      v60 = 0;
      v59 = 0;
    }
    swift_bridgeObjectRelease();
    v62 = (_QWORD *)(a6 + v36[22]);
    *v62 = v60;
    v62[1] = v59;
  }
  else
  {
    v61 = (_QWORD *)(a6 + v36[22]);
    *v61 = 0;
    v61[1] = 0;
  }
  *(_QWORD *)(a6 + v36[21]) = v56;
  *(_QWORD *)(a6 + v36[23]) = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63 = sub_23E4672F0(MEMORY[0x24BEE4B08], v16, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v36[24]) = v63;
  *(_QWORD *)(a6 + v36[25]) = v16;
  v64 = a1;
  StaticMediaSystemComponent.PlaybackState.init(from:)(v64, &v83);
  *(_BYTE *)(a6 + v36[15]) = v83;
  v65 = objc_msgSend(v64, sel_audioDestinationIdentifier);
  if (v65)
  {
    v66 = v65;
    v67 = sub_23E53755C();
    v69 = v68;

  }
  else
  {
    v67 = 0;
    v69 = 0;
  }
  v70 = (uint64_t *)(a6 + v36[16]);
  *v70 = v67;
  v70[1] = v69;
  swift_bridgeObjectRetain();
  v71 = v82;
  v72 = sub_23E467710(MEMORY[0x24BEE4B08], v82, a4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + v36[17]) = v72;
  v73 = type metadata accessor for StaticSoftwareUpdate(0);
  v74 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v78, 1, 1, v73);
  swift_bridgeObjectRetain();
  v75 = v79;
  sub_23E461708(v74, v71, a4, v79);

  sub_23E1E7C64(v74, &qword_2543332B8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_23E1E4E3C(v75, a6 + v36[18], &qword_2543332B8);
  *(_BYTE *)(a6 + v36[19]) = v80;
  return result;
}

uint64_t _s13HomeDataModel17StaticMediaSystemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char v56;
  char v57;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;

  v4 = type metadata accessor for StaticSoftwareUpdate(0);
  v102 = *(_QWORD *)(v4 - 8);
  v103 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v100 = (uint64_t)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332C0);
  MEMORY[0x24BDAC7A8](v101);
  v106 = (uint64_t)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v104 = (uint64_t)&v96 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v105 = (uint64_t)&v96 - v13;
  v14 = sub_23E536F20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v107 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v96 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v96 - v27;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    goto LABEL_25;
  v99 = v10;
  v29 = (int *)type metadata accessor for StaticMediaSystem();
  v30 = v29[5];
  v31 = *(_QWORD *)(a1 + v30);
  v32 = *(_QWORD *)(a1 + v30 + 8);
  v33 = (_QWORD *)(a2 + v30);
  if (v31 != *v33 || v32 != v33[1])
  {
    v34 = sub_23E538354();
    v35 = 0;
    if ((v34 & 1) == 0)
      return v35 & 1;
  }
  v36 = v29[6];
  v37 = *(_QWORD *)(a1 + v36);
  v38 = *(_QWORD *)(a1 + v36 + 8);
  v39 = (_QWORD *)(a2 + v36);
  if (v37 != *v39 || v38 != v39[1])
  {
    v40 = sub_23E538354();
    v35 = 0;
    if ((v40 & 1) == 0)
      return v35 & 1;
  }
  v41 = v29[7];
  v96 = a1;
  sub_23E1E7C20(a1 + v41, (uint64_t)v28, &qword_2543330E0);
  v97 = a2;
  v98 = v29;
  sub_23E1E7C20(a2 + v29[7], (uint64_t)v26, &qword_2543330E0);
  v42 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_23E1E7C20((uint64_t)v28, (uint64_t)v19, &qword_2543330E0);
  sub_23E1E7C20((uint64_t)v26, v42, &qword_2543330E0);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v43((uint64_t)v19, 1, v14) == 1)
  {
    sub_23E1E7C64((uint64_t)v26, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v28, &qword_2543330E0);
    if (v43(v42, 1, v14) == 1)
    {
      sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
      goto LABEL_16;
    }
LABEL_13:
    v44 = &qword_2543330E8;
    v45 = (uint64_t)v19;
LABEL_14:
    sub_23E1E7C64(v45, v44);
    goto LABEL_25;
  }
  sub_23E1E7C20((uint64_t)v19, (uint64_t)v23, &qword_2543330E0);
  if (v43(v42, 1, v14) == 1)
  {
    sub_23E1E7C64((uint64_t)v26, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v28, &qword_2543330E0);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    goto LABEL_13;
  }
  v46 = v107;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v107, v42, v14);
  sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v47 = sub_23E537514();
  v48 = *(void (**)(char *, uint64_t))(v15 + 8);
  v48(v46, v14);
  sub_23E1E7C64((uint64_t)v26, &qword_2543330E0);
  sub_23E1E7C64((uint64_t)v28, &qword_2543330E0);
  v48(v23, v14);
  sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
  if ((v47 & 1) == 0)
    goto LABEL_25;
LABEL_16:
  v50 = v97;
  v49 = v98;
  v51 = v98[8];
  v52 = v96;
  v53 = *(_QWORD *)(v96 + v51);
  v54 = *(_QWORD *)(v96 + v51 + 8);
  v55 = (_QWORD *)(v97 + v51);
  if (v53 != *v55 || v54 != v55[1])
  {
    v56 = sub_23E538354();
    v49 = v98;
    v57 = v56;
    v35 = 0;
    if ((v57 & 1) == 0)
      return v35 & 1;
  }
  if (*(unsigned __int8 *)(v52 + v49[9]) != *(unsigned __int8 *)(v50 + v49[9])
    || *(unsigned __int8 *)(v52 + v49[10]) != *(unsigned __int8 *)(v50 + v49[10])
    || *(unsigned __int8 *)(v52 + v49[11]) != *(unsigned __int8 *)(v50 + v49[11])
    || *(unsigned __int8 *)(v52 + v49[12]) != *(unsigned __int8 *)(v50 + v49[12])
    || *(unsigned __int8 *)(v52 + v49[13]) != *(unsigned __int8 *)(v50 + v49[13])
    || *(unsigned __int8 *)(v52 + v49[14]) != *(unsigned __int8 *)(v50 + v49[14]))
  {
    goto LABEL_25;
  }
  v59 = v49[15];
  v60 = *(unsigned __int8 *)(v52 + v59);
  v61 = *(unsigned __int8 *)(v50 + v59);
  if (v60 == 6)
  {
    if (v61 != 6)
      goto LABEL_25;
  }
  else
  {
    v35 = 0;
    if (v61 == 6 || v60 != v61)
      return v35 & 1;
  }
  v62 = v49[16];
  v63 = (_QWORD *)(v52 + v62);
  v64 = *(_QWORD *)(v52 + v62 + 8);
  v65 = (_QWORD *)(v50 + v62);
  v66 = v65[1];
  if (v64)
  {
    if (!v66)
      goto LABEL_25;
    if (*v63 != *v65 || v64 != v66)
    {
      v67 = sub_23E538354();
      v49 = v98;
      v68 = v67;
      v35 = 0;
      if ((v68 & 1) == 0)
        return v35 & 1;
    }
  }
  else if (v66)
  {
    goto LABEL_25;
  }
  v69 = v49[17];
  v70 = *(_QWORD *)(v52 + v69);
  v71 = *(_QWORD *)(v50 + v69);
  if (v70)
  {
    if (!v71 || (sub_23E3361B8(v70, v71) & 1) == 0)
      goto LABEL_25;
  }
  else if (v71)
  {
    goto LABEL_25;
  }
  v72 = v98;
  v73 = v105;
  sub_23E1E7C20(v52 + v98[18], v105, &qword_2543332B8);
  v74 = v50 + v72[18];
  v75 = v104;
  sub_23E1E7C20(v74, v104, &qword_2543332B8);
  v76 = v106;
  v77 = v106 + *(int *)(v101 + 48);
  sub_23E1E7C20(v73, v106, &qword_2543332B8);
  sub_23E1E7C20(v75, v77, &qword_2543332B8);
  v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  v79 = v76;
  v80 = v103;
  if (v78(v79, 1, v103) == 1)
  {
    sub_23E1E7C64(v104, &qword_2543332B8);
    sub_23E1E7C64(v105, &qword_2543332B8);
    if (v78(v77, 1, v80) == 1)
    {
      sub_23E1E7C64(v106, &qword_2543332B8);
      goto LABEL_52;
    }
    goto LABEL_49;
  }
  sub_23E1E7C20(v106, (uint64_t)v99, &qword_2543332B8);
  if (v78(v77, 1, v80) == 1)
  {
    sub_23E1E7C64(v104, &qword_2543332B8);
    sub_23E1E7C64(v105, &qword_2543332B8);
    sub_23E1E2FA0((uint64_t)v99, type metadata accessor for StaticSoftwareUpdate);
LABEL_49:
    v44 = &qword_2543332C0;
    v45 = v106;
    goto LABEL_14;
  }
  sub_23E1E2FDC(v77, v100, type metadata accessor for StaticSoftwareUpdate);
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
  {
    sub_23E1E2FA0(v100, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64(v104, &qword_2543332B8);
    sub_23E1E7C64(v105, &qword_2543332B8);
    sub_23E1E2FA0((uint64_t)v99, type metadata accessor for StaticSoftwareUpdate);
    v45 = v106;
    v44 = &qword_2543332B8;
    goto LABEL_14;
  }
  v81 = (uint64_t)v99;
  v82 = v100;
  _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)&v99[*(int *)(v103 + 20)], v100 + *(int *)(v103 + 20));
  v84 = v83;
  sub_23E1E2FA0(v82, type metadata accessor for StaticSoftwareUpdate);
  sub_23E1E7C64(v104, &qword_2543332B8);
  sub_23E1E7C64(v105, &qword_2543332B8);
  sub_23E1E2FA0(v81, type metadata accessor for StaticSoftwareUpdate);
  sub_23E1E7C64(v106, &qword_2543332B8);
  if ((v84 & 1) == 0)
    goto LABEL_25;
LABEL_52:
  if (*(unsigned __int8 *)(v96 + v98[19]) != *(unsigned __int8 *)(v97 + v98[19])
    || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
    || (sub_23E1F8470(*(_QWORD *)(v96 + v98[21]), *(_QWORD *)(v97 + v98[21])) & 1) == 0)
  {
    goto LABEL_25;
  }
  v85 = v98[22];
  v86 = (_QWORD *)(v96 + v85);
  v87 = *(_QWORD *)(v96 + v85 + 8);
  v88 = (_QWORD *)(v97 + v85);
  v89 = v88[1];
  if (!v87)
  {
    v92 = v96;
    v91 = v97;
    v93 = v98;
    if (!v89)
      goto LABEL_64;
LABEL_25:
    v35 = 0;
    return v35 & 1;
  }
  if (!v89)
    goto LABEL_25;
  v90 = *v86 == *v88;
  v92 = v96;
  v91 = v97;
  v93 = v98;
  if (v90 && v87 == v89 || (v94 = sub_23E538354(), v93 = v98, v95 = v94, v35 = 0, (v95 & 1) != 0))
  {
LABEL_64:
    if ((sub_23E1F8470(*(_QWORD *)(v92 + v93[23]), *(_QWORD *)(v91 + v93[23])) & 1) != 0
      && (sub_23E336758(*(_QWORD *)(v96 + v98[24]), *(_QWORD *)(v97 + v98[24])) & 1) != 0)
    {
      v35 = sub_23E2B1694(*(_QWORD *)(v96 + v98[25]), *(_QWORD *)(v97 + v98[25]));
      return v35 & 1;
    }
    goto LABEL_25;
  }
  return v35 & 1;
}

unint64_t sub_23E4669D4()
{
  unint64_t result;

  result = qword_256D47640;
  if (!qword_256D47640)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552B24, &type metadata for StaticMediaSystem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47640);
  }
  return result;
}

uint64_t sub_23E466A18(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D47648);
    v10 = sub_23E1EE1C4(a2, type metadata accessor for StaticAccessory.DeviceIdentifier, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E466A9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D47660;
  if (!qword_256D47660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D47658);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D47668, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent, (uint64_t)&protocol conformance descriptor for StaticMediaSystemComponent);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D47660);
  }
  return result;
}

unint64_t sub_23E466B38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D47680;
  if (!qword_256D47680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D47658);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D47688, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent, (uint64_t)&protocol conformance descriptor for StaticMediaSystemComponent);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D47680);
  }
  return result;
}

uint64_t sub_23E466BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  char v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  BOOL v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;

  v4 = type metadata accessor for StaticAccessory(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v47 = (char *)MEMORY[0x24BEE4AF8];
  v48 = v7;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v53 = v19;
      v21 = v20 | (v19 << 6);
      goto LABEL_20;
    }
    v22 = __OFADD__(v19, 1);
    v23 = v19 + 1;
    if (v22)
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v23 >= v17)
      goto LABEL_34;
    v24 = *(_QWORD *)(v13 + 8 * v23);
    if (!v24)
      break;
LABEL_19:
    v16 = (v24 - 1) & v24;
    v53 = v23;
    v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_20:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
    {
      swift_release();
      return (uint64_t)v47;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    if (*(_QWORD *)(a2 + 16) && (v26 = sub_23E1E3300((uint64_t)v9), (v27 & 1) != 0))
    {
      v28 = v17;
      v29 = v13;
      v30 = v6;
      v31 = v12;
      v32 = v9;
      v33 = a1;
      v34 = v49;
      sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v50 + 72) * v26, v49, type metadata accessor for StaticAccessory);
      v35 = *(int *)(v51 + 88);
      v52 = v16;
      v36 = *(unsigned __int16 *)(v34 + v35);
      v37 = v34;
      a1 = v33;
      v9 = v32;
      v12 = v31;
      v6 = v30;
      v13 = v29;
      v17 = v28;
      v7 = v48;
      sub_23E1E2FA0(v37, type metadata accessor for StaticAccessory);
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v38 = (~v36 & 0xFEFC) == 0;
      v39 = v36;
      v16 = v52;
      v19 = v53;
      if (!v38)
      {
        v46 = v39;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_23E520080(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
          v47 = (char *)result;
        }
        v41 = *((_QWORD *)v47 + 2);
        v40 = *((_QWORD *)v47 + 3);
        v42 = v41 + 1;
        v19 = v53;
        if (v41 >= v40 >> 1)
        {
          v44 = *((_QWORD *)v47 + 2);
          v45 = v41 + 1;
          result = (uint64_t)sub_23E520080((char *)(v40 > 1), v41 + 1, 1, v47);
          v41 = v44;
          v42 = v45;
          v19 = v53;
          v47 = (char *)result;
        }
        v43 = v47;
        *((_QWORD *)v47 + 2) = v42;
        *(_WORD *)&v43[2 * v41 + 32] = v46;
      }
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v19 = v53;
    }
  }
  v25 = v23 + 1;
  if (v23 + 1 >= v17)
    goto LABEL_34;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v23 + 2;
  if (v23 + 2 >= v17)
    goto LABEL_34;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v23 + 3;
  if (v23 + 3 >= v17)
    goto LABEL_34;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v23 + 4;
  if (v23 + 4 >= v17)
  {
LABEL_34:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    swift_release();
    return (uint64_t)v47;
  }
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
  {
LABEL_18:
    v23 = v25;
    goto LABEL_19;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v17)
      goto LABEL_34;
    v24 = *(_QWORD *)(v13 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_19;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23E466FD8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  int v44;

  v44 = a1;
  v5 = type metadata accessor for StaticAccessory(0);
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v37 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for StaticMediaSystemComponent();
  v7 = *(_QWORD *)(v42 - 8);
  v8 = MEMORY[0x24BDAC7A8](v42);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v41 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v36 = v10;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_23;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v43)
      goto LABEL_26;
    v22 = *(_QWORD *)(v41 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v43)
        goto LABEL_26;
      v22 = *(_QWORD *)(v41 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v43)
          goto LABEL_26;
        v22 = *(_QWORD *)(v41 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v43)
            goto LABEL_26;
          v22 = *(_QWORD *)(v41 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_23:
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    if (*(_QWORD *)(a3 + 16))
    {
      v24 = &v10[*(int *)(v42 + 20)];
      v25 = type metadata accessor for StaticMediaProfile();
      v26 = sub_23E1E3300((uint64_t)&v24[*(int *)(v25 + 56)]);
      if ((v27 & 1) != 0)
      {
        v28 = *(_QWORD *)(a3 + 56) + *(_QWORD *)(v38 + 72) * v26;
        v29 = v12;
        v30 = v7;
        v31 = a2;
        v32 = v37;
        v40 = v18;
        sub_23E1E2F50(v28, v37, type metadata accessor for StaticAccessory);
        v33 = *(unsigned __int8 *)(v32 + *(int *)(v39 + 108));
        v34 = v32;
        a2 = v31;
        v7 = v30;
        v12 = v29;
        v10 = v36;
        v18 = v40;
        sub_23E1E2FA0(v34, type metadata accessor for StaticAccessory);
        v44 &= v33;
      }
    }
    result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  }
  v23 = v21 + 4;
  if (v23 >= v43)
  {
LABEL_26:
    swift_release();
    return v44 & 1;
  }
  v22 = *(_QWORD *)(v41 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v43)
      goto LABEL_26;
    v22 = *(_QWORD *)(v41 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E4672F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;

  v6 = type metadata accessor for StaticAccessory(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v56 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v55 = (uint64_t)&v50 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v54 = (uint64_t)&v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v53 = (uint64_t)&v50 - v15;
  v16 = type metadata accessor for StaticMediaSystemComponent();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v50 - v21;
  v63 = a1;
  v23 = *(_QWORD *)(a2 + 64);
  v60 = a2 + 64;
  v24 = 1 << *(_BYTE *)(a2 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v61 = (unint64_t)(v24 + 63) >> 6;
  v62 = a2;
  result = swift_bridgeObjectRetain();
  v28 = 0;
  v51 = a3;
  v52 = v16;
  while (1)
  {
    if (v26)
    {
      v29 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      v30 = v29 | (v28 << 6);
      goto LABEL_23;
    }
    v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v61)
      goto LABEL_26;
    v32 = *(_QWORD *)(v60 + 8 * v31);
    ++v28;
    if (!v32)
    {
      v28 = v31 + 1;
      if (v31 + 1 >= v61)
        goto LABEL_26;
      v32 = *(_QWORD *)(v60 + 8 * v28);
      if (!v32)
      {
        v28 = v31 + 2;
        if (v31 + 2 >= v61)
          goto LABEL_26;
        v32 = *(_QWORD *)(v60 + 8 * v28);
        if (!v32)
        {
          v28 = v31 + 3;
          if (v31 + 3 >= v61)
            goto LABEL_26;
          v32 = *(_QWORD *)(v60 + 8 * v28);
          if (!v32)
            break;
        }
      }
    }
LABEL_22:
    v26 = (v32 - 1) & v32;
    v30 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_23:
    sub_23E1E2F50(*(_QWORD *)(v62 + 56) + *(_QWORD *)(v17 + 72) * v30, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    sub_23E1E2FDC((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    if (*(_QWORD *)(a3 + 16))
    {
      v34 = v28;
      v35 = &v20[*(int *)(v16 + 20)];
      v36 = (uint64_t)&v35[*(int *)(type metadata accessor for StaticMediaProfile() + 56)];
      v28 = v34;
      v37 = sub_23E1E3300(v36);
      if ((v38 & 1) != 0)
      {
        v39 = v57;
        sub_23E1E2F50(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v58 + 72) * v37, v57, type metadata accessor for StaticAccessory);
        v40 = v54;
        sub_23E1E2F50(v39 + *(int *)(v59 + 24), v54, type metadata accessor for StaticAccessory.DeviceIdentifier);
        sub_23E1E2FA0(v39, type metadata accessor for StaticAccessory);
        v41 = v53;
        sub_23E1E2FDC(v40, v53, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v42 = v22;
        v43 = v20;
        v44 = v17;
        v45 = v56;
        sub_23E1E2F50(v41, v56, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v46 = v55;
        v47 = v45;
        v17 = v44;
        v20 = v43;
        v22 = v42;
        sub_23E380D5C(v55, v47);
        v48 = v46;
        v28 = v34;
        a3 = v51;
        sub_23E1E2FA0(v48, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v49 = v41;
        v16 = v52;
        sub_23E1E2FA0(v49, type metadata accessor for StaticAccessory.DeviceIdentifier);
      }
    }
    result = sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
  }
  v33 = v31 + 4;
  if (v33 >= v61)
  {
LABEL_26:
    swift_release();
    return v63;
  }
  v32 = *(_QWORD *)(v60 + 8 * v33);
  if (v32)
  {
    v28 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    v28 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v28 >= v61)
      goto LABEL_26;
    v32 = *(_QWORD *)(v60 + 8 * v28);
    ++v33;
    if (v32)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E467710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for StaticAccessory(0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  v15 = *(_QWORD *)(a2 + 56);
  v35 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v37 = a2;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v31 = v14;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v20 << 6);
      goto LABEL_23;
    }
    v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v36)
      goto LABEL_28;
    v24 = *(_QWORD *)(v35 + 8 * v23);
    ++v20;
    if (!v24)
    {
      v20 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_28;
      v24 = *(_QWORD *)(v35 + 8 * v20);
      if (!v24)
      {
        v20 = v23 + 2;
        if (v23 + 2 >= v36)
          goto LABEL_28;
        v24 = *(_QWORD *)(v35 + 8 * v20);
        if (!v24)
        {
          v20 = v23 + 3;
          if (v23 + 3 >= v36)
            goto LABEL_28;
          v24 = *(_QWORD *)(v35 + 8 * v20);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, *(_QWORD *)(v37 + 48) + *(_QWORD *)(v9 + 72) * v22, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
      goto LABEL_29;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    if (*(_QWORD *)(a3 + 16))
    {
      v26 = sub_23E1E3300((uint64_t)v11);
      if ((v27 & 1) != 0)
      {
        v28 = v32;
        sub_23E1E2F50(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v33 + 72) * v26, v32, type metadata accessor for StaticAccessory);
        v29 = *(_QWORD *)(v28 + *(int *)(v34 + 116));
        swift_bridgeObjectRetain();
        v14 = v31;
        sub_23E1E2FA0(v28, type metadata accessor for StaticAccessory);
        if (v29)
          sub_23E269044(v29);
      }
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  v25 = v23 + 4;
  if (v25 >= v36)
  {
LABEL_28:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
LABEL_29:
    swift_release();
    return v38;
  }
  v24 = *(_QWORD *)(v35 + 8 * v25);
  if (v24)
  {
    v20 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v36)
      goto LABEL_28;
    v24 = *(_QWORD *)(v35 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_23E467A80(unint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unsigned __int8 v40;

  v6 = v5;
  v36 = a4;
  v37 = a5;
  LOBYTE(v7) = a3;
  v35 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332930);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for StaticMediaSystem();
  v38 = *(_QWORD *)(v34 - 8);
  v12 = MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v31 = (uint64_t)&v29 - v14;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v15 = sub_23E53803C();
    if (v15)
      goto LABEL_3;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
    {
LABEL_3:
      v29 = v6;
      v39 = v7 & 1;
      v7 = MEMORY[0x24BEE4AF8];
      v32 = a1 & 0xC000000000000001;
      v6 = 4;
      v30 = a1;
      while (1)
      {
        v16 = v6 - 4;
        if (v32)
        {
          v17 = (id)MEMORY[0x24264F148](v6 - 4, a1);
          v18 = v6 - 3;
          if (__OFADD__(v16, 1))
            goto LABEL_18;
        }
        else
        {
          v17 = *(id *)(a1 + 8 * v6);
          v18 = v6 - 3;
          if (__OFADD__(v16, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v40 = v39;
        v19 = v17;
        v20 = v35;
        v21 = v36;
        swift_bridgeObjectRetain();
        v22 = v37;
        swift_bridgeObjectRetain();
        sub_23E465A74(v19, v20, &v40, v21, v22, (uint64_t)v11);
        v23 = v38;
        v24 = v34;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v11, 0, 1, v34);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v24) == 1)
        {
          sub_23E1E7C64((uint64_t)v11, &qword_254332930);
        }
        else
        {
          v25 = v31;
          sub_23E1E2FDC((uint64_t)v11, v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
          sub_23E1E2FDC(v25, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_23E51E57C(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
          v27 = *(_QWORD *)(v7 + 16);
          v26 = *(_QWORD *)(v7 + 24);
          if (v27 >= v26 >> 1)
            v7 = sub_23E51E57C(v26 > 1, v27 + 1, 1, v7);
          *(_QWORD *)(v7 + 16) = v27 + 1;
          sub_23E1E2FDC(v33, v7+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
          a1 = v30;
        }
        ++v6;
        if (v18 == v15)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E467DA0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;

  v48 = a3;
  v6 = type metadata accessor for StaticMediaSystem();
  v44 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v39 - v9;
  v11 = sub_23E536F80();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F90);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v39[0] = a1;
  v39[1] = v3;
  v43 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v42 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  v20 = type metadata accessor for StaticMediaSystem;
  v41 = v17;
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333F90);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
    v23 = (uint64_t)v47;
    v22((uint64_t)v47, v17, v46);
    v24 = (uint64_t)v10;
    v25 = v20;
    sub_23E1E2FDC((uint64_t)v43, (uint64_t)v10, (uint64_t (*)(_QWORD))v20);
    v26 = *v48;
    v28 = sub_23E1E3300(v23);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a2 & 1) != 0)
      {
        v20 = v25;
        if ((v27 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D9A0();
        v20 = v25;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212BEC(v31, a2 & 1);
      v33 = sub_23E1E3300((uint64_t)v47);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_20;
      v28 = v33;
      v20 = v25;
      if ((v32 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v21 = v40;
        sub_23E1E2FDC(v24, v40, (uint64_t (*)(_QWORD))v20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        sub_23E46B50C(v21, *(_QWORD *)(*v48 + 56) + *(_QWORD *)(v44 + 72) * v28);
        goto LABEL_4;
      }
    }
    v35 = (_QWORD *)*v48;
    *(_QWORD *)(*v48 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v22(v35[6] + *(_QWORD *)(v45 + 72) * v28, v47, v46);
    v10 = (char *)v24;
    sub_23E1E2FDC(v24, v35[7] + *(_QWORD *)(v44 + 72) * v28, (uint64_t (*)(_QWORD))v20);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_19;
    v35[2] = v38;
LABEL_4:
    v17 = v41;
    v19 += v42;
    a2 = 1;
    if (!--v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E4680C8(void *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F90);
  v8 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v11 = objc_msgSend(a1, sel_mediaSystems);
  sub_23E2068AC();
  v12 = sub_23E5377F0();

  v13 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (char)a2;
  v15 = 0;
  v16 = sub_23E467A80(v12, v13, v14, a3, a4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v30 = 0;
    v32 = MEMORY[0x24BEE4AF8];
    sub_23E2CAFD0(0, v17, 0);
    v18 = v32;
    v19 = *(_QWORD *)(type metadata accessor for StaticMediaSystem() - 8);
    v20 = *(unsigned __int8 *)(v19 + 80);
    v29[1] = v16;
    v21 = v16 + ((v20 + 32) & ~v20);
    v22 = *(_QWORD *)(v19 + 72);
    do
    {
      v23 = (uint64_t)&v10[*(int *)(v31 + 48)];
      sub_23E1E2F50(v21, v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      v24 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v10, v23, v24);
      v32 = v18;
      v26 = *(_QWORD *)(v18 + 16);
      v25 = *(_QWORD *)(v18 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_23E2CAFD0(v25 > 1, v26 + 1, 1);
        v18 = v32;
      }
      *(_QWORD *)(v18 + 16) = v26 + 1;
      sub_23E1E4E3C((uint64_t)v10, v18+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v26, &qword_254333F90);
      v21 += v22;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v15 = v30;
    if (*(_QWORD *)(v18 + 16))
      goto LABEL_7;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F240);
      v27 = sub_23E53806C();
      goto LABEL_10;
    }
  }
  v27 = MEMORY[0x24BEE4B00];
LABEL_10:
  v32 = v27;
  sub_23E467DA0(v18, 1, &v32);
  swift_bridgeObjectRelease();
  if (!v15)
    return v32;
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E468370()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D476A0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
}

uint64_t sub_23E46839C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D476B0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  a1[2] = sub_23E1EE1C4(&qword_256D476B8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  a1[3] = sub_23E1EE1C4(&qword_256D40EA8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  a1[4] = sub_23E1EE1C4(&qword_256D40D78, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  a1[5] = sub_23E1EE1C4(&qword_256D476C0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  result = sub_23E1EE1C4(&qword_256D476C8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
  a1[6] = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticMediaSystem(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t updated;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  char *__dst;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v92 = sub_23E536F80();
    v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *))v93)(a1, a2);
    v7 = a3[5];
    v8 = a3[6];
    v9 = (_QWORD *)((char *)a1 + v7);
    v10 = (_QWORD *)((char *)a2 + v7);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = (_QWORD *)((char *)a1 + v8);
    v13 = (_QWORD *)((char *)a2 + v8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_23E536F20();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v90 = v20;
    v91 = v18;
    v89 = v19;
    if (v20(v17, 1, v18))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v23 = a3[8];
    v24 = a3[9];
    v25 = (_QWORD *)((char *)a1 + v23);
    v26 = (_QWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
    v28 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
    v29 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)a1 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[15];
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    v31 = a3[16];
    v32 = a3[17];
    v33 = (_QWORD *)((char *)a1 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = v34[1];
    v36 = *(_QWORD *)((char *)a2 + v32);
    *v33 = *v34;
    v33[1] = v35;
    *(_QWORD *)((char *)a1 + v32) = v36;
    v37 = a3[18];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for StaticSoftwareUpdate(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    v43 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v39, 1, v43))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      v46 = v92;
      v45 = v93;
LABEL_20:
      v78 = a3[20];
      *((_BYTE *)a1 + a3[19]) = *((_BYTE *)a2 + a3[19]);
      v45((char *)a1 + v78, (char *)a2 + v78, v46);
      v79 = a3[22];
      *(_QWORD *)((char *)a1 + a3[21]) = *(_QWORD *)((char *)a2 + a3[21]);
      v80 = (_QWORD *)((char *)a1 + v79);
      v81 = (_QWORD *)((char *)a2 + v79);
      v82 = v81[1];
      *v80 = *v81;
      v80[1] = v82;
      v83 = a3[24];
      *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
      *(_QWORD *)((char *)a1 + v83) = *(_QWORD *)((char *)a2 + v83);
      *(_QWORD *)((char *)a1 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    v87 = v41;
    v46 = v92;
    v45 = v93;
    v93(v38, v39, v92);
    v88 = v43;
    v47 = *(int *)(v43 + 20);
    v48 = &v38[v47];
    v49 = &v39[v47];
    v50 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v61 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v61;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v63 = *(int *)(updated + 20);
      v85 = updated;
      __dst = &v48[v63];
      v64 = &v49[v63];
      swift_bridgeObjectRetain();
      if (v90(v64, 1, v91))
      {
LABEL_15:
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_18:
        v69 = *(int *)(v85 + 24);
        v70 = &v48[v69];
        v71 = &v49[v69];
        v72 = *((_QWORD *)v71 + 1);
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = v72;
        v73 = *(int *)(v85 + 28);
        v74 = &v48[v73];
        v75 = &v49[v73];
        v76 = *((_QWORD *)v75 + 1);
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = v76;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v48[*(int *)(v77 + 48)] = v49[*(int *)(v77 + 48)];
        swift_storeEnumTagMultiPayload();
        v45 = v93;
LABEL_19:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v38, 0, 1, v88);
        goto LABEL_20;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v93(v48, v49, v92);
          v52 = (int *)type metadata accessor for StaticHH2Update(0);
          v48[v52[5]] = v49[v52[5]];
          v53 = v52[6];
          v54 = &v48[v53];
          v55 = &v49[v53];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          *(_QWORD *)v54 = v57;
          *((_QWORD *)v54 + 1) = v56;
          v58 = v52[7];
          v59 = &v48[v58];
          v60 = &v49[v58];
          v59[8] = v60[8];
          *(_QWORD *)v59 = *(_QWORD *)v60;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_19;
      }
      v65 = *((_QWORD *)v49 + 1);
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = v65;
      v66 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v67 = *(int *)(v66 + 20);
      v85 = v66;
      __dst = &v48[v67];
      v64 = &v49[v67];
      swift_bridgeObjectRetain();
      if (v90(v64, 1, v91))
        goto LABEL_15;
    }
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(__dst, v64, v91);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(__dst, 0, 1, v91);
    goto LABEL_18;
  }
  v22 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for StaticMediaSystem(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[7];
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[18];
  v11 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v5(v10, v4);
    v12 = v10 + *(int *)(v11 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v9(v14, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      v5(v12, v4);
      type metadata accessor for StaticHH2Update(0);
LABEL_11:
      swift_bridgeObjectRelease();
    }
  }
  v5(a1 + a2[20], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t updated;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  char *__dst;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);

  v90 = sub_23E536F80();
  v91 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
  v91(a1, a2);
  v6 = a3[5];
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v6);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = (_QWORD *)(a1 + v7);
  v12 = (_QWORD *)(a2 + v7);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_23E536F20();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v88 = v19;
  v89 = v17;
  v87 = v18;
  if (v19((char *)v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = a3[8];
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v26 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v28 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[16];
  v30 = a3[17];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  v34 = *(_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v33;
  *(_QWORD *)(a1 + v30) = v34;
  v35 = a3[18];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  v38 = type metadata accessor for StaticSoftwareUpdate(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v40(v37, 1, v41))
  {
    v85 = v39;
    v44 = v90;
    v43 = (void (*)(uint64_t, uint64_t, uint64_t))v91;
    ((void (*)(char *, char *, uint64_t))v91)(v36, v37, v90);
    v86 = v41;
    v45 = *(int *)(v41 + 20);
    v46 = &v36[v45];
    v47 = &v37[v45];
    v48 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v59 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v59;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v61 = *(int *)(updated + 20);
      v83 = updated;
      __dst = &v46[v61];
      v62 = &v47[v61];
      swift_bridgeObjectRetain();
      if (v88(v62, 1, v89))
      {
LABEL_13:
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
LABEL_16:
        v67 = *(int *)(v83 + 24);
        v68 = &v46[v67];
        v69 = &v47[v67];
        v70 = *((_QWORD *)v69 + 1);
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *((_QWORD *)v68 + 1) = v70;
        v71 = *(int *)(v83 + 28);
        v72 = &v46[v71];
        v73 = &v47[v71];
        v74 = *((_QWORD *)v73 + 1);
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = v74;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v46[*(int *)(v75 + 48)] = v47[*(int *)(v75 + 48)];
        swift_storeEnumTagMultiPayload();
        v43 = (void (*)(uint64_t, uint64_t, uint64_t))v91;
LABEL_17:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v36, 0, 1, v86);
        goto LABEL_18;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v91)(v46, v47, v90);
          v50 = (int *)type metadata accessor for StaticHH2Update(0);
          v46[v50[5]] = v47[v50[5]];
          v51 = v50[6];
          v52 = &v46[v51];
          v53 = &v47[v51];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          *(_QWORD *)v52 = v55;
          *((_QWORD *)v52 + 1) = v54;
          v56 = v50[7];
          v57 = &v46[v56];
          v58 = &v47[v56];
          v57[8] = v58[8];
          *(_QWORD *)v57 = *(_QWORD *)v58;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_17;
      }
      v63 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = *(_QWORD *)v47;
      *((_QWORD *)v46 + 1) = v63;
      v64 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v65 = *(int *)(v64 + 20);
      v83 = v64;
      __dst = &v46[v65];
      v62 = &v47[v65];
      swift_bridgeObjectRetain();
      if (v88(v62, 1, v89))
        goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v62, v89);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v89);
    goto LABEL_16;
  }
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  v44 = v90;
  v43 = (void (*)(uint64_t, uint64_t, uint64_t))v91;
LABEL_18:
  v76 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v43(a1 + v76, a2 + v76, v44);
  v77 = a3[22];
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  v80 = v79[1];
  *v78 = *v79;
  v78[1] = v80;
  v81 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  *(_QWORD *)(a1 + v81) = *(_QWORD *)(a2 + v81);
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  int EnumCaseMultiPayload;
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48;
  size_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  int v56;
  int *v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char v64;
  uint64_t updated;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  char *v93;
  uint64_t v94;
  char *__src;
  uint64_t v96;
  char *__dst;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v104 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v105 = v6;
  v104(a1, a2);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = sub_23E536F20();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  v98 = v18;
  v101 = v7;
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v26 = a3[16];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[18];
  v30 = a1 + v29;
  v31 = (char *)(a2 + v29);
  v32 = type metadata accessor for StaticSoftwareUpdate(0);
  v99 = *(_QWORD **)(v32 - 8);
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v99[6];
  v34 = v33(v30, 1, v32);
  v35 = v33((uint64_t)v31, 1, v32);
  if (v34)
  {
    if (!v35)
    {
      v36 = *(void (**)(uint64_t, char *, uint64_t))(v101 + 16);
      v36(v30, v31, v105);
      v37 = *(int *)(v32 + 20);
      v38 = (_QWORD *)(v30 + v37);
      v39 = &v31[v37];
      v102 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v38 = *(_QWORD *)v39;
        v38[1] = *((_QWORD *)v39 + 1);
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v66 = *(int *)(updated + 20);
        v96 = updated;
        __dst = (char *)v38 + v66;
        v67 = &v39[v66];
        swift_bridgeObjectRetain();
        __src = v67;
        if (v19(v67, 1, v17))
        {
LABEL_26:
          v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
LABEL_34:
          v77 = *(int *)(v96 + 24);
          v78 = (_QWORD *)((char *)v38 + v77);
          v79 = &v39[v77];
          *v78 = *(_QWORD *)v79;
          v78[1] = *((_QWORD *)v79 + 1);
          v80 = *(int *)(v96 + 28);
          v81 = (_QWORD *)((char *)v38 + v80);
          v82 = &v39[v80];
          *v81 = *(_QWORD *)v82;
          v81[1] = *((_QWORD *)v82 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v38 + *(int *)(v83 + 48)) = v39[*(int *)(v83 + 48)];
          goto LABEL_35;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
LABEL_36:
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v99[7])(v30, 0, 1, v32);
            goto LABEL_37;
          }
          v36((uint64_t)v38, v39, v105);
          v41 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v38 + v41[5]) = v39[v41[5]];
          v42 = v41[6];
          v43 = (_QWORD *)((char *)v38 + v42);
          v44 = &v39[v42];
          *v43 = *(_QWORD *)v44;
          v43[1] = *((_QWORD *)v44 + 1);
          v45 = v41[7];
          v46 = (char *)v38 + v45;
          v47 = &v39[v45];
          v48 = v47[8];
          *(_QWORD *)v46 = *(_QWORD *)v47;
          v46[8] = v48;
          swift_bridgeObjectRetain();
LABEL_35:
          swift_storeEnumTagMultiPayload();
          goto LABEL_36;
        }
        *v38 = *(_QWORD *)v39;
        v38[1] = *((_QWORD *)v39 + 1);
        v68 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v69 = *(int *)(v68 + 20);
        v96 = v68;
        __dst = (char *)v38 + v69;
        v67 = &v39[v69];
        swift_bridgeObjectRetain();
        __src = v67;
        if (v19(v67, 1, v17))
          goto LABEL_26;
      }
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(__dst, v67, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(__dst, 0, 1, v17);
      goto LABEL_34;
    }
    goto LABEL_15;
  }
  if (!v35)
  {
    ((void (*)(uint64_t, char *, uint64_t))v104)(v30, v31, v105);
    if (a1 == a2)
      goto LABEL_37;
    v52 = *(int *)(v32 + 20);
    v53 = (_QWORD *)(v30 + v52);
    v54 = &v31[v52];
    sub_23E1E2FA0((uint64_t)v53, type metadata accessor for StaticSoftwareUpdate.Kind);
    v55 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v56 = swift_getEnumCaseMultiPayload();
    switch(v56)
    {
      case 2:
        *v53 = *(_QWORD *)v54;
        v53[1] = *((_QWORD *)v54 + 1);
        v71 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v72 = *(int *)(v71 + 20);
        v100 = (char *)v53 + v72;
        v103 = v71;
        v73 = &v54[v72];
        swift_bridgeObjectRetain();
        if (v19(v73, 1, v17))
        {
LABEL_29:
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v100, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_39:
          v88 = *(int *)(v103 + 24);
          v89 = (_QWORD *)((char *)v53 + v88);
          v90 = &v54[v88];
          *v89 = *(_QWORD *)v90;
          v89[1] = *((_QWORD *)v90 + 1);
          v91 = *(int *)(v103 + 28);
          v92 = (_QWORD *)((char *)v53 + v91);
          v93 = &v54[v91];
          *v92 = *(_QWORD *)v93;
          v92[1] = *((_QWORD *)v93 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v53 + *(int *)(v94 + 48)) = v54[*(int *)(v94 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_37;
        }
        break;
      case 1:
        *v53 = *(_QWORD *)v54;
        v53[1] = *((_QWORD *)v54 + 1);
        v75 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v76 = *(int *)(v75 + 20);
        v100 = (char *)v53 + v76;
        v103 = v75;
        v73 = &v54[v76];
        swift_bridgeObjectRetain();
        if (v19(v73, 1, v17))
          goto LABEL_29;
        break;
      case 0:
        (*(void (**)(_QWORD *, char *, uint64_t))(v101 + 16))(v53, v54, v105);
        v57 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v53 + v57[5]) = v54[v57[5]];
        v58 = v57[6];
        v59 = (_QWORD *)((char *)v53 + v58);
        v60 = &v54[v58];
        *v59 = *(_QWORD *)v60;
        v59[1] = *((_QWORD *)v60 + 1);
        v61 = v57[7];
        v62 = (char *)v53 + v61;
        v63 = &v54[v61];
        v64 = v63[8];
        *(_QWORD *)v62 = *(_QWORD *)v63;
        v62[8] = v64;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      default:
        v49 = *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64);
        v50 = v53;
        v51 = v54;
        goto LABEL_16;
    }
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v100, v73, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v100, 0, 1, v17);
    goto LABEL_39;
  }
  sub_23E1E2FA0(v30, type metadata accessor for StaticSoftwareUpdate);
LABEL_15:
  v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
  v50 = (void *)v30;
  v51 = v31;
LABEL_16:
  memcpy(v50, v51, v49);
LABEL_37:
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  ((void (*)(uint64_t, uint64_t, uint64_t))v104)(a1 + a3[20], a2 + a3[20], v105);
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = a3[22];
  v85 = (_QWORD *)(a1 + v84);
  v86 = (_QWORD *)(a2 + v84);
  *v85 = *v86;
  v85[1] = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int EnumCaseMultiPayload;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _OWORD *v33;
  int *updated;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);

  v48 = sub_23E536F80();
  v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
  v49(a1, a2);
  v6 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(void))(v11 + 48);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v12)(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[18];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = type metadata accessor for StaticSoftwareUpdate(0);
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v47 = v23;
    ((void (*)(char *, char *, uint64_t))v49)(v20, v21, v48);
    v25 = *(int *)(v22 + 20);
    v26 = &v20[v25];
    v27 = &v21[v25];
    v45 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v46 = v20;
    if (EnumCaseMultiPayload == 2)
    {
      v33 = v26;
      *(_OWORD *)v26 = *(_OWORD *)v27;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v35 = updated[5];
      v43 = &v27[v35];
      v44 = (char *)v33 + v35;
      if (v12())
      {
LABEL_13:
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v44, v43, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_16:
        *(_OWORD *)((char *)v33 + updated[6]) = *(_OWORD *)&v27[updated[6]];
        *(_OWORD *)((char *)v33 + updated[7]) = *(_OWORD *)&v27[updated[7]];
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v33 + *(int *)(v38 + 48)) = v27[*(int *)(v38 + 48)];
        goto LABEL_17;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_18:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v22);
          goto LABEL_19;
        }
        ((void (*)(char *, char *, uint64_t))v49)(v26, v27, v48);
        v29 = (int *)type metadata accessor for StaticHH2Update(0);
        v26[v29[5]] = v27[v29[5]];
        *(_OWORD *)&v26[v29[6]] = *(_OWORD *)&v27[v29[6]];
        v30 = v29[7];
        v31 = &v26[v30];
        v32 = &v27[v30];
        v31[8] = v32[8];
        *(_QWORD *)v31 = *(_QWORD *)v32;
LABEL_17:
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      v33 = v26;
      *(_OWORD *)v26 = *(_OWORD *)v27;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v36 = updated[5];
      v43 = &v27[v36];
      v44 = (char *)v33 + v36;
      if (v12())
        goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v44, v43, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    goto LABEL_16;
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_19:
  v39 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(a1 + v39, a2 + v39, v48);
  v40 = a3[22];
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v40) = *(_OWORD *)(a2 + v40);
  v41 = a3[24];
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  *(_QWORD *)(a1 + v41) = *(_QWORD *)(a2 + v41);
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithTake for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  unsigned int (*v22)(void);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  int EnumCaseMultiPayload;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  _OWORD *v68;
  uint64_t updated;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  char *__src;
  uint64_t v90;
  char *__dst;
  uint64_t v92;
  unsigned int (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  v96 = *(_QWORD **)(v6 - 8);
  v7 = (void (*)(uint64_t, uint64_t, uint64_t))v96[5];
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_23E536F20();
  v99 = *(_QWORD *)(v21 - 8);
  v22 = *(unsigned int (**)(void))(v99 + 48);
  v23 = ((uint64_t (*)(void *, uint64_t, uint64_t))v22)(v19, 1, v21);
  v24 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v22)(v20, 1, v21);
  v100 = v7;
  v93 = v22;
  v25 = v6;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v99 + 32))(v19, v20, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v99 + 8))(v19, v21);
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v99 + 40))(v19, v20, v21);
LABEL_7:
  v27 = a3[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v33 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  v40 = a3[18];
  v41 = (char *)(a1 + v40);
  v42 = (char *)(a2 + v40);
  v43 = type metadata accessor for StaticSoftwareUpdate(0);
  v94 = *(_QWORD *)(v43 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 48);
  v45 = v44(v41, 1, v43);
  v46 = v44(v42, 1, v43);
  v47 = v25;
  if (v45)
  {
    if (!v46)
    {
      v48 = (void (*)(char *, char *, uint64_t))v96[4];
      v48(v41, v42, v25);
      v49 = *(int *)(v43 + 20);
      v97 = &v41[v49];
      v50 = &v42[v49];
      v92 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v52 = v100;
      if (EnumCaseMultiPayload == 2)
      {
        v68 = v97;
        *(_OWORD *)v97 = *(_OWORD *)v50;
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v70 = *(int *)(updated + 20);
        v90 = updated;
        __dst = &v97[v70];
        __src = &v50[v70];
        if (v93())
        {
LABEL_25:
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
LABEL_33:
          *(_OWORD *)((char *)v68 + *(int *)(v90 + 24)) = *(_OWORD *)&v50[*(int *)(v90 + 24)];
          *(_OWORD *)((char *)v68 + *(int *)(v90 + 28)) = *(_OWORD *)&v50[*(int *)(v90 + 28)];
          v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v68 + *(int *)(v80 + 48)) = v50[*(int *)(v80 + 48)];
          goto LABEL_34;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v97, v50, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_35:
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v41, 0, 1, v43);
            goto LABEL_36;
          }
          v48(v97, v50, v47);
          v53 = (int *)type metadata accessor for StaticHH2Update(0);
          v97[v53[5]] = v50[v53[5]];
          *(_OWORD *)&v97[v53[6]] = *(_OWORD *)&v50[v53[6]];
          v54 = v53[7];
          v55 = &v97[v54];
          v56 = &v50[v54];
          v55[8] = v56[8];
          *(_QWORD *)v55 = *(_QWORD *)v56;
LABEL_34:
          swift_storeEnumTagMultiPayload();
          goto LABEL_35;
        }
        v68 = v97;
        *(_OWORD *)v97 = *(_OWORD *)v50;
        v71 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v72 = *(int *)(v71 + 20);
        v90 = v71;
        __dst = &v97[v72];
        __src = &v50[v72];
        if (v93())
          goto LABEL_25;
      }
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(__dst, __src, v21);
      v68 = v97;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(__dst, 0, 1, v21);
      goto LABEL_33;
    }
    goto LABEL_15;
  }
  if (v46)
  {
    sub_23E1E2FA0((uint64_t)v41, type metadata accessor for StaticSoftwareUpdate);
LABEL_15:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v52 = v100;
    goto LABEL_36;
  }
  v58 = v25;
  v52 = v100;
  v100((uint64_t)v41, (uint64_t)v42, v58);
  if (a1 == a2)
    goto LABEL_36;
  v59 = *(int *)(v43 + 20);
  v60 = &v41[v59];
  v61 = &v42[v59];
  sub_23E1E2FA0((uint64_t)v60, type metadata accessor for StaticSoftwareUpdate.Kind);
  v62 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v63 = swift_getEnumCaseMultiPayload();
  if (v63 == 2)
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
    v74 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v75 = *(int *)(v74 + 20);
    v95 = v74;
    v98 = &v60[v75];
    v76 = &v61[v75];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v93)(&v61[v75], 1, v21))
    {
LABEL_28:
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v98, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
LABEL_38:
      *(_OWORD *)&v60[*(int *)(v95 + 24)] = *(_OWORD *)&v61[*(int *)(v95 + 24)];
      *(_OWORD *)&v60[*(int *)(v95 + 28)] = *(_OWORD *)&v61[*(int *)(v95 + 28)];
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      v60[*(int *)(v88 + 48)] = v61[*(int *)(v88 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_36;
    }
LABEL_37:
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v76, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v98, 0, 1, v21);
    goto LABEL_38;
  }
  if (v63 == 1)
  {
    *(_OWORD *)v60 = *(_OWORD *)v61;
    v78 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v79 = *(int *)(v78 + 20);
    v95 = v78;
    v98 = &v60[v79];
    v76 = &v61[v79];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v93)(&v61[v79], 1, v21))
      goto LABEL_28;
    goto LABEL_37;
  }
  if (v63)
  {
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v96[4])(v60, v61, v47);
    v64 = (int *)type metadata accessor for StaticHH2Update(0);
    v60[v64[5]] = v61[v64[5]];
    *(_OWORD *)&v60[v64[6]] = *(_OWORD *)&v61[v64[6]];
    v65 = v64[7];
    v66 = &v60[v65];
    v67 = &v61[v65];
    v66[8] = v67[8];
    *(_QWORD *)v66 = *(_QWORD *)v67;
    swift_storeEnumTagMultiPayload();
  }
LABEL_36:
  v81 = a3[20];
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  v52(a1 + v81, a2 + v81, v47);
  *(_QWORD *)(a1 + a3[21]) = *(_QWORD *)(a2 + a3[21]);
  swift_bridgeObjectRelease();
  v82 = a3[22];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (uint64_t *)(a2 + v82);
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[25]) = *(_QWORD *)(a2 + a3[25]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E46A89C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[18];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E46A980(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[18];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_23E46AAA0 + 4 * byte_23E5527BB[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_23E46AAD4 + 4 * byte_23E5527B6[v4]))();
}

uint64_t sub_23E46AAD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E46AADC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E46AAE4);
  return result;
}

uint64_t sub_23E46AAF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E46AAF8);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_23E46AAFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E46AB04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystem.CodingKeys()
{
  return &type metadata for StaticMediaSystem.CodingKeys;
}

unint64_t sub_23E46AB24()
{
  unint64_t result;

  result = qword_256D476D0;
  if (!qword_256D476D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552AFC, &type metadata for StaticMediaSystem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D476D0);
  }
  return result;
}

unint64_t sub_23E46AB6C()
{
  unint64_t result;

  result = qword_256D476D8;
  if (!qword_256D476D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552A6C, &type metadata for StaticMediaSystem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D476D8);
  }
  return result;
}

unint64_t sub_23E46ABB4()
{
  unint64_t result;

  result = qword_256D476E0;
  if (!qword_256D476E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E552A94, &type metadata for StaticMediaSystem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D476E0);
  }
  return result;
}

uint64_t sub_23E46ABF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569CD0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461706D6F437369 && a2 == 0xEC000000656C6269 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E569D30 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xED00006574617453 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E569D50 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E569D70 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEC00000073644979 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE900000000000073 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x800000023E56A8B0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 21;
    else
      return 22;
  }
}

uint64_t sub_23E46B50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticMediaSystem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t HMMediaSystem.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = (void *)sub_23E537538();
  v8 = objc_msgSend(v6, sel_objectForKeyedSubscript_, v7);

  if (!v8)
    goto LABEL_5;
  v20[3] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  v10 = v20[1];
  v9 = v20[2];
  sub_23E1E335C(0, &qword_256D47458);
  sub_23E1E335C(0, &qword_256D47460);
  v11 = sub_23E537B2C();
  v14 = (void *)v11;
  if (!v11)
  {
    sub_23E22C908(v10, v9);
LABEL_5:
    v12 = sub_23E536F20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  v15 = sub_23E536F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v5, 1, 1, v15);
  sub_23E45E8F4();
  sub_23E53809C();
  sub_23E22C908(v10, v9);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    v18 = a1;
    v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v5, v15);
    v18 = a1;
    v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMMediaSystem.isFavorite.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  unsigned __int8 v5;

  v1 = objc_msgSend(v0, sel_applicationData);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C48);
  result = swift_dynamicCast();
  if ((_DWORD)result)
    return v5;
  return result;
}

uint64_t HMMediaSystem.shouldShowInDashboard.getter()
{
  return sub_23E1E3394();
}

void HMMediaSystem.shouldShowInDashboard.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_34;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

uint64_t sub_23E46B9DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void (*HMMediaSystem.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMMediaSystem.shouldShowInDashboard.getter() & 1;
  return sub_23E46BA38;
}

void sub_23E46BA38(uint64_t a1)
{
  HMMediaSystem.shouldShowInDashboard.setter(*(_BYTE *)(a1 + 8));
}

void HMMediaSystem.isFavorite.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393800;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_6_5;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void (*HMMediaSystem.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMMediaSystem.isFavorite.getter() & 1;
  return sub_23E46BBF4;
}

void sub_23E46BBF4(uint64_t a1)
{
  HMMediaSystem.isFavorite.setter(*(_BYTE *)(a1 + 8));
}

uint64_t HMMediaSystem.contributesToHomeStatus.getter()
{
  return sub_23E1E3394();
}

void HMMediaSystem.contributesToHomeStatus.setter(char a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD v10[6];

  v3 = objc_msgSend(v1, sel_applicationData);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a1 & 1);
  v5 = (void *)sub_23E537538();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  v6 = objc_msgSend(v1, sel_applicationData);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  v10[4] = sub_23E393580;
  v10[5] = v7;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23E50B358;
  v10[3] = &block_descriptor_12_2;
  v8 = _Block_copy(v10);
  v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);

}

void (*HMMediaSystem.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = HMMediaSystem.contributesToHomeStatus.getter() & 1;
  return sub_23E46BDCC;
}

void sub_23E46BDCC(uint64_t a1)
{
  HMMediaSystem.contributesToHomeStatus.setter(*(_BYTE *)(a1 + 8));
}

uint64_t sub_23E46BDF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v4);
  return HMMediaSystem.dateAdded.setter((uint64_t)v4);
}

uint64_t HMMediaSystem.dateAdded.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t *boxed_opaque_existential_1;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v27;
  __int128 aBlock;
  void (*v29)(uint64_t, void *);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2DAD9C(a1, (uint64_t)v5);
  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E2DA2F4((uint64_t)v5);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
    v30 = (void *)sub_23E1E335C(0, &qword_256D47460);
    *(_QWORD *)&aBlock = v8;
  }
  else
  {
    v34 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v5, v6);
    sub_23E1EA76C(v33, &aBlock);
  }
  v10 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v30);
  v11 = sub_23E538348();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  *(_QWORD *)&aBlock = 0;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &aBlock);
  swift_unknownObjectRelease();
  v13 = (id)aBlock;
  if (v12)
  {
    v14 = sub_23E536E6C();
    v16 = v15;

    v17 = objc_msgSend(v1, sel_applicationData);
    v18 = (void *)sub_23E536E48();
    v19 = (void *)sub_23E537538();
    objc_msgSend(v17, sel_setObject_forKeyedSubscript_, v18, v19);

    v20 = objc_msgSend(v1, sel_applicationData);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v1;
    v31 = sub_23E393800;
    v32 = v21;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v29 = sub_23E50B358;
    v30 = &block_descriptor_18_0;
    v22 = _Block_copy(&aBlock);
    v23 = v1;
    swift_release();
    objc_msgSend(v23, sel_updateApplicationData_completionHandler_, v20, v22);
    _Block_release(v22);

    sub_23E22C908(v14, v16);
  }
  else
  {
    v24 = v13;
    v25 = (void *)sub_23E536D10();

    swift_willThrow();
  }
  return sub_23E2DA2F4(a1);
}

void (*HMMediaSystem.dateAdded.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  HMMediaSystem.dateAdded.getter((uint64_t)v4);
  return sub_23E46C1FC;
}

void sub_23E46C1FC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_23E2DAD9C((uint64_t)v3, (uint64_t)v2);
    HMMediaSystem.dateAdded.setter((uint64_t)v2);
    sub_23E2DA2F4((uint64_t)v3);
  }
  else
  {
    HMMediaSystem.dateAdded.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t sub_23E46C258@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMMediaSystem.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E46C284(char *a1)
{
  HMMediaSystem.shouldShowInDashboard.setter(*a1);
}

uint64_t sub_23E46C2A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMMediaSystem.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E46C2D4(char *a1)
{
  HMMediaSystem.isFavorite.setter(*a1);
}

uint64_t sub_23E46C2F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = HMMediaSystem.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_23E46C324(char *a1)
{
  HMMediaSystem.contributesToHomeStatus.setter(*a1);
}

uint64_t sub_23E46C348@<X0>(uint64_t a1@<X8>)
{
  return HMMediaSystem.dateAdded.getter(a1);
}

uint64_t sub_23E46C390(uint64_t a1)
{
  return sub_23E46C3A4(a1);
}

uint64_t sub_23E46C3A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int64_t v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v2);
  v52 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_23E536F80();
  v4 = *(_QWORD *)(v49 - 8);
  v5 = MEMORY[0x24BDAC7A8](v49);
  v44 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v42 - v7;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47738);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v48 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v42 - v10;
  v11 = *(_QWORD *)(a1 + 64);
  v46 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v53 = a1;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  v45 = MEMORY[0x24BEE4AF8];
  v17 = (uint64_t)v48;
  if (v14)
    goto LABEL_8;
LABEL_14:
  v29 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v29 < v47)
    {
      v30 = *(_QWORD *)(v46 + 8 * v29);
      v31 = v16 + 1;
      if (v30)
        goto LABEL_29;
      v31 = v16 + 2;
      if (v16 + 2 >= v47)
        goto LABEL_32;
      v30 = *(_QWORD *)(v46 + 8 * v31);
      if (v30)
        goto LABEL_29;
      v31 = v16 + 3;
      if (v16 + 3 >= v47)
        goto LABEL_32;
      v30 = *(_QWORD *)(v46 + 8 * v31);
      if (v30)
        goto LABEL_29;
      v31 = v16 + 4;
      if (v16 + 4 >= v47)
        goto LABEL_32;
      v30 = *(_QWORD *)(v46 + 8 * v31);
      if (v30)
      {
LABEL_29:
        v14 = (v30 - 1) & v30;
        v54 = v31;
        for (i = __clz(__rbit64(v30)) + (v31 << 6); ; i = v21 | (v16 << 6))
        {
          v33 = v53;
          v34 = *(_QWORD *)(v4 + 72);
          v35 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
          v36 = v49;
          v37 = (uint64_t)v50;
          v35(v50, *(_QWORD *)(v53 + 48) + v34 * i, v49);
          v38 = *(void **)(*(_QWORD *)(v33 + 56) + 8 * i);
          v39 = v51;
          *(_QWORD *)(v37 + *(int *)(v51 + 48)) = v38;
          sub_23E1E4E3C(v37, v17, &qword_256D47738);
          v40 = *(void **)(v17 + *(int *)(v39 + 48));
          v41 = v38;
          if (objc_msgSend(v40, sel_BOOLValue))
          {
            v18 = (uint64_t)v52;
            v35(v52, v17, v36);
            v19 = 0;
          }
          else
          {
            v19 = 1;
            v18 = (uint64_t)v52;
          }
          v20 = v36;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v18, v19, 1, v36);
          sub_23E1E7C64(v17, &qword_256D47738);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v18, 1, v36) == 1)
          {
            result = sub_23E1E7C64(v18, &qword_254333F50);
            v16 = v54;
            if (!v14)
              goto LABEL_14;
          }
          else
          {
            v23 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
            v24 = v43;
            v23(v43, v18, v20);
            v23(v44, (uint64_t)v24, v20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v45 = sub_23E51E540(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
            v26 = *(_QWORD *)(v45 + 16);
            v25 = *(_QWORD *)(v45 + 24);
            if (v26 >= v25 >> 1)
              v45 = sub_23E51E540(v25 > 1, v26 + 1, 1, v45);
            v27 = v44;
            v28 = v45;
            *(_QWORD *)(v45 + 16) = v26 + 1;
            result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v28+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ v26 * v34, v27, v20);
            v16 = v54;
            if (!v14)
              goto LABEL_14;
          }
LABEL_8:
          v21 = __clz(__rbit64(v14));
          v14 &= v14 - 1;
          v54 = v16;
        }
      }
      v32 = v16 + 5;
      if (v16 + 5 < v47)
      {
        v30 = *(_QWORD *)(v46 + 8 * v32);
        if (v30)
        {
          v31 = v16 + 5;
          goto LABEL_29;
        }
        while (1)
        {
          v31 = v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_34;
          if (v31 >= v47)
            break;
          v30 = *(_QWORD *)(v46 + 8 * v31);
          ++v32;
          if (v30)
            goto LABEL_29;
        }
      }
    }
LABEL_32:
    swift_release();
    return v45;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_23E46C7F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  int64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;

  v18 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v7 >= v6)
      goto LABEL_30;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    if (!v11)
      break;
LABEL_19:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v9);
    v14 = objc_msgSend(v13, sel_service);
    if (v14
      && (v15 = v14, v16 = objc_msgSend(v14, sel_accessory), v15, v16))
    {
      v17 = objc_msgSend(v16, sel_home);

      if (v17)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
    }
    else
    {

    }
  }
  v12 = v7 + 1;
  if (v7 + 1 >= v6)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
    goto LABEL_18;
  v12 = v7 + 2;
  if (v7 + 2 >= v6)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
    goto LABEL_18;
  v12 = v7 + 3;
  if (v7 + 3 >= v6)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
    goto LABEL_18;
  v12 = v7 + 4;
  if (v7 + 4 >= v6)
  {
LABEL_30:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
LABEL_18:
    v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v6)
      goto LABEL_30;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_23E46CA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[21] = a6;
  v7[22] = v6;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  return swift_task_switch();
}

uint64_t sub_23E46CA40()
{
  _QWORD *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v24;
  uint64_t v25;

  v1 = objc_msgSend(*(id *)(v0[22] + 128), sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v2 = sub_23E5377F0();

  v24 = v0;
  v25 = MEMORY[0x24BEE4AF8];
  if (v2 >> 62)
    goto LABEL_11;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E53803C())
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    while (1)
    {
      v6 = v5 ? (id)MEMORY[0x24264F148](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      v9 = v24[21];
      v10 = objc_msgSend(v6, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v11 = v2;
      v12 = sub_23E5377F0();

      swift_bridgeObjectRetain();
      v13 = sub_23E470EF8(v12, v9);
      swift_bridgeObjectRelease();
      v2 = v11;
      swift_bridgeObjectRelease();

      sub_23E2593C0(v13);
      ++v4;
      if (v8 == v3)
      {
        v14 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v25;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v14 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x24BEE4AF8];
LABEL_13:
  v14[23] = 0;
  v14[24] = v15;
  v16 = v14[22];
  swift_bridgeObjectRelease();
  v17 = *(void **)(v16 + 136);
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v18 = sub_23E5377E4();
  v14[25] = v18;
  swift_bridgeObjectRetain();
  v19 = sub_23E537538();
  v14[26] = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20 = sub_23E537538();
  v14[27] = v20;
  swift_bridgeObjectRelease();
  v14[7] = v14 + 15;
  v14[2] = v14;
  v14[3] = sub_23E46CD4C;
  v21 = swift_continuation_init();
  v14[10] = MEMORY[0x24BDAC760];
  v22 = v14 + 10;
  v22[1] = 0x40000000;
  v22[2] = sub_23E2F9588;
  v22[3] = &block_descriptor_19_0;
  v22[4] = v21;
  objc_msgSend(v17, sel_monitorAndFetchStateForCharacteristics_widgetIdentifier_kind_completion_, v18, v19, v20, v22);
  return swift_continuation_await();
}

uint64_t sub_23E46CD4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 224) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E46CDBC()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  void *v3;
  uint64_t *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  v5 = *(void **)(v0 + 120);
  v4 = *(uint64_t **)(v0 + 128);

  v6 = v5;
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  v8 = sub_23E471550(MEMORY[0x24BEE4B00], v2, v6);

  v9 = v6;
  v10 = sub_23E4718E0(v7, v2, v9);

  *v4 = v8;
  v4[1] = (uint64_t)v10;
  type metadata accessor for StateSnapshot.UpdateType(0);
  swift_storeEnumTagMultiPayload();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46CE8C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46CEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[21] = a6;
  v7[22] = v6;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  return swift_task_switch();
}

uint64_t sub_23E46CF04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[21];
  v1 = v0[22];
  v3 = objc_msgSend(*(id *)(v1 + 128), sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v4 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v0[23] = sub_23E471C40(v4, v2);
  v0[24] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = *(void **)(v1 + 136);
  sub_23E1E335C(0, &qword_254332C00);
  v6 = sub_23E5377E4();
  v0[25] = v6;
  swift_bridgeObjectRetain();
  v7 = sub_23E537538();
  v0[26] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8 = sub_23E537538();
  v0[27] = v8;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23E46D0C4;
  v9 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v10 = v0 + 10;
  v10[1] = 0x40000000;
  v10[2] = sub_23E2F9588;
  v10[3] = &block_descriptor_35;
  v10[4] = v9;
  objc_msgSend(v5, sel_monitorAndFetchStateForActionSets_widgetIdentifier_kind_completion_, v6, v7, v8, v10);
  return swift_continuation_await();
}

uint64_t sub_23E46D0C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 224) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E46D130()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(void **)(v0 + 120);
  v4 = *(_QWORD **)(v0 + 128);

  v6 = objc_msgSend(v5, sel_isOnByActionSetUniqueIdentifier);
  sub_23E536F80();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  sub_23E1EE1C4(&qword_254333DA0, v7, MEMORY[0x24BDCEA88]);
  v8 = sub_23E537460();

  v9 = sub_23E46C3A4(v8);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel_didExecutionFailByActionSetUniqueIdentifier);
  v11 = sub_23E537460();

  v12 = sub_23E46C3A4(v11);
  swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v9;
  v4[2] = v12;
  type metadata accessor for StateSnapshot.UpdateType(0);
  swift_storeEnumTagMultiPayload();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46D29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v5 = type metadata accessor for StateSnapshot(0);
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v3[19] = v6;
  v3[20] = *(_QWORD *)(v6 - 8);
  v3[21] = swift_task_alloc();
  v7 = sub_23E536F80();
  v3[22] = v7;
  v3[23] = *(_QWORD *)(v7 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v8 = swift_task_alloc();
  v3[31] = v8;
  v9 = (_QWORD *)swift_task_alloc();
  v3[32] = v9;
  *v9 = v3;
  v9[1] = sub_23E46D460;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v8, a2, 1);
}

uint64_t sub_23E46D460()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E46D4C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_23E5378F8();
  *(_QWORD *)(v0 + 280) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E46D534()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E46D598()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E46D5F8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 296) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E46D640()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = sub_23E536F44();
  *(_QWORD *)(v0 + 312) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E46D6AC()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)v0[38];
  v2 = (void *)v0[37];
  v3 = v0[31];
  swift_release();
  v0[40] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_23E1E2FA0(v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  return swift_task_switch();
}

uint64_t sub_23E46D730()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 320);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 80);
    v3 = objc_msgSend(v1, sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v4 = *(_QWORD *)(v2 + 112);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = sub_23E1E3300(*(_QWORD *)(v0 + 208));
      v6 = *(_QWORD *)(v0 + 240);
      v7 = *(_QWORD *)(v0 + 120);
      v8 = *(_QWORD *)(v0 + 128);
      if ((v9 & 1) != 0)
      {
        sub_23E40BD30(*(_QWORD *)(v4 + 56) + *(_QWORD *)(v8 + 72) * v5, *(_QWORD *)(v0 + 240));
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v10(v6, 0, 1, v7);
      }
      else
      {
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v10(*(_QWORD *)(v0 + 240), 1, 1, v7);
      }
    }
    else
    {
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 56);
      v10(*(_QWORD *)(v0 + 240), 1, 1, *(_QWORD *)(v0 + 120));
    }
    *(_QWORD *)(v0 + 328) = v10;
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 128);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
    {
      v23 = *(_QWORD *)(v0 + 200);
      v24 = *(_QWORD *)(v0 + 176);
      v25 = *(_QWORD *)(v0 + 184);
      v26 = *(_QWORD *)(v0 + 168);
      v27 = objc_msgSend(*(id *)(v0 + 320), sel_uniqueIdentifier);
      sub_23E536F68();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 336) = v28;
      *v28 = v0;
      v28[1] = sub_23E46DCAC;
      return sub_23E3155DC(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 168));
    }
    else
    {
      sub_23E1E7C20(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224), &qword_254334340);
      v29 = *(void **)(v0 + 320);
      v30 = *(_QWORD *)(v0 + 232);
      v31 = *(_QWORD *)(v0 + 216);
      v32 = *(_QWORD **)(v0 + 112);
      v33 = *(_QWORD *)(v0 + 80);
      sub_23E1E4E3C(*(_QWORD *)(v0 + 224), v30, &qword_254334340);
      *v32 = v29;
      swift_storeEnumTagMultiPayload();
      v34 = *(void **)(v33 + 128);
      *(_QWORD *)(v0 + 352) = v34;
      sub_23E1E7C20(v30, v31, &qword_254334340);
      v35 = qword_2543331D8;
      v36 = v29;
      v37 = v34;
      if (v35 != -1)
        swift_once();
      v38 = *(void **)(v0 + 320);
      v39 = *(_QWORD *)(v0 + 216);
      v40 = *(_QWORD **)(v0 + 144);
      v41 = *(_QWORD *)(v0 + 112);
      v42 = *(_QWORD *)(v0 + 72);
      v43 = qword_2543331D0;
      swift_bridgeObjectRetain();
      StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v41, v37, v38, v39, v43, v40);
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47720);
      *(_QWORD *)(v0 + 360) = v44;
      v45 = *(int *)(v44 + 44);
      *(_DWORD *)(v0 + 400) = v45;
      v46 = (uint64_t *)(v42 + v45);
      v47 = *(_QWORD *)(v42 + *(int *)(v44 + 36));
      v48 = *v46;
      v49 = v46[1];
      v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256D47728
                                                                                         + dword_256D47728);
      v50 = v46[2];
      v51 = v46[3];
      v52 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 368) = v52;
      *v52 = v0;
      v52[1] = sub_23E46DD24;
      return v53(*(_QWORD *)(v0 + 104), v48, v49, v50, v51, v47);
    }
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 72);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE1C4(&qword_256D43020, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v15 = v14;
    sub_23E1E7C20(v13, v14, &qword_254333F50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 3, v11);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E46DBC0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46DCAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 344) = v0;
  swift_task_dealloc();
  sub_23E1E7C64(*(_QWORD *)(v2 + 168), &qword_254333F50);
  return swift_task_switch();
}

uint64_t sub_23E46DD24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E46DD88()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 352);
  v3 = *(void **)(v0 + 320);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 328);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD **)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = (uint64_t *)(v8 + *(int *)(v0 + 400));
  sub_23E40BD30(v5, v4);
  v2(v4, 0, 1, v7);
  v10 = qword_2543331D0;
  v11 = v3;
  v12 = v1;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v20, v12, v11, v4, v10, v6);
  sub_23E1E2FA0(v5, type metadata accessor for StateSnapshot);
  sub_23E1FDC80((uint64_t)v6, v5);
  v13 = *(_QWORD *)(v8 + *(int *)(v21 + 40));
  v14 = *v9;
  v15 = v9[1];
  v16 = v9[2];
  v17 = v9[3];
  v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256D47730
                                                                                     + dword_256D47730);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v18;
  *v18 = v0;
  v18[1] = sub_23E46DED4;
  return v22(*(_QWORD *)(v0 + 96), v14, v15, v16, v17, v13);
}

uint64_t sub_23E46DED4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E46DF38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 144);

  sub_23E1E2FA0(v3, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v1, &qword_254334340);
  sub_23E1E7C64(v2, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46E064()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void (*v14)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 320);
  v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 328);
  v17 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 216);
  v14 = v3;
  v15 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD **)(v0 + 64);
  sub_23E40BD30(v5, v4);
  v3(v4, 0, 1, v6);
  v9 = qword_2543331D0;
  v10 = v2;
  v11 = v1;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v7, v11, v10, v4, v9, v8);
  sub_23E1E2FA0(v5, type metadata accessor for StateSnapshot);
  v12 = objc_msgSend(v10, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E40BD30((uint64_t)v8, v4);
  v14(v4, 0, 1, v6);
  swift_beginAccess();
  sub_23E1FDC5C(v4, v15);
  swift_endAccess();

  sub_23E1E7C64(v16, &qword_254334340);
  sub_23E1E7C64(v17, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46E298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 144);

  sub_23E1E2FA0(v3, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v1, &qword_254334340);
  sub_23E1E7C64(v2, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46E3C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v0 + 328))(*(_QWORD *)(v0 + 224), 0, 1, *(_QWORD *)(v0 + 120));
  v1 = *(void **)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD **)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 80);
  sub_23E1E4E3C(*(_QWORD *)(v0 + 224), v2, &qword_254334340);
  *v4 = v1;
  swift_storeEnumTagMultiPayload();
  v6 = *(void **)(v5 + 128);
  *(_QWORD *)(v0 + 352) = v6;
  sub_23E1E7C20(v2, v3, &qword_254334340);
  v7 = qword_2543331D8;
  v8 = v1;
  v9 = v6;
  if (v7 != -1)
    swift_once();
  v10 = *(void **)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD **)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = qword_2543331D0;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v13, v9, v10, v11, v15, v12);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47720);
  *(_QWORD *)(v0 + 360) = v16;
  v17 = *(int *)(v16 + 44);
  *(_DWORD *)(v0 + 400) = v17;
  v18 = (uint64_t *)(v14 + v17);
  v19 = *(_QWORD *)(v14 + *(int *)(v16 + 36));
  v20 = *v18;
  v21 = v18[1];
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256D47728
                                                                                     + dword_256D47728);
  v22 = v18[2];
  v23 = v18[3];
  v24 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v24;
  *v24 = v0;
  v24[1] = sub_23E46DD24;
  return v26(*(_QWORD *)(v0 + 104), v20, v21, v22, v23, v19);
}

uint64_t sub_23E46E564()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);

  sub_23E1E7C64(v1, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[39] = a2;
  v3[40] = v2;
  v3[38] = a1;
  v3[41] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v4 = sub_23E536F80();
  v3[49] = v4;
  v3[50] = *(_QWORD *)(v4 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E46E7A8()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[39];
  v0[58] = *(_QWORD *)(v0[40] + 136);
  v0[59] = v1[3];
  v0[60] = v1[4];
  v0[61] = *v1;
  return swift_task_switch();
}

uint64_t sub_23E46E7E0()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[58];
  sub_23E1E335C(0, qword_256D42920);
  v2 = sub_23E5377E4();
  v0[62] = v2;
  swift_bridgeObjectRetain();
  v3 = sub_23E537538();
  v0[63] = v3;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_23E46E8D8;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_21_0;
  v5[4] = v4;
  objc_msgSend(v1, sel_performRequests_forKind_completion_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_23E46E8D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 512) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E46E938()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0 + 496);

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 520) = v2;
  *v2 = v0;
  v2[1] = sub_23E46E98C;
  return sub_23E313064();
}

uint64_t sub_23E46E98C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 528) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 536) = a1;
  return swift_task_switch();
}

uint64_t sub_23E46EA00()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 504);
  v2 = *(void **)(v0 + 496);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46EB00()
{
  _QWORD *v0;
  unint64_t v1;
  id v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t j;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  void (*v63)(uint64_t, uint64_t);
  id v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  id v91;
  void *v92;
  id v93;
  void *v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  id v108;
  void *v109;
  id v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(void);
  uint64_t *v129;
  uint64_t v130;
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  char v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(uint64_t, uint64_t);
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t);
  _QWORD *v171;
  unint64_t v172;

  isUniquelyReferenced_nonNull_native = (uint64_t)v0;
  v4 = (_QWORD *)v0[67];
  v5 = v0[61];
  v6 = objc_msgSend(v4, sel_uniqueIdentifier);

  sub_23E536F68();
  v172 = MEMORY[0x24BEE4AF8];
  if (!(v5 >> 62))
  {
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v171 = v0;
    if (v7)
      goto LABEL_3;
LABEL_44:
    swift_bridgeObjectRelease_n();
    v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v32 = MEMORY[0x24BEE4AF8];
    v167 = MEMORY[0x24BEE4AF8];
    goto LABEL_45;
  }
  if ((uint64_t)v0[61] < 0)
    v4 = (_QWORD *)v0[61];
  else
    v4 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain_n();
  v7 = sub_23E53803C();
  v171 = v0;
  if (!v7)
    goto LABEL_44;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
LABEL_111:
    swift_bridgeObjectRetain();
    v115 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v115)
      goto LABEL_112;
LABEL_62:
    if ((v1 & 0xC000000000000001) != 0)
    {
      v53 = (id)MEMORY[0x24264F148](0, v1);
    }
    else
    {
      if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_119:
        swift_once();
LABEL_74:
        v82 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 416);
        v83 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 352);
        v84 = *(_QWORD **)(isUniquelyReferenced_nonNull_native + 360);
        v85 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 336);
        v86 = qword_2543331D0;
        swift_bridgeObjectRetain();
        StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v85, v2, (void *)v7, v83, v86, v84);
        v87 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v84, 0, 1, v87);
        swift_beginAccess();
        sub_23E1FDC5C((uint64_t)v84, v82);
        swift_endAccess();

        v32 = v168;
LABEL_75:
        v172 = v32;
        swift_bridgeObjectRetain();
        v88 = (uint64_t)&v172;
        sub_23E2593CC(v167);
        v36 = v172;
        if (v172 >> 62)
        {
LABEL_105:
          if (v36 < 0)
            v88 = v36;
          else
            v88 = v36 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v89 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (v89)
          {
LABEL_77:
            v172 = MEMORY[0x24BEE4AF8];
            if (v89 < 1)
            {
              __break(1u);
            }
            else
            {
              swift_bridgeObjectRetain();
              for (i = 0; i != v89; ++i)
              {
                if ((v36 & 0xC000000000000001) != 0)
                  v91 = (id)MEMORY[0x24264F148](i, v36);
                else
                  v91 = *(id *)(v36 + 8 * i + 32);
                v92 = v91;
                v93 = objc_msgSend(v91, sel_home);

                if (v93)
                {
                  MEMORY[0x24264EA70]();
                  if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_23E537820();
                  sub_23E53785C();
                  sub_23E537808();
                }
              }
              swift_bridgeObjectRelease();
              v88 = v172;
              if (!(v172 >> 62))
              {
                v94 = *(void **)((v172 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v94)
                  goto LABEL_89;
                goto LABEL_115;
              }
            }
            swift_bridgeObjectRetain();
            v94 = (void *)sub_23E53803C();
            swift_bridgeObjectRelease();
            if (v94)
            {
LABEL_89:
              if ((v88 & 0xC000000000000001) != 0)
              {
                v96 = (id)MEMORY[0x24264F148](0, v88);
                v95 = v168;
              }
              else
              {
                v95 = v168;
                if (!*(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_122;
                }
                v96 = *(id *)(v88 + 32);
              }
              v97 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 448);
              v98 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 456);
              v100 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
              v99 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 400);
              swift_bridgeObjectRelease();
              v101 = objc_msgSend(v96, sel_uniqueIdentifier);
              sub_23E536F68();

              v166 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
              v166(v98, v100);
              v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32);
              v170(v98, v97, v100);
              v102 = objc_msgSend(v96, sel_uniqueIdentifier);
              sub_23E536F68();

              v94 = v96;
              if (!(v95 >> 62))
              {
                v103 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v103)
                {
LABEL_94:
                  v172 = MEMORY[0x24BEE4AF8];
                  result = sub_23E2058F8(0, v103 & ~(v103 >> 63), 0);
                  if (v103 < 0)
                  {
                    __break(1u);
LABEL_141:
                    __break(1u);
                    return result;
                  }
                  v104 = 0;
                  v105 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 400);
                  v106 = v172;
                  v107 = v95 & 0xC000000000000001;
                  do
                  {
                    if (v107)
                      v108 = (id)MEMORY[0x24264F148](v104, v168);
                    else
                      v108 = *(id *)(v168 + 8 * v104 + 32);
                    v109 = v108;
                    v110 = objc_msgSend(v108, sel_uniqueIdentifier);
                    sub_23E536F68();

                    v172 = v106;
                    v112 = *(_QWORD *)(v106 + 16);
                    v111 = *(_QWORD *)(v106 + 24);
                    if (v112 >= v111 >> 1)
                    {
                      sub_23E2058F8(v111 > 1, v112 + 1, 1);
                      v106 = v172;
                    }
                    v113 = v171[53];
                    v114 = v171[49];
                    ++v104;
                    *(_QWORD *)(v106 + 16) = v112 + 1;
                    v170(v106+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v112, v113, v114);
                  }
                  while (v103 != v104);
                  swift_bridgeObjectRelease();
                  isUniquelyReferenced_nonNull_native = (uint64_t)v171;
                  goto LABEL_124;
                }
LABEL_123:
                swift_bridgeObjectRelease();
                v106 = MEMORY[0x24BEE4AF8];
LABEL_124:
                v129 = *(uint64_t **)(isUniquelyReferenced_nonNull_native + 344);
                v130 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 320);
                *v129 = v36;
                v129[1] = v106;
                v129[2] = MEMORY[0x24BEE4AF8];
                swift_storeEnumTagMultiPayload();
                v131 = *(id *)(v130 + 128);
                v132 = v94;
                v133 = objc_msgSend(v132, sel_uniqueIdentifier);
                sub_23E536F68();

                swift_beginAccess();
                v134 = *(_QWORD *)(v130 + 112);
                if (*(_QWORD *)(v134 + 16))
                {
                  v135 = sub_23E1E3300(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 432));
                  v136 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 368);
                  if ((v137 & 1) != 0)
                  {
                    v138 = v135;
                    v139 = *(_QWORD *)(v134 + 56);
                    v140 = type metadata accessor for StateSnapshot(0);
                    v141 = *(_QWORD *)(v140 - 8);
                    sub_23E40BD30(v139 + *(_QWORD *)(v141 + 72) * v138, v136);
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v141 + 56))(v136, 0, 1, v140);
                  }
                  else
                  {
                    v144 = type metadata accessor for StateSnapshot(0);
                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v136, 1, 1, v144);
                  }
                }
                else
                {
                  v142 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 368);
                  v143 = type metadata accessor for StateSnapshot(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v142, 1, 1, v143);
                }
                v145 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 432);
                v146 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
                swift_endAccess();
                v166(v145, v146);
                if (qword_2543331D8 != -1)
                  swift_once();
                v147 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 440);
                v149 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 368);
                v148 = *(_QWORD **)(isUniquelyReferenced_nonNull_native + 376);
                v150 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 344);
                v151 = qword_2543331D0;
                swift_bridgeObjectRetain();
                StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v150, v131, v132, v149, v151, v148);
                v152 = type metadata accessor for StateSnapshot(0);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v148, 0, 1, v152);
                swift_beginAccess();
                sub_23E1FDC5C((uint64_t)v148, v147);
                swift_endAccess();

LABEL_132:
                v153 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 320);
                swift_beginAccess();
                v154 = *(_QWORD *)(v153 + 112);
                if (*(_QWORD *)(v154 + 16))
                {
                  v155 = sub_23E1E3300(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 456));
                  v156 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 384);
                  if ((v157 & 1) != 0)
                  {
                    v158 = v155;
                    v159 = *(_QWORD *)(v154 + 56);
                    v160 = type metadata accessor for StateSnapshot(0);
                    v161 = *(_QWORD *)(v160 - 8);
                    sub_23E40BD30(v159 + *(_QWORD *)(v161 + 72) * v158, v156);
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v161 + 56))(v156, 0, 1, v160);
                  }
                  else
                  {
                    v160 = type metadata accessor for StateSnapshot(0);
                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v156, 1, 1, v160);
                  }
                }
                else
                {
                  v162 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 384);
                  v160 = type metadata accessor for StateSnapshot(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v162, 1, 1, v160);
                }
                v163 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 384);
                swift_endAccess();
                type metadata accessor for StateSnapshot(0);
                result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 48))(v163, 1, v160);
                if ((_DWORD)result != 1)
                {
                  v164 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 384);
                  v165 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 304);
                  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 400) + 8))(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 456), *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392));
                  sub_23E1FDC80(v164, v165);
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  v128 = *(uint64_t (**)(void))(isUniquelyReferenced_nonNull_native + 8);
                  return v128();
                }
                goto LABEL_141;
              }
LABEL_122:
              swift_bridgeObjectRetain();
              v103 = sub_23E53803C();
              swift_bridgeObjectRelease();
              if (v103)
                goto LABEL_94;
              goto LABEL_123;
            }
LABEL_115:
            v122 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 456);
            v124 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
            v123 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 400);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            type metadata accessor for WidgetSnapshotModerator.Error();
            sub_23E1EE1C4(&qword_256D43020, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
            swift_allocError();
            v126 = v125;
            v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v126, 1, 3, v127);
            swift_willThrow();
            (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v122, v124);
            goto LABEL_116;
          }
        }
        else
        {
          v89 = *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v89)
            goto LABEL_77;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_132;
      }
      v53 = *(id *)(v1 + 32);
    }
    v54 = v53;
    v56 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 448);
    v55 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 456);
    v57 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 400);
    v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 408);
    v58 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    v59 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
    v60 = (_QWORD *)v58[42];
    v166 = (void (*)(uint64_t, uint64_t))v58[41];
    v61 = v58[40];
    swift_bridgeObjectRelease();
    v62 = objc_msgSend(v54, sel_uniqueIdentifier);
    sub_23E536F68();

    v63 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v63(v55, v59);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v55, v56, v59);
    v64 = objc_msgSend(v54, sel_uniqueIdentifier);
    sub_23E536F68();

    v65 = sub_23E20D3D0(MEMORY[0x24BEE4AF8]);
    *v60 = v4;
    v60[1] = v65;
    swift_storeEnumTagMultiPayload();
    v2 = *(id *)(v61 + 128);
    v7 = v54;
    v66 = objc_msgSend((id)v7, sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v67 = *(_QWORD *)(v61 + 112);
    if (*(_QWORD *)(v67 + 16))
    {
      v170 = (void (*)(uint64_t, uint64_t, uint64_t))v63;
      v68 = v2;
      v69 = sub_23E1E3300(v58[51]);
      v70 = v58[44];
      isUniquelyReferenced_nonNull_native = (uint64_t)v58;
      if ((v71 & 1) != 0)
      {
        v72 = v69;
        v73 = *(_QWORD *)(v67 + 56);
        v74 = type metadata accessor for StateSnapshot(0);
        v75 = *(_QWORD *)(v74 - 8);
        sub_23E40BD30(v73 + *(_QWORD *)(v75 + 72) * v72, v70);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v70, 0, 1, v74);
      }
      else
      {
        v79 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v70, 1, 1, v79);
      }
      v2 = v68;
      v63 = (void (*)(uint64_t, uint64_t))v170;
    }
    else
    {
      v77 = v58[44];
      v78 = type metadata accessor for StateSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 1, 1, v78);
      isUniquelyReferenced_nonNull_native = (uint64_t)v58;
    }
    v80 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 408);
    v81 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
    swift_endAccess();
    v63(v80, v81);
    if (qword_2543331D8 == -1)
      goto LABEL_74;
    goto LABEL_119;
  }
  v8 = 0;
  v9 = v5 & 0xC000000000000001;
  v10 = v0[61] + 32;
  do
  {
    if (v9)
      v11 = (id)MEMORY[0x24264F148](v8, v171[61]);
    else
      v11 = *(id *)(v10 + 8 * v8);
    v12 = v11;
    objc_opt_self();
    v13 = swift_dynamicCastObjCClass();
    if (!v13 || (v14 = (void *)v13, objc_opt_self(), swift_dynamicCastObjCClass()))
    {

    }
    else
    {
      v15 = objc_msgSend(v14, sel_actionSet);

      if (v15)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
    }
    ++v8;
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  v169 = v172;
  swift_bridgeObjectRelease();
  v172 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain_n();
  for (j = 0; j != v7; ++j)
  {
    if (v9)
      v17 = (id)MEMORY[0x24264F148](j, v171[61]);
    else
      v17 = *(id *)(v10 + 8 * j);
    v18 = v17;
    objc_opt_self();
    v19 = (void *)swift_dynamicCastObjCClass();
    if (v19)
    {
      v20 = objc_msgSend(v19, sel_actionSet);

      if (v20)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v167 = v172;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  v21 = 0;
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if (v9)
      v23 = (id)MEMORY[0x24264F148](v21, v171[61]);
    else
      v23 = *(id *)(v10 + 8 * v21);
    v24 = v23;
    objc_opt_self();
    v25 = (void *)swift_dynamicCastObjCClass();
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_characteristic);
      v28 = objc_msgSend(v26, sel_value);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v22 = sub_23E51E5B8(0, v22[2] + 1, 1, v22);
      v30 = v22[2];
      v29 = v22[3];
      if (v30 >= v29 >> 1)
        v22 = sub_23E51E5B8((_QWORD *)(v29 > 1), v30 + 1, 1, v22);
      v22[2] = v30 + 1;
      v31 = &v22[2 * v30];
      v31[4] = v27;
      v31[5] = v28;
    }
    else
    {

    }
    ++v21;
  }
  while (v7 != v21);
  isUniquelyReferenced_nonNull_native = (uint64_t)v171;
  swift_bridgeObjectRelease_n();
  v32 = v169;
LABEL_45:
  v33 = v22[2];
  v168 = v32;
  if (!v33)
  {
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  v170 = (void (*)(uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 120);
  v2 = (id)(isUniquelyReferenced_nonNull_native + 152);
  swift_bridgeObjectRetain();
  v34 = v22 + 5;
  v4 = (_QWORD *)MEMORY[0x24BEE4B00];
  do
  {
    v35 = (void *)*(v34 - 1);
    v36 = *v34;
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 144) = swift_getObjectType();
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 120) = v36;
    sub_23E1E4E3C((uint64_t)v170, (uint64_t)v2, &qword_254332260);
    v37 = v35;
    swift_unknownObjectRetain_n();
    v38 = v37;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v172 = (unint64_t)v4;
    v40 = sub_23E1EE554((uint64_t)v38);
    v41 = v4[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
    {
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    v44 = v39;
    if (v4[3] >= v43)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)v171;
        if ((v39 & 1) != 0)
          goto LABEL_47;
      }
      else
      {
        sub_23E21DC50();
        v4 = (_QWORD *)v172;
        isUniquelyReferenced_nonNull_native = (uint64_t)v171;
        if ((v44 & 1) != 0)
          goto LABEL_47;
      }
    }
    else
    {
      sub_23E1EFD84(v43, isUniquelyReferenced_nonNull_native);
      v4 = (_QWORD *)v172;
      v45 = sub_23E1EE554((uint64_t)v38);
      if ((v44 & 1) != (v46 & 1))
      {
        sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        return sub_23E5383C0();
      }
      v40 = v45;
      isUniquelyReferenced_nonNull_native = (uint64_t)v171;
      if ((v44 & 1) != 0)
      {
LABEL_47:
        sub_23E266094((uint64_t)v2, v4[7] + 32 * v40);
        goto LABEL_48;
      }
    }
    v4[(v40 >> 6) + 8] |= 1 << v40;
    *(_QWORD *)(v4[6] + 8 * v40) = v38;
    sub_23E1E4E3C((uint64_t)v2, v4[7] + 32 * v40, &qword_254332260);
    v47 = v4[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_104;
    v4[2] = v49;
    v50 = v38;
LABEL_48:
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    v34 += 2;
    --v33;
  }
  while (v33);
  v7 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 528);
  swift_bridgeObjectRelease_n();
  v51 = swift_bridgeObjectRetain();
  sub_23E46C7F0(v51);
  v1 = v52;
  swift_bridgeObjectRelease();
  if (v1 >> 62)
    goto LABEL_111;
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_62;
LABEL_112:
  v116 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 456);
  v118 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 392);
  v117 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 400);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetSnapshotModerator.Error();
  sub_23E1EE1C4(&qword_256D43020, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
  swift_allocError();
  v120 = v119;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v120, 1, 3, v121);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
LABEL_116:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v128 = *(uint64_t (**)(void))(isUniquelyReferenced_nonNull_native + 8);
  return v128();
}

uint64_t sub_23E46FDF4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E46FEE0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = v3;
  *(double *)(v4 + 72) = a3;
  *(_QWORD *)(v4 + 56) = a1;
  *(_QWORD *)(v4 + 64) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E46FF64()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t, uint64_t);

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 80) + 144) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 64);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D476F0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D47718 + dword_256D47718);
        v3 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 136) = v3;
        *v3 = v0;
        v3[1] = sub_23E4701D4;
        v4 = *(_QWORD *)(v0 + 96);
        v5 = *(_QWORD *)(v0 + 64);
      }
      else
      {
        v9 = *(_OWORD *)v1;
        v10 = *(_OWORD *)(v1 + 16);
        *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 32);
        *(_OWORD *)(v0 + 16) = v9;
        *(_OWORD *)(v0 + 32) = v10;
        v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D47710 + dword_256D47710);
        v11 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 152) = v11;
        *v11 = v0;
        v11[1] = sub_23E470238;
        v4 = *(_QWORD *)(v0 + 96);
        v5 = v0 + 16;
      }
      return v12(v4, v5);
    }
    else
    {
      sub_23E1E7C20(v1, *(_QWORD *)(v0 + 88), &qword_254333F50);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v8;
      *v8 = v0;
      v8[1] = sub_23E470154;
      return sub_23E3155DC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88));
    }
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v6;
    *v6 = v0;
    v6[1] = sub_23E4700F0;
    return WidgetSnapshotModerator.updateHomes(timeout:)(*(double *)(v0 + 72));
  }
}

uint64_t sub_23E4700F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E470154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  sub_23E1E7C64(v2, &qword_254333F50);
  return swift_task_switch();
}

uint64_t sub_23E4701D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E470238()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E47029C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_23E1FDC80(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 56));
  sub_23E1E7C64(v1, &qword_256D476F0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E470300()
{
  uint64_t v0;

  sub_23E1E7C64(*(_QWORD *)(v0 + 64), &qword_256D476F0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E470358()
{
  uint64_t v0;

  sub_23E1E7C64(*(_QWORD *)(v0 + 64), &qword_256D476F0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4703B0()
{
  uint64_t v0;

  sub_23E1E7C64(*(_QWORD *)(v0 + 64), &qword_256D476F0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E470408()
{
  uint64_t v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D476F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D47718 + dword_256D47718);
      v3 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v3;
      *v3 = v0;
      v3[1] = sub_23E4701D4;
      v4 = *(_QWORD *)(v0 + 96);
      v5 = *(_QWORD *)(v0 + 64);
    }
    else
    {
      v8 = *(_OWORD *)v1;
      v9 = *(_OWORD *)(v1 + 16);
      *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 32);
      *(_OWORD *)(v0 + 16) = v8;
      *(_OWORD *)(v0 + 32) = v9;
      v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D47710 + dword_256D47710);
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 152) = v10;
      *v10 = v0;
      v10[1] = sub_23E470238;
      v4 = *(_QWORD *)(v0 + 96);
      v5 = v0 + 16;
    }
    return v11(v4, v5);
  }
  else
  {
    sub_23E1E7C20(v1, *(_QWORD *)(v0 + 88), &qword_254333F50);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v6;
    *v6 = v0;
    v6[1] = sub_23E470154;
    return sub_23E3155DC(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_23E470548()
{
  uint64_t v0;

  sub_23E1E7C64(*(_QWORD *)(v0 + 64), &qword_256D476F0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E4705A0(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char v7;
  uint64_t v9;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_23E536F68();

  type metadata accessor for StaticActionSet();
  v7 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t StaticActionSet.toggle(options:context:)(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D476F0);
  v7 = swift_task_alloc();
  v8 = *a2;
  *(_QWORD *)(v4 + 40) = v7;
  *(_QWORD *)(v4 + 48) = v8;
  v9 = a3[1];
  *(_OWORD *)(v4 + 56) = *a3;
  *(_OWORD *)(v4 + 72) = v9;
  return swift_task_switch();
}

uint64_t sub_23E4706EC()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v3;

  if ((v0[6] & 0x400) != 0 && (unint64_t)v0[8] >= 2 && v0[10])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v1 = (_QWORD *)swift_task_alloc();
    v0[11] = (uint64_t)v1;
    *v1 = v0;
    v1[1] = sub_23E4707B4;
    v1[2] = v0[3];
    return swift_task_switch();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v0[26] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = sub_23E470EA8;
    return StaticActionSet.toggle()(v0[2]);
  }
}

uint64_t sub_23E4707B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E470810()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 96);
  if (!v1)
    goto LABEL_6;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = objc_msgSend(*(id *)(v0 + 96), sel_actionSets);
  sub_23E1E335C(0, &qword_254332C00);
  v4 = sub_23E5377F0();

  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  v6 = sub_23E206BB0(sub_23E2098DC, v5, v4);
  *(_QWORD *)(v0 + 104) = v6;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v6)
  {
    type metadata accessor for StaticActionSet();
    v7 = objc_msgSend((id)objc_opt_self(), sel_executeRequestWithActionSet_, v6);
    *(_QWORD *)(v0 + 112) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_23E539640;
    *(_QWORD *)(v8 + 32) = v7;
    v12 = v8;
    sub_23E537808();
    *(_QWORD *)(v0 + 120) = v12;
    v9 = qword_256D3EDC0;
    v10 = v7;
    if (v9 != -1)
      swift_once();
    return swift_task_switch();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E472310();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E470A10()
{
  uint64_t v0;

  type metadata accessor for WidgetDataModel();
  *(_QWORD *)(v0 + 128) = swift_initStaticObject();
  return swift_task_switch();
}

uint64_t sub_23E470A5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v2 = v0[9];
  v1 = v0[10];
  v4 = v0[7];
  v3 = v0[8];
  v5 = (_QWORD *)v0[5];
  *v5 = v0[15];
  v5[1] = v4;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_storeEnumTagMultiPayload();
  v0[17] = qword_256D42FC0;
  v8 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_23E470AE8;
  return v8();
}

uint64_t sub_23E470AE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 152) = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v4;
  *v4 = v3;
  v4[1] = sub_23E470B6C;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_23E470B6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 168) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  v5 = (uint64_t (*)(void))((char *)&dword_256D43080 + dword_256D43080);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 176) = v4;
  *v4 = v2;
  v4[1] = sub_23E470C1C;
  return v5();
}

uint64_t sub_23E470C1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, double);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 184) = a1;
  swift_task_dealloc();
  v6 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_256D47708 + dword_256D47708);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[24] = v4;
  *v4 = v3;
  v4[1] = sub_23E470CB8;
  return v6(v2[2], v2[5], 20.0);
}

uint64_t sub_23E470CB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E470D30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_23E1E7C64(v1, &qword_256D476F0);

  return swift_task_switch();
}

uint64_t sub_23E470D88()
{
  return swift_task_switch();
}

uint64_t sub_23E470D9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 16);

  v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E470E04()
{
  uint64_t v0;

  return swift_task_switch();
}

uint64_t sub_23E470E40()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 16);

  v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E470EA8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E470EF8(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  BOOL v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t, uint64_t);
  id v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  char v37;
  void (*v38)(_BYTE *, uint64_t);
  _BYTE *v39;
  _BYTE v41[16];
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  unint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  void (*v65)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v63 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v66 = &v41[-v11];
  v69 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_49;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
LABEL_3:
  v13 = 0;
  v45 = a1 & 0xC000000000000001;
  v42 = a1 + 32;
  v54 = a2;
  v44 = a1;
  v43 = v12;
  v62 = v6;
LABEL_6:
  if (v45)
  {
    v15 = (id)MEMORY[0x24264F148](v13, a1);
    v16 = __OFADD__(v13, 1);
    v17 = v13 + 1;
    if (v16)
      goto LABEL_48;
  }
  else
  {
    v15 = *(id *)(v42 + 8 * v13);
    v16 = __OFADD__(v13, 1);
    v17 = v13 + 1;
    if (v16)
      goto LABEL_48;
  }
  v47 = v17;
  v46 = v15;
  v18 = objc_msgSend(v15, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v19 = sub_23E5377F0();

  v68 = MEMORY[0x24BEE4AF8];
  v49 = v19;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = sub_23E53803C();
    if (!a1)
    {
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x24BEE4AF8];
      goto LABEL_5;
    }
  }
  else
  {
    a1 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!a1)
      goto LABEL_43;
  }
  v20 = 0;
  v50 = a1;
  v51 = v49 & 0xC000000000000001;
  v48 = v49 + 32;
  while (1)
  {
    if (v51)
      v22 = (id)MEMORY[0x24264F148](v20, v49);
    else
      v22 = *(id *)(v48 + 8 * v20);
    v53 = v22;
    v16 = __OFADD__(v20, 1);
    v23 = v20 + 1;
    if (v16)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_bridgeObjectRetain();
      v12 = sub_23E53803C();
      if (!v12)
        goto LABEL_50;
      goto LABEL_3;
    }
    v52 = v23;
    v24 = objc_msgSend(v53, sel_characteristics);
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v25 = sub_23E5377F0();

    v67 = MEMORY[0x24BEE4AF8];
    if (!(v25 >> 62))
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v26)
        break;
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    v26 = sub_23E53803C();
    if (v26)
      break;
LABEL_41:
    v21 = MEMORY[0x24BEE4AF8];
LABEL_15:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E2593C0(v21);
    a1 = v50;
    v20 = v52;
    if (v52 == v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v68;
LABEL_5:

      swift_bridgeObjectRelease();
      sub_23E2593C0(v14);
      v13 = v47;
      a1 = v44;
      if (v47 == v43)
        goto LABEL_46;
      goto LABEL_6;
    }
  }
  v27 = 0;
  v58 = v25 & 0xFFFFFFFFFFFFFF8;
  v59 = v25 & 0xC000000000000001;
  v55 = v25 + 32;
  v56 = v26;
  v57 = v25;
  while (v59)
  {
    v29 = (id)MEMORY[0x24264F148](v27, v25);
    v16 = __OFADD__(v27, 1);
    v30 = v27 + 1;
    if (v16)
      goto LABEL_45;
LABEL_30:
    v60 = v29;
    v61 = v30;
    v31 = objc_msgSend(v29, sel_uniqueIdentifier);
    sub_23E536F68();

    v32 = *(_QWORD *)(a2 + 16);
    if (v32)
    {
      v33 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      swift_bridgeObjectRetain();
      v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
      v64 = *(_QWORD *)(v8 + 72);
      v65 = v34;
      while (1)
      {
        v65(v6, v33, v7);
        v28 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v28(v6, 0, 1, v7);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          break;
        v35 = v7;
        v36 = v63;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v63, v6, v35);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v37 = sub_23E537514();
        v38 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
        v39 = v36;
        v7 = v35;
        v38(v39, v35);
        if ((v37 & 1) != 0)
        {
          a2 = v54;
          swift_bridgeObjectRelease();
          v38(v66, v35);
          sub_23E537F1C();
          sub_23E537F4C();
          sub_23E537F58();
          sub_23E537F28();
          v6 = v62;
          goto LABEL_26;
        }
        v33 += v64;
        --v32;
        v6 = v62;
        if (!v32)
          goto LABEL_24;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56);
LABEL_24:
      v28(v6, 1, 1, v7);
    }
    a2 = v54;
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v66, v7);

LABEL_26:
    v25 = v57;
    v27 = v61;
    if (v61 == v56)
    {
      v21 = v67;
      goto LABEL_15;
    }
  }
  if (v27 < *(_QWORD *)(v58 + 16))
  {
    v29 = *(id *)(v55 + 8 * v27);
    v16 = __OFADD__(v27, 1);
    v30 = v27 + 1;
    if (v16)
      goto LABEL_45;
    goto LABEL_30;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  swift_bridgeObjectRelease();
  return v69;
}

uint64_t sub_23E471550(_QWORD *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _BYTE v43[32];
  _OWORD v44[2];
  _QWORD *v45;

  isUniquelyReferenced_nonNull_native = v3;
  v41 = a3;
  v7 = sub_23E536F80();
  v40 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    if (v10)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
    goto LABEL_31;
LABEL_3:
  v35 = isUniquelyReferenced_nonNull_native;
  v39 = a2 & 0xC000000000000001;
  v11 = 4;
  v37 = (_QWORD *)a2;
  v38 = MEMORY[0x24BEE4AD8] + 8;
  v36 = v10;
  while (1)
  {
    isUniquelyReferenced_nonNull_native = v11 - 4;
    if (v39)
    {
      v12 = (id)MEMORY[0x24264F148](v11 - 4, a2);
      v13 = v11 - 3;
      if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
        goto LABEL_27;
    }
    else
    {
      v12 = *(id *)(a2 + 8 * v11);
      v13 = v11 - 3;
      if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    v14 = v12;
    v15 = objc_msgSend(v41, sel_valueByCharacteristicUniqueIdentifier);
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v16 = sub_23E537460();

    v17 = objc_msgSend(v14, sel_uniqueIdentifier);
    sub_23E536F68();

    v18 = *(_QWORD *)(v16 + 16);
    v42 = v13;
    if (v18 && (v19 = sub_23E1E3300((uint64_t)v9), (v20 & 1) != 0))
      sub_23E1EA57C(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)v44);
    else
      memset(v44, 0, sizeof(v44));
    swift_bridgeObjectRelease();
    v21 = v9;
    v22 = v9;
    v9 = (char *)v7;
    (*(void (**)(char *, unint64_t))(v40 + 8))(v22, v7);
    sub_23E1E4E3C((uint64_t)v44, (uint64_t)v43, &qword_254332260);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = a1;
    a2 = (unint64_t)a1;
    v7 = sub_23E1EE554((uint64_t)v14);
    v24 = a1[2];
    v25 = (v23 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_28;
    v27 = v23;
    if (a1[3] < v26)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      a1 = v45;
      if ((v23 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      a2 = (unint64_t)&v45;
      sub_23E21DC50();
      a1 = v45;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        sub_23E266094((uint64_t)v43, a1[7] + 32 * v7);
        goto LABEL_5;
      }
    }
LABEL_22:
    a1[(v7 >> 6) + 8] |= 1 << v7;
    *(_QWORD *)(a1[6] + 8 * v7) = v14;
    sub_23E1E4E3C((uint64_t)v43, a1[7] + 32 * v7, &qword_254332260);
    v30 = a1[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_29;
    a1[2] = v32;
    v33 = v14;
LABEL_5:

    swift_bridgeObjectRelease();
    ++v11;
    a2 = (unint64_t)v37;
    v7 = (unint64_t)v9;
    v9 = v21;
    if (v42 == v36)
      goto LABEL_31;
  }
  sub_23E1EFD84(v26, isUniquelyReferenced_nonNull_native);
  a2 = (unint64_t)v45;
  v28 = sub_23E1EE554((uint64_t)v14);
  if ((v27 & 1) == (v29 & 1))
  {
    v7 = v28;
    a1 = v45;
    if ((v27 & 1) != 0)
      goto LABEL_4;
    goto LABEL_22;
  }
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

_QWORD *sub_23E4718E0(_QWORD *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  char v23;
  id v24;
  uint64_t v25;
  unsigned __int8 v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  BOOL v30;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  id v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;

  v4 = v3;
  v40 = a3;
  v41 = sub_23E536F80();
  v39 = *(_QWORD *)(v41 - 8);
  v7 = MEMORY[0x24BDAC7A8](v41);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v12 = sub_23E53803C();
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      v35 = v9;
      v36 = v4;
      v37 = a1;
      v38 = a2;
      v4 = 0;
      v13 = a2 & 0xC000000000000001;
      while (1)
      {
        while (1)
        {
          if (v13)
            v14 = (char *)MEMORY[0x24264F148](v4, a2);
          else
            v14 = (char *)*(id *)(a2 + 8 * v4 + 32);
          v15 = v14;
          v16 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_19;
          }
          v17 = objc_msgSend(v14, sel_service);
          if (v17)
          {
            a1 = v17;
            v9 = (char *)objc_msgSend(v17, sel_accessory);

            if (v9)
              break;
          }
          v9 = v15;
LABEL_5:

          ++v4;
          if (v16 == v12)
            goto LABEL_17;
        }
        v18 = v12;
        v19 = (uint64_t)v11;
        v20 = objc_msgSend(v40, sel_reachabilityByAccessoryUniqueIdentifier);
        sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        a1 = (_QWORD *)sub_23E537460();

        v21 = objc_msgSend(v9, sel_uniqueIdentifier);
        sub_23E536F68();

        v11 = (char *)v19;
        if (!a1[2] || (v22 = sub_23E1E3300(v19), (v23 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v19, v41);

          v12 = v18;
          a2 = v38;
          goto LABEL_5;
        }
        v34 = *(id *)(a1[7] + 8 * v22);
        swift_bridgeObjectRelease();
        v33 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v33(v19, v41);
        v24 = objc_msgSend(v9, sel_uniqueIdentifier);
        v25 = (uint64_t)v35;
        sub_23E536F68();

        v26 = objc_msgSend(v34, sel_BOOLValue);
        v27 = v37;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v42 = v27;
        a1 = &v42;
        v29 = v26;
        v11 = (char *)v19;
        sub_23E21BF78(v29, v25, isUniquelyReferenced_nonNull_native);
        v37 = v42;
        swift_bridgeObjectRelease();
        v33(v25, v41);

        v4 = v16;
        v12 = v18;
        v30 = v16 == v18;
        a2 = v38;
        if (v30)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v37;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E471C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  BOOL v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  id v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  unint64_t v57;
  uint64_t v58;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = a1;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v56 = (char *)&v37 - v13;
  v58 = MEMORY[0x24BEE4AF8];
  v39 = v12;
  if (v12 >> 62)
    goto LABEL_36;
  v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v14)
  {
LABEL_3:
    v15 = 0;
    v40 = v14;
    v41 = v39 & 0xC000000000000001;
    v38 = v39 + 32;
    v44 = a2;
    v52 = v6;
    do
    {
      if (v41)
        v17 = (id)MEMORY[0x24264F148](v15, v39);
      else
        v17 = *(id *)(v38 + 8 * v15);
      v43 = v17;
      v18 = __OFADD__(v15, 1);
      v19 = v15 + 1;
      if (v18)
        goto LABEL_35;
      v42 = v19;
      v20 = objc_msgSend(v43, sel_actionSets);
      sub_23E1E335C(0, &qword_254332C00);
      v21 = sub_23E5377F0();

      v57 = MEMORY[0x24BEE4AF8];
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v22 = sub_23E53803C();
        if (v22)
        {
LABEL_12:
          v23 = 0;
          v48 = v21 & 0xFFFFFFFFFFFFFF8;
          v49 = v21 & 0xC000000000000001;
          v45 = v21 + 32;
          v46 = v22;
          v47 = v21;
          while (1)
          {
            if (v49)
            {
              v25 = (id)MEMORY[0x24264F148](v23, v21);
              v18 = __OFADD__(v23, 1);
              v26 = v23 + 1;
              if (v18)
                goto LABEL_34;
            }
            else
            {
              if (v23 >= *(_QWORD *)(v48 + 16))
              {
                __break(1u);
LABEL_34:
                __break(1u);
LABEL_35:
                __break(1u);
LABEL_36:
                swift_bridgeObjectRetain();
                v14 = sub_23E53803C();
                if (!v14)
                  goto LABEL_37;
                goto LABEL_3;
              }
              v25 = *(id *)(v45 + 8 * v23);
              v18 = __OFADD__(v23, 1);
              v26 = v23 + 1;
              if (v18)
                goto LABEL_34;
            }
            v50 = v25;
            v51 = v26;
            v27 = objc_msgSend(v25, sel_uniqueIdentifier);
            sub_23E536F68();

            v28 = *(_QWORD *)(a2 + 16);
            if (v28)
            {
              v29 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
              swift_bridgeObjectRetain();
              v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
              v54 = *(_QWORD *)(v9 + 72);
              v55 = v30;
              while (1)
              {
                v55(v6, v29, v7);
                v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
                v24(v6, 0, 1, v7);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7) == 1)
                  break;
                v31 = v7;
                v32 = v53;
                (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v53, v6, v31);
                sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                v33 = sub_23E537514();
                v34 = *(void (**)(char *, uint64_t))(v9 + 8);
                v35 = v32;
                v7 = v31;
                v34(v35, v31);
                if ((v33 & 1) != 0)
                {
                  a2 = v44;
                  swift_bridgeObjectRelease();
                  v34(v56, v31);
                  sub_23E537F1C();
                  sub_23E537F4C();
                  sub_23E537F58();
                  sub_23E537F28();
                  v6 = v52;
                  goto LABEL_16;
                }
                v29 += v54;
                --v28;
                v6 = v52;
                if (!v28)
                  goto LABEL_14;
              }
            }
            else
            {
              swift_bridgeObjectRetain();
              v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_14:
              v24(v6, 1, 1, v7);
            }
            a2 = v44;
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v9 + 8))(v56, v7);

LABEL_16:
            v21 = v47;
            v23 = v51;
            if (v51 == v46)
            {
              v16 = v57;
              goto LABEL_5;
            }
          }
        }
      }
      else
      {
        v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v22)
          goto LABEL_12;
      }
      v16 = MEMORY[0x24BEE4AF8];
LABEL_5:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E2593CC(v16);
      v15 = v42;
    }
    while (v42 != v40);
    swift_bridgeObjectRelease();
    return v58;
  }
  else
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t sub_23E4720F4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E47210C()
{
  if (qword_256D3EDC0 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E472168()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  type metadata accessor for WidgetDataModel();
  swift_initStaticObject();
  v3 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_23E4721D8;
  return v3();
}

uint64_t sub_23E4721D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23E472238()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(id *)(*(_QWORD *)(v0 + 32) + 128);
  swift_release();
  v3 = objc_msgSend(v2, sel_homes);

  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v4 = sub_23E5377F0();

  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v1;
  v6 = sub_23E206BB0(sub_23E472354, v5, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void *))(v0 + 8))(v6);
}

unint64_t sub_23E472310()
{
  unint64_t result;

  result = qword_256D47700;
  if (!qword_256D47700)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticActionSet.Error, &type metadata for StaticActionSet.Error);
    atomic_store(result, (unint64_t *)&qword_256D47700);
  }
  return result;
}

uint64_t sub_23E472354(id *a1)
{
  return sub_23E4705A0(a1) & 1;
}

uint64_t StaticEndpoint.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  v1 = type metadata accessor for StaticEndpoint();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28)) == 2)
  {
    v2 = 0;
  }
  else if (*(_QWORD *)(*(_QWORD *)(v0 + *(int *)(v1 + 36)) + 16) && (sub_23E2112EC(10), (v3 & 1) != 0))
  {
    v2 = 1;
  }
  else
  {
    v4 = swift_bridgeObjectRetain();
    v2 = sub_23E415000(v4);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t StaticEndpoint.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  __int128 v6[16];
  _BYTE v7[256];

  v1 = type metadata accessor for StaticEndpoint();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28)) != 2
    && (v2 = *(_QWORD *)(v0 + *(int *)(v1 + 36)), *(_QWORD *)(v2 + 16))
    && (v3 = sub_23E2112EC(10), (v4 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v2 + 56) + (v3 << 8)), (uint64_t)v6),
        sub_23E22328C(v6, (uint64_t)v7),
        sub_23E23C5D0((uint64_t)v7) == 1))
  {
    return *(unsigned __int8 *)(sub_23E23C5DC((uint64_t)v7) + 11);
  }
  else
  {
    return 0;
  }
}

uint64_t StaticEndpoint.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  unint64_t v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19[16];
  _BYTE v20[256];
  __int128 v21[16];
  _BYTE v22[256];

  v1 = type metadata accessor for StaticEndpoint();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28)) == 2)
  {
    static String.hfLocalized(_:)();
    return v2;
  }
  v4 = v1;
  v5 = *(_QWORD *)(v0 + *(int *)(v1 + 32));
  result = sub_23E26B68C(v5);
  if ((v8 & 1) == 0)
  {
    if (*(_DWORD *)(v5 + 36) == v7)
    {
      if (result == 1 << *(_BYTE *)(v5 + 32))
        return 0;
      sub_23E2CD37C(result, v7, v5, v22);
      if ((v22[0] & 0xFC) != 4)
        return 0;
      v9 = *(_QWORD *)(v0 + *(int *)(v4 + 36));
      if (!*(_QWORD *)(v9 + 16))
        return 0;
      v10 = sub_23E2112EC(10);
      if ((v11 & 1) == 0)
        return 0;
      sub_23E22328C((__int128 *)(*(_QWORD *)(v9 + 56) + (v10 << 8)), (uint64_t)v21);
      sub_23E22328C(v21, (uint64_t)v22);
      if (sub_23E23C5D0((uint64_t)v22) != 1)
        return 0;
      v12 = *(unsigned __int8 *)(sub_23E23C5DC((uint64_t)v22) + 11);
      if (*(_QWORD *)(v9 + 16)
        && (v13 = sub_23E2112EC(11), (v14 & 1) != 0)
        && (sub_23E22328C((__int128 *)(*(_QWORD *)(v9 + 56) + (v13 << 8)), (uint64_t)v19),
            sub_23E22328C(v19, (uint64_t)v20),
            sub_23E23C5D0((uint64_t)v20) == 3)
        && *(_BYTE *)(sub_23E23C5DC((uint64_t)v20) + 11)
        && v12)
      {
        sub_23E2AAFC4();
        v15 = (void *)sub_23E537C34();
        v16 = (void *)sub_23E537C34();
        v17 = (void *)sub_23E537C34();
        v3 = sub_23E3F3440(v15);

      }
      else
      {
        static String.hfLocalized(_:)();
        v3 = v18;
        swift_bridgeObjectRelease();
      }
      return v3;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t MatterDeviceType.defaultIconSymbol.getter()
{
  return IconSymbol.rawValue.getter();
}

uint64_t StaticEndpoint.tileStatusString.getter()
{
  return 0;
}

uint64_t StaticEndpoint.accessoryControlStatusString.getter()
{
  return 0;
}

uint64_t StaticEndpoint.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v6[16];
  _BYTE v7[256];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v2 = sub_23E2112EC(2);
  if ((v3 & 1) == 0)
    return 0;
  sub_23E22328C((__int128 *)(*(_QWORD *)(v1 + 56) + (v2 << 8)), (uint64_t)v6);
  sub_23E22328C(v6, (uint64_t)v7);
  if (sub_23E23C5D0((uint64_t)v7) != 5)
    return 0;
  v4 = sub_23E23C5DC((uint64_t)v7);
  if (*(_BYTE *)(v4 + 22) == 1)
    return 0;
  if (*(unsigned __int8 *)(v4 + 21) >= 0xAu)
    return 0;
  return 0x2E79726574746162;
}

uint64_t StaticEndpoint.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticEndpoint();
  sub_23E267924(*(_QWORD *)(v1 + *(int *)(v6 + 48)), (uint64_t)v5);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  __break(1u);
  return result;
}

uint64_t sub_23E4728E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E267924(*(_QWORD *)(v2 + *(int *)(a1 + 48)), (uint64_t)v7);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  __break(1u);
  return result;
}

char StaticEndpoint.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  __int16 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  Swift::String v12;
  char v13;
  char v15;
  unsigned __int8 v16;

  v3 = type metadata accessor for StaticEndpoint();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 32));
  v5 = sub_23E26B68C(v4);
  if ((v7 & 1) != 0)
    goto LABEL_11;
  if (*(_DWORD *)(v4 + 36) != v6)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return v5;
  }
  if (v5 == 1 << *(_BYTE *)(v4 + 32))
  {
    v8 = 26;
  }
  else
  {
    LOBYTE(v5) = sub_23E2CD37C(v5, v6, v4, &v16);
    v8 = v16;
  }
  v9 = v1 + *(int *)(v3 + 52);
  v10 = *(void **)(v9 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    LOBYTE(v5) = IconSymbol.init(rawValue:)(v12);
    v13 = v15;
  }
  else
  {
    v13 = 88;
  }
  *(_WORD *)a1 = v8;
  *(_BYTE *)(a1 + 2) = 1;
  *(_BYTE *)(a1 + 3) = v13;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return v5;
}

uint64_t MatterDeviceType.canBeToggledByDefault.getter()
{
  _BYTE *v0;

  return (*v0 < 0x16uLL) & (0x203AD0u >> *v0);
}

uint64_t sub_23E472AA0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E472B1C(&qword_256D3F920, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[2] = sub_23E472B1C(&qword_256D3F8F8, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[3] = sub_23E472B1C(&qword_256D41C80, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  result = sub_23E472B1C(&qword_256D41C88, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[4] = result;
  return result;
}

uint64_t sub_23E472B1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for StaticEndpoint();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ReachabilityEvent.init(id:reachable:date:creationDate:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v10 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = (int *)type metadata accessor for ReachabilityEvent();
  *(_BYTE *)(a5 + v11[5]) = a2;
  v12 = a5 + v11[6];
  v13 = sub_23E536F20();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v15(v12, a3, v13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(a5 + v11[7], a4, v13);
}

uint64_t type metadata accessor for ReachabilityEvent()
{
  uint64_t result;

  result = qword_256D477A0;
  if (!qword_256D477A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static ReachabilityEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && (v4 = type metadata accessor for ReachabilityEvent(),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    && (sub_23E536EF0() & 1) != 0)
  {
    return sub_23E536EF0();
  }
  else
  {
    return 0;
  }
}

uint64_t ReachabilityEvent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ReachabilityEvent.reachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReachabilityEvent() + 20));
}

uint64_t ReachabilityEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReachabilityEvent() + 24);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReachabilityEvent.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ReachabilityEvent() + 28);
  v4 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ReachabilityEvent.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for ReachabilityEvent();
  sub_23E538474();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t ReachabilityEvent.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for ReachabilityEvent();
  sub_23E538474();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E472F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
    && (sub_23E536EF0() & 1) != 0)
  {
    return sub_23E536EF0();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E473018()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538474();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E473108()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538474();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  return sub_23E5374D8();
}

uint64_t sub_23E4731E0()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538474();
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E4732CC()
{
  return sub_23E1EE1C4(&qword_256D47740, (uint64_t (*)(uint64_t))type metadata accessor for ReachabilityEvent, (uint64_t)&protocol conformance descriptor for ReachabilityEvent);
}

_QWORD *initializeBufferWithCopyOfBuffer for ReachabilityEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F20();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((char *)a1 + a3[7], (char *)a2 + a3[7], v11);
  }
  return a1;
}

uint64_t destroy for ReachabilityEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_23E536F20();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 28), v6);
}

uint64_t initializeWithCopy for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t assignWithCopy for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t initializeWithTake for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t assignWithTake for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReachabilityEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E47371C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unsigned int v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 254)
  {
    v8 = sub_23E536F20();
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 2)
    return ((v11 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReachabilityEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E4737DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
      return result;
    }
    v10 = sub_23E536F20();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E47387C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = sub_23E536F20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t StaticAccessory.staticServices.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v5 = v0;
  swift_bridgeObjectRetain();
  v2 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)&v4, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23E473974(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_23E473DA0(a1, a2, a3, &qword_2543327E8, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (uint64_t)sub_23E20106C);
}

unint64_t sub_23E4739A0(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v32[2];
  void (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for StaticService();
  v44 = *(_QWORD *)(v41 - 8);
  v9 = MEMORY[0x24BDAC7A8](v41);
  v40 = (uint64_t)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v35 = (uint64_t)v32 - v11;
  v43 = sub_23E536F80();
  v12 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a3 + 16);
  if (v18)
  {
    v39 = v8;
    v19 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v37 = *(_QWORD *)(v12 + 72);
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v32[1] = a3;
    swift_bridgeObjectRetain();
    v45 = MEMORY[0x24BEE4AF8];
    v33 = a1;
    v34 = a2;
    v20 = v43;
    v38 = v14;
    while (1)
    {
      v42(v17, v19, v20);
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v36(v17, 0, 1, v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v20) == 1)
        break;
      v46 = v19;
      v22 = v17;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v20);
      v23 = (uint64_t)v39;
      v24 = v47;
      a1(v14);
      if (v24)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v45;
      }
      v47 = 0;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v23, 1, v41) == 1)
      {
        sub_23E1E7C64(v23, &qword_254332DE8);
        v17 = v22;
        v20 = v43;
        v21 = v46;
      }
      else
      {
        v25 = v35;
        sub_23E1E2FDC(v23, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FDC(v25, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_23E1E3348(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
        v17 = v22;
        v21 = v46;
        v27 = *(_QWORD *)(v45 + 16);
        v26 = *(_QWORD *)(v45 + 24);
        if (v27 >= v26 >> 1)
          v45 = sub_23E1E3348(v26 > 1, v27 + 1, 1, v45);
        v20 = v43;
        v28 = v44;
        v29 = v45;
        *(_QWORD *)(v45 + 16) = v27 + 1;
        sub_23E1E2FDC(v40, v29+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        a1 = v33;
      }
      v14 = v38;
      v19 = v21 + v37;
      if (!--v18)
      {
        v36(v17, 1, 1, v20);
        break;
      }
    }
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v45 = MEMORY[0x24BEE4AF8];
    v30(v17, 1, 1, v43);
  }
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_23E473DA0(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  unint64_t v23;
  unint64_t v24;
  uint64_t (*v26)(BOOL, uint64_t, uint64_t, uint64_t);
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  void (*v34)(id *);
  uint64_t v35;
  id v36;

  v34 = a1;
  v29 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a5;
  v33 = a5(0);
  v35 = *(_QWORD *)(v33 - 8);
  v13 = MEMORY[0x24BDAC7A8](v33);
  v31 = (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v28 = (uint64_t)&v26 - v15;
  if (a3 >> 62)
    goto LABEL_20;
  v16 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v16; v16 = sub_23E53803C())
  {
    v26 = (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))a6;
    v30 = a3 & 0xC000000000000001;
    v17 = MEMORY[0x24BEE4AF8];
    a6 = 4;
    v27 = a3;
    while (1)
    {
      v18 = v30 ? (id)MEMORY[0x24264F148](a6 - 4, a3) : *(id *)(a3 + 8 * a6);
      v19 = v18;
      v20 = a6 - 3;
      if (__OFADD__(a6 - 4, 1))
        break;
      v36 = v18;
      v34(&v36);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v17;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v33) == 1)
      {
        sub_23E1E7C64((uint64_t)v12, v29);
      }
      else
      {
        v21 = v28;
        v22 = v32;
        sub_23E1E2FDC((uint64_t)v12, v28, v32);
        sub_23E1E2FDC(v21, v31, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = v26(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v24 = *(_QWORD *)(v17 + 16);
        v23 = *(_QWORD *)(v17 + 24);
        if (v24 >= v23 >> 1)
          v17 = v26(v23 > 1, v24 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v24 + 1;
        sub_23E1E2FDC(v31, v17+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v24, v32);
        a3 = v27;
      }
      ++a6;
      if (v20 == v16)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

char *sub_23E47407C(void (*a1)(__int128 *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  __int128 v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(__int128 *__return_ptr, char *);
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = v3;
  v35 = a2;
  v32 = a1;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v28 = *(_QWORD *)(v7 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v25 = a3;
    swift_bridgeObjectRetain();
    v14 = (char *)MEMORY[0x24BEE4AF8];
    v15 = v26;
    v29 = v6;
    v30 = v7;
    while (1)
    {
      v31(v11, v13, v6);
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v27(v11, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
        break;
      v16 = v14;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v11, v6);
      v14 = v15;
      v17 = v4;
      v32(&v34, v15);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
      if ((_QWORD)v34)
      {
        v33 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = (char *)sub_23E51F460(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
        v19 = *((_QWORD *)v16 + 2);
        v18 = *((_QWORD *)v16 + 3);
        v20 = v16;
        v21 = v33;
        if (v19 >= v18 >> 1)
        {
          v22 = (char *)sub_23E51F460((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
          v21 = v33;
          v20 = v22;
        }
        *((_QWORD *)v20 + 2) = v19 + 1;
        v14 = v20;
        *(_OWORD *)&v20[16 * v19 + 32] = v21;
        v4 = v17;
        v15 = v26;
      }
      else
      {
        v14 = v16;
      }
      v6 = v29;
      v7 = v30;
      v13 += v28;
      if (!--v12)
      {
        v27(v11, 1, 1, v29);
        break;
      }
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v14 = (char *)MEMORY[0x24BEE4AF8];
    v23(v11, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23E474340(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_23E474BD8(a1, a2, a3, &qword_256D47130, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_23E51F488);
}

void sub_23E47436C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  void *v26;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, &qword_254333380);
    sub_23E1E6118(&qword_254333388, &qword_254333380);
    sub_23E537A3C();
    v1 = v21;
    v20 = v22;
    v2 = v23;
    v3 = v24;
    v4 = v25;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v20 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  v19 = (char *)MEMORY[0x24BEE4AF8];
LABEL_8:
  v9 = v3;
  v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!sub_23E537DD8())
        goto LABEL_39;
      sub_23E1E335C(0, &qword_254333380);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v26;
      swift_unknownObjectRelease();
      v3 = v9;
      v4 = v10;
      if (!v12)
        goto LABEL_39;
      goto LABEL_11;
    }
    if (!v10)
      break;
    v4 = (v10 - 1) & v10;
    v11 = __clz(__rbit64(v10)) | (v9 << 6);
    v3 = v9;
LABEL_10:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    if (!v12)
      goto LABEL_39;
LABEL_11:
    SymptomError.init(from:)((uint64_t)objc_msgSend(v12, sel_type), (char *)&v26);

    v13 = (char)v26;
    v9 = v3;
    v10 = v4;
    if (v26 != 23)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_23E51F4C4(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
      v18 = *((_QWORD *)v19 + 2);
      v17 = *((_QWORD *)v19 + 3);
      if (v18 >= v17 >> 1)
        v19 = sub_23E51F4C4((char *)(v17 > 1), v18 + 1, 1, v19);
      *((_QWORD *)v19 + 2) = v18 + 1;
      v19[v18 + 32] = v13;
      goto LABEL_8;
    }
  }
  v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8)
      goto LABEL_39;
    v14 = *(_QWORD *)(v20 + 8 * v3);
    if (!v14)
    {
      v15 = v9 + 2;
      if (v9 + 2 >= v8)
        goto LABEL_39;
      v14 = *(_QWORD *)(v20 + 8 * v15);
      if (v14)
        goto LABEL_23;
      v15 = v9 + 3;
      if (v9 + 3 >= v8)
        goto LABEL_39;
      v14 = *(_QWORD *)(v20 + 8 * v15);
      if (v14)
        goto LABEL_23;
      v15 = v9 + 4;
      if (v9 + 4 >= v8)
        goto LABEL_39;
      v14 = *(_QWORD *)(v20 + 8 * v15);
      if (v14)
      {
LABEL_23:
        v3 = v15;
      }
      else
      {
        v3 = v9 + 5;
        if (v9 + 5 >= v8)
          goto LABEL_39;
        v14 = *(_QWORD *)(v20 + 8 * v3);
        if (!v14)
        {
          v16 = v9 + 6;
          while (v8 != v16)
          {
            v14 = *(_QWORD *)(v20 + 8 * v16++);
            if (v14)
            {
              v3 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_23E2261B0();
          return;
        }
      }
    }
LABEL_24:
    v4 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_23E4746D0(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  _QWORD v33[3];
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(id *);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  id v49;

  v4 = v3;
  v39 = a1;
  v40 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for StaticCharacteristic();
  v42 = *(_QWORD *)(v38 - 8);
  v9 = MEMORY[0x24BDAC7A8](v38);
  MEMORY[0x24BDAC7A8](v9);
  v35 = (uint64_t)v33 - v10;
  v36 = v11;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    sub_23E1E6118((unint64_t *)&qword_256D44E20, (unint64_t *)&qword_254333358);
    result = sub_23E537A3C();
    a3 = v44;
    v37 = v45;
    v13 = v46;
    v14 = v47;
    v15 = v48;
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a3 + 32);
    v17 = *(_QWORD *)(a3 + 56);
    v37 = a3 + 56;
    v13 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & v17;
    result = swift_bridgeObjectRetain();
    v14 = 0;
  }
  v33[2] = a3 & 0x7FFFFFFFFFFFFFFFLL;
  v33[0] = v13;
  v20 = MEMORY[0x24BEE4AF8];
  v34 = (unint64_t)(v13 + 64) >> 6;
  v33[1] = MEMORY[0x24BEE4AD0] + 8;
  v41 = a3;
  if ((a3 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  v21 = sub_23E537DD8();
  if (v21)
  {
    v43 = v21;
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v22 = v49;
    swift_unknownObjectRelease();
    v23 = v14;
    v24 = v15;
    while (v22)
    {
      v49 = v22;
      v39(&v49);
      if (v4)
      {

        sub_23E2261B0();
        swift_bridgeObjectRelease();
        return v20;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v8, 1, v38) == 1)
      {
        result = sub_23E1E7C64((uint64_t)v8, &qword_2543332A0);
        v14 = v23;
        v15 = v24;
        a3 = v41;
        if (v41 < 0)
          goto LABEL_8;
      }
      else
      {
        v28 = v35;
        sub_23E1E2FDC((uint64_t)v8, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        v29 = v36;
        sub_23E1E2FDC(v28, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_23E51F830(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        v31 = *(_QWORD *)(v20 + 16);
        v30 = *(_QWORD *)(v20 + 24);
        a3 = v41;
        if (v31 >= v30 >> 1)
          v20 = sub_23E51F830(v30 > 1, v31 + 1, 1, v20);
        *(_QWORD *)(v20 + 16) = v31 + 1;
        result = sub_23E1E2FDC(v29, v20+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        v14 = v23;
        v15 = v24;
        if (a3 < 0)
          goto LABEL_8;
      }
LABEL_11:
      if (v15)
      {
        v24 = (v15 - 1) & v15;
        v25 = __clz(__rbit64(v15)) | (v14 << 6);
        v23 = v14;
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          return result;
        }
        if (v23 >= v34)
          break;
        v26 = *(_QWORD *)(v37 + 8 * v23);
        if (!v26)
        {
          v27 = v14 + 2;
          if (v14 + 2 >= v34)
            break;
          v26 = *(_QWORD *)(v37 + 8 * v27);
          if (v26)
            goto LABEL_22;
          v27 = v14 + 3;
          if (v14 + 3 >= v34)
            break;
          v26 = *(_QWORD *)(v37 + 8 * v27);
          if (v26)
            goto LABEL_22;
          v27 = v14 + 4;
          if (v14 + 4 >= v34)
            break;
          v26 = *(_QWORD *)(v37 + 8 * v27);
          if (v26)
          {
LABEL_22:
            v23 = v27;
          }
          else
          {
            v23 = v14 + 5;
            if (v14 + 5 >= v34)
              break;
            v26 = *(_QWORD *)(v37 + 8 * v23);
            if (!v26)
            {
              v32 = v14 + 6;
              while (v34 != v32)
              {
                v26 = *(_QWORD *)(v37 + 8 * v32++);
                if (v26)
                {
                  v23 = v32 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        v24 = (v26 - 1) & v26;
        v25 = __clz(__rbit64(v26)) + (v23 << 6);
      }
      v22 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v25);
    }
  }
  sub_23E2261B0();
  return v20;
}

uint64_t sub_23E474BAC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_23E474BD8(a1, a2, a3, &qword_256D47B28, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_23E51FDF8);
}

uint64_t sub_23E474BD8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t (*v25)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);

  v32 = a1;
  v29 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a5(0);
  v13 = *(_QWORD *)(v31 - 8);
  v14 = MEMORY[0x24BDAC7A8](v31);
  v30 = (uint64_t)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v28 = (uint64_t)&v24 - v16;
  v17 = *(_QWORD *)(a3 + 16);
  if (!v17)
    return MEMORY[0x24BEE4AF8];
  v25 = a6;
  v26 = a3;
  v18 = a3 + 32;
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24BEE4AF8];
  v27 = a5;
  do
  {
    v32(v18);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v31) == 1)
    {
      sub_23E1E7C64((uint64_t)v12, v29);
    }
    else
    {
      v20 = v28;
      sub_23E1E2FDC((uint64_t)v12, v28, a5);
      sub_23E1E2FDC(v20, v30, a5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = v25(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
        v19 = v25(v21 > 1, v22 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v22 + 1;
      a5 = v27;
      sub_23E1E2FDC(v30, v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, v27);
    }
    v18 += 40;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_23E474E24(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *);
  uint64_t v49;

  v47 = a2;
  v48 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticRoom(0);
  v9 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  v46 = v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v40 = (uint64_t)&v39 - v12;
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a3 + 56);
  v43 = a3 + 56;
  v21 = 1 << *(_BYTE *)(a3 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v44 = (unint64_t)(v21 + 63) >> 6;
  v49 = a3;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v42 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v23)
    {
      v26 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v27 = v26 | (v25 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v25++, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v25 >= v44)
      goto LABEL_34;
    v29 = *(_QWORD *)(v43 + 8 * v25);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v25 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v19, *(_QWORD *)(v49 + 48) + *(_QWORD *)(v14 + 72) * v27, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
    {
      swift_release();
      return v42;
    }
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    v48(v16);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v38 = v42;
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v7, 1, v45) == 1)
    {
      result = sub_23E1E7C64((uint64_t)v7, &qword_256D3FE48);
    }
    else
    {
      v31 = v40;
      sub_23E1E2FDC((uint64_t)v7, v40, type metadata accessor for StaticRoom);
      sub_23E1E2FDC(v31, v41, type metadata accessor for StaticRoom);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_23E51F49C(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
      v33 = *(_QWORD *)(v42 + 16);
      v32 = *(_QWORD *)(v42 + 24);
      v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        v39 = v33 + 1;
        v37 = sub_23E51F49C(v32 > 1, v33 + 1, 1, v42);
        v34 = v39;
        v42 = v37;
      }
      v35 = v41;
      v36 = v42;
      *(_QWORD *)(v42 + 16) = v34;
      result = sub_23E1E2FDC(v35, v36+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v33, type metadata accessor for StaticRoom);
    }
  }
  v30 = v25 + 1;
  if (v25 + 1 >= v44)
    goto LABEL_34;
  v29 = *(_QWORD *)(v43 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 2;
  if (v25 + 2 >= v44)
    goto LABEL_34;
  v29 = *(_QWORD *)(v43 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 3;
  if (v25 + 3 >= v44)
    goto LABEL_34;
  v29 = *(_QWORD *)(v43 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v30 = v25 + 4;
  if (v25 + 4 >= v44)
  {
LABEL_34:
    v38 = v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, 1, 1, v13);
LABEL_35:
    swift_release();
    return v38;
  }
  v29 = *(_QWORD *)(v43 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v25 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v25 >= v44)
      goto LABEL_34;
    v29 = *(_QWORD *)(v43 + 8 * v25);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_23E4752A4(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  void (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v9 = *(_QWORD *)(v25 - 8);
  v10 = MEMORY[0x24BDAC7A8](v25);
  v24 = (uint64_t)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v23 = (uint64_t)&v20 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x24BEE4AF8];
  v21 = a1;
  v22 = a3;
  do
  {
    v26 = *(_BYTE *)(a3 + v14 + 32);
    a1(&v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v25) == 1)
    {
      sub_23E1E7C64((uint64_t)v8, &qword_256D3FF30);
    }
    else
    {
      v16 = v23;
      sub_23E1E2FDC((uint64_t)v8, v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      sub_23E1E2FDC(v16, v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_23E51F318(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
        v15 = sub_23E51F318(v17 > 1, v18 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v18 + 1;
      sub_23E1E2FDC(v24, v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      a1 = v21;
      a3 = v22;
    }
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_23E4754F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;

  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - v7;
  result = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v29 - v10;
  v12 = 0;
  v13 = *(_QWORD *)(a1 + 64);
  v32 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v31 = MEMORY[0x24BEE4AF8];
  v34 = MEMORY[0x24BEE4AF8];
  v16 = v15 & v13;
  v33 = (unint64_t)(v14 + 63) >> 6;
  if ((v15 & v13) == 0)
    goto LABEL_7;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v17 | (v12 << 6); ; i = __clz(__rbit64(v21)) + (v12 << 6))
  {
    v19 = *(_QWORD *)(v3 + 72);
    sub_23E1E2F50(*(_QWORD *)(a1 + 56) + v19 * i, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((StaticService.isVisibleService.getter() & 1) != 0)
    {
      sub_23E1E2FDC((uint64_t)v11, v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v23 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2D0CB8(0, *(_QWORD *)(v23 + 16) + 1, 1);
      v24 = v34;
      v26 = *(_QWORD *)(v34 + 16);
      v25 = *(_QWORD *)(v34 + 24);
      v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        v31 = v26 + 1;
        v29 = v26;
        sub_23E2D0CB8(v25 > 1, v26 + 1, 1);
        v27 = v31;
        v26 = v29;
        v24 = v34;
      }
      *(_QWORD *)(v24 + 16) = v27;
      v28 = *(unsigned __int8 *)(v3 + 80);
      v31 = v24;
      result = sub_23E1E2FDC(v30, v24 + ((v28 + 32) & ~v28) + v26 * v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v16)
        goto LABEL_4;
    }
    else
    {
      result = sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v16)
        goto LABEL_4;
    }
LABEL_7:
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v33)
      goto LABEL_29;
    v21 = *(_QWORD *)(v32 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v33)
        goto LABEL_29;
      v21 = *(_QWORD *)(v32 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v33)
          goto LABEL_29;
        v21 = *(_QWORD *)(v32 + 8 * v12);
        if (!v21)
        {
          v12 = v20 + 3;
          if (v20 + 3 >= v33)
            goto LABEL_29;
          v21 = *(_QWORD *)(v32 + 8 * v12);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v33)
  {
LABEL_29:
    swift_release();
    return v31;
  }
  v21 = *(_QWORD *)(v32 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v33)
      goto LABEL_29;
    v21 = *(_QWORD *)(v32 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t Collection<>.staticAccessoryServiceCharacteristicTriplets<A>(matching:filterOutHiddenStatusAccessories:skipNoResponseAccessories:)()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47840);
  sub_23E1F9710(&qword_256D47848, &qword_256D47840, MEMORY[0x24BEE1718]);
  v0 = sub_23E537730();
  v1 = sub_23E4FDC54(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,void (**a23)(uint64_t, uint64_t, uint64_t),uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30,uint64_t (*a31)(char *, uint64_t, uint64_t))
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unsigned __int16 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  int v123;
  int *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (**v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  char *v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  char *v199;
  int v200;
  char *v201;
  char *v202;
  char *v203;
  int v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (**v228)(uint64_t, uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t (*v235)(char *, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  int *v238;
  char v239;
  __int16 v240;

  v32 = v31;
  v198 = a8;
  v229 = a7;
  v197 = a6;
  v195 = a5;
  v217 = a4;
  v193 = a3;
  v226 = a9;
  v227 = a2;
  v235 = a31;
  v236 = a1;
  v228 = a23;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v224 = (uint64_t)&v191 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v234 = (uint64_t)&v191 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v37);
  v237 = (uint64_t)&v191 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v222 = (uint64_t)&v191 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v233 = (uint64_t)&v191 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v43);
  v192 = (char *)&v191 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v211 = *(_QWORD *)(v214 - 8);
  MEMORY[0x24BDAC7A8](v214);
  v232 = (uint64_t)&v191 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v238 = (int *)type metadata accessor for StaticAccessory(0);
  v46 = MEMORY[0x24BDAC7A8](v238);
  v225 = (uint64_t)&v191 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v210 = (char *)&v191 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v209 = (uint64_t)&v191 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v223 = (uint64_t)&v191 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v208 = (char *)&v191 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v206 = (char *)&v191 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v205 = (char *)&v191 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v203 = (char *)&v191 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v202 = (char *)&v191 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v221 = (uint64_t)&v191 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v201 = (char *)&v191 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v199 = (char *)&v191 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v219 = (uint64_t)&v191 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v218 = (uint64_t)&v191 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v215 = (uint64_t)&v191 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v213 = (uint64_t)&v191 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v212 = (uint64_t)&v191 - v79;
  v80 = MEMORY[0x24BDAC7A8](v78);
  v196 = (uint64_t)&v191 - v81;
  v82 = MEMORY[0x24BDAC7A8](v80);
  v194 = (char *)&v191 - v83;
  v84 = MEMORY[0x24BDAC7A8](v82);
  v216 = (uint64_t)&v191 - v85;
  v86 = MEMORY[0x24BDAC7A8](v84);
  v191 = (char *)&v191 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v90 = (char *)&v191 - v89;
  v91 = MEMORY[0x24BDAC7A8](v88);
  v93 = (char *)&v191 - v92;
  v94 = MEMORY[0x24BDAC7A8](v91);
  v96 = (char *)&v191 - v95;
  MEMORY[0x24BDAC7A8](v94);
  v98 = (char *)&v191 - v97;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v100 = MEMORY[0x24BDAC7A8](v99);
  v220 = (uint64_t)&v191 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = MEMORY[0x24BDAC7A8](v100);
  v231 = (uint64_t)&v191 - v103;
  v104 = MEMORY[0x24BDAC7A8](v102);
  v106 = (char *)&v191 - v105;
  MEMORY[0x24BDAC7A8](v104);
  v108 = (char *)&v191 - v107;
  v109 = sub_23E536F80();
  v110 = *(unsigned __int16 **)(v109 - 8);
  v111 = MEMORY[0x24BDAC7A8](v109);
  v230 = (uint64_t)&v191 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v111);
  v114 = (char *)&v191 - v113;
  v200 = *(unsigned __int16 *)v228;
  v204 = *(unsigned __int8 *)v235;
  v116 = v115;
  sub_23E1E7C20(v236, (uint64_t)v108, &qword_254333F50);
  sub_23E1E2F50(v32, (uint64_t)v98, type metadata accessor for StaticAccessory);
  v235 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v110 + 6);
  v117 = v235(v108, 1, v116);
  v228 = (void (**)(uint64_t, uint64_t, uint64_t))v110;
  v207 = v114;
  if (v117 == 1)
  {
    (*((void (**)(char *, char *, uint64_t))v110 + 2))(v114, v98, v116);
    sub_23E1E2FA0((uint64_t)v98, type metadata accessor for StaticAccessory);
    sub_23E1E7C64((uint64_t)v108, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v98, type metadata accessor for StaticAccessory);
    (*((void (**)(char *, char *, uint64_t))v110 + 4))(v114, v108, v116);
  }
  v118 = v222;
  v119 = v193;
  v120 = (uint64_t)v192;
  v236 = v116;
  sub_23E1E2F50(v32, (uint64_t)v96, type metadata accessor for StaticAccessory);
  if (v119)
  {
    v121 = v119;
  }
  else
  {
    v122 = (uint64_t *)&v96[v238[5]];
    v121 = v122[1];
    v227 = *v122;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v96, type metadata accessor for StaticAccessory);
  sub_23E1E7C20(v217, v120, &qword_254333218);
  sub_23E1E2F50(v32, (uint64_t)v93, type metadata accessor for StaticAccessory);
  v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v120, 1, v214);
  v222 = v121;
  if (v123 == 1)
  {
    v124 = v238;
    sub_23E1E2F50((uint64_t)&v93[v238[6]], v232, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2FA0((uint64_t)v93, type metadata accessor for StaticAccessory);
    sub_23E1E7C64(v120, &qword_254333218);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v93, type metadata accessor for StaticAccessory);
    sub_23E1E2FDC(v120, v232, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v124 = v238;
  }
  v125 = v203;
  v126 = (uint64_t)v191;
  sub_23E1E7C20(v195, v118, &qword_2543332A8);
  sub_23E1E2F50(v32, (uint64_t)v90, type metadata accessor for StaticAccessory);
  v127 = type metadata accessor for StaticDeviceMetadata();
  v128 = *(_QWORD *)(v127 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v118, 1, v127) == 1)
  {
    sub_23E1E7C20((uint64_t)&v90[v124[7]], v233, &qword_2543332A8);
    sub_23E1E2FA0((uint64_t)v90, type metadata accessor for StaticAccessory);
    sub_23E1E7C64(v118, &qword_2543332A8);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v90, type metadata accessor for StaticAccessory);
    v129 = v118;
    v130 = v233;
    sub_23E1E2FDC(v129, v233, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v128 + 56))(v130, 0, 1, v127);
  }
  v131 = v198;
  v132 = (uint64_t)v194;
  sub_23E1E7C20(v197, v237, &qword_2543330E0);
  sub_23E1E2F50(v32, v126, type metadata accessor for StaticAccessory);
  if ((v131 & 1) != 0)
  {
    v133 = v126 + v124[9];
    v229 = *(_QWORD *)v133;
    v198 = *(unsigned __int8 *)(v133 + 8);
  }
  else
  {
    v198 = 0;
  }
  sub_23E1E2FA0(v126, type metadata accessor for StaticAccessory);
  v134 = v216;
  sub_23E1E2F50(v32, v216, type metadata accessor for StaticAccessory);
  if (a10 == 2)
    v135 = *(unsigned __int8 *)(v134 + v124[10]);
  else
    v135 = a10 & 1;
  LODWORD(v211) = v135;
  sub_23E1E2FA0(v134, type metadata accessor for StaticAccessory);
  sub_23E1E7C20(a11, (uint64_t)v106, &qword_254333F50);
  sub_23E1E2F50(v32, v132, type metadata accessor for StaticAccessory);
  v136 = v236;
  if (v235(v106, 1, v236) == 1)
  {
    v228[2](v230, v132 + v124[11], v136);
    sub_23E1E2FA0(v132, type metadata accessor for StaticAccessory);
    sub_23E1E7C64((uint64_t)v106, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v132, type metadata accessor for StaticAccessory);
    v228[4](v230, (uint64_t)v106, v136);
  }
  v137 = v196;
  sub_23E1E2F50(v32, v196, type metadata accessor for StaticAccessory);
  if (a12)
  {
    v216 = a12;
  }
  else
  {
    v216 = *(_QWORD *)(v137 + v124[12]);
    swift_bridgeObjectRetain();
  }
  v139 = (uint64_t)v125;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v137, type metadata accessor for StaticAccessory);
  v140 = v212;
  sub_23E1E2F50(v32, v212, type metadata accessor for StaticAccessory);
  v141 = a14;
  if (!a14)
  {
    v142 = (uint64_t *)(v140 + v124[13]);
    a13 = *v142;
    v141 = v142[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v140, type metadata accessor for StaticAccessory);
  v143 = v213;
  sub_23E1E2F50(v32, v213, type metadata accessor for StaticAccessory);
  v144 = v219;
  v214 = v141;
  if (a15 == 2)
    v145 = *(unsigned __int8 *)(v143 + v124[14]);
  else
    v145 = a15 & 1;
  LODWORD(v212) = v145;
  v146 = v143;
  v147 = v139;
  v148 = (uint64_t)v199;
  sub_23E1E2FA0(v146, type metadata accessor for StaticAccessory);
  v149 = v215;
  sub_23E1E2F50(v32, v215, type metadata accessor for StaticAccessory);
  v217 = a13;
  if (a16 == 2)
    v150 = *(unsigned __int8 *)(v149 + v124[15]);
  else
    v150 = a16 & 1;
  LODWORD(v213) = v150;
  v151 = v149;
  v152 = (uint64_t)v201;
  sub_23E1E2FA0(v151, type metadata accessor for StaticAccessory);
  v153 = v218;
  sub_23E1E2F50(v32, v218, type metadata accessor for StaticAccessory);
  if (a17 == 2)
    v154 = *(unsigned __int8 *)(v153 + v124[16]);
  else
    v154 = a17 & 1;
  LODWORD(v215) = v154;
  v155 = v153;
  v156 = (uint64_t)v202;
  sub_23E1E2FA0(v155, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v144, type metadata accessor for StaticAccessory);
  if (a18 == 2)
    v157 = *(unsigned __int8 *)(v144 + v124[17]);
  else
    v157 = a18 & 1;
  LODWORD(v218) = v157;
  sub_23E1E2FA0(v144, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v148, type metadata accessor for StaticAccessory);
  if (a19 == 2)
    v158 = *(unsigned __int8 *)(v148 + v124[18]);
  else
    v158 = a19 & 1;
  LODWORD(v203) = v158;
  v159 = (uint64_t)v208;
  sub_23E1E2FA0(v148, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v152, type metadata accessor for StaticAccessory);
  if (a20)
  {
    v219 = a20;
  }
  else
  {
    v219 = *(_QWORD *)(v152 + v124[19]);
    swift_bridgeObjectRetain();
  }
  v160 = v224;
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v152, type metadata accessor for StaticAccessory);
  v161 = v221;
  sub_23E1E2F50(v32, v221, type metadata accessor for StaticAccessory);
  if (a21)
  {
    v224 = a21;
  }
  else
  {
    v224 = *(_QWORD *)(v161 + v124[20]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v161, type metadata accessor for StaticAccessory);
  v162 = v220;
  sub_23E1E7C20(a22, v220, &qword_254333F50);
  sub_23E1E2F50(v32, v156, type metadata accessor for StaticAccessory);
  v163 = v236;
  if (v235((char *)v162, 1, v236) == 1)
  {
    sub_23E1E7C20(v156 + v124[21], v231, &qword_254333F50);
    sub_23E1E2FA0(v156, type metadata accessor for StaticAccessory);
    sub_23E1E7C64(v162, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0(v156, type metadata accessor for StaticAccessory);
    v164 = v228;
    v165 = v231;
    v228[4](v231, v162, v163);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v164[7])(v165, 0, 1, v163);
  }
  v166 = (uint64_t)v205;
  v167 = (uint64_t)v206;
  v168 = v200;
  v236 = a24;
  sub_23E1E2F50(v32, v147, type metadata accessor for StaticAccessory);
  if ((~v168 & 0xFEFC) == 0)
    LOWORD(v168) = *(_WORD *)(v147 + v124[22]);
  sub_23E1E2FA0(v147, type metadata accessor for StaticAccessory);
  v240 = v168;
  sub_23E1E2F50(v32, v166, type metadata accessor for StaticAccessory);
  v169 = a25;
  if (!a25)
  {
    v170 = (uint64_t *)(v166 + v238[23]);
    v169 = v170[1];
    v236 = *v170;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v166, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v167, type metadata accessor for StaticAccessory);
  v171 = a26;
  if (!a26)
  {
    v171 = *(_QWORD *)(v167 + v238[24]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v167, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v159, type metadata accessor for StaticAccessory);
  if (a27 == 2)
    v172 = *(_BYTE *)(v159 + v238[25]);
  else
    v172 = a27 & 1;
  sub_23E1E2FA0(v159, type metadata accessor for StaticAccessory);
  sub_23E1E7C20(a29, v160, &qword_2543332B8);
  v173 = v223;
  sub_23E1E2F50(v32, v223, type metadata accessor for StaticAccessory);
  v174 = type metadata accessor for StaticSoftwareUpdate(0);
  v175 = *(_QWORD *)(v174 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v160, 1, v174) == 1)
  {
    v176 = v160;
    v177 = v238;
    sub_23E1E7C20(v173 + v238[26], v234, &qword_2543332B8);
    sub_23E1E2FA0(v173, type metadata accessor for StaticAccessory);
    sub_23E1E7C64(v176, &qword_2543332B8);
  }
  else
  {
    sub_23E1E2FA0(v173, type metadata accessor for StaticAccessory);
    v178 = v160;
    v179 = v234;
    sub_23E1E2FDC(v178, v234, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v175 + 56))(v179, 0, 1, v174);
    v177 = v238;
  }
  v180 = v209;
  v181 = (uint64_t)v207;
  v182 = v204;
  sub_23E1E2F50(v32, v209, type metadata accessor for StaticAccessory);
  if (a30 == 2)
    v183 = *(_BYTE *)(v180 + v177[27]);
  else
    v183 = a30 & 1;
  v184 = (uint64_t)v210;
  sub_23E1E2FA0(v180, type metadata accessor for StaticAccessory);
  sub_23E1E2F50(v32, v184, type metadata accessor for StaticAccessory);
  v185 = v184;
  if (v182 == 2)
    v186 = *(_BYTE *)(v184 + v238[28]);
  else
    v186 = v182 & 1;
  v187 = v198;
  sub_23E1E2FA0(v185, type metadata accessor for StaticAccessory);
  v239 = v186;
  v188 = v225;
  sub_23E1E2F50(v32, v225, type metadata accessor for StaticAccessory);
  v189 = a28;
  if (!a28)
  {
    v189 = *(_QWORD *)(v188 + v238[29]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23E1E2FA0(v188, type metadata accessor for StaticAccessory);
  return sub_23E478894(v181, v227, v222, v232, v233, v237, v229, v187, v226, v211, v230, v216, v217, v214, v212, v213, v215, v218, (char)v203,
           v219,
           v224,
           v231,
           &v240,
           v236,
           v169,
           v171,
           v172,
           v234,
           v183,
           &v239,
           v189);
}

BOOL StaticAccessory.SpecialMediaCategory.isSiriEndpoint.getter()
{
  _WORD *v0;

  return (*v0 & 0xC000) == 0x4000;
}

uint64_t StaticAccessory.primaryStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v1 + *(int *)(v10 + 84), (uint64_t)v5, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
    v11 = type metadata accessor for StaticService();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v13 = *(_QWORD *)(v1 + *(int *)(v10 + 76));
    if (*(_QWORD *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      v14 = sub_23E1E3300((uint64_t)v9);
      if ((v15 & 1) != 0)
      {
        v16 = v14;
        v17 = *(_QWORD *)(v13 + 56);
        v18 = type metadata accessor for StaticService();
        v19 = *(_QWORD *)(v18 - 8);
        sub_23E1E2F50(v17 + *(_QWORD *)(v19 + 72) * v16, a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
      }
      else
      {
        v21 = type metadata accessor for StaticService();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t StaticAccessory.primaryServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;
  uint64_t v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v1 + *(int *)(v13 + 84), (uint64_t)v5, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_254333F50);
    v14 = type metadata accessor for StaticService();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v15 = *(_QWORD *)(v1 + *(int *)(v13 + 76));
    if (*(_QWORD *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      v16 = sub_23E1E3300((uint64_t)v9);
      if ((v17 & 1) != 0)
      {
        v18 = v16;
        v19 = *(_QWORD *)(v15 + 56);
        v20 = type metadata accessor for StaticService();
        v21 = *(_QWORD *)(v20 - 8);
        sub_23E1E2F50(v19 + *(_QWORD *)(v21 + 72) * v18, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v20);
      }
      else
      {
        v20 = type metadata accessor for StaticService();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = type metadata accessor for StaticService();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    type metadata accessor for StaticService();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v12, 1, v20) != 1)
    {
      v23 = v12[*(int *)(v20 + 84)];
      result = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      goto LABEL_12;
    }
  }
  result = sub_23E1E7C64((uint64_t)v12, &qword_254332DE8);
  v23 = 0;
LABEL_12:
  *a1 = v23;
  return result;
}

HomeDataModel::StaticAccessory::HomePodTypes_optional __swiftcall StaticAccessory.HomePodTypes.init(rawValue:)(Swift::UInt rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if (rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (HomeDataModel::StaticAccessory::HomePodTypes_optional)rawValue;
}

uint64_t StaticAccessory.SpecialMediaCategory.isAppleTVOrHomePod.getter()
{
  unsigned __int16 *v0;
  unsigned int v1;
  unsigned int v2;
  _BOOL4 v4;

  v1 = *v0;
  v2 = v1 >> 14;
  v4 = v1 >> 14 == 2 && v1 == 32769;
  return !v2 || v4;
}

uint64_t StaticAccessory.set(displayName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E47700C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = sub_23E5378F8();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477078()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4770DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47713C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 168) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E477184()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E536F44();
  *(_QWORD *)(v0 + 184) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4771EC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[22];
  v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E477250()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 192);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = sub_23E537538();
  *(_QWORD *)(v0 + 200) = v2;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E4423FC;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_23E267484;
  v4[3] = &block_descriptor_36;
  v4[4] = v3;
  objc_msgSend(v1, sel_updateName_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t StaticAccessory.statusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::Bool v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  char v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v0 + *(int *)(v7 + 108));
  v12 = sub_23E1E2F50(v1, (uint64_t)v9, v11);
  if (v10 != 1)
  {
LABEL_10:
    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    static String.hfLocalized(_:)();
    v20 = v22;
    v21 = v23;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)&v9[*(int *)(v6 + 80)];
  MEMORY[0x24BDAC7A8](v12);
  *(&v32 - 2) = (unint64_t)v9;
  swift_bridgeObjectRetain();
  v14 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v32 - 4), v13);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = v14 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = v14;
    v18 = *(_QWORD *)(v3 + 72);
    v32 = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23E1E2F50(v16, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
      v33 = v5[*(int *)(v2 + 84)];
      v19 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v33);
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (!v19)
        break;
      v16 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
  v20 = 0;
  v21 = 0;
LABEL_11:
  v24 = StaticAccessory.isUpdating.getter();
  v25 = sub_23E2E7C7C(0);
  sub_23E2E9E50(0);
  v28 = v27;
  if ((v24 & 1) != 0)
  {
    static String.hfLocalized(_:)();
    v20 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
      return v30;
    else
      return v25;
  }
  return v20;
}

uint64_t StaticAccessory.set(staticRoom:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_23E477644()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = sub_23E5378F8();
  *(_QWORD *)(v0 + 144) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4776B0()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E477714()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477774()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 160) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4777BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = sub_23E536F44();
  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477824()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[21];
  v2 = (void *)v0[20];
  swift_release();
  v0[23] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E477888()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 184);
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_home);
    *(_QWORD *)(v0 + 192) = v2;
    if (v2)
    {
      *(_QWORD *)(v0 + 200) = sub_23E5378EC();
      sub_23E5378B0();
      return swift_task_switch();
    }

  }
  sub_23E44DA18();
  swift_allocError();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E47795C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E477998()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4779F8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E477A40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E536F44();
  *(_QWORD *)(v0 + 232) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477AAC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[28];
  v2 = (void *)v0[27];
  swift_release();
  v0[30] = objc_msgSend(v2, sel_roomFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E477B10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 240);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 184);
    v2 = *(void **)(v0 + 192);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E477C10;
    v4 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v5 = (_QWORD *)(v0 + 80);
    v5[1] = 0x40000000;
    v5[2] = sub_23E267484;
    v5[3] = &block_descriptor_3_0;
    v5[4] = v4;
    objc_msgSend(v2, sel_assignAccessory_toRoom_completionHandler_, v3, v1, v5);
    return swift_continuation_await();
  }
  else
  {

    sub_23E44DA18();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E477C10()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E477C70()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 192);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E477CB0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticAccessory.accessory.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E477D1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477D88()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E477DEC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477E4C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E477E94()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477EFC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);
  swift_release();
  v3 = objc_msgSend(v2, sel_accessoryFor_, v1);

  return (*(uint64_t (**)(id))(v0 + 8))(v3);
}

uint64_t StaticAccessory.set(showInDashboard:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E477F74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E477FE0()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E478044()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E4780A4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E4780EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E478154()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E4781B8()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMAccessory.shouldShowInDashboard.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticAccessory.set(favorite:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E478224()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E478290()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E4782F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E478354()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E47839C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E478404()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E478468()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMAccessory.isFavorite.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticAccessory.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v3[5] = swift_task_alloc();
  v4 = sub_23E536F80();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E478564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v4 + *(int *)(v5 + 84), v3, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v6 = *(_QWORD *)(v0 + 72);
    sub_23E1E7C64(*(_QWORD *)(v0 + 40), &qword_254333F50);
    v7 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
LABEL_10:
    sub_23E1E7C64(*(_QWORD *)(v0 + 72), &qword_254332DE8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  v9 = *(_QWORD *)(v8 + *(int *)(v5 + 76));
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(v0 + 64);
    swift_bridgeObjectRetain();
    v11 = sub_23E1E3300(v10);
    v12 = *(_QWORD *)(v0 + 72);
    if ((v13 & 1) != 0)
    {
      v14 = v11;
      v15 = *(_QWORD *)(v9 + 56);
      v16 = type metadata accessor for StaticService();
      v17 = *(_QWORD *)(v16 - 8);
      sub_23E1E2F50(v15 + *(_QWORD *)(v17 + 72) * v14, v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    else
    {
      v16 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 72);
    v16 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v18, 1, 1, v16);
  }
  v19 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v19, 1, v16) == 1)
    goto LABEL_10;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v21;
  *v21 = v0;
  v21[1] = sub_23E4787B0;
  return StaticService.set(customIconSymbol:)(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E4787B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t Set<>.staticAccessoriesIgnoringCurrentDevice.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_23E3D5558(v0);
}

uint64_t Set<>.staticAccessoriesIgnoringOnlySensors.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_23E3D55A8(v0);
}

uint64_t sub_23E47887C()
{
  return sub_23E1E4E80();
}

uint64_t sub_23E478888()
{
  return sub_23E1E4E80();
}

uint64_t sub_23E478894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,__int16 *a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,char *a30,uint64_t a31)
{
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t result;
  __int16 v48;
  char v49;

  v48 = *a23;
  v49 = *a30;
  v37 = sub_23E536F80();
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32);
  v38(a9, a1, v37);
  v39 = (int *)type metadata accessor for StaticAccessory(0);
  v40 = (_QWORD *)(a9 + v39[5]);
  *v40 = a2;
  v40[1] = a3;
  sub_23E1E2FDC(a4, a9 + v39[6], type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E4E3C(a5, a9 + v39[7], &qword_2543332A8);
  sub_23E1E4E3C(a6, a9 + v39[8], &qword_2543330E0);
  v41 = a9 + v39[9];
  *(_QWORD *)v41 = a7;
  *(_BYTE *)(v41 + 8) = a8 & 1;
  *(_BYTE *)(a9 + v39[10]) = a10;
  v38(a9 + v39[11], a11, v37);
  *(_QWORD *)(a9 + v39[12]) = a12;
  v42 = (_QWORD *)(a9 + v39[13]);
  *v42 = a13;
  v42[1] = a14;
  *(_BYTE *)(a9 + v39[14]) = a15;
  *(_BYTE *)(a9 + v39[15]) = a16;
  *(_BYTE *)(a9 + v39[16]) = a17;
  *(_BYTE *)(a9 + v39[17]) = a18;
  *(_BYTE *)(a9 + v39[18]) = a19;
  *(_QWORD *)(a9 + v39[19]) = a20;
  *(_QWORD *)(a9 + v39[20]) = a21;
  sub_23E1E4E3C(a22, a9 + v39[21], &qword_254333F50);
  *(_WORD *)(a9 + v39[22]) = v48;
  v43 = (_QWORD *)(a9 + v39[23]);
  *v43 = a24;
  v43[1] = a25;
  *(_QWORD *)(a9 + v39[24]) = a26;
  *(_BYTE *)(a9 + v39[25]) = a27;
  result = sub_23E1E4E3C(a28, a9 + v39[26], &qword_2543332B8);
  *(_BYTE *)(a9 + v39[27]) = a29;
  *(_BYTE *)(a9 + v39[28]) = v49;
  *(_QWORD *)(a9 + v39[29]) = a31;
  return result;
}

uint64_t StaticAccessory.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticAccessory.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.deviceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessory(0);
  return sub_23E1E2F50(v1 + *(int *)(v3 + 24), a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t StaticAccessory.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessory(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 28), a1, &qword_2543332A8);
}

uint64_t StaticAccessory.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessory(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 32), a1, &qword_2543330E0);
}

uint64_t StaticAccessory.matterNodeID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 36));
}

uint64_t StaticAccessory.isDoubleHigh.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 40));
}

uint64_t StaticAccessory.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 44);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticAccessory.roomIds.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.roomName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.isCurrentAccessory.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 56));
}

uint64_t StaticAccessory.isFavorite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 60));
}

uint64_t StaticAccessory.shouldShowInDashboard.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 64));
}

uint64_t StaticAccessory.contributesToHomeStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 68));
}

uint64_t StaticAccessory.showAsIndividualTiles.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 72));
}

uint64_t StaticAccessory.staticServicesDictionary.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.staticServiceIDs.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.primaryServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessory(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 84), a1, &qword_254333F50);
}

uint64_t StaticAccessory.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticAccessory(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticAccessory.accessoryCategory.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.bridgedAccessoryIds.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.showAsBridge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 100));
}

uint64_t StaticAccessory.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticAccessory(0);
  return sub_23E1E7C20(v1 + *(int *)(v3 + 104), a1, &qword_2543332B8);
}

uint64_t StaticAccessory.isReachable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 108));
}

uint64_t StaticAccessory.homeNonResponsiveType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticAccessory(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 112));
  return result;
}

uint64_t StaticAccessory.symptoms.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int *v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;

  v2 = v1;
  v62 = type metadata accessor for StaticSoftwareUpdate(0);
  v65 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v53 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F20();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v11);
  v58 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StaticDeviceMetadata();
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v15);
  v55 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F80();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v54 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23E1EE1C4(&qword_254333DA0, v18, MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v25 = (int *)type metadata accessor for StaticAccessory(0);
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E1E2F50(v2 + v25[6], (uint64_t)v23, type metadata accessor for StaticAccessory.DeviceIdentifier);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v66 = v24;
  v63 = v20;
  if (EnumCaseMultiPayload == 1)
  {
    v27 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v20, v23, v17);
    sub_23E538468();
    sub_23E5374D8();
    v28 = v17;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v17);
  }
  else
  {
    v28 = v17;
    sub_23E538468();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v27 = v54;
  }
  v30 = v56;
  v29 = v57;
  v31 = v55;
  sub_23E1E7C20(v2 + v25[7], v55, &qword_2543332A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v29) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v32 = v31;
    v33 = v51;
    sub_23E1E2FDC(v32, v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
    sub_23E538474();
    StaticDeviceMetadata.hash(into:)();
    sub_23E1E2FA0(v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  }
  v34 = v62;
  v35 = v28;
  v37 = v59;
  v36 = v60;
  v38 = v58;
  sub_23E1E7C20(v2 + v25[8], v58, &qword_2543330E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v39 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v52, v38, v36);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  }
  if (*(_BYTE *)(v2 + v25[9] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538498();
  }
  sub_23E538474();
  sub_23E5374D8();
  v40 = *(_QWORD *)(v2 + v25[12]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v40);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v25[13] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v41 = v63;
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  sub_23E538474();
  v42 = *(_QWORD *)(v2 + v25[19]);
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)a1, v42);
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v2 + v25[20]);
  swift_bridgeObjectRetain();
  sub_23E26140C((uint64_t)a1, v43);
  swift_bridgeObjectRelease();
  v44 = v64;
  sub_23E1E7C20(v2 + v25[21], v64, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v44, 1, v35) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v41, v44, v35);
    sub_23E538474();
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v41, v35);
  }
  v45 = (uint64_t)v61;
  if ((~*(unsigned __int16 *)(v2 + v25[22]) & 0xFEFC) != 0)
  {
    v67 = *(_WORD *)(v2 + v25[22]);
    sub_23E538474();
    StaticAccessory.SpecialMediaCategory.hash(into:)();
  }
  else
  {
    sub_23E538474();
  }
  if (*(_QWORD *)(v2 + v25[23] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v46 = *(_QWORD *)(v2 + v25[24]);
  sub_23E538474();
  if (v46)
  {
    swift_bridgeObjectRetain();
    sub_23E26140C((uint64_t)a1, v46);
    swift_bridgeObjectRelease();
  }
  sub_23E538474();
  sub_23E1E7C20(v2 + v25[26], v45, &qword_2543332B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v45, 1, v34) == 1)
  {
    sub_23E538474();
  }
  else
  {
    v47 = v53;
    sub_23E1E2FDC(v45, v53, type metadata accessor for StaticSoftwareUpdate);
    sub_23E538474();
    sub_23E5374D8();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_23E1E2FA0(v47, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_23E538474();
  sub_23E538468();
  v48 = *(_QWORD *)(v2 + v25[29]);
  if (!v48)
    return sub_23E538474();
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E240D30((uint64_t)a1, v48);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E47989C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E4798C4 + 4 * byte_23E552C70[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E4798C4()
{
  return 1701667182;
}

unint64_t sub_23E4798D4()
{
  return 0xD000000000000010;
}

unint64_t sub_23E479A68()
{
  return 0xD000000000000014;
}

unint64_t sub_23E479A80()
{
  return 0xD000000000000011;
}

unint64_t sub_23E479A98()
{
  return 0xD000000000000013;
}

uint64_t sub_23E479AB0()
{
  return 0x72427341776F6873;
}

uint64_t sub_23E479AD0()
{
  return 0x6572617774666F73;
}

uint64_t sub_23E479AF4()
{
  return 0x6168636165527369;
}

void sub_23E479B14()
{
  JUMPOUT(0x23E479B2CLL);
}

uint64_t sub_23E479B38()
{
  return 0x736D6F74706D7973;
}

uint64_t sub_23E479B50()
{
  unsigned __int8 *v0;

  return sub_23E47989C(*v0);
}

uint64_t sub_23E479B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E488E78(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E479B7C(_BYTE *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_23E479B88()
{
  sub_23E485784();
  return sub_23E538570();
}

uint64_t sub_23E479BB0()
{
  sub_23E485784();
  return sub_23E53857C();
}

uint64_t StaticAccessory.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  uint64_t v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47880);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E485784();
  sub_23E5384EC();
  LOBYTE(v16) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticAccessory(0);
    LOBYTE(v16) = 1;
    sub_23E538270();
    v14 = v3;
    LOBYTE(v16) = 2;
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    sub_23E1EE1C4(&qword_256D46440, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
    sub_23E5382AC();
    LOBYTE(v16) = 3;
    type metadata accessor for StaticDeviceMetadata();
    sub_23E1EE1C4(&qword_256D471F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
    sub_23E538234();
    LOBYTE(v16) = 4;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
    v10 = v14;
    LOBYTE(v16) = 5;
    sub_23E538264();
    LOBYTE(v16) = 6;
    sub_23E53827C();
    LOBYTE(v16) = 7;
    sub_23E5382AC();
    v16 = *(_QWORD *)(v10 + v9[12]);
    v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E4857C8(&qword_256D3F750, &qword_256D3F718, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v16) = 9;
    sub_23E5381EC();
    LOBYTE(v16) = 10;
    sub_23E53827C();
    LOBYTE(v16) = 11;
    sub_23E53827C();
    LOBYTE(v16) = 12;
    sub_23E53827C();
    LOBYTE(v16) = 13;
    sub_23E53827C();
    LOBYTE(v16) = 14;
    sub_23E53827C();
    v16 = *(_QWORD *)(v14 + v9[19]);
    v15 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
    sub_23E297E64();
    sub_23E5382AC();
    v16 = *(_QWORD *)(v14 + v9[20]);
    v15 = 16;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E4857C8(&qword_256D3FFA0, &qword_254333DC0, MEMORY[0x24BEE12A0]);
    v13[1] = v11;
    sub_23E5382AC();
    LOBYTE(v16) = 17;
    sub_23E538234();
    LOWORD(v16) = *(_WORD *)(v14 + v9[22]);
    v15 = 18;
    sub_23E39012C();
    sub_23E538234();
    LOBYTE(v16) = 19;
    sub_23E5381EC();
    v16 = *(_QWORD *)(v14 + v9[24]);
    v15 = 20;
    sub_23E538234();
    LOBYTE(v16) = 21;
    sub_23E53827C();
    LOBYTE(v16) = 22;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_23E1EE1C4(&qword_256D46470, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
    sub_23E538234();
    LOBYTE(v16) = 23;
    sub_23E53827C();
    LOBYTE(v16) = *(_BYTE *)(v14 + v9[28]);
    v15 = 24;
    sub_23E3760D8();
    sub_23E5382AC();
    v16 = *(_QWORD *)(v14 + v9[29]);
    v15 = 25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
    sub_23E3FCC18(&qword_256D46460, (uint64_t (*)(void))sub_23E3FCB4C, MEMORY[0x24BEE1700]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticAccessory.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticAccessory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  int *v61;
  char *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v3);
  v52 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v51 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v56);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v63 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v47 - v17;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47890);
  v19 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = (int *)type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v61);
  v62 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_23E485784();
  v58 = v21;
  v24 = v59;
  sub_23E5384E0();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  v25 = (uint64_t)v12;
  v50 = v16;
  v59 = v19;
  LOBYTE(v65) = 0;
  v26 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v27 = v62;
  v28 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v49 = v13;
  v28(v62, v18, v13);
  LOBYTE(v65) = 1;
  v29 = sub_23E538144();
  v48 = v28;
  v30 = v61;
  v31 = (uint64_t *)&v27[v61[5]];
  *v31 = v29;
  v31[1] = v32;
  LOBYTE(v65) = 2;
  sub_23E1EE1C4(&qword_256D46480, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
  sub_23E538180();
  v56 = v26;
  sub_23E1E2FDC(v25, (uint64_t)&v27[v30[6]], type metadata accessor for StaticAccessory.DeviceIdentifier);
  type metadata accessor for StaticDeviceMetadata();
  LOBYTE(v65) = 3;
  sub_23E1EE1C4(&qword_256D47228, (uint64_t (*)(uint64_t))type metadata accessor for StaticDeviceMetadata, (uint64_t)&protocol conformance descriptor for StaticDeviceMetadata);
  v33 = (uint64_t)v55;
  sub_23E538108();
  sub_23E1E4E3C(v33, (uint64_t)&v27[v30[7]], &qword_2543332A8);
  sub_23E536F20();
  LOBYTE(v65) = 4;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v34 = (uint64_t)v54;
  sub_23E538108();
  sub_23E1E4E3C(v34, (uint64_t)&v27[v30[8]], &qword_2543330E0);
  LOBYTE(v65) = 5;
  v35 = sub_23E538138();
  v36 = &v27[v30[9]];
  *(_QWORD *)v36 = v35;
  v36[8] = v37 & 1;
  LOBYTE(v65) = 6;
  v27[v30[10]] = sub_23E538150() & 1;
  LOBYTE(v65) = 7;
  v38 = v50;
  sub_23E538180();
  v48(&v27[v30[11]], v38, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v64 = 8;
  sub_23E485840(&qword_256D3F740, &qword_256D3F718, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v27[v30[12]] = v65;
  LOBYTE(v65) = 9;
  v39 = sub_23E5380D8();
  v40 = (uint64_t *)&v62[v61[13]];
  *v40 = v39;
  v40[1] = v41;
  LOBYTE(v65) = 10;
  v62[v61[14]] = sub_23E538150() & 1;
  LOBYTE(v65) = 11;
  v62[v61[15]] = sub_23E538150() & 1;
  LOBYTE(v65) = 12;
  v62[v61[16]] = sub_23E538150() & 1;
  LOBYTE(v65) = 13;
  v62[v61[17]] = sub_23E538150() & 1;
  LOBYTE(v65) = 14;
  v62[v61[18]] = sub_23E538150() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v64 = 15;
  sub_23E298768();
  sub_23E538180();
  *(_QWORD *)&v62[v61[19]] = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v64 = 16;
  sub_23E485840(&qword_256D3FFB0, &qword_254333DC0, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)&v62[v61[20]] = v65;
  LOBYTE(v65) = 17;
  sub_23E538108();
  sub_23E1E4E3C(v51, (uint64_t)&v62[v61[21]], &qword_254333F50);
  v64 = 18;
  sub_23E39025C();
  sub_23E538108();
  *(_WORD *)&v62[v61[22]] = v65;
  LOBYTE(v65) = 19;
  v42 = sub_23E5380D8();
  v43 = (uint64_t *)&v62[v61[23]];
  *v43 = v42;
  v43[1] = v44;
  v64 = 20;
  sub_23E538108();
  *(_QWORD *)&v62[v61[24]] = v65;
  LOBYTE(v65) = 21;
  v62[v61[25]] = sub_23E538150() & 1;
  type metadata accessor for StaticSoftwareUpdate(0);
  LOBYTE(v65) = 22;
  sub_23E1EE1C4(&qword_256D464A8, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
  sub_23E538108();
  sub_23E1E4E3C(v52, (uint64_t)&v62[v61[26]], &qword_2543332B8);
  LOBYTE(v65) = 23;
  v62[v61[27]] = sub_23E538150() & 1;
  v64 = 24;
  sub_23E376160();
  sub_23E538180();
  v62[v61[28]] = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D46458);
  v64 = 25;
  sub_23E3FCC18(&qword_256D46498, (uint64_t (*)(void))sub_23E3FCC80, MEMORY[0x24BEE1720]);
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v57);
  v45 = (uint64_t)v62;
  *(_QWORD *)&v62[v61[29]] = v65;
  sub_23E1E2F50(v45, v53, type metadata accessor for StaticAccessory);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  return sub_23E1E2FA0(v45, type metadata accessor for StaticAccessory);
}

uint64_t sub_23E47B2DC()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E47B31C()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticAccessory.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E47B354@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessory.init(from:)(a1, a2);
}

uint64_t sub_23E47B368(_QWORD *a1)
{
  return StaticAccessory.encode(to:)(a1);
}

uint64_t StaticAccessory.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t result;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  Swift::String v35;
  int v36;
  _BYTE *v37;
  uint64_t countAndFlagsBits;
  void *object;
  HomeDataModel::StaticRenderingMode renderingMode;
  uint64_t v41;
  void *v42;
  HomeDataModel::StaticRenderingMode v43;
  uint64_t v44;
  void *v45;
  void *v46;
  _BYTE v47[12];
  int v48;
  void *v49;
  uint64_t v50;
  _BYTE *v51;
  char v52;
  char v53;
  HomeDataModel::Icon v54;

  v3 = (int *)type metadata accessor for StaticService();
  v4 = *((_QWORD *)v3 - 1);
  MEMORY[0x24BDAC7A8](v3);
  v51 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v47[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v1 + *(int *)(v16 + 84), (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_254333F50);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v4 + 56))(v15, 1, 1, v3);
LABEL_10:
    sub_23E1E7C64((uint64_t)v15, &qword_254332DE8);
    if (qword_256D3ED80 != -1)
      swift_once();
    v20 = unk_256D42D60;
    v21 = byte_256D42D68;
    v22 = qword_256D42D70;
    v23 = unk_256D42D78;
    v24 = byte_256D42D80;
    v25 = qword_256D42D88;
    v26 = unk_256D42D90;
    v27 = byte_256D42D98;
    v28 = qword_256D42DA0;
    v29 = unk_256D42DA8;
    v30 = byte_256D42DB0;
    *(_QWORD *)a1 = qword_256D42D58;
    *(_QWORD *)(a1 + 8) = v20;
    *(_BYTE *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    *(_QWORD *)(a1 + 32) = v23;
    *(_BYTE *)(a1 + 40) = v24;
    *(_QWORD *)(a1 + 48) = v25;
    *(_QWORD *)(a1 + 56) = v26;
    *(_BYTE *)(a1 + 64) = v27;
    *(_QWORD *)(a1 + 72) = v28;
    *(_QWORD *)(a1 + 80) = v29;
    *(_BYTE *)(a1 + 88) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
  v17 = *(_QWORD *)(v1 + *(int *)(v16 + 76));
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_23E1E3300((uint64_t)v12);
    if ((v19 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v4 + 72) * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v4 + 56))(v15, 0, 1, v3);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v4 + 56))(v15, 1, 1, v3);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v4 + 56))(v15, 1, 1, v3);
  }
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v4 + 48))(v15, 1, v3) == 1)
    goto LABEL_10;
  v32 = (uint64_t *)&v15[v3[20]];
  v33 = (void *)v32[1];
  if (v33)
  {
    v34 = *v32;
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = v34;
    v35._object = v33;
    Icon.init(customIconName:)(&v54, v35);
  }
  else
  {
    v36 = v15[v3[23]];
    v37 = v51;
    sub_23E1E2F50((uint64_t)v15, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v36 == 53)
      LOBYTE(v36) = v37[v3[21]];
    sub_23E1E2FA0((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v53 = v36;
    v52 = v15[v3[22]];
    Icon.init(serviceKind:serviceSubKind:)(&v54, (HomeDataModel::ServiceKind)&v53, (HomeDataModel::ServiceSubKind_optional)&v52);
  }
  countAndFlagsBits = v54.tileOnStateIconInfo.name._countAndFlagsBits;
  object = v54.tileOnStateIconInfo.name._object;
  renderingMode = v54.tileOnStateIconInfo.renderingMode;
  v41 = v54.tileOffStateIconInfo.name._countAndFlagsBits;
  v42 = v54.tileOffStateIconInfo.name._object;
  v43 = v54.tileOffStateIconInfo.renderingMode;
  v44 = v54.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
  v45 = v54.accessoryControlOnStateIconInfo.name._object;
  LODWORD(v51) = v54.accessoryControlOnStateIconInfo.renderingMode;
  v49 = v54.accessoryControlOffStateIconInfo.name._object;
  v50 = v54.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
  v48 = v54.accessoryControlOffStateIconInfo.renderingMode;
  result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *(_QWORD *)a1 = countAndFlagsBits;
  *(_QWORD *)(a1 + 8) = object;
  *(_BYTE *)(a1 + 16) = renderingMode;
  *(_QWORD *)(a1 + 24) = v41;
  *(_QWORD *)(a1 + 32) = v42;
  *(_BYTE *)(a1 + 40) = v43;
  *(_QWORD *)(a1 + 48) = v44;
  *(_QWORD *)(a1 + 56) = v45;
  *(_BYTE *)(a1 + 64) = (_BYTE)v51;
  v46 = v49;
  *(_QWORD *)(a1 + 72) = v50;
  *(_QWORD *)(a1 + 80) = v46;
  *(_BYTE *)(a1 + 88) = v48;
  return result;
}

uint64_t StaticAccessory.toggle()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v2[9] = swift_task_alloc();
  v3 = sub_23E536F80();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E47B824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v4 + *(int *)(v5 + 84), v3, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v6 = *(_QWORD *)(v0 + 104);
    sub_23E1E7C64(*(_QWORD *)(v0 + 72), &qword_254333F50);
    v7 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
LABEL_10:
    v20 = *(_QWORD *)(v0 + 56);
    sub_23E1E7C64(*(_QWORD *)(v0 + 104), &qword_254332DE8);
    v21 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  v9 = *(_QWORD *)(v8 + *(int *)(v5 + 76));
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRetain();
    v11 = sub_23E1E3300(v10);
    v12 = *(_QWORD *)(v0 + 104);
    if ((v13 & 1) != 0)
    {
      v14 = v11;
      v15 = *(_QWORD *)(v9 + 56);
      v16 = type metadata accessor for StaticService();
      v17 = *(_QWORD *)(v16 - 8);
      sub_23E1E2F50(v15 + *(_QWORD *)(v17 + 72) * v14, v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    else
    {
      v16 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 104);
    v16 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v18, 1, 1, v16);
  }
  v19 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v19, 1, v16) == 1)
    goto LABEL_10;
  *(_QWORD *)(v0 + 48) = 2;
  *(_OWORD *)(v0 + 16) = xmmword_23E53C8E0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v23;
  *v23 = v0;
  v23[1] = sub_23E47BAC4;
  return StaticService.toggle(options:context:)(*(_QWORD *)(v0 + 56), (_QWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
}

uint64_t sub_23E47BAC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 104);
  v3 = *v0;
  swift_task_dealloc();
  sub_23E1E2FA0(v1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_23E47BB38(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if ((~*(unsigned __int16 *)(v1 + *(int *)(a1 + 88)) & 0xFEFC) != 0)
  {
    sub_23E537364();
  }
  else
  {
    StaticAccessory.displayAsServiceKind.getter(&v2);
    ServiceKind.foregroundColor.getter();
  }
}

void StaticAccessory.foregroundColor.getter()
{
  uint64_t v0;
  char v1;

  if ((~*(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 88)) & 0xFEFC) != 0)
  {
    sub_23E537364();
  }
  else
  {
    StaticAccessory.displayAsServiceKind.getter(&v1);
    ServiceKind.foregroundColor.getter();
  }
}

uint64_t sub_23E47BBD8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticAccessory.primaryStaticService.getter((uint64_t)v4);
  v5 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
    v7 = 0;
  }
  else
  {
    v7 = v4[*(int *)(v5 + 84)];
    result = sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *a1 = v7;
  return result;
}

uint64_t StaticAccessory.displayAsServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  int v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v3 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v17 - v10;
  StaticAccessory.primaryStaticService.getter((uint64_t)&v17 - v10);
  v12 = type metadata accessor for StaticService();
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (v13(v11, 1, v12) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_254332DE8);
    sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for StaticAccessory);
  }
  else
  {
    v14 = v11[*(int *)(v12 + 92)];
    sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50(v1, (uint64_t)v5, type metadata accessor for StaticAccessory);
    if (v14 != 53)
    {
      result = sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory);
      *a1 = v14;
      return result;
    }
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v9);
  if (v13(v9, 1, v12) == 1)
  {
    sub_23E1E7C64((uint64_t)v9, &qword_254332DE8);
    v15 = 0;
  }
  else
  {
    v15 = v9[*(int *)(v12 + 84)];
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  *a1 = v15;
  return sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory);
}

uint64_t sub_23E47BE74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL StaticAccessory.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  _BYTE v28[16];

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v28[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v28[-v13];
  StaticAccessory.primaryStaticService.getter((uint64_t)&v28[-v13]);
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48);
  if (v15(v14, 1, v2) == 1)
  {
    v16 = sub_23E1E7C64((uint64_t)v14, &qword_254332DE8);
    v17 = 0;
  }
  else
  {
    v17 = v14[*(int *)(v2 + 84)];
    v16 = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v28[15] = v17;
  if (ServiceKind.rawValue.getter(v16) == 0xD000000000000024 && v18 == 0x800000023E55FC60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      StaticAccessory.primaryStaticService.getter((uint64_t)v12);
      if (v15(v12, 1, v2) != 1)
      {
        v26 = StaticService.isActivated.getter();
        sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        return v26;
      }
      sub_23E1E7C64((uint64_t)v12, &qword_254332DE8);
      return 0;
    }
  }
  v20 = type metadata accessor for StaticAccessory(0);
  v21 = *(_QWORD *)(v1 + *(int *)(v20 + 80));
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)&v28[-16] = v1;
  swift_bridgeObjectRetain();
  v22 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v28[-32], v21);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v24 = v22 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v25 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v26 = 0;
  do
  {
    sub_23E1E2F50(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2F50((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v26 = v26 || StaticService.isActivated.getter();
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v24 += v25;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease_n();
  return v26;
}

uint64_t StaticAccessory.canBeToggled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  void *v23;
  _BYTE v24[32];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v0 + *(int *)(v11 + 84), (uint64_t)v3, &qword_254333F50);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254333F50);
    v12 = type metadata accessor for StaticService();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
LABEL_10:
    sub_23E1E7C64((uint64_t)v10, &qword_254332DE8);
    v20 = 0;
    return v20 & 1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v3, v4);
  v13 = *(_QWORD *)(v0 + *(int *)(v11 + 76));
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_23E1E3300((uint64_t)v7);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      v17 = *(_QWORD *)(v13 + 56);
      v18 = type metadata accessor for StaticService();
      v19 = *(_QWORD *)(v18 - 8);
      sub_23E1E2F50(v17 + *(_QWORD *)(v19 + 72) * v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
    }
    else
    {
      v18 = type metadata accessor for StaticService();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for StaticService();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v10, 1, v18) == 1)
    goto LABEL_10;
  v22 = v10[*(int *)(v18 + 84)];
  sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v24[31] = v22;
  ServiceKind.togglingCharacteristicKind.getter(v24);
  if (v24[0] == 174)
  {
    if (qword_256D3ED38 != -1)
      swift_once();
    swift_beginAccess();
    v23 = off_256D42460;
    swift_bridgeObjectRetain();
    v20 = sub_23E1E333C(v22, (uint64_t)v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 1;
  }
  return v20 & 1;
}

uint64_t sub_23E47C500(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E23C694;
  return StaticAccessory.toggle()(a1);
}

uint64_t sub_23E47C550()
{
  return 0x6341636974617473;
}

uint64_t StaticAccessory.isUpdating.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[2];
  _BYTE v15[16];
  uint64_t v16;
  char v17;

  v1 = type metadata accessor for StaticService();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v16 = v0;
  swift_bridgeObjectRetain();
  v6 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v15, v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v9 = *(_QWORD *)(v2 + 72);
    v14[1] = v6;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23E1E2F50(v8, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v17 = v4[*(int *)(v1 + 84)];
      swift_bridgeObjectRetain();
      v10 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      v11 = swift_bridgeObjectRetain();
      v12 = sub_23E2B91CC(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v12 & 1) != 0)
        break;
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t StaticAccessory.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::Bool v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v0 + *(int *)(v7 + 108));
  v12 = sub_23E1E2F50(v1, (uint64_t)v9, v11);
  if (v10 != 1)
  {
LABEL_10:
    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    static String.hfLocalized(_:)();
    v20 = v22;
    v21 = v23;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)&v9[*(int *)(v6 + 80)];
  MEMORY[0x24BDAC7A8](v12);
  *(&v32 - 2) = (unint64_t)v9;
  swift_bridgeObjectRetain();
  v14 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v32 - 4), v13);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = v14 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = v14;
    v18 = *(_QWORD *)(v3 + 72);
    v32 = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23E1E2F50(v16, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 = *(_QWORD *)&v5[*(int *)(v2 + 104)];
      v33 = v5[*(int *)(v2 + 84)];
      v19 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v33);
      sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (!v19)
        break;
      v16 += v18;
      if (!--v15)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
  v20 = 0;
  v21 = 0;
LABEL_11:
  v24 = StaticAccessory.isUpdating.getter();
  v25 = sub_23E2E7C7C(1);
  v27 = v26;
  sub_23E2E9E50(1);
  v34 = v20;
  v35 = v21;
  v36 = v24 & 1;
  v37 = 0;
  v38 = v25;
  v39 = v27;
  v40 = v28;
  v41 = v29;
  v30 = sub_23E3F4850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

unint64_t StaticAccessory.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t (*v28)(_QWORD);
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79[3];

  v1 = v0;
  v64 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StaticService();
  v69 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v77 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v62 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v76 = (uint64_t)&v62 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v11);
  v63 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v73 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v62 - v16;
  v74 = type metadata accessor for StaticSoftwareUpdate(0);
  v18 = *(_QWORD *)(v74 - 8);
  v19 = MEMORY[0x24BDAC7A8](v74);
  v72 = (uint64_t)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v62 - v21;
  v23 = (int *)type metadata accessor for StaticAccessory(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(unsigned __int8 *)(v1 + *(int *)(v24 + 108));
  sub_23E1E2F50(v1, (uint64_t)v26, v28);
  if (v27 == 1)
  {
    sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory);
  }
  else
  {
    v29 = StaticAccessory.isUpdating.getter();
    sub_23E1E2FA0((uint64_t)v26, type metadata accessor for StaticAccessory);
    if ((v29 & 1) == 0)
      return 0;
  }
  sub_23E1E7C20(v1 + v23[26], (uint64_t)v17, &qword_2543332B8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v70(v17, 1, v74) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_2543332B8);
    v30 = v69;
    v31 = v65;
    v32 = (uint64_t)v77;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v17, (uint64_t)v22, type metadata accessor for StaticSoftwareUpdate);
    sub_23E346FDC();
    v30 = v69;
    v31 = v65;
    if (LOBYTE(v79[0]) == 8)
    {
      sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StaticSoftwareUpdate);
      v32 = (uint64_t)v77;
    }
    else
    {
      v32 = (uint64_t)v77;
      if (LOBYTE(v79[0]) == 3 || LOBYTE(v79[0]) == 5)
      {
        sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StaticSoftwareUpdate);
        return 0xD000000000000015;
      }
      sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StaticSoftwareUpdate);
    }
  }
  if (*(_QWORD *)(v1 + v23[29]))
  {
    v34 = swift_bridgeObjectRetain();
    v79[0] = sub_23E24A098(v34);
    sub_23E48FCA4(v79);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v79[0] + 16))
    {
      v35 = *(unsigned __int8 *)(v79[0] + 32);
      swift_release();
      if (v35 <= 0x13 && ((1 << v35) & 0x80003) != 0)
        return 0xD000000000000018;
    }
    else
    {
      swift_release();
    }
  }
  v36 = *(_QWORD *)(v1 + v23[19]);
  v37 = *(_QWORD *)(v36 + 64);
  v67 = v36 + 64;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & v37;
  v62 = v31 + 8;
  v68 = (unint64_t)(v38 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v41 = 0;
  v78 = v4;
  v75 = v36;
  while (1)
  {
    if (v40)
    {
      v42 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v43 = v42 | (v41 << 6);
      goto LABEL_41;
    }
    if (__OFADD__(v41++, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v41 >= v68)
      goto LABEL_51;
    v45 = *(_QWORD *)(v67 + 8 * v41);
    if (!v45)
      break;
LABEL_40:
    v40 = (v45 - 1) & v45;
    v43 = __clz(__rbit64(v45)) + (v41 << 6);
LABEL_41:
    v47 = *(_QWORD *)(v36 + 56) + *(_QWORD *)(v30 + 72) * v43;
    v48 = v76;
    sub_23E1E2F50(v47, v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FDC(v48, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    LODWORD(v48) = v9[*(int *)(v4 + 32)];
    sub_23E1E2F50((uint64_t)v9, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((_DWORD)v48 == 1)
    {
      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      LOBYTE(v79[0]) = *(_BYTE *)(v32 + *(int *)(v4 + 84));
      swift_bridgeObjectRetain();
      v49 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      v50 = swift_bridgeObjectRetain();
      v51 = sub_23E2B91CC(v50, v49);
      swift_bridgeObjectRelease();
      v30 = v69;
      swift_bridgeObjectRelease_n();
      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v51 & 1) == 0)
        goto LABEL_23;
    }
    v52 = v78;
    v53 = v73;
    sub_23E1E7C20((uint64_t)&v9[*(int *)(v78 + 112)], v73, &qword_2543332B8);
    v54 = v74;
    if (v70((char *)v53, 1, v74) != 1)
    {
      v55 = v53;
      v56 = v72;
      sub_23E1E2FDC(v55, v72, type metadata accessor for StaticSoftwareUpdate);
      sub_23E1E2F50(v56 + *(int *)(v54 + 20), v71, type metadata accessor for StaticSoftwareUpdate.Kind);
      v57 = (char *)&loc_23E47D0BC + *((int *)qword_23E47D2C0 + swift_getEnumCaseMultiPayload());
      __asm { BR              X9 }
    }
    sub_23E1E7C64(v53, &qword_2543332B8);
    if ((v9[*(int *)(v52 + 36)] & 1) != 0)
    {
      swift_release();
      v58 = v63;
      sub_23E1E2FDC((uint64_t)v9, v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v4 = v78;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v58, 0, 1, v78);
      goto LABEL_52;
    }
LABEL_23:
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v36 = v75;
    v32 = (uint64_t)v77;
    v4 = v78;
  }
  v46 = v41 + 1;
  if (v41 + 1 >= v68)
    goto LABEL_51;
  v45 = *(_QWORD *)(v67 + 8 * v46);
  if (v45)
    goto LABEL_39;
  v46 = v41 + 2;
  if (v41 + 2 >= v68)
    goto LABEL_51;
  v45 = *(_QWORD *)(v67 + 8 * v46);
  if (v45)
    goto LABEL_39;
  v46 = v41 + 3;
  if (v41 + 3 >= v68)
    goto LABEL_51;
  v45 = *(_QWORD *)(v67 + 8 * v46);
  if (v45)
    goto LABEL_39;
  v46 = v41 + 4;
  if (v41 + 4 >= v68)
    goto LABEL_51;
  v45 = *(_QWORD *)(v67 + 8 * v46);
  if (v45)
  {
LABEL_39:
    v41 = v46;
    goto LABEL_40;
  }
  v46 = v41 + 5;
  if (v41 + 5 < v68)
  {
    v45 = *(_QWORD *)(v67 + 8 * v46);
    if (!v45)
    {
      while (1)
      {
        v41 = v46 + 1;
        if (__OFADD__(v46, 1))
          break;
        if (v41 >= v68)
          goto LABEL_51;
        v45 = *(_QWORD *)(v67 + 8 * v41);
        ++v46;
        if (v45)
          goto LABEL_40;
      }
LABEL_59:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x23E47D2C0);
    }
    goto LABEL_39;
  }
LABEL_51:
  swift_release();
  v58 = v63;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v63, 1, 1, v4);
LABEL_52:
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v58, 1, v4) == 1)
  {
    sub_23E1E7C64(v58, &qword_254332DE8);
    return 0;
  }
  else
  {
    v59 = StaticService.tileStatusStringIconSymbolSuffix.getter();
    v61 = v60;
    sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v61)
      return v59;
    else
      return 0;
  }
}

BOOL StaticAccessory.hasDetailAttentionMessages.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E2E9E50(1);
  v1 = v0;
  if (v0)
    swift_bridgeObjectRelease();
  return v1 != 0;
}

uint64_t sub_23E47D308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 76));
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_23E1E3300(a1), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = type metadata accessor for StaticService();
    v11 = *(_QWORD *)(v10 - 8);
    sub_23E1E2F50(v9 + *(_QWORD *)(v11 + 72) * v8, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    v13 = type metadata accessor for StaticService();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t StaticAccessory.visibleStaticServices.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for StaticAccessory(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E4754F4(v0);
  v2 = sub_23E4FDEC8(v1);
  swift_bridgeObjectRelease();
  return v2;
}

BOOL StaticAccessory.isMultiServiceAccessory.getter()
{
  return StaticAccessory.hasVisibleServices(minCount:)(2);
}

Swift::Bool __swiftcall StaticAccessory.hasVisibleServices(minCount:)(Swift::Int minCount)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  Swift::Bool result;
  _BYTE v16[16];
  uint64_t v17;

  v3 = type metadata accessor for StaticService();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  v17 = v1;
  swift_bridgeObjectRetain();
  v8 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v16, v7);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v10 = 0;
    v11 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v12 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23E1E2F50(v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v13 = StaticService.isVisibleService.getter();
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v13 & 1) != 0)
      {
        if (__OFADD__(v10++, 1))
        {
          __break(1u);
          return result;
        }
        if (v10 >= minCount)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticAccessory.temperatureStringStatusIcon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v30 = a1;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v29 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v1 + *(int *)(v15 + 84), (uint64_t)v7, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23E1E7C64((uint64_t)v7, &qword_254333F50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
LABEL_10:
    result = sub_23E1E7C64((uint64_t)v14, &qword_254332DE8);
    v20 = v30;
    v30[1] = 0;
    v20[2] = 0;
    *v20 = 0;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v16 = *(_QWORD *)(v1 + *(int *)(v15 + 76));
  if (*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_23E1E3300((uint64_t)v11);
    if ((v18 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v3 + 72) * v17, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, 1, 1, v2);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2) == 1)
    goto LABEL_10;
  v21 = v29;
  sub_23E1E2F50((uint64_t)v14, v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E4E38CC(v21);
  if (!v23)
  {
    sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_16:
    v28 = v30;
    *v30 = 0;
    v28[1] = 0;
    v28[2] = 0;
    return sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v24 = v22;
  v25 = v23;
  v26 = sub_23E4E3AB8(v21);
  sub_23E1E2FA0(v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v27 = v30;
  *v30 = v24;
  v27[1] = v25;
  v27[2] = v26;
  return sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t StaticAccessory.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t result;
  __int16 v26;
  char v27;
  char v28;
  int v29;
  __int16 v30;
  uint64_t *v31;
  void *v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  char v36;

  v35 = a1;
  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for StaticAccessory(0);
  sub_23E1E7C20(v1 + *(int *)(v16 + 84), (uint64_t)v8, &qword_254333F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_254333F50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
    v17 = v35;
LABEL_10:
    result = sub_23E1E7C64((uint64_t)v15, &qword_254332DE8);
    v26 = 0;
    v27 = 88;
    v28 = 4;
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v18 = *(_QWORD *)(v1 + *(int *)(v16 + 76));
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_23E1E3300((uint64_t)v12);
    if ((v20 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v3 + 72) * v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v22 = v15;
      v23 = 0;
    }
    else
    {
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v22 = v15;
      v23 = 1;
    }
    v24 = (int *)v2;
    v21(v22, v23, 1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = (int *)v2;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
  }
  v17 = v35;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v3 + 48))(v15, 1, v24) == 1)
    goto LABEL_10;
  v29 = v15[v24[23]];
  sub_23E1E2F50((uint64_t)v15, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  if (v29 == 53)
    LOWORD(v29) = v5[v24[21]];
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v30 = v15[v24[22]];
  v31 = (uint64_t *)&v15[v24[20]];
  v32 = (void *)v31[1];
  if (v32)
  {
    v33 = *v31;
    swift_bridgeObjectRetain();
    v34._countAndFlagsBits = v33;
    v34._object = v32;
    IconSymbol.init(rawValue:)(v34);
    v27 = v36;
  }
  else
  {
    v27 = 88;
  }
  v26 = v29 | (v30 << 8);
  result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v28 = 0;
LABEL_17:
  *(_WORD *)v17 = v26;
  *(_BYTE *)(v17 + 2) = v28;
  *(_BYTE *)(v17 + 3) = v27;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  return result;
}

uint64_t StaticAccessory.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory(0);
  sub_23E267924(*(_QWORD *)(v1 + *(int *)(v6 + 48)), (uint64_t)v5);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  __break(1u);
  return result;
}

uint64_t sub_23E47DC84(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 108));
}

uint64_t StaticAccessory.staticDevice.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_23E47DCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 36);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)v2;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v4 = type metadata accessor for StaticMatterDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 64) = sub_23E5378F8();
    *(_QWORD *)(v0 + 72) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E47DD78()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E47DDDC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47DE3C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 88) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E47DE84()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47DEE4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[11];
  swift_release();
  swift_getKeyPath();
  v0[2] = v1;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v2 = (_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  v0[13] = v2[1];
  v0[14] = v2[2];
  v0[15] = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23E47DFCC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v1 + 16))
  {
    v3 = *(_QWORD *)(v0 + 40);
    goto LABEL_5;
  }
  v2 = sub_23E211288(*(_QWORD *)(v0 + 56));
  v3 = *(_QWORD *)(v0 + 40);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    v9 = type metadata accessor for StaticMatterDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
    goto LABEL_6;
  }
  v5 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 56);
  v7 = type metadata accessor for StaticMatterDevice();
  v8 = *(_QWORD *)(v7 - 8);
  sub_23E1E2F50(v6 + *(_QWORD *)(v8 + 72) * v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
LABEL_6:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticAccessory.set(includedInStatus:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E47E0CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47E138()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E47E19C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47E1FC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E47E244()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E47E2AC()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E47E310()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v3 = v1;
    HMAccessory.contributesToHomeStatus.setter(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_23E47E360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  char *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v3 = type metadata accessor for StaticService();
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v41[2] = (char *)v41 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v41 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v41 - v11;
  v13 = type metadata accessor for StaticAccessory(0);
  if ((~*(unsigned __int16 *)(a1 + *(int *)(v13 + 88)) & 0xFEFC) != 0)
    return 1;
  v14 = *(_QWORD *)(a1 + *(int *)(v13 + 80));
  MEMORY[0x24BDAC7A8](v13);
  v41[-2] = a1;
  swift_bridgeObjectRetain();
  v15 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v41[-4], v14);
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEE4AF8];
  v53 = MEMORY[0x24BEE4AF8];
  v45 = *(_QWORD *)(v15 + 16);
  v41[1] = v1;
  if (v45)
  {
    v17 = 0;
    v43 = v15;
    v44 = v10;
    v50 = v12;
    do
    {
      if (v17 >= *(_QWORD *)(v15 + 16))
      {
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x23E47F484);
      }
      v18 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      v46 = *(_QWORD *)(v48 + 72);
      v47 = v18;
      sub_23E1E2F50(v15 + v18 + v46 * v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (qword_2543331E8 != -1)
        swift_once();
      v19 = qword_254334BB8;
      if (*(_QWORD *)(qword_254334BB8 + 16))
      {
        v20 = v50[*(int *)(v49 + 84)];
        v21 = sub_23E53845C();
        v52 = v20;
        ServiceKind.rawValue.getter(v21);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        v22 = sub_23E5384A4();
        v23 = -1 << *(_BYTE *)(v19 + 32);
        v24 = v22 & ~v23;
        if (((*(_QWORD *)(v19 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
        {
          v51 = ~v23;
          __asm { BR              X9 }
        }
      }
      v12 = v50;
      v25 = (uint64_t)v44;
      sub_23E1E2F50((uint64_t)v50, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v15 = v43;
      sub_23E1E2FA0(v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      ++v17;
    }
    while (v17 != v45);
    v16 = v53;
  }
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v16 + 16);
  if (v47)
  {
    v27 = *(unsigned __int8 *)(v48 + 80);
    v45 = v16;
    v46 = v16 + ((v27 + 32) & ~v27);
    v48 = *(_QWORD *)(v48 + 72);
    swift_retain();
    v28 = 0;
    v29 = 0;
    v30 = (uint64_t)v42;
    do
    {
      sub_23E1E2F50(v46 + v48 * v28, v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (qword_2543331F8 != -1)
        swift_once();
      v31 = off_2543331F0;
      v32 = *((_QWORD *)off_2543331F0 + 2);
      if (v32)
      {
        v50 = (char *)v29;
        v33 = *(_BYTE *)(v30 + *(int *)(v49 + 84));
        v34 = sub_23E53845C();
        LOBYTE(v53) = v33;
        ServiceKind.rawValue.getter(v34);
        sub_23E5375EC();
        swift_bridgeObjectRelease();
        v35 = sub_23E5384A4();
        v36 = -1 << v31[32];
        v37 = v35 & ~v36;
        if (((*(_QWORD *)&v31[((v37 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v37) & 1) != 0)
        {
          v51 = ~v36;
          __asm { BR              X9 }
        }
        v32 = 0;
        v30 = (uint64_t)v42;
        v29 = (uint64_t)v50;
      }
      v38 = __OFADD__(v29, v32);
      v29 += v32;
      if (v38)
        goto LABEL_27;
      ++v28;
      sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    while (v28 != v47);
    v39 = v45;
    swift_release();
    v40 = *(_QWORD *)(v39 + 16);
  }
  else
  {
    v40 = 0;
    v29 = 0;
  }
  swift_release();
  return v29 < v40;
}

uint64_t StaticAccessory.HomePodTypes.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeDataModel::StaticAccessory::HomePodTypes_optional sub_23E47F7DC(Swift::UInt *a1)
{
  return StaticAccessory.HomePodTypes.init(rawValue:)(*a1);
}

uint64_t sub_23E47F7E4()
{
  sub_23E489DAC();
  return sub_23E5377B4();
}

uint64_t sub_23E47F840()
{
  sub_23E489DAC();
  return sub_23E537778();
}

uint64_t StaticAccessory.SpecialMediaCategory.supportsAlarmsAndTimers.getter()
{
  unsigned __int16 *v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *v0;
  v2 = v1 >> 14;
  v3 = v1 & 1;
  if (v2 == 1)
    return v3;
  else
    return v2 == 0;
}

uint64_t StaticAccessory.SpecialMediaCategory.supportsMediaPlayer.getter()
{
  unsigned __int16 *v0;
  unsigned int v1;

  v1 = *v0;
  if (!(v1 >> 14))
    return 1;
  if (v1 >> 14 == 1)
    return (v1 & 0x101) != 0;
  return v1 != 32771;
}

uint64_t StaticAccessory.SpecialMediaCategory.hash(into:)()
{
  unsigned __int16 *v0;
  unsigned int v1;

  v1 = *v0;
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
    {
      sub_23E538468();
      sub_23E538474();
      return sub_23E538474();
    }
  }
  else
  {
    sub_23E538468();
  }
  return sub_23E538468();
}

uint64_t sub_23E47F998()
{
  sub_23E485AE0();
  return sub_23E538570();
}

uint64_t sub_23E47F9C0()
{
  sub_23E485AE0();
  return sub_23E53857C();
}

uint64_t sub_23E47F9E8()
{
  sub_23E485A9C();
  return sub_23E538570();
}

uint64_t sub_23E47FA10()
{
  sub_23E485A9C();
  return sub_23E53857C();
}

uint64_t sub_23E47FA38()
{
  sub_23E485A58();
  return sub_23E538570();
}

uint64_t sub_23E47FA60()
{
  sub_23E485A58();
  return sub_23E53857C();
}

uint64_t sub_23E47FA88()
{
  sub_23E485A14();
  return sub_23E538570();
}

uint64_t sub_23E47FAB0()
{
  sub_23E485A14();
  return sub_23E53857C();
}

uint64_t sub_23E47FAD8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E47FB08 + 4 * byte_23E552C8E[*v0]))(0x74726F50726961, 0xE700000000000000);
}

uint64_t sub_23E47FB08()
{
  return 0x5654656C707061;
}

uint64_t sub_23E47FB1C()
{
  return 0x6365526F69647561;
}

uint64_t sub_23E47FB40()
{
  return 0x6172656D6163;
}

uint64_t sub_23E47FB54()
{
  return 0x646F50656D6F68;
}

uint64_t sub_23E47FB68()
{
  return 0x70646E4569726973;
}

uint64_t sub_23E47FB88()
{
  return 0x72656B61657073;
}

uint64_t sub_23E47FB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E4898C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E47FBC0()
{
  sub_23E4858C0();
  return sub_23E538570();
}

uint64_t sub_23E47FBE8()
{
  sub_23E4858C0();
  return sub_23E53857C();
}

uint64_t sub_23E47FC10()
{
  sub_23E48598C();
  return sub_23E538570();
}

uint64_t sub_23E47FC38()
{
  sub_23E48598C();
  return sub_23E53857C();
}

unint64_t sub_23E47FC60()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD000000000000015;
}

uint64_t sub_23E47FCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E489BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E47FCC4()
{
  sub_23E485948();
  return sub_23E538570();
}

uint64_t sub_23E47FCEC()
{
  sub_23E485948();
  return sub_23E53857C();
}

uint64_t sub_23E47FD14()
{
  sub_23E485904();
  return sub_23E538570();
}

uint64_t sub_23E47FD3C()
{
  sub_23E485904();
  return sub_23E53857C();
}

uint64_t StaticAccessory.SpecialMediaCategory.encode(to:)(_QWORD *a1)
{
  unsigned __int16 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned int v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478B0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478B8);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478C0);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478C8);
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478D0);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v38 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478D8);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478E0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D478E8);
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E4858C0();
  v54 = v19;
  sub_23E5384EC();
  if (!(v20 >> 14))
  {
    v62 = 4;
    sub_23E48598C();
    v26 = v47;
    v23 = v54;
    v22 = v55;
    sub_23E5381E0();
    v61 = v20;
    sub_23E4859D0();
    v27 = v49;
    sub_23E5382AC();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v22);
  }
  if (v20 >> 14 == 1)
  {
    v65 = 5;
    sub_23E485948();
    v21 = v50;
    v23 = v54;
    v22 = v55;
    sub_23E5381E0();
    v64 = 0;
    v24 = v52;
    v25 = v56;
    sub_23E53827C();
    if (!v25)
    {
      v63 = 1;
      sub_23E53827C();
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v23, v22);
  }
  switch(v20)
  {
    case 0x8000u:
      v57 = 0;
      sub_23E485AE0();
      v30 = v54;
      v29 = v55;
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      goto LABEL_15;
    case 0x8001u:
      v58 = 1;
      sub_23E485A9C();
      v34 = v35;
      v30 = v54;
      v29 = v55;
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v37);
      goto LABEL_15;
    case 0x8002u:
      v59 = 2;
      sub_23E485A58();
      v31 = v38;
      v30 = v54;
      v29 = v55;
      sub_23E5381E0();
      v33 = v39;
      v32 = v40;
      goto LABEL_14;
    case 0x8003u:
      v60 = 3;
      sub_23E485A14();
      v31 = v41;
      v30 = v54;
      v29 = v55;
      sub_23E5381E0();
      v33 = v42;
      v32 = v43;
      goto LABEL_14;
    default:
      v66 = 6;
      sub_23E485904();
      v31 = v44;
      v30 = v54;
      v29 = v55;
      sub_23E5381E0();
      v33 = v45;
      v32 = v46;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v33 + 8))(v31, v32);
LABEL_15:
      result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v30, v29);
      break;
  }
  return result;
}

uint64_t StaticAccessory.SpecialMediaCategory.hashValue.getter()
{
  sub_23E53845C();
  StaticAccessory.SpecialMediaCategory.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticAccessory.SpecialMediaCategory.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v39 = a2;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47938);
  v43 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v42 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47940);
  v36 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v41 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47948);
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v40 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47950);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47958);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47960);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47968);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47970);
  v14 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23E4858C0();
  v18 = v46;
  sub_23E5384E0();
  if (!v18)
  {
    v25[4] = v13;
    v25[2] = v11;
    v25[3] = v10;
    v46 = v14;
    v19 = sub_23E5381C8();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      v25[1] = v16;
      __asm { BR              X10 }
    }
    v20 = sub_23E537ED4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v22 = &type metadata for StaticAccessory.SpecialMediaCategory;
    v23 = v44;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v23);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
}

uint64_t sub_23E480B88()
{
  sub_23E53845C();
  StaticAccessory.SpecialMediaCategory.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E480BD4()
{
  sub_23E53845C();
  StaticAccessory.SpecialMediaCategory.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E480C18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessory.SpecialMediaCategory.init(from:)(a1, a2);
}

uint64_t sub_23E480C2C(_QWORD *a1)
{
  return StaticAccessory.SpecialMediaCategory.encode(to:)(a1);
}

uint64_t sub_23E480C40@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, unint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  void *v48;
  id v49;
  char *v50;
  void (*v51)(char *, char *, unint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id *v63;
  uint64_t v64;
  id v65;
  _QWORD *v66;
  Swift::String v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unsigned __int8 v93;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v87 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v84 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v86 = (char *)&v83 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t)&v83 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v83 - v20;
  v22 = objc_msgSend(a1, sel_services);
  v91 = sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v23 = sub_23E5377F0();

  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease_n();
LABEL_23:
    v35 = sub_23E2EB5B4();
    v36 = objc_msgSend(a1, sel_category);
    v37 = objc_msgSend(v36, sel_categoryType);

    v38 = sub_23E53755C();
    v40 = v39;

    if (!*(_QWORD *)(v35 + 16) || (v41 = sub_23E211350(v38, v40), (v42 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      v53 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(a3, 1, 1, v53);
    }
    v43 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(a1, sel_services);
    v45 = sub_23E5377F0();

    v46 = sub_23E4853A4(v45, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46 >> 62)
    {
      if (sub_23E53803C())
        goto LABEL_27;
    }
    else if (*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_27:
      if ((v46 & 0xC000000000000001) != 0)
      {
LABEL_62:
        v47 = (id)MEMORY[0x24264F148](0, v46);
      }
      else
      {
        if (!*(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_64;
        }
        v47 = *(id *)(v46 + 32);
      }
      v48 = v47;
      swift_bridgeObjectRelease();
      v49 = objc_msgSend(v48, sel_uniqueIdentifier);

      v50 = v86;
      sub_23E536F68();

      v51 = *(void (**)(char *, char *, unint64_t))(v12 + 32);
      v52 = (uint64_t)v87;
      v51(v87, v50, v11);
      (*(void (**)(uint64_t, _QWORD, uint64_t, unint64_t))(v12 + 56))(v52, 0, 1, v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v12 + 48))(v52, 1, v11) != 1)
      {
        v51((char *)v19, (char *)v52, v11);
        if (a2[2] && (v54 = sub_23E1E3300(v19), (v55 & 1) != 0))
        {
          v56 = v54;
          v57 = a2[7];
          v58 = type metadata accessor for StaticService();
          v59 = *(_QWORD *)(v58 - 8);
          sub_23E1E2F50(v57 + *(_QWORD *)(v59 + 72) * v56, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(a3, 0, 1, v58);
        }
        else
        {
          v60 = type metadata accessor for StaticService();
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(a3, 1, 1, v60);
        }
        return (*(uint64_t (**)(uint64_t, unint64_t))(v12 + 8))(v19, v11);
      }
      sub_23E1E7C64(v52, &qword_254333F50);
LABEL_41:
      v61 = objc_msgSend(a1, sel_services);
      v45 = sub_23E5377F0();

      v92 = a3;
      if (!(v45 >> 62))
      {
        v62 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v62)
          goto LABEL_43;
LABEL_53:
        swift_bridgeObjectRelease_n();
        a3 = v92;
        goto LABEL_33;
      }
LABEL_64:
      swift_bridgeObjectRetain();
      v62 = sub_23E53803C();
      if (v62)
      {
LABEL_43:
        v90 = v11;
        v91 = (uint64_t)a2;
        v89 = v12;
        a3 = v45 & 0xC000000000000001;
        v12 = 4;
        while (1)
        {
          if (a3)
            v63 = (id *)MEMORY[0x24264F148](v12 - 4, v45);
          else
            v63 = (id *)*(id *)(v45 + 8 * v12);
          v46 = (unint64_t)v63;
          v11 = v12 - 3;
          if (__OFADD__(v12 - 4, 1))
          {
            __break(1u);
            goto LABEL_62;
          }
          v64 = sub_23E2CDCB0((uint64_t)&unk_250EDB398);
          v65 = objc_msgSend((id)v46, sel_serviceType);
          a1 = (void *)sub_23E53755C();
          a2 = v66;

          v67._countAndFlagsBits = (uint64_t)a1;
          v67._object = a2;
          ServiceKind.init(rawValue:)(v67);
          v68 = v93 == 53 ? 0 : v93;
          v19 = sub_23E1E333C(v68, v64);
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
            break;

          ++v12;
          if (v11 == v62)
            goto LABEL_53;
        }
        swift_bridgeObjectRelease_n();
        v69 = objc_msgSend((id)v46, sel_uniqueIdentifier);
        v70 = (uint64_t)v84;
        sub_23E536F68();

        v71 = v91;
        if (*(_QWORD *)(v91 + 16))
        {
          v72 = sub_23E1E3300(v70);
          v73 = v92;
          v74 = v89;
          if ((v75 & 1) != 0)
          {
            v76 = v72;
            v77 = *(_QWORD *)(v71 + 56);
            v78 = type metadata accessor for StaticService();
            v79 = *(_QWORD *)(v78 - 8);
            sub_23E1E2F50(v77 + *(_QWORD *)(v79 + 72) * v76, v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v73, 0, 1, v78);
          }
          else
          {
            v82 = type metadata accessor for StaticService();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v73, 1, 1, v82);
          }
          v81 = v90;
        }
        else
        {
          v80 = type metadata accessor for StaticService();
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v92, 1, 1, v80);
          v74 = v89;
          v81 = v90;
        }

        return (*(uint64_t (**)(uint64_t, unint64_t))(v74 + 8))(v70, v81);
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  v24 = sub_23E53803C();
  if (!v24)
    goto LABEL_22;
LABEL_3:
  v88 = a1;
  v89 = v12;
  v85 = v19;
  v90 = v11;
  v92 = a3;
  v11 = v23 & 0xC000000000000001;
  a3 = 4;
  v12 = (uint64_t)&selRef_homeManager_didAddHome_;
  while (1)
  {
    if (v11)
      v25 = (id)MEMORY[0x24264F148](a3 - 4, v23);
    else
      v25 = *(id *)(v23 + 8 * a3);
    v19 = (uint64_t)v25;
    a1 = (void *)(a3 - 3);
    if (__OFADD__(a3 - 4, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if ((objc_msgSend(v25, sel_isPrimaryService) & 1) != 0)
      break;

    ++a3;
    if (a1 == (void *)v24)
    {
      swift_bridgeObjectRelease_n();
      a3 = v92;
      v12 = v89;
      v11 = v90;
      v19 = v85;
      a1 = v88;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease_n();
  v26 = objc_msgSend((id)v19, sel_uniqueIdentifier);
  sub_23E536F68();

  if (a2[2])
  {
    v27 = sub_23E1E3300((uint64_t)v21);
    a3 = v92;
    v12 = v89;
    if ((v28 & 1) != 0)
    {
      v29 = v27;
      v30 = a2[7];
      v31 = type metadata accessor for StaticService();
      v32 = *(_QWORD *)(v31 - 8);
      sub_23E1E2F50(v30 + *(_QWORD *)(v32 + 72) * v29, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v10, 0, 1, v31);
    }
    else
    {
      v31 = type metadata accessor for StaticService();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
    }
    v11 = v90;
  }
  else
  {
    v31 = type metadata accessor for StaticService();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
    a3 = v92;
    v12 = v89;
    v11 = v90;
  }
  a1 = v88;

  (*(void (**)(char *, unint64_t))(v12 + 8))(v21, v11);
  type metadata accessor for StaticService();
  v33 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v10, 1, v31) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_254332DE8);
    v19 = v85;
    goto LABEL_23;
  }
  sub_23E1E2FDC((uint64_t)v10, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a3, 0, 1, v31);
}

uint64_t sub_23E481538@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a3;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333230);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticHH2Update(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v32 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(a1, sel_softwareUpdateController);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_availableUpdate);

    if (v17)
    {
      v18 = a1;
      return sub_23E34672C(v17, v18, v33);
    }
  }
  if (objc_msgSend(a1, sel_isFirmwareUpdateAvailable))
  {
    v20 = objc_msgSend(a1, sel_uniqueIdentifier);
    v21 = v33;
    sub_23E536F68();

    v22 = type metadata accessor for StaticSoftwareUpdate(0);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  if (!a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    v25 = v33;
LABEL_14:
    sub_23E1E7C64((uint64_t)v11, &qword_254333230);
    v28 = type metadata accessor for StaticSoftwareUpdate(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v25, 1, 1, v28);
  }
  v23 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  if (*(_QWORD *)(a2 + 16))
  {
    v24 = sub_23E1E3300((uint64_t)v8);
    v25 = v33;
    if ((v26 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v13 + 72) * v24, (uint64_t)v11, type metadata accessor for StaticHH2Update);
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
  }
  else
  {
    v27 = 1;
    v25 = v33;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v27, 1, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    goto LABEL_14;
  v29 = v32;
  sub_23E1E2FDC((uint64_t)v11, v32, type metadata accessor for StaticHH2Update);
  v30 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v31 = type metadata accessor for StaticSoftwareUpdate(0);
  sub_23E1E2FDC(v29, v25 + *(int *)(v31 + 20), type metadata accessor for StaticHH2Update);
  type metadata accessor for StaticSoftwareUpdate.Kind(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v25, 0, 1, v31);
}

uint64_t sub_23E4818E8(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v2 = objc_msgSend(a1, sel_configuredName);
  if (v2)
  {
    v3 = v2;
    v4 = sub_23E53755C();

  }
  else
  {
    v5 = objc_msgSend(a1, sel_category);
    v6 = objc_msgSend(v5, sel_categoryType);

    v7 = sub_23E53755C();
    v9 = v8;

    v4 = sub_23E1E54CC(v7, v9);
    v11 = v10;
    swift_bridgeObjectRelease();
    if (!v11)
    {
      v12 = objc_msgSend(a1, sel_name);
      v4 = sub_23E53755C();

    }
  }
  return v4;
}

uint64_t sub_23E4819DC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  SEL *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  SEL *v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void *v33;
  char v34;

  v1 = a1;
  LOBYTE(v2) = sub_23E481D78(a1);
  v3 = (uint64_t)&selRef_homeManager_didAddHome_;
  v4 = objc_msgSend(v1, sel_category);
  v5 = (SEL *)&selRef_homeManager_didAddHome_;
  v6 = objc_msgSend(v4, sel_categoryType);

  v7 = sub_23E53755C();
  v9 = v8;

  if (v7 == sub_23E53755C() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    v13 = 0;
  }
  else
  {
    v12 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = 0;
    if ((v12 & 1) == 0)
    {
      v14 = objc_msgSend(v1, sel_services);
      sub_23E1E335C(0, (unint64_t *)&qword_254333378);
      v15 = sub_23E5377F0();

      if (v15 >> 62)
        goto LABEL_24;
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v16; v16 = sub_23E53803C())
      {
        v33 = v1;
        v34 = (char)v2;
        v17 = 4;
        while (1)
        {
          v18 = (v15 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x24264F148](v17 - 4, v15)
              : *(id *)(v15 + 8 * v17);
          v2 = v18;
          v1 = (void *)(v17 - 3);
          if (__OFADD__(v17 - 4, 1))
            break;
          v19 = objc_msgSend(v18, sel_serviceType);
          v20 = sub_23E53755C();
          v5 = v21;

          v22._countAndFlagsBits = v20;
          v22._object = v5;
          LOBYTE(v23) = ServiceKind.init(rawValue:)(v22);
          if (ServiceKind.rawValue.getter(v23) == 0xD000000000000024 && v24 == 0x800000023E55FBA0)
          {
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
          v3 = sub_23E538354();

          swift_bridgeObjectRelease();
          if ((v3 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
LABEL_21:
            v13 = 0;
LABEL_22:
            LOBYTE(v2) = v34;
            v1 = v33;
            v3 = 0x250EFB000;
            v5 = (SEL *)&selRef_homeManager_didAddHome_;
            goto LABEL_26;
          }
          ++v17;
          if (v1 == (void *)v16)
          {
            swift_bridgeObjectRelease_n();
            v13 = 1;
            goto LABEL_22;
          }
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease_n();
      v13 = 1;
    }
  }
LABEL_26:
  v25 = objc_msgSend(v1, *(SEL *)(v3 + 328), v33);
  v26 = objc_msgSend(v25, v5[42]);

  v27 = sub_23E53755C();
  v29 = v28;

  if (v27 == sub_23E53755C() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    LOBYTE(v2) = v13 | v2;
    return v2 & 1;
  }
  v31 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_30;
  return v2 & 1;
}

uint64_t sub_23E481D78(void *a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL4 v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  int v29;
  _BOOL4 v31;
  void *i;
  unsigned __int8 v33;

  v1 = a1;
  v2 = objc_msgSend(a1, sel_category);
  v3 = objc_msgSend(v2, sel_categoryType);

  v4 = sub_23E53755C();
  v6 = v5;

  if (v4 == sub_23E53755C() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    v10 = 1;
    goto LABEL_10;
  }
  v9 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v10 = 1;
LABEL_10:
    v31 = v10;
    goto LABEL_11;
  }
  v11 = objc_msgSend(v1, sel_uniqueIdentifiersForBridgedAccessories);
  if (v11)
  {
    v12 = v11;
    sub_23E536F80();
    v13 = sub_23E5377F0();

    v14 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRelease();
    v10 = v14 != 0;
    goto LABEL_10;
  }
  v31 = 0;
LABEL_11:
  v15 = objc_msgSend(v1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v16 = sub_23E5377F0();

  if (v16 >> 62)
    goto LABEL_28;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v1; v17; i = v1)
  {
    v1 = (void *)(v16 & 0xC000000000000001);
    v18 = 4;
    while (1)
    {
      v19 = v1 ? (id)MEMORY[0x24264F148](v18 - 4, v16) : *(id *)(v16 + 8 * v18);
      v20 = v19;
      v21 = v18 - 3;
      if (__OFADD__(v18 - 4, 1))
        break;
      if (qword_2543331E8 != -1)
        swift_once();
      v22 = qword_254334BB8;
      v23 = objc_msgSend(v20, sel_serviceType);
      v24 = sub_23E53755C();
      v26 = v25;

      v27._countAndFlagsBits = v24;
      v27._object = v26;
      ServiceKind.init(rawValue:)(v27);
      if (v33 == 53)
        v28 = 0;
      else
        v28 = v33;
      v29 = sub_23E1E333C(v28, v22);

      if ((v29 & 1) == 0)
      {
        ++v18;
        if (v21 != v17)
          continue;
      }
      goto LABEL_30;
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    v17 = sub_23E53803C();
  }
  v29 = 0;
LABEL_30:
  swift_bridgeObjectRelease_n();
  return v31 & ((v29 | sub_23E48205C(i, v29 & 1)) ^ 1);
}

uint64_t sub_23E48205C(void *a1, char a2)
{
  uint64_t v2;
  char *v3;
  id v4;
  char **v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  _BOOL4 v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  char v57;
  int v60;
  id v61;
  uint64_t v62;
  char v63;

  v2 = (uint64_t)a1;
  v3 = (char *)&selRef_homeManager_didAddHome_;
  v4 = objc_msgSend(a1, sel_category);
  v5 = &selRef_homeManager_didAddHome_;
  v6 = objc_msgSend(v4, sel_categoryType);

  v7 = sub_23E53755C();
  v9 = v8;

  if (v7 == sub_23E53755C() && v9 == v10)
    goto LABEL_9;
  v12 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    LODWORD(v13) = 1;
    goto LABEL_11;
  }
  v14 = objc_msgSend((id)v2, sel_category);
  v15 = objc_msgSend(v14, sel_categoryType);

  v16 = sub_23E53755C();
  v18 = v17;

  if (v16 == sub_23E53755C() && v18 == v19)
LABEL_9:
    LODWORD(v13) = 1;
  else
    LODWORD(v13) = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  v20 = objc_msgSend((id)v2, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v21 = sub_23E5377F0();

  if (v21 >> 62)
    goto LABEL_38;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v22; v22 = sub_23E53803C())
  {
    v60 = v13;
    v13 = 4;
    v3 = "00-8000-0026BB765291";
    v61 = (id)v2;
    while (1)
    {
      v23 = (v21 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24264F148](v13 - 4, v21)
          : *(id *)(v21 + 8 * v13);
      v24 = v23;
      v5 = (char **)(v13 - 3);
      if (__OFADD__(v13 - 4, 1))
        break;
      v25 = objc_msgSend(v23, sel_serviceType);
      v26 = sub_23E53755C();
      v28 = v27;

      v29._countAndFlagsBits = v26;
      v29._object = v28;
      LOBYTE(v30) = ServiceKind.init(rawValue:)(v29);
      v31 = v62;
      if (v62 == 53)
        v31 = 0;
      LOBYTE(v62) = v31;
      if (ServiceKind.rawValue.getter(v30) == 0xD000000000000024 && v32 == 0x800000023E55FE70)
      {
LABEL_33:
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      v33 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();

        goto LABEL_35;
      }
      v34 = objc_msgSend(v24, sel_serviceType);
      v35 = sub_23E53755C();
      v37 = v36;

      v38._countAndFlagsBits = v35;
      v38._object = v37;
      LOBYTE(v39) = ServiceKind.init(rawValue:)(v38);
      v40 = v62;
      if (v62 == 53)
        v40 = 0;
      LOBYTE(v62) = v40;
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == 0x800000023E55FEA0)
        goto LABEL_33;
      v2 = sub_23E538354();

      swift_bridgeObjectRelease();
      if ((v2 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
LABEL_35:
        v42 = 1;
LABEL_36:
        v2 = (uint64_t)v61;
        LODWORD(v13) = v60;
        v3 = (char *)&selRef_homeManager_didAddHome_;
        v5 = &selRef_homeManager_didAddHome_;
        goto LABEL_40;
      }
      ++v13;
      if (v5 == (char **)v22)
      {
        swift_bridgeObjectRelease_n();
        v42 = 0;
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  v42 = 0;
LABEL_40:
  v43 = objc_msgSend((id)v2, *((SEL *)v3 + 41));
  v44 = objc_msgSend(v43, v5[42]);

  v45 = sub_23E53755C();
  v47 = v46;

  if (v45 == sub_23E53755C() && v47 == v48)
    v49 = 1;
  else
    v49 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  HMAccessory.specialMediaCategory.getter((__int16 *)&v62);
  if ((~(unsigned __int16)v62 & 0xFEFC) != 0)
  {
    v51 = objc_msgSend((id)v2, sel_mediaProfile);

    if (v51)
    {
      v50 = 1;
    }
    else
    {
      v52 = objc_msgSend((id)v2, sel_siriEndpointProfile);

      v50 = v52 != 0;
    }
  }
  else
  {
    v50 = 0;
  }
  v53 = objc_msgSend((id)v2, sel_hdm_matterNodeID);
  if (v53)
  {
    v54 = v53;
    v62 = 0;
    v63 = 1;
    sub_23E5384D4();

    if ((v63 & 1) == 0)
    {
      v55 = objc_msgSend((id)v2, sel_hdm_matterNodeID);
      if (!v55 || (v56 = v55, v62 = 0, v63 = 1, sub_23E5384D4(), v56, (v63 & 1) != 0) || v62)
      {
        if (((v13 | v42 | v49 | v50) & 1) == 0)
        {
          v57 = a2 ^ 1;
          return v57 & 1;
        }
        goto LABEL_57;
      }
    }
  }
  if (((v13 | v42 | v49 | v50) & 1) != 0)
  {
LABEL_57:
    v57 = 1;
    return v57 & 1;
  }
  v57 = 0;
  return v57 & 1;
}

uint64_t StaticAccessory.DeviceIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

Swift::String __swiftcall StaticAccessory.DeviceIdentifier.stringVersion()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String result;
  uint64_t v16;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E2F50(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    v10 = sub_23E536F38();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    v12 = (void *)v8[1];
  }
  v13 = v10;
  v14 = v12;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

uint64_t StaticAccessory.DeviceIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v0, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_23E538468();
    sub_23E5375EC();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23E482908()
{
  sub_23E485BF0();
  return sub_23E538570();
}

uint64_t sub_23E482930()
{
  sub_23E485BF0();
  return sub_23E53857C();
}

uint64_t sub_23E482958()
{
  _BYTE *v0;

  if (*v0)
    return 1684632949;
  else
    return 0x746F6F7465756C62;
}

uint64_t sub_23E482990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E489CC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E4829B4()
{
  sub_23E485B68();
  return sub_23E538570();
}

uint64_t sub_23E4829DC()
{
  sub_23E485B68();
  return sub_23E53857C();
}

uint64_t sub_23E482A04()
{
  sub_23E485BAC();
  return sub_23E538570();
}

uint64_t sub_23E482A2C()
{
  sub_23E485BAC();
  return sub_23E53857C();
}

uint64_t StaticAccessory.DeviceIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47980);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v25 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23E536F80();
  v24 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v23 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47988);
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D47990);
  v10 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E485B68();
  sub_23E5384EC();
  sub_23E1E2F50(v29, (uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = v23;
    v13 = v24;
    v15 = v9;
    v16 = v27;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v15, v27);
    v32 = 1;
    sub_23E485BAC();
    v17 = v25;
    v18 = v30;
    sub_23E5381E0();
    sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v19 = v28;
    sub_23E5382AC();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v19);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v16);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  }
  else
  {
    v31 = 0;
    sub_23E485BF0();
    v21 = v30;
    sub_23E5381E0();
    sub_23E538270();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  }
}

uint64_t StaticAccessory.DeviceIdentifier.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E2F50(v1, (uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_23E538468();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  return sub_23E5384A4();
}

uint64_t StaticAccessory.DeviceIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  char v55;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D479B0);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D479B8);
  v48 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D479C0);
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v40 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_23E485B68();
  v20 = v53;
  sub_23E5384E0();
  if (v20)
    goto LABEL_10;
  v41 = (uint64_t *)v16;
  v42 = v18;
  v43 = v13;
  v21 = v50;
  v22 = v51;
  v53 = v10;
  v23 = sub_23E5381C8();
  v24 = v9;
  if (*(_QWORD *)(v23 + 16) != 1)
  {
    v28 = sub_23E537ED4();
    swift_allocError();
    v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v30 = v53;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v7);
LABEL_10:
    v27 = (uint64_t)v52;
    return __swift_destroy_boxed_opaque_existential_0(v27);
  }
  if ((*(_BYTE *)(v23 + 32) & 1) != 0)
  {
    v55 = 1;
    sub_23E485BAC();
    sub_23E5380C0();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v25 = (uint64_t)v43;
    v26 = v46;
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v7);
    v27 = (uint64_t)v52;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v54 = 0;
    sub_23E485BF0();
    v31 = v21;
    sub_23E5380C0();
    v33 = v45;
    v34 = sub_23E538144();
    v35 = v49;
    v36 = v34;
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v7);
    v25 = (uint64_t)v41;
    *v41 = v36;
    *(_QWORD *)(v25 + 8) = v38;
    swift_storeEnumTagMultiPayload();
    v27 = (uint64_t)v52;
  }
  v39 = (uint64_t)v42;
  sub_23E1E2FDC(v25, (uint64_t)v42, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_23E1E2FDC(v39, v44, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return __swift_destroy_boxed_opaque_existential_0(v27);
}

uint64_t sub_23E4833B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E1E2F50(v1, (uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_23E538468();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    sub_23E538468();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  return sub_23E5384A4();
}

uint64_t sub_23E483524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_23E483548@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessory.DeviceIdentifier.init(from:)(a1, a2);
}

uint64_t sub_23E48355C(_QWORD *a1)
{
  return StaticAccessory.DeviceIdentifier.encode(to:)(a1);
}

uint64_t sub_23E483570@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t (*v53)@<X0>(uint64_t *@<X8>);
  char *v54;
  uint64_t v55;

  v43 = a8;
  v44 = a5;
  v55 = a7;
  v36 = a4;
  LODWORD(v37) = a3;
  v42 = a9;
  v13 = type metadata accessor for StaticAccessory(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = *(_QWORD *)(v40 + 64);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v39 = (uint64_t)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a6 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = *(int *)(MEMORY[0x24BDAC7A8](v14) + 80);
  v38 = a1;
  v19 = *(_QWORD *)(a1 + v18);
  v46 = a1;
  swift_bridgeObjectRetain();
  v20 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v45, v19);
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = a2;
  *(_QWORD *)&v51 = v20;
  *((_QWORD *)&v51 + 1) = sub_23E3ADECC;
  v52 = v21;
  *(_BYTE *)(swift_allocObject() + 16) = v37;
  *(_QWORD *)&v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D454B0);
  sub_23E538030();
  swift_release();
  v47 = v49;
  v48 = v50;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v22((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a4, a6);
  v23 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = v44;
  *((_QWORD *)v24 + 3) = a6;
  v25 = a6;
  v26 = v43;
  *((_QWORD *)v24 + 4) = v55;
  *((_QWORD *)v24 + 5) = v26;
  v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v28 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27(&v24[v23], v28, v25);
  sub_23E538030();
  swift_release();
  v29 = v52;
  v37 = v51;
  v22(v28, v36, v25);
  v30 = v39;
  sub_23E1E2F50(v38, v39, type metadata accessor for StaticAccessory);
  v31 = (v23 + v17 + *(unsigned __int8 *)(v40 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v32 = (char *)swift_allocObject();
  *((_QWORD *)v32 + 2) = v44;
  *((_QWORD *)v32 + 3) = v25;
  v33 = v43;
  *((_QWORD *)v32 + 4) = v55;
  *((_QWORD *)v32 + 5) = v33;
  v27(&v32[v23], v28, v25);
  sub_23E1E2FDC(v30, (uint64_t)&v32[v31], type metadata accessor for StaticAccessory);
  v51 = v37;
  v52 = v29;
  v53 = sub_23E48A264;
  v54 = v32;
  result = sub_23E4FB960((uint64_t *)&v51);
  *v42 = result;
  return result;
}

uint64_t sub_23E4838AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E483570(a1, *(_BYTE *)(v2 + 48), *(unsigned __int8 *)(v2 + 49), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_23E4838D4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v6, v7);
  if ((a2 & 1) != 0)
    v8 = v6[*(int *)(v4 + 76)];
  else
    v8 = 1;
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v8;
}

uint64_t sub_23E483974(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for StaticService();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v6, v7);
  if ((a2 & 1) != 0)
    v8 = v6[*(int *)(v4 + 32)];
  else
    v8 = 1;
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v8;
}

uint64_t sub_23E483A14@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  uint64_t result;
  _QWORD v45[2];
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v9 = type metadata accessor for StaticService();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v45 - v14;
  MEMORY[0x24BDAC7A8](v13);
  LOBYTE(a1) = *a1;
  v17 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v49 = (uint64_t)v45 - v18;
  sub_23E1E2F50(a3, (uint64_t)v45 - v18, v19);
  if ((a1 & 1) != 0)
  {
    v20 = 1;
  }
  else
  {
    v46 = v16;
    v47 = v12;
    v48 = v15;
    v21 = *(_QWORD *)(v17 + 16);
    if (v21)
    {
      v45[0] = a4;
      v45[1] = v4;
      v22 = *(_BYTE *)(v49 + *(int *)(v9 + 84));
      v23 = swift_bridgeObjectRetain_n();
      v24 = 0;
      while (1)
      {
        v53 = *(_BYTE *)(v17 + v24 + 32);
        v52 = v22;
        v25 = ServiceKind.rawValue.getter(v23);
        v27 = v26;
        if (v25 == ServiceKind.rawValue.getter(v25) && v27 == v28)
          break;
        v30 = sub_23E538354();
        swift_bridgeObjectRelease();
        v23 = swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          goto LABEL_14;
        if (v21 == ++v24)
        {
          swift_bridgeObjectRelease_n();
          a4 = (char *)v45[0];
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_14:
      swift_bridgeObjectRelease_n();
      v31 = (uint64_t)v48;
      sub_23E1E2F50(v49, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v33 = v46;
      v32 = (uint64_t)v47;
      v34 = *(_QWORD *)(v46 + 16);
      sub_23E1E2F50(v31, (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v34)
      {
        if (*(_BYTE *)(v32 + *(int *)(v9 + 92)) == 53)
          v35 = 0;
        else
          v35 = *(_BYTE *)(v32 + *(int *)(v9 + 92));
        v36 = swift_bridgeObjectRetain_n();
        v37 = 0;
        a4 = (char *)v45[0];
        while (1)
        {
          v51 = *(_BYTE *)(v33 + v37 + 32);
          v50 = v35;
          v38 = ServiceKind.rawValue.getter(v36);
          v40 = v39;
          if (v38 == ServiceKind.rawValue.getter(v38) && v40 == v41)
            break;
          v43 = sub_23E538354();
          swift_bridgeObjectRelease();
          v36 = swift_bridgeObjectRelease();
          if ((v43 & 1) != 0)
            goto LABEL_28;
          if (v34 == ++v37)
          {
            v20 = 0;
            goto LABEL_29;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_28:
        v20 = 1;
LABEL_29:
        swift_bridgeObjectRelease_n();
        v32 = (uint64_t)v47;
        v31 = (uint64_t)v48;
      }
      else
      {
        v20 = 1;
        a4 = (char *)v45[0];
      }
      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
LABEL_12:
      v31 = (uint64_t)v48;
      sub_23E1E2F50(v49, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v20 = 0;
    }
    sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  result = sub_23E1E2FA0(v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *a4 = v20;
  return result;
}

uint64_t sub_23E483D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D47B30);
  sub_23E1F9710(&qword_256D47B38, &qword_256D47B30, MEMORY[0x24BEE12C8]);
  result = sub_23E537730();
  *a1 = result;
  return result;
}

uint64_t sub_23E483DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD v8[4];

  v5 = *(_QWORD *)(a1 + 32);
  v8[2] = a2;
  v8[3] = a3;
  swift_bridgeObjectRetain();
  v6 = sub_23E4752A4((void (*)(_QWORD))sub_23E489DF0, (uint64_t)v8, v5);
  result = swift_bridgeObjectRelease();
  *a4 = v6;
  return result;
}

uint64_t sub_23E483E2C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticCharacteristic();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for StaticService() + 104));
  if (!*(_QWORD *)(v15 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_7:
    sub_23E1E7C64((uint64_t)v10, &qword_2543332A0);
    v20 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  v16 = *a1;
  swift_bridgeObjectRetain();
  v17 = sub_23E1EAF70(v16);
  if ((v18 & 1) != 0)
  {
    sub_23E1E2F50(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v19, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_7;
  sub_23E1E2FDC((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  sub_23E1E2F50(a3, a4, type metadata accessor for StaticAccessory);
  v22 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  sub_23E1E2F50(a2, a4 + *(int *)(v22 + 20), (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2FDC((uint64_t)v14, a4 + *(int *)(v22 + 24), (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a4, 0, 1, v22);
}

uint64_t Collection<>.staticAccessoryServiceCharacteristicTriplets(matching:filterOutHiddenStatusAccessories:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E539650;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v3;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D479C8);
  sub_23E1F9710(&qword_256D479D0, &qword_256D479C8, MEMORY[0x24BEE12E0]);
  v7 = Collection<>.staticAccessoryServiceCharacteristicTriplets<A>(matching:filterOutHiddenStatusAccessories:skipNoResponseAccessories:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23E484160(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D477E0);
}

uint64_t static StaticAccessory.emptyAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D5370(&qword_256D3EEC0, (uint64_t)qword_256D477E0, a1);
}

uint64_t sub_23E484198(uint64_t a1)
{
  return sub_23E375F34(a1, qword_256D477F8);
}

uint64_t static StaticAccessory.sampleAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3D5370(&qword_256D3EEC8, (uint64_t)qword_256D477F8, a1);
}

uint64_t sub_23E4841D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char v51;
  __int16 v52;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v0);
  v47 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v4);
  v50 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v44 - v10;
  v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E536F80();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v49 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v44 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v44 - v22;
  v24 = type metadata accessor for StaticAccessory(0);
  __swift_allocate_value_buffer(v24, qword_256D47810);
  v45 = __swift_project_value_buffer(v24, (uint64_t)qword_256D47810);
  if (qword_256D3EEC0 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v15, (uint64_t)qword_256D477E0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v46 = v23;
  v26(v23, v25, v15);
  sub_23E536F2C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
    *(_QWORD *)v14 = 0xD000000000000024;
    *((_QWORD *)v14 + 1) = 0x800000023E56AA60;
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v27(v21, v11, v15);
    v27(v14, v21, v15);
  }
  swift_storeEnumTagMultiPayload();
  v28 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v50, 1, 1, v28);
  v29 = sub_23E536F20();
  v30 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v48, 1, 1, v29);
  if (qword_254333FB8 != -1)
    swift_once();
  v31 = type metadata accessor for StaticHome();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_254334C48);
  v26(v49, v32, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v33 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_23E539650;
  if (qword_2543340B0 != -1)
    swift_once();
  v35 = type metadata accessor for StaticRoom(0);
  v36 = __swift_project_value_buffer(v35, (uint64_t)qword_254333F20);
  v26((char *)(v34 + v33), v36, v15);
  if (*(_QWORD *)(v34 + 16))
    v37 = sub_23E2CD9CC(v34);
  else
    v37 = MEMORY[0x24BEE4B08];
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v38 = MEMORY[0x24BEE4AF8];
  v39 = sub_23E2073C0(MEMORY[0x24BEE4AF8]);
  if (qword_256D3EE98 != -1)
    swift_once();
  v40 = __swift_project_value_buffer(v15, (uint64_t)qword_256D89840);
  v26(v9, v40, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  v52 = -260;
  v41 = type metadata accessor for StaticSoftwareUpdate(0);
  v42 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v47, 1, 1, v41);
  v51 = 0;
  return sub_23E478894((uint64_t)v46, 0x6341207974706D45, 0xEF79726F73736563, (uint64_t)v14, v50, v30, 0, 1, v45, 0, (uint64_t)v49, v37, 0, 0xE000000000000000, 0, 0, 1, 1, 0,
           v39,
           v38,
           (uint64_t)v9,
           &v52,
           0,
           0,
           0,
           0,
           v42,
           1,
           &v51,
           0);
}

uint64_t static StaticAccessory.empty.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E484E88(&qword_256D3EED0, (uint64_t)qword_256D47810, a1);
}

uint64_t sub_23E484798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  int v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  __int128 v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char v61;
  __int16 v62;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v0);
  v55 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v49 - v10;
  *(_QWORD *)&v57 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x24BDAC7A8](v57);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E536F80();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v58 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v49 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v49 - v21;
  v23 = type metadata accessor for StaticAccessory(0);
  __swift_allocate_value_buffer(v23, qword_256D47828);
  v52 = __swift_project_value_buffer(v23, (uint64_t)qword_256D47828);
  if (qword_256D3EEC8 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v14, (uint64_t)qword_256D477F8);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v25(v22, v24, v14);
  sub_23E536F2C();
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
  v59 = v13;
  if (v26 == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
    *(_QWORD *)v13 = 0xD000000000000024;
    *((_QWORD *)v13 + 1) = 0x800000023E56AA60;
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v27(v20, v11, v14);
    v27(v59, v20, v14);
  }
  v53 = v22;
  swift_storeEnumTagMultiPayload();
  v28 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v60, 1, 1, v28);
  sub_23E536ED8();
  v29 = sub_23E536F20();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 0, 1, v29);
  if (qword_256D3EE00 != -1)
    swift_once();
  v56 = v4;
  v30 = __swift_project_value_buffer(v14, (uint64_t)qword_256D897C0);
  v25(v58, v30, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v50 = v15;
  v31 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v32 = swift_allocObject();
  v57 = xmmword_23E539650;
  *(_OWORD *)(v32 + 16) = xmmword_23E539650;
  if (qword_256D3EE58 != -1)
    swift_once();
  v33 = __swift_project_value_buffer(v14, (uint64_t)qword_256D45968);
  v25((char *)(v32 + v31), v33, v14);
  if (*(_QWORD *)(v32 + 16))
    v51 = sub_23E2CD9CC(v32);
  else
    v51 = MEMORY[0x24BEE4B08];
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333400);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
  v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80);
  v36 = (v35 + 32) & ~v35;
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v57;
  v38 = v37 + v36;
  v39 = *(int *)(v34 + 48);
  if (qword_256D3EEA0 != -1)
    swift_once();
  v40 = __swift_project_value_buffer(v14, (uint64_t)qword_256D89858);
  v25((char *)v38, v40, v14);
  if (qword_256D3EE90 != -1)
    swift_once();
  v41 = type metadata accessor for StaticService();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_256D89828);
  sub_23E1E2F50(v42, v38 + v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v43 = sub_23E2073C0(v37);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v57;
  v25((char *)(v44 + v31), v40, v14);
  v45 = (uint64_t)v54;
  v25(v54, v40, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v14);
  v62 = -260;
  v46 = type metadata accessor for StaticSoftwareUpdate(0);
  v47 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v55, 1, 1, v46);
  v61 = 0;
  return sub_23E478894((uint64_t)v53, 0xD000000000000016, 0x800000023E56AA90, (uint64_t)v59, v60, (uint64_t)v56, 0, 1, v52, 0, (uint64_t)v58, v51, 0x5220656C706D6153, 0xEB000000006D6F6FLL, 0, 0, 1, 1, 0,
           v43,
           v44,
           v45,
           &v62,
           0,
           0,
           0,
           0,
           v47,
           1,
           &v61,
           0);
}

uint64_t static StaticAccessory.sample.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E484E88(&qword_256D3EED8, (uint64_t)qword_256D47828, a1);
}

uint64_t sub_23E484E88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for StaticAccessory(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_23E1E2F50(v6, a3, type metadata accessor for StaticAccessory);
}

uint64_t _s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(_WORD *a1, unsigned __int16 *a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t result;

  v2 = (unsigned __int16)*a1;
  v3 = *a2;
  if (!(v2 >> 14))
  {
    if (v3 < 0x4000)
      return (v3 ^ v2) == 0;
    return 0;
  }
  if (v2 >> 14 == 1)
  {
    if ((v3 & 0xC000) == 0x4000 && ((v2 & 1) == 0) != (v3 & 1))
      return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
    return 0;
  }
  switch(*a1)
  {
    case 0x8000:
      if (v3 != 0x8000)
        return 0;
      result = 1;
      break;
    case 0x8001:
      if (v3 != 32769)
        return 0;
      result = 1;
      break;
    case 0x8002:
      if (v3 != 32770)
        return 0;
      result = 1;
      break;
    case 0x8003:
      if (v3 != 32771)
        return 0;
      result = 1;
      break;
    default:
      if (v3 != 33024)
        return 0;
      result = 1;
      break;
  }
  return result;
}

unint64_t sub_23E484FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v34[3];
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for StaticService();
  v43 = *(_QWORD *)(v41 - 8);
  v8 = MEMORY[0x24BDAC7A8](v41);
  v40 = (uint64_t)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (uint64_t)v34 - v10;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v18 = a1;
    v19 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v37 = *(_QWORD *)(v12 + 72);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v34[1] = v18;
    v34[2] = v2;
    swift_bridgeObjectRetain();
    v42 = MEMORY[0x24BEE4AF8];
    v35 = v7;
    v38 = v16;
    v20 = (uint64_t)v44;
    while (1)
    {
      v39(v16, v19, v11);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v21(v16, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v16, v11);
      if (*(_QWORD *)(a2 + 16) && (v22 = sub_23E1E3300(v20), (v23 & 1) != 0))
      {
        sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v43 + 72) * v22, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v24 = 0;
      }
      else
      {
        v24 = 1;
      }
      v25 = v43;
      v26 = v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v7, v24, 1, v41);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v44, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v7, 1, v26) == 1)
      {
        sub_23E1E7C64((uint64_t)v7, &qword_254332DE8);
        v16 = v38;
      }
      else
      {
        v27 = v36;
        sub_23E1E2FDC((uint64_t)v7, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E1E2FDC(v27, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v42 = sub_23E1E3348(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
        v16 = v38;
        v29 = *(_QWORD *)(v42 + 16);
        v28 = *(_QWORD *)(v42 + 24);
        if (v29 >= v28 >> 1)
          v42 = sub_23E1E3348(v28 > 1, v29 + 1, 1, v42);
        v31 = v42;
        v30 = v43;
        *(_QWORD *)(v42 + 16) = v29 + 1;
        sub_23E1E2FDC(v40, v31+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v7 = v35;
      }
      v19 += v37;
      --v17;
      v20 = (uint64_t)v44;
      if (!v17)
      {
        v21(v16, 1, 1, v11);
        break;
      }
    }
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    v42 = MEMORY[0x24BEE4AF8];
    v32(v16, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_23E4853A4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  unsigned __int8 v16;
  uint64_t v17;

  v17 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)MEMORY[0x24264F148](v4, a1);
LABEL_9:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_18;
        v8 = objc_msgSend(v5, sel_serviceType);
        v9 = sub_23E53755C();
        v11 = v10;

        v12._countAndFlagsBits = v9;
        v12._object = v11;
        ServiceKind.init(rawValue:)(v12);
        if (v16 == 53)
          v13 = 0;
        else
          v13 = v16;
        if ((sub_23E1E333C(v13, a2) & 1) != 0)
        {
          sub_23E537F1C();
          sub_23E537F4C();
          sub_23E537F58();
          sub_23E537F28();
        }
        else
        {

        }
        ++v4;
        if (v7 == v3)
          return v17;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      v3 = sub_23E53803C();
      if (!v3)
        return MEMORY[0x24BEE4AF8];
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E485534(unint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  id v28;
  unsigned __int8 v29;
  uint64_t v30;

  v6 = v5;
  LOBYTE(v9) = a3;
  v28 = a2;
  v11 = type metadata accessor for StaticAccessory(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char **)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_17;
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    if (!v15)
      return v16;
    v30 = MEMORY[0x24BEE4AF8];
    result = sub_23E2058CC(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
      break;
    v18 = a1;
    a1 = 0;
    v27 = v9 & 1;
    v16 = v30;
    v24 = v6;
    v25 = v18;
    v26 = v18 & 0xC000000000000001;
    while (v15 != a1)
    {
      if (v26)
        v19 = (id)MEMORY[0x24264F148](a1, v25);
      else
        v19 = *(id *)(v25 + 8 * a1 + 32);
      v20 = v19;
      v21 = v28;
      v22 = objc_msgSend(v20, sel_room);
      if (!v22)
        v22 = objc_msgSend(v21, sel_roomForEntireHome);
      v29 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23E1E35D0(v20, v21, v22, &v29, a4, a5, v14);

      v30 = v16;
      v6 = *(_QWORD *)(v16 + 16);
      v23 = *(_QWORD *)(v16 + 24);
      v9 = v6 + 1;
      if (v6 >= v23 >> 1)
      {
        sub_23E2058CC(v23 > 1, v6 + 1, 1);
        v16 = v30;
      }
      ++a1;
      *(_QWORD *)(v16 + 16) = v9;
      sub_23E1E2FDC((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v6, type metadata accessor for StaticAccessory);
      if (v15 == a1)
        return v16;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v15 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_23E485784()
{
  unint64_t result;

  result = qword_256D47888;
  if (!qword_256D47888)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553E3C, &type metadata for StaticAccessory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47888);
  }
  return result;
}

uint64_t sub_23E4857C8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    result = MEMORY[0x24264FDE4](a3, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E485840(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    result = MEMORY[0x24264FDE4](a3, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E4858C0()
{
  unint64_t result;

  result = qword_256D478F0;
  if (!qword_256D478F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553DEC, &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D478F0);
  }
  return result;
}

unint64_t sub_23E485904()
{
  unint64_t result;

  result = qword_256D478F8;
  if (!qword_256D478F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553D9C, &type metadata for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D478F8);
  }
  return result;
}

unint64_t sub_23E485948()
{
  unint64_t result;

  result = qword_256D47900;
  if (!qword_256D47900)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553D4C, &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47900);
  }
  return result;
}

unint64_t sub_23E48598C()
{
  unint64_t result;

  result = qword_256D47908;
  if (!qword_256D47908)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553CFC, &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47908);
  }
  return result;
}

unint64_t sub_23E4859D0()
{
  unint64_t result;

  result = qword_256D47910;
  if (!qword_256D47910)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.HomePodTypes, &type metadata for StaticAccessory.HomePodTypes);
    atomic_store(result, (unint64_t *)&qword_256D47910);
  }
  return result;
}

unint64_t sub_23E485A14()
{
  unint64_t result;

  result = qword_256D47918;
  if (!qword_256D47918)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553CAC, &type metadata for StaticAccessory.SpecialMediaCategory.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47918);
  }
  return result;
}

unint64_t sub_23E485A58()
{
  unint64_t result;

  result = qword_256D47920;
  if (!qword_256D47920)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553C5C, &type metadata for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47920);
  }
  return result;
}

unint64_t sub_23E485A9C()
{
  unint64_t result;

  result = qword_256D47928;
  if (!qword_256D47928)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553C0C, &type metadata for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47928);
  }
  return result;
}

unint64_t sub_23E485AE0()
{
  unint64_t result;

  result = qword_256D47930;
  if (!qword_256D47930)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553BBC, &type metadata for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47930);
  }
  return result;
}

unint64_t sub_23E485B24()
{
  unint64_t result;

  result = qword_256D47978;
  if (!qword_256D47978)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.HomePodTypes, &type metadata for StaticAccessory.HomePodTypes);
    atomic_store(result, (unint64_t *)&qword_256D47978);
  }
  return result;
}

unint64_t sub_23E485B68()
{
  unint64_t result;

  result = qword_256D47998;
  if (!qword_256D47998)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553B6C, &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D47998);
  }
  return result;
}

unint64_t sub_23E485BAC()
{
  unint64_t result;

  result = qword_256D479A0;
  if (!qword_256D479A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553B1C, &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D479A0);
  }
  return result;
}

unint64_t sub_23E485BF0()
{
  unint64_t result;

  result = qword_256D479A8;
  if (!qword_256D479A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E553ACC, &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D479A8);
  }
  return result;
}

uint64_t sub_23E485C34()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D479D8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
}

uint64_t sub_23E485C60(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D479E8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[2] = sub_23E1EE1C4(&qword_256D479F0, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[3] = sub_23E1EE1C4(&qword_256D40E78, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[4] = sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[5] = sub_23E1EE1C4(&qword_256D479F8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  result = sub_23E1EE1C4(&qword_256D47A00, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[6] = result;
  return result;
}

uint64_t sub_23E485D2C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D40E78, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[2] = sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[3] = sub_23E1EE1C4(&qword_256D479F8, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  result = sub_23E1EE1C4(&qword_256D47A00, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
  a1[4] = result;
  return result;
}

unint64_t sub_23E485DC4()
{
  unint64_t result;

  result = qword_256D47A08;
  if (!qword_256D47A08)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.HomePodTypes, &type metadata for StaticAccessory.HomePodTypes);
    atomic_store(result, (unint64_t *)&qword_256D47A08);
  }
  return result;
}

unint64_t sub_23E485E0C()
{
  unint64_t result;

  result = qword_256D47A10;
  if (!qword_256D47A10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticAccessory.SpecialMediaCategory, &type metadata for StaticAccessory.SpecialMediaCategory);
    atomic_store(result, (unint64_t *)&qword_256D47A10);
  }
  return result;
}

uint64_t sub_23E485E50()
{
  return sub_23E1EE1C4(&qword_256D47A18, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_23E485E7C()
{
  return sub_23E1EE1C4(&qword_256D47A20, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t)&protocol conformance descriptor for StaticAccessory.DeviceIdentifier);
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticAccessory(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, int *);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int EnumCaseMultiPayload;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t updated;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  unsigned int (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *__dst;
  char *__dsta;
  uint64_t v117;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23E536F80();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = (_QWORD *)((char *)a1 + v10);
    v13 = (_QWORD *)((char *)a2 + v10);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)((char *)a1 + v11);
    v16 = (_QWORD *)((char *)a2 + v11);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    swift_bridgeObjectRetain();
    v113 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9(v15, v16, v7);
    }
    else
    {
      v18 = v16[1];
      *v15 = *v16;
      v15[1] = v18;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = (int *)type metadata accessor for StaticDeviceMetadata();
    v23 = *((_QWORD *)v22 - 1);
    __dst = v9;
    v117 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v9(v20, v21, v7);
      v25 = v22[5];
      v26 = &v20[v25];
      v27 = &v21[v25];
      v28 = *((_QWORD *)v27 + 1);
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *((_QWORD *)v26 + 1) = v28;
      v29 = v22[6];
      v30 = &v20[v29];
      v31 = &v21[v29];
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      v33 = v22[7];
      v34 = &v20[v33];
      v35 = &v21[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = v22[8];
      v38 = &v20[v37];
      v39 = &v21[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      v20[v22[11]] = v21[v22[11]];
      v41 = *(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = v117;
      swift_bridgeObjectRetain();
      v9 = (void (*)(_QWORD *, _QWORD *, uint64_t))__dst;
      swift_bridgeObjectRetain();
      v41(v20, 0, 1, v22);
    }
    v42 = a3[8];
    v43 = (char *)a1 + v42;
    v44 = (char *)a2 + v42;
    v45 = sub_23E536F20();
    v46 = *(_QWORD *)(v45 - 8);
    v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    v112 = v45;
    v110 = v46;
    if (v111(v44, 1, v45))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    v48 = a3[9];
    v49 = a3[10];
    v50 = (char *)a1 + v48;
    v51 = (char *)a2 + v48;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v52 = *((_BYTE *)a2 + v49);
    v50[8] = v51[8];
    *((_BYTE *)a1 + v49) = v52;
    v9((_QWORD *)((char *)a1 + a3[11]), (_QWORD *)((char *)a2 + a3[11]), v7);
    v53 = a3[13];
    *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
    v54 = (_QWORD *)((char *)a1 + v53);
    v55 = (_QWORD *)((char *)a2 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    v57 = a3[15];
    *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
    v58 = a3[17];
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)a1 + v58) = *((_BYTE *)a2 + v58);
    v59 = a3[19];
    *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    *(_QWORD *)((char *)a1 + v59) = *(_QWORD *)((char *)a2 + v59);
    v60 = a3[21];
    *(_QWORD *)((char *)a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
    v61 = (char *)a1 + v60;
    v62 = (char *)a2 + v60;
    v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v62, 1, v117))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))__dst)(v61, v62, v117);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v61, 0, 1, v117);
    }
    v65 = a3[23];
    *(_WORD *)((char *)a1 + a3[22]) = *(_WORD *)((char *)a2 + a3[22]);
    v66 = (_QWORD *)((char *)a1 + v65);
    v67 = (_QWORD *)((char *)a2 + v65);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = a3[25];
    *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)((char *)a2 + a3[24]);
    *((_BYTE *)a1 + v69) = *((_BYTE *)a2 + v69);
    v70 = a3[26];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    v73 = type metadata accessor for StaticSoftwareUpdate(0);
    v74 = *(_QWORD *)(v73 - 8);
    v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75(v72, 1, v73))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
LABEL_30:
      v108 = a3[28];
      *((_BYTE *)a1 + a3[27]) = *((_BYTE *)a2 + a3[27]);
      *((_BYTE *)a1 + v108) = *((_BYTE *)a2 + v108);
      *(_QWORD *)((char *)a1 + a3[29]) = *(_QWORD *)((char *)a2 + a3[29]);
      swift_bridgeObjectRetain();
      return a1;
    }
    ((void (*)(char *, char *, uint64_t))__dst)(v71, v72, v117);
    v77 = *(int *)(v73 + 20);
    v78 = &v71[v77];
    v79 = &v72[v77];
    v80 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v91 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v91;
      updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v93 = *(int *)(updated + 20);
      v114 = updated;
      __dsta = &v78[v93];
      v94 = &v79[v93];
      swift_bridgeObjectRetain();
      if (v111(v94, 1, v112))
      {
LABEL_24:
        v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dsta, v94, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
LABEL_27:
        v99 = *(int *)(v114 + 24);
        v100 = &v78[v99];
        v101 = &v79[v99];
        v102 = *((_QWORD *)v101 + 1);
        *(_QWORD *)v100 = *(_QWORD *)v101;
        *((_QWORD *)v100 + 1) = v102;
        v103 = *(int *)(v114 + 28);
        v104 = &v78[v103];
        v105 = &v79[v103];
        v106 = *((_QWORD *)v105 + 1);
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = v106;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        v78[*(int *)(v107 + 48)] = v79[*(int *)(v107 + 48)];
        goto LABEL_28;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
LABEL_29:
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
          goto LABEL_30;
        }
        ((void (*)(char *, char *, uint64_t))__dst)(v78, v79, v117);
        v82 = (int *)type metadata accessor for StaticHH2Update(0);
        v78[v82[5]] = v79[v82[5]];
        v83 = v82[6];
        v84 = &v78[v83];
        v85 = &v79[v83];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        *(_QWORD *)v84 = v87;
        *((_QWORD *)v84 + 1) = v86;
        v88 = v82[7];
        v89 = &v78[v88];
        v90 = &v79[v88];
        v89[8] = v90[8];
        *(_QWORD *)v89 = *(_QWORD *)v90;
        swift_bridgeObjectRetain();
LABEL_28:
        swift_storeEnumTagMultiPayload();
        goto LABEL_29;
      }
      v95 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v95;
      v96 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v97 = *(int *)(v96 + 20);
      v114 = v96;
      __dsta = &v78[v97];
      v94 = &v79[v97];
      swift_bridgeObjectRetain();
      if (v111(v94, 1, v112))
        goto LABEL_24;
    }
    (*(void (**)(char *, char *, uint64_t))(v110 + 16))(__dsta, v94, v112);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(__dsta, 0, 1, v112);
    goto LABEL_27;
  }
  v17 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(void *, uint64_t, uint64_t);
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  int v67;
  int v68;
  void (*v69)(uint64_t, char *, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  int EnumCaseMultiPayload;
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  size_t v82;
  void *v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  int v101;
  int *v102;
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char v109;
  uint64_t updated;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  _QWORD *v130;
  char *v131;
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(char *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void (*__dst)(uint64_t, uint64_t, uint64_t);
  char *__dsta;
  _QWORD *v142;
  _QWORD *v143;
  char *v144;

  v6 = sub_23E536F80();
  v142 = *(_QWORD **)(v6 - 8);
  __dst = (void (*)(uint64_t, uint64_t, uint64_t))v142[3];
  __dst(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_23E1E2FA0(a1 + v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      ((void (*)(_QWORD *, _QWORD *, uint64_t))v142[2])(v11, v12, v6);
    }
    else
    {
      *v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = a3[7];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  v138 = v6;
  if (v19)
  {
    if (!v20)
    {
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v142[2])(v14, v15, v6);
      v21 = v16[5];
      v22 = &v14[v21];
      v23 = &v15[v21];
      *v22 = *v23;
      v22[1] = v23[1];
      v24 = v16[6];
      v25 = &v14[v24];
      v26 = &v15[v24];
      *v25 = *v26;
      v25[1] = v26[1];
      v27 = v16[7];
      v28 = &v14[v27];
      v29 = &v15[v27];
      *v28 = *v29;
      v28[1] = v29[1];
      v30 = v16[8];
      v31 = &v14[v30];
      v32 = &v15[v30];
      *v31 = *v32;
      v31[1] = v32[1];
      v14[v16[9]] = v15[v16[9]];
      v14[v16[10]] = v15[v16[10]];
      v14[v16[11]] = v15[v16[11]];
      v33 = *(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v14, 0, 1, v16);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
LABEL_11:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  __dst((uint64_t)v14, (uint64_t)v15, v6);
  v85 = v16[5];
  v86 = &v14[v85];
  v87 = &v15[v85];
  *v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88 = v16[6];
  v89 = &v14[v88];
  v90 = &v15[v88];
  *v89 = *v90;
  v89[1] = v90[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v91 = v16[7];
  v92 = &v14[v91];
  v93 = &v15[v91];
  *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = v16[8];
  v95 = &v14[v94];
  v96 = &v15[v94];
  *v95 = *v96;
  v95[1] = v96[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[v16[9]] = v15[v16[9]];
  v14[v16[10]] = v15[v16[10]];
  v14[v16[11]] = v15[v16[11]];
LABEL_12:
  v35 = a3[8];
  v36 = (void *)(a1 + v35);
  v37 = (void *)(a2 + v35);
  v38 = sub_23E536F20();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  v136 = v39;
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_17:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_18:
  v44 = a3[9];
  v45 = a1 + v44;
  v46 = (uint64_t *)(a2 + v44);
  v47 = *v46;
  *(_BYTE *)(v45 + 8) = *((_BYTE *)v46 + 8);
  *(_QWORD *)v45 = v47;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  __dst(a1 + a3[11], a2 + a3[11], v6);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[13];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[21];
  v52 = (void *)(a1 + v51);
  v53 = (const void *)(a2 + v51);
  v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v142[6];
  v55 = v54(a1 + v51, 1, v6);
  v56 = v54((uint64_t)v53, 1, v6);
  v137 = (unsigned int (*)(char *, uint64_t, uint64_t))v40;
  if (v55)
  {
    if (!v56)
    {
      ((void (*)(void *, const void *, uint64_t))v142[2])(v52, v53, v6);
      ((void (*)(void *, _QWORD, uint64_t, uint64_t))v142[7])(v52, 0, 1, v6);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v56)
  {
    ((void (*)(void *, uint64_t))v142[1])(v52, v6);
LABEL_23:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_24;
  }
  __dst((uint64_t)v52, (uint64_t)v53, v6);
LABEL_24:
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  v58 = a3[23];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (_QWORD *)(a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  v61 = a3[26];
  v62 = a1 + v61;
  v63 = (char *)(a2 + v61);
  v64 = type metadata accessor for StaticSoftwareUpdate(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66((uint64_t)v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      v69 = (void (*)(uint64_t, char *, uint64_t))v142[2];
      v69(v62, v63, v138);
      v70 = *(int *)(v64 + 20);
      v71 = (_QWORD *)(v62 + v70);
      v72 = &v63[v70];
      v143 = (_QWORD *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v71 = *(_QWORD *)v72;
        v71[1] = *((_QWORD *)v72 + 1);
        updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v111 = *(int *)(updated + 20);
        v139 = updated;
        __dsta = (char *)v71 + v111;
        v112 = &v72[v111];
        swift_bridgeObjectRetain();
        if (v137(v112, 1, v38))
        {
LABEL_45:
          v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(__dsta, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
LABEL_53:
          v121 = *(int *)(v139 + 24);
          v122 = (_QWORD *)((char *)v71 + v121);
          v123 = &v72[v121];
          *v122 = *(_QWORD *)v123;
          v122[1] = *((_QWORD *)v123 + 1);
          v124 = *(int *)(v139 + 28);
          v125 = (_QWORD *)((char *)v71 + v124);
          v126 = &v72[v124];
          *v125 = *(_QWORD *)v126;
          v125[1] = *((_QWORD *)v126 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v71 + *(int *)(v127 + 48)) = v72[*(int *)(v127 + 48)];
          goto LABEL_54;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v71, v72, *(_QWORD *)(*(v143 - 1) + 64));
LABEL_55:
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
            goto LABEL_56;
          }
          v69((uint64_t)v71, v72, v138);
          v74 = (int *)type metadata accessor for StaticHH2Update(0);
          *((_BYTE *)v71 + v74[5]) = v72[v74[5]];
          v75 = v74[6];
          v76 = (_QWORD *)((char *)v71 + v75);
          v77 = &v72[v75];
          *v76 = *(_QWORD *)v77;
          v76[1] = *((_QWORD *)v77 + 1);
          v78 = v74[7];
          v79 = (char *)v71 + v78;
          v80 = &v72[v78];
          v81 = v80[8];
          *(_QWORD *)v79 = *(_QWORD *)v80;
          v79[8] = v81;
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        *v71 = *(_QWORD *)v72;
        v71[1] = *((_QWORD *)v72 + 1);
        v113 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v114 = *(int *)(v113 + 20);
        v139 = v113;
        __dsta = (char *)v71 + v114;
        v112 = &v72[v114];
        swift_bridgeObjectRetain();
        if (v137(v112, 1, v38))
          goto LABEL_45;
      }
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(__dsta, v112, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(__dsta, 0, 1, v38);
      goto LABEL_53;
    }
    goto LABEL_32;
  }
  if (!v68)
  {
    __dst(v62, (uint64_t)v63, v138);
    if (a1 == a2)
      goto LABEL_56;
    v97 = *(int *)(v64 + 20);
    v98 = (_QWORD *)(v62 + v97);
    v99 = &v63[v97];
    sub_23E1E2FA0((uint64_t)v98, type metadata accessor for StaticSoftwareUpdate.Kind);
    v100 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v101 = swift_getEnumCaseMultiPayload();
    switch(v101)
    {
      case 2:
        *v98 = *(_QWORD *)v99;
        v98[1] = *((_QWORD *)v99 + 1);
        v116 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v117 = v116[5];
        v144 = (char *)v98 + v117;
        v118 = &v99[v117];
        swift_bridgeObjectRetain();
        if (v137(v118, 1, v38))
        {
LABEL_48:
          v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
          memcpy(v144, v118, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
LABEL_58:
          v129 = v116[6];
          v130 = (_QWORD *)((char *)v98 + v129);
          v131 = &v99[v129];
          *v130 = *(_QWORD *)v131;
          v130[1] = *((_QWORD *)v131 + 1);
          v132 = v116[7];
          v133 = (_QWORD *)((char *)v98 + v132);
          v134 = &v99[v132];
          *v133 = *(_QWORD *)v134;
          v133[1] = *((_QWORD *)v134 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
          *((_BYTE *)v98 + *(int *)(v135 + 48)) = v99[*(int *)(v135 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        break;
      case 1:
        *v98 = *(_QWORD *)v99;
        v98[1] = *((_QWORD *)v99 + 1);
        v116 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        v120 = v116[5];
        v144 = (char *)v98 + v120;
        v118 = &v99[v120];
        swift_bridgeObjectRetain();
        if (v137(v118, 1, v38))
          goto LABEL_48;
        break;
      case 0:
        ((void (*)(_QWORD *, char *, uint64_t))v142[2])(v98, v99, v138);
        v102 = (int *)type metadata accessor for StaticHH2Update(0);
        *((_BYTE *)v98 + v102[5]) = v99[v102[5]];
        v103 = v102[6];
        v104 = (_QWORD *)((char *)v98 + v103);
        v105 = &v99[v103];
        *v104 = *(_QWORD *)v105;
        v104[1] = *((_QWORD *)v105 + 1);
        v106 = v102[7];
        v107 = (char *)v98 + v106;
        v108 = &v99[v106];
        v109 = v108[8];
        *(_QWORD *)v107 = *(_QWORD *)v108;
        v107[8] = v109;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_56;
      default:
        v82 = *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64);
        v83 = v98;
        v84 = v99;
        goto LABEL_33;
    }
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v144, v118, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v144, 0, 1, v38);
    goto LABEL_58;
  }
  sub_23E1E2FA0(v62, type metadata accessor for StaticSoftwareUpdate);
LABEL_32:
  v82 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8) - 8) + 64);
  v83 = (void *)v62;
  v84 = v63;
LABEL_33:
  memcpy(v83, v84, v82);
LABEL_56:
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_QWORD *)(a1 + a3[29]) = *(_QWORD *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

