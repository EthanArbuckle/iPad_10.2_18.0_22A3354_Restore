uint64_t dispatch thunk of PushSubscriptionStore.subscriptions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t getEnumTagSinglePayload for PushSubscription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 68))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

SessionPushNotifications::Topic __swiftcall Topic.init(_:)(SessionPushNotifications::Topic result)
{
  SessionPushNotifications::Topic *v1;

  *v1 = result;
  return result;
}

size_t sub_1C12C2528()
{
  uint64_t v0;
  size_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12C257C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

size_t sub_1C12C257C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE68);
  v3 = *(_QWORD *)(type metadata accessor for PushToken() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1C12C8598(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1C12CA450();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static PushSubscription.pushToStartSubscriptionID(topic:)(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  sub_1C130884C();
  return v2;
}

uint64_t sub_1C12C26EC()
{
  uint64_t v0;
  unsigned __int16 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FDF0);
  sub_1C1308930();
  v11 = MEMORY[0x1E0DEE9E8];
  v0 = *(_QWORD *)(v10 + 16);
  if (v0)
  {
    v1 = (unsigned __int16 *)(swift_bridgeObjectRetain() + 96);
    do
    {
      v2 = *v1 | (*((unsigned __int8 *)v1 + 2) << 16);
      if ((~v2 & 0x810000) == 0)
      {
        v4 = *((_QWORD *)v1 - 2);
        v3 = *((_QWORD *)v1 - 1);
        v6 = *((_QWORD *)v1 - 4);
        v5 = *((_QWORD *)v1 - 3);
        v8 = *((_QWORD *)v1 - 6);
        v7 = *((_QWORD *)v1 - 5);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v8, v7, v6, v5, v4, v3, v2);
        swift_bridgeObjectRetain();
        sub_1C1304B64(&v10, v8, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v8, v7, v6, v5, v4, v3, v2);
      }
      v1 += 36;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease_n();
    return v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t PushSubscription.id.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  if ((*((unsigned __int16 *)v0 + 32) | (*((char *)v0 + 66) << 16)) < 0)
  {
    v1 = v0[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = *v0;
    swift_bridgeObjectRetain_n();
    sub_1C130884C();
    swift_bridgeObjectRelease();
    return v3;
  }
  return v1;
}

uint64_t destroy for PushToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1C12C2998(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1C1308468();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1C12C2998(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *sub_1C12C29DC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12C2A30(v0);
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *sub_1C12C2A30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 72);
  v5 = sub_1C12C8854(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C12CA450();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t initializeWithCopy for PushSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(unsigned __int8 *)(a2 + 66);
  v12 = *(unsigned __int16 *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_1C12C2BD8(v5, v6, v7, v8, v9, v10, v12 | (v11 << 16));
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 66) = v11;
  *(_WORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  return a1;
}

uint64_t sub_1C12C2BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v8;

  if ((a7 & 0x800000) == 0)
    return swift_bridgeObjectRetain();
  v8 = a7;
  swift_bridgeObjectRetain();
  return sub_1C12CA504(a3, a4, a5, a6, v8);
}

uint64_t destroy for PushSubscription(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C12C2CB0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16));
}

uint64_t type metadata accessor for Budget()
{
  uint64_t result;

  result = qword_1ED78FD10;
  if (!qword_1ED78FD10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C12C2CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a7 & 0x800000) != 0)
    return sub_1C12E28F8(a3, a4, a5, a6, a7);
  return result;
}

uint64_t sub_1C12C2D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for PushSubscription()
{
  return &type metadata for PushSubscription;
}

uint64_t sub_1C12C2D74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PushToken()
{
  uint64_t result;

  result = qword_1ED78FA40;
  if (!qword_1ED78FA40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *initializeWithCopy for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_1C12C2F04(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = a2[6];
  v11 = a2[7];
  v12 = *(int *)(a3 + 32);
  v13 = (char *)a2 + v12;
  v14 = (char *)a1 + v12;
  a1[6] = v10;
  a1[7] = v11;
  v15 = sub_1C1308468();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v13, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v14, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v14, v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1C12C2F04(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1C12C2F48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_1C1308930();
  return v4;
}

uint64_t sub_1C12C2FAC(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1C12C3018(a3, a2, MEMORY[0x1E0C95F48]);
  return sub_1C13086F0();
}

uint64_t sub_1C12C3018(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BAA4B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BAA498]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C12C309C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12C30B4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C12C30B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1C12C3158(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v6);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1C12C3158(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t destroy for Topic()
{
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for Topic()
{
  return &type metadata for Topic;
}

uint64_t dispatch thunk of PushServing.subscriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PushServing.pushTokens.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C12C31C4(uint64_t a1, uint64_t a2)
{
  return sub_1C12C2F48(a1, a2, (uint64_t *)&unk_1ED78FDF0);
}

uint64_t sub_1C12C31D8(uint64_t a1, uint64_t a2)
{
  return sub_1C12C2F48(a1, a2, &qword_1ED78F688);
}

uint64_t dispatch thunk of PushServer.subscriptionExceedingReducedBudgetPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t sub_1C12C3208()
{
  return sub_1C12C2FAC((uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__subscriptionExceedingReducedBudgetPublisher, &qword_1ED78F5F0, &qword_1ED78F5E8);
}

uint64_t dispatch thunk of PushServer.activitiesExceedingReducedBudget.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of PushServer.unsubscribedActivityPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t sub_1C12C325C()
{
  return sub_1C12C2FAC((uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__unsubscribedActivityPublisher, &qword_1ED78F600, &qword_1ED78F5F8);
}

uint64_t sub_1C12C3278@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12C3290(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C12C3290@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1C12C3158(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)v6);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t storeEnumTagSinglePayload for PushToken()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for PushToken()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t PushToken.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1C12C2F04(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t PushToken.subscriptionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t storeEnumTagSinglePayload for PushSubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 68) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 68) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t PushSubscription.isPushToStartSubscription.getter()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 66) >> 7) ^ 1u;
}

uint64_t dispatch thunk of PushTokenStore.tokens.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t PushTokenStore.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t PushTokenStore.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t sub_1C12C3434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1C12C2D74(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v4, v5, v6, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C353C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C12C3560(a1, a2, a3, &qword_1ED78F4D8, (uint64_t (*)(_QWORD))type metadata accessor for Budget, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E1968, (uint64_t *)&unk_1EF6D7D50);
}

uint64_t sub_1C12C3560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), uint64_t *a7)
{
  uint64_t *v7;
  uint64_t *v12;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;

  v12 = v7;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v25 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1) == 1)
  {
    sub_1C12CA4C8(a1, a4);
    sub_1C12C5E24(a2, a3, a5, a7, (uint64_t)v18);
    swift_bridgeObjectRelease();
    return sub_1C12CA4C8((uint64_t)v18, a4);
  }
  else
  {
    sub_1C12C2D20(a1, (uint64_t)v21, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v12;
    *v12 = 0x8000000000000000;
    a6(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *v12 = v26;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C12C36DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v4, v6, v5, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C37CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a3;
  v7 = a3[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1C12C9AFC(v8, v6, v7, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C8DD4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C3880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v6, a1, a2, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C3970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v22 = type metadata accessor for PushToken();
    v8 = *(_QWORD *)(v22 - 8);
    v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v10 = (uint64_t *)(v1 + 16);
    swift_beginAccess();
    v11 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    v21 = a1;
    v12 = (uint64_t *)(v9 + a1 + 24);
    do
    {
      v15 = *(v12 - 1);
      v14 = *v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1C12C59E0(v15, v14);
      v18 = v17;
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v20 = *v10;
        v23 = *v10;
        *v10 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1C12C6884((uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
          v20 = v23;
        }
        swift_bridgeObjectRelease();
        sub_1C12C2D20(*(_QWORD *)(v20 + 56) + v16 * v11, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
        sub_1C12C6234(v16, v20, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
        *v10 = v20;
        swift_bridgeObjectRelease();
        v13 = 0;
      }
      else
      {
        v13 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v13, 1, v22);
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v6, &qword_1ED78FA88);
      v12 = (uint64_t *)((char *)v12 + v11);
      --v7;
    }
    while (v7);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C12C3B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1C12CA0E8(v5, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C92B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C3BE4()
{
  uint64_t v0;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C3C24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t result;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  int64_t v121;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v7);
  v118 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v9 = MEMORY[0x1E0C80A78](v116);
  v115 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v114 = (uint64_t)&v99 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v113 = (uint64_t *)((char *)&v99 - v14);
  MEMORY[0x1E0C80A78](v13);
  v112 = (char *)&v99 - v15;
  v103 = type metadata accessor for PushToken();
  v119 = *(_QWORD *)(v103 - 8);
  v16 = MEMORY[0x1E0C80A78](v103);
  v109 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v99 - v18;
  v21 = *a3;
  v20 = a3[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1C12C9AFC(v22, v21, v20, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C9614);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = swift_retain();
  v25 = sub_1C12C6FEC(v24, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C12C75E0);
  v101 = 0;
  v102 = v23;
  swift_release();
  v26 = *(_QWORD *)(v25 + 16);
  v108 = (uint64_t *)(v3 + 16);
  if (!v26)
  {
    swift_release();
    v46 = MEMORY[0x1E0DEE9D8];
    v47 = (uint64_t)v118;
LABEL_29:
    v58 = sub_1C12C6FEC(v102, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C12C7148);
    swift_release();
    v59 = *(_QWORD *)(v58 + 16);
    v104 = v46;
    if (!v59)
    {
      swift_release();
      v76 = MEMORY[0x1E0DEE9D8];
LABEL_59:
      v85 = v46;
      v86 = *(_QWORD *)(v46 + 16);
      if (v86)
      {
        v87 = v119;
        v88 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
        swift_beginAccess();
        v89 = *(_QWORD *)(v87 + 72);
        swift_bridgeObjectRetain();
        v90 = (uint64_t *)(v88 + v85 + 24);
        v91 = v108;
        do
        {
          v93 = *(v90 - 1);
          v94 = *v90;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v95 = sub_1C12C59E0(v93, v94);
          LOBYTE(v93) = v96;
          swift_bridgeObjectRelease();
          if ((v93 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v98 = *v91;
            v120 = *v91;
            *v91 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1C12C6884((uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
              v98 = v120;
            }
            swift_bridgeObjectRelease();
            sub_1C12C2D20(*(_QWORD *)(v98 + 56) + v95 * v89, v47, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
            sub_1C12C6234(v95, v98, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
            *v91 = v98;
            swift_bridgeObjectRelease();
            v92 = 0;
          }
          else
          {
            v92 = 1;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56))(v47, v92, 1, v103);
          swift_bridgeObjectRelease();
          sub_1C12CA4C8(v47, &qword_1ED78FA88);
          v90 = (uint64_t *)((char *)v90 + v89);
          --v86;
        }
        while (v86);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v76;
    }
    v121 = MEMORY[0x1E0DEE9D8];
    sub_1C12C7A64(0, v59, 0);
    result = sub_1C12C8D4C(v58);
    if (result < 0)
      goto LABEL_80;
    v61 = result;
    if (result >= 1 << *(_BYTE *)(v58 + 32))
      goto LABEL_80;
    v62 = 0;
    v63 = v58 + 64;
    v102 = v58 + 80;
    v110 = v58;
    v105 = v59;
    v106 = v60;
    v107 = v58 + 64;
    v64 = v112;
    while (1)
    {
      v65 = v61 >> 6;
      if ((*(_QWORD *)(v63 + 8 * (v61 >> 6)) & (1 << v61)) == 0)
        goto LABEL_75;
      if (*(_DWORD *)(v58 + 36) != (_DWORD)v60)
        goto LABEL_76;
      v111 = v62;
      v66 = v116;
      v67 = (uint64_t)v64 + *(int *)(v116 + 48);
      v68 = *(_QWORD *)(v58 + 56);
      v69 = (uint64_t *)(*(_QWORD *)(v58 + 48) + 16 * v61);
      v71 = *v69;
      v70 = v69[1];
      v117 = *(_QWORD *)(v119 + 72);
      sub_1C12C2D74(v68 + v117 * v61, v67, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      *v64 = v71;
      v64[1] = v70;
      v72 = (uint64_t)v113;
      *v113 = v71;
      *(_QWORD *)(v72 + 8) = v70;
      sub_1C12C2D74(v67, v72 + *(int *)(v66 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v73 = v114;
      sub_1C12C9D38(v72, v114);
      swift_bridgeObjectRetain_n();
      sub_1C12CA4C8((uint64_t)v64, &qword_1ED78F570);
      v74 = *(int *)(v66 + 48);
      v75 = (uint64_t)&v115[v74];
      sub_1C12C2D74(v73 + v74, (uint64_t)&v115[v74], (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1C12C2D20(v75, v109, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1C12CA4C8(v73, &qword_1ED78F570);
      v76 = v121;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C12C7A64(0, *(_QWORD *)(v76 + 16) + 1, 1);
        v76 = v121;
      }
      v78 = *(_QWORD *)(v76 + 16);
      v77 = *(_QWORD *)(v76 + 24);
      v58 = v110;
      if (v78 >= v77 >> 1)
      {
        sub_1C12C7A64(v77 > 1, v78 + 1, 1);
        v76 = v121;
      }
      *(_QWORD *)(v76 + 16) = v78 + 1;
      result = sub_1C12C2D20(v109, v76+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ v78 * v117, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v79 = 1 << *(_BYTE *)(v58 + 32);
      if ((uint64_t)v61 >= v79)
        goto LABEL_77;
      v63 = v107;
      v80 = *(_QWORD *)(v107 + 8 * v65);
      if ((v80 & (1 << v61)) == 0)
        goto LABEL_78;
      LODWORD(v60) = v106;
      if (*(_DWORD *)(v58 + 36) != (_DWORD)v106)
        goto LABEL_79;
      v81 = v80 & (-2 << (v61 & 0x3F));
      if (v81)
        break;
      v82 = v65 + 1;
      v83 = (unint64_t)(v79 + 63) >> 6;
      if (v65 + 1 >= v83)
      {
        v61 = 1 << *(_BYTE *)(v58 + 32);
        goto LABEL_51;
      }
      v84 = *(_QWORD *)(v107 + 8 * v82);
      v47 = (uint64_t)v118;
      if (v84)
      {
LABEL_49:
        v61 = __clz(__rbit64(v84)) + (v82 << 6);
      }
      else
      {
        while (v83 - 2 != v65)
        {
          v84 = *(_QWORD *)(v102 + 8 * v65++);
          if (v84)
          {
            v82 = v65 + 1;
            goto LABEL_49;
          }
        }
        v61 = 1 << *(_BYTE *)(v58 + 32);
      }
LABEL_52:
      v62 = v111 + 1;
      if (v111 + 1 == v105)
      {
        swift_release();
        v46 = v104;
        goto LABEL_59;
      }
      if ((v61 & 0x8000000000000000) != 0 || (uint64_t)v61 >= v79)
        goto LABEL_80;
    }
    v61 = __clz(__rbit64(v81)) | v61 & 0xFFFFFFFFFFFFFFC0;
LABEL_51:
    v47 = (uint64_t)v118;
    goto LABEL_52;
  }
  v121 = MEMORY[0x1E0DEE9D8];
  sub_1C12C7A64(0, v26, 0);
  result = sub_1C12C8D4C(v25);
  if (result < 0)
    goto LABEL_74;
  v29 = result;
  if (result >= 1 << *(_BYTE *)(v25 + 32))
    goto LABEL_74;
  v30 = 0;
  v31 = v25 + 64;
  v100 = v25 + 80;
  v107 = v25;
  v104 = v26;
  v105 = v28;
  v106 = v25 + 64;
  while (1)
  {
    v32 = v29 >> 6;
    if ((*(_QWORD *)(v31 + 8 * (v29 >> 6)) & (1 << v29)) == 0)
      break;
    if (*(_DWORD *)(v25 + 36) != (_DWORD)v28)
      goto LABEL_70;
    v110 = v30;
    v111 = 1 << v29;
    v33 = v116;
    v34 = (uint64_t)v19;
    v35 = v112;
    v36 = (uint64_t)&v112[*(int *)(v116 + 48)];
    v37 = *(_QWORD *)(v25 + 56);
    v38 = (uint64_t *)(*(_QWORD *)(v25 + 48) + 16 * v29);
    v40 = *v38;
    v39 = v38[1];
    v117 = *(_QWORD *)(v119 + 72);
    sub_1C12C2D74(v37 + v117 * v29, v36, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    *v35 = v40;
    v35[1] = v39;
    v41 = (uint64_t)v113;
    *v113 = v40;
    *(_QWORD *)(v41 + 8) = v39;
    sub_1C12C2D74(v36, v41 + *(int *)(v33 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v42 = v114;
    sub_1C12C9D38(v41, v114);
    swift_bridgeObjectRetain_n();
    v43 = (uint64_t)v35;
    v19 = (char *)v34;
    sub_1C12CA4C8(v43, &qword_1ED78F570);
    v44 = *(int *)(v33 + 48);
    v45 = (uint64_t)&v115[v44];
    sub_1C12C2D74(v42 + v44, (uint64_t)&v115[v44], (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12C2D20(v45, v34, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12CA4C8(v42, &qword_1ED78F570);
    v46 = v121;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C12C7A64(0, *(_QWORD *)(v46 + 16) + 1, 1);
      v46 = v121;
    }
    v48 = v117;
    v47 = (uint64_t)v118;
    v25 = v107;
    v50 = *(_QWORD *)(v46 + 16);
    v49 = *(_QWORD *)(v46 + 24);
    if (v50 >= v49 >> 1)
    {
      sub_1C12C7A64(v49 > 1, v50 + 1, 1);
      v46 = v121;
    }
    *(_QWORD *)(v46 + 16) = v50 + 1;
    result = sub_1C12C2D20(v34, v46+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ v50 * v48, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v51 = 1 << *(_BYTE *)(v25 + 32);
    if ((uint64_t)v29 >= v51)
      goto LABEL_71;
    v31 = v106;
    v52 = *(_QWORD *)(v106 + 8 * v32);
    if ((v52 & v111) == 0)
      goto LABEL_72;
    LODWORD(v28) = v105;
    if (*(_DWORD *)(v25 + 36) != (_DWORD)v105)
      goto LABEL_73;
    v53 = v52 & (-2 << (v29 & 0x3F));
    if (v53)
    {
      v29 = __clz(__rbit64(v53)) | v29 & 0xFFFFFFFFFFFFFFC0;
      v54 = v104;
      goto LABEL_23;
    }
    v55 = v32 + 1;
    v56 = (unint64_t)(v51 + 63) >> 6;
    v54 = v104;
    if (v32 + 1 < v56)
    {
      v57 = *(_QWORD *)(v106 + 8 * v55);
      if (v57)
      {
LABEL_21:
        v29 = __clz(__rbit64(v57)) + (v55 << 6);
        goto LABEL_23;
      }
      while (v56 - 2 != v32)
      {
        v57 = *(_QWORD *)(v100 + 8 * v32++);
        if (v57)
        {
          v55 = v32 + 1;
          goto LABEL_21;
        }
      }
    }
    v29 = 1 << *(_BYTE *)(v25 + 32);
LABEL_23:
    v30 = v110 + 1;
    if (v110 + 1 == v54)
    {
      swift_release();
      goto LABEL_29;
    }
    if ((v29 & 0x8000000000000000) != 0 || (uint64_t)v29 >= v51)
      goto LABEL_74;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1C12C4654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  int64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  char *v103;
  int64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v8 = MEMORY[0x1E0C80A78](v115);
  v114 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v113 = (uint64_t)&v97 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v112 = (uint64_t *)((char *)&v97 - v13);
  MEMORY[0x1E0C80A78](v12);
  v111 = (char *)&v97 - v14;
  v102 = type metadata accessor for PushToken();
  v117 = *(_QWORD *)(v102 - 8);
  v15 = MEMORY[0x1E0C80A78](v102);
  v108 = (uint64_t)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v97 - v17;
  v101 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1C12CA0E8(v19, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C9D80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = swift_retain();
  v22 = sub_1C12C6FEC(v21, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C12C75E0);
  v99 = 0;
  v100 = v20;
  swift_release();
  v23 = *(_QWORD *)(v22 + 16);
  v103 = v7;
  if (!v23)
  {
    swift_release();
    v43 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    v54 = sub_1C12C6FEC(v100, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C12C7148);
    swift_release();
    v55 = *(_QWORD *)(v54 + 16);
    v104 = v43;
    if (!v55)
    {
      swift_release();
      v72 = MEMORY[0x1E0DEE9D8];
      v81 = v101;
LABEL_59:
      v83 = v43;
      v84 = *(_QWORD *)(v43 + 16);
      if (v84)
      {
        v85 = v117;
        v86 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
        swift_beginAccess();
        v87 = *(_QWORD *)(v85 + 72);
        swift_bridgeObjectRetain();
        v88 = (uint64_t *)(v86 + v83 + 24);
        do
        {
          v91 = *(v88 - 1);
          v92 = *v88;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v93 = sub_1C12C59E0(v91, v92);
          LOBYTE(v91) = v94;
          swift_bridgeObjectRelease();
          if ((v91 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v96 = *v81;
            v118 = *v81;
            *v81 = 0x8000000000000000;
            v90 = (uint64_t)v103;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1C12C6884((uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
              v96 = v118;
            }
            swift_bridgeObjectRelease();
            sub_1C12C2D20(*(_QWORD *)(v96 + 56) + v93 * v87, v90, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
            sub_1C12C6234(v93, v96, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
            *v81 = v96;
            swift_bridgeObjectRelease();
            v89 = 0;
          }
          else
          {
            v89 = 1;
            v90 = (uint64_t)v103;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v90, v89, 1, v102);
          swift_bridgeObjectRelease();
          sub_1C12CA4C8(v90, &qword_1ED78FA88);
          v88 = (uint64_t *)((char *)v88 + v87);
          --v84;
        }
        while (v84);
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v72;
    }
    v119 = MEMORY[0x1E0DEE9D8];
    sub_1C12C7A64(0, v55, 0);
    result = sub_1C12C8D4C(v54);
    if (result < 0)
      goto LABEL_80;
    v57 = result;
    if (result >= 1 << *(_BYTE *)(v54 + 32))
      goto LABEL_80;
    v58 = 0;
    v59 = v54 + 64;
    v100 = v54 + 80;
    v109 = v54;
    v105 = v55;
    v106 = v56;
    v107 = v54 + 64;
    v60 = v111;
    while (1)
    {
      v61 = v57 >> 6;
      if ((*(_QWORD *)(v59 + 8 * (v57 >> 6)) & (1 << v57)) == 0)
        goto LABEL_75;
      if (*(_DWORD *)(v54 + 36) != (_DWORD)v56)
        goto LABEL_76;
      v110 = v58;
      v62 = v115;
      v63 = (uint64_t)v60 + *(int *)(v115 + 48);
      v64 = *(_QWORD *)(v54 + 56);
      v65 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * v57);
      v67 = *v65;
      v66 = v65[1];
      v116 = *(_QWORD *)(v117 + 72);
      sub_1C12C2D74(v64 + v116 * v57, v63, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      *v60 = v67;
      v60[1] = v66;
      v68 = (uint64_t)v112;
      *v112 = v67;
      *(_QWORD *)(v68 + 8) = v66;
      sub_1C12C2D74(v63, v68 + *(int *)(v62 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v69 = v113;
      sub_1C12C9D38(v68, v113);
      swift_bridgeObjectRetain_n();
      sub_1C12CA4C8((uint64_t)v60, &qword_1ED78F570);
      v70 = *(int *)(v62 + 48);
      v71 = (uint64_t)&v114[v70];
      sub_1C12C2D74(v69 + v70, (uint64_t)&v114[v70], (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1C12C2D20(v71, v108, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1C12CA4C8(v69, &qword_1ED78F570);
      v72 = v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C12C7A64(0, *(_QWORD *)(v72 + 16) + 1, 1);
        v72 = v119;
      }
      v74 = *(_QWORD *)(v72 + 16);
      v73 = *(_QWORD *)(v72 + 24);
      v54 = v109;
      if (v74 >= v73 >> 1)
      {
        sub_1C12C7A64(v73 > 1, v74 + 1, 1);
        v72 = v119;
      }
      *(_QWORD *)(v72 + 16) = v74 + 1;
      result = sub_1C12C2D20(v108, v72+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ v74 * v116, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v75 = 1 << *(_BYTE *)(v54 + 32);
      if ((uint64_t)v57 >= v75)
        goto LABEL_77;
      v59 = v107;
      v76 = *(_QWORD *)(v107 + 8 * v61);
      if ((v76 & (1 << v57)) == 0)
        goto LABEL_78;
      LODWORD(v56) = v106;
      if (*(_DWORD *)(v54 + 36) != (_DWORD)v106)
        goto LABEL_79;
      v77 = v76 & (-2 << (v57 & 0x3F));
      if (v77)
        break;
      v78 = v61 + 1;
      v79 = (unint64_t)(v75 + 63) >> 6;
      if (v61 + 1 >= v79)
      {
        v57 = 1 << *(_BYTE *)(v54 + 32);
        goto LABEL_51;
      }
      v80 = *(_QWORD *)(v107 + 8 * v78);
      v81 = v101;
      v82 = v105;
      if (v80)
      {
LABEL_49:
        v57 = __clz(__rbit64(v80)) + (v78 << 6);
      }
      else
      {
        while (v79 - 2 != v61)
        {
          v80 = *(_QWORD *)(v100 + 8 * v61++);
          if (v80)
          {
            v78 = v61 + 1;
            goto LABEL_49;
          }
        }
        v57 = 1 << *(_BYTE *)(v54 + 32);
      }
LABEL_52:
      v58 = v110 + 1;
      if (v110 + 1 == v82)
      {
        swift_release();
        v43 = v104;
        goto LABEL_59;
      }
      if ((v57 & 0x8000000000000000) != 0 || (uint64_t)v57 >= v75)
        goto LABEL_80;
    }
    v57 = __clz(__rbit64(v77)) | v57 & 0xFFFFFFFFFFFFFFC0;
LABEL_51:
    v81 = v101;
    v82 = v105;
    goto LABEL_52;
  }
  v119 = MEMORY[0x1E0DEE9D8];
  sub_1C12C7A64(0, v23, 0);
  result = sub_1C12C8D4C(v22);
  if (result < 0)
    goto LABEL_74;
  v26 = result;
  if (result >= 1 << *(_BYTE *)(v22 + 32))
    goto LABEL_74;
  v27 = 0;
  v28 = v22 + 64;
  v98 = v22 + 80;
  v107 = v22;
  v104 = v23;
  v105 = v25;
  v106 = v22 + 64;
  v29 = v115;
  while (1)
  {
    v30 = v26 >> 6;
    if ((*(_QWORD *)(v28 + 8 * (v26 >> 6)) & (1 << v26)) == 0)
      break;
    if (*(_DWORD *)(v22 + 36) != (_DWORD)v25)
      goto LABEL_70;
    v109 = v27;
    v110 = 1 << v26;
    v31 = (uint64_t)v18;
    v32 = v111;
    v33 = (uint64_t)&v111[*(int *)(v29 + 48)];
    v34 = *(_QWORD *)(v22 + 56);
    v35 = (uint64_t *)(*(_QWORD *)(v22 + 48) + 16 * v26);
    v37 = *v35;
    v36 = v35[1];
    v116 = *(_QWORD *)(v117 + 72);
    sub_1C12C2D74(v34 + v116 * v26, v33, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    *v32 = v37;
    v32[1] = v36;
    v38 = (uint64_t)v112;
    *v112 = v37;
    *(_QWORD *)(v38 + 8) = v36;
    sub_1C12C2D74(v33, v38 + *(int *)(v29 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v39 = v113;
    sub_1C12C9D38(v38, v113);
    swift_bridgeObjectRetain_n();
    v40 = (uint64_t)v32;
    v18 = (char *)v31;
    sub_1C12CA4C8(v40, &qword_1ED78F570);
    v41 = *(int *)(v29 + 48);
    v42 = (uint64_t)&v114[v41];
    sub_1C12C2D74(v39 + v41, (uint64_t)&v114[v41], (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12C2D20(v42, v31, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12CA4C8(v39, &qword_1ED78F570);
    v43 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C12C7A64(0, *(_QWORD *)(v43 + 16) + 1, 1);
      v43 = v119;
    }
    v22 = v107;
    v44 = v116;
    v46 = *(_QWORD *)(v43 + 16);
    v45 = *(_QWORD *)(v43 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_1C12C7A64(v45 > 1, v46 + 1, 1);
      v43 = v119;
    }
    *(_QWORD *)(v43 + 16) = v46 + 1;
    result = sub_1C12C2D20(v31, v43+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ v46 * v44, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v47 = 1 << *(_BYTE *)(v22 + 32);
    if ((uint64_t)v26 >= v47)
      goto LABEL_71;
    v28 = v106;
    v48 = *(_QWORD *)(v106 + 8 * v30);
    if ((v48 & v110) == 0)
      goto LABEL_72;
    LODWORD(v25) = v105;
    if (*(_DWORD *)(v22 + 36) != (_DWORD)v105)
      goto LABEL_73;
    v49 = v48 & (-2 << (v26 & 0x3F));
    if (v49)
    {
      v26 = __clz(__rbit64(v49)) | v26 & 0xFFFFFFFFFFFFFFC0;
      v50 = v104;
      goto LABEL_23;
    }
    v51 = v30 + 1;
    v52 = (unint64_t)(v47 + 63) >> 6;
    v50 = v104;
    if (v30 + 1 < v52)
    {
      v53 = *(_QWORD *)(v106 + 8 * v51);
      if (v53)
      {
LABEL_21:
        v26 = __clz(__rbit64(v53)) + (v51 << 6);
        goto LABEL_23;
      }
      while (v52 - 2 != v30)
      {
        v53 = *(_QWORD *)(v98 + 8 * v30++);
        if (v53)
        {
          v51 = v30 + 1;
          goto LABEL_21;
        }
      }
    }
    v26 = 1 << *(_BYTE *)(v22 + 32);
LABEL_23:
    v27 = v109 + 1;
    if (v109 + 1 == v50)
    {
      swift_release();
      goto LABEL_29;
    }
    if ((v26 & 0x8000000000000000) != 0 || (uint64_t)v26 >= v47)
      goto LABEL_74;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1C12C5060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v42 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1308468();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v41 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)v38 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  v15 = MEMORY[0x1E0C80A78](v14);
  v39 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v38 - v17;
  v19 = type metadata accessor for PushToken();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[1] = v3 + 16;
  swift_beginAccess();
  v23 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1C12C59E0(a1, a2);
    if ((v25 & 1) != 0)
    {
      sub_1C12C2D74(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v20 + 72) * v24, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
      v26(v18, 0, 1, v19);
    }
    else
    {
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
      v26(v18, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
    {
      sub_1C12C2D20((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1C12CA2B4((uint64_t)&v22[*(int *)(v19 + 32)], (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1C12CA4C8((uint64_t)v8, &qword_1ED78F6D0);
      }
      else
      {
        v29 = v40;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v40, v8, v9);
        v30 = v41;
        sub_1C1308450();
        v31 = sub_1C1308414();
        v32 = *(void (**)(char *, uint64_t))(v10 + 8);
        v32(v30, v9);
        v32(v29, v9);
        if ((v31 & 1) != 0)
        {
          v33 = *((_QWORD *)v22 + 2);
          v34 = *((_QWORD *)v22 + 3);
          v35 = (uint64_t)v39;
          v26(v39, 1, 1, v19);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1C12C3560(v35, v33, v34, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
          swift_endAccess();
          sub_1C12CA2FC((uint64_t)v22);
          goto LABEL_8;
        }
      }
      v36 = v42;
      sub_1C12C2D20((uint64_t)v22, v42, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v27 = v36;
      v28 = 0;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v27, v28, 1, v19);
    }
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v26(v18, 1, 1, v19);
  }
  sub_1C12CA4C8((uint64_t)v18, &qword_1ED78FA88);
LABEL_8:
  v27 = v42;
  v28 = 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v27, v28, 1, v19);
}

uint64_t PushTokenStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PushTokenStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

size_t sub_1C12C5454()
{
  uint64_t v0;
  size_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12C257C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C12C54AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  sub_1C12C2D74(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v4, v5, v6, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C55BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v4, v6, v5, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C56B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *v3;
  v7 = *a3;
  v8 = a3[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1C12C9AFC(v9, v7, v8, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C8DD4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 16) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C576C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PushToken();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C3560((uint64_t)v6, a1, a2, &qword_1ED78FA88, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C12E17D0, (uint64_t *)&unk_1ED78F5B0);
  return swift_endAccess();
}

uint64_t sub_1C12C5860(uint64_t a1)
{
  return sub_1C12C3970(a1);
}

uint64_t sub_1C12C5880(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1C12CA0E8(v6, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C12C92B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + 16) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C5914()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12C5960(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C12C3C24(a1, a2, a3);
}

uint64_t sub_1C12C5980(uint64_t a1, uint64_t a2)
{
  return sub_1C12C4654(a1, a2);
}

uint64_t sub_1C12C59A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12C5060(a1, a2, a3);
}

void sub_1C12C59C0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_1C12C59CC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1C12C59D4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1C12C59E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C1308AEC();
  sub_1C1308804();
  v4 = sub_1C1308B1C();
  return sub_1C12C5ACC(a1, a2, v4);
}

unint64_t sub_1C12C5A44(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1C1308AEC();
  sub_1C1308AF8();
  v2 = sub_1C1308B1C();
  return sub_1C12C5BAC(a1, v2);
}

unint64_t sub_1C12C5A9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C130899C();
  return sub_1C12C5C4C(a1, v2);
}

unint64_t sub_1C12C5ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C1308A98() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C1308A98() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C12C5BAC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1C12C5C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1C12CA458(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3BA9F64](v9, a1);
      sub_1C12CA494((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

double sub_1C12C5D10@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __int128 v15;
  double result;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C12C59E0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C12C6624();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 72 * v8;
    v13 = *(_QWORD *)(v12 + 8);
    v14 = *(_DWORD *)(v12 + 64);
    *(_QWORD *)a3 = *(_QWORD *)v12;
    *(_QWORD *)(a3 + 8) = v13;
    v15 = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 16) = *(_OWORD *)(v12 + 16);
    *(_OWORD *)(a3 + 32) = v15;
    *(_OWORD *)(a3 + 48) = *(_OWORD *)(v12 + 48);
    *(_DWORD *)(a3 + 64) = v14;
    sub_1C12C6048(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_DWORD *)(a3 + 64) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C12C5E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_1C12C59E0(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C12C6884(a3, a4);
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_1C12C2D20(v16 + *(_QWORD *)(v18 + 72) * v12, a5, a3);
    sub_1C12C6234(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_1C12C5F64(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C12C59E0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C12C6C8C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_1C12C643C(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1C12C6048(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1308990();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C1308AEC();
        swift_bridgeObjectRetain();
        sub_1C1308804();
        v9 = sub_1C1308B1C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 72 * v3;
          v15 = (const void *)(v14 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v15 + 72 || (v16 = v3 == v6, v3 = v6, !v16))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C12C6234(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1C1308990();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1C1308AEC();
        swift_bridgeObjectRetain();
        sub_1C1308804();
        v11 = sub_1C1308B1C();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C12C643C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1308990();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C1308AEC();
        swift_bridgeObjectRetain();
        sub_1C1308804();
        v9 = sub_1C1308B1C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1C12C6610()
{
  return sub_1C12C6884((uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
}

void *sub_1C12C6624()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5A8);
  v37 = v0;
  v1 = *v0;
  v2 = sub_1C1308A50();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v36 = v3;
    result = (void *)swift_release();
    *v37 = v36;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v41 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v41;
  }
  v39 = v1 + 64;
  v40 = v1;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      v13 = v40;
      v3 = v41;
      goto LABEL_12;
    }
    v33 = v7 + 1;
    v13 = v40;
    v3 = v41;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v38)
      goto LABEL_26;
    v34 = *(_QWORD *)(v39 + 8 * v33);
    ++v7;
    if (!v34)
    {
      v7 = v33 + 1;
      if (v33 + 1 >= v38)
        goto LABEL_26;
      v34 = *(_QWORD *)(v39 + 8 * v7);
      if (!v34)
        break;
    }
LABEL_25:
    v10 = (v34 - 1) & v34;
    v12 = __clz(__rbit64(v34)) + (v7 << 6);
LABEL_12:
    v14 = 16 * v12;
    v15 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v12);
    v17 = *v15;
    v16 = v15[1];
    v18 = 72 * v12;
    v19 = *(_QWORD *)(v13 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v27 = *(_QWORD *)(v19 + 48);
    v26 = *(_QWORD *)(v19 + 56);
    v28 = *(unsigned __int8 *)(v19 + 66);
    v29 = *(unsigned __int16 *)(v19 + 64);
    v30 = v29 | (v28 << 16);
    LOBYTE(v19) = *(_BYTE *)(v19 + 67);
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v14);
    *v31 = v17;
    v31[1] = v16;
    v32 = *(_QWORD *)(v3 + 56) + v18;
    *(_QWORD *)v32 = v20;
    *(_QWORD *)(v32 + 8) = v21;
    *(_QWORD *)(v32 + 16) = v22;
    *(_QWORD *)(v32 + 24) = v23;
    *(_QWORD *)(v32 + 32) = v24;
    *(_QWORD *)(v32 + 40) = v25;
    *(_QWORD *)(v32 + 48) = v27;
    *(_QWORD *)(v32 + 56) = v26;
    *(_BYTE *)(v32 + 66) = v28;
    *(_WORD *)(v32 + 64) = v29;
    *(_BYTE *)(v32 + 67) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1C12C2BD8(v22, v23, v24, v25, v27, v26, v30);
  }
  v35 = v33 + 2;
  if (v35 >= v38)
    goto LABEL_26;
  v34 = *(_QWORD *)(v39 + 8 * v35);
  if (v34)
  {
    v7 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v7 >= v38)
      goto LABEL_26;
    v34 = *(_QWORD *)(v39 + 8 * v7);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C12C6870()
{
  return sub_1C12C6884((uint64_t (*)(_QWORD))type metadata accessor for Budget, (uint64_t *)&unk_1EF6D7D50);
}

void *sub_1C12C6884(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_1C1308A50();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_1C12C2D74(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_1C12C2D20((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C12C6AB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FE58);
  v2 = *v0;
  v3 = sub_1C1308A50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_1C12C2F04(v24, v25);
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C12C6C8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FE48);
  v2 = *v0;
  v3 = sub_1C1308A50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C12C6E4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78EDB8);
  v2 = *v0;
  v3 = sub_1C1308A50();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C12C6FEC(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x1C3BAA558](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_1C12C7148(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  int64_t v66;

  v50 = a2;
  v51 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v4);
  v62 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1308468();
  v61 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v49 - v9;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v10 = MEMORY[0x1E0C80A78](v60);
  v59 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v49 - v12);
  v14 = type metadata accessor for PushToken();
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  result = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v63 = (_QWORD *)a3;
  v19 = *(_QWORD *)(a3 + 64);
  v52 = 0;
  v53 = a3 + 64;
  v20 = 1 << *(_BYTE *)(a3 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v54 = (unint64_t)(v20 + 63) >> 6;
  while (v22)
  {
    v65 = (v22 - 1) & v22;
    v66 = v18;
    v24 = __clz(__rbit64(v22)) | (v18 << 6);
LABEL_22:
    v29 = v63[7];
    v30 = (uint64_t *)(v63[6] + 16 * v24);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v57 + 72);
    v64 = v24;
    sub_1C12C2D74(v29 + v33 * v24, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v34 = v60;
    v35 = (uint64_t)v13 + *(int *)(v60 + 48);
    *v13 = v32;
    v13[1] = v31;
    sub_1C12C2D74((uint64_t)v17, v35, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v36 = *(int *)(v34 + 48);
    v37 = v59;
    v38 = (uint64_t)v59 + v36;
    *v59 = v32;
    v37[1] = v31;
    sub_1C12C2D74(v35, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v39 = v62;
    sub_1C12CA2B4(v38 + *(int *)(v58 + 32), v62);
    v40 = v61;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v39, 1, v6) == 1)
    {
      swift_bridgeObjectRetain_n();
      sub_1C12CA4C8(v39, &qword_1ED78F6D0);
      sub_1C12CA4C8((uint64_t)v13, &qword_1ED78F570);
      sub_1C12CA2FC(v38);
      sub_1C12CA2FC((uint64_t)v17);
      result = swift_bridgeObjectRelease();
      v18 = v66;
      v22 = v65;
LABEL_5:
      *(unint64_t *)((char *)v51 + ((v64 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v64;
      if (__OFADD__(v52++, 1))
        goto LABEL_28;
    }
    else
    {
      v41 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v55, v39, v6);
      swift_bridgeObjectRetain_n();
      v42 = (uint64_t)v17;
      v43 = v13;
      v44 = v6;
      v45 = v56;
      sub_1C1308450();
      v46 = sub_1C1308414();
      v47 = *(void (**)(char *, uint64_t))(v40 + 8);
      v48 = v45;
      v6 = v44;
      v13 = v43;
      v17 = (char *)v42;
      v47(v48, v6);
      v47(v41, v6);
      sub_1C12CA4C8((uint64_t)v13, &qword_1ED78F570);
      sub_1C12CA2FC(v38);
      sub_1C12CA2FC(v42);
      result = swift_bridgeObjectRelease();
      v18 = v66;
      v22 = v65;
      if ((v46 & 1) == 0)
        goto LABEL_5;
    }
  }
  v25 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v25 >= v54)
    return sub_1C12E1EA0(v51, v50, v52, v63);
  v26 = *(_QWORD *)(v53 + 8 * v25);
  v27 = v18 + 1;
  if (v26)
    goto LABEL_21;
  v27 = v18 + 2;
  if (v18 + 2 >= v54)
    return sub_1C12E1EA0(v51, v50, v52, v63);
  v26 = *(_QWORD *)(v53 + 8 * v27);
  if (v26)
    goto LABEL_21;
  v27 = v18 + 3;
  if (v18 + 3 >= v54)
    return sub_1C12E1EA0(v51, v50, v52, v63);
  v26 = *(_QWORD *)(v53 + 8 * v27);
  if (v26)
  {
LABEL_21:
    v65 = (v26 - 1) & v26;
    v66 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    goto LABEL_22;
  }
  v28 = v18 + 4;
  if (v18 + 4 >= v54)
    return sub_1C12E1EA0(v51, v50, v52, v63);
  v26 = *(_QWORD *)(v53 + 8 * v28);
  if (v26)
  {
    v27 = v18 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v54)
      return sub_1C12E1EA0(v51, v50, v52, v63);
    v26 = *(_QWORD *)(v53 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C12C75E0(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  int64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  int64_t v55;
  int v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;

  v48 = a2;
  v49 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1C1308468();
  v60 = *(_QWORD *)(v65 - 8);
  v6 = MEMORY[0x1E0C80A78](v65);
  v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v48 - v13);
  v15 = type metadata accessor for PushToken();
  v58 = *(_QWORD *)(v15 - 8);
  v59 = v15;
  result = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = 0;
  v51 = v12;
  v19 = 0;
  v62 = a3;
  v22 = a3[8];
  v21 = a3 + 8;
  v20 = v22;
  v23 = 1 << *((_BYTE *)v21 - 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v20;
  v54 = v21;
  v55 = (unint64_t)(v23 + 63) >> 6;
  while (v25)
  {
    v63 = (v25 - 1) & v25;
    v64 = v19;
    v26 = __clz(__rbit64(v25)) | (v19 << 6);
LABEL_18:
    v31 = v62[7];
    v32 = (uint64_t *)(v62[6] + 16 * v26);
    v33 = *v32;
    v34 = v32[1];
    v35 = *(_QWORD *)(v58 + 72);
    v57 = v26;
    sub_1C12C2D74(v31 + v35 * v26, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v36 = (uint64_t)v14 + *(int *)(v9 + 48);
    *v14 = v33;
    v14[1] = v34;
    sub_1C12C2D74((uint64_t)v18, v36, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v37 = (uint64_t)v12 + *(int *)(v9 + 48);
    *v12 = v33;
    v12[1] = v34;
    sub_1C12C2D74(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v38 = v61;
    sub_1C12CA2B4(v37 + *(int *)(v59 + 32), v61);
    v39 = (uint64_t)v18;
    v40 = v60;
    v41 = v65;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v38, 1, v65) == 1)
    {
      swift_bridgeObjectRetain_n();
      sub_1C12CA4C8(v38, &qword_1ED78F6D0);
      sub_1C12CA4C8((uint64_t)v14, &qword_1ED78F570);
      sub_1C12CA2FC(v37);
      sub_1C12CA2FC(v39);
      result = swift_bridgeObjectRelease();
      v18 = (char *)v39;
      v25 = v63;
      v19 = v64;
    }
    else
    {
      v42 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v52, v38, v41);
      swift_bridgeObjectRetain_n();
      v43 = v9;
      v44 = v53;
      sub_1C1308450();
      v56 = sub_1C1308414();
      v45 = *(void (**)(char *, uint64_t))(v40 + 8);
      v46 = v44;
      v9 = v43;
      v45(v46, v65);
      v47 = v42;
      v12 = v51;
      v45(v47, v65);
      sub_1C12CA4C8((uint64_t)v14, &qword_1ED78F570);
      sub_1C12CA2FC(v37);
      sub_1C12CA2FC(v39);
      result = swift_bridgeObjectRelease();
      v18 = (char *)v39;
      v25 = v63;
      v19 = v64;
      if ((v56 & 1) != 0)
      {
        *(unint64_t *)((char *)v49 + ((v57 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v57;
        v27 = __OFADD__(v50++, 1);
        if (v27)
          goto LABEL_30;
      }
    }
  }
  v27 = __OFADD__(v19, 1);
  v28 = v19 + 1;
  if (v27)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v28 >= v55)
    return sub_1C12E1EA0(v49, v48, v50, v62);
  v29 = v54[v28];
  if (v29)
  {
LABEL_17:
    v63 = (v29 - 1) & v29;
    v64 = v28;
    v26 = __clz(__rbit64(v29)) + (v28 << 6);
    goto LABEL_18;
  }
  v30 = v28 + 1;
  if (v28 + 1 >= v55)
    return sub_1C12E1EA0(v49, v48, v50, v62);
  v29 = v54[v30];
  if (v29)
    goto LABEL_16;
  v30 = v28 + 2;
  if (v28 + 2 >= v55)
    return sub_1C12E1EA0(v49, v48, v50, v62);
  v29 = v54[v30];
  if (v29)
    goto LABEL_16;
  v30 = v28 + 3;
  if (v28 + 3 >= v55)
    return sub_1C12E1EA0(v49, v48, v50, v62);
  v29 = v54[v30];
  if (v29)
  {
LABEL_16:
    v28 = v30;
    goto LABEL_17;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v55)
      return sub_1C12E1EA0(v49, v48, v50, v62);
    v29 = v54[v28];
    ++v30;
    if (v29)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C12C7A64(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C12C82D4(a1, a2, a3, (_QWORD *)*v3, &qword_1ED78FE68, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
  *v3 = result;
  return result;
}

uint64_t sub_1C12C7A90(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C12C7B74(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C12C7AAC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C12C82D4(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1EF6D7D60, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  *v3 = result;
  return result;
}

uint64_t sub_1C12C7AD8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C12C7CDC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C12C7AF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C12C7E58(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1C12C7B10(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C12C7FF8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C12C7B2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C12C816C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C12C7B48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C12C82D4(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6D7D28, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F778]);
  *v3 = result;
  return result;
}

uint64_t sub_1C12C7B74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12C7CDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 72 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12C7E58(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7D30);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7D38);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12C7FF8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D7D40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12C816C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12C82D4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

_QWORD *sub_1C12C84B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F5C0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_1C12C8B28(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C12CA450();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C12C8598(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = *(_QWORD *)(type metadata accessor for PushToken() - 8);
  v9 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
    a3 = 0;
LABEL_38:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return a3;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v8 + 72);
    sub_1C12C2D74(*(_QWORD *)(v35 + 56) + v28 * v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12C2D20((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    result = sub_1C12C2D20((uint64_t)v14, a2, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    if (v22 == a3)
      goto LABEL_37;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    a3 = v22;
LABEL_37:
    v18 = v31;
    a1 = v32;
    goto LABEL_38;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1C12C8854(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  int64_t v37;
  unint64_t v38;

  v6 = *(_QWORD *)(a4 + 64);
  v4 = a4 + 64;
  v5 = v6;
  v35 = v4;
  v7 = -1 << *(_BYTE *)(v4 - 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & v5;
  if (!a2)
  {
    v11 = 0;
    a3 = 0;
LABEL_38:
    *result = a4;
    result[1] = v35;
    result[2] = ~v7;
    result[3] = v11;
    result[4] = v9;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v11 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v10 = a2;
  v32 = -1 << *(_BYTE *)(v4 - 32);
  v33 = result;
  v11 = 0;
  v12 = 0;
  v34 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v9));
  v14 = (v9 - 1) & v9;
  v37 = v11;
  v15 = v13 | (v11 << 6);
  while (1)
  {
    v38 = v14;
    ++v12;
    v19 = *(_QWORD *)(a4 + 56) + 72 * v15;
    v21 = *(_QWORD *)v19;
    v20 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v26 = *(_QWORD *)(v19 + 48);
    v27 = *(_QWORD *)(v19 + 56);
    v28 = *(unsigned __int8 *)(v19 + 66);
    v29 = *(unsigned __int16 *)(v19 + 64);
    v30 = v29 | (v28 << 16);
    LOBYTE(v19) = *(_BYTE *)(v19 + 67);
    *(_QWORD *)v10 = v21;
    *(_QWORD *)(v10 + 8) = v20;
    *(_QWORD *)(v10 + 16) = v22;
    *(_QWORD *)(v10 + 24) = v23;
    *(_QWORD *)(v10 + 32) = v24;
    *(_QWORD *)(v10 + 40) = v25;
    *(_QWORD *)(v10 + 48) = v26;
    *(_QWORD *)(v10 + 56) = v27;
    *(_WORD *)(v10 + 64) = v29;
    *(_BYTE *)(v10 + 66) = v28;
    *(_BYTE *)(v10 + 67) = v19;
    v31 = a3;
    if (v12 == a3)
    {
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v22, v23, v24, v25, v26, v27, v30);
      v7 = v32;
      result = v33;
      a3 = v31;
      v11 = v37;
      v9 = v38;
      goto LABEL_38;
    }
    v10 += 72;
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_1C12C2BD8(v22, v23, v24, v25, v26, v27, v30);
    a3 = v31;
    v11 = v37;
    v9 = v38;
    if (v38)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v34)
      goto LABEL_33;
    v17 = *(_QWORD *)(v35 + 8 * v16);
    if (!v17)
      break;
LABEL_18:
    v14 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v37 = v16;
  }
  v11 += 2;
  if (v16 + 1 >= v34)
  {
    v9 = 0;
    v11 = v16;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v35 + 8 * v11);
  if (v17)
    goto LABEL_14;
  v18 = v16 + 2;
  if (v16 + 2 >= v34)
    goto LABEL_33;
  v17 = *(_QWORD *)(v35 + 8 * v18);
  if (v17)
    goto LABEL_17;
  v11 = v16 + 3;
  if (v16 + 3 >= v34)
  {
    v9 = 0;
    v11 = v16 + 2;
    goto LABEL_37;
  }
  v17 = *(_QWORD *)(v35 + 8 * v11);
  if (v17)
  {
LABEL_14:
    v16 = v11;
    goto LABEL_18;
  }
  v18 = v16 + 4;
  if (v16 + 4 >= v34)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    a3 = v12;
    v7 = v32;
    result = v33;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v35 + 8 * v18);
  if (v17)
  {
LABEL_17:
    v16 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v34)
    {
      v9 = 0;
      v11 = v34 - 1;
      goto LABEL_37;
    }
    v17 = *(_QWORD *)(v35 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1C12C8B28(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  v24 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 32 * v15);
    v20 = v19[1];
    v21 = v19[2];
    v22 = v19[3];
    *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    v10[3] = v22;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v21, v22);
      goto LABEL_38;
    }
    v10 += 4;
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_1C12C2F04(v21, v22);
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v23;
      result = v24;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C12C8D4C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C12C8DD4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)();
  char v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  _QWORD *v76;

  v58 = a2;
  v64 = a7;
  v72 = a6;
  v68 = a4;
  v69 = a5;
  v59 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v9 = MEMORY[0x1E0C80A78](v8);
  v63 = (uint64_t *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t *)((char *)&v57 - v12);
  v13 = MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t *)((char *)&v57 - v14);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v57 - v15);
  v17 = type metadata accessor for PushToken();
  v65 = *(_QWORD *)(v17 - 8);
  result = MEMORY[0x1E0C80A78](v17);
  v75 = (uint64_t)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v70 = (_QWORD *)a3;
  v21 = *(_QWORD *)(a3 + 64);
  v60 = 0;
  v61 = a3 + 64;
  v22 = 1 << *(_BYTE *)(a3 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v62 = (unint64_t)(v22 + 63) >> 6;
  v25 = type metadata accessor for PushToken;
  v66 = v16;
  while (1)
  {
    if (v24)
    {
      v73 = (v24 - 1) & v24;
      v74 = v20;
      v27 = __clz(__rbit64(v24)) | (v20 << 6);
      goto LABEL_21;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v28 >= v62)
      return sub_1C12E1EA0(v59, v58, v60, v70);
    v29 = *(_QWORD *)(v61 + 8 * v28);
    v30 = v20 + 1;
    if (!v29)
    {
      v30 = v20 + 2;
      if (v20 + 2 >= v62)
        return sub_1C12E1EA0(v59, v58, v60, v70);
      v29 = *(_QWORD *)(v61 + 8 * v30);
      if (!v29)
      {
        v30 = v20 + 3;
        if (v20 + 3 >= v62)
          return sub_1C12E1EA0(v59, v58, v60, v70);
        v29 = *(_QWORD *)(v61 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_20:
    v73 = (v29 - 1) & v29;
    v74 = v30;
    v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_21:
    v32 = v70[7];
    v33 = (uint64_t *)(v70[6] + 16 * v27);
    v34 = *v33;
    v35 = v33[1];
    v36 = *(_QWORD *)(v65 + 72);
    v71 = v27;
    v37 = v75;
    sub_1C12C2D74(v32 + v36 * v27, v75, (uint64_t (*)(_QWORD))v25);
    v38 = (uint64_t)v16 + *(int *)(v8 + 48);
    *v16 = v34;
    v16[1] = v35;
    sub_1C12C2D74(v37, v38, (uint64_t (*)(_QWORD))v25);
    v39 = v8;
    v40 = *(int *)(v8 + 48);
    v41 = v67;
    v42 = (uint64_t)v67 + v40;
    *v67 = v34;
    v41[1] = v35;
    v43 = v25;
    sub_1C12C2D74(v38, (uint64_t)v41 + v40, (uint64_t (*)(_QWORD))v25);
    v44 = *(_QWORD *)(v42 + 48);
    v45 = *(_QWORD *)(v42 + 56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C12CA2FC(v42);
    if (v44 == v68 && v45 == v69)
      v47 = 1;
    else
      v47 = sub_1C1308A98();
    swift_bridgeObjectRelease();
    v8 = v39;
    v48 = *(int *)(v39 + 48);
    v49 = v76;
    v50 = (uint64_t)v76 + v48;
    *v76 = v34;
    v49[1] = v35;
    sub_1C12C2D74(v38, (uint64_t)v49 + v48, (uint64_t (*)(_QWORD))v25);
    if ((v47 & 1) == 0)
    {
      sub_1C12CA4C8((uint64_t)v76, &qword_1ED78F570);
      v16 = v66;
      sub_1C12CA4C8((uint64_t)v66, &qword_1ED78F570);
      sub_1C12CA2FC(v75);
      result = swift_bridgeObjectRelease();
      v24 = v73;
      v20 = v74;
      goto LABEL_32;
    }
    v51 = *(int *)(v39 + 48);
    v52 = v63;
    v53 = (uint64_t)v63 + v51;
    *v63 = v34;
    v52[1] = v35;
    sub_1C12C2D74(v50, (uint64_t)v52 + v51, (uint64_t (*)(_QWORD))v25);
    v54 = *(_QWORD *)(v53 + 32);
    v55 = *(_QWORD *)(v53 + 40);
    swift_bridgeObjectRetain();
    sub_1C12CA2FC(v53);
    if (v54 == v72 && v55 == v64)
    {
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v76, &qword_1ED78F570);
      v16 = v66;
      sub_1C12CA4C8((uint64_t)v66, &qword_1ED78F570);
      sub_1C12CA2FC(v75);
      result = swift_bridgeObjectRelease();
      v8 = v39;
      v25 = v43;
      v24 = v73;
      v20 = v74;
    }
    else
    {
      v26 = sub_1C1308A98();
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v76, &qword_1ED78F570);
      v16 = v66;
      sub_1C12CA4C8((uint64_t)v66, &qword_1ED78F570);
      sub_1C12CA2FC(v75);
      result = swift_bridgeObjectRelease();
      v8 = v39;
      v25 = v43;
      v24 = v73;
      v20 = v74;
      if ((v26 & 1) == 0)
      {
LABEL_32:
        *(unint64_t *)((char *)v59 + ((v71 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v71;
        if (__OFADD__(v60++, 1))
        {
          __break(1u);
          return sub_1C12E1EA0(v59, v58, v60, v70);
        }
      }
    }
  }
  v31 = v20 + 4;
  if (v20 + 4 >= v62)
    return sub_1C12E1EA0(v59, v58, v60, v70);
  v29 = *(_QWORD *)(v61 + 8 * v31);
  if (v29)
  {
    v30 = v20 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v62)
      return sub_1C12E1EA0(v59, v58, v60, v70);
    v29 = *(_QWORD *)(v61 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C12C92B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int64_t v48;

  v37 = a2;
  v45 = a4;
  v46 = a5;
  v38 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v6 = MEMORY[0x1E0C80A78](v44);
  v43 = (uint64_t *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v37 - v8);
  v10 = type metadata accessor for PushToken();
  v42 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v47 = (_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 64);
  v39 = 0;
  v40 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v41 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v19 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v48 = v14;
    v20 = v19 | (v14 << 6);
LABEL_18:
    v25 = (uint64_t *)(v47[6] + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    sub_1C12C2D74(v47[7] + *(_QWORD *)(v42 + 72) * v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v28 = v44;
    v29 = (uint64_t)v9 + *(int *)(v44 + 48);
    *v9 = v27;
    v9[1] = v26;
    sub_1C12C2D74((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v30 = *(int *)(v28 + 48);
    v31 = v43;
    v32 = (uint64_t)v43 + v30;
    *v43 = v27;
    v31[1] = v26;
    sub_1C12C2D74(v29, (uint64_t)v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v33 = *(_QWORD *)(v32 + 32);
    v34 = *(_QWORD *)(v32 + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C12CA2FC(v32);
    if (v33 == v45 && v34 == v46)
    {
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v9, &qword_1ED78F570);
      sub_1C12CA2FC((uint64_t)v13);
      result = swift_bridgeObjectRelease();
      v14 = v48;
    }
    else
    {
      v36 = sub_1C1308A98();
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v9, &qword_1ED78F570);
      sub_1C12CA2FC((uint64_t)v13);
      result = swift_bridgeObjectRelease();
      v14 = v48;
      if ((v36 & 1) == 0)
      {
        *(unint64_t *)((char *)v38 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        v21 = __OFADD__(v39++, 1);
        if (v21)
          goto LABEL_33;
      }
    }
  }
  v21 = __OFADD__(v14, 1);
  v22 = v14 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v22 >= v41)
    return sub_1C12E1EA0(v38, v37, v39, v47);
  v23 = *(_QWORD *)(v40 + 8 * v22);
  if (v23)
  {
LABEL_17:
    v18 = (v23 - 1) & v23;
    v48 = v22;
    v20 = __clz(__rbit64(v23)) + (v22 << 6);
    goto LABEL_18;
  }
  v24 = v22 + 1;
  if (v22 + 1 >= v41)
    return sub_1C12E1EA0(v38, v37, v39, v47);
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v22 + 2;
  if (v22 + 2 >= v41)
    return sub_1C12E1EA0(v38, v37, v39, v47);
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v24 = v22 + 3;
  if (v22 + 3 >= v41)
    return sub_1C12E1EA0(v38, v37, v39, v47);
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
  {
LABEL_16:
    v22 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v41)
      return sub_1C12E1EA0(v38, v37, v39, v47);
    v23 = *(_QWORD *)(v40 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_17;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C12C9614(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v57;
  uint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  int64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  int64_t v76;

  v58 = a2;
  v62 = a7;
  v65 = a6;
  v70 = a4;
  v71 = a5;
  v59 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v9 = MEMORY[0x1E0C80A78](v8);
  v61 = (uint64_t *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v9);
  v74 = (uint64_t *)((char *)&v57 - v12);
  v13 = MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t *)((char *)&v57 - v14);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v57 - v15);
  v17 = type metadata accessor for PushToken();
  v68 = *(_QWORD *)(v17 - 8);
  result = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = 0;
  v21 = 0;
  v73 = a3;
  v24 = a3[8];
  v23 = a3 + 8;
  v22 = v24;
  v25 = 1 << *((_BYTE *)v23 - 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v22;
  v63 = v23;
  v64 = (unint64_t)(v25 + 63) >> 6;
  v66 = v20;
  v67 = v16;
  while (v27)
  {
    v75 = (v27 - 1) & v27;
    v76 = v21;
    v28 = __clz(__rbit64(v27)) | (v21 << 6);
LABEL_21:
    v33 = v73[7];
    v34 = (uint64_t *)(v73[6] + 16 * v28);
    v35 = *v34;
    v36 = v34[1];
    v37 = *(_QWORD *)(v68 + 72);
    v72 = v28;
    sub_1C12C2D74(v33 + v37 * v28, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v38 = (uint64_t)v16 + *(int *)(v8 + 48);
    *v16 = v35;
    v16[1] = v36;
    sub_1C12C2D74((uint64_t)v20, v38, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v39 = v8;
    v40 = *(int *)(v8 + 48);
    v41 = v69;
    v42 = (uint64_t)v69 + v40;
    *v69 = v35;
    v41[1] = v36;
    sub_1C12C2D74(v38, (uint64_t)v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v43 = *(_QWORD *)(v42 + 48);
    v44 = *(_QWORD *)(v42 + 56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C12CA2FC(v42);
    if (v43 == v70 && v44 == v71)
      v46 = 1;
    else
      v46 = sub_1C1308A98();
    v8 = v39;
    swift_bridgeObjectRelease();
    v47 = *(int *)(v39 + 48);
    v48 = v74;
    v49 = (uint64_t)v74 + v47;
    *v74 = v35;
    v48[1] = v36;
    sub_1C12C2D74(v38, (uint64_t)v48 + v47, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    if ((v46 & 1) != 0)
    {
      v50 = *(int *)(v39 + 48);
      v51 = v61;
      v52 = (uint64_t)v61 + v50;
      *v61 = v35;
      v51[1] = v36;
      sub_1C12C2D74(v49, (uint64_t)v51 + v50, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      v53 = *(_QWORD *)(v52 + 32);
      v54 = *(_QWORD *)(v52 + 40);
      swift_bridgeObjectRetain();
      sub_1C12CA2FC(v52);
      if (v53 == v65 && v54 == v62)
      {
        swift_bridgeObjectRelease();
        sub_1C12CA4C8((uint64_t)v74, &qword_1ED78F570);
        v16 = v67;
        sub_1C12CA4C8((uint64_t)v67, &qword_1ED78F570);
        v20 = v66;
        sub_1C12CA2FC((uint64_t)v66);
        result = swift_bridgeObjectRelease();
        v8 = v39;
        v21 = v76;
        v27 = v75;
LABEL_33:
        *(unint64_t *)((char *)v59 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
        if (__OFADD__(v60++, 1))
        {
          __break(1u);
          return sub_1C12E1EA0(v59, v58, v60, v73);
        }
      }
      else
      {
        v55 = sub_1C1308A98();
        swift_bridgeObjectRelease();
        sub_1C12CA4C8((uint64_t)v74, &qword_1ED78F570);
        v16 = v67;
        sub_1C12CA4C8((uint64_t)v67, &qword_1ED78F570);
        v20 = v66;
        sub_1C12CA2FC((uint64_t)v66);
        result = swift_bridgeObjectRelease();
        v8 = v39;
        v21 = v76;
        v27 = v75;
        if ((v55 & 1) != 0)
          goto LABEL_33;
      }
    }
    else
    {
      sub_1C12CA4C8((uint64_t)v48, &qword_1ED78F570);
      v16 = v67;
      sub_1C12CA4C8((uint64_t)v67, &qword_1ED78F570);
      v20 = v66;
      sub_1C12CA2FC((uint64_t)v66);
      result = swift_bridgeObjectRelease();
      v21 = v76;
      v27 = v75;
    }
  }
  v29 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v29 >= v64)
    return sub_1C12E1EA0(v59, v58, v60, v73);
  v30 = v63[v29];
  v31 = v21 + 1;
  if (v30)
    goto LABEL_20;
  v31 = v21 + 2;
  if (v21 + 2 >= v64)
    return sub_1C12E1EA0(v59, v58, v60, v73);
  v30 = v63[v31];
  if (v30)
    goto LABEL_20;
  v31 = v21 + 3;
  if (v21 + 3 >= v64)
    return sub_1C12E1EA0(v59, v58, v60, v73);
  v30 = v63[v31];
  if (v30)
  {
LABEL_20:
    v75 = (v30 - 1) & v30;
    v76 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
    goto LABEL_21;
  }
  v32 = v21 + 4;
  if (v21 + 4 >= v64)
    return sub_1C12E1EA0(v59, v58, v60, v73);
  v30 = v63[v32];
  if (v30)
  {
    v31 = v21 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v64)
      return sub_1C12E1EA0(v59, v58, v60, v73);
    v30 = v63[v31];
    ++v32;
    if (v30)
      goto LABEL_20;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C12C9AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11;
  unsigned int v12;
  unint64_t v13;
  size_t v14;
  uint64_t isStackAllocationSafe;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  uint64_t (*v21)(char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v21 = a6;
  v22 = *MEMORY[0x1E0C80C00];
  v11 = *(_BYTE *)(a1 + 32);
  v12 = v11 & 0x3F;
  v13 = (unint64_t)((1 << v11) + 63) >> 6;
  v14 = 8 * v13;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v20 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v20[1];
    v17 = v21((char *)v20 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16)
      swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (void *)swift_slowAlloc();
    bzero(v18, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v21((char *)v18, v13, a1, a2, a3, a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAA558](v18, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C12C9D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12C9D80(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  int64_t v49;

  v38 = a2;
  v46 = a4;
  v47 = a5;
  v39 = a1;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F570);
  v6 = MEMORY[0x1E0C80A78](v45);
  v44 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v38 - v8);
  v10 = type metadata accessor for PushToken();
  v43 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v48 = (_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 64);
  v40 = 0;
  v41 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v42 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v49 = v14;
    v21 = v20 | (v14 << 6);
LABEL_22:
    v26 = (uint64_t *)(v48[6] + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    sub_1C12C2D74(v48[7] + *(_QWORD *)(v43 + 72) * v21, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v29 = v45;
    v30 = (uint64_t)v9 + *(int *)(v45 + 48);
    *v9 = v28;
    v9[1] = v27;
    sub_1C12C2D74((uint64_t)v13, v30, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v31 = *(int *)(v29 + 48);
    v32 = v44;
    v33 = (uint64_t)v44 + v31;
    *v44 = v28;
    v32[1] = v27;
    sub_1C12C2D74(v30, (uint64_t)v32 + v31, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    v34 = *(_QWORD *)(v33 + 32);
    v35 = *(_QWORD *)(v33 + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C12CA2FC(v33);
    if (v34 == v46 && v35 == v47)
    {
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v9, &qword_1ED78F570);
      sub_1C12CA2FC((uint64_t)v13);
      result = swift_bridgeObjectRelease();
      v14 = v49;
LABEL_5:
      *(unint64_t *)((char *)v39 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      if (__OFADD__(v40++, 1))
        goto LABEL_31;
    }
    else
    {
      v37 = sub_1C1308A98();
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v9, &qword_1ED78F570);
      sub_1C12CA2FC((uint64_t)v13);
      result = swift_bridgeObjectRelease();
      v14 = v49;
      if ((v37 & 1) != 0)
        goto LABEL_5;
    }
  }
  v22 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v22 >= v42)
    return sub_1C12E1EA0(v39, v38, v40, v48);
  v23 = *(_QWORD *)(v41 + 8 * v22);
  v24 = v14 + 1;
  if (v23)
    goto LABEL_21;
  v24 = v14 + 2;
  if (v14 + 2 >= v42)
    return sub_1C12E1EA0(v39, v38, v40, v48);
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
    goto LABEL_21;
  v24 = v14 + 3;
  if (v14 + 3 >= v42)
    return sub_1C12E1EA0(v39, v38, v40, v48);
  v23 = *(_QWORD *)(v41 + 8 * v24);
  if (v23)
  {
LABEL_21:
    v18 = (v23 - 1) & v23;
    v49 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    goto LABEL_22;
  }
  v25 = v14 + 4;
  if (v14 + 4 >= v42)
    return sub_1C12E1EA0(v39, v38, v40, v48);
  v23 = *(_QWORD *)(v41 + 8 * v25);
  if (v23)
  {
    v24 = v14 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v42)
      return sub_1C12E1EA0(v39, v38, v40, v48);
    v23 = *(_QWORD *)(v41 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C12CA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  size_t v12;
  uint64_t isStackAllocationSafe;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = 8 * v11;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    v14 = a4((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v4)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v12);
    swift_bridgeObjectRetain();
    v14 = a4((char *)v15, v11, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAA558](v15, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

uint64_t sub_1C12CA2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12CA2FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PushToken();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PushTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for PushTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushTokenStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PushTokenStore.update(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PushTokenStore.remove(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PushTokenStore.remove(environmentName:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PushTokenStore.remove(subscriptionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PushTokenStore.remove(tokens:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PushTokenStore.remove(environmentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PushTokenStore.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PushTokenStore.tokens(environmentName:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PushTokenStore.tokens(environmentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PushTokenStore.token(subscriptionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1C12CA40C(a1, &qword_1EF6D7D10);
}

void type metadata accessor for CFBundle(uint64_t a1)
{
  sub_1C12CA40C(a1, (unint64_t *)&unk_1EF6D7D18);
}

void sub_1C12CA40C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1C12CA450()
{
  return swift_release();
}

uint64_t sub_1C12CA458(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C12CA494(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1C12CA4C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12CA504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of BudgetEnforcementPolicy.priority(for:applying:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of BudgetStoring.budgetsBySubscriptionID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BudgetStoring.budget(subscriptionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of BudgetStoring.update(budget:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BudgetStoring.remove(subscriptionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of BudgetLevelProviding.budgetLevel(topic:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

BOOL static PushEvent.Priority.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PushEvent.Priority.hash(into:)()
{
  return sub_1C1308AF8();
}

uint64_t PushEvent.Priority.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

BOOL sub_1C12CA604(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C12CA61C()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

uint64_t sub_1C12CA660()
{
  return sub_1C1308AF8();
}

uint64_t sub_1C12CA688()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

uint64_t PushEvent.EventType.ActivityStartParameters.attributesType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushEvent.EventType.ActivityStartParameters.attributesType.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PushEvent.EventType.ActivityStartParameters.attributesType.modify())()
{
  return nullsub_1;
}

uint64_t PushEvent.EventType.ActivityStartParameters.attributesData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C12C2F04(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t PushEvent.EventType.ActivityStartParameters.attributesData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C12C2998(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PushEvent.EventType.ActivityStartParameters.attributesData.modify())()
{
  return nullsub_1;
}

uint64_t PushEvent.EventType.ActivityStartParameters.contentSourceRequests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PushEvent.EventType.ActivityStartParameters.contentSourceRequests.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PushEvent.EventType.ActivityStartParameters.contentSourceRequests.modify())()
{
  return nullsub_1;
}

uint64_t PushEvent.EventType.ActivityStartParameters.init(attributesType:attributesData:contentSourceRequests:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t PushEvent.subscriptionIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushEvent.activityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushEvent.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PushEvent(0) + 28);
  v4 = sub_1C1308468();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PushEvent(uint64_t a1)
{
  return sub_1C12CA948(a1, qword_1ED78F998);
}

uint64_t PushEvent.eventType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushEvent(0) + 32);
  return sub_1C12CA8F0(v3, a1);
}

uint64_t sub_1C12CA8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushEvent.EventType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PushEvent.EventType(uint64_t a1)
{
  return sub_1C12CA948(a1, (uint64_t *)&unk_1ED78F918);
}

uint64_t sub_1C12CA948(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PushEvent.contentSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PushEvent(0) + 36);
  v4 = sub_1C1308588();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PushEvent.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushEvent(0) + 40);
  return sub_1C12CA9F4(v3, a1);
}

uint64_t sub_1C12CA9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PushEvent.priority.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PushEvent(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t PushEvent.description.getter()
{
  sub_1C13089F0();
  sub_1C130884C();
  type metadata accessor for PushEvent(0);
  sub_1C1308468();
  sub_1C12CABC4();
  sub_1C1308A80();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  type metadata accessor for PushEvent.EventType(0);
  sub_1C1308A2C();
  return 0;
}

unint64_t sub_1C12CABC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED78ED40;
  if (!qword_1ED78ED40)
  {
    v1 = sub_1C1308468();
    result = MEMORY[0x1C3BAA4B0](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED78ED40);
  }
  return result;
}

uint64_t PushEvent.init(subscriptionIdentifier:activityIdentifier:topic:timestamp:eventType:contentSource:payload:priority:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char *a11)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  int *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;

  v15 = *a5;
  v16 = a5[1];
  v17 = *a11;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = v15;
  a9[5] = v16;
  v18 = (int *)type metadata accessor for PushEvent(0);
  v19 = (char *)a9 + v18[7];
  v20 = sub_1C1308468();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a6, v20);
  sub_1C12CACE8(a7, (uint64_t)a9 + v18[8]);
  v21 = (char *)a9 + v18[9];
  v22 = sub_1C1308588();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a8, v22);
  result = sub_1C12CAD2C(a10, (uint64_t)a9 + v18[10]);
  *((_BYTE *)a9 + v18[11]) = v17;
  return result;
}

uint64_t sub_1C12CACE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushEvent.EventType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12CAD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C12CAD78()
{
  unint64_t result;

  result = qword_1EF6D7DD8;
  if (!qword_1EF6D7DD8)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushEvent.Priority, &type metadata for PushEvent.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF6D7DD8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = sub_1C1308468();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = a3[8];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = type metadata accessor for PushEvent.EventType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v22 = v17[1];
      *v16 = *v17;
      v16[1] = v22;
      v23 = v17[2];
      v24 = v17[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v23, v24);
      v16[2] = v23;
      v16[3] = v24;
      v16[4] = v17[4];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = sub_1C13085A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
    v25 = a3[9];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_1C1308588();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    v29 = a3[10];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_1C1308558();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  }
  return v4;
}

uint64_t destroy for PushEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  type metadata accessor for PushEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v8 = sub_1C13085A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  v9 = a1 + a2[9];
  v10 = sub_1C1308588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[10];
  v12 = sub_1C1308558();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

_QWORD *initializeWithCopy for PushEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = sub_1C1308468();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = type metadata accessor for PushEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v20 = v16[1];
    *v15 = *v16;
    v15[1] = v20;
    v21 = v16[2];
    v22 = v16[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v21, v22);
    v15[2] = v21;
    v15[3] = v22;
    v15[4] = v16[4];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v19 = sub_1C13085A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
    swift_storeEnumTagMultiPayload();
  }
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1C1308588();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  v27 = a3[10];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_1C1308558();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_QWORD *assignWithCopy for PushEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1308468();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = a3[8];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_1C12CB5FC((uint64_t)a1 + v10);
    v13 = type metadata accessor for PushEvent.EventType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v11 = *v12;
      v11[1] = v12[1];
      v16 = v12[2];
      v17 = v12[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v16, v17);
      v11[2] = v16;
      v11[3] = v17;
      v11[4] = v12[4];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = sub_1C13085A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v12, v15);
      swift_storeEnumTagMultiPayload();
    }
  }
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1C1308588();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1C1308558();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1C12CB5FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PushEvent.EventType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for PushEvent(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1308468();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for PushEvent.EventType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1C13085A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  v16 = a3[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1C1308588();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v20 = a3[10];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_1C1308558();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

_QWORD *assignWithTake for PushEvent(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1C1308468();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  if (a1 != a2)
  {
    v13 = a3[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_1C12CB5FC((uint64_t)a1 + v13);
    v16 = type metadata accessor for PushEvent.EventType(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v17 = sub_1C13085A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1C1308588();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1C1308558();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_10;
  }
  if (v29)
  {
LABEL_10:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_11:
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12CBA10(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C1308468();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = type metadata accessor for PushEvent.EventType(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v13 = sub_1C1308588();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[9];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PushEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12CBB08(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C1308468();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = type metadata accessor for PushEvent.EventType(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v13 = sub_1C1308588();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[9];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C12CBBF0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1C1308468();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PushEvent.EventType(319);
    if (v1 <= 0x3F)
    {
      sub_1C1308588();
      if (v2 <= 0x3F)
      {
        sub_1C12CBCC4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1C12CBCC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED78EDA8)
  {
    sub_1C1308558();
    v0 = sub_1C1308954();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED78EDA8);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PushEvent.Priority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PushEvent.Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C12CBE04 + 4 * byte_1C1309265[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C12CBE38 + 4 * asc_1C1309260[v4]))();
}

uint64_t sub_1C12CBE38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12CBE40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12CBE48);
  return result;
}

uint64_t sub_1C12CBE54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12CBE5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C12CBE60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12CBE68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12CBE74(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1C12CBE7C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PushEvent.Priority()
{
  return &type metadata for PushEvent.Priority;
}

uint64_t *initializeBufferWithCopyOfBuffer for PushEvent.EventType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[2];
      v12 = a2[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v11, v12);
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1C13085A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for PushEvent.EventType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_1C13085A0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for PushEvent.EventType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[2];
    v10 = a2[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C13085A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for PushEvent.EventType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (a1 != a2)
  {
    sub_1C12CB5FC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v8 = a2[2];
      v9 = a2[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v8, v9);
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1C13085A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for PushEvent.EventType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1C13085A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for PushEvent.EventType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1C12CB5FC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1C13085A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PushEvent.EventType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PushEvent.EventType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1C12CC30C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C12CC31C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C13085A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PushEvent.EventType.ActivityStartParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for PushEvent.EventType.ActivityStartParameters(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C12C2998(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PushEvent.EventType.ActivityStartParameters(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C12C2F04(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PushEvent.EventType.ActivityStartParameters(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_1C12C2F04(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1C12C2998(v6, v7);
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for PushEvent.EventType.ActivityStartParameters(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C12C2998(v5, v6);
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushEvent.EventType.ActivityStartParameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushEvent.EventType.ActivityStartParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushEvent.EventType.ActivityStartParameters()
{
  return &type metadata for PushEvent.EventType.ActivityStartParameters;
}

uint64_t static Topic.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C1308A98();
}

uint64_t Topic.unsuffixed.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Topic.suffixed.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C130884C();
  return v2;
}

SessionPushNotifications::Topic __swiftcall Topic.init(suffixed:)(Swift::String suffixed)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  SessionPushNotifications::Topic result;

  v2 = v1;
  v3 = sub_1C130887C();
  if ((v3 & 1) != 0)
  {
    v5 = sub_1C1308810();
    v6 = sub_1C12CC884(v5);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1C3BA9DB4](v6, v8, v10, v12);
    v15 = v14;
    v3 = swift_bridgeObjectRelease();
    *v2 = v13;
    v2[1] = v15;
  }
  else
  {
    __break(1u);
  }
  result.unsuffixed._object = v4;
  result.unsuffixed._countAndFlagsBits = v3;
  return result;
}

uint64_t Topic.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C1308804();
  return swift_bridgeObjectRelease();
}

uint64_t Topic.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308804();
  return sub_1C1308B1C();
}

uint64_t sub_1C12CC7C0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C1308A98();
}

uint64_t sub_1C12CC7F0()
{
  sub_1C1308AEC();
  sub_1C1308804();
  return sub_1C1308B1C();
}

uint64_t sub_1C12CC838()
{
  return sub_1C1308804();
}

uint64_t sub_1C12CC840()
{
  sub_1C1308AEC();
  sub_1C1308804();
  return sub_1C1308B1C();
}

uint64_t sub_1C12CC884(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C1308834();
    return sub_1C1308894();
  }
  return result;
}

unint64_t sub_1C12CC910()
{
  unint64_t result;

  result = qword_1ED78FD08;
  if (!qword_1ED78FD08)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for Topic, &type metadata for Topic);
    atomic_store(result, (unint64_t *)&qword_1ED78FD08);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Topic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Topic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for Topic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Topic(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Topic(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t dispatch thunk of PushPriorityChangePublishing.pushPriorityChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1C12CCA8C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1C12CCAE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1C12C7A90(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1C1308354();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1C130836C();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1C1308354();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1C130836C();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5E0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C13094E0;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1C13087E0();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C12C7A90(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1C12CCDFCLL);
  }
  return v2;
}

uint64_t PublicToken.environmentName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PublicToken.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1C12C2F04(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t PublicToken.init(environmentName:token:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

unint64_t PublicToken.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_1C12C2F04(v2, v1);
  sub_1C12CCA8C(v2, v1);
  sub_1C12C2998(v2, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F588);
  sub_1C12CCFD0();
  sub_1C13087A4();
  swift_bridgeObjectRelease();
  sub_1C13089F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

unint64_t sub_1C12CCFD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED78F590;
  if (!qword_1ED78F590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED78F588);
    result = MEMORY[0x1C3BAA4B0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED78F590);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BAA4A4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t destroy for PublicToken(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C12C2998(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for PublicToken(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C12C2F04(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for PublicToken(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_1C12C2F04(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1C12C2998(v6, v7);
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for PublicToken(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C12C2998(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PublicToken(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublicToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PublicToken()
{
  return &type metadata for PublicToken;
}

uint64_t sub_1C12CD224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
    sub_1C12C3018(&qword_1ED78F560, &qword_1ED78F568, MEMORY[0x1E0C95F48]);
    v1 = sub_1C13086F0();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C12CD2C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_1C12CD2D8(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1C12CD224();
  return sub_1C12CD30C;
}

uint64_t sub_1C12CD30C(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 16) = *a1;
  return swift_release();
}

uint64_t BudgetLevelResolver.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  BudgetLevelResolver.init()();
  return v0;
}

_QWORD *BudgetLevelResolver.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[5];
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v1 = sub_1C1308924();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v15 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C130890C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v6);
  v14 = v0;
  v0[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
  swift_allocObject();
  v0[3] = sub_1C13086D8();
  v13[4] = sub_1C12CD600();
  sub_1C1308720();
  v16 = MEMORY[0x1E0DEE9D8];
  v13[2] = sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v5, MEMORY[0x1E0DEF828]);
  v13[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  v13[3] = sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  v7 = *MEMORY[0x1E0DEF8D0];
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v9 = v15;
  v8(v15, v7, v1);
  v10 = sub_1C1308948();
  v11 = v14;
  v14[4] = v10;
  sub_1C1308720();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1C1308984();
  v8(v9, v7, v1);
  v11[5] = sub_1C1308948();
  v11[6] = MEMORY[0x1E0DEE9D8];
  v11[7] = MEMORY[0x1E0DEE9E8];
  return v11;
}

unint64_t sub_1C12CD600()
{
  unint64_t result;

  result = qword_1ED78FE30;
  if (!qword_1ED78FE30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED78FE30);
  }
  return result;
}

uint64_t sub_1C12CD63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD aBlock[6];
  __int128 v9[2];

  v2 = v1;
  v3 = *(NSObject **)(v1 + 32);
  sub_1C12C3158(a1, (uint64_t)v9);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  sub_1C12CDAEC(v9, v4 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1C12CDB04;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1C12CDDA4;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12CDDC4;
  aBlock[3] = &block_descriptor;
  v6 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C12CD778(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v24[3];
  __int128 v25[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F500);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12C3158((uint64_t)a2, (uint64_t)v25);
  v11 = (_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD **)(a1 + 48);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a1 + 48) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v12 = sub_1C12EFF50(0, v12[2] + 1, 1, v12);
    *v11 = v12;
  }
  v15 = v12[2];
  v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    v12 = sub_1C12EFF50((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    *v11 = v12;
  }
  v12[2] = v15 + 1;
  sub_1C12CDAEC(v25, (uint64_t)&v12[5 * v15 + 4]);
  swift_endAccess();
  v16 = a2[3];
  v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  *(_QWORD *)&v25[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v17 + 8) + 8))(v16);
  v24[0] = *(id *)(a1 + 32);
  v18 = v24[0];
  v19 = sub_1C1308918();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
  v20 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F528);
  sub_1C12CD600();
  sub_1C12C3018(&qword_1ED78F520, &qword_1ED78F528, MEMORY[0x1E0C95D90]);
  sub_1C12CE1CC((unint64_t *)&unk_1ED78FE20, (uint64_t (*)(uint64_t))sub_1C12CD600, MEMORY[0x1E0DEF7F8]);
  sub_1C13086FC();
  sub_1C12CE12C((uint64_t)v6);

  swift_release();
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_1C12CE190;
  *(_QWORD *)(v22 + 24) = v21;
  sub_1C12C3018(&qword_1ED78F4F8, &qword_1ED78F500, MEMORY[0x1E0C95CB8]);
  sub_1C1308708();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_1C13086C0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C12CDAA0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1C12CDAEC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C12CDB04()
{
  uint64_t v0;

  return sub_1C12CD778(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1C12CDB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  const void *v10;
  _QWORD v11[3];
  _QWORD aBlock[6];

  v0 = sub_1C1308714();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C130872C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11[1] = *(_QWORD *)(result + 40);
    aBlock[4] = sub_1C12CE1C4;
    aBlock[5] = result;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C12E8494;
    aBlock[3] = &block_descriptor_13;
    v9 = _Block_copy(aBlock);
    v11[0] = v1;
    v10 = v9;
    swift_retain();
    sub_1C1308720();
    v11[2] = MEMORY[0x1E0DEE9D8];
    sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
    sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
    sub_1C1308984();
    MEMORY[0x1C3BA9EF8](0, v7, v3, v10);
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v11[0] + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C12CDD18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
  sub_1C12C3018(&qword_1ED78F558, &qword_1ED78F568, MEMORY[0x1E0C95F40]);
  return sub_1C13086E4();
}

uint64_t sub_1C12CDD74(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C12CDD94()
{
  return swift_deallocObject();
}

uint64_t sub_1C12CDDA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C12CDDC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t BudgetLevelResolver.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BudgetLevelResolver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

SessionPushNotifications::Budget::Level __swiftcall BudgetLevelResolver.resolveBudgetLevel(topic:)(SessionPushNotifications::Topic topic)
{
  return sub_1C1308930();
}

uint64_t sub_1C12CDEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 *v16;
  _QWORD v17[2];
  uint64_t v18;

  result = swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v16 = a4;
    v11 = (_QWORD *)(v9 + 32);
    swift_bridgeObjectRetain();
    v12 = 2;
    do
    {
      v13 = v11[3];
      v14 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v13);
      v17[0] = a2;
      v17[1] = a3;
      (*(void (**)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t))(v14 + 16))(&v18, v17, v13, v14);
      v15 = v12;
      if (v18 < v12)
        v15 = v18;
      if (v18 != 3)
        v12 = v15;
      v11 += 5;
      --v10;
    }
    while (v10);
    result = swift_bridgeObjectRelease();
    a4 = v16;
  }
  else
  {
    v12 = 2;
  }
  *a4 = v12;
  return result;
}

uint64_t sub_1C12CDFDC@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t *v1;

  return sub_1C12CDEE4(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1C12CDFF8()
{
  return sub_1C1308930();
}

uint64_t sub_1C12CE050()
{
  return sub_1C12CD224();
}

uint64_t sub_1C12CE070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12CD224();
  *a1 = result;
  return result;
}

uint64_t sub_1C12CE098(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for BudgetLevelResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for BudgetLevelResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BudgetLevelResolver.budgetLevelChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of BudgetLevelResolver.budgetLevelChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of BudgetLevelResolver.budgetLevelChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of BudgetLevelResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of BudgetLevelResolver.add(provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1C12CE12C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12CE16C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12CE190()
{
  return sub_1C12CDB10();
}

uint64_t sub_1C12CE198()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12CE1BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C12D460C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C12CE1C4()
{
  return sub_1C12CDD18();
}

uint64_t sub_1C12CE1CC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3BAA4B0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C12CE214@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_1C12CDFDC(a1);
}

BOOL static ChannelSubscriptionFailure.Reason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ChannelSubscriptionFailure.Reason.hash(into:)()
{
  return sub_1C1308AF8();
}

uint64_t ChannelSubscriptionFailure.Reason.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

BOOL sub_1C12CE2A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppTokenInfo.init(topic:identifier:expirationDate:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a1[1];
  *a5 = *a1;
  a5[1] = v6;
  a5[2] = a2;
  a5[3] = a3;
  v7 = (uint64_t)a5 + *(int *)(type metadata accessor for AppTokenInfo(0) + 24);
  return sub_1C12CE310(a4, v7);
}

uint64_t type metadata accessor for AppTokenInfo(uint64_t a1)
{
  return sub_1C12CA948(a1, qword_1ED78FAF0);
}

uint64_t sub_1C12CE310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t IncomingMessage.EventType.StartParameters.init(attributesType:attributesData:inputs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1C12CE374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  _BYTE *i;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a2 + 48);
  for (i = (_BYTE *)(a1 + 48); ; i += 24)
  {
    v9 = *((_QWORD *)i - 2);
    v8 = *((_QWORD *)i - 1);
    v10 = *i;
    v12 = *((_QWORD *)v3 - 2);
    v11 = *((_QWORD *)v3 - 1);
    v13 = *v3;
    if (*i)
    {
      if (v10 != 1)
      {
        if (v13 != 2 || (v11 | v12) != 0)
        {
          v22 = *((_QWORD *)v3 - 2);
          v23 = *((_QWORD *)v3 - 1);
          v24 = *v3;
          goto LABEL_34;
        }
        sub_1C12D1848(*((_QWORD *)i - 2), *((_QWORD *)i - 1), 2u);
        v5 = 0;
        v6 = 0;
        v7 = 2;
        goto LABEL_6;
      }
      if (v13 != 1)
      {
        sub_1C12D1820(*((_QWORD *)v3 - 2), *((_QWORD *)v3 - 1), *v3);
        v22 = v9;
        v23 = v8;
        v24 = 1;
        goto LABEL_34;
      }
      if (v9 == v12 && v8 == v11)
      {
        sub_1C12D1820(*((_QWORD *)i - 2), *((_QWORD *)i - 1), 1u);
        sub_1C12D1820(v9, v8, 1u);
        sub_1C12D1848(v9, v8, 1u);
        v5 = v9;
        v6 = v8;
        v7 = 1;
LABEL_6:
        sub_1C12D1848(v5, v6, v7);
        goto LABEL_7;
      }
      v15 = sub_1C1308A98();
      sub_1C12D1820(v12, v11, 1u);
      sub_1C12D1820(v9, v8, 1u);
      sub_1C12D1848(v9, v8, 1u);
      v16 = v12;
      v17 = v11;
      v18 = 1;
      goto LABEL_22;
    }
    if (*v3)
      break;
    if (v9 == v12 && v8 == v11)
    {
      sub_1C12D1820(*((_QWORD *)i - 2), *((_QWORD *)i - 1), 0);
      sub_1C12D1820(v9, v8, 0);
      sub_1C12D1848(v9, v8, 0);
      v5 = v9;
      v6 = v8;
      v7 = 0;
      goto LABEL_6;
    }
    v15 = sub_1C1308A98();
    sub_1C12D1820(v12, v11, 0);
    sub_1C12D1820(v9, v8, 0);
    sub_1C12D1848(v9, v8, 0);
    v16 = v12;
    v17 = v11;
    v18 = 0;
LABEL_22:
    sub_1C12D1848(v16, v17, v18);
    if ((v15 & 1) == 0)
      return 0;
LABEL_7:
    v3 += 24;
    if (!--v2)
      return 1;
  }
  sub_1C12D1820(*((_QWORD *)v3 - 2), *((_QWORD *)v3 - 1), *v3);
  v22 = v9;
  v23 = v8;
  v24 = 0;
LABEL_34:
  sub_1C12D1820(v22, v23, v24);
  sub_1C12D1848(v9, v8, v10);
  sub_1C12D1848(v12, v11, v13);
  return 0;
}

uint64_t IncomingMessage.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1C12CED3C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t IncomingMessage.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t IncomingMessage.channelID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void IncomingMessage.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 48);
}

uint64_t IncomingMessage.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IncomingMessage(0) + 32);
  v4 = sub_1C1308468();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IncomingMessage.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for IncomingMessage(0) + 36);
  v2 = *(_QWORD *)v1;
  sub_1C12C2F04(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t IncomingMessage.eventType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IncomingMessage(0) + 40);
  return sub_1C12CED64(v3, a1);
}

uint64_t IncomingMessage.alertConfiguration.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IncomingMessage(0) + 44));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v15 = v3[10];
  v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  return sub_1C12CEDBC(v4, v5, v6, v7, v8);
}

uint64_t IncomingMessage.staleDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IncomingMessage(0) + 48);
  return sub_1C12CA2B4(v3, a1);
}

uint64_t IncomingMessage.relevanceScore.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for IncomingMessage(0) + 52));
}

uint64_t IncomingMessage.init(token:topic:channelID:priority:eventType:timestamp:payload:alertConfiguration:staleDate:relevanceScore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, __int128 *a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v18 = *a3;
  v19 = a3[1];
  v20 = *a6;
  v33 = a12[1];
  v34 = *a12;
  v31 = a12[3];
  v32 = a12[2];
  v30 = a12[4];
  v22 = *((_QWORD *)a12 + 10);
  v21 = *((_QWORD *)a12 + 11);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v18;
  *(_QWORD *)(a9 + 24) = v19;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_BYTE *)(a9 + 48) = v20;
  v23 = (int *)type metadata accessor for IncomingMessage(0);
  sub_1C12CEE60(a7, a9 + v23[10]);
  v24 = a9 + v23[8];
  v25 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24, a8, v25);
  v26 = (_QWORD *)(a9 + v23[9]);
  *v26 = a10;
  v26[1] = a11;
  v27 = a9 + v23[11];
  *(_OWORD *)v27 = v34;
  *(_OWORD *)(v27 + 16) = v33;
  *(_OWORD *)(v27 + 32) = v32;
  *(_OWORD *)(v27 + 48) = v31;
  *(_OWORD *)(v27 + 64) = v30;
  *(_QWORD *)(v27 + 80) = v22;
  *(_QWORD *)(v27 + 88) = v21;
  result = sub_1C12CE310(a13, a9 + v23[12]);
  v29 = a9 + v23[13];
  *(_QWORD *)v29 = a14;
  *(_BYTE *)(v29 + 8) = a15 & 1;
  return result;
}

uint64_t IncomingMessage.description.getter()
{
  uint64_t v0;

  sub_1C13089F0();
  sub_1C130884C();
  sub_1C1308A2C();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F620);
  sub_1C13087EC();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C12CED3C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DE0);
  sub_1C13087EC();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  type metadata accessor for IncomingMessage(0);
  type metadata accessor for IncomingMessage.EventType(0);
  sub_1C1308A2C();
  return 0;
}

uint64_t _s24SessionPushNotifications15IncomingMessageV9EventTypeO15StartParametersV05InputG0O2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5)
          v9 = 1;
        else
          v9 = sub_1C1308A98();
        sub_1C12D1820(v6, v5, 1u);
        sub_1C12D1820(v3, v2, 1u);
        sub_1C12D1848(v3, v2, 1u);
        v12 = v6;
        v13 = v5;
        v14 = 1;
LABEL_25:
        sub_1C12D1848(v12, v13, v14);
        return v9 & 1;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_1C12D1848(*(_QWORD *)a1, v2, 2u);
      sub_1C12D1848(0, 0, 2u);
      v9 = 1;
      return v9 & 1;
    }
  }
  else if (!*(_BYTE *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5)
      v9 = 1;
    else
      v9 = sub_1C1308A98();
    sub_1C12D1820(v6, v5, 0);
    sub_1C12D1820(v3, v2, 0);
    sub_1C12D1848(v3, v2, 0);
    v12 = v6;
    v13 = v5;
    v14 = 0;
    goto LABEL_25;
  }
  sub_1C12D1820(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
  sub_1C12D1820(v3, v2, v4);
  sub_1C12D1848(v3, v2, v4);
  sub_1C12D1848(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

uint64_t _s24SessionPushNotifications15IncomingMessageV9EventTypeO15StartParametersV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[4];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_1C1308A98() & 1) != 0) && (sub_1C12F3950(v2, v4), (v7 & 1) != 0))
    return sub_1C12CE374(v3, v5);
  else
    return 0;
}

uint64_t sub_1C12CED3C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C12C2F04(a1, a2);
  return a1;
}

uint64_t type metadata accessor for IncomingMessage(uint64_t a1)
{
  return sub_1C12CA948(a1, qword_1EF6D7E48);
}

uint64_t sub_1C12CED64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IncomingMessage.EventType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for IncomingMessage.EventType(uint64_t a1)
{
  return sub_1C12CA948(a1, qword_1EF6D7F10);
}

uint64_t sub_1C12CEDBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 != 1)
  {
    sub_1C12CEE30(result, a2);
    sub_1C12CEE30(a4, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C12CEE30(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C12CEE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IncomingMessage.EventType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C12CEEA8()
{
  unint64_t result;

  result = qword_1EF6D7DE8;
  if (!qword_1EF6D7DE8)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for ChannelSubscriptionFailure.Reason, &type metadata for ChannelSubscriptionFailure.Reason);
    atomic_store(result, (unint64_t *)&qword_1EF6D7DE8);
  }
  return result;
}

uint64_t destroy for ChannelSubscriptionFailure()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ChannelSubscriptionFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelSubscriptionFailure(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ChannelSubscriptionFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelSubscriptionFailure(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelSubscriptionFailure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelSubscriptionFailure()
{
  return &type metadata for ChannelSubscriptionFailure;
}

uint64_t getEnumTagSinglePayload for ChannelSubscriptionFailure.Reason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelSubscriptionFailure.Reason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C12CF1A4 + 4 * byte_1C1309605[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C12CF1D8 + 4 * byte_1C1309600[v4]))();
}

uint64_t sub_1C12CF1D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12CF1E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12CF1E8);
  return result;
}

uint64_t sub_1C12CF1F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12CF1FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C12CF200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12CF208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1C12CF214(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ChannelSubscriptionFailure.Reason()
{
  return &type metadata for ChannelSubscriptionFailure.Reason;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppTokenInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C1308468();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for AppTokenInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1C1308468();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for AppTokenInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1308468();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithCopy for AppTokenInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1308468();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for AppTokenInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1C1308468();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for AppTokenInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C1308468();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppTokenInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12CF7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AppTokenInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12CF858(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1C12CF8D0()
{
  unint64_t v0;

  sub_1C12CF944();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1C12CF944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED78F6D8)
  {
    sub_1C1308468();
    v0 = sub_1C1308954();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED78F6D8);
  }
}

_OWORD *initializeBufferWithCopyOfBuffer for IncomingMessage(_OWORD *a1, uint64_t a2, int *a3)
{
  _OWORD *v4;
  int v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v54;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    *a1 = *(_OWORD *)a2;
  }
  else
  {
    v9 = *(_QWORD *)a2;
    sub_1C12C2F04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
    *(_QWORD *)v4 = v9;
    *((_QWORD *)v4 + 1) = v7;
  }
  v10 = *(_QWORD *)(a2 + 24);
  *((_QWORD *)v4 + 2) = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v4 + 3) = v10;
  v11 = *(_QWORD *)(a2 + 40);
  *((_QWORD *)v4 + 4) = *(_QWORD *)(a2 + 32);
  *((_QWORD *)v4 + 5) = v11;
  v12 = a3[8];
  v13 = (char *)v4 + v12;
  v14 = a2 + v12;
  *((_BYTE *)v4 + 48) = *(_BYTE *)(a2 + 48);
  v15 = sub_1C1308468();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v13, v14, v15);
  v18 = a3[9];
  v19 = (uint64_t *)((char *)v4 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  v22 = v20[1];
  sub_1C12C2F04(*v20, v22);
  *v19 = v21;
  v19[1] = v22;
  v23 = a3[10];
  v24 = (_QWORD *)((char *)v4 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = type metadata accessor for IncomingMessage.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v29 = v25[1];
    *v24 = *v25;
    v24[1] = v29;
    v54 = v15;
    v30 = v16;
    v31 = v17;
    v32 = v25[2];
    v33 = v25[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v32, v33);
    v24[2] = v32;
    v24[3] = v33;
    v17 = v31;
    v16 = v30;
    v15 = v54;
    v24[4] = v25[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      goto LABEL_14;
    }
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v25, 1, v15))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v17((char *)v24, (uint64_t)v25, v15);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  v34 = a3[11];
  v35 = (char *)v4 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)(a2 + v34 + 8);
  if (!v37)
  {
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_QWORD *)v35 + 2) = *(_QWORD *)(v36 + 16);
    v41 = *(_QWORD *)(v36 + 32);
    if (!v41)
    {
LABEL_20:
      *(_OWORD *)(v35 + 24) = *(_OWORD *)(v36 + 24);
      *((_QWORD *)v35 + 5) = *(_QWORD *)(v36 + 40);
      goto LABEL_21;
    }
LABEL_18:
    *((_QWORD *)v35 + 3) = *(_QWORD *)(v36 + 24);
    *((_QWORD *)v35 + 4) = v41;
    *((_QWORD *)v35 + 5) = *(_QWORD *)(v36 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_21:
    v42 = *(_QWORD *)(v36 + 56);
    *((_QWORD *)v35 + 6) = *(_QWORD *)(v36 + 48);
    *((_QWORD *)v35 + 7) = v42;
    v43 = *(_QWORD *)(v36 + 72);
    *((_QWORD *)v35 + 8) = *(_QWORD *)(v36 + 64);
    *((_QWORD *)v35 + 9) = v43;
    v44 = *(_QWORD *)(v36 + 80);
    v45 = *(_QWORD *)(v36 + 88);
    *((_QWORD *)v35 + 10) = v44;
    *((_QWORD *)v35 + 11) = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  if (v37 != 1)
  {
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    *((_QWORD *)v35 + 2) = *(_QWORD *)(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = *(_QWORD *)(v36 + 32);
    if (!v41)
      goto LABEL_20;
    goto LABEL_18;
  }
  v38 = *(_OWORD *)(v36 + 48);
  *((_OWORD *)v35 + 2) = *(_OWORD *)(v36 + 32);
  *((_OWORD *)v35 + 3) = v38;
  v39 = *(_OWORD *)(v36 + 80);
  *((_OWORD *)v35 + 4) = *(_OWORD *)(v36 + 64);
  *((_OWORD *)v35 + 5) = v39;
  v40 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v40;
LABEL_22:
  v46 = a3[12];
  v47 = (char *)v4 + v46;
  v48 = (const void *)(a2 + v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a2 + v46, 1, v15))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v17(v47, (uint64_t)v48, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v47, 0, 1, v15);
  }
  v50 = a3[13];
  v51 = (char *)v4 + v50;
  v52 = a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = *(_BYTE *)(v52 + 8);
  return v4;
}

uint64_t destroy for IncomingMessage(uint64_t *a1, int *a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void (*v14)(char *, uint64_t);

  v4 = a1[1];
  if (v4 >> 60 != 15)
    sub_1C12C2998(*a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (char *)a1 + a2[8];
  v6 = sub_1C1308468();
  v7 = *(_QWORD *)(v6 - 8);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v5, v6);
  sub_1C12C2998(*(uint64_t *)((char *)a1 + a2[9]), *(uint64_t *)((char *)a1 + a2[9] + 8));
  v8 = (char *)a1 + a2[10];
  type metadata accessor for IncomingMessage.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*((_QWORD *)v8 + 2), *((_QWORD *)v8 + 3));
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload && !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
  {
    v14(v8, v6);
  }
  v10 = (char *)a1 + a2[11];
  v11 = *((_QWORD *)v10 + 1);
  if (v11)
  {
    if (v11 == 1)
      goto LABEL_14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*((_QWORD *)v10 + 4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_14:
  v12 = (char *)a1 + a2[12];
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  if (!(_DWORD)result)
    return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
  return result;
}

uint64_t initializeWithCopy for IncomingMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;

  v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v7 = *a2;
    sub_1C12C2F04(*a2, a2[1]);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v6;
  }
  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v8;
  v9 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v13 = sub_1C1308468();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v11, v12, v13);
  v16 = a3[9];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  sub_1C12C2F04(*v18, v20);
  *v17 = v19;
  v17[1] = v20;
  v21 = a3[10];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = type metadata accessor for IncomingMessage.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v27 = v23[1];
    *v22 = *v23;
    v22[1] = v27;
    v52 = v13;
    v28 = v14;
    v29 = v15;
    v30 = v23[2];
    v31 = v23[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v30, v31);
    v22[2] = v30;
    v22[3] = v31;
    v15 = v29;
    v14 = v28;
    v13 = v52;
    v22[4] = v23[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_12;
    }
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v23, 1, v13))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v22, (uint64_t)v23, v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = (uint64_t)a2 + v32;
  v35 = *(uint64_t *)((char *)a2 + v32 + 8);
  if (v35)
  {
    if (v35 == 1)
    {
      v36 = *(_OWORD *)(v34 + 48);
      *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
      *(_OWORD *)(v33 + 48) = v36;
      v37 = *(_OWORD *)(v34 + 80);
      *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
      *(_OWORD *)(v33 + 80) = v37;
      v38 = *(_OWORD *)(v34 + 16);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *(_OWORD *)(v33 + 16) = v38;
      goto LABEL_20;
    }
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *(_QWORD *)(v33 + 8) = v35;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = *(_QWORD *)(v34 + 32);
    if (!v39)
      goto LABEL_18;
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
    *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
    v39 = *(_QWORD *)(v34 + 32);
    if (!v39)
    {
LABEL_18:
      *(_OWORD *)(v33 + 24) = *(_OWORD *)(v34 + 24);
      *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
      goto LABEL_19;
    }
  }
  *(_QWORD *)(v33 + 24) = *(_QWORD *)(v34 + 24);
  *(_QWORD *)(v33 + 32) = v39;
  *(_QWORD *)(v33 + 40) = *(_QWORD *)(v34 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_19:
  v40 = *(_QWORD *)(v34 + 56);
  *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
  *(_QWORD *)(v33 + 56) = v40;
  v41 = *(_QWORD *)(v34 + 72);
  *(_QWORD *)(v33 + 64) = *(_QWORD *)(v34 + 64);
  *(_QWORD *)(v33 + 72) = v41;
  v42 = *(_QWORD *)(v34 + 80);
  v43 = *(_QWORD *)(v34 + 88);
  *(_QWORD *)(v33 + 80) = v42;
  *(_QWORD *)(v33 + 88) = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_20:
  v44 = a3[12];
  v45 = (void *)(a1 + v44);
  v46 = (char *)a2 + v44;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v44, 1, v13))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v45, (uint64_t)v46, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v45, 0, 1, v13);
  }
  v48 = a3[13];
  v49 = a1 + v48;
  v50 = (uint64_t)a2 + v48;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  return a1;
}

uint64_t assignWithCopy for IncomingMessage(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  int *v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      v7 = *(_QWORD *)a2;
      sub_1C12C2F04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)a1 = v7;
      *(_QWORD *)(a1 + 8) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1C12D087C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v8 = *(_QWORD *)a2;
  sub_1C12C2F04(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v6;
  sub_1C12C2998(v9, v10);
LABEL_8:
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C1308468();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24);
  v16(v12, v13, v14);
  v17 = a3[9];
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  v21 = v19[1];
  sub_1C12C2F04(*v19, v21);
  v22 = *v18;
  v23 = v18[1];
  *v18 = v20;
  v18[1] = v21;
  sub_1C12C2998(v22, v23);
  if (a1 == a2)
    goto LABEL_17;
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  sub_1C12D08B0(a1 + v24);
  v27 = type metadata accessor for IncomingMessage.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *v25 = *v26;
    v25[1] = v26[1];
    v68 = a3;
    v30 = v15;
    v31 = v16;
    v32 = v26[2];
    v33 = v26[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v32, v33);
    v25[2] = v32;
    v25[3] = v33;
    v16 = v31;
    v15 = v30;
    a3 = v68;
    v25[4] = v26[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      goto LABEL_17;
    }
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v26, 1, v14))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v25, v26, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v14);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  v34 = a3[11];
  v35 = a1 + v34;
  v36 = (__int128 *)(a2 + v34);
  v37 = *(_QWORD *)(a1 + v34 + 8);
  v38 = *(_QWORD *)(a2 + v34 + 8);
  if (v37 == 1)
  {
    if (v38 == 1)
    {
      v39 = v36[1];
      *(_OWORD *)v35 = *v36;
      *(_OWORD *)(v35 + 16) = v39;
      v40 = v36[2];
      v41 = v36[3];
      v42 = v36[5];
      *(_OWORD *)(v35 + 64) = v36[4];
      *(_OWORD *)(v35 + 80) = v42;
      *(_OWORD *)(v35 + 32) = v40;
      *(_OWORD *)(v35 + 48) = v41;
      goto LABEL_43;
    }
    if (v38)
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((_QWORD *)v36 + 4))
      {
LABEL_24:
        *(_QWORD *)(v35 + 24) = *((_QWORD *)v36 + 3);
        *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
        *(_QWORD *)(v35 + 40) = *((_QWORD *)v36 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_30:
        *(_QWORD *)(v35 + 48) = *((_QWORD *)v36 + 6);
        *(_QWORD *)(v35 + 56) = *((_QWORD *)v36 + 7);
        *(_QWORD *)(v35 + 64) = *((_QWORD *)v36 + 8);
        *(_QWORD *)(v35 + 72) = *((_QWORD *)v36 + 9);
        *(_QWORD *)(v35 + 80) = *((_QWORD *)v36 + 10);
        *(_QWORD *)(v35 + 88) = *((_QWORD *)v36 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      }
    }
    else
    {
      v47 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v47;
      if (*((_QWORD *)v36 + 4))
        goto LABEL_24;
    }
    v48 = *(__int128 *)((char *)v36 + 24);
    *(_QWORD *)(v35 + 40) = *((_QWORD *)v36 + 5);
    *(_OWORD *)(v35 + 24) = v48;
    goto LABEL_30;
  }
  if (v38 == 1)
  {
    sub_1C12D091C(v35);
    v43 = v36[1];
    *(_OWORD *)v35 = *v36;
    *(_OWORD *)(v35 + 16) = v43;
    v44 = v36[5];
    v46 = v36[2];
    v45 = v36[3];
    *(_OWORD *)(v35 + 64) = v36[4];
    *(_OWORD *)(v35 + 80) = v44;
    *(_OWORD *)(v35 + 32) = v46;
    *(_OWORD *)(v35 + 48) = v45;
  }
  else
  {
    v69 = v16;
    if (v37)
    {
      if (v38)
      {
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C12D08EC(v35);
        v49 = *((_QWORD *)v36 + 2);
        *(_OWORD *)v35 = *v36;
        *(_QWORD *)(v35 + 16) = v49;
      }
    }
    else if (v38)
    {
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *(_QWORD *)(v35 + 8) = *((_QWORD *)v36 + 1);
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v50 = *v36;
      *(_QWORD *)(v35 + 16) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = v50;
    }
    v51 = (_OWORD *)(v35 + 24);
    v52 = (__int128 *)((char *)v36 + 24);
    v53 = *((_QWORD *)v36 + 4);
    if (*(_QWORD *)(v35 + 32))
    {
      if (v53)
      {
        *(_QWORD *)(v35 + 24) = *((_QWORD *)v36 + 3);
        *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v35 + 40) = *((_QWORD *)v36 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C12D08EC(v35 + 24);
        v54 = *((_QWORD *)v36 + 5);
        *v51 = *v52;
        *(_QWORD *)(v35 + 40) = v54;
      }
    }
    else if (v53)
    {
      *(_QWORD *)(v35 + 24) = *((_QWORD *)v36 + 3);
      *(_QWORD *)(v35 + 32) = *((_QWORD *)v36 + 4);
      *(_QWORD *)(v35 + 40) = *((_QWORD *)v36 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v55 = *v52;
      *(_QWORD *)(v35 + 40) = *((_QWORD *)v36 + 5);
      *v51 = v55;
    }
    v16 = v69;
    *(_QWORD *)(v35 + 48) = *((_QWORD *)v36 + 6);
    *(_QWORD *)(v35 + 56) = *((_QWORD *)v36 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v35 + 64) = *((_QWORD *)v36 + 8);
    *(_QWORD *)(v35 + 72) = *((_QWORD *)v36 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v35 + 80) = *((_QWORD *)v36 + 10);
    *(_QWORD *)(v35 + 88) = *((_QWORD *)v36 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_43:
  v56 = a3[12];
  v57 = (void *)(a1 + v56);
  v58 = (const void *)(a2 + v56);
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v60 = v59(a1 + v56, 1, v14);
  v61 = v59((uint64_t)v58, 1, v14);
  if (!v60)
  {
    if (!v61)
    {
      v16((uint64_t)v57, (uint64_t)v58, v14);
      goto LABEL_49;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v57, v14);
    goto LABEL_48;
  }
  if (v61)
  {
LABEL_48:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v57, v58, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v57, 0, 1, v14);
LABEL_49:
  v63 = a3[13];
  v64 = a1 + v63;
  v65 = (uint64_t *)(a2 + v63);
  v66 = *v65;
  *(_BYTE *)(v64 + 8) = *((_BYTE *)v65 + 8);
  *(_QWORD *)v64 = v66;
  return a1;
}

uint64_t sub_1C12D087C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t sub_1C12D08B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IncomingMessage.EventType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12D08EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12D091C(uint64_t a1)
{
  destroy for IncomingMessage.AlertConfiguration(a1);
  return a1;
}

uint64_t initializeWithTake for IncomingMessage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1C1308468();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for IncomingMessage.EventType(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  v18 = a3[11];
  v19 = a3[12];
  v20 = (_OWORD *)(a1 + v18);
  v21 = (_OWORD *)(a2 + v18);
  v22 = v21[3];
  v20[2] = v21[2];
  v20[3] = v22;
  v23 = v21[5];
  v20[4] = v21[4];
  v20[5] = v23;
  v24 = v21[1];
  *v20 = *v21;
  v20[1] = v24;
  v25 = (void *)(a1 + v19);
  v26 = (const void *)(a2 + v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v19, 1, v10))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v12(v25, v26, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  v28 = a3[13];
  v29 = a1 + v28;
  v30 = a2 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  return a1;
}

uint64_t assignWithTake for IncomingMessage(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_1C12D087C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  sub_1C12C2998(v8, v6);
LABEL_6:
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C1308468();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  v17 = a3[9];
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  sub_1C12C2998(v18, v19);
  if (a1 != a2)
  {
    v20 = a3[10];
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    sub_1C12D08B0(a1 + v20);
    v23 = type metadata accessor for IncomingMessage.EventType(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v22, 1, v14))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v21, v22, v14);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a1 + v25 + 8);
  if (v28 == 1)
    goto LABEL_16;
  v29 = *(_QWORD *)(v27 + 8);
  if (v29 == 1)
  {
    sub_1C12D091C(v26);
LABEL_16:
    v30 = *(_OWORD *)(v27 + 48);
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
    *(_OWORD *)(v26 + 48) = v30;
    v31 = *(_OWORD *)(v27 + 80);
    *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
    *(_OWORD *)(v26 + 80) = v31;
    v32 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v32;
    goto LABEL_28;
  }
  if (v28)
  {
    if (v29)
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      *(_QWORD *)(v26 + 8) = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_1C12D08EC(v26);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
LABEL_22:
  if (!*(_QWORD *)(v26 + 32))
  {
LABEL_26:
    *(_OWORD *)(v26 + 24) = *(_OWORD *)(v27 + 24);
    *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
    goto LABEL_27;
  }
  v33 = *(_QWORD *)(v27 + 32);
  if (!v33)
  {
    sub_1C12D08EC(v26 + 24);
    goto LABEL_26;
  }
  *(_QWORD *)(v26 + 24) = *(_QWORD *)(v27 + 24);
  *(_QWORD *)(v26 + 32) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
  swift_bridgeObjectRelease();
LABEL_27:
  v34 = *(_QWORD *)(v27 + 56);
  *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
  *(_QWORD *)(v26 + 56) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v27 + 72);
  *(_QWORD *)(v26 + 64) = *(_QWORD *)(v27 + 64);
  *(_QWORD *)(v26 + 72) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v27 + 88);
  *(_QWORD *)(v26 + 80) = *(_QWORD *)(v27 + 80);
  *(_QWORD *)(v26 + 88) = v36;
  swift_bridgeObjectRelease();
LABEL_28:
  v37 = a3[12];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v41 = v40(a1 + v37, 1, v14);
  v42 = v40((uint64_t)v39, 1, v14);
  if (!v41)
  {
    if (!v42)
    {
      v16((uint64_t)v38, (uint64_t)v39, v14);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v38, v14);
    goto LABEL_33;
  }
  if (v42)
  {
LABEL_33:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v38, v39, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v38, 0, 1, v14);
LABEL_34:
  v44 = a3[13];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12D0EE8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C1308468();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[8];
    }
    else
    {
      v12 = type metadata accessor for IncomingMessage.EventType(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IncomingMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12D0FBC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C1308468();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      v12 = type metadata accessor for IncomingMessage.EventType(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[12];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C12D1080()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1C1308468();
  if (v0 <= 0x3F)
  {
    type metadata accessor for IncomingMessage.EventType(319);
    if (v1 <= 0x3F)
    {
      sub_1C12CF944();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for IncomingMessage.EventType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = a2[2];
      v14 = a2[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v13, v14);
      a1[2] = v13;
      a1[3] = v14;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_1C1308468();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for IncomingMessage.EventType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_1C1308468();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for IncomingMessage.EventType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = a2[2];
    v12 = a2[3];
    swift_bridgeObjectRetain();
    sub_1C12C2F04(v11, v12);
    a1[2] = v11;
    a1[3] = v12;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1C1308468();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for IncomingMessage.EventType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  if (a1 != a2)
  {
    sub_1C12D08B0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v10 = a2[2];
      v11 = a2[3];
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v10, v11);
      a1[2] = v10;
      a1[3] = v11;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1C1308468();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for IncomingMessage.EventType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1C1308468();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for IncomingMessage.EventType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1C12D08B0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1C1308468();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C12D17A0()
{
  unint64_t v0;

  sub_1C12CF944();
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

ValueMetadata *type metadata accessor for IncomingMessage.EventType.StartParameters()
{
  return &type metadata for IncomingMessage.EventType.StartParameters;
}

uint64_t sub_1C12D1820(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for IncomingMessage.EventType.StartParameters.InputType(uint64_t a1)
{
  return sub_1C12D1848(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1C12D1848(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s24SessionPushNotifications15IncomingMessageV9EventTypeO15StartParametersV9InputTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C12D1820(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IncomingMessage.EventType.StartParameters.InputType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1C12D1820(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1C12D1848(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IncomingMessage.EventType.StartParameters.InputType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1C12D1848(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingMessage.EventType.StartParameters.InputType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IncomingMessage.EventType.StartParameters.InputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C12D19E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1C12D19F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IncomingMessage.EventType.StartParameters.InputType()
{
  return &type metadata for IncomingMessage.EventType.StartParameters.InputType;
}

uint64_t destroy for IncomingMessage.AlertConfiguration(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IncomingMessage.AlertConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 32);
    if (v5)
      goto LABEL_3;
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = *(_QWORD *)(a2 + 32);
  if (!v5)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IncomingMessage.AlertConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C12D08EC((uint64_t)a1);
      v5 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
  }
  v7 = a1 + 3;
  v8 = a2 + 3;
  v9 = a2[4];
  if (a1[4])
  {
    if (v9)
    {
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C12D08EC((uint64_t)(a1 + 3));
      v10 = a2[5];
      *v7 = *v8;
      a1[5] = v10;
    }
  }
  else if (v9)
  {
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *v8;
    a1[5] = a2[5];
    *v7 = v11;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for IncomingMessage.AlertConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C12D08EC(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
LABEL_6:
  if (!*(_QWORD *)(a1 + 32))
  {
LABEL_10:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    goto LABEL_11;
  }
  v5 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    sub_1C12D08EC(a1 + 24);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_11:
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingMessage.AlertConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IncomingMessage.AlertConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for IncomingMessage.AlertConfiguration()
{
  return &type metadata for IncomingMessage.AlertConfiguration;
}

uint64_t destroy for IncomingMessage.LocalizableString()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s24SessionPushNotifications15IncomingMessageV17LocalizableStringVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IncomingMessage.LocalizableString(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IncomingMessage.LocalizableString(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IncomingMessage.LocalizableString(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IncomingMessage.LocalizableString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IncomingMessage.LocalizableString()
{
  return &type metadata for IncomingMessage.LocalizableString;
}

uint64_t dispatch thunk of PushConnectionFactory.createConnection(environmentName:namedDelegatePort:queue:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t dispatch thunk of PushConnection.requestToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of PushConnection.unsubscribe(from:forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of PushConnection.subscribe(to:forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of PushConnection.invalidateToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PushConnection.setEnabledTopics(_:ignoredTopics:opportunisticTopics:nonWakingTopics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PushConnectionDelegate.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of PushConnectionDelegate.connection(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PushConnectionDelegate.connection(_:didReceiveToken:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of PushConnectionDelegate.connection(_:channelSubscriptionsFailedWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1C12D2128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F550);
    sub_1C12C3018((unint64_t *)&unk_1ED78F540, &qword_1ED78F550, MEMORY[0x1E0C95F48]);
    v1 = sub_1C13086F0();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t (*sub_1C12D21CC(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1C12D2128();
  return sub_1C12CD30C;
}

uint64_t WatchActivityMonitor.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  WatchActivityMonitor.init()();
  return v0;
}

uint64_t WatchActivityMonitor.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD aBlock[6];

  v1 = v0;
  v14 = *v0;
  v13 = sub_1C1308924();
  v2 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C130890C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v6);
  v0[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F550);
  swift_allocObject();
  v0[3] = sub_1C13086D8();
  sub_1C12D3904(0, (unint64_t *)&qword_1ED78FE30);
  sub_1C1308720();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C12D2528();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v13);
  v7 = sub_1C1308948();
  v0[4] = v7;
  v0[5] = -1;
  *((_BYTE *)v0 + 48) = 0;
  v8 = swift_allocObject();
  v9 = v14;
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v9;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1C12D2594;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_1C12D25D4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12CDDC4;
  aBlock[3] = &block_descriptor_0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v7, v11);
  _Block_release(v11);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) == 0)
    return (uint64_t)v1;
  __break(1u);
  return result;
}

unint64_t sub_1C12D2528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED78FE10;
  if (!qword_1ED78FE10)
  {
    v1 = sub_1C130890C();
    result = MEMORY[0x1C3BAA4B0](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED78FE10);
  }
  return result;
}

uint64_t sub_1C12D2570()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C12D2594()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 48) = sub_1C12D25F4() & 1;
  sub_1C12D2748();
}

uint64_t sub_1C12D25C4()
{
  return swift_deallocObject();
}

uint64_t sub_1C12D25D4()
{
  uint64_t v0;

  return sub_1C12CDD74(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_1C12D25F4()
{
  CFTypeRef *v0;
  int v1;
  BOOL v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t isa_low;
  uint64_t v8;
  NSObject v10;

  v0 = (CFTypeRef *)swift_slowAlloc();
  v1 = IOPSCopyPowerSourcesByTypePrecise();
  if (*v0)
    v2 = v1 == 0;
  else
    v2 = 0;
  if (v2)
  {
    sub_1C12D2A3C(v0, &v10);
    isa_low = LOBYTE(v10.isa);
    v8 = LOBYTE(v10.isa);
    if (!*v0)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (qword_1ED78F670 != -1)
    swift_once();
  v3 = sub_1C13086A8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED78F650);
  v4 = sub_1C130869C();
  v5 = sub_1C13088F4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1C12C0000, v4, v5, "Could not get connected device list", v6, 2u);
    MEMORY[0x1C3BAA558](v6, -1, -1);
  }

  isa_low = 0;
  v8 = 0;
  if (*v0)
  {
LABEL_10:
    swift_unknownObjectRelease();
    v8 = isa_low;
  }
LABEL_11:
  MEMORY[0x1C3BAA558](v0, -1, -1);
  return v8;
}

void sub_1C12D2748()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint32_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint32_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v1 = v0;
  v2 = *(NSObject **)(v0 + 32);
  v3 = swift_allocObject();
  swift_weakInit();
  v22 = sub_1C12D3580;
  v23 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v18 = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_1C12D3348;
  v21 = &block_descriptor_10;
  v5 = _Block_copy(&v18);
  swift_release();
  swift_beginAccess();
  v6 = notify_register_dispatch("com.apple.system.accpowersources.source", (int *)(v1 + 40), v2, v5);
  swift_endAccess();
  _Block_release(v5);
  if (v6)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v7 = sub_1C13086A8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED78F650);
    v8 = sub_1C130869C();
    v9 = sub_1C13088F4();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C12C0000, v8, v9, "Could not register for power source notifications", v10, 2u);
      MEMORY[0x1C3BAA558](v10, -1, -1);
    }

  }
  v11 = swift_allocObject();
  swift_weakInit();
  v22 = sub_1C12D3580;
  v23 = v11;
  v18 = v4;
  v19 = 1107296256;
  v20 = sub_1C12D3348;
  v21 = &block_descriptor_14;
  v12 = _Block_copy(&v18);
  swift_release();
  swift_beginAccess();
  v13 = notify_register_dispatch("com.apple.system.accpowersources.attach", (int *)(v1 + 44), v2, v12);
  swift_endAccess();
  _Block_release(v12);
  if (v13)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v14 = sub_1C13086A8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED78F650);
    v15 = sub_1C130869C();
    v16 = sub_1C13088F4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C12C0000, v15, v16, "Could not register for attachment notifications", v17, 2u);
      MEMORY[0x1C3BAA558](v17, -1, -1);
    }

  }
}

void sub_1C12D2A3C(CFTypeRef *a1@<X0>, NSObject *a2@<X8>)
{
  CFTypeRef *v2;
  CFArrayRef v4;
  CFArrayRef v5;
  unint64_t v6;
  uint64_t p_base_meths;
  uint64_t v8;
  NSObject *v9;
  const void *v10;
  uint64_t v11;
  CFDictionaryRef v12;
  const __CFDictionary *v13;
  unsigned __int8 v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint8_t *v21;
  unsigned __int8 v22;
  unint64_t v23;
  char v24;
  id v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  unsigned __int8 v32;
  unsigned __int8 *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  NSObject *v38;
  CFTypeRef *v39;
  NSObject *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;

  v2 = a1;
  v4 = IOPSCopyPowerSourcesList(*a1);
  if (!v4)
  {
    __break(1u);
    return;
  }
  v5 = v4;
  v38 = a2;
  v6 = sub_1C13088AC();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    p_base_meths = sub_1C1308A44();
    swift_bridgeObjectRelease();
    if (p_base_meths)
      goto LABEL_4;
LABEL_58:
    swift_bridgeObjectRelease();
LABEL_59:
    v33 = (unsigned __int8 *)v38;
    if (qword_1ED78F670 != -1)
      swift_once();
    v34 = sub_1C13086A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED78F650);
    v35 = sub_1C130869C();
    v36 = sub_1C1308900();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1C12C0000, v35, v36, "Could not find a connected watch", v37, 2u);
      MEMORY[0x1C3BAA558](v37, -1, -1);
    }

    v32 = 0;
    goto LABEL_64;
  }
  p_base_meths = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!p_base_meths)
    goto LABEL_58;
LABEL_4:
  v44 = v6 & 0xC000000000000001;
  v8 = 4;
  v39 = v2;
  while (1)
  {
    v9 = (v8 - 4);
    if (v44)
    {
      v10 = (const void *)MEMORY[0x1C3BA9FC4](v8 - 4, v6);
      v11 = v8 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_54;
    }
    else
    {
      v10 = *(const void **)(v6 + 8 * v8);
      swift_unknownObjectRetain();
      v11 = v8 - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    v12 = IOPSGetPowerSourceDescription(*v2, v10);
    if (!v12)
    {
      __break(1u);
LABEL_66:
      swift_once();
      goto LABEL_52;
    }
    v13 = v12;
    *(_QWORD *)&v42 = 0;
    sub_1C1308750();

    a2 = v42;
    if ((_QWORD)v42)
      break;
    if (qword_1ED78F670 != -1)
      swift_once();
    v17 = sub_1C13086A8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED78F650);
    v18 = sub_1C130869C();
    v19 = sub_1C13088F4();
    a2 = v19;
    if (!os_log_type_enabled(v18, v19))
    {

      goto LABEL_34;
    }
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1C12C0000, v18, (os_log_type_t)a2, "Could not get power source description", v20, 2u);
    v21 = v20;
    v2 = v39;
    MEMORY[0x1C3BAA558](v21, -1, -1);
    swift_unknownObjectRelease();

LABEL_6:
    ++v8;
    if (v11 == p_base_meths)
    {
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
  }
  v14 = sub_1C12D35B0(v42);
  if (v14 >= 2u)
  {
    if (!a2[2].isa
      || (v22 = v14, v23 = sub_1C12C59E0(0x4920726F646E6556, 0xE900000000000044), (v24 & 1) == 0)
      || (sub_1C12D38C8((uint64_t)a2[7].isa + 32 * v23, (uint64_t)&v42),
          sub_1C12D3904(0, &qword_1EF6D7F48),
          (swift_dynamicCast() & 1) == 0))
    {
      swift_bridgeObjectRelease();
LABEL_34:
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    v25 = -[NSObject integerValue](v40, sel_integerValue);

    if (v22 == 2)
    {
      v2 = v39;
      if (v25 == (id)1452)
        goto LABEL_15;
    }
    else
    {
      v2 = v39;
      if (v22 == 3)
      {
        if (v25 == (id)76)
          goto LABEL_15;
      }
      else if (v22 != 4)
      {
        goto LABEL_5;
      }
      if (v25 == (id)1452)
        goto LABEL_15;
    }
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
LABEL_15:
  if (!a2[2].isa)
    goto LABEL_5;
  v15 = sub_1C12C59E0(0xD000000000000012, 0x80000001C130BE20);
  if ((v16 & 1) == 0)
    goto LABEL_5;
  sub_1C12D38C8((uint64_t)a2[7].isa + 32 * v15, (uint64_t)&v42);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  if (v40 == 0x6863746157 && v41 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_1C1308A98();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v39;
      goto LABEL_6;
    }
  }
  if (a2[2].isa && (v27 = sub_1C12C59E0(0x6772616843207349, 0xEB00000000676E69), (v28 & 1) != 0))
  {
    sub_1C12D38C8((uint64_t)a2[7].isa + 32 * v27, (uint64_t)&v42);
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
  }
  v2 = v39;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v43 + 1))
  {
    swift_unknownObjectRelease();
    sub_1C12D393C((uint64_t)&v42);
    goto LABEL_6;
  }
  sub_1C12D3904(0, &qword_1EF6D7F48);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_34;
  v9 = v40;
  swift_bridgeObjectRelease();
  if (qword_1ED78F670 != -1)
    goto LABEL_66;
LABEL_52:
  v29 = sub_1C13086A8();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED78F650);
  v9 = v9;
  a2 = sub_1C130869C();
  v30 = sub_1C1308900();
  p_base_meths = (uint64_t)&UnfairLock.base_meths;
  if (os_log_type_enabled(a2, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v31 = 67240192;
    LODWORD(v42) = -[NSObject BOOLValue](v9, sel_BOOLValue);
    sub_1C1308960();

    _os_log_impl(&dword_1C12C0000, a2, v30, "Found watch with charging state %{BOOL,public}d", v31, 8u);
    MEMORY[0x1C3BAA558](v31, -1, -1);
    goto LABEL_56;
  }
LABEL_55:

  a2 = v9;
LABEL_56:

  v32 = objc_msgSend(v9, *(SEL *)(p_base_meths + 760));
  swift_unknownObjectRelease();
  v33 = (unsigned __int8 *)v38;
LABEL_64:
  *v33 = v32;
}

uint64_t WatchActivityMonitor.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t WatchActivityMonitor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C12D317C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _DWORD v13[3];
  BOOL v14;

  v1 = v0;
  v2 = sub_1C1308738();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + 32);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  result = sub_1C12D25F4();
  if ((result & 1) == *(_BYTE *)(v0 + 48))
    return result;
  LOBYTE(v2) = result;
  if (qword_1ED78F670 != -1)
    goto LABEL_9;
LABEL_4:
  v9 = sub_1C13086A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED78F650);
  v10 = sub_1C130869C();
  v11 = sub_1C1308900();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 67240192;
    v13[2] = v2 & 1;
    sub_1C1308960();
    _os_log_impl(&dword_1C12C0000, v10, v11, "Watch charging state has changed to %{BOOL,public}d", v12, 8u);
    MEMORY[0x1C3BAA558](v12, -1, -1);
  }

  *(_BYTE *)(v1 + 48) = v2 & 1;
  v14 = (v2 & 1) == 0;
  return sub_1C13086CC();
}

uint64_t sub_1C12D3348(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1C12D3384()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C12D317C();
    return swift_release();
  }
  return result;
}

uint64_t WatchActivityMonitor.isActive.getter()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

void sub_1C12D3428(BOOL *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(_BYTE *)(v1 + 48) & 1) == 0;
}

uint64_t sub_1C12D343C()
{
  return sub_1C12D2128();
}

uint64_t sub_1C12D345C()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12D34AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12D2128();
  *a1 = result;
  return result;
}

uint64_t sub_1C12D34D4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for WatchActivityMonitor()
{
  return objc_opt_self();
}

uint64_t method lookup function for WatchActivityMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WatchActivityMonitor.deviceActivityStatePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WatchActivityMonitor.deviceActivityStatePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of WatchActivityMonitor.deviceActivityStatePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of WatchActivityMonitor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1C12D355C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12D3580()
{
  return sub_1C12D3384();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1C12D35B0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[32];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = sub_1C12C59E0(0x726F70736E617254, 0xEE00657079542074);
  if ((v3 & 1) == 0)
    return 0;
  sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)v8);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (v6 == 0x6C616E7265746E49 && v7 == 0xE800000000000000 || (sub_1C1308A98() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v6 == 0x6C6169726553 && v7 == 0xE600000000000000
         || (sub_1C1308A98() & 1) != 0
         || v6 == 4346709 && v7 == 0xE300000000000000
         || (sub_1C1308A98() & 1) != 0
         || v6 == 4475201 && v7 == 0xE300000000000000
         || (sub_1C1308A98() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (v6 == 0x746F6F7465756C42 && v7 == 0xE900000000000068
         || (sub_1C1308A98() & 1) != 0
         || v6 == 0x746F6F7465756C42 && v7 == 0xEC000000454C2068
         || (sub_1C1308A98() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v6 == 0xD000000000000011 && v7 == 0x80000001C130BE40)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1C1308A98();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 0;
  }
}

uint64_t sub_1C12D38C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C12D3904(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C12D393C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D82B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C12D397C(BOOL *a1@<X8>)
{
  sub_1C12D3428(a1);
}

uint64_t DeviceActivityBudgetLevelProvider.__allocating_init(deviceActivityMonitors:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DeviceActivityBudgetLevelProvider.init(deviceActivityMonitors:)(a1);
  return v2;
}

_QWORD *DeviceActivityBudgetLevelProvider.init(deviceActivityMonitors:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v17 = a1;
  v3 = sub_1C1308924();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v16 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C130890C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v8);
  v1[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
  swift_allocObject();
  v1[3] = sub_1C13086D8();
  v15[4] = sub_1C12CD600();
  sub_1C1308720();
  v18 = MEMORY[0x1E0DEE9D8];
  v15[2] = sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v7, MEMORY[0x1E0DEF828]);
  v15[1] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  v15[3] = sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  v9 = *MEMORY[0x1E0DEF8D0];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v11 = v16;
  v10(v16, v9, v3);
  v2[4] = sub_1C1308948();
  sub_1C1308720();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1C1308984();
  v10(v11, v9, v3);
  v12 = sub_1C1308948();
  v13 = MEMORY[0x1E0DEE9E8];
  v2[5] = v12;
  v2[6] = v13;
  v2[7] = v17;
  sub_1C12D3C8C();
  return v2;
}

uint64_t sub_1C12D3C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[2];
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE18);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v0;
  result = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(result + 16);
  if (v9)
  {
    v18 = *(void **)(v20 + 40);
    v19 = v20 + 48;
    v10 = result + 32;
    v17[1] = result;
    swift_bridgeObjectRetain();
    do
    {
      sub_1C12C3158(v10, (uint64_t)v23);
      v11 = v4;
      v13 = v24;
      v12 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
      v14 = v18;
      v22 = v18;
      v15 = sub_1C1308918();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
      v16 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F518);
      sub_1C12CD600();
      sub_1C12C3018(&qword_1ED78F510, &qword_1ED78F518, MEMORY[0x1E0C95D90]);
      sub_1C12CE1CC((unint64_t *)&unk_1ED78FE20, (uint64_t (*)(uint64_t))sub_1C12CD600, MEMORY[0x1E0DEF7F8]);
      v4 = v11;
      sub_1C13086FC();
      sub_1C12CE12C((uint64_t)v3);

      swift_release();
      swift_allocObject();
      swift_weakInit();
      sub_1C12C3018(&qword_1ED78F4E8, &qword_1ED78F4F0, MEMORY[0x1E0C95CB8]);
      sub_1C1308708();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v11);
      swift_beginAccess();
      sub_1C13086C0();
      swift_endAccess();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      v10 += 40;
      --v9;
    }
    while (v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DeviceActivityBudgetLevelProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DeviceActivityBudgetLevelProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12D3FC0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
    sub_1C12C3018(&qword_1ED78F558, &qword_1ED78F568, MEMORY[0x1E0C95F40]);
    sub_1C13086E4();
    swift_release();
    return swift_release();
  }
  return result;
}

SessionPushNotifications::Budget::Level_optional __swiftcall DeviceActivityBudgetLevelProvider.budgetLevel(topic:)(SessionPushNotifications::Topic topic)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7F50);
  return (SessionPushNotifications::Budget::Level_optional)sub_1C1308930();
}

void sub_1C12D40CC(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    goto LABEL_9;
  v8 = v6 + 32;
  swift_bridgeObjectRetain();
  v9 = 0;
  do
  {
    sub_1C12C3158(v8, (uint64_t)v24);
    v10 = v25;
    v11 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    v9 |= (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    v8 += 40;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v12 = sub_1C13086A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v13 = sub_1C130869C();
    v14 = sub_1C1308900();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v24[0] = v16;
      *(_DWORD *)v15 = 136380675;
      swift_bridgeObjectRetain();
      v27 = sub_1C13044AC(a2, a3, v24);
      sub_1C1308960();
      v17 = 3;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C12C0000, v13, v14, "DeviceActivityBudgetLevelProvider has no opinion on budget level for %{private}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v16, -1, -1);
      MEMORY[0x1C3BAA558](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v17 = 3;
    }
  }
  else
  {
LABEL_9:
    if (qword_1ED78F670 != -1)
      swift_once();
    v18 = sub_1C13086A8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v19 = sub_1C130869C();
    v20 = sub_1C1308900();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24[0] = v22;
      *(_DWORD *)v21 = 136380931;
      swift_bridgeObjectRetain();
      v27 = sub_1C13044AC(a2, a3, v24);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2082;
      v27 = sub_1C13044AC(0x6576697463616E69, 0xE800000000000000, v24);
      sub_1C1308960();
      _os_log_impl(&dword_1C12C0000, v19, v20, "DeviceActivityBudgetLevelProvider thinks %{private}s should have level %{public}s, privacy: .public)", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v22, -1, -1);
      MEMORY[0x1C3BAA558](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = 0;
  }
  *a4 = v17;
}

void sub_1C12D4498(char *a1@<X8>)
{
  uint64_t v1;

  sub_1C12D40CC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1C12D44B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7F50);
  return sub_1C1308930();
}

uint64_t sub_1C12D451C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12CD224();
  *a1 = result;
  return result;
}

uint64_t sub_1C12D4544(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DeviceActivityBudgetLevelProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DeviceActivityBudgetLevelProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceActivityBudgetLevelProvider.budgetLevelChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DeviceActivityBudgetLevelProvider.budgetLevelChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DeviceActivityBudgetLevelProvider.budgetLevelChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DeviceActivityBudgetLevelProvider.__allocating_init(deviceActivityMonitors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C12D45CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12D45F0()
{
  return sub_1C12D3FC0();
}

void sub_1C12D45F8(char *a1@<X8>)
{
  sub_1C12D4498(a1);
}

uint64_t sub_1C12D460C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

BOOL static DeviceActivityLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DeviceActivityLevel.hash(into:)()
{
  return sub_1C1308AF8();
}

uint64_t DeviceActivityLevel.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

uint64_t sub_1C12D46B0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED78);
  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12D470C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C12DD208(a1);
}

uint64_t sub_1C12D4720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 32);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F538);
    sub_1C12C3018(&qword_1ED78F530, &qword_1ED78F538, MEMORY[0x1E0C95F48]);
    v1 = sub_1C13086F0();
    *(_QWORD *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C12D47C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*sub_1C12D47D4(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1C12D4720();
  return sub_1C12D4808;
}

uint64_t sub_1C12D4808(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 32) = *a1;
  return swift_release();
}

void sub_1C12D4818(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  os_unfair_lock_s *v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 184);
  if (!v3 || !*(_QWORD *)(v3 + 16) || (sub_1C12C5A44(*a1), (v4 & 1) == 0))
  {
    if (qword_1EF6D7CF0 != -1)
      swift_once();
    v5 = off_1EF6D7F58;
    v6 = *(os_unfair_lock_s **)(*((_QWORD *)off_1EF6D7F58 + 5) + 16);
    os_unfair_lock_lock(v6);
    if (*(_QWORD *)(v5[3] + 16))
    {
      sub_1C12C5A44(v2);
      if ((v7 & 1) != 0)
      {
        os_unfair_lock_unlock(v6);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1C12D48E0(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  os_unfair_lock_s *v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 192);
  if (!v3 || !*(_QWORD *)(v3 + 16) || (sub_1C12C5A44(*a1), (v4 & 1) == 0))
  {
    if (qword_1EF6D7CF0 != -1)
      swift_once();
    v5 = off_1EF6D7F58;
    v6 = *(os_unfair_lock_s **)(*((_QWORD *)off_1EF6D7F58 + 5) + 16);
    os_unfair_lock_lock(v6);
    if (*(_QWORD *)(v5[4] + 16))
    {
      sub_1C12C5A44(v2);
      if ((v7 & 1) != 0)
      {
        os_unfair_lock_unlock(v6);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t BudgetServer.__allocating_init(store:budgetLevelResolver:budgetEnforcementPolicyProvider:taskScheduler:windowDuration:maximumUpdateBudgetPerWindow:maximumPushToStartBudgetPerWindow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v15;
  uint64_t v16;

  v15 = a8 & 1;
  v16 = swift_allocObject();
  BudgetServer.init(store:budgetLevelResolver:budgetEnforcementPolicyProvider:taskScheduler:windowDuration:maximumUpdateBudgetPerWindow:maximumPushToStartBudgetPerWindow:)(a1, a2, a3, a4, a5, a6, a7, v15);
  return v16;
}

_QWORD *BudgetServer.init(store:budgetLevelResolver:budgetEnforcementPolicyProvider:taskScheduler:windowDuration:maximumUpdateBudgetPerWindow:maximumPushToStartBudgetPerWindow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;

  v9 = (_QWORD *)v8;
  v55 = a8;
  v53 = a6;
  v54 = a7;
  v51 = a5;
  v63 = a4;
  v64 = a3;
  v65 = a2;
  v66 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FDD0);
  v11 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  v61 = v11;
  MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE18);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F500);
  v16 = *(_QWORD *)(v15 - 8);
  v57 = v15;
  v58 = v16;
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C1308924();
  v50 = *(_QWORD *)(v18 - 8);
  v47 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1C130890C();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v21);
  v23 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v23);
  *(_QWORD *)(v8 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
  swift_allocObject();
  *(_QWORD *)(v8 + 24) = sub_1C13086D8();
  *(_QWORD *)(v8 + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F538);
  swift_allocObject();
  *(_QWORD *)(v8 + 40) = sub_1C13086D8();
  v62 = sub_1C12CD600();
  sub_1C1308720();
  v67 = MEMORY[0x1E0DEE9D8];
  v49 = (_QWORD *)sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v22, MEMORY[0x1E0DEF828]);
  v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  v24 = *MEMORY[0x1E0DEF8D0];
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 104);
  v25(v20, v24, v18);
  *(_QWORD *)(v8 + 48) = sub_1C1308948();
  sub_1C1308720();
  v67 = MEMORY[0x1E0DEE9D8];
  sub_1C1308984();
  v25(v20, v24, v47);
  *(_QWORD *)(v8 + 56) = sub_1C1308948();
  v50 = v8 + 256;
  *(_OWORD *)(v8 + 216) = 0u;
  *(_OWORD *)(v8 + 232) = 0u;
  v26 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v8 + 248) = 0;
  *(_QWORD *)(v8 + 256) = v26;
  sub_1C12C3158(v66, v8 + 264);
  sub_1C12C3158(v63, v8 + 104);
  v49 = (_QWORD *)(v8 + 144);
  sub_1C12C3158(v64, v8 + 144);
  v27 = v53;
  *(_QWORD *)(v8 + 184) = v51;
  *(_QWORD *)(v8 + 192) = v27;
  *(_QWORD *)(v8 + 200) = v54;
  *(_BYTE *)(v8 + 208) = v55 & 1;
  sub_1C12C3158(v65, v8 + 64);
  v28 = *(_QWORD *)(v8 + 88);
  v29 = *(_QWORD *)(v8 + 96);
  __swift_project_boxed_opaque_existential_1(v9 + 8, v9[11]);
  v67 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v29 + 8) + 8))(v28);
  v30 = *(void **)(v8 + 48);
  v68 = (id)v9[6];
  v31 = sub_1C1308918();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = (uint64_t)v52;
  v32(v52, 1, 1, v31);
  v34 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F528);
  sub_1C12C3018(&qword_1ED78F520, &qword_1ED78F528, MEMORY[0x1E0C95D90]);
  sub_1C12CE1CC((unint64_t *)&unk_1ED78FE20, (uint64_t (*)(uint64_t))sub_1C12CD600, MEMORY[0x1E0DEF7F8]);
  v35 = v56;
  sub_1C13086FC();
  sub_1C12CA4C8(v33, &qword_1ED78FE18);

  swift_release();
  v36 = swift_allocObject();
  swift_weakInit();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = sub_1C12D52E4;
  *(_QWORD *)(v37 + 24) = v36;
  sub_1C12C3018(&qword_1ED78F4F8, &qword_1ED78F500, MEMORY[0x1E0C95CB8]);
  v38 = v57;
  sub_1C1308708();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v38);
  swift_beginAccess();
  sub_1C13086C0();
  swift_endAccess();
  swift_release();
  v39 = v9[21];
  v40 = v9[22];
  __swift_project_boxed_opaque_existential_1(v49, v39);
  v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
  v68 = (id)v9[7];
  v41 = v68;
  v32((char *)v33, 1, 1, v31);
  v42 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FDE0);
  sub_1C12C3018(&qword_1ED78FDD8, &qword_1ED78FDE0, MEMORY[0x1E0C95D90]);
  v43 = v59;
  sub_1C13086FC();
  sub_1C12CA4C8(v33, &qword_1ED78FE18);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C12C3018(&qword_1ED78FDC8, &qword_1ED78FDD0, MEMORY[0x1E0C95CB8]);
  v44 = v60;
  sub_1C1308708();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v44);
  swift_beginAccess();
  sub_1C13086C0();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v63);
  __swift_destroy_boxed_opaque_existential_1(v64);
  __swift_destroy_boxed_opaque_existential_1(v65);
  __swift_destroy_boxed_opaque_existential_1(v66);
  return v9;
}

uint64_t sub_1C12D51B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12D51D8()
{
  uint64_t result;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v1 = sub_1C13086A8();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED78F650);
    v2 = sub_1C130869C();
    v3 = sub_1C1308900();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1C12C0000, v2, v3, "Budget level resolver published a change", v4, 2u);
      MEMORY[0x1C3BAA558](v4, -1, -1);
    }

    sub_1C12D5310();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C12D52E4()
{
  return sub_1C12D51D8();
}

uint64_t sub_1C12D52EC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C12D5310()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void (*v24)(_QWORD);
  void (*v25)(_QWORD *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(_QWORD *, _QWORD, uint64_t);
  void *v54;
  id v55;
  uint64_t v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  os_unfair_lock_s *v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  os_unfair_lock_s *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  void (*v126)(_QWORD *, uint64_t);
  id v127;
  void (*v128)(_QWORD);
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  uint64_t v136;
  _QWORD *v137;
  int *v138;
  uint64_t v139;
  uint64_t aBlock;
  uint64_t v141;
  uint64_t (*v142)(uint64_t);
  void *v143;
  uint64_t (*v144)();
  _QWORD *v145;

  v1 = v0;
  v122 = sub_1C1308714();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v3 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C130872C();
  v120 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v119 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_1C1308468();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v124 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = (int *)type metadata accessor for Budget();
  v136 = *((_QWORD *)v138 - 1);
  v7 = MEMORY[0x1E0C80A78](v138);
  v114 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v113 = (uint64_t)&v103 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v103 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED80);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v103 - v17;
  v19 = sub_1C1308738();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = (void *)v0[6];
  *v22 = v23;
  v24 = *(void (**)(_QWORD))(v20 + 104);
  v129 = *MEMORY[0x1E0DEF740];
  v128 = v24;
  v24(v22);
  v127 = v23;
  LOBYTE(v23) = sub_1C1308744();
  v25 = *(void (**)(_QWORD *, uint64_t))(v20 + 8);
  v130 = v22;
  v133 = v19;
  v126 = v25;
  v25(v22, v19);
  if ((v23 & 1) != 0)
  {
    v117 = v4;
    v118 = v3;
    v26 = v1[36];
    v27 = v1[37];
    v112 = v1 + 33;
    __swift_project_boxed_opaque_existential_1(v1 + 33, v26);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
    v29 = v28;
    LODWORD(v131) = 0;
    v30 = 0;
    v31 = *(_QWORD *)(v28 + 64);
    v134 = v28 + 64;
    v32 = 1 << *(_BYTE *)(v28 + 32);
    v33 = -1;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    v34 = v33 & v31;
    v125 = v1 + 8;
    v35 = (unint64_t)(v32 + 63) >> 6;
    v108 = v35 - 1;
    v135 = v35;
    v110 = v35 - 5;
    v109 = v28 + 104;
    v36 = v1;
    v137 = v1;
    while (!v34)
    {
      v44 = v30 + 1;
      if (__OFADD__(v30, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v44 >= v135)
      {
        v46 = v30;
      }
      else
      {
        v45 = *(_QWORD *)(v134 + 8 * v44);
        if (v45)
          goto LABEL_11;
        v46 = v30 + 1;
        if ((uint64_t)(v30 + 2) < v135)
        {
          v45 = *(_QWORD *)(v134 + 8 * (v30 + 2));
          if (v45)
          {
            v44 = v30 + 2;
            goto LABEL_11;
          }
          v46 = v30 + 2;
          if ((uint64_t)(v30 + 3) < v135)
          {
            v45 = *(_QWORD *)(v134 + 8 * (v30 + 3));
            if (v45)
            {
              v44 = v30 + 3;
LABEL_11:
              v34 = (v45 - 1) & v45;
              v38 = __clz(__rbit64(v45)) + (v44 << 6);
              v30 = v44;
LABEL_7:
              v39 = *(_QWORD *)(v29 + 56);
              v40 = (_QWORD *)(*(_QWORD *)(v29 + 48) + 16 * v38);
              v41 = v40[1];
              *v16 = *v40;
              v16[1] = v41;
              v42 = v39 + *(_QWORD *)(v136 + 72) * v38;
              v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
              sub_1C12C2D74(v42, (uint64_t)v16 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Budget);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v16, 0, 1, v43);
              swift_bridgeObjectRetain();
              v36 = v137;
              goto LABEL_14;
            }
            v44 = v30 + 4;
            v46 = v30 + 3;
            if ((uint64_t)(v30 + 4) < v135)
            {
              v45 = *(_QWORD *)(v134 + 8 * v44);
              if (v45)
                goto LABEL_11;
              while (v110 != v30)
              {
                v45 = *(_QWORD *)(v109 + 8 * v30++);
                if (v45)
                {
                  v44 = v30 + 4;
                  goto LABEL_11;
                }
              }
              v46 = v108;
            }
          }
        }
      }
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v16, 1, 1, v47);
      v34 = 0;
      v30 = v46;
LABEL_14:
      sub_1C12DD828((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_1ED78ED80);
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v18, 1, v48) == 1)
      {
        swift_release();
        if ((v131 & 1) != 0)
        {
          v144 = sub_1C12DD86C;
          v145 = v36;
          aBlock = MEMORY[0x1E0C809B0];
          v141 = 1107296256;
          v142 = sub_1C12E8494;
          v143 = &block_descriptor_64;
          v99 = _Block_copy(&aBlock);
          swift_retain();
          v100 = v119;
          sub_1C1308720();
          v139 = MEMORY[0x1E0DEE9D8];
          sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
          sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
          v101 = v118;
          v102 = v122;
          sub_1C1308984();
          MEMORY[0x1C3BA9EF8](0, v100, v101, v99);
          _Block_release(v99);
          (*(void (**)(char *, uint64_t))(v121 + 8))(v101, v102);
          (*(void (**)(char *, uint64_t))(v120 + 8))(v100, v117);
          swift_release();
        }
        return;
      }
      swift_bridgeObjectRelease();
      sub_1C12C2D20((uint64_t)&v18[*(int *)(v48 + 48)], (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v49 = v138[9];
      if ((v12[v49] & 1) != 0)
      {
        v50 = &v12[v138[7]];
        v51 = *((_QWORD *)v50 + 1);
        v132 = *(_QWORD *)v50;
        v111 = v50;
        v52 = v130;
        v54 = v127;
        v53 = (void (*)(_QWORD *, _QWORD, uint64_t))v128;
        *v130 = v127;
        v53(v52, v129, v133);
        v55 = v54;
        swift_bridgeObjectRetain();
        LOBYTE(v54) = sub_1C1308744();
        v126(v52, v133);
        if ((v54 & 1) == 0)
          goto LABEL_58;
        v56 = v137[12];
        v123 = v137[11];
        __swift_project_boxed_opaque_existential_1(v125, v123);
        aBlock = v132;
        v141 = v51;
        (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v56 + 16))(&v139, &aBlock, v123, v56);
        swift_bridgeObjectRelease();
        v57 = v12[v138[8]];
        LODWORD(v132) = v139;
        if (v139 != v57)
        {
          v58 = v137;
          v59 = v137[24];
          if (v59 && *(_QWORD *)(v59 + 16) && (v60 = sub_1C12C5A44(v132), (v61 & 1) != 0))
          {
            v62 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v60);
          }
          else
          {
            if (qword_1EF6D7CF0 != -1)
              swift_once();
            v63 = off_1EF6D7F58;
            v64 = *(os_unfair_lock_s **)(*((_QWORD *)off_1EF6D7F58 + 5) + 16);
            os_unfair_lock_lock(v64);
            v65 = v63[4];
            if (!*(_QWORD *)(v65 + 16))
              goto LABEL_61;
            v66 = sub_1C12C5A44(v132);
            if ((v67 & 1) == 0)
              goto LABEL_62;
            v62 = *(_QWORD *)(*(_QWORD *)(v65 + 56) + 8 * v66);
            os_unfair_lock_unlock(v64);
            v58 = v137;
          }
          v68 = *(_QWORD *)&v12[v138[11]];
          v69 = *(_QWORD *)&v12[v138[5]];
          v70 = __OFSUB__(v68, v69);
          v71 = v68 - v69;
          if (v70)
            goto LABEL_59;
          v70 = __OFSUB__(v62, v71);
          v72 = v62 - v71;
          if (v70)
            goto LABEL_60;
          v123 = v72;
          v131 = v62;
          v73 = *((_QWORD *)v111 + 1);
          v107 = *(_QWORD *)v111;
          v74 = &v12[v138[6]];
          v75 = *((_QWORD *)v74 + 1);
          v105 = *(_QWORD *)v74;
          v76 = v12[v49];
          v104 = v75;
          swift_bridgeObjectRetain();
          v106 = v73;
          swift_bridgeObjectRetain();
          sub_1C1308450();
          v77 = v58[23];
          LODWORD(v111) = v76;
          if (v77 && *(_QWORD *)(v77 + 16) && (v78 = sub_1C12C5A44(v132), (v79 & 1) != 0))
          {
            v80 = *(_QWORD *)(*(_QWORD *)(v77 + 56) + 8 * v78);
            v81 = v58;
          }
          else
          {
            if (qword_1EF6D7CF0 != -1)
              swift_once();
            v82 = off_1EF6D7F58;
            v83 = *(os_unfair_lock_s **)(*((_QWORD *)off_1EF6D7F58 + 5) + 16);
            os_unfair_lock_lock(v83);
            v84 = v82[3];
            if (!*(_QWORD *)(v84 + 16))
              goto LABEL_63;
            v85 = sub_1C12C5A44(v132);
            if ((v86 & 1) == 0)
              goto LABEL_64;
            v80 = *(_QWORD *)(*(_QWORD *)(v84 + 56) + 8 * v85);
            os_unfair_lock_unlock(v83);
            v81 = v137;
          }
          v87 = v114;
          sub_1C13083E4();
          v88 = v138;
          v89 = v138[5];
          *(_QWORD *)&v87[v89] = 0;
          v90 = &v87[v88[7]];
          v91 = v106;
          *(_QWORD *)v90 = v107;
          *((_QWORD *)v90 + 1) = v91;
          v92 = &v87[v88[6]];
          v93 = v104;
          *(_QWORD *)v92 = v105;
          *((_QWORD *)v92 + 1) = v93;
          v87[v88[9]] = (char)v111;
          (*(void (**)(char *, char *, uint64_t))(v115 + 40))(v87, v124, v116);
          *(_QWORD *)&v87[v89] = v123;
          *(_QWORD *)&v87[v88[10]] = v80;
          *(_QWORD *)&v87[v88[11]] = v131;
          v87[v88[8]] = v132;
          v94 = (uint64_t)v87;
          v95 = v113;
          sub_1C12C2D20(v94, v113, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v96 = v81;
          v97 = v81[36];
          v98 = v96[37];
          __swift_project_boxed_opaque_existential_1(v112, v97);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 24))(v95, v97, v98);
          sub_1C12DD884(v95, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          LODWORD(v131) = 1;
        }
        sub_1C12DD884((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v36 = v137;
      }
      else
      {
        sub_1C12DD884((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      }
    }
    v37 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    v38 = v37 | (v30 << 6);
    goto LABEL_7;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

uint64_t sub_1C12D5DC0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10[5];
  uint64_t v11;
  _BYTE v12[40];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v3 = sub_1C13086A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED78F650);
    sub_1C12C3158(a1, (uint64_t)v12);
    v4 = sub_1C130869C();
    v5 = sub_1C1308900();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v11 = v7;
      *(_DWORD *)v6 = 136446210;
      sub_1C12C3158((uint64_t)v12, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FC58);
      v8 = sub_1C13087EC();
      v10[0] = sub_1C13044AC(v8, v9, &v11);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      _os_log_impl(&dword_1C12C0000, v4, v5, "Budget enforcement policy changed: %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v7, -1, -1);
      MEMORY[0x1C3BAA558](v6, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }

    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F568);
    sub_1C12C3018(&qword_1ED78F558, &qword_1ED78F568, MEMORY[0x1E0C95F40]);
    sub_1C13086E4();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C12D5FF4(uint64_t a1)
{
  return sub_1C12D5DC0(a1);
}

uint64_t BudgetServer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C12CA4C8(v0 + 216, &qword_1ED78ED68);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 264);
  return v0;
}

uint64_t BudgetServer.__deallocating_deinit()
{
  BudgetServer.deinit();
  return swift_deallocClassInstance();
}

uint64_t BudgetServer.handle(pushEvent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = type metadata accessor for PushEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = *(NSObject **)(v1 + 48);
  sub_1C12C2D74(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PushEvent);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  sub_1C12C2D20((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for PushEvent);
  *(_QWORD *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1C12D6710;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1C12D25D4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12CDDC4;
  aBlock[3] = &block_descriptor_1;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C12D624C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for PushEvent.EventType(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PushEvent(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED78F670 != -1)
    swift_once();
  v10 = sub_1C13086A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED78F650);
  sub_1C12C2D74((uint64_t)a1, (uint64_t)v9, type metadata accessor for PushEvent);
  v11 = sub_1C130869C();
  v12 = sub_1C1308900();
  if (os_log_type_enabled(v11, v12))
  {
    v29 = v7;
    v13 = swift_slowAlloc();
    v30 = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v33 = v15;
    *(_DWORD *)v14 = 136446210;
    v31 = a2;
    v28[1] = v14 + 4;
    v16 = a1;
    v18 = *v9;
    v17 = v9[1];
    swift_bridgeObjectRetain();
    v19 = v18;
    a1 = v16;
    v32 = sub_1C13044AC(v19, v17, &v33);
    sub_1C1308960();
    v7 = v29;
    swift_bridgeObjectRelease();
    sub_1C12DD884((uint64_t)v9, type metadata accessor for PushEvent);
    _os_log_impl(&dword_1C12C0000, v11, v12, "Received push event for %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v15, -1, -1);
    MEMORY[0x1C3BAA558](v14, -1, -1);
  }
  else
  {
    sub_1C12DD884((uint64_t)v9, type metadata accessor for PushEvent);
  }

  sub_1C12D6778();
  sub_1C12C2D74((uint64_t)a1 + *(int *)(v7 + 32), (uint64_t)v6, type metadata accessor for PushEvent.EventType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v21 = *((_QWORD *)v6 + 2);
      v22 = *((_QWORD *)v6 + 3);
      swift_bridgeObjectRelease();
      sub_1C12C2998(v21, v22);
      swift_bridgeObjectRelease();
      v23 = a1[5];
      v33 = a1[4];
      v34 = v23;
      v24 = *a1;
      v25 = (_QWORD *)a1[1];
      swift_bridgeObjectRetain();
      sub_1C12D70CC(&v33, v24, v25);
LABEL_12:
      swift_bridgeObjectRelease();
      sub_1C12D770C(v24, (unint64_t)v25);
      return sub_1C12D8BC8();
    }
    if (*((_BYTE *)a1 + *(int *)(v7 + 44)) == 1)
    {
      v26 = a1[5];
      v33 = a1[4];
      v34 = v26;
      v24 = *a1;
      v25 = (_QWORD *)a1[1];
      swift_bridgeObjectRetain();
      sub_1C12D84A0(&v33, v24, (void (*)(_QWORD *, uint64_t))v25);
      goto LABEL_12;
    }
  }
  else
  {
    sub_1C12D816C(*a1, a1[1]);
    sub_1C12DD884((uint64_t)v6, type metadata accessor for PushEvent.EventType);
  }
  return sub_1C12D8BC8();
}

uint64_t sub_1C12D6594()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)type metadata accessor for PushEvent(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + v1[7];
  v4 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[8];
  type metadata accessor for PushEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v7 = sub_1C13085A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = v2 + v1[9];
  v9 = sub_1C1308588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v2 + v1[10];
  v11 = sub_1C1308558();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12D6710()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for PushEvent(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1C12D624C((uint64_t *)(v0 + v2), *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1C12D6750()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1C12D6778()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char v52;
  uint64_t v53;
  NSObject *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  NSObject *v65;
  void (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD v71[2];
  __int128 v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t aBlock[7];

  v1 = v0;
  v78 = sub_1C1308714();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x1E0C80A78](v78);
  v76 = (char *)v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1C130872C();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v73 = (char *)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1308468();
  v92 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v89 = (char *)v71 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v71 - v10;
  v90 = type metadata accessor for Budget();
  v87 = *(_QWORD *)(v90 - 8);
  v12 = MEMORY[0x1E0C80A78](v90);
  v82 = (uint64_t)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v71 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED80);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v71 - v20;
  v22 = sub_1C1308738();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = v1;
  v26 = (void *)v1[6];
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v27 = v26;
  LOBYTE(v26) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v29 = v84[36];
  v30 = v84[37];
  v81 = v84 + 33;
  __swift_project_boxed_opaque_existential_1(v84 + 33, v29);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  v83 = 0;
  v91 = 0;
  v32 = *(_QWORD *)(result + 64);
  v85 = result + 64;
  v88 = result;
  v33 = 1 << *(_BYTE *)(result + 32);
  v34 = -1;
  if (v33 < 64)
    v34 = ~(-1 << v33);
  v35 = v34 & v32;
  v86 = (unint64_t)(v33 + 63) >> 6;
  v71[0] = v86 - 1;
  *(_QWORD *)&v31 = 136380675;
  v72 = v31;
  v71[1] = MEMORY[0x1E0DEE9B8] + 8;
  v36 = v92;
  if ((v34 & v32) == 0)
    goto LABEL_7;
LABEL_5:
  v37 = __clz(__rbit64(v35));
  v35 &= v35 - 1;
  v38 = v37 | (v91 << 6);
  while (2)
  {
    v39 = *(_QWORD *)(v88 + 56);
    v40 = (_QWORD *)(*(_QWORD *)(v88 + 48) + 16 * v38);
    v41 = v40[1];
    *v19 = *v40;
    v19[1] = v41;
    v42 = v39 + *(_QWORD *)(v87 + 72) * v38;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
    sub_1C12C2D74(v42, (uint64_t)v19 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v19, 0, 1, v43);
    swift_bridgeObjectRetain();
    v36 = v92;
    while (1)
    {
      sub_1C12DD828((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_1ED78ED80);
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v21, 1, v48) == 1)
      {
        result = swift_release();
        if ((v83 & 1) != 0)
        {
          aBlock[4] = (uint64_t)sub_1C12DD86C;
          aBlock[5] = (uint64_t)v84;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1C12E8494;
          aBlock[3] = (uint64_t)&block_descriptor_23;
          v67 = _Block_copy(aBlock);
          swift_retain();
          v68 = v73;
          sub_1C1308720();
          v93 = MEMORY[0x1E0DEE9D8];
          sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
          sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
          v69 = v76;
          v70 = v78;
          sub_1C1308984();
          MEMORY[0x1C3BA9EF8](0, v68, v69, v67);
          _Block_release(v67);
          (*(void (**)(char *, uint64_t))(v77 + 8))(v69, v70);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v75);
          return swift_release();
        }
        return result;
      }
      swift_bridgeObjectRelease();
      sub_1C12C2D20((uint64_t)&v21[*(int *)(v48 + 48)], (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      sub_1C1308450();
      v49 = sub_1C1308408();
      v50 = *(void (**)(char *, uint64_t))(v36 + 8);
      v50(v7, v4);
      if ((v49 & 1) != 0)
      {
        v51 = v89;
        sub_1C13083E4();
      }
      else
      {
        v51 = v89;
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v89, v15, v4);
      }
      sub_1C1308420();
      v50(v51, v4);
      sub_1C1308450();
      v52 = sub_1C1308414();
      v50(v7, v4);
      v50(v11, v4);
      if ((v52 & 1) != 0)
      {
        v53 = v84[37];
        v83 = v84[36];
        v54 = __swift_project_boxed_opaque_existential_1(v81, v83);
        v55 = &v15[*(int *)(v90 + 24)];
        v56 = *(_QWORD *)v55;
        v57 = *((_QWORD *)v55 + 1);
        v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 32);
        v80 = v54;
        swift_bridgeObjectRetain();
        v79(v56, v57, v83, v53);
        swift_bridgeObjectRelease();
        if (qword_1ED78F670 != -1)
          swift_once();
        v58 = sub_1C13086A8();
        __swift_project_value_buffer(v58, (uint64_t)qword_1ED78F650);
        v59 = v82;
        sub_1C12C2D74((uint64_t)v15, v82, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v60 = sub_1C130869C();
        v61 = sub_1C1308900();
        v80 = v60;
        if (!os_log_type_enabled(v60, v61))
        {

          sub_1C12DD884(v59, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          result = sub_1C12DD884((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v83 = 1;
          goto LABEL_31;
        }
        v62 = swift_slowAlloc();
        v79 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_slowAlloc();
        aBlock[0] = (uint64_t)v79;
        *(_DWORD *)v62 = v72;
        v63 = (uint64_t *)(v59 + *(int *)(v90 + 24));
        v64 = v63[1];
        v83 = *v63;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v62 + 4) = sub_1C13044AC(v83, v64, aBlock);
        swift_bridgeObjectRelease();
        sub_1C12DD884(v82, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v65 = v80;
        _os_log_impl(&dword_1C12C0000, v80, v61, "Removed expired budget for %{private}s", (uint8_t *)v62, 0xCu);
        v83 = 1;
        v66 = v79;
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v66, -1, -1);
        MEMORY[0x1C3BAA558](v62, -1, -1);

      }
      result = sub_1C12DD884((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
LABEL_31:
      v36 = v92;
      if (v35)
        goto LABEL_5;
LABEL_7:
      v44 = v91 + 1;
      if (__OFADD__(v91, 1))
      {
        __break(1u);
        goto LABEL_42;
      }
      if (v44 < v86)
      {
        v45 = *(_QWORD *)(v85 + 8 * v44);
        if (v45)
          goto LABEL_10;
        v46 = v91 + 2;
        ++v91;
        if (v44 + 1 < v86)
        {
          v45 = *(_QWORD *)(v85 + 8 * v46);
          if (v45)
            goto LABEL_13;
          v91 = v44 + 1;
          if (v44 + 2 < v86)
          {
            v45 = *(_QWORD *)(v85 + 8 * (v44 + 2));
            if (v45)
            {
              v44 += 2;
              goto LABEL_10;
            }
            v46 = v44 + 3;
            v91 = v44 + 2;
            if (v44 + 3 < v86)
              break;
          }
        }
      }
LABEL_24:
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v19, 1, 1, v47);
      v35 = 0;
    }
    v45 = *(_QWORD *)(v85 + 8 * v46);
    if (v45)
    {
LABEL_13:
      v44 = v46;
LABEL_10:
      v35 = (v45 - 1) & v45;
      v38 = __clz(__rbit64(v45)) + (v44 << 6);
      v91 = v44;
      continue;
    }
    break;
  }
  while (1)
  {
    v44 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v44 >= v86)
    {
      v91 = v71[0];
      goto LABEL_24;
    }
    v45 = *(_QWORD *)(v85 + 8 * v44);
    ++v46;
    if (v45)
      goto LABEL_10;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C12D70CC(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t result;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t aBlock[7];

  v4 = v3;
  v67 = a3;
  v7 = sub_1C1308714();
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C130872C();
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1308468();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for Budget();
  v14 = *((_QWORD *)v13 - 1);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v60 = (uint64_t)&v52 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C1308738();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = *a1;
  v55 = a1[1];
  v26 = *(void **)(v4 + 48);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v27 = v26;
  LOBYTE(v26) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  v28 = *(_QWORD *)(v4 + 288);
  v29 = *(_QWORD *)(v4 + 296);
  v54 = (_QWORD *)(v4 + 264);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 264), v28);
  v25 = v67;
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v29 + 16))(a2, v67, v28, v29);
  v30 = (*(uint64_t (**)(char *, uint64_t, int *))(v14 + 48))(v21, 1, v13);
  result = sub_1C12CA4C8((uint64_t)v21, &qword_1ED78F4D8);
  if (v30 != 1)
    return result;
  if (qword_1ED78F670 != -1)
    goto LABEL_13;
LABEL_4:
  v32 = sub_1C13086A8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v33 = sub_1C130869C();
  v34 = sub_1C1308900();
  if (os_log_type_enabled(v33, v34))
  {
    v53 = a2;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    aBlock[0] = v36;
    *(_DWORD *)v35 = 136446210;
    swift_bridgeObjectRetain();
    v68 = sub_1C13044AC(v53, (unint64_t)v25, aBlock);
    a2 = v53;
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v33, v34, "Adding push-to-start budget for %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v36, -1, -1);
    MEMORY[0x1C3BAA558](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*(_BYTE *)(v4 + 208))
    v37 = 10;
  else
    v37 = *(_QWORD *)(v4 + 200);
  swift_bridgeObjectRetain();
  v38 = v55;
  swift_bridgeObjectRetain();
  v39 = v57;
  sub_1C1308450();
  LOBYTE(aBlock[0]) = 1;
  sub_1C12D4818((unsigned __int8 *)aBlock);
  v41 = v40;
  sub_1C13083E4();
  v42 = v13[5];
  *(_QWORD *)&v17[v42] = 0;
  v43 = &v17[v13[7]];
  *(_QWORD *)v43 = v56;
  *((_QWORD *)v43 + 1) = v38;
  v44 = (uint64_t *)&v17[v13[6]];
  *v44 = a2;
  v44[1] = (uint64_t)v25;
  v17[v13[9]] = 0;
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v17, v39, v59);
  *(_QWORD *)&v17[v42] = v37;
  *(_QWORD *)&v17[v13[10]] = v41;
  *(_QWORD *)&v17[v13[11]] = v37;
  v17[v13[8]] = 1;
  v45 = v60;
  sub_1C12C2D20((uint64_t)v17, v60, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  v46 = *(_QWORD *)(v4 + 288);
  v47 = *(_QWORD *)(v4 + 296);
  __swift_project_boxed_opaque_existential_1(v54, v46);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 24))(v45, v46, v47);
  aBlock[4] = (uint64_t)sub_1C12DD86C;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C12E8494;
  aBlock[3] = (uint64_t)&block_descriptor_26;
  v48 = _Block_copy(aBlock);
  swift_retain();
  v49 = v61;
  sub_1C1308720();
  v68 = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  v50 = v64;
  v51 = v66;
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v49, v50, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v63);
  sub_1C12DD884(v45, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  return swift_release();
}

void sub_1C12D770C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  _QWORD *v50;
  _QWORD *v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  char v57;
  void *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  _QWORD *v75;
  uint64_t v76;

  v3 = v2;
  v62 = sub_1C1308714();
  v67 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v66 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C130872C();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for Budget();
  v12 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1308738();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (void *)v3[6];
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v20 = v19;
  LOBYTE(v19) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (os_variant_has_internal_ui())
  {
    v21 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v22 = (void *)sub_1C13087C8();
    v23 = objc_msgSend(v21, sel_BOOLForKey_, v22);

    if (v23)
    {
      if (qword_1ED78F670 != -1)
        swift_once();
      v24 = sub_1C13086A8();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED78F650);
      v25 = sub_1C130869C();
      v26 = sub_1C13088E8();
      if (!os_log_type_enabled(v25, v26))
        goto LABEL_13;
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_1C12C0000, v25, v26, "Automation flag set, not reducing budget.", v27, 2u);
      v28 = v27;
LABEL_12:
      MEMORY[0x1C3BAA558](v28, -1, -1);
LABEL_13:

      return;
    }
  }
  v29 = v3[36];
  v30 = v3[37];
  __swift_project_boxed_opaque_existential_1(v3 + 33, v29);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v30 + 16))(a1, a2, v29, v30);
  v31 = v68;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v68) != 1)
  {
    sub_1C12C2D20((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v36 = *(int *)(v31 + 20);
    v37 = *(_QWORD *)&v14[v36];
    v38 = __OFSUB__(v37, 1);
    v39 = v37 - 1;
    if (!v38)
    {
      *(_QWORD *)&v14[v36] = v39;
      v40 = v3[36];
      v41 = v3[37];
      __swift_project_boxed_opaque_existential_1(v3 + 33, v40);
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 24))(v14, v40, v41);
      if (qword_1ED78F670 != -1)
        swift_once();
      v42 = sub_1C13086A8();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED78F650);
      swift_bridgeObjectRetain_n();
      v43 = sub_1C130869C();
      v44 = sub_1C1308900();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        aBlock = v46;
        *(_DWORD *)v45 = 136446466;
        swift_bridgeObjectRetain();
        v76 = sub_1C13044AC(a1, a2, &aBlock);
        sub_1C1308960();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2050;
        swift_beginAccess();
        v76 = *(_QWORD *)&v14[*(int *)(v68 + 20)];
        sub_1C1308960();
        _os_log_impl(&dword_1C12C0000, v43, v44, "Reduced budget for %{public}s to: %{public}ld", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v46, -1, -1);
        MEMORY[0x1C3BAA558](v45, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v47 = v62;
      LOBYTE(aBlock) = 2;
      if ((sub_1C12D94B0(a1, a2, (unsigned __int8 *)&aBlock) & 1) != 0)
      {
        v48 = (_QWORD *)swift_allocObject();
        v48[2] = v3;
        v48[3] = a1;
        v48[4] = a2;
        v74 = sub_1C12DD938;
        v75 = v48;
        aBlock = MEMORY[0x1E0C809B0];
        v71 = 1107296256;
        v49 = &block_descriptor_50;
      }
      else
      {
        LOBYTE(aBlock) = 1;
        if ((sub_1C12D94B0(a1, a2, (unsigned __int8 *)&aBlock) & 1) != 0)
        {
          v50 = (_QWORD *)swift_allocObject();
          v50[2] = v3;
          v50[3] = a1;
          v50[4] = a2;
          v74 = sub_1C12DD8E8;
          v75 = v50;
          aBlock = MEMORY[0x1E0C809B0];
          v71 = 1107296256;
          v49 = &block_descriptor_44;
        }
        else
        {
          LOBYTE(aBlock) = 0;
          if ((sub_1C12D94B0(a1, a2, (unsigned __int8 *)&aBlock) & 1) == 0)
          {
LABEL_28:
            swift_beginAccess();
            v55 = (uint64_t *)&v14[*(int *)(v68 + 28)];
            v56 = v55[1];
            aBlock = *v55;
            v71 = v56;
            swift_bridgeObjectRetain();
            v57 = sub_1C12DB7D4(&aBlock);
            swift_bridgeObjectRelease();
            if ((v57 & 1) != 0)
            {
              v74 = sub_1C12DD86C;
              v75 = v3;
              aBlock = MEMORY[0x1E0C809B0];
              v71 = 1107296256;
              v72 = sub_1C12E8494;
              v73 = &block_descriptor_32;
              v58 = _Block_copy(&aBlock);
              swift_retain();
              v59 = v63;
              sub_1C1308720();
              v69 = MEMORY[0x1E0DEE9D8];
              sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
              sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
              v60 = v66;
              sub_1C1308984();
              MEMORY[0x1C3BA9EF8](0, v59, v60, v58);
              _Block_release(v58);
              (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v47);
              (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v65);
              swift_release();
            }
            sub_1C12DD884((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
            return;
          }
          v51 = (_QWORD *)swift_allocObject();
          v51[2] = v3;
          v51[3] = a1;
          v51[4] = a2;
          v74 = sub_1C12DD8C4;
          v75 = v51;
          aBlock = MEMORY[0x1E0C809B0];
          v71 = 1107296256;
          v49 = &block_descriptor_38;
        }
      }
      v72 = sub_1C12E8494;
      v73 = v49;
      v52 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v53 = v63;
      sub_1C1308720();
      v76 = MEMORY[0x1E0DEE9D8];
      sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
      sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
      v54 = v66;
      sub_1C1308984();
      MEMORY[0x1C3BA9EF8](0, v53, v54, v52);
      _Block_release(v52);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v54, v47);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v65);
      swift_release();
      goto LABEL_28;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1C12CA4C8((uint64_t)v11, &qword_1ED78F4D8);
  if (qword_1ED78F670 != -1)
LABEL_33:
    swift_once();
  v32 = sub_1C13086A8();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v25 = sub_1C130869C();
  v33 = sub_1C1308900();
  if (os_log_type_enabled(v25, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    aBlock = v35;
    *(_DWORD *)v34 = 136446210;
    swift_bridgeObjectRetain();
    v76 = sub_1C13044AC(a1, a2, &aBlock);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v25, v33, "Budget does not exist; not reducing budget for %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v35, -1, -1);
    v28 = v34;
    goto LABEL_12;
  }

  swift_bridgeObjectRelease_n();
}

uint64_t sub_1C12D816C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1C1308714();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C130872C();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1308738();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (void *)v3[6];
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v20 = v19;
  LOBYTE(v19) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    v23 = v3[36];
    v22 = v3[37];
    __swift_project_boxed_opaque_existential_1(v3 + 33, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, a2, v23, v22);
    v24 = type metadata accessor for Budget();
    LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24);
    result = sub_1C12CA4C8((uint64_t)v14, &qword_1ED78F4D8);
    if ((_DWORD)v22 != 1)
    {
      v25 = v3[36];
      v26 = v3[37];
      __swift_project_boxed_opaque_existential_1(v3 + 33, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 32))(a1, a2, v25, v26);
      aBlock[4] = sub_1C12DD86C;
      aBlock[5] = v3;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C12E8494;
      aBlock[3] = &block_descriptor_29;
      v27 = _Block_copy(aBlock);
      swift_retain();
      sub_1C1308720();
      v34 = MEMORY[0x1E0DEE9D8];
      sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
      sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
      v28 = v33;
      sub_1C1308984();
      MEMORY[0x1C3BA9EF8](0, v11, v8, v27);
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v28);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12D84A0(uint64_t *a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  void (*v24)(_QWORD);
  char v25;
  void (*v26)(_QWORD *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t result;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint8_t *v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t (*v67)(_QWORD *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80;
  unsigned int v81;
  void (*v82)(_QWORD *, _QWORD, uint64_t);
  uint64_t v83;
  void (*v84)(_QWORD *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t aBlock;
  uint64_t v88;
  uint64_t (*v89)(uint64_t);
  void *v90;
  uint64_t (*v91)();
  _QWORD *v92;

  v4 = v3;
  v84 = a3;
  v85 = a2;
  v6 = sub_1C1308714();
  v79 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v78 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C130872C();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1C1308468();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Budget();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v69 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v74 = (uint64_t)&v64 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C1308738();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = *a1;
  v68 = a1[1];
  v23 = (void *)v3[6];
  *v22 = v23;
  v24 = *(void (**)(_QWORD))(v20 + 104);
  v81 = *MEMORY[0x1E0DEF740];
  v82 = (void (*)(_QWORD *, _QWORD, uint64_t))v24;
  v24(v22);
  v80 = v23;
  v25 = sub_1C1308744();
  v26 = *(void (**)(_QWORD *, uint64_t))(v20 + 8);
  v83 = v19;
  v26(v22, v19);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_4;
  }
  v67 = (uint64_t (*)(_QWORD *, uint64_t))v26;
  v66 = v6;
  v28 = v4[36];
  v27 = v4[37];
  v65 = v4 + 33;
  __swift_project_boxed_opaque_existential_1(v4 + 33, v28);
  v26 = v84;
  (*(void (**)(uint64_t, void (*)(_QWORD *, uint64_t), uint64_t, uint64_t))(v27 + 16))(v85, v84, v28, v27);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11);
  result = sub_1C12CA4C8((uint64_t)v18, &qword_1ED78F4D8);
  if (v29 != 1)
    return result;
  v12 = v11;
  if (qword_1ED78F670 != -1)
    goto LABEL_11;
LABEL_4:
  v31 = sub_1C13086A8();
  __swift_project_value_buffer(v31, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v32 = sub_1C130869C();
  v33 = sub_1C1308900();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = v12;
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    aBlock = v36;
    *(_DWORD *)v35 = 136446210;
    swift_bridgeObjectRetain();
    v86 = sub_1C13044AC(v85, (unint64_t)v26, &aBlock);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v32, v33, "Adding activity push budget for %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v36, -1, -1);
    v37 = v35;
    v12 = v34;
    MEMORY[0x1C3BAA558](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v38 = v80;
  *v22 = v80;
  v39 = v83;
  v82(v22, v81, v83);
  v40 = v38;
  LOBYTE(v38) = sub_1C1308744();
  result = v67(v22, v39);
  if ((v38 & 1) != 0)
  {
    v41 = v4[11];
    v42 = v4[12];
    __swift_project_boxed_opaque_existential_1(v4 + 8, v41);
    v43 = v70;
    v44 = v68;
    aBlock = v70;
    v88 = v68;
    (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v42 + 16))(&v86, &aBlock, v41, v42);
    LOBYTE(v42) = v86;
    v45 = (void (*)(_QWORD, _QWORD))v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = v71;
    sub_1C1308450();
    LOBYTE(aBlock) = v42;
    sub_1C12D48E0((unsigned __int8 *)&aBlock);
    v83 = v47;
    LOBYTE(aBlock) = v42;
    sub_1C12D4818((unsigned __int8 *)&aBlock);
    v49 = v48;
    LOBYTE(aBlock) = v42;
    sub_1C12D48E0((unsigned __int8 *)&aBlock);
    v51 = v50;
    v52 = (uint64_t)v69;
    sub_1C13083E4();
    v53 = (int *)v12;
    v54 = *(int *)(v12 + 20);
    *(_QWORD *)(v52 + v54) = 0;
    v55 = (uint64_t *)(v52 + v53[7]);
    *v55 = v43;
    v55[1] = v44;
    v56 = (_QWORD *)(v52 + v53[6]);
    *v56 = v85;
    v56[1] = v45;
    *(_BYTE *)(v52 + v53[9]) = 1;
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 40))(v52, v46, v73);
    *(_QWORD *)(v52 + v54) = v83;
    *(_QWORD *)(v52 + v53[10]) = v49;
    *(_QWORD *)(v52 + v53[11]) = v51;
    *(_BYTE *)(v52 + v53[8]) = v42;
    v57 = v74;
    sub_1C12C2D20(v52, v74, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v58 = v4[36];
    v59 = v4[37];
    __swift_project_boxed_opaque_existential_1(v65, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 24))(v57, v58, v59);
    v91 = sub_1C12DD86C;
    v92 = v4;
    aBlock = MEMORY[0x1E0C809B0];
    v88 = 1107296256;
    v89 = sub_1C12E8494;
    v90 = &block_descriptor_53;
    v60 = _Block_copy(&aBlock);
    swift_retain();
    v61 = v75;
    sub_1C1308720();
    v86 = MEMORY[0x1E0DEE9D8];
    sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
    sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
    v62 = v78;
    v63 = v66;
    sub_1C1308984();
    MEMORY[0x1C3BA9EF8](0, v61, v62, v60);
    _Block_release(v60);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v63);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v61, v77);
    sub_1C12DD884(v57, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12D8BC8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v33;
  _QWORD v34[2];
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[4];
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v1 = v0;
  v2 = sub_1C1308654();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1308660();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1308468();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v34 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v34 - v13;
  v15 = sub_1C1308738();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (void *)v1[6];
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v20 = v19;
  LOBYTE(v19) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  v38 = v4;
  v4 = (uint64_t)(v1 + 27);
  swift_beginAccess();
  sub_1C12DD958((uint64_t)(v1 + 27), (uint64_t)&v46, &qword_1ED78ED68);
  if (*((_QWORD *)&v47 + 1))
  {
    sub_1C12C3158((uint64_t)&v46, (uint64_t)v45);
    sub_1C12CA4C8((uint64_t)&v46, &qword_1ED78ED68);
    __swift_project_boxed_opaque_existential_1(v45, v45[3]);
    sub_1C13086B4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  else
  {
    sub_1C12CA4C8((uint64_t)&v46, &qword_1ED78ED68);
  }
  v48 = 0;
  v46 = 0u;
  v47 = 0u;
  swift_beginAccess();
  sub_1C12DD99C((uint64_t)&v46, (uint64_t)(v1 + 27));
  swift_endAccess();
  sub_1C12DACE4((uint64_t)v14);
  sub_1C13083F0();
  v21 = sub_1C1308414();
  v22 = *(void (**)(char *, uint64_t))(v7 + 8);
  v22(v12, v6);
  if ((v21 & 1) == 0)
    return ((uint64_t (*)(char *, uint64_t))v22)(v14, v6);
  v37 = v22;
  if (qword_1ED78F670 != -1)
    goto LABEL_13;
LABEL_7:
  v23 = sub_1C13086A8();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED78F650);
  v24 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v25 = v44;
  v24(v44, v14, v6);
  v26 = sub_1C130869C();
  v27 = sub_1C1308900();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_QWORD *)&v46 = v35;
    v36 = v24;
    *(_DWORD *)v28 = 136446210;
    v34[1] = v28 + 4;
    sub_1C12CE1CC((unint64_t *)&qword_1ED78ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v29 = sub_1C1308A80();
    v45[0] = sub_1C13044AC(v29, v30, (uint64_t *)&v46);
    v24 = v36;
    sub_1C1308960();
    swift_bridgeObjectRelease();
    v37(v44, v6);
    _os_log_impl(&dword_1C12C0000, v26, v27, "Scheduling wake to re-evaluate push subscription budgets at %{public}s", v28, 0xCu);
    v31 = v35;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v31, -1, -1);
    MEMORY[0x1C3BAA558](v28, -1, -1);
  }
  else
  {
    v37(v25, v6);
  }

  v24(v12, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v41, *MEMORY[0x1E0D8CD30], v40);
  v33 = v42;
  sub_1C1308648();
  __swift_project_boxed_opaque_existential_1(v1 + 13, v1[16]);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1C130866C();
  swift_release_n();
  swift_beginAccess();
  sub_1C12DD99C((uint64_t)&v46, v4);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v38);
  return ((uint64_t (*)(char *, uint64_t))v37)(v14, v6);
}

uint64_t BudgetServer.budget(subscriptionID:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  return sub_1C1308930();
}

uint64_t sub_1C12D91C4()
{
  return sub_1C12DD13C();
}

Swift::Bool __swiftcall BudgetServer.hasExceededMaximumPushToStartBudget(subscriptionID:)(Swift::String subscriptionID)
{
  Swift::Bool v2;

  sub_1C1308930();
  return v2;
}

uint64_t sub_1C12D9234@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL *v25;

  v23 = a2;
  v24 = a3;
  v25 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Budget();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1308738();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (void *)a1[6];
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v19 = a1[36];
    v20 = a1[37];
    __swift_project_boxed_opaque_existential_1(a1 + 33, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16))(v23, v24, v19, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      result = sub_1C12CA4C8((uint64_t)v7, &qword_1ED78F4D8);
      v21 = 0;
    }
    else
    {
      sub_1C12C2D20((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v21 = *(_QWORD *)&v11[*(int *)(v8 + 20)] < 1;
      result = sub_1C12DD884((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    }
    *v25 = v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12D941C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12D9234(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

Swift::Bool __swiftcall BudgetServer.hasExceededMaximumActivityBudget(subscriptionID:level:)(Swift::String subscriptionID, SessionPushNotifications::Budget::Level level)
{
  Swift::Bool v3;

  sub_1C1308930();
  return v3;
}

uint64_t sub_1C12D949C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1C12DD1B8(a1);
}

uint64_t sub_1C12D94B0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  unsigned __int8 v31;

  v4 = v3;
  v30 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Budget();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1C1308738();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = &v28[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = *a3;
  v18 = (void *)v4[6];
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v19 = v18;
  LOBYTE(v18) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v21 = v4[36];
  v22 = v4[37];
  __swift_project_boxed_opaque_existential_1(v4 + 33, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, v30, v21, v22);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C12CA4C8((uint64_t)v9, &qword_1ED78F4D8);
    return 0;
  }
  result = sub_1C12C2D20((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  v23 = *(_QWORD *)&v13[*(int *)(v10 + 44)];
  v24 = *(_QWORD *)&v13[*(int *)(v10 + 20)];
  v25 = v23 - v24;
  if (__OFSUB__(v23, v24))
    goto LABEL_8;
  v31 = v29;
  sub_1C12D48E0(&v31);
  v27 = v26;
  sub_1C12DD884((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  return v25 >= v27;
}

uint64_t sub_1C12D96C4()
{
  return sub_1C12D4720();
}

uint64_t sub_1C12D96E4()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED78);
  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12D9740()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12D979C()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12D9800()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  return sub_1C1308930();
}

uint64_t sub_1C12D9864(uint64_t a1)
{
  return BudgetServer.handle(pushEvent:)(a1);
}

SessionPushNotifications::Priority __swiftcall BudgetServer.priority(topic:defaultPriority:)(SessionPushNotifications::Topic topic, SessionPushNotifications::Priority defaultPriority)
{
  return sub_1C1308930();
}

uint64_t sub_1C12D98E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, unsigned __int8 *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  unsigned __int8 v16;
  unsigned __int8 v17;

  v9 = a1[21];
  v10 = a1[22];
  __swift_project_boxed_opaque_existential_1(a1 + 18, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v15, v9, v10);
  sub_1C12D6778();
  v13 = a2;
  v14 = a3;
  v16 = a4;
  sub_1C12D9A8C(&v13, &v16, v15, (char *)&v17);
  LODWORD(v9) = v17;
  v13 = a2;
  v14 = a3;
  v16 = a4;
  sub_1C12D9EA0(&v13, &v16, v15, (char *)&v17);
  v11 = v17;
  if ((_DWORD)v9 != 3)
    __asm { BR              X9 }
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (v11 == 3)
    *a5 = a4;
  else
    *a5 = v11;
  return result;
}

uint64_t sub_1C12D9A24@<X0>(unsigned __int8 *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12D98E4(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

unint64_t sub_1C12D9A48()
{
  unint64_t result;

  result = qword_1EF6D7F60;
  if (!qword_1EF6D7F60)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for DeviceActivityLevel, &type metadata for DeviceActivityLevel);
    atomic_store(result, (unint64_t *)&qword_1EF6D7F60);
  }
  return result;
}

uint64_t sub_1C12D9A8C@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X2>, char *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[12];
  int v51;
  _BYTE *v52;
  _BYTE *v53;
  _QWORD *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;

  v54 = a3;
  v61 = a4;
  v7 = type metadata accessor for Budget();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  MEMORY[0x1E0C80A78](v7);
  v55 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v52 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v53 = &v50[-v12];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED80);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v50[-v17];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = &v50[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v24 = &v50[-v23];
  v25 = sub_1C1308738();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = &v50[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = *a1;
  v30 = a1[1];
  v56 = v29;
  v51 = *a2;
  v31 = (void *)v4[6];
  *v28 = v31;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x1E0DEF740], v25);
  v32 = v31;
  LOBYTE(v31) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v26 + 8))(v28, v25);
  if ((v31 & 1) != 0)
  {
    v34 = v4[36];
    v35 = v4[37];
    __swift_project_boxed_opaque_existential_1(v4 + 33, v34);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    swift_bridgeObjectRetain();
    sub_1C12DA8D0(v36, v56, v30, (uint64_t)v18);
    swift_bridgeObjectRelease();
    sub_1C12DD958((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1ED78ED80);
    v37 = v58;
    v38 = 1;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v57 + 48))(v16, 1, v58) != 1)
    {
      v39 = (uint64_t)v16;
      v40 = v53;
      sub_1C12DD828(v39, (uint64_t)v53, &qword_1ED78F578);
      v41 = *(int *)(v37 + 48);
      v42 = (uint64_t)&v52[v41];
      sub_1C12C2D74((uint64_t)&v40[v41], (uint64_t)&v52[v41], (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      sub_1C12C2D20(v42, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      sub_1C12CA4C8((uint64_t)v40, &qword_1ED78F578);
      v38 = 0;
    }
    v43 = v59;
    v44 = v38;
    v45 = v60;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v24, v44, 1, v60);
    sub_1C12CA4C8((uint64_t)v18, (uint64_t *)&unk_1ED78ED80);
    sub_1C12DD958((uint64_t)v24, (uint64_t)v22, &qword_1ED78F4D8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v22, 1, v45) == 1)
    {
      sub_1C12CA4C8((uint64_t)v24, &qword_1ED78F4D8);
      result = sub_1C12CA4C8((uint64_t)v22, &qword_1ED78F4D8);
      v46 = 3;
    }
    else
    {
      v47 = v55;
      sub_1C12C2D20((uint64_t)v22, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v48 = v54[3];
      v49 = v54[4];
      __swift_project_boxed_opaque_existential_1(v54, v48);
      v62 = v51;
      (*(void (**)(uint64_t *__return_ptr, char *, _BYTE *, uint64_t, uint64_t))(v49 + 8))(&v63, &v62, v47, v48, v49);
      sub_1C12DD884((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      result = sub_1C12CA4C8((uint64_t)v24, &qword_1ED78F4D8);
      v46 = v63;
    }
    *v61 = v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12D9EA0@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X2>, char *a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void *v29;
  id v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  unsigned __int8 v112[24];

  v5 = v4;
  v93 = a3;
  v95 = a4;
  v92 = sub_1C1308468();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v9 = MEMORY[0x1E0C80A78](v106);
  v105 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v104 = (uint64_t)&v85 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v103 = (_QWORD **)((char *)&v85 - v14);
  MEMORY[0x1E0C80A78](v13);
  v102 = (char *)&v85 - v15;
  v107 = type metadata accessor for Budget();
  v110 = *(_QWORD *)(v107 - 8);
  v16 = MEMORY[0x1E0C80A78](v107);
  v89 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v96 = (char *)&v85 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v85 - v20;
  v22 = sub_1C1308738();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD **)((char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *a1;
  v27 = a1[1];
  v28 = *a2;
  v29 = (void *)v5[6];
  *v25 = v29;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x1E0DEF740], v22);
  v30 = v29;
  LOBYTE(v29) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v29 & 1) == 0)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  v88 = v28;
  v32 = v5[36];
  v33 = v5[37];
  __swift_project_boxed_opaque_existential_1(v5 + 33, v32);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
  swift_bridgeObjectRetain();
  v35 = sub_1C12DD668(v34, v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(v35 + 16);
  v87 = v26;
  v86 = v27;
  if (v36)
  {
    v85 = v5;
    *(_QWORD *)v112 = MEMORY[0x1E0DEE9D8];
    sub_1C12C7AAC(0, v36, 0);
    result = sub_1C12C8D48(v35);
    if ((result & 0x8000000000000000) == 0)
    {
      v38 = result;
      if (result < 1 << *(_BYTE *)(v35 + 32))
      {
        v39 = 0;
        v40 = v35 + 64;
        v94 = v35 + 80;
        v100 = v21;
        v101 = v35;
        v97 = v36;
        v98 = v37;
        v99 = v35 + 64;
        v41 = v102;
        while (1)
        {
          v42 = v38 >> 6;
          if ((*(_QWORD *)(v40 + 8 * (v38 >> 6)) & (1 << v38)) == 0)
            goto LABEL_38;
          if (*(_DWORD *)(v35 + 36) != (_DWORD)v37)
            goto LABEL_39;
          v108 = v39;
          v43 = v106;
          v44 = (uint64_t)v41 + *(int *)(v106 + 48);
          v45 = *(_QWORD *)(v35 + 56);
          v46 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v38);
          v48 = *v46;
          v47 = v46[1];
          v109 = *(_QWORD *)(v110 + 72);
          sub_1C12C2D74(v45 + v109 * v38, v44, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          *v41 = v48;
          v41[1] = v47;
          v49 = (uint64_t)v103;
          *v103 = v48;
          *(_QWORD *)(v49 + 8) = v47;
          sub_1C12C2D74(v44, v49 + *(int *)(v43 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v50 = v104;
          sub_1C12DD828(v49, v104, &qword_1ED78F578);
          swift_bridgeObjectRetain_n();
          sub_1C12CA4C8((uint64_t)v41, &qword_1ED78F578);
          v51 = *(int *)(v43 + 48);
          v52 = (uint64_t)v100;
          v53 = (uint64_t)&v105[v51];
          sub_1C12C2D74(v50 + v51, (uint64_t)&v105[v51], (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          sub_1C12C2D20(v53, v52, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          sub_1C12CA4C8(v50, &qword_1ED78F578);
          v54 = *(_QWORD *)v112;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C12C7AAC(0, *(_QWORD *)(v54 + 16) + 1, 1);
            v54 = *(_QWORD *)v112;
          }
          v56 = *(_QWORD *)(v54 + 16);
          v55 = *(_QWORD *)(v54 + 24);
          v35 = v101;
          if (v56 >= v55 >> 1)
          {
            sub_1C12C7AAC(v55 > 1, v56 + 1, 1);
            v54 = *(_QWORD *)v112;
          }
          *(_QWORD *)(v54 + 16) = v56 + 1;
          result = sub_1C12C2D20(v52, v54+ ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80))+ v56 * v109, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v57 = 1 << *(_BYTE *)(v35 + 32);
          if ((uint64_t)v38 >= v57)
            goto LABEL_40;
          v40 = v99;
          v58 = *(_QWORD *)(v99 + 8 * v42);
          if ((v58 & (1 << v38)) == 0)
            goto LABEL_41;
          LODWORD(v37) = v98;
          if (*(_DWORD *)(v35 + 36) != (_DWORD)v98)
            goto LABEL_43;
          v59 = v58 & (-2 << (v38 & 0x3F));
          if (v59)
          {
            v38 = __clz(__rbit64(v59)) | v38 & 0xFFFFFFFFFFFFFFC0;
            v60 = v97;
            goto LABEL_24;
          }
          v61 = v42 + 1;
          v62 = (unint64_t)(v57 + 63) >> 6;
          v60 = v97;
          if (v42 + 1 < v62)
          {
            v63 = *(_QWORD *)(v99 + 8 * v61);
            if (v63)
            {
LABEL_22:
              v38 = __clz(__rbit64(v63)) + (v61 << 6);
              goto LABEL_24;
            }
            while (v62 - 2 != v42)
            {
              v63 = *(_QWORD *)(v94 + 8 * v42++);
              if (v63)
              {
                v61 = v42 + 1;
                goto LABEL_22;
              }
            }
          }
          v38 = 1 << *(_BYTE *)(v35 + 32);
LABEL_24:
          v39 = v108 + 1;
          if (v108 + 1 == v60)
          {
            swift_release();
            goto LABEL_30;
          }
          if ((v38 & 0x8000000000000000) != 0 || (uint64_t)v38 >= v57)
            goto LABEL_42;
        }
      }
    }
    goto LABEL_42;
  }
  swift_release();
  v54 = MEMORY[0x1E0DEE9D8];
LABEL_30:
  v64 = *(_QWORD *)(v54 + 16);
  v65 = (uint64_t)v96;
  if (v64)
  {
    v66 = v54 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
    v67 = *(_QWORD *)(v110 + 72);
    swift_bridgeObjectRetain();
    v68 = 0;
    while (1)
    {
      result = sub_1C12C2D74(v66, v65, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v69 = *(_QWORD *)(v65 + *(int *)(v107 + 20));
      v70 = __OFADD__(v68, v69);
      v68 += v69;
      if (v70)
        break;
      sub_1C12DD884(v65, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v66 += v67;
      if (!--v64)
      {
        swift_bridgeObjectRelease_n();
        v71 = v86;
        swift_bridgeObjectRetain();
        v72 = v90;
        sub_1C1308450();
        v112[0] = 1;
        sub_1C12D4818(v112);
        v74 = v73;
        v112[0] = 1;
        sub_1C12D48E0(v112);
        v76 = v75;
        v77 = (uint64_t)v89;
        sub_1C13083E4();
        v78 = (int *)v107;
        v79 = *(int *)(v107 + 20);
        *(_QWORD *)(v77 + v79) = 0;
        v80 = (uint64_t *)(v77 + v78[7]);
        *v80 = v87;
        v80[1] = v71;
        v81 = (_QWORD *)(v77 + v78[6]);
        *v81 = 0x7461676572676761;
        v81[1] = 0xEF74656764754265;
        *(_BYTE *)(v77 + v78[9]) = 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v91 + 40))(v77, v72, v92);
        *(_QWORD *)(v77 + v79) = v68;
        *(_QWORD *)(v77 + v78[10]) = v74;
        *(_QWORD *)(v77 + v78[11]) = v76;
        *(_BYTE *)(v77 + v78[8]) = 1;
        sub_1C12C2D20(v77, v65, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v82 = v93[3];
        v83 = v93[4];
        __swift_project_boxed_opaque_existential_1(v93, v82);
        v111 = v88;
        (*(void (**)(unsigned __int8 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v83 + 8))(v112, &v111, v65, v82, v83);
        result = sub_1C12DD884(v65, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v84 = v112[0];
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  result = swift_bridgeObjectRelease();
  v84 = 3;
LABEL_36:
  *v95 = v84;
  return result;
}

uint64_t sub_1C12DA668()
{
  return sub_1C1308930();
}

uint64_t sub_1C12DA6C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12CD224();
  *a1 = result;
  return result;
}

uint64_t sub_1C12DA6F0(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C12DA720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12D4720();
  *a1 = result;
  return result;
}

uint64_t sub_1C12DA748(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t storeEnumTagSinglePayload for DeviceActivityLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C12DA7C4 + 4 * byte_1C1309AC9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C12DA7F8 + 4 * byte_1C1309AC4[v4]))();
}

uint64_t sub_1C12DA7F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12DA800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12DA808);
  return result;
}

uint64_t sub_1C12DA814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12DA81CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C12DA820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12DA828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceActivityLevel()
{
  return &type metadata for DeviceActivityLevel;
}

uint64_t type metadata accessor for BudgetServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for BudgetServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BudgetServer.budgets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of BudgetServer.pushPriorityChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of BudgetServer.pushPriorityChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of BudgetServer.pushPriorityChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of BudgetServer.budgetLevelExceededPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of BudgetServer.budgetLevelExceededPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of BudgetServer.budgetLevelExceededPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of BudgetServer.__allocating_init(store:budgetLevelResolver:budgetEnforcementPolicyProvider:taskScheduler:windowDuration:maximumUpdateBudgetPerWindow:maximumPushToStartBudgetPerWindow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8 + 320))(a1, a2, a3, a4, a5, a6, a7, a8 & 1);
}

uint64_t sub_1C12DA8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;

  v47 = a4;
  v49 = a3;
  v52 = a2;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v46 = *(_QWORD *)(v56 - 8);
  v5 = MEMORY[0x1E0C80A78](v56);
  v48 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v5);
  v54 = (uint64_t *)((char *)&v46 - v8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v46 - v10);
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v46 - v12;
  v13 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v51 = (unint64_t)(v14 + 63) >> 6;
  v55 = a1;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (v16)
  {
    v20 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v57 = v18;
    v21 = v20 | (v18 << 6);
LABEL_23:
    v26 = *(_QWORD *)(v55 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = type metadata accessor for Budget();
    v31 = v26 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v21;
    v32 = v56;
    v33 = v53;
    sub_1C12C2D74(v31, (uint64_t)&v53[*(int *)(v56 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    *v33 = v28;
    v33[1] = v29;
    sub_1C12DD828((uint64_t)v33, (uint64_t)v11, &qword_1ED78F578);
    v34 = *(int *)(v32 + 48);
    v35 = v54;
    v36 = (uint64_t)v54 + v34;
    v37 = (uint64_t)v11 + v34;
    v38 = v11[1];
    *v54 = *v11;
    v35[1] = v38;
    sub_1C12C2D74((uint64_t)v11 + v34, v36, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    LOBYTE(v28) = *(_BYTE *)(v36 + *(int *)(v30 + 36));
    swift_bridgeObjectRetain();
    sub_1C12DD884(v36, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    if ((v28 & 1) == 0)
    {
      v39 = v48;
      v40 = (uint64_t)v48 + *(int *)(v56 + 48);
      v41 = v11[1];
      *v48 = *v11;
      v39[1] = v41;
      sub_1C12C2D74(v37, v40, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v42 = (uint64_t *)(v40 + *(int *)(v30 + 28));
      v44 = *v42;
      v43 = v42[1];
      swift_bridgeObjectRetain();
      sub_1C12DD884(v40, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      if (v44 == v52 && v43 == v49)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      v19 = sub_1C1308A98();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        swift_release();
LABEL_29:
        v45 = v47;
        sub_1C12DD828((uint64_t)v11, v47, &qword_1ED78F578);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v45, 0, 1, v56);
        return swift_bridgeObjectRelease();
      }
    }
    result = sub_1C12CA4C8((uint64_t)v11, &qword_1ED78F578);
    v18 = v57;
  }
  v22 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v22 >= v51)
    goto LABEL_27;
  v23 = *(_QWORD *)(v50 + 8 * v22);
  v24 = v18 + 1;
  if (v23)
    goto LABEL_22;
  v24 = v18 + 2;
  if (v18 + 2 >= v51)
    goto LABEL_27;
  v23 = *(_QWORD *)(v50 + 8 * v24);
  if (v23)
    goto LABEL_22;
  v24 = v18 + 3;
  if (v18 + 3 >= v51)
    goto LABEL_27;
  v23 = *(_QWORD *)(v50 + 8 * v24);
  if (v23)
    goto LABEL_22;
  v24 = v18 + 4;
  if (v18 + 4 >= v51)
    goto LABEL_27;
  v23 = *(_QWORD *)(v50 + 8 * v24);
  if (v23)
    goto LABEL_22;
  v25 = v18 + 5;
  if (v18 + 5 >= v51)
  {
LABEL_27:
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, 1, 1, v56);
    return swift_bridgeObjectRelease();
  }
  v23 = *(_QWORD *)(v50 + 8 * v25);
  v24 = v18 + 5;
  if (v23)
  {
LABEL_22:
    v16 = (v23 - 1) & v23;
    v57 = v24;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v51)
      goto LABEL_27;
    v23 = *(_QWORD *)(v50 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C12DACE4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];

  v3 = sub_1C1308468();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C1308738();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = (void *)v1[6];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v14 = v1[36];
    v15 = v1[37];
    __swift_project_boxed_opaque_existential_1(v1 + 33, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    sub_1C13083F0();
    sub_1C12DB458((uint64_t)v6, v16, a1);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12DAE40()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  _QWORD aBlock[6];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (qword_1ED78F670 != -1)
      swift_once();
    v2 = sub_1C13086A8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED78F650);
    v3 = sub_1C130869C();
    v4 = sub_1C1308900();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1C12C0000, v3, v4, "Waking to re-evaluate push subscription budgets", v5, 2u);
      MEMORY[0x1C3BAA558](v5, -1, -1);
    }

    v6 = *(NSObject **)(v1 + 48);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1C12DD9EC;
    *(_QWORD *)(v7 + 24) = v1;
    aBlock[4] = sub_1C12DDA10;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C12CDDC4;
    aBlock[3] = &block_descriptor_61;
    v8 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v6, v8);
    swift_release();
    _Block_release(v8);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v6 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1C12DB024@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v43;
  char *v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v60 = a3;
  v59 = a1;
  v4 = sub_1C1308468();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v52 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v52 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v52 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v52 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v52 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v21 = MEMORY[0x1E0C80A78](v20);
  v52 = (_QWORD **)((char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (_QWORD **)((char *)&v52 - v24);
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (_QWORD **)((char *)&v52 - v27);
  v58 = v26;
  v29 = *(int *)(v26 + 48);
  v30 = (char *)&v52 + v29 - v27;
  v31 = (uint64_t)a2 + v29;
  v32 = *a2;
  v33 = a2[1];
  v56 = a2;
  *v28 = v32;
  v28[1] = v33;
  v57 = v31;
  sub_1C12C2D74(v31, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  sub_1C1308450();
  LOBYTE(a2) = sub_1C1308408();
  v34 = *(void (**)(char *, uint64_t))(v5 + 8);
  v34(v14, v4);
  v61 = v5;
  if ((a2 & 1) != 0)
    sub_1C13083E4();
  else
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v17, v30, v4);
  type metadata accessor for Budget();
  sub_1C1308420();
  v34(v17, v4);
  sub_1C12DD884((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  sub_1C13083E4();
  v35 = sub_1C1308408();
  v34(v14, v4);
  v34(v19, v4);
  if ((v35 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v59, v4);
  v36 = v57;
  v37 = (uint64_t)v25 + *(int *)(v58 + 48);
  v38 = v56;
  v39 = v56[1];
  *v25 = *v56;
  v25[1] = v39;
  sub_1C12C2D74(v36, v37, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  sub_1C1308450();
  v40 = sub_1C1308408();
  v34(v14, v4);
  v41 = v54;
  if ((v40 & 1) != 0)
    sub_1C13083E4();
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v54, v37, v4);
  v43 = v59;
  v44 = v55;
  sub_1C1308420();
  v34(v41, v4);
  sub_1C12DD884(v37, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  v45 = sub_1C1308414();
  v34(v44, v4);
  if ((v45 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v43, v4);
  v46 = v57;
  v47 = v52;
  v48 = (uint64_t)v52 + *(int *)(v58 + 48);
  v49 = v38[1];
  *v52 = *v38;
  v47[1] = v49;
  sub_1C12C2D74(v46, v48, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  sub_1C1308450();
  v50 = sub_1C1308408();
  v34(v14, v4);
  v51 = v53;
  if ((v50 & 1) != 0)
    sub_1C13083E4();
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v53, v48, v4);
  sub_1C1308420();
  v34(v51, v4);
  return sub_1C12DD884(v48, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
}

uint64_t sub_1C12DB458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a3;
  v7 = sub_1C1308468();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v39 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v10 = MEMORY[0x1E0C80A78](v38);
  v12 = (uint64_t *)((char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v35 - v13);
  v40 = v8;
  v41 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, a1, v7);
  v15 = *(_QWORD *)(a2 + 64);
  v36 = a2 + 64;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v37 = (unint64_t)(v16 + 63) >> 6;
  v43 = a2;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v21 | (v20 << 6); ; i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    v26 = *(_QWORD *)(v43 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * i);
    v28 = *v27;
    v29 = v27[1];
    v30 = type metadata accessor for Budget();
    sub_1C12C2D74(v26 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * i, (uint64_t)v14 + *(int *)(v38 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    *v14 = v28;
    v14[1] = v29;
    sub_1C12DD828((uint64_t)v14, (uint64_t)v12, &qword_1ED78F578);
    swift_bridgeObjectRetain();
    v31 = v39;
    v32 = v42;
    sub_1C12DB024(v42, v12, v39);
    if (v3)
    {
      sub_1C12CA4C8((uint64_t)v12, &qword_1ED78F578);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v32, v41);
    }
    sub_1C12CA4C8((uint64_t)v12, &qword_1ED78F578);
    v34 = v40;
    v33 = v41;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v32, v41);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v31, v33);
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v37)
      return swift_release();
    v24 = *(_QWORD *)(v36 + 8 * v20);
    if (!v24)
      break;
LABEL_17:
    v18 = (v24 - 1) & v24;
  }
  v25 = v20 + 1;
  if (v20 + 1 >= v37)
    return swift_release();
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v20 + 2;
  if (v20 + 2 >= v37)
    return swift_release();
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v20 + 3;
  if (v20 + 3 >= v37)
    return swift_release();
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v20 + 4;
  if (v20 + 4 >= v37)
    return swift_release();
  v24 = *(_QWORD *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_16:
    v20 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v37)
      return swift_release();
    v24 = *(_QWORD *)(v36 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C12DB78C()
{
  swift_bridgeObjectRetain();
  sub_1C13086CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12DB7D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  __int128 v12;
  char v13;
  unint64_t v14;
  _UNKNOWN **v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  const char *v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;

  v2 = v1;
  v4 = sub_1C1308738();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v8 = a1[1];
  v10 = *(void **)(v2 + 48);
  *v7 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v11 = v10;
  LOBYTE(v10) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) != 0)
  {
    v13 = 0;
    v14 = 0;
    v52 = &v57;
    v15 = &off_1E7A82000;
    *(_QWORD *)&v12 = 136381187;
    v49 = v12;
    v51 = "; activityIdentifier: ";
    v48 = 0x80000001C130BB00;
    v47 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v12 = 136380931;
    v50 = v12;
    v53 = v2;
    v46 = v9;
    while (1)
    {
      v16 = v13;
      if (v14 >= (unint64_t)v15[223])
      {
        __break(1u);
        break;
      }
      LODWORD(v7) = *((unsigned __int8 *)&unk_1E7A826E8 + v14 + 32);
      v56 = (_QWORD *)v9;
      v57 = v8;
      LOBYTE(v55) = (_BYTE)v7;
      v17 = sub_1C12DBF68((uint64_t *)&v56, (unsigned __int8 *)&v55);
      if ((v18 & 1) != 0)
      {
        if (qword_1ED78F670 != -1)
          swift_once();
        v27 = sub_1C13086A8();
        __swift_project_value_buffer(v27, (uint64_t)qword_1ED78F650);
        swift_bridgeObjectRetain_n();
        v28 = sub_1C130869C();
        v29 = sub_1C1308900();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc();
          v54 = swift_slowAlloc();
          v55 = v54;
          *(_DWORD *)v30 = v50;
          v56 = (_QWORD *)v9;
          v57 = v8;
          swift_bridgeObjectRetain();
          sub_1C130884C();
          v56 = (_QWORD *)sub_1C13044AC((uint64_t)v56, v57, &v55);
          v31 = v9;
          v32 = (int)v7;
          LODWORD(v7) = (_DWORD)v52;
          sub_1C1308960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v30 + 12) = 2082;
          v33 = v32 == 0;
          v9 = v31;
          if (v33)
            v34 = 0x74536F5468737570;
          else
            v34 = 0x7974697669746361;
          if (v33)
            v35 = 0xEB00000000747261;
          else
            v35 = 0xE800000000000000;
          v56 = (_QWORD *)sub_1C13044AC(v34, v35, &v55);
          v15 = &off_1E7A82000;
          sub_1C1308960();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C12C0000, v28, v29, "Topic %{private}s has not used any budget for %{public}s", (uint8_t *)v30, 0x16u);
          v36 = v54;
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v36, -1, -1);
          MEMORY[0x1C3BAA558](v30, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        v19 = v17;
        if (v17 <= 0)
        {
          if (qword_1ED78F670 != -1)
            goto LABEL_43;
          goto LABEL_31;
        }
        LODWORD(v54) = (_DWORD)v7;
        v7 = (_QWORD *)v9;
        if (qword_1ED78F670 != -1)
          swift_once();
        v20 = sub_1C13086A8();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED78F650);
        swift_bridgeObjectRetain_n();
        v21 = sub_1C130869C();
        v22 = sub_1C1308900();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v55 = v24;
          v56 = v7;
          *(_DWORD *)v23 = v49;
          v57 = v8;
          swift_bridgeObjectRetain();
          sub_1C130884C();
          v56 = (_QWORD *)sub_1C13044AC((uint64_t)v56, v57, &v55);
          LODWORD(v7) = (_DWORD)v52;
          sub_1C1308960();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2082;
          if ((_DWORD)v54)
            v25 = 0x7974697669746361;
          else
            v25 = 0x74536F5468737570;
          if ((_DWORD)v54)
            v26 = 0xE800000000000000;
          else
            v26 = 0xEB00000000747261;
          v56 = (_QWORD *)sub_1C13044AC(v25, v26, &v55);
          v15 = &off_1E7A82000;
          sub_1C1308960();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 22) = 2050;
          v56 = (_QWORD *)v19;
          sub_1C1308960();
          _os_log_impl(&dword_1C12C0000, v21, v22, "Topic %{private}s has remaining budget for %{public}s of %{public}ld", (uint8_t *)v23, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v24, -1, -1);
          MEMORY[0x1C3BAA558](v23, -1, -1);

          v9 = v46;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v9 = (uint64_t)v7;
        }
      }
      v13 = 1;
      v14 = 1u;
      if ((v16 & 1) != 0)
        return 0;
    }
  }
  __break(1u);
LABEL_43:
  swift_once();
LABEL_31:
  v38 = sub_1C13086A8();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v39 = sub_1C130869C();
  v40 = sub_1C1308900();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v55 = v42;
    v56 = (_QWORD *)v9;
    *(_DWORD *)v41 = v50;
    v57 = v8;
    swift_bridgeObjectRetain();
    sub_1C130884C();
    v56 = (_QWORD *)sub_1C13044AC((uint64_t)v56, v57, &v55);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2082;
    if ((_DWORD)v7)
      v43 = 0x7974697669746361;
    else
      v43 = 0x74536F5468737570;
    if ((_DWORD)v7)
      v44 = 0xE800000000000000;
    else
      v44 = 0xEB00000000747261;
    v56 = (_QWORD *)sub_1C13044AC(v43, v44, &v55);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C12C0000, v39, v40, "Topic %{private}s is out of budget because %{public}s is exhausted", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v42, -1, -1);
    MEMORY[0x1C3BAA558](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 1;
}

uint64_t sub_1C12DBF68(uint64_t *a1, unsigned __int8 *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  int64_t v77;

  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v5 = MEMORY[0x1E0C80A78](v76);
  v65 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v5);
  v67 = (uint64_t *)((char *)&v64 - v8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v75 = (uint64_t *)((char *)&v64 - v10);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v64 - v12);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v64 - v14);
  v16 = sub_1C1308738();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = *a1;
  v66 = a1[1];
  v73 = *a2;
  v20 = (void *)v2[6];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v21 = v20;
  LOBYTE(v20) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v23 = v2[36];
    v24 = v2[37];
    __swift_project_boxed_opaque_existential_1(v2 + 33, v23);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    v26 = *(_QWORD *)(v25 + 64);
    v69 = v25 + 64;
    v27 = *(_BYTE *)(v25 + 32);
    v72 = 1;
    v28 = 1 << v27;
    v29 = -1;
    if (v28 < 64)
      v29 = ~(-1 << v28);
    v30 = v29 & v26;
    v70 = (unint64_t)(v28 + 63) >> 6;
    v74 = v25;
    result = swift_bridgeObjectRetain();
    v68 = 0;
    v31 = 0;
    v32 = v76;
    while (1)
    {
      if (v30)
      {
        v35 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        v77 = v31;
        v36 = v35 | (v31 << 6);
      }
      else
      {
        v37 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
          break;
        }
        if (v37 >= v70)
          goto LABEL_36;
        v38 = *(_QWORD *)(v69 + 8 * v37);
        v39 = v31 + 1;
        if (!v38)
        {
          v39 = v31 + 2;
          if (v31 + 2 >= v70)
            goto LABEL_36;
          v38 = *(_QWORD *)(v69 + 8 * v39);
          if (!v38)
          {
            v39 = v31 + 3;
            if (v31 + 3 >= v70)
              goto LABEL_36;
            v38 = *(_QWORD *)(v69 + 8 * v39);
            if (!v38)
            {
              v39 = v31 + 4;
              if (v31 + 4 >= v70)
                goto LABEL_36;
              v38 = *(_QWORD *)(v69 + 8 * v39);
              if (!v38)
              {
                v39 = v31 + 5;
                if (v31 + 5 >= v70)
                  goto LABEL_36;
                v38 = *(_QWORD *)(v69 + 8 * v39);
                if (!v38)
                {
                  v40 = v31 + 6;
                  if (v31 + 6 >= v70)
                  {
LABEL_36:
                    swift_release();
                    swift_bridgeObjectRelease();
                    return v68;
                  }
                  v38 = *(_QWORD *)(v69 + 8 * v40);
                  if (!v38)
                  {
                    while (1)
                    {
                      v39 = v40 + 1;
                      if (__OFADD__(v40, 1))
                        goto LABEL_40;
                      if (v39 >= v70)
                        goto LABEL_36;
                      v38 = *(_QWORD *)(v69 + 8 * v39);
                      ++v40;
                      if (v38)
                        goto LABEL_27;
                    }
                  }
                  v39 = v31 + 6;
                }
              }
            }
          }
        }
LABEL_27:
        v30 = (v38 - 1) & v38;
        v77 = v39;
        v36 = __clz(__rbit64(v38)) + (v39 << 6);
      }
      v41 = *(_QWORD *)(v74 + 56);
      v42 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * v36);
      v44 = *v42;
      v43 = v42[1];
      v45 = (int *)type metadata accessor for Budget();
      sub_1C12C2D74(v41 + *(_QWORD *)(*((_QWORD *)v45 - 1) + 72) * v36, (uint64_t)v15 + *(int *)(v32 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      *v15 = v44;
      v15[1] = v43;
      sub_1C12DD828((uint64_t)v15, (uint64_t)v13, &qword_1ED78F578);
      v46 = *(int *)(v32 + 48);
      v47 = v75;
      v48 = (uint64_t)v75 + v46;
      v49 = (uint64_t)v13 + v46;
      v50 = v13[1];
      *v75 = *v13;
      v47[1] = v50;
      sub_1C12C2D74((uint64_t)v13 + v46, v48, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      LODWORD(v41) = *(unsigned __int8 *)(v48 + v45[9]);
      swift_bridgeObjectRetain();
      sub_1C12DD884(v48, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      if (v73 == (_DWORD)v41)
      {
        v51 = v67;
        v52 = (uint64_t)v67 + *(int *)(v32 + 48);
        v53 = v13[1];
        *v67 = *v13;
        v51[1] = v53;
        sub_1C12C2D74(v49, v52, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        v54 = (uint64_t *)(v52 + v45[7]);
        v56 = *v54;
        v55 = v54[1];
        swift_bridgeObjectRetain();
        sub_1C12DD884(v52, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        if (v56 == v71 && v55 == v66)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = sub_1C1308A98();
          swift_bridgeObjectRelease();
          if ((v57 & 1) == 0)
            goto LABEL_7;
        }
        v58 = *(int *)(v76 + 48);
        v60 = *v13;
        v59 = v13[1];
        if ((v72 & 1) != 0)
        {
          v33 = v75;
          v34 = (uint64_t)v75 + v58;
          *v75 = v60;
          v33[1] = v59;
          sub_1C12C2D74(v49, (uint64_t)v33 + v58, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v68 = *(_QWORD *)(v34 + v45[5]);
          sub_1C12DD884(v34, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
        }
        else
        {
          v61 = v65;
          v62 = (uint64_t)v65 + v58;
          *v65 = v60;
          v61[1] = v59;
          sub_1C12C2D74(v49, (uint64_t)v61 + v58, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          v63 = *(_QWORD *)(v62 + v45[5]);
          result = sub_1C12DD884(v62, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
          if (__OFADD__(v68, v63))
            goto LABEL_38;
          v68 += v63;
        }
        v72 = 0;
      }
LABEL_7:
      result = sub_1C12CA4C8((uint64_t)v13, &qword_1ED78F578);
      v31 = v77;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

_QWORD *sub_1C12DC49C()
{
  _QWORD *result;

  type metadata accessor for IDSBagValueServer();
  swift_allocObject();
  result = sub_1C12DC4D8();
  off_1EF6D7F58 = result;
  return result;
}

_QWORD *sub_1C12DC4D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  _QWORD v12[2];

  v1 = v0;
  v2 = sub_1C1308924();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C130890C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v8);
  v12[0] = sub_1C12CD600();
  sub_1C1308720();
  v12[1] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  v0[2] = sub_1C1308948();
  v0[3] = sub_1C12E2570((uint64_t)&unk_1E7A82648);
  v0[4] = sub_1C12E2644((uint64_t)&unk_1E7A82698);
  type metadata accessor for UnfairLock();
  v9 = swift_allocObject();
  v10 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v9 + 16) = v10;
  *v10 = 0;
  v1[5] = v9;
  sub_1C12DC6F8();
  return v1;
}

uint64_t sub_1C12DC6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1C1308714();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C130872C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_1C12DD134;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12E8494;
  aBlock[3] = &block_descriptor_15;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1C1308720();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1C12DC8CC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[3];
  uint64_t v28;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForBagType_, 1);
  v3 = (void *)sub_1C13087C8();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1C1308978();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1C12DD828((uint64_t)&v25, (uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
  if (!v28)
  {
    sub_1C12CA4C8((uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    if (qword_1ED78F670 != -1)
      swift_once();
    v7 = sub_1C13086A8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED78F650);
    v8 = sub_1C130869C();
    v9 = sub_1C13088F4();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_47;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Could not load frequent burst window bag value";
    goto LABEL_46;
  }
  v5 = (void *)sub_1C13087C8();
  v6 = objc_msgSend(v2, sel_objectForKey_, v5);

  if (v6)
  {
    sub_1C1308978();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1C12DD828((uint64_t)&v25, (uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
  if (!v28)
  {
    sub_1C12CA4C8((uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    if (qword_1ED78F670 != -1)
      swift_once();
    v14 = sub_1C13086A8();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED78F650);
    v8 = sub_1C130869C();
    v9 = sub_1C13088F4();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_47;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Could not load reduced burst window bag value";
    goto LABEL_46;
  }
  v12 = (void *)sub_1C13087C8();
  v13 = objc_msgSend(v2, sel_objectForKey_, v12);

  if (v13)
  {
    sub_1C1308978();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1C12DD828((uint64_t)&v25, (uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
  if (!v28)
  {
    sub_1C12CA4C8((uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_29;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    if (qword_1ED78F670 != -1)
      swift_once();
    v17 = sub_1C13086A8();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED78F650);
    v8 = sub_1C130869C();
    v9 = sub_1C13088F4();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_47;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Could not load reduced burst bag value";
    goto LABEL_46;
  }
  v15 = (void *)sub_1C13087C8();
  v16 = objc_msgSend(v2, sel_objectForKey_, v15);

  if (v16)
  {
    sub_1C1308978();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1C12DD828((uint64_t)&v25, (uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
  if (!v28)
  {
    sub_1C12CA4C8((uint64_t)v27, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_42;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_42:
    if (qword_1ED78F670 != -1)
      swift_once();
    v23 = sub_1C13086A8();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED78F650);
    v8 = sub_1C130869C();
    v9 = sub_1C13088F4();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_47;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Could not load frequent burst bag value";
LABEL_46:
    _os_log_impl(&dword_1C12C0000, v8, v9, v11, v10, 2u);
    MEMORY[0x1C3BAA558](v10, -1, -1);
LABEL_47:

    goto LABEL_48;
  }
  if (qword_1ED78F670 != -1)
    swift_once();
  v18 = sub_1C13086A8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED78F650);
  v19 = sub_1C130869C();
  v20 = sub_1C1308900();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    *(_DWORD *)v21 = 134349824;
    v27[0] = v24;
    sub_1C1308960();
    *(_WORD *)(v21 + 12) = 2050;
    v27[0] = v24;
    sub_1C1308960();
    *(_WORD *)(v21 + 22) = 2050;
    v27[0] = v24;
    sub_1C1308960();
    *(_WORD *)(v21 + 32) = 2050;
    v27[0] = v24;
    sub_1C1308960();
    _os_log_impl(&dword_1C12C0000, v19, v20, "Fetched IDS bag values; frequent window: %{public}ld; reduced window: %{public}ld; frequent burst: %{public}ld; re"
      "duced burst: %{public}ld",
      (uint8_t *)v21,
      0x2Au);
    MEMORY[0x1C3BAA558](v21, -1, -1);
  }

  v22 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + 40) + 16);
  os_unfair_lock_lock(v22);
  sub_1C12DCFC0(a1, v24, v24, v24, v24);
  os_unfair_lock_unlock(v22);
LABEL_48:

}

uint64_t sub_1C12DCFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78EDA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1309C90;
  *(_BYTE *)(inited + 32) = 2;
  *(double *)(inited + 40) = (double)a2;
  *(_BYTE *)(inited + 48) = 1;
  *(double *)(inited + 56) = (double)a3;
  *(_BYTE *)(inited + 64) = 0;
  *(_QWORD *)(inited + 72) = 0x40AC200000000000;
  v11 = sub_1C12E2570(inited);
  swift_setDeallocating();
  *(_QWORD *)(a1 + 24) = v11;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5D8);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1309C90;
  *(_BYTE *)(v12 + 32) = 2;
  *(_QWORD *)(v12 + 40) = a4;
  *(_BYTE *)(v12 + 48) = 1;
  *(_QWORD *)(v12 + 56) = a5;
  *(_BYTE *)(v12 + 64) = 0;
  *(_QWORD *)(v12 + 72) = 15;
  v13 = sub_1C12E2644(v12);
  swift_setDeallocating();
  *(_QWORD *)(a1 + 32) = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12DD0D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IDSBagValueServer()
{
  return objc_opt_self();
}

void sub_1C12DD134()
{
  uint64_t v0;

  sub_1C12DC8CC(v0);
}

uint64_t sub_1C12DD13C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)v0[2];
  v2 = v0[3];
  v3 = v0[4];
  sub_1C12D6778();
  v4 = v1 + 33;
  v6 = v1[36];
  v5 = v1[37];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v3, v6, v5);
}

uint64_t sub_1C12DD1B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unsigned __int8 v6;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v6 = *(_BYTE *)(v1 + 40);
  result = sub_1C12D94B0(v3, v4, &v6);
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C12DD208@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = v1[36];
  v4 = v1[37];
  __swift_project_boxed_opaque_existential_1(v1 + 33, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  *a1 = result;
  return result;
}

uint64_t sub_1C12DD264(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;

  v45 = a2;
  v49 = a4;
  v50 = a5;
  v46 = a1;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F578);
  v6 = MEMORY[0x1E0C80A78](v57);
  v48 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v54 = (uint64_t *)((char *)&v44 - v9);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v44 - v10);
  v56 = type metadata accessor for Budget();
  v53 = *(_QWORD *)(v56 - 8);
  result = MEMORY[0x1E0C80A78](v56);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = 0;
  v15 = 0;
  v55 = a3;
  v18 = a3[8];
  v17 = a3 + 8;
  v16 = v18;
  v19 = 1 << *((_BYTE *)v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v51 = v17;
  v52 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      v58 = (v21 - 1) & v21;
      v59 = v15;
      v22 = __clz(__rbit64(v21)) | (v15 << 6);
      goto LABEL_21;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v23 >= v52)
      return sub_1C12E1EB4(v46, v45, v47, v55);
    v24 = v51[v23];
    v25 = v15 + 1;
    if (!v24)
    {
      v25 = v15 + 2;
      if (v15 + 2 >= v52)
        return sub_1C12E1EB4(v46, v45, v47, v55);
      v24 = v51[v25];
      if (!v24)
      {
        v25 = v15 + 3;
        if (v15 + 3 >= v52)
          return sub_1C12E1EB4(v46, v45, v47, v55);
        v24 = v51[v25];
        if (!v24)
          break;
      }
    }
LABEL_20:
    v58 = (v24 - 1) & v24;
    v59 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_21:
    v27 = (uint64_t *)(v55[6] + 16 * v22);
    v28 = *v27;
    v29 = v27[1];
    sub_1C12C2D74(v55[7] + *(_QWORD *)(v53 + 72) * v22, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v30 = v57;
    v31 = (uint64_t)v11 + *(int *)(v57 + 48);
    *v11 = v28;
    v11[1] = v29;
    sub_1C12C2D74((uint64_t)v14, v31, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v32 = *(int *)(v30 + 48);
    v33 = v54;
    v34 = (uint64_t)v54 + v32;
    *v54 = v28;
    v33[1] = v29;
    sub_1C12C2D74(v31, (uint64_t)v33 + v32, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    LODWORD(v30) = *(unsigned __int8 *)(v34 + *(int *)(v56 + 36));
    swift_bridgeObjectRetain_n();
    sub_1C12DD884(v34, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    if ((_DWORD)v30 != 1)
      goto LABEL_4;
    v35 = *(int *)(v57 + 48);
    v36 = v48;
    v37 = (uint64_t)v48 + v35;
    *v48 = v28;
    v36[1] = v29;
    sub_1C12C2D74(v31, (uint64_t)v36 + v35, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v38 = (uint64_t *)(v37 + *(int *)(v56 + 28));
    v40 = *v38;
    v39 = v38[1];
    swift_bridgeObjectRetain();
    sub_1C12DD884(v37, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    if (v40 == v49 && v39 == v50)
    {
      swift_bridgeObjectRelease();
LABEL_29:
      sub_1C12CA4C8((uint64_t)v11, &qword_1ED78F578);
      sub_1C12DD884((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v46 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      v43 = __OFADD__(v47++, 1);
      v15 = v59;
      v21 = v58;
      if (v43)
      {
        __break(1u);
        return sub_1C12E1EB4(v46, v45, v47, v55);
      }
    }
    else
    {
      v42 = sub_1C1308A98();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_29;
LABEL_4:
      sub_1C12CA4C8((uint64_t)v11, &qword_1ED78F578);
      sub_1C12DD884((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      result = swift_bridgeObjectRelease();
      v15 = v59;
      v21 = v58;
    }
  }
  v26 = v15 + 4;
  if (v15 + 4 >= v52)
    return sub_1C12E1EB4(v46, v45, v47, v55);
  v24 = v51[v26];
  if (v24)
  {
    v25 = v15 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v52)
      return sub_1C12E1EB4(v46, v45, v47, v55);
    v24 = v51[v25];
    ++v26;
    if (v24)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C12DD668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = sub_1C12DD264((_QWORD *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, (_QWORD *)a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = sub_1C12DD264((unint64_t *)v13, v9, (_QWORD *)a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAA558](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1C12DD828(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12DD86C()
{
  return sub_1C12CDD18();
}

uint64_t sub_1C12DD884(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C12DD8C4()
{
  return sub_1C12DB78C();
}

uint64_t sub_1C12DD8E8()
{
  return sub_1C12DB78C();
}

uint64_t objectdestroy_34Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12DD938()
{
  return sub_1C12DB78C();
}

uint64_t sub_1C12DD958(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C12DD99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12DD9E4()
{
  return sub_1C12DAE40();
}

uint64_t sub_1C12DD9EC()
{
  uint64_t v0;

  v0 = sub_1C12D6778();
  return sub_1C12D8BC8(v0);
}

uint64_t sub_1C12DDA00()
{
  return swift_deallocObject();
}

uint64_t sub_1C12DDA44@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_1C12D9A24(a1);
}

uint64_t sub_1C12DDA84@<X0>(BOOL *a1@<X8>)
{
  return sub_1C12D941C(a1);
}

uint64_t dispatch thunk of BudgetEnforcementPolicyProviding.budgetEnforcementPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BudgetEnforcementPolicyProviding.budgetEnforcementPolicyChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DeviceActivityMonitoring.deviceActivityStatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceActivityMonitoring.isActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BudgetLevelResolving.resolveBudgetLevel(topic:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C12DDAC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int64_t v32;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v32 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v32)
      goto LABEL_29;
    v12 = *(_QWORD *)(v31 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v32)
        goto LABEL_29;
      v12 = *(_QWORD *)(v31 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v32)
          goto LABEL_29;
        v12 = *(_QWORD *)(v31 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v32)
            goto LABEL_29;
          v12 = *(_QWORD *)(v31 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    v14 = *(_QWORD *)(a1 + 56) + 72 * v10;
    v15 = *(unsigned __int16 *)(v14 + 64) | (*(char *)(v14 + 66) << 16);
    if (v15 < 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
      v17 = v16[1];
      v18 = *(_QWORD *)(v14 + 8);
      v28 = *(_QWORD *)v14;
      v29 = *v16;
      v19 = *(_QWORD *)(v14 + 16);
      v20 = *(_QWORD *)(v14 + 24);
      v21 = *(_QWORD *)(v14 + 40);
      v26 = *(_QWORD *)(v14 + 48);
      v27 = *(_QWORD *)(v14 + 32);
      v25 = *(_QWORD *)(v14 + 56);
      v24 = *(_BYTE *)(v14 + 67);
      v22 = v19 == *a2 && v20 == a2[1];
      if (v22 || (result = sub_1C1308A98(), (result & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v19, v20, v27, v21, v26, v25, v15);
        swift_release();
        result = sub_1C12E3308((uint64_t)a2);
        *(_QWORD *)a3 = v29;
        *(_QWORD *)(a3 + 8) = v17;
        *(_QWORD *)(a3 + 16) = v28;
        *(_QWORD *)(a3 + 24) = v18;
        *(_QWORD *)(a3 + 32) = v19;
        *(_QWORD *)(a3 + 40) = v20;
        *(_QWORD *)(a3 + 48) = v27;
        *(_QWORD *)(a3 + 56) = v21;
        *(_QWORD *)(a3 + 64) = v26;
        *(_QWORD *)(a3 + 72) = v25;
        *(_DWORD *)(a3 + 80) = v15 & 0xFFFFFF | (v24 << 24);
        return result;
      }
    }
  }
  v13 = v11 + 4;
  if (v13 >= v32)
  {
LABEL_29:
    swift_release();
    result = sub_1C12E3308((uint64_t)a2);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_DWORD *)(a3 + 80) = 0;
    return result;
  }
  v12 = *(_QWORD *)(v31 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v32)
      goto LABEL_29;
    v12 = *(_QWORD *)(v31 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C12DDD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t i;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  BOOL v30;
  uint64_t v32;
  uint64_t v38;
  int64_t v39;
  unsigned __int8 v40;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v38 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v45)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v45 = i;
      v14 = v13 | (i << 6);
      goto LABEL_22;
    }
    v15 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v15 >= v39)
      goto LABEL_40;
    v16 = *(_QWORD *)(v38 + 8 * v15);
    v17 = i + 1;
    if (!v16)
    {
      v17 = i + 2;
      if (i + 2 >= v39)
        goto LABEL_40;
      v16 = *(_QWORD *)(v38 + 8 * v17);
      if (!v16)
      {
        v17 = i + 3;
        if (i + 3 >= v39)
          goto LABEL_40;
        v16 = *(_QWORD *)(v38 + 8 * v17);
        if (!v16)
        {
          v17 = i + 4;
          if (i + 4 >= v39)
            goto LABEL_40;
          v16 = *(_QWORD *)(v38 + 8 * v17);
          if (!v16)
          {
            v18 = i + 5;
            if (i + 5 >= v39)
            {
LABEL_40:
              swift_bridgeObjectRelease();
              swift_release();
              *(_DWORD *)(a8 + 80) = 0;
              *(_OWORD *)(a8 + 48) = 0u;
              *(_OWORD *)(a8 + 64) = 0u;
              *(_OWORD *)(a8 + 16) = 0u;
              *(_OWORD *)(a8 + 32) = 0u;
              *(_OWORD *)a8 = 0u;
              goto LABEL_43;
            }
            v16 = *(_QWORD *)(v38 + 8 * v18);
            v17 = i + 5;
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_21:
    v10 = (v16 - 1) & v16;
    v45 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_22:
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
    v20 = v19[1];
    v44 = *v19;
    v21 = *(_QWORD *)(a1 + 56) + 72 * v14;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v25 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 40);
    v48 = *(_QWORD *)(v21 + 32);
    v27 = *(_QWORD *)(v21 + 56);
    v47 = *(_QWORD *)(v21 + 48);
    v28 = *(unsigned __int16 *)(v21 + 64) | (*(char *)(v21 + 66) << 16);
    v40 = *(_BYTE *)(v21 + 67);
    v29 = *(_QWORD *)v21 == a2 && v23 == a3;
    if ((v29 || (sub_1C1308A98() & 1) != 0) && v28 < 0 && v28 == 1)
    {
      v30 = v48 == a4 && v26 == a5;
      if (v30 || (sub_1C1308A98() & 1) != 0)
      {
        if (v47 == a6 && v27 == a7)
        {
          v46 = v22;
          v27 = a7;
          v32 = a6;
LABEL_42:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C12C2BD8(v25, v24, v48, v26, v32, v27, v28);
          swift_bridgeObjectRelease();
          swift_release();
          *(_QWORD *)a8 = v44;
          *(_QWORD *)(a8 + 8) = v20;
          *(_QWORD *)(a8 + 16) = v46;
          *(_QWORD *)(a8 + 24) = v23;
          *(_QWORD *)(a8 + 32) = v25;
          *(_QWORD *)(a8 + 40) = v24;
          *(_QWORD *)(a8 + 48) = v48;
          *(_QWORD *)(a8 + 56) = v26;
          *(_QWORD *)(a8 + 64) = v32;
          *(_QWORD *)(a8 + 72) = v27;
          *(_DWORD *)(a8 + 80) = v28 & 0xFFFFFF | (v40 << 24);
LABEL_43:
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        if ((sub_1C1308A98() & 1) != 0)
        {
          v46 = v22;
          v32 = v47;
          goto LABEL_42;
        }
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v25, v24, v48, v26, v47, v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1C12C2CB0(v25, v24, v48, v26, v47, v27, v28);
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v39)
      goto LABEL_40;
    v16 = *(_QWORD *)(v38 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_21;
  }
LABEL_45:
  __break(1u);
  return result;
}

unint64_t sub_1C12DE130(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5A8);
  v2 = sub_1C1308A68();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = a1 + 64;
  while (1)
  {
    v22 = v4;
    v6 = *(_QWORD *)(v5 - 32);
    v7 = *(_QWORD *)(v5 - 24);
    v8 = *(_QWORD *)(v5 - 8);
    v24 = *(_QWORD *)(v5 - 16);
    v9 = *(_QWORD *)(v5 + 8);
    v11 = *(_QWORD *)(v5 + 16);
    v10 = *(_QWORD *)(v5 + 24);
    v12 = *(_QWORD *)(v5 + 40);
    v25 = *(_QWORD *)v5;
    v26 = *(_QWORD *)(v5 + 32);
    v13 = *(unsigned __int16 *)(v5 + 48) | (*(unsigned __int8 *)(v5 + 50) << 16);
    v23 = *(_BYTE *)(v5 + 51);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v25, v9, v11, v10, v26, v12, v13);
    result = sub_1C12C59E0(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = v3[7] + 72 * result;
    *(_QWORD *)v17 = v24;
    *(_QWORD *)(v17 + 8) = v8;
    *(_QWORD *)(v17 + 16) = v25;
    *(_QWORD *)(v17 + 24) = v9;
    *(_QWORD *)(v17 + 32) = v11;
    *(_QWORD *)(v17 + 40) = v10;
    *(_QWORD *)(v17 + 48) = v26;
    *(_QWORD *)(v17 + 56) = v12;
    *(_BYTE *)(v17 + 66) = BYTE2(v13);
    *(_WORD *)(v17 + 64) = v13;
    *(_BYTE *)(v17 + 67) = v23;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 88;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C12DE2FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8068);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D7D50);
  v6 = sub_1C1308A68();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1C12E3284(v12, (uint64_t)v5);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1C12C59E0(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for Budget();
    result = sub_1C12C2D20(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C12DE494(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE40);
  v2 = (_QWORD *)sub_1C1308A68();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C12C59E0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C12DE5B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FE48);
  v2 = (_QWORD *)sub_1C1308A68();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1C12C59E0(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C12DE6DC()
{
  return sub_1C12DEEC0(sub_1C12DE6E8);
}

uint64_t sub_1C12DE6E8(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  uint64_t v11;
  int v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  v25 = v7;
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v2 << 6); ; i = __clz(__rbit64(v14)) + (v2 << 6))
  {
    v11 = *(_QWORD *)(v1 + 56) + 72 * i;
    v12 = *(unsigned __int16 *)(v11 + 64) | (*(char *)(v11 + 66) << 16);
    if (v12 < 0)
    {
      if (v6)
        goto LABEL_4;
    }
    else
    {
      v17 = *(_QWORD *)(v11 + 16);
      v16 = *(_QWORD *)(v11 + 24);
      v28 = v8;
      v18 = *(_QWORD *)(v11 + 32);
      v19 = *(_QWORD *)(v11 + 40);
      v20 = *(_QWORD *)(v11 + 56);
      v26 = *(_QWORD *)(v11 + 48);
      v27 = *(_QWORD *)v11;
      v32 = *(_BYTE *)(v11 + 67);
      v31 = *(_QWORD *)(v11 + 8);
      swift_bridgeObjectRetain();
      v30 = v16;
      v29 = v18;
      v21 = v18;
      v8 = v28;
      sub_1C12C2BD8(v17, v16, v21, v19, v26, v20, v12);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1C12C7AD8(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v8 = v28;
      }
      v23 = *(_QWORD *)(v8 + 16);
      v22 = *(_QWORD *)(v8 + 24);
      if (v23 >= v22 >> 1)
      {
        result = sub_1C12C7AD8(v22 > 1, v23 + 1, 1);
        v8 = v28;
      }
      *(_QWORD *)(v8 + 16) = v23 + 1;
      v24 = v8 + 72 * v23;
      *(_QWORD *)(v24 + 32) = v27;
      *(_QWORD *)(v24 + 40) = v31;
      *(_QWORD *)(v24 + 48) = v17;
      *(_QWORD *)(v24 + 56) = v30;
      *(_QWORD *)(v24 + 64) = v29;
      *(_QWORD *)(v24 + 72) = v19;
      *(_QWORD *)(v24 + 80) = v26;
      *(_QWORD *)(v24 + 88) = v20;
      *(_BYTE *)(v24 + 98) = BYTE2(v12);
      *(_WORD *)(v24 + 96) = v12;
      *(_BYTE *)(v24 + 99) = v32;
      v7 = v25;
      if (v6)
        goto LABEL_4;
    }
LABEL_7:
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_29;
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_29;
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_29:
    swift_release();
    return v8;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C12DE97C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  v25 = v7;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v2 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v2 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    if (!v12)
      break;
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_19:
    v14 = *(_QWORD *)(v1 + 56) + 72 * v10;
    v15 = *(unsigned __int16 *)(v14 + 64) | (*(char *)(v14 + 66) << 16);
    if (v15 < 0 && !*(_WORD *)(v14 + 64))
    {
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      v28 = v8;
      v18 = *(_QWORD *)(v14 + 32);
      v19 = *(_QWORD *)(v14 + 40);
      v20 = *(_QWORD *)(v14 + 56);
      v26 = *(_QWORD *)(v14 + 48);
      v27 = *(_QWORD *)v14;
      v32 = *(_BYTE *)(v14 + 67);
      v31 = *(_QWORD *)(v14 + 8);
      swift_bridgeObjectRetain();
      v30 = v16;
      v29 = v18;
      v21 = v18;
      v8 = v28;
      sub_1C12C2BD8(v17, v16, v21, v19, v26, v20, v15);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1C12C7AD8(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v8 = v28;
      }
      v23 = *(_QWORD *)(v8 + 16);
      v22 = *(_QWORD *)(v8 + 24);
      if (v23 >= v22 >> 1)
      {
        result = sub_1C12C7AD8(v22 > 1, v23 + 1, 1);
        v8 = v28;
      }
      *(_QWORD *)(v8 + 16) = v23 + 1;
      v24 = v8 + 72 * v23;
      *(_QWORD *)(v24 + 32) = v27;
      *(_QWORD *)(v24 + 40) = v31;
      *(_QWORD *)(v24 + 48) = v17;
      *(_QWORD *)(v24 + 56) = v30;
      *(_QWORD *)(v24 + 64) = v29;
      *(_QWORD *)(v24 + 72) = v19;
      *(_QWORD *)(v24 + 80) = v26;
      *(_QWORD *)(v24 + 88) = v20;
      *(_BYTE *)(v24 + 98) = BYTE2(v15);
      *(_WORD *)(v24 + 96) = v15;
      *(_BYTE *)(v24 + 99) = v32;
      v7 = v25;
    }
  }
  v13 = v2 + 1;
  if (v2 + 1 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 2;
  if (v2 + 2 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 3;
  if (v2 + 3 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 4;
  if (v2 + 4 >= v7)
  {
LABEL_30:
    swift_release();
    return v8;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v2 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C12DEC10(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  v8 = MEMORY[0x1E0DEE9D8];
  v25 = v7;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v2 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v2 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    if (!v12)
      break;
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_19:
    v14 = *(_QWORD *)(v1 + 56) + 72 * v10;
    v15 = *(unsigned __int16 *)(v14 + 64) | (*(char *)(v14 + 66) << 16);
    if (v15 < 0 && *(_WORD *)(v14 + 64) == 1)
    {
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      v28 = v8;
      v18 = *(_QWORD *)(v14 + 32);
      v19 = *(_QWORD *)(v14 + 40);
      v20 = *(_QWORD *)(v14 + 56);
      v26 = *(_QWORD *)(v14 + 48);
      v27 = *(_QWORD *)v14;
      v32 = *(_BYTE *)(v14 + 67);
      v31 = *(_QWORD *)(v14 + 8);
      swift_bridgeObjectRetain();
      v30 = v16;
      v29 = v18;
      v21 = v18;
      v8 = v28;
      sub_1C12C2BD8(v17, v16, v21, v19, v26, v20, v15);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1C12C7AD8(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v8 = v28;
      }
      v23 = *(_QWORD *)(v8 + 16);
      v22 = *(_QWORD *)(v8 + 24);
      if (v23 >= v22 >> 1)
      {
        result = sub_1C12C7AD8(v22 > 1, v23 + 1, 1);
        v8 = v28;
      }
      *(_QWORD *)(v8 + 16) = v23 + 1;
      v24 = v8 + 72 * v23;
      *(_QWORD *)(v24 + 32) = v27;
      *(_QWORD *)(v24 + 40) = v31;
      *(_QWORD *)(v24 + 48) = v17;
      *(_QWORD *)(v24 + 56) = v30;
      *(_QWORD *)(v24 + 64) = v29;
      *(_QWORD *)(v24 + 72) = v19;
      *(_QWORD *)(v24 + 80) = v26;
      *(_QWORD *)(v24 + 88) = v20;
      *(_BYTE *)(v24 + 98) = BYTE2(v15);
      *(_WORD *)(v24 + 96) = v15;
      *(_BYTE *)(v24 + 99) = v32;
      v7 = v25;
    }
  }
  v13 = v2 + 1;
  if (v2 + 1 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 2;
  if (v2 + 2 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 3;
  if (v2 + 3 >= v7)
    goto LABEL_30;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v2 + 4;
  if (v2 + 4 >= v7)
  {
LABEL_30:
    swift_release();
    return v8;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v2 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      goto LABEL_30;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C12DEEA8()
{
  return sub_1C12DEEC0(sub_1C12DE97C);
}

uint64_t sub_1C12DEEB4()
{
  return sub_1C12DEEC0(sub_1C12DEC10);
}

uint64_t sub_1C12DEEC0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  return a1(v2);
}

uint64_t sub_1C12DEF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12DEF84(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1C12E27EC(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C12DEF84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  int64_t v5;
  unint64_t i;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v28;
  int64_t v29;

  v25 = a1 + 64;
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v1 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v5 = 0;
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v3)
    goto LABEL_6;
LABEL_7:
  v7 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v7 < v26)
    {
      v8 = *(_QWORD *)(v25 + 8 * v7);
      v9 = v5 + 1;
      if (v8)
        goto LABEL_22;
      v9 = v5 + 2;
      if (v5 + 2 >= v26)
        goto LABEL_36;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
        goto LABEL_22;
      v9 = v5 + 3;
      if (v5 + 3 >= v26)
        goto LABEL_36;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
        goto LABEL_22;
      v9 = v5 + 4;
      if (v5 + 4 >= v26)
        goto LABEL_36;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
      {
LABEL_22:
        v28 = (v8 - 1) & v8;
        v29 = v9;
        for (i = __clz(__rbit64(v8)) + (v9 << 6); ; i = __clz(__rbit64(v3)) | (v5 << 6))
        {
          v11 = *(_QWORD *)(a1 + 56) + 72 * i;
          v12 = *(_QWORD *)(v11 + 16);
          v13 = *(_QWORD *)(v11 + 24);
          v14 = *(_QWORD *)(v11 + 32);
          v15 = *(_QWORD *)(v11 + 40);
          v16 = *(_QWORD *)(v11 + 48);
          v17 = *(_QWORD *)(v11 + 56);
          v18 = *(unsigned __int16 *)(v11 + 64) | (*(char *)(v11 + 66) << 16);
          if (v18 < 0)
          {
            if (*(_WORD *)(v11 + 64) == 2)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C12C2BD8(v12, v13, v14, v15, v16, v17, v18);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              result = sub_1C12C2CB0(v12, v13, v14, v15, v16, v17, v18);
              v5 = v29;
              v3 = v28;
              if (!v28)
                goto LABEL_7;
              goto LABEL_6;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C12C2BD8(v12, v13, v14, v15, v16, v17, v18);
            if ((_BYTE)v18)
              swift_bridgeObjectRetain();
            else
              sub_1C12CA504(v14, v15, v16, v17, 0);
            v22 = v15;
            v23 = v14;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C12C2BD8(v12, v13, v14, v15, v16, v17, v18);
            sub_1C12C2BD8(v12, v13, v14, v15, v16, v17, v18);
            v22 = v13;
            v23 = v12;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C12C2CB0(v12, v13, v14, v15, v16, v17, v18);
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1C12F0070(0, v24[2] + 1, 1, v24);
            v24 = (_QWORD *)result;
          }
          v5 = v29;
          v3 = v28;
          v20 = v24[2];
          v19 = v24[3];
          if (v20 >= v19 >> 1)
          {
            result = (uint64_t)sub_1C12F0070((_QWORD *)(v19 > 1), v20 + 1, 1, v24);
            v24 = (_QWORD *)result;
          }
          v24[2] = v20 + 1;
          v21 = &v24[2 * v20];
          v21[4] = v23;
          v21[5] = v22;
          if (!v28)
            goto LABEL_7;
LABEL_6:
          v28 = (v3 - 1) & v3;
          v29 = v5;
        }
      }
      v10 = v5 + 5;
      if (v5 + 5 < v26)
      {
        v8 = *(_QWORD *)(v25 + 8 * v10);
        if (v8)
        {
          v9 = v5 + 5;
          goto LABEL_22;
        }
        while (1)
        {
          v9 = v10 + 1;
          if (__OFADD__(v10, 1))
            goto LABEL_38;
          if (v9 >= v26)
            break;
          v8 = *(_QWORD *)(v25 + 8 * v9);
          ++v10;
          if (v8)
            goto LABEL_22;
        }
      }
    }
LABEL_36:
    swift_release();
    return (uint64_t)v24;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t PushSubscriptionStore.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1C12DE130(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t PushSubscriptionStore.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_1C12DE130(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t sub_1C12DF3D4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  _OWORD v48[3];
  char v49;
  char v50;
  char v51;

  v2 = v1;
  v3 = a1[3];
  v45 = a1[2];
  v46 = v3;
  v47 = *((_DWORD *)a1 + 16);
  v4 = a1[1];
  v43 = *a1;
  v44 = v4;
  if ((v47 & 0x800000) != 0)
  {
    v7 = v47 << 8 >> 8;
    v5 = *((_QWORD *)&v44 + 1);
    v6 = v44;
    v48[0] = v44;
    v48[1] = v45;
    v48[2] = v46;
    v50 = BYTE1(v7) & 1;
    v51 = BYTE2(v7) & 1;
    v49 = v47;
    swift_beginAccess();
    v8 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v7);
    sub_1C12DDAC0(v8, v48, (uint64_t)&v33);
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v33 + 1))
    {
LABEL_11:
      sub_1C12E2880((uint64_t)&v43);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    v30 = v6;
    v31 = *((_QWORD *)&v33 + 1);
    v9 = v42;
    v11 = v40;
    v10 = v41;
    v12 = v38;
    v13 = v39;
    v14 = v36;
    v15 = v37;
    v29 = v33;
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v14, v15, v12, v13, v11, v10, v9);
    v16 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_1C12C59E0(v29, v31);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(v16 + 56) + 72 * v17;
        v20 = *(_QWORD *)(v19 + 16);
        v21 = *(_QWORD *)(v19 + 24);
        v22 = *(_QWORD *)(v19 + 32);
        v23 = *(_QWORD *)(v19 + 40);
        v27 = *(_QWORD *)(v19 + 56);
        v28 = *(_QWORD *)(v19 + 48);
        v24 = *(unsigned __int16 *)(v19 + 64) | (*(unsigned __int8 *)(v19 + 66) << 16);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v20, v21, v22, v23, v28, v27, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1C12C5D10(v29, v31, (uint64_t)&v33);
        swift_bridgeObjectRelease();
        sub_1C12E2944(v33, *((uint64_t *)&v33 + 1), v34, v35, v36, v37, v38, v39, v40);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v20, v21, v22, v23, v28, v27, v24);
LABEL_10:
        v6 = v30;
        goto LABEL_11;
      }
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v48[0] = *a1;
  v33 = *a1;
  sub_1C12E29BC((uint64_t)v48);
  sub_1C12E29BC((uint64_t)v48);
  sub_1C12E2880((uint64_t)&v43);
  sub_1C130884C();
  sub_1C12E29E4((uint64_t)v48);
  v5 = *((_QWORD *)&v33 + 1);
  v6 = v33;
LABEL_12:
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0x8000000000000000;
  sub_1C12E17EC((uint64_t)&v43, v6, v5, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v2 + 16) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

double sub_1C12DF744@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23[8];
  int v24;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1C12C59E0(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 72 * v8;
      v22 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 16);
      v12 = *(_QWORD *)(v10 + 24);
      v19 = a1;
      v14 = *(_QWORD *)(v10 + 32);
      v13 = *(_QWORD *)(v10 + 40);
      v20 = *(_QWORD *)(v10 + 8);
      v15 = *(_QWORD *)(v10 + 48);
      v18 = *(_QWORD *)(v10 + 56);
      v16 = *(unsigned __int16 *)(v10 + 64) | (*(unsigned __int8 *)(v10 + 66) << 16);
      v21 = v16 | (*(unsigned __int8 *)(v10 + 67) << 24);
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v11, v12, v14, v13, v15, v18, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C12C5D10(v19, a2, (uint64_t)v23);
      swift_bridgeObjectRelease();
      sub_1C12E2944(v23[0], v23[1], v23[2], v23[3], v23[4], v23[5], v23[6], v23[7], v24);
      swift_endAccess();
      *(_QWORD *)a3 = v22;
      *(_QWORD *)(a3 + 8) = v20;
      *(_QWORD *)(a3 + 16) = v11;
      *(_QWORD *)(a3 + 24) = v12;
      *(_QWORD *)(a3 + 32) = v14;
      *(_QWORD *)(a3 + 40) = v13;
      *(_QWORD *)(a3 + 48) = v15;
      *(_QWORD *)(a3 + 56) = v18;
      *(_DWORD *)(a3 + 64) = v21;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_DWORD *)(a3 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

_QWORD *sub_1C12DF8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v11[4];
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  v13 = a1;
  v14 = a2;
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1C12E2D40(v5, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E33AC, (uint64_t)v12);
  swift_bridgeObjectRelease();
  v11[2] = v6;
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1C12E2D40(v7, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E2EB0, (uint64_t)v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = v8;
  swift_bridgeObjectRelease();
  v9 = sub_1C12C2A30(v6);
  swift_release();
  return v9;
}

uint64_t sub_1C12DF9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(unsigned __int16 *)(a3 + 64) | (*(char *)(a3 + 66) << 16);
  if (v7 < 0)
  {
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(a4 + 16))
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    v14 = 1;
    return v14 & 1;
  }
  v9 = *(_QWORD *)(a3 + 48);
  v8 = *(_QWORD *)(a3 + 56);
  v11 = *(_QWORD *)(a3 + 32);
  v10 = *(_QWORD *)(a3 + 40);
  v16 = *(_QWORD *)a3;
  v17 = *(_QWORD *)(a3 + 8);
  swift_bridgeObjectRetain_n();
  sub_1C12C2BD8(v6, v5, v11, v10, v9, v8, v7);
  sub_1C130884C();
  swift_bridgeObjectRelease_n();
  sub_1C12C2CB0(v6, v5, v11, v10, v9, v8, v7);
  v6 = v16;
  v5 = v17;
  if (!*(_QWORD *)(a4 + 16))
    goto LABEL_5;
LABEL_3:
  sub_1C12C59E0(v6, v5);
  v13 = v12;
  swift_bridgeObjectRelease();
  v14 = v13 ^ 1;
  return v14 & 1;
}

double sub_1C12DFAF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  double result;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1C12C59E0(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 72 * v8;
      v12 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 8);
      v13 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      v15 = *(_QWORD *)(v10 + 32);
      v16 = *(_QWORD *)(v10 + 40);
      v17 = *(_QWORD *)(v10 + 48);
      v18 = *(_QWORD *)(v10 + 56);
      v19 = *(unsigned __int8 *)(v10 + 66);
      v20 = *(unsigned __int16 *)(v10 + 64);
      v21 = v20 | (v19 << 16);
      LOBYTE(v10) = *(_BYTE *)(v10 + 67);
      *(_QWORD *)a3 = v12;
      *(_QWORD *)(a3 + 8) = v11;
      *(_QWORD *)(a3 + 16) = v13;
      *(_QWORD *)(a3 + 24) = v14;
      *(_QWORD *)(a3 + 32) = v15;
      *(_QWORD *)(a3 + 40) = v16;
      *(_QWORD *)(a3 + 48) = v17;
      *(_QWORD *)(a3 + 56) = v18;
      *(_BYTE *)(a3 + 66) = v19;
      *(_WORD *)(a3 + 64) = v20;
      *(_BYTE *)(a3 + 67) = v10;
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v13, v14, v15, v16, v17, v18, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_DWORD *)(a3 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1C12DFC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int64_t v34;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  result = swift_beginAccess();
  v7 = 0;
  v8 = *(_QWORD *)(v3 + 16);
  v9 = 1 << *(_BYTE *)(v8 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v42 = v8 + 64;
  v11 = v10 & *(_QWORD *)(v8 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v7 << 6);
LABEL_20:
    v18 = *(_QWORD *)(v8 + 56) + 72 * v14;
    v19 = *(unsigned __int16 *)(v18 + 64) | (*(char *)(v18 + 66) << 16);
    if (v19 < 0)
    {
      v21 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v22 = *(_QWORD *)(v18 + 16);
      v23 = *(_QWORD *)(v18 + 24);
      v24 = *(_QWORD *)(v18 + 32);
      v25 = *(_QWORD *)(v18 + 40);
      v26 = *(_QWORD *)(v18 + 48);
      v27 = *(_QWORD *)(v18 + 56);
      v28 = *(_BYTE *)(v18 + 67);
      v29 = v22 == a1 && v23 == a2;
      v40 = v25;
      v41 = v24;
      v38 = v27;
      v39 = v26;
      v37 = v21;
      v36 = v28;
      if (v29)
      {
        v30 = a1;
        v23 = a2;
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v30, v23, v41, v40, v39, v38, v19);
        result = swift_release();
        *(_QWORD *)a3 = v37;
        *(_QWORD *)(a3 + 8) = v20;
        *(_QWORD *)(a3 + 16) = v30;
        *(_QWORD *)(a3 + 24) = v23;
        *(_QWORD *)(a3 + 32) = v41;
        *(_QWORD *)(a3 + 40) = v40;
        *(_QWORD *)(a3 + 48) = v39;
        *(_QWORD *)(a3 + 56) = v38;
        *(_DWORD *)(a3 + 64) = v19 & 0xFFFFFF | (v36 << 24);
        return result;
      }
      v30 = v22;
      v31 = a2;
      v32 = v8;
      v33 = v19;
      v34 = v7;
      result = sub_1C1308A98();
      v7 = v34;
      v19 = v33;
      v8 = v32;
      a2 = v31;
      if ((result & 1) != 0)
        goto LABEL_29;
    }
  }
  v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v15 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v42 + 8 * v15);
  ++v7;
  if (v16)
    goto LABEL_19;
  v7 = v15 + 1;
  if (v15 + 1 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v42 + 8 * v7);
  if (v16)
    goto LABEL_19;
  v7 = v15 + 2;
  if (v15 + 2 >= v12)
    goto LABEL_27;
  v16 = *(_QWORD *)(v42 + 8 * v7);
  if (v16)
  {
LABEL_19:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_20;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
  {
LABEL_27:
    *(_DWORD *)(a3 + 64) = 0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  v16 = *(_QWORD *)(v42 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_27;
    v16 = *(_QWORD *)(v42 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C12DFE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[8];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v31;

  v12 = *a3;
  v13 = a3[1];
  swift_beginAccess();
  v14 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C12DDD7C(v14, v12, v13, a1, a2, a4, a5, (uint64_t)v25);
  swift_bridgeObjectRelease();
  result = v26;
  if (v26)
  {
    v23 = v28;
    v24 = v27;
    v21 = v30;
    v22 = v29;
    v16 = v31;
    result = swift_bridgeObjectRelease();
    v18 = v21;
    v17 = v22;
    v20 = v23;
    v19 = v24;
  }
  else
  {
    v16 = 0;
    v19 = 0uLL;
    v20 = 0uLL;
    v17 = 0uLL;
    v18 = 0uLL;
  }
  *(_OWORD *)a6 = v19;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v17;
  *(_OWORD *)(a6 + 48) = v18;
  *(_DWORD *)(a6 + 64) = v16;
  return result;
}

uint64_t sub_1C12DFFB0()
{
  uint64_t v0;
  char v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12E2ED4(v0, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E2EB8);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1C12E0028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  if ((*(unsigned __int16 *)(a3 + 64) | (*(char *)(a3 + 66) << 16)) < 0)
  {
    v5 = *(_QWORD *)(a3 + 32);
    v6 = *(_QWORD *)(a3 + 40);
    if (*(_WORD *)(a3 + 64) >= 2u)
      return 0;
  }
  else
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
  }
  if (v5 == a4 && v6 == a5)
    return 1;
  else
    return sub_1C1308A98();
}

uint64_t sub_1C12E007C()
{
  uint64_t v0;
  char v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12E2ED4(v0, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E3164);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1C12E0104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  BOOL v15;
  char v16;
  uint64_t result;

  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(a3 + 32);
  v11 = *(_QWORD *)(a3 + 40);
  v13 = *(char *)(a3 + 66);
  v14 = *(unsigned __int16 *)(a3 + 64);
  v15 = *(_QWORD *)a3 == a4 && *(_QWORD *)(a3 + 8) == a5;
  if (v15 || (v16 = sub_1C1308A98(), result = 0, (v16 & 1) != 0))
  {
    if (((v14 | (v13 << 16)) & 0x80000000) == 0)
    {
      if (v9 != a6 || v10 != a7)
        return sub_1C1308A98();
      return 1;
    }
    if (!(_BYTE)v14)
    {
      if (v12 != a6 || v11 != a7)
        return sub_1C1308A98();
      return 1;
    }
    if (v14 == 1)
    {
      if (v12 != a6 || v11 != a7)
        return sub_1C1308A98();
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_1C12E01FC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _BYTE v22[8];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  v10 = *a3;
  v11 = a3[1];
  swift_beginAccess();
  v12 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C12DDD7C(v12, v10, v11, a1, a2, a4, a5, (uint64_t)v22);
  swift_bridgeObjectRelease();
  v13 = v23;
  if (v23)
  {
    v14 = v24;
    v15 = v25;
    v16 = v26;
    v17 = v27;
    v18 = v28;
    v19 = v29;
    v20 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v14, v15, v16, v17, v18, v19, v20);
  }
  return v13 != 0;
}

uint64_t PushSubscriptionStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PushSubscriptionStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12E034C(uint64_t a1, uint64_t a2)
{
  return sub_1C12E0370(a1, a2, sub_1C12DE6E8);
}

uint64_t sub_1C12E0358(uint64_t a1, uint64_t a2)
{
  return sub_1C12E0370(a1, a2, sub_1C12DE97C);
}

uint64_t sub_1C12E0364(uint64_t a1, uint64_t a2)
{
  return sub_1C12E0370(a1, a2, sub_1C12DEC10);
}

uint64_t sub_1C12E0370(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  return a3(v4);
}

uint64_t sub_1C12E03C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12DEF84(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1C12E27EC(v1);
  swift_bridgeObjectRelease();
  return v2;
}

_QWORD *sub_1C12E043C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12C2A30(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C12E0494(__int128 *a1)
{
  return sub_1C12DF3D4(a1);
}

double sub_1C12E04B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12DF744(a1, a2, a3);
}

_QWORD *sub_1C12E04D4(uint64_t a1, uint64_t a2)
{
  return sub_1C12DF8F4(a1, a2);
}

uint64_t sub_1C12E04F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12DFC1C(a1, a2, a3);
}

uint64_t sub_1C12E0514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C12DFE9C(a1, a2, a3, a4, a5, a6);
}

double sub_1C12E0534@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C12DFAF0(a1, a2, a3);
}

uint64_t sub_1C12E0554()
{
  uint64_t v0;
  char v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12E2ED4(v0, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E33AC);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1C12E05D0()
{
  uint64_t v0;
  char v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1C12E2ED4(v0, (uint64_t (*)(uint64_t, uint64_t, _QWORD *))sub_1C12E33A8);
  swift_bridgeObjectRelease();
  return v1 & 1;
}

BOOL sub_1C12E065C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  _BYTE v23[8];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  v10 = *v5;
  v11 = *a3;
  v12 = a3[1];
  swift_beginAccess();
  v13 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C12DDD7C(v13, v11, v12, a1, a2, a4, a5, (uint64_t)v23);
  swift_bridgeObjectRelease();
  v14 = v24;
  if (v24)
  {
    v15 = v25;
    v16 = v26;
    v17 = v27;
    v18 = v28;
    v19 = v29;
    v20 = v30;
    v21 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v15, v16, v17, v18, v19, v20, v21);
  }
  return v14 != 0;
}

uint64_t sub_1C12E0770(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5A8);
  v51 = a2;
  v58 = sub_1C1308A5C();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v49 = (_QWORD *)(v5 + 64);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v47 = v2;
  v48 = (unint64_t)(v6 + 63) >> 6;
  v9 = v58 + 64;
  result = swift_retain();
  v11 = 0;
  v50 = v5;
  while (1)
  {
    if (v8)
    {
      v52 = (v8 - 1) & v8;
      v53 = v11;
      v24 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v48)
      break;
    v26 = v49;
    v27 = v49[v25];
    v28 = v11 + 1;
    if (!v27)
    {
      v28 = v11 + 2;
      if (v11 + 2 >= v48)
        goto LABEL_33;
      v27 = v49[v28];
      if (!v27)
      {
        v29 = v11 + 3;
        if (v11 + 3 >= v48)
        {
LABEL_33:
          swift_release();
          v3 = v47;
          if ((v51 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v27 = v49[v29];
        if (!v27)
        {
          while (1)
          {
            v28 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v28 >= v48)
              goto LABEL_33;
            v27 = v49[v28];
            ++v29;
            if (v27)
              goto LABEL_30;
          }
        }
        v28 = v11 + 3;
      }
    }
LABEL_30:
    v52 = (v27 - 1) & v27;
    v53 = v28;
    v24 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_31:
    v34 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v24);
    v36 = *v34;
    v35 = v34[1];
    v37 = *(_QWORD *)(v5 + 56) + 72 * v24;
    v38 = *(_QWORD *)(v37 + 8);
    v55 = *(_QWORD *)v37;
    v39 = *(_QWORD *)(v37 + 16);
    v40 = *(_QWORD *)(v37 + 24);
    v42 = *(_QWORD *)(v37 + 32);
    v41 = *(_QWORD *)(v37 + 40);
    v43 = *(_QWORD *)(v37 + 48);
    v44 = *(_QWORD *)(v37 + 56);
    v45 = *(unsigned __int16 *)(v37 + 64) | (*(unsigned __int8 *)(v37 + 66) << 16);
    v54 = *(_BYTE *)(v37 + 67);
    if ((v51 & 1) == 0)
    {
      v57 = *(_QWORD *)(v37 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v39, v40, v42, v41, v43, v44, v45);
      v38 = v57;
    }
    v56 = v40;
    v12 = v39;
    v13 = v38;
    sub_1C1308AEC();
    sub_1C1308804();
    v14 = sub_1C1308B1C();
    v15 = -1 << *(_BYTE *)(v58 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v9 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v9 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      v19 = v56;
      v20 = v43;
      result = v45;
      v21 = v44;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v15) >> 6;
      v19 = v56;
      v20 = v43;
      result = v45;
      v21 = v44;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v32 = v17 == v31;
        if (v17 == v31)
          v17 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v9 + 8 * v17);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(_QWORD *)(v9 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v22 = (_QWORD *)(*(_QWORD *)(v58 + 48) + 16 * v18);
    *v22 = v36;
    v22[1] = v35;
    v23 = *(_QWORD *)(v58 + 56) + 72 * v18;
    *(_QWORD *)v23 = v55;
    *(_QWORD *)(v23 + 8) = v13;
    *(_QWORD *)(v23 + 16) = v12;
    *(_QWORD *)(v23 + 24) = v19;
    *(_QWORD *)(v23 + 32) = v42;
    *(_QWORD *)(v23 + 40) = v41;
    *(_QWORD *)(v23 + 48) = v20;
    *(_QWORD *)(v23 + 56) = v21;
    *(_BYTE *)(v23 + 66) = BYTE2(result);
    *(_WORD *)(v23 + 64) = result;
    *(_BYTE *)(v23 + 67) = v54;
    ++*(_QWORD *)(v58 + 16);
    v5 = v50;
    v8 = v52;
    v11 = v53;
  }
  swift_release();
  v3 = v47;
  v26 = v49;
  if ((v51 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v46 = 1 << *(_BYTE *)(v5 + 32);
  if (v46 >= 64)
    bzero(v26, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v46;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v58;
  return result;
}

uint64_t sub_1C12E0B5C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_1C1308A5C();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_1C12C2D20(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_1C12C2D74(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_1C1308AEC();
    sub_1C1308804();
    result = sub_1C1308B1C();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_1C12C2D20((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_1C12E0ED0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FE58);
  v40 = a2;
  v6 = sub_1C1308A5C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = v32[1];
      v41 = *v32;
      v34 = v32[2];
      v35 = v32[3];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C12C2F04(v34, v35);
      }
      sub_1C1308AEC();
      sub_1C1308804();
      result = sub_1C1308B1C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v41;
      v19[1] = v33;
      v19[2] = v34;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C12E11F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78FE48);
  v6 = a2;
  v7 = sub_1C1308A5C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
      }
      sub_1C1308AEC();
      sub_1C1308804();
      result = sub_1C1308B1C();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1C12E1500(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78EDB8);
  result = sub_1C1308A5C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1C1308AEC();
      sub_1C1308AF8();
      result = sub_1C1308B1C();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1C12E17D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C12E1984(a1, a2, a3, a4, (void (*)(void))sub_1C12C6610, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
}

uint64_t sub_1C12E17EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C12C59E0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C12C6624();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1C12E32CC(a1, v18[7] + 72 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 72 * v12;
    *(_OWORD *)v23 = *(_OWORD *)a1;
    v24 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    *(_DWORD *)(v23 + 64) = *(_DWORD *)(a1 + 64);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v26;
    *(_OWORD *)(v23 + 16) = v24;
    v27 = v18[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v18[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C12E0770(v15, a4 & 1);
  v20 = sub_1C12C59E0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1C12E32CC(a1, v18[7] + 72 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C1308AB0();
  __break(1u);
  return result;
}

uint64_t sub_1C12E1968(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C12E1984(a1, a2, a3, a4, (void (*)(void))sub_1C12C6870, (uint64_t (*)(_QWORD))type metadata accessor for Budget, (uint64_t *)&unk_1EF6D7D50);
}

uint64_t sub_1C12E1984(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t *a7)
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_1C12C59E0(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a6(0);
        return sub_1C12E3364(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a6);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_1C12E0B5C(v20, a4 & 1, a6, a7);
    v27 = sub_1C12C59E0(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C12E1E08(v17, a2, a3, a1, v23, a6);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1C1308AB0();
  __break(1u);
  return result;
}

uint64_t sub_1C12E1AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1C12C59E0(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1C12C6AB4();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      v25 = v24[2];
      v26 = v24[3];
      swift_bridgeObjectRelease();
      result = sub_1C12C2998(v25, v26);
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v30 = (uint64_t *)(v23[6] + 16 * v17);
    *v30 = a5;
    v30[1] = a6;
    v31 = (_QWORD *)(v23[7] + 32 * v17);
    *v31 = a1;
    v31[1] = a2;
    v31[2] = a3;
    v31[3] = a4;
    v32 = v23[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (!v33)
    {
      v23[2] = v34;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C12E0ED0(v20, a7 & 1);
  v28 = sub_1C12C59E0(a5, a6);
  if ((v21 & 1) == (v29 & 1))
  {
    v17 = v28;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C1308AB0();
  __break(1u);
  return result;
}

uint64_t sub_1C12E1C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1C12C59E0(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C12C6C8C();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_unknownObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C12E11F8(v17, a5 & 1);
  v23 = sub_1C12C59E0(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C1308AB0();
  __break(1u);
  return result;
}

uint64_t sub_1C12E1E08(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_1C12C2D20(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1C12E1EA0(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1C12E1EC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for PushToken, (uint64_t *)&unk_1ED78F5B0);
}

uint64_t sub_1C12E1EB4(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1C12E1EC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Budget, (uint64_t *)&unk_1EF6D7D50);
}

uint64_t sub_1C12E1EC8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);

  v50 = a5;
  v11 = a5(0);
  v47 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v49 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v44 - v14;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_1C1308A68();
  v16 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v20 = (uint64_t)v46;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v48 = v18;
      v22 = v21 | (v18 << 6);
    }
    else
    {
      v23 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v23 >= v45)
        return v16;
      v24 = v44[v23];
      v25 = v18 + 1;
      if (!v24)
      {
        v25 = v18 + 2;
        if (v18 + 2 >= v45)
          return v16;
        v24 = v44[v25];
        if (!v24)
        {
          v25 = v18 + 3;
          if (v18 + 3 >= v45)
            return v16;
          v24 = v44[v25];
          if (!v24)
          {
            v26 = v18 + 4;
            if (v18 + 4 >= v45)
              return v16;
            v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v45)
                  return v16;
                v24 = v44[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v18 + 4;
          }
        }
      }
LABEL_24:
      v17 = (v24 - 1) & v24;
      v48 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = a4[7];
    v28 = a4;
    v29 = (uint64_t *)(a4[6] + 16 * v22);
    v30 = *v29;
    v31 = v29[1];
    v32 = *(_QWORD *)(v47 + 72);
    v33 = v50;
    sub_1C12C2D74(v27 + v32 * v22, v20, v50);
    sub_1C12C2D20(v20, v49, v33);
    sub_1C1308AEC();
    swift_bridgeObjectRetain();
    sub_1C1308804();
    result = sub_1C1308B1C();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v42 = (_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v37);
    *v42 = v30;
    v42[1] = v31;
    result = sub_1C12C2D20(v49, *(_QWORD *)(v16 + 56) + v37 * v32, v50);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v28;
    v18 = v48;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C12E2200(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5A8);
  result = sub_1C1308A68();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 64;
  v40 = v4;
  v41 = result;
  while (1)
  {
    v47 = v5;
    if (v8)
    {
      v42 = (v8 - 1) & v8;
      v43 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v12 >= a2)
        return v7;
      v13 = a1[v12];
      v14 = v9 + 1;
      if (!v13)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= a2)
          return v7;
        v13 = a1[v14];
        if (!v13)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= a2)
            return v7;
          v13 = a1[v14];
          if (!v13)
          {
            v15 = v9 + 4;
            if (v9 + 4 >= a2)
              return v7;
            v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_41;
                if (v14 >= a2)
                  return v7;
                v13 = a1[v14];
                ++v15;
                if (v13)
                  goto LABEL_24;
              }
            }
            v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      v42 = (v13 - 1) & v13;
      v43 = v14;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    v16 = *(_QWORD *)(v4 + 56);
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    v18 = v17[1];
    v46 = *v17;
    v19 = (uint64_t *)(v16 + 72 * v11);
    v20 = v19[1];
    v44 = *v19;
    v22 = v19[2];
    v21 = v19[3];
    v24 = v19[4];
    v23 = v19[5];
    v26 = v19[6];
    v25 = v19[7];
    v27 = *((unsigned __int16 *)v19 + 32) | (*((unsigned __int8 *)v19 + 66) << 16);
    v45 = *((_BYTE *)v19 + 67);
    sub_1C1308AEC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v22, v21, v24, v23, v26, v25, v27);
    sub_1C1308804();
    result = sub_1C1308B1C();
    v7 = v41;
    v28 = -1 << *(_BYTE *)(v41 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v10 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v10 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    v36 = (_QWORD *)(*(_QWORD *)(v41 + 48) + 16 * v31);
    *v36 = v46;
    v36[1] = v18;
    v37 = *(_QWORD *)(v41 + 56) + 72 * v31;
    *(_QWORD *)v37 = v44;
    *(_QWORD *)(v37 + 8) = v20;
    *(_QWORD *)(v37 + 16) = v22;
    *(_QWORD *)(v37 + 24) = v21;
    *(_QWORD *)(v37 + 32) = v24;
    *(_QWORD *)(v37 + 40) = v23;
    *(_QWORD *)(v37 + 48) = v26;
    *(_QWORD *)(v37 + 56) = v25;
    *(_BYTE *)(v37 + 66) = BYTE2(v27);
    *(_WORD *)(v37 + 64) = v27;
    *(_BYTE *)(v37 + 67) = v45;
    ++*(_QWORD *)(v41 + 16);
    v5 = v47 - 1;
    if (__OFSUB__(v47, 1))
      break;
    v4 = v40;
    v8 = v42;
    v9 = v43;
    if (v47 == 1)
      return v7;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1C12E2570(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78EDB0);
    v3 = (_QWORD *)sub_1C1308A68();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_1C12C5A44(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C12E2644(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F598);
    v3 = (_QWORD *)sub_1C1308A68();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_BYTE *)i - 8);
      v6 = *i;
      result = sub_1C12C5A44(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C12E2718(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char *i;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE38);
    v3 = (_QWORD *)sub_1C1308A68();
    for (i = (char *)(a1 + 33); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1C12C5A44(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1C12E27EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C13088D0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C1304B64(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C12E2880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  swift_bridgeObjectRetain();
  sub_1C12C2BD8(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1C12E28F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12E2944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1C12C2CB0(a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1C12E29BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C12E29E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C12E2A0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1C12E3240();
  result = sub_1C13088D0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C13055C4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C12E2AA0(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD *))
{
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t *v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  unint64_t v38;
  uint64_t v40;
  _QWORD v41[8];
  __int16 v42;
  char v43;
  char v44;
  int64_t v45;

  v33 = (unint64_t *)result;
  v34 = 0;
  v4 = 0;
  v7 = a3[8];
  v5 = a3 + 8;
  v6 = v7;
  v8 = 1 << *((_BYTE *)v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v35 = v5;
  v36 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v40 = (v10 - 1) & v10;
      v45 = v4;
      v11 = __clz(__rbit64(v10)) | (v4 << 6);
      goto LABEL_5;
    }
    v27 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v36)
      return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
    v28 = v35[v27];
    v29 = v4 + 1;
    if (!v28)
    {
      v29 = v4 + 2;
      if (v4 + 2 >= v36)
        return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
      v28 = v35[v29];
      if (!v28)
      {
        v29 = v4 + 3;
        if (v4 + 3 >= v36)
          return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
        v28 = v35[v29];
        if (!v28)
          break;
      }
    }
LABEL_20:
    v40 = (v28 - 1) & v28;
    v45 = v29;
    v11 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    v12 = (uint64_t *)(a3[6] + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    v38 = v11;
    v15 = a3[7] + 72 * v11;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    v20 = *(_QWORD *)(v15 + 32);
    v21 = *(_QWORD *)(v15 + 40);
    v22 = *(_QWORD *)(v15 + 48);
    v23 = *(_QWORD *)(v15 + 56);
    v24 = *(unsigned __int8 *)(v15 + 66);
    v25 = *(unsigned __int16 *)(v15 + 64);
    v26 = v25 | (v24 << 16);
    LOBYTE(v15) = *(_BYTE *)(v15 + 67);
    v41[0] = v16;
    v41[1] = v17;
    v41[2] = v18;
    v41[3] = v19;
    v41[4] = v20;
    v41[5] = v21;
    v41[6] = v22;
    v41[7] = v23;
    v43 = v24;
    v42 = v25;
    v44 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v18, v19, v20, v21, v22, v23, v26);
    LOBYTE(v13) = a4(v13, v14, v41);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v18, v19, v20, v21, v22, v23, v26);
    result = swift_bridgeObjectRelease();
    v4 = v45;
    v10 = v40;
    if ((v13 & 1) != 0)
    {
      *(unint64_t *)((char *)v33 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
      if (__OFADD__(v34++, 1))
      {
        __break(1u);
        return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
      }
    }
  }
  v30 = v4 + 4;
  if (v4 + 4 >= v36)
    return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
  v28 = v35[v30];
  if (v28)
  {
    v29 = v4 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v36)
      return sub_1C12E2200(v33, a2, v34, (uint64_t)a3);
    v28 = v35[v29];
    ++v30;
    if (v28)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C12E2D40(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, _QWORD *), uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (_QWORD *)isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1C12E2AA0((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1C12E2AA0((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1C3BAA558](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_1C12E2EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C12DF9B8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1C12E2EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C12E0028(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24)) & 1;
}

uint64_t sub_1C12E2ED4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v31;
  int64_t v32;
  _QWORD v33[8];
  __int16 v34;
  char v35;
  char v36;
  int v37;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v31 = (v4 - 1) & v4;
  v32 = v6;
  for (i = __clz(__rbit64(v4)) | (v6 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v13 = *v12;
    v14 = v12[1];
    v15 = *(_QWORD *)(a1 + 56) + 72 * i;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v19 = *(_QWORD *)(v15 + 16);
    v18 = *(_QWORD *)(v15 + 24);
    v20 = *(_QWORD *)(v15 + 32);
    v21 = *(_QWORD *)(v15 + 40);
    v22 = *(_QWORD *)(v15 + 48);
    v23 = *(_QWORD *)(v15 + 56);
    v24 = *(unsigned __int8 *)(v15 + 66);
    v25 = *(unsigned __int16 *)(v15 + 64);
    v26 = v25 | (v24 << 16);
    v37 = v26;
    LOBYTE(v15) = *(_BYTE *)(v15 + 67);
    v33[0] = v16;
    v33[1] = v17;
    v33[2] = v19;
    v33[3] = v18;
    v33[4] = v20;
    v33[5] = v21;
    v33[6] = v22;
    v33[7] = v23;
    v35 = v24;
    v34 = v25;
    v36 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v19, v18, v20, v21, v22, v23, v26);
    LOBYTE(v13) = a2(v13, v14, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1C12C2CB0(v19, v18, v20, v21, v22, v23, v37);
    if ((v13 & 1) != 0)
    {
      swift_release();
      return 1;
    }
    v4 = v31;
    v6 = v32;
    if (v31)
      goto LABEL_4;
LABEL_5:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v8 >= v28)
      goto LABEL_24;
    v9 = *(_QWORD *)(v27 + 8 * v8);
    v10 = v6 + 1;
    if (!v9)
    {
      v10 = v6 + 2;
      if (v6 + 2 >= v28)
        goto LABEL_24;
      v9 = *(_QWORD *)(v27 + 8 * v10);
      if (!v9)
      {
        v10 = v6 + 3;
        if (v6 + 3 >= v28)
          goto LABEL_24;
        v9 = *(_QWORD *)(v27 + 8 * v10);
        if (!v9)
        {
          v10 = v6 + 4;
          if (v6 + 4 >= v28)
            goto LABEL_24;
          v9 = *(_QWORD *)(v27 + 8 * v10);
          if (!v9)
          {
            v11 = v6 + 5;
            if (v6 + 5 >= v28)
            {
LABEL_24:
              swift_release();
              return 0;
            }
            v9 = *(_QWORD *)(v27 + 8 * v11);
            v10 = v6 + 5;
            if (!v9)
              break;
          }
        }
      }
    }
LABEL_19:
    v31 = (v9 - 1) & v9;
    v32 = v10;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v28)
      goto LABEL_24;
    v9 = *(_QWORD *)(v27 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C12E3164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1C12E0104(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t type metadata accessor for PushSubscriptionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for PushSubscriptionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushSubscriptionStore.pushToStartSubscriptions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of PushSubscriptionStore.tokenSubscriptions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PushSubscriptionStore.channelSubscriptions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PushSubscriptionStore.environmentNames.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PushSubscriptionStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of PushSubscriptionStore.add(subscription:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PushSubscriptionStore.remove(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PushSubscriptionStore.remove(environmentName:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PushSubscriptionStore.subscription(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of PushSubscriptionStore.subscription(activityIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PushSubscriptionStore.subscription(environmentName:topic:channel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PushSubscriptionStore.hasSubscriptions(environmentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PushSubscriptionStore.hasSubscriptions(environmentName:topic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PushSubscriptionStore.hasSubscription(environmentName:topic:channel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

unint64_t sub_1C12E3240()
{
  unint64_t result;

  result = qword_1ED78F6C8;
  if (!qword_1ED78F6C8)
  {
    result = MEMORY[0x1C3BAA4B0]("ٖw&|=", &type metadata for Topic);
    atomic_store(result, (unint64_t *)&qword_1ED78F6C8);
  }
  return result;
}

uint64_t sub_1C12E3284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12E32CC(uint64_t a1, uint64_t a2)
{
  assignWithTake for PushSubscription(a2, a1);
  return a2;
}

uint64_t sub_1C12E3308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1C12E28F8(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1C12E3364(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1C12E33B0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1C12E3408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1C12C7A90(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1C1308354();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1C130836C();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1C1308354();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1C130836C();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5E0);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C13094E0;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1C13087E0();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C12C7A90(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1C12E3720);
  }
  return v2;
}

uint64_t PushToken.token.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1C12C2998(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*PushToken.token.modify())()
{
  return nullsub_1;
}

uint64_t PushToken.subscriptionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PushToken.subscriptionIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PushToken.environmentName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushToken.environmentName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PushToken.environmentName.modify())()
{
  return nullsub_1;
}

uint64_t PushToken.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushToken.topic.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  return result;
}

uint64_t (*PushToken.topic.modify())()
{
  return nullsub_1;
}

uint64_t PushToken.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushToken() + 32);
  return sub_1C12CA2B4(v3, a1);
}

uint64_t PushToken.expirationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushToken() + 32);
  return sub_1C12E38EC(a1, v3);
}

uint64_t sub_1C12E38EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PushToken.expirationDate.modify())()
{
  type metadata accessor for PushToken();
  return nullsub_1;
}

uint64_t PushToken.description.getter()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  unint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v1[1];
  sub_1C12C2F04(v5, v6);
  sub_1C12E33B0(v5, v6);
  v8 = v7;
  sub_1C12C2998(v5, v6);
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F588);
  sub_1C12CCFD0();
  sub_1C13087A4();
  swift_bridgeObjectRelease();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1C13089F0();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  v9 = v1[7];
  v12[0] = v1[6];
  v12[1] = v9;
  swift_bridgeObjectRetain();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  v10 = type metadata accessor for PushToken();
  sub_1C12CA2B4((uint64_t)v1 + *(int *)(v10 + 32), (uint64_t)v4);
  sub_1C13087EC();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t PushToken.init(subscriptionIdentifier:environmentName:topic:token:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = *a5;
  v16 = a5[1];
  v18 = (uint64_t)a9 + *(int *)(type metadata accessor for PushToken() + 32);
  v19 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = v17;
  a9[7] = v16;
  *a9 = a6;
  a9[1] = a7;
  return sub_1C12E38EC(a8, v18);
}

uint64_t PushToken.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_1C1308468();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v9 = v0[1];
  sub_1C12C2F04(*v0, v9);
  sub_1C13083D8();
  sub_1C12C2998(v8, v9);
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for PushToken();
  sub_1C12CA2B4((uint64_t)v0 + *(int *)(v10 + 32), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_1C1308B04();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_1C1308B04();
  sub_1C12CE1CC(&qword_1EF6D8070, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C1308774();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t PushToken.hashValue.getter()
{
  sub_1C1308AEC();
  PushToken.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E3EA4()
{
  sub_1C1308AEC();
  PushToken.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E3EE4()
{
  sub_1C1308AEC();
  PushToken.hash(into:)();
  return sub_1C1308B1C();
}

BOOL _s24SessionPushNotifications0B5TokenV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;

  v4 = sub_1C1308468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F628);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v31 - v18;
  sub_1C12F3950(*a1, a1[1]);
  if ((v20 & 1) == 0)
    return 0;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (v21 = sub_1C1308A98(), result = 0, (v21 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5] || (v23 = sub_1C1308A98(), result = 0, (v23 & 1) != 0))
    {
      if (a1[6] == a2[6] && a1[7] == a2[7] || (v24 = sub_1C1308A98(), result = 0, (v24 & 1) != 0))
      {
        v32 = v7;
        v25 = type metadata accessor for PushToken();
        sub_1C12CA2B4((uint64_t)a1 + *(int *)(v25 + 32), (uint64_t)v19);
        sub_1C12CA2B4((uint64_t)a2 + *(int *)(v25 + 32), (uint64_t)v17);
        v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_1C12CA2B4((uint64_t)v19, (uint64_t)v10);
        sub_1C12CA2B4((uint64_t)v17, v26);
        v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v27((uint64_t)v10, 1, v4) == 1)
        {
          sub_1C12CA4C8((uint64_t)v17, &qword_1ED78F6D0);
          sub_1C12CA4C8((uint64_t)v19, &qword_1ED78F6D0);
          if (v27(v26, 1, v4) == 1)
          {
            sub_1C12CA4C8((uint64_t)v10, &qword_1ED78F6D0);
            return 1;
          }
        }
        else
        {
          sub_1C12CA2B4((uint64_t)v10, (uint64_t)v14);
          if (v27(v26, 1, v4) != 1)
          {
            v28 = v32;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v32, v26, v4);
            sub_1C12CE1CC(&qword_1EF6D8078, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
            v29 = sub_1C13087BC();
            v30 = *(void (**)(char *, uint64_t))(v5 + 8);
            v30(v28, v4);
            sub_1C12CA4C8((uint64_t)v17, &qword_1ED78F6D0);
            sub_1C12CA4C8((uint64_t)v19, &qword_1ED78F6D0);
            v30(v14, v4);
            sub_1C12CA4C8((uint64_t)v10, &qword_1ED78F6D0);
            return (v29 & 1) != 0;
          }
          sub_1C12CA4C8((uint64_t)v17, &qword_1ED78F6D0);
          sub_1C12CA4C8((uint64_t)v19, &qword_1ED78F6D0);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
        }
        sub_1C12CA4C8((uint64_t)v10, &qword_1ED78F628);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C12E429C()
{
  return sub_1C12CE1CC(&qword_1ED78F608, (uint64_t (*)(uint64_t))type metadata accessor for PushToken, (uint64_t)&protocol conformance descriptor for PushToken);
}

uint64_t *initializeBufferWithCopyOfBuffer for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1C12C2F04(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = a2[6];
    v12 = a2[7];
    v13 = *(int *)(a3 + 32);
    v14 = (char *)a2 + v13;
    v15 = (char *)a1 + v13;
    a1[6] = v11;
    a1[7] = v12;
    v16 = sub_1C1308468();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v14, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
      memcpy(v15, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v14, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t *assignWithCopy for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_1C12C2F04(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C12C2998(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C1308468();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for PushToken(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1308468();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t *assignWithTake for PushToken(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C12C2998(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 32);
  v12 = (char *)a1 + v11;
  v13 = (char *)(a2 + v11);
  v14 = sub_1C1308468();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C12E4798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1C12E4818(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1C12E4890()
{
  unint64_t v0;

  sub_1C12CF944();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_1C12E4910(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t Unique;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1C13083B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = a1;
  v3[3] = a2;
  sub_1C12E5824();
  swift_bridgeObjectRetain();
  v10 = sub_1C12E4AE8();
  v17 = v10;
  if (!v10)
    goto LABEL_2;
  v18 = objc_msgSend(v10, sel_URL);
  sub_1C13083A8();

  v19 = (void *)sub_1C130839C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Unique = _CFBundleCreateUnique();

  if (!Unique)
  {
LABEL_2:
    if (qword_1ED78F670 != -1)
      swift_once();
    v11 = sub_1C13086A8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
    v12 = sub_1C130869C();
    v13 = sub_1C13088F4();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1C12C0000, v12, v13, "StringLocalizer could not open bundle", v14, 2u);
      MEMORY[0x1C3BAA558](v14, -1, -1);
    }

    Unique = 0;
  }
  v3[4] = Unique;
  return v3;
}

id sub_1C12E4AE8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithApplicationIdentifier_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1C1308378();

    swift_willThrow();
  }
  return v1;
}

uint64_t StringLocalizer.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  if (v1)

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StringLocalizer.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  if (v1)

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1C12E4C18(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v36 = a4;
  v34 = a3;
  v6 = sub_1C13084C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C13084E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8080);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    goto LABEL_8;
  v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v17 = a1 & 0xFFFFFFFFFFFFLL;
  if (v17 && (v18 = *(void **)(v35 + 32)) != 0)
  {
    v35 = a1;
    v33 = v18;
    sub_1C13084B0();
    sub_1C13084D4();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1C13084BC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = sub_1C13084A4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
    {
      sub_1C12E57AC((uint64_t)v16);
    }
    else
    {
      sub_1C1308498();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
    }
    v21 = v36;
    v22 = v33;
    v23 = (void *)sub_1C13087C8();
    swift_bridgeObjectRetain();
    v24 = (void *)sub_1C13087C8();
    swift_bridgeObjectRelease();
    v25 = (void *)sub_1C13087C8();
    swift_bridgeObjectRelease();
    v26 = (void *)CFBundleCopyLocalizedStringForLocalization();

    if (v26)
    {
      v27 = v26;
      v28 = sub_1C13087D4();
      v30 = v29;
      if (v34)
        v31 = v34;
      else
        v31 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      v21 = _s24SessionPushNotifications15StringLocalizerC015formatLocalizedD0_9argumentsS2S_Says06CustomD11Convertible_pGtFZ_0(v28, v30, v31);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }

  }
  else
  {
LABEL_8:
    swift_bridgeObjectRetain();
    return v36;
  }
  return v21;
}

unint64_t sub_1C12E4F1C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1C12E4FF8(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1C13089E4();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1C1308A14();
      v5 = sub_1C1308A20();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1C12E4FF8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1C12E5094(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1C12E5100(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1C12E5094(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1C13049A0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1C12E5100(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1C1308A14();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1C13089D8();
  }
  return result;
}

unint64_t _s24SessionPushNotifications15StringLocalizerC015formatLocalizedD0_9argumentsS2S_Says06CustomD11Convertible_pGtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v4 = 0;
  v5 = 4 * v3;
  v25 = a3 + 32;
  while (1)
  {
    v7 = sub_1C1308888();
    v9 = v8;
    if (v5 <= (unint64_t)sub_1C130881C() >> 14)
      goto LABEL_18;
    v10 = sub_1C1308888();
    v12 = v11;
    if ((v7 != 37 || v9 != 0xE100000000000000) && (sub_1C1308A98() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      sub_1C130884C();
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    if (v10 == 64 && v12 == 0xE100000000000000 || (sub_1C1308A98() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      if (v4 < *(_QWORD *)(a3 + 16))
      {
        if (v4 < 0)
          goto LABEL_77;
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 40 * v4), *(_QWORD *)(v25 + 40 * v4 + 24));
        sub_1C1308A80();
        sub_1C130884C();
        result = swift_bridgeObjectRelease();
      }
      if (__OFADD__(v4++, 1))
        goto LABEL_76;
      goto LABEL_6;
    }
    if ((v10 != 2573 || v12 != 0xE200000000000000) && (sub_1C1308A98() & 1) == 0)
    {
      if ((sub_1C1308780() & 1) == 0)
        goto LABEL_52;
      result = sub_1C12E4F1C(v10, v12);
      if ((result & 0x100000000) != 0)
        goto LABEL_82;
      if ((result & 0xFFFFFF80) != 0)
        goto LABEL_52;
      result = sub_1C12E4F1C(v10, v12);
      if ((result & 0x100000000) != 0)
        goto LABEL_83;
      if ((result & 0xFFFFFF00) != 0)
        goto LABEL_78;
    }
    if ((sub_1C1308798() & 1) != 0)
      break;
LABEL_52:
    if (v10 == 37 && v12 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_59:
      sub_1C130884C();
      goto LABEL_6;
    }
    v21 = sub_1C1308A98();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_59;
LABEL_6:
    if (v5 <= (unint64_t)sub_1C130881C() >> 14)
      return 0;
  }
  v14 = 0;
  if (v10 == 2573)
    goto LABEL_30;
LABEL_31:
  if ((sub_1C1308A98() & 1) != 0)
    goto LABEL_44;
  result = sub_1C1308780();
  if ((result & 1) == 0)
    goto LABEL_55;
  if ((v12 & 0x2000000000000000) != 0)
    v15 = HIBYTE(v12) & 0xF;
  else
    v15 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v15)
    goto LABEL_74;
  if ((v12 & 0x1000000000000000) != 0)
  {
    if (sub_1C13089E4() <= 0x7F)
      goto LABEL_42;
    goto LABEL_55;
  }
  if ((v12 & 0x2000000000000000) == 0 && (v10 & 0x1000000000000000) == 0)
    sub_1C1308A14();
  if (sub_1C1308A20() > 0x7F)
  {
LABEL_55:
    sub_1C1308828();
    if (sub_1C1308888() == 36 && v20 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    v22 = sub_1C1308A98();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
LABEL_61:
      sub_1C130881C();
      if (sub_1C1308888() == 64 && v23 == 0xE100000000000000)
      {
        result = swift_bridgeObjectRelease();
LABEL_65:
        if (v14 < *(_QWORD *)(a3 + 16))
        {
          if (v14 < 0)
            goto LABEL_79;
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 40 * v14), *(_QWORD *)(v25 + 40 * v14 + 24));
          sub_1C1308A80();
          sub_1C130884C();
          swift_bridgeObjectRelease();
        }
        sub_1C1308840();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v24 = sub_1C1308A98();
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_65;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
LABEL_42:
  result = sub_1C12E4F1C(v10, v12);
  if ((result & 0x100000000) != 0)
    goto LABEL_81;
  if ((result & 0xFFFFFF00) != 0)
    goto LABEL_75;
  while (1)
  {
LABEL_44:
    result = sub_1C1308798();
    if ((result & 1) == 0)
      goto LABEL_55;
    v16 = 10 * v14;
    if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63)
      break;
    result = sub_1C130878C();
    if ((v17 & 1) != 0)
      goto LABEL_80;
    v14 = v16 + result;
    if (__OFADD__(v16, result))
      goto LABEL_73;
    sub_1C130881C();
    v10 = sub_1C1308888();
    v19 = v18;
    swift_bridgeObjectRelease();
    v12 = v19;
    if (v10 != 2573)
      goto LABEL_31;
LABEL_30:
    if (v12 != 0xE200000000000000)
      goto LABEL_31;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
  return result;
}

uint64_t sub_1C12E57AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StringLocalizer()
{
  return objc_opt_self();
}

uint64_t method lookup function for StringLocalizer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StringLocalizer.localizedString(for:arguments:defaultValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

unint64_t sub_1C12E5824()
{
  unint64_t result;

  result = qword_1EF6D8138;
  if (!qword_1EF6D8138)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF6D8138);
  }
  return result;
}

uint64_t PushSubscription.activityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (((*(unsigned __int16 *)(v0 + 64) | (*(char *)(v0 + 66) << 16)) & 0x80000000) == 0)
    return 0;
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Priority.< infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (!*a2)
        return 1;
    }
    else if (*a2 < 2u)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t Priority.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1)
    v1 = 0x6E696B61576E6F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6C616D726F6ELL;
}

SessionPushNotifications::Priority_optional __swiftcall Priority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (SessionPushNotifications::Priority_optional)rawValue;
}

uint64_t Priority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

SessionPushNotifications::Priority_optional sub_1C12E5964(Swift::Int *a1)
{
  return Priority.init(rawValue:)(*a1);
}

void sub_1C12E596C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1C12E5978()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1)
    v1 = 0x6E696B61576E6F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6C616D726F6ELL;
}

uint64_t sub_1C12E59E0(_BYTE *a1, _BYTE *a2)
{
  if (!*a1)
    return 0;
  if (*a1 == 1)
  {
    if (*a2)
      return 0;
  }
  else if (*a2 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1C12E5A10(_BYTE *a1, _BYTE *a2)
{
  if (!*a2)
    return 1;
  if (*a2 == 1)
  {
    if (*a1)
      return 1;
  }
  else if (*a1 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1C12E5A40(_BYTE *a1, _BYTE *a2)
{
  if (!*a1)
    return 1;
  if (*a1 == 1)
  {
    if (*a2)
      return 1;
  }
  else if (*a2 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1C12E5A70(_BYTE *a1, _BYTE *a2)
{
  if (!*a2)
    return 0;
  if (*a2 == 1)
  {
    if (*a1)
      return 0;
  }
  else if (*a1 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t PushSubscription.SubscriptionType.Activity.PushType.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  if (!*(_BYTE *)(v0 + 32))
  {
    v2 = 0x203A6E656B6F74;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    v2 = 0x3A6C656E6E616863;
    sub_1C130884C();
    sub_1C130884C();
LABEL_5:
    sub_1C130884C();
    return v2;
  }
  return 0x6C616E7265747865;
}

uint64_t PushSubscription.SubscriptionType.Activity.PushType.hash(into:)()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 32))
  {
    sub_1C1308AF8();
    return sub_1C1308804();
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_1C1308AF8();
    sub_1C1308804();
    return sub_1C1308804();
  }
  return sub_1C1308AF8();
}

uint64_t PushSubscription.SubscriptionType.Activity.PushType.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C1308AEC();
  if (v1)
  {
    sub_1C1308AF8();
    if (v1 == 1)
    {
      sub_1C1308804();
      sub_1C1308804();
    }
  }
  else
  {
    sub_1C1308AF8();
    sub_1C1308804();
  }
  return sub_1C1308B1C();
}

uint64_t sub_1C12E5CC8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C1308AEC();
  if (v1)
  {
    sub_1C1308AF8();
    if (v1 == 1)
    {
      sub_1C1308804();
      sub_1C1308804();
    }
  }
  else
  {
    sub_1C1308AF8();
    sub_1C1308804();
  }
  return sub_1C1308B1C();
}

uint64_t sub_1C12E5D80()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 32))
  {
    sub_1C1308AF8();
    return sub_1C1308804();
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_1C1308AF8();
    sub_1C1308804();
    return sub_1C1308804();
  }
  return sub_1C1308AF8();
}

uint64_t sub_1C12E5E28()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C1308AEC();
  if (v1)
  {
    sub_1C1308AF8();
    if (v1 == 1)
    {
      sub_1C1308804();
      sub_1C1308804();
    }
  }
  else
  {
    sub_1C1308AF8();
    sub_1C1308804();
  }
  return sub_1C1308B1C();
}

uint64_t PushSubscription.SubscriptionType.Activity.activityIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushSubscription.SubscriptionType.Activity.activityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PushSubscription.SubscriptionType.Activity.activityIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.SubscriptionType.Activity.pushType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_1C12CA504(v2, v3, v4, v5, v6);
}

__n128 PushSubscription.SubscriptionType.Activity.pushType.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_1C12E28F8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  result = v6;
  *(__n128 *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 48) = v4;
  return result;
}

uint64_t (*PushSubscription.SubscriptionType.Activity.pushType.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.SubscriptionType.Activity.isEphemeral.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t PushSubscription.SubscriptionType.Activity.isEphemeral.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*PushSubscription.SubscriptionType.Activity.isEphemeral.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.SubscriptionType.Activity.exceededReducedBudget.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t PushSubscription.SubscriptionType.Activity.exceededReducedBudget.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 50) = result;
  return result;
}

uint64_t (*PushSubscription.SubscriptionType.Activity.exceededReducedBudget.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.SubscriptionType.Activity.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(unsigned __int8 *)(v0 + 48);
  sub_1C13089F0();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  if (!v5)
  {
    sub_1C12CA504(v1, v2, v3, v4, 0);
    goto LABEL_5;
  }
  if (v5 == 1)
  {
    sub_1C12CA504(v1, v2, v3, v4, 1);
    sub_1C130884C();
    sub_1C130884C();
LABEL_5:
    sub_1C130884C();
  }
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C12E28F8(v1, v2, v3, v4, v5);
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t PushSubscription.SubscriptionType.Activity.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(unsigned __int8 *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  if (v5)
  {
    sub_1C1308AF8();
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1308804();
      sub_1C1308804();
      sub_1C12E28F8(v1, v2, v3, v4, 1);
    }
  }
  else
  {
    sub_1C1308AF8();
    swift_bridgeObjectRetain();
    sub_1C1308804();
    sub_1C12E28F8(v1, v2, v3, v4, 0);
  }
  sub_1C1308B04();
  return sub_1C1308B04();
}

uint64_t PushSubscription.SubscriptionType.Activity.hashValue.getter()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.Activity.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E6430()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.Activity.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E64A0()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.Activity.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t PushSubscription.SubscriptionType.description.getter()
{
  uint64_t v0;

  if (((*(unsigned __int16 *)(v0 + 48) | (*(char *)(v0 + 50) << 16)) & 0x80000000) == 0)
    return 0x74536F5468737570;
  PushSubscription.SubscriptionType.Activity.description.getter();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0x7974697669746361;
}

uint64_t PushSubscription.SubscriptionType.hash(into:)()
{
  uint64_t v0;
  int v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(unsigned __int16 *)(v0 + 48) | (*(char *)(v0 + 50) << 16);
  if (v1 < 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    sub_1C1308AF8();
    swift_bridgeObjectRetain();
    sub_1C1308804();
    swift_bridgeObjectRelease();
    if ((_BYTE)v1)
    {
      sub_1C1308AF8();
      if (v1 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C1308804();
        sub_1C1308804();
        sub_1C12E28F8(v3, v4, v5, v6, 1);
      }
    }
    else
    {
      sub_1C1308AF8();
      swift_bridgeObjectRetain();
      sub_1C1308804();
      sub_1C12E28F8(v3, v4, v5, v6, 0);
    }
    sub_1C1308B04();
    return sub_1C1308B04();
  }
  else
  {
    sub_1C1308AF8();
    return sub_1C1308804();
  }
}

uint64_t PushSubscription.SubscriptionType.hashValue.getter()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E67A8()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E680C()
{
  sub_1C1308AEC();
  PushSubscription.SubscriptionType.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12E6868()
{
  uint64_t v0;

  if (((*(unsigned __int16 *)(v0 + 48) | (*(char *)(v0 + 50) << 16)) & 0x80000000) == 0)
    return 0x74536F5468737570;
  PushSubscription.SubscriptionType.Activity.description.getter();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0x7974697669746361;
}

uint64_t PushSubscription.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.topic.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*PushSubscription.topic.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.subscriptionType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(unsigned __int8 *)(v1 + 66);
  v9 = *(unsigned __int16 *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 50) = v8;
  *(_WORD *)(a1 + 48) = v9;
  return sub_1C12C2BD8(v2, v3, v4, v5, v6, v7, v9 | (v8 << 16));
}

__n128 PushSubscription.subscriptionType.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  char v5;
  uint64_t v6;
  int v7;
  __n128 result;
  __n128 v9;
  __int128 v10;

  v9 = (__n128)a1[1];
  v10 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_WORD *)a1 + 24);
  v5 = *((_BYTE *)a1 + 50);
  v7 = *(unsigned __int16 *)(v1 + 64);
  v6 = v1 + 64;
  sub_1C12C2CB0(*(_QWORD *)(v6 - 48), *(_QWORD *)(v6 - 40), *(_QWORD *)(v6 - 32), *(_QWORD *)(v6 - 24), *(_QWORD *)(v6 - 16), *(_QWORD *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  result = v9;
  *(_OWORD *)(v6 - 48) = v10;
  *(__n128 *)(v6 - 32) = v9;
  *(_QWORD *)(v6 - 16) = v2;
  *(_QWORD *)(v6 - 8) = v3;
  *(_BYTE *)(v6 + 2) = v5;
  *(_WORD *)v6 = v4;
  return result;
}

uint64_t (*PushSubscription.subscriptionType.modify())()
{
  return nullsub_1;
}

void PushSubscription.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 67);
}

_BYTE *PushSubscription.priority.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 67) = *result;
  return result;
}

uint64_t (*PushSubscription.priority.modify())()
{
  return nullsub_1;
}

uint64_t PushSubscription.owner.getter()
{
  swift_bridgeObjectRetain();
  return sub_1C13085E8();
}

uint64_t PushSubscription.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(unsigned __int16 *)(v0 + 64) | (*(char *)(v0 + 66) << 16);
  sub_1C13089F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C12C2BD8(v1, v2, v3, v4, v5, v6, v7);
  if (v7 < 0)
  {
    PushSubscription.SubscriptionType.Activity.description.getter();
    sub_1C130884C();
    swift_bridgeObjectRelease();
  }
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C12C2CB0(v1, v2, v3, v4, v5, v6, v7);
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0x203A6369706F74;
}

uint64_t static PushSubscription.activityTokenSubscription(activityIdentifier:environmentName:topic:priority:isEphemeral:exceededReducedBudget:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, char *a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  char v10;
  int v11;

  v9 = a5[1];
  v10 = *a6;
  *(_QWORD *)a9 = *a5;
  *(_QWORD *)(a9 + 8) = v9;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  if ((a7 & 1) != 0)
    v11 = -8388352;
  else
    v11 = -8388608;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = 0;
  *(_QWORD *)(a9 + 56) = 0;
  *(_WORD *)(a9 + 64) = v11;
  *(_BYTE *)(a9 + 66) = BYTE2(v11) | ((a8 & 1) != 0);
  *(_BYTE *)(a9 + 67) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PushSubscription.init(activityIdentifier:topic:pushType:priority:isEphemeral:exceededReducedBudget:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  __int16 v9;
  char v10;
  int v11;
  int v12;
  __n128 result;
  __int128 v14;

  v8 = a3[1];
  v9 = *(unsigned __int8 *)(a4 + 32);
  v10 = *a5;
  if ((a7 & 1) != 0)
    v11 = 0x10000;
  else
    v11 = 0;
  if ((a6 & 1) != 0)
    v12 = -8388352;
  else
    v12 = -8388608;
  *(_QWORD *)a8 = *a3;
  *(_QWORD *)(a8 + 8) = v8;
  *(_QWORD *)(a8 + 16) = a1;
  *(_QWORD *)(a8 + 24) = a2;
  result = *(__n128 *)a4;
  v14 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a8 + 32) = *(_OWORD *)a4;
  *(_OWORD *)(a8 + 48) = v14;
  *(_WORD *)(a8 + 64) = v12 | v9;
  *(_BYTE *)(a8 + 66) = (v12 | v11) >> 16;
  *(_BYTE *)(a8 + 67) = v10;
  return result;
}

uint64_t static PushSubscription.activityChannelSubscription(activityIdentifier:environmentName:topic:channel:priority:isEphemeral:exceededReducedBudget:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char a10, char a11)
{
  uint64_t v11;
  char v12;
  int v13;

  v11 = a5[1];
  v12 = *a8;
  *(_QWORD *)a9 = *a5;
  *(_QWORD *)(a9 + 8) = v11;
  if ((a10 & 1) != 0)
    v13 = -8388351;
  else
    v13 = -8388607;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_WORD *)(a9 + 64) = v13;
  *(_BYTE *)(a9 + 66) = BYTE2(v13) | ((a11 & 1) != 0);
  *(_BYTE *)(a9 + 67) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static PushSubscription.externalSubscription(activityIdentifier:environmentName:topic:priority:isEphemeral:exceededReducedBudget:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X4>, char *a4@<X5>, char a5@<W6>, char a6@<W7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  char v8;
  int v9;

  v7 = a3[1];
  v8 = *a4;
  *(_QWORD *)a7 = *a3;
  *(_QWORD *)(a7 + 8) = v7;
  if ((a5 & 1) != 0)
    v9 = -8388350;
  else
    v9 = -8388606;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_OWORD *)(a7 + 32) = 0u;
  *(_OWORD *)(a7 + 48) = 0u;
  *(_WORD *)(a7 + 64) = v9;
  *(_BYTE *)(a7 + 66) = BYTE2(v9) | ((a6 & 1) != 0);
  *(_BYTE *)(a7 + 67) = v8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static PushSubscription.pushToStartSubscription(environmentName:topic:priority:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  char v6;

  v5 = a3[1];
  v6 = *a4;
  *(_QWORD *)a5 = *a3;
  *(_QWORD *)(a5 + 8) = v5;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_DWORD *)(a5 + 63) = 0;
  *(_BYTE *)(a5 + 67) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.priority(applying:budget:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v4 = *(_BYTE *)(v2 + 67);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v8 = v4;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 8))(&v8, a2, v5, v6);
}

uint64_t sub_1C12E6FA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*((unsigned __int16 *)v1 + 32) | (*((char *)v1 + 66) << 16)) < 0)
  {
    v4 = v1[2];
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *v1;
    v6 = v1[1];
    swift_bridgeObjectRetain_n();
    sub_1C130884C();
    swift_bridgeObjectRelease();
    v4 = v5;
    result = v6;
  }
  *a1 = v4;
  a1[1] = result;
  return result;
}

uint64_t PushSubscription.channel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 0;
  if (((*(unsigned __int16 *)(v0 + 64) | (*(unsigned __int8 *)(v0 + 66) << 16)) & 0x800000) != 0
    && *(_WORD *)(v0 + 64) == 1)
  {
    v1 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t PushSubscription.environment.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  if (((*(unsigned __int16 *)(v0 + 64) | (*(unsigned __int8 *)(v0 + 66) << 16)) & 0x800000) != 0)
  {
    if ((*(_WORD *)(v0 + 64) & 0xFE) != 0)
      return 0;
    v1 = (uint64_t *)(v0 + 32);
  }
  else
  {
    v1 = (uint64_t *)(v0 + 16);
  }
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

BOOL PushSubscription.isEphemeral.getter()
{
  uint64_t v0;

  return (~(*(unsigned __int16 *)(v0 + 64) | (*(unsigned __int8 *)(v0 + 66) << 16)) & 0x800100) == 0;
}

uint64_t _s24SessionPushNotifications0B12SubscriptionV0D4TypeO8ActivityV0bE0O2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  char v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (!*(_BYTE *)(a1 + 32))
  {
    if (!*(_BYTE *)(a2 + 32))
    {
      if (v3 == v8 && v2 == v7)
        v13 = 1;
      else
        v13 = sub_1C1308A98();
      sub_1C12CA504(v8, v7, v10, v9, 0);
      sub_1C12CA504(v3, v2, v5, v4, 0);
      sub_1C12E28F8(v3, v2, v5, v4, 0);
      sub_1C12E28F8(v8, v7, v10, v9, 0);
      return v13 & 1;
    }
    goto LABEL_22;
  }
  if (v6 != 1)
  {
    if (v11 == 2 && (v7 | v8 | v10 | v9) == 0)
    {
      sub_1C12E28F8(*(_QWORD *)a1, v2, v5, v4, 2);
      sub_1C12E28F8(0, 0, 0, 0, 2);
      v13 = 1;
      return v13 & 1;
    }
    goto LABEL_22;
  }
  if (v11 != 1)
  {
LABEL_22:
    sub_1C12CA504(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v10, v9, v11);
    sub_1C12CA504(v3, v2, v5, v4, v6);
    sub_1C12E28F8(v3, v2, v5, v4, v6);
    v16 = v8;
    v17 = v7;
    v18 = v10;
    v19 = v9;
    v20 = v11;
LABEL_23:
    sub_1C12E28F8(v16, v17, v18, v19, v20);
    v13 = 0;
    return v13 & 1;
  }
  v12 = v3 == v8 && v2 == v7;
  if (!v12 && (sub_1C1308A98() & 1) == 0)
  {
    sub_1C12CA504(v8, v7, v10, v9, 1);
    sub_1C12CA504(v3, v2, v5, v4, 1);
    sub_1C12E28F8(v3, v2, v5, v4, 1);
    v16 = v8;
    v17 = v7;
    v18 = v10;
    v19 = v9;
    v20 = 1;
    goto LABEL_23;
  }
  if (v5 == v10 && v4 == v9)
    v13 = 1;
  else
    v13 = sub_1C1308A98();
  sub_1C12CA504(v8, v7, v10, v9, 1);
  sub_1C12CA504(v3, v2, v5, v4, 1);
  sub_1C12E28F8(v3, v2, v5, v4, 1);
  sub_1C12E28F8(v8, v7, v10, v9, 1);
  return v13 & 1;
}

uint64_t _s24SessionPushNotifications0B12SubscriptionV0D4TypeO8ActivityV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  unsigned __int8 v5;
  int v6;
  __int128 v7;
  __int128 v8;
  char v9;
  unsigned __int8 v10;
  int v11;
  char v12;
  char v13;
  uint64_t result;
  char v15;
  unsigned int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];
  char v22;
  _OWORD v23[2];
  char v24;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_BYTE *)(a1 + 49);
  v6 = *(unsigned __int8 *)(a1 + 50);
  v7 = *(_OWORD *)(a2 + 16);
  v8 = *(_OWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 49);
  v11 = *(unsigned __int8 *)(a2 + 50);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v17 = *(_OWORD *)(a2 + 32);
  v18 = *(_OWORD *)(a2 + 16);
  v12 = sub_1C1308A98();
  v8 = v17;
  v7 = v18;
  v3 = v19;
  v2 = v20;
  v13 = v12;
  result = 0;
  if ((v13 & 1) != 0)
  {
LABEL_4:
    v23[0] = v2;
    v23[1] = v3;
    v24 = v4;
    v21[0] = v7;
    v21[1] = v8;
    v22 = v9;
    v15 = _s24SessionPushNotifications0B12SubscriptionV0D4TypeO8ActivityV0bE0O2eeoiySbAI_AItFZ_0((uint64_t)v23, (uint64_t)v21);
    if (((v5 ^ v10) & 1) != 0)
      v16 = 0;
    else
      v16 = v6 ^ v11 ^ 1;
    if ((v15 & 1) != 0)
      return v16;
    else
      return 0;
  }
  return result;
}

uint64_t _s24SessionPushNotifications0B12SubscriptionV0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[6];
  __int16 v57;
  char v58;
  _QWORD v59[6];
  __int16 v60;
  char v61;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int16 *)(a1 + 48) | (*(char *)(a1 + 50) << 16);
  v10 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v13 = *(unsigned __int16 *)(a2 + 48) | (*(char *)(a2 + 50) << 16);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v54 = *(_QWORD *)a2;
  v55 = v9;
  if (v8 < 0)
  {
    if (v13 < 0)
    {
      v59[0] = *(_QWORD *)a1;
      v59[1] = v2;
      v59[2] = v5;
      v59[3] = v4;
      v59[4] = v7;
      v59[5] = v6;
      v60 = v8 & 0x1FF;
      v61 = BYTE2(v8) & 1;
      v56[0] = v10;
      v56[1] = v9;
      v56[2] = v12;
      v56[3] = v11;
      v56[4] = v14;
      v56[5] = v15;
      v57 = v13 & 0x1FF;
      v58 = BYTE2(v13) & 1;
      v43 = v3;
      v44 = v11;
      v37 = v11;
      v38 = v14;
      v49 = v14;
      v42 = v15;
      v39 = v2;
      v40 = v3;
      sub_1C12C2BD8(v10, v9, v12, v37, v14, v15, v13);
      sub_1C12C2BD8(v40, v39, v5, v4, v7, v6, v8);
      sub_1C12C2BD8(v54, v55, v12, v44, v38, v42, v13);
      sub_1C12C2BD8(v43, v39, v5, v4, v7, v6, v8);
      v50 = _s24SessionPushNotifications0B12SubscriptionV0D4TypeO8ActivityV2eeoiySbAG_AGtFZ_0((uint64_t)v59, (uint64_t)v56);
      sub_1C12C2CB0(v43, v39, v5, v4, v7, v6, v8);
      sub_1C12C2CB0(v54, v55, v12, v44, v49, v42, v13);
      sub_1C12C2CB0(v54, v55, v12, v44, v49, v42, v13);
      v32 = v5;
      v30 = v43;
      v31 = v39;
      v33 = v4;
      v34 = v7;
      v35 = v6;
      v36 = v8;
LABEL_11:
      sub_1C12C2CB0(v30, v31, v32, v33, v34, v35, v36);
      v25 = v50;
      return v25 & 1;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    v47 = *(unsigned __int16 *)(a1 + 48) | (*(char *)(a1 + 50) << 16);
    v16 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(a2 + 40);
    v45 = *(_QWORD *)(a1 + 32);
    v46 = *(_QWORD *)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 40);
    if (v3 == v10 && v2 == v9)
    {
      v50 = 1;
      v18 = *(_QWORD *)a1;
      v19 = *(_QWORD *)(a1 + 8);
    }
    else
    {
      v26 = *(_QWORD *)a2;
      v27 = *(_QWORD *)(a2 + 8);
      v28 = *(_QWORD *)(a2 + 32);
      v18 = *(_QWORD *)a1;
      v19 = *(_QWORD *)(a1 + 8);
      v29 = sub_1C1308A98();
      v10 = v26;
      v9 = v27;
      v14 = v28;
      v50 = v29;
    }
    v48 = v14;
    sub_1C12C2BD8(v10, v9, v16, v11, v14, v17, v13);
    sub_1C12C2BD8(v18, v19, v5, v46, v45, v52, v47);
    sub_1C12C2CB0(v18, v19, v5, v46, v45, v52, v47);
    v30 = v54;
    v31 = v55;
    v32 = v16;
    v33 = v11;
    v34 = v48;
    v35 = v17;
    v36 = v13;
    goto LABEL_11;
  }
  v20 = *(_QWORD *)(a2 + 32);
  v21 = *(_QWORD *)(a2 + 40);
  v51 = *(unsigned __int16 *)(a2 + 48) | (*(char *)(a2 + 50) << 16);
  v22 = *(unsigned __int16 *)(a1 + 48) | (*(char *)(a1 + 50) << 16);
  v53 = *(_QWORD *)(a2 + 16);
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD *)(a1 + 8);
  sub_1C12C2BD8(v10, v9, v53, v11, v14, v15, v51);
  sub_1C12C2BD8(v23, v24, v5, v4, v7, v6, v22);
  sub_1C12C2CB0(v23, v24, v5, v4, v7, v6, v22);
  sub_1C12C2CB0(v54, v55, v53, v11, v20, v21, v51);
  v25 = 0;
  return v25 & 1;
}

uint64_t _s24SessionPushNotifications0B12SubscriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  int v5;
  int v6;
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  int v11;
  int v12;
  int v13;
  char v14;
  char v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[3];
  __int16 v24;
  char v25;
  _OWORD v26[3];
  __int16 v27;
  char v28;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(unsigned __int8 *)(a1 + 66);
  v6 = *(unsigned __int16 *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a1 + 67);
  v8 = *(_OWORD *)(a2 + 16);
  v9 = *(_OWORD *)(a2 + 32);
  v10 = *(_OWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 66);
  v12 = *(unsigned __int16 *)(a2 + 64);
  v13 = *(unsigned __int8 *)(a2 + 67);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v21 = *(_OWORD *)(a1 + 32);
  v22 = *(_OWORD *)(a1 + 16);
  v19 = *(_OWORD *)(a2 + 16);
  v20 = *(_OWORD *)(a1 + 48);
  v17 = *(_OWORD *)(a2 + 48);
  v18 = *(_OWORD *)(a2 + 32);
  v14 = sub_1C1308A98();
  v10 = v17;
  v9 = v18;
  v8 = v19;
  v4 = v20;
  v3 = v21;
  v2 = v22;
  v15 = v14;
  result = 0;
  if ((v15 & 1) != 0)
  {
LABEL_4:
    v26[0] = v2;
    v26[1] = v3;
    v26[2] = v4;
    v27 = v6;
    v28 = (v6 | (v5 << 16)) >> 16;
    v23[0] = v8;
    v23[1] = v9;
    v23[2] = v10;
    v25 = (v12 | (v11 << 16)) >> 16;
    v24 = v12;
    return _s24SessionPushNotifications0B12SubscriptionV0D4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v26, (uint64_t)v23) & (v7 == v13);
  }
  return result;
}

unint64_t sub_1C12E7980()
{
  unint64_t result;

  result = qword_1ED78FDC0;
  if (!qword_1ED78FDC0)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1ED78FDC0);
  }
  return result;
}

unint64_t sub_1C12E79C8()
{
  unint64_t result;

  result = qword_1EF6D8140;
  if (!qword_1EF6D8140)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushSubscription.SubscriptionType.Activity.PushType, &type metadata for PushSubscription.SubscriptionType.Activity.PushType);
    atomic_store(result, (unint64_t *)&qword_1EF6D8140);
  }
  return result;
}

unint64_t sub_1C12E7A10()
{
  unint64_t result;

  result = qword_1EF6D8148;
  if (!qword_1EF6D8148)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushSubscription.SubscriptionType.Activity, &type metadata for PushSubscription.SubscriptionType.Activity);
    atomic_store(result, (unint64_t *)&qword_1EF6D8148);
  }
  return result;
}

unint64_t sub_1C12E7A58()
{
  unint64_t result;

  result = qword_1EF6D8150;
  if (!qword_1EF6D8150)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushSubscription.SubscriptionType, &type metadata for PushSubscription.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EF6D8150);
  }
  return result;
}

uint64_t sub_1C12E7A9C()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t storeEnumTagSinglePayload for Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C12E7AF4 + 4 * byte_1C1309F45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C12E7B28 + 4 * byte_1C1309F40[v4]))();
}

uint64_t sub_1C12E7B28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12E7B30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12E7B38);
  return result;
}

uint64_t sub_1C12E7B44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12E7B4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C12E7B50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12E7B58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Priority()
{
  return &type metadata for Priority;
}

uint64_t assignWithCopy for PushSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(unsigned __int8 *)(a2 + 66);
  v11 = *(unsigned __int16 *)(a2 + 64);
  sub_1C12C2BD8(v4, v5, v6, v7, v8, v9, v11 | (v10 << 16));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_WORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 66) = v10;
  sub_1C12C2CB0(v12, v13, v14, v15, v16, v17, v18);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  return a1;
}

__n128 __swift_memcpy68_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PushSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 66);
  v6 = *(_WORD *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  v14 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 66) = v5;
  sub_1C12C2CB0(v7, v8, v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  return a1;
}

uint64_t destroy for PushSubscription.SubscriptionType(uint64_t a1)
{
  return sub_1C12C2CB0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16));
}

uint64_t initializeWithCopy for PushSubscription.SubscriptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1C12C2BD8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 50) = v9;
  *(_WORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t assignWithCopy for PushSubscription.SubscriptionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1C12C2BD8(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 50) = v9;
  sub_1C12C2CB0(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PushSubscription.SubscriptionType(uint64_t a1, uint64_t a2)
{
  char v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  __int128 v12;

  v3 = *(_BYTE *)(a2 + 50);
  v4 = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 50) = v3;
  sub_1C12C2CB0(v5, v7, v6, v8, v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushSubscription.SubscriptionType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFFFFF && *(_BYTE *)(a1 + 51))
    return (*(_DWORD *)a1 + 0xFFFFF);
  v3 = ((*(unsigned __int8 *)(a1 + 50) >> 7) | (2
                                              * ((*(unsigned __int16 *)(a1 + 48) >> 3) & 0x1FC0 | (*(_WORD *)(a1 + 48) >> 2) | (((*(unsigned __int8 *)(a1 + 50) >> 1) & 0x3F) << 13)))) ^ 0xFFFFF;
  if (v3 >= 0xFFFFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PushSubscription.SubscriptionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0xFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0xFFFFF;
    if (a3 >= 0xFFFFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0xFFFFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 1) & 0x7FFFF) - (a2 << 19);
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 50) = (v3 >> 12) & 0xFE;
      *(_WORD *)(result + 48) = (8 * v3) & 0xFE00 | (4 * (v3 & 0x3F));
    }
  }
  return result;
}

uint64_t sub_1C12E7FC4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 50) >> 7;
}

uint64_t sub_1C12E7FD0(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 48);
  result = a1 + 48;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x7F;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1C12E7FEC(uint64_t a1, int a2)
{
  uint64_t result;
  int v3;
  int v4;

  v3 = *(unsigned __int16 *)(a1 + 48);
  result = a1 + 48;
  v4 = (v3 | (*(unsigned __int8 *)(result + 2) << 16)) & 0x10103 | (a2 << 23);
  *(_WORD *)result = v3 & 0x103;
  *(_BYTE *)(result + 2) = BYTE2(v4);
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType()
{
  return &type metadata for PushSubscription.SubscriptionType;
}

uint64_t destroy for PushSubscription.SubscriptionType.Activity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1C12E28F8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for PushSubscription.SubscriptionType.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_1C12CA504(v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  return a1;
}

uint64_t assignWithCopy for PushSubscription.SubscriptionType.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_1C12CA504(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v13 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  sub_1C12E28F8(v9, v10, v11, v12, v13);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t assignWithTake for PushSubscription.SubscriptionType.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_1C12E28F8(v6, v7, v8, v9, v11);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushSubscription.SubscriptionType.Activity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 51))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushSubscription.SubscriptionType.Activity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 51) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Activity()
{
  return &type metadata for PushSubscription.SubscriptionType.Activity;
}

uint64_t destroy for PushSubscription.SubscriptionType.Activity.PushType(uint64_t a1)
{
  return sub_1C12E28F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PushSubscription.SubscriptionType.Activity.PushType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1C12CA504(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PushSubscription.SubscriptionType.Activity.PushType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1C12CA504(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1C12E28F8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PushSubscription.SubscriptionType.Activity.PushType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1C12E28F8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushSubscription.SubscriptionType.Activity.PushType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PushSubscription.SubscriptionType.Activity.PushType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1C12E8450(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1C12E8468(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Activity.PushType()
{
  return &type metadata for PushSubscription.SubscriptionType.Activity.PushType;
}

uint64_t sub_1C12E8494(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t DeviceActivityMonitor.__allocating_init(taskScheduler:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DeviceActivityMonitor.init(taskScheduler:)(a1);
  return v2;
}

uint64_t *DeviceActivityMonitor.init(taskScheduler:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[6];

  v2 = v1;
  v3 = *v1;
  v31 = a1;
  v32 = v3;
  v4 = sub_1C1308714();
  v5 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  v37 = v5;
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1308468();
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x1E0C80A78](v7);
  v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C1308924();
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C130890C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1C130872C();
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F550);
  swift_allocObject();
  v1[3] = sub_1C13086D8();
  sub_1C12CD600();
  sub_1C1308720();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v13, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D0], v27);
  v1[4] = sub_1C1308948();
  *(_OWORD *)(v1 + 11) = 0u;
  *(_OWORD *)(v1 + 13) = 0u;
  v1[15] = 0;
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_handle;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  v18 = v31;
  sub_1C12C3158(v31, (uint64_t)(v1 + 5));
  v19 = (uint64_t)v1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_handle;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = v28;
  sub_1C1308450();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))((uint64_t)v2 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate, v20, v30);
  *((_BYTE *)v2 + 80) = 1;
  sub_1C12E8938();
  v21 = swift_allocObject();
  v22 = v32;
  *(_QWORD *)(v21 + 16) = v2;
  *(_QWORD *)(v21 + 24) = v22;
  aBlock[4] = sub_1C12E8CA0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12E8494;
  aBlock[3] = &block_descriptor_2;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_1C1308720();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  v24 = v35;
  v25 = v36;
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v16, v24, v23);
  _Block_release(v23);
  __swift_destroy_boxed_opaque_existential_1(v18);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
  swift_release();
  return v2;
}

void sub_1C12E8938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD v13[6];

  v1 = v0;
  v2 = swift_allocObject();
  swift_weakInit();
  v13[4] = sub_1C12EAD4C;
  v13[5] = v2;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1C12EA650;
  v13[3] = &block_descriptor_16;
  v3 = _Block_copy(v13);
  swift_release();
  v4 = IOPMScheduleUserActivityLevelNotificationWithTimeout();
  _Block_release(v3);
  if (v4)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v5 = sub_1C13086A8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED78F650);
    v6 = sub_1C130869C();
    v7 = sub_1C1308900();
    if (!os_log_type_enabled(v6, v7))
    {
      v9 = v4;
      goto LABEL_13;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C12C0000, v6, v7, "Registered for device activity events", v8, 2u);
    v9 = v4;
  }
  else
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v10 = sub_1C13086A8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED78F650);
    v6 = sub_1C130869C();
    v11 = sub_1C13088F4();
    if (!os_log_type_enabled(v6, v11))
    {
      v9 = 0;
      goto LABEL_13;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C12C0000, v6, v11, "Failed to register for device activity events", v8, 2u);
    v9 = 0;
  }
  MEMORY[0x1C3BAA558](v8, -1, -1);
LABEL_13:

  v12 = v1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_handle;
  *(_QWORD *)v12 = v9;
  *(_BYTE *)(v12 + 8) = v4 == 0;
}

uint64_t sub_1C12E8B70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = sub_1C1308468();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  sub_1C12E8CC0((char *)&v11 - v7);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v9 = a1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v9, v6, v2);
  swift_endAccess();
  *(_BYTE *)(a1 + 80) = sub_1C12EA87C((uint64_t)v8) & 1;
  sub_1C12E921C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1C12E8C7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C12E8CA0()
{
  uint64_t v0;

  return sub_1C12E8B70(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1C12E8CC0(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1308468();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v35 - v10;
  v35[0] = objc_msgSend((id)objc_opt_self(), sel_userContext);
  if (v35[0])
  {
    v12 = objc_msgSend((id)objc_opt_self(), sel_keyPathForLastUseDate);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v35[0], sel_objectForContextualKeyPath_, v12);
      if (v14)
      {
        v35[1] = v14;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED90);
        v15 = swift_dynamicCast();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v15 ^ 1u, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v16(v11, v4, v5);
          sub_1C1308450();
          v17 = sub_1C1308414();
          v18 = *(void (**)(char *, uint64_t))(v6 + 8);
          v18(v9, v5);
          if ((v17 & 1) != 0)
          {

            v16(a1, v11, v5);
          }
          else
          {
            if (qword_1ED78F670 != -1)
              swift_once();
            v31 = sub_1C13086A8();
            __swift_project_value_buffer(v31, (uint64_t)qword_1ED78F650);
            v32 = sub_1C130869C();
            v33 = sub_1C1308900();
            if (os_log_type_enabled(v32, v33))
            {
              v34 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v34 = 0;
              _os_log_impl(&dword_1C12C0000, v32, v33, "Reported last activity date is nonsense; device is treated as active",
                v34,
                2u);
              MEMORY[0x1C3BAA558](v34, -1, -1);
            }

            sub_1C1308450();
            v18(v11, v5);
          }
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }
      sub_1C12CA4C8((uint64_t)v4, &qword_1ED78F6D0);
      if (qword_1ED78F670 != -1)
        swift_once();
      v27 = sub_1C13086A8();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED78F650);
      v28 = sub_1C130869C();
      v29 = sub_1C1308900();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_1C12C0000, v28, v29, "Cannot obtain last activity date; device is treated as active",
          v30,
          2u);
        MEMORY[0x1C3BAA558](v30, -1, -1);
      }

      sub_1C1308450();
    }
    else
    {
      if (qword_1ED78F670 != -1)
        swift_once();
      v23 = sub_1C13086A8();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED78F650);
      v24 = sub_1C130869C();
      v25 = sub_1C1308900();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1C12C0000, v24, v25, "Cannot last use date keypath; device is treated as active", v26, 2u);
        MEMORY[0x1C3BAA558](v26, -1, -1);
      }

      sub_1C1308450();
    }
  }
  else
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v19 = sub_1C13086A8();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED78F650);
    v20 = sub_1C130869C();
    v21 = sub_1C1308900();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1C12C0000, v20, v21, "Cannot obtain user context; device is treated as active", v22, 2u);
      MEMORY[0x1C3BAA558](v22, -1, -1);
    }

    sub_1C1308450();
  }
}

uint64_t sub_1C12E921C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t result;
  char *v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint8_t *v47;
  int v48;
  uint64_t v49;
  os_log_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[8];
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v1 = v0;
  v56 = *v0;
  v54 = sub_1C1308654();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v55 = (char *)v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C1308660();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1308468();
  v6 = *(char **)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v52 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v46 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v46 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v46 - v15;
  v17 = sub_1C1308738();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (void *)v1[4];
  *(_QWORD *)v20 = v21;
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DEF740], v17);
  v22 = v21;
  LOBYTE(v21) = sub_1C1308744();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v18 = (uint64_t)(v1 + 11);
  swift_beginAccess();
  sub_1C12EACD0((uint64_t)(v1 + 11), (uint64_t)&v61);
  if (*((_QWORD *)&v62 + 1))
  {
    sub_1C12C3158((uint64_t)&v61, (uint64_t)v60);
    sub_1C12CA4C8((uint64_t)&v61, &qword_1ED78ED68);
    __swift_project_boxed_opaque_existential_1(v60, v60[3]);
    sub_1C13086B4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  }
  else
  {
    sub_1C12CA4C8((uint64_t)&v61, &qword_1ED78ED68);
  }
  v63 = 0;
  v61 = 0u;
  v62 = 0u;
  swift_beginAccess();
  sub_1C12DD99C((uint64_t)&v61, (uint64_t)(v1 + 11));
  result = swift_endAccess();
  if ((v1[10] & 1) == 0)
  {
    sub_1C12EA6E4();
    v20 = (char *)v1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
    swift_beginAccess();
    v51 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v6 + 2);
    v51(v14, v20, v5);
    v24 = v16;
    sub_1C130845C();
    v16 = (char *)*((_QWORD *)v6 + 1);
    v6 = v24;
    ((void (*)(char *, uint64_t))v16)(v14, v5);
    sub_1C1308450();
    v25 = sub_1C1308408();
    ((void (*)(char *, uint64_t))v16)(v14, v5);
    if ((v25 & 1) != 0)
    {
      if (qword_1ED78F670 == -1)
      {
LABEL_8:
        v26 = sub_1C13086A8();
        __swift_project_value_buffer(v26, (uint64_t)qword_1ED78F650);
        v51(v11, v6, v5);
        v27 = sub_1C130869C();
        v28 = sub_1C1308900();
        v29 = v28;
        if (os_log_type_enabled(v27, v28))
        {
          v50 = v27;
          v30 = swift_slowAlloc();
          v48 = v29;
          v31 = (uint8_t *)v30;
          v49 = swift_slowAlloc();
          *(_QWORD *)&v61 = v49;
          v47 = v31;
          *(_DWORD *)v31 = 136446210;
          v46[1] = v31 + 4;
          sub_1C12CE1CC((unint64_t *)&qword_1ED78ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
          v32 = sub_1C1308A80();
          v60[5] = sub_1C13044AC(v32, v33, (uint64_t *)&v61);
          sub_1C1308960();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v16)(v11, v5);
          v27 = v50;
          v34 = v47;
          _os_log_impl(&dword_1C12C0000, v50, (os_log_type_t)v48, "Device is inactive; scheduling activity check at %{public}s",
            v47,
            0xCu);
          v35 = v49;
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v35, -1, -1);
          MEMORY[0x1C3BAA558](v34, -1, -1);
        }
        else
        {
          ((void (*)(char *, uint64_t))v16)(v11, v5);
        }

        v41 = v52;
        v51(v52, v20, v5);
        sub_1C130845C();
        ((void (*)(char *, uint64_t))v16)(v41, v5);
        (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v55, *MEMORY[0x1E0D8CD30], v54);
        v42 = v57;
        sub_1C1308648();
        __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
        v43 = swift_allocObject();
        swift_weakInit();
        v44 = swift_allocObject();
        v45 = v56;
        *(_QWORD *)(v44 + 16) = v43;
        *(_QWORD *)(v44 + 24) = v45;
        swift_retain();
        sub_1C130866C();
        swift_release();
        swift_release();
        swift_beginAccess();
        sub_1C12DD99C((uint64_t)&v61, v18);
        swift_endAccess();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v59);
        return ((uint64_t (*)(char *, uint64_t))v16)(v6, v5);
      }
LABEL_19:
      swift_once();
      goto LABEL_8;
    }
    v36 = (uint64_t (*)(char *, uint64_t))v16;
    if (qword_1ED78F670 != -1)
      swift_once();
    v37 = sub_1C13086A8();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED78F650);
    v38 = sub_1C130869C();
    v39 = sub_1C1308900();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1C12C0000, v38, v39, "Device is inactive and grace period has already expired.  Publishing budget level change event.", v40, 2u);
      MEMORY[0x1C3BAA558](v40, -1, -1);
    }

    LOBYTE(v61) = 0;
    sub_1C13086CC();
    return v36(v6, v5);
  }
  return result;
}

uint64_t DeviceActivityMonitor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_handle + 8) & 1) == 0)
    IOPMUnregisterNotification();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_1C12CA4C8(v0 + 88, &qword_1ED78ED68);
  v1 = v0 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
  v2 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DeviceActivityMonitor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_handle + 8) & 1) == 0)
    IOPMUnregisterNotification();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_1C12CA4C8(v0 + 88, &qword_1ED78ED68);
  v1 = v0 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
  v2 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DeviceActivityMonitor.isActive.getter()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12E9AFC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_1C1308468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  LOBYTE(v8) = sub_1C12EA87C((uint64_t)v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8 & 1;
  return result;
}

uint64_t sub_1C12E9BCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12E9AFC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C12E9BE4()
{
  return DeviceActivityMonitor.isActive.getter() & 1;
}

uint64_t sub_1C12E9C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C12D2128();
  *a1 = result;
  return result;
}

uint64_t sub_1C12E9C30(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C12E9C60()
{
  return type metadata accessor for DeviceActivityMonitor();
}

uint64_t type metadata accessor for DeviceActivityMonitor()
{
  uint64_t result;

  result = qword_1ED78F4B8;
  if (!qword_1ED78F4B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C12E9CA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C1308468();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DeviceActivityMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceActivityMonitor.deviceActivityStatePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DeviceActivityMonitor.deviceActivityStatePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DeviceActivityMonitor.deviceActivityStatePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DeviceActivityMonitor.__allocating_init(taskScheduler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t sub_1C12E9D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  _QWORD v16[3];
  _QWORD aBlock[6];

  v3 = sub_1C1308714();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C130872C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    v16[1] = *(_QWORD *)(result + 32);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = a2;
    aBlock[4] = sub_1C12EAD44;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C12E8494;
    aBlock[3] = &block_descriptor_12;
    v14 = _Block_copy(aBlock);
    v16[0] = v4;
    v15 = v14;
    swift_retain();
    sub_1C1308720();
    v16[2] = MEMORY[0x1E0DEE9D8];
    sub_1C12CE1CC(&qword_1ED78F680, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
    sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
    sub_1C1308984();
    MEMORY[0x1C3BA9EF8](0, v10, v6, v15);
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C12E9FB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _BYTE v16[8];

  v2 = sub_1C1308468();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = a1 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  LOBYTE(v6) = sub_1C12EA87C((uint64_t)v5);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 80) & 1) == 0)
    {
      if (qword_1ED78F670 != -1)
        swift_once();
      v8 = sub_1C13086A8();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED78F650);
      v9 = sub_1C130869C();
      v10 = sub_1C1308900();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_1C12C0000, v9, v10, "Device is active as grace period has not expired.  Scheduling another wake.", v11, 2u);
        MEMORY[0x1C3BAA558](v11, -1, -1);
      }

      return sub_1C12E921C();
    }
  }
  else
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v12 = sub_1C13086A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED78F650);
    v13 = sub_1C130869C();
    v14 = sub_1C1308900();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C12C0000, v13, v14, "Device is inactive after grace period expired.  Publishing budget level change event.", v15, 2u);
      MEMORY[0x1C3BAA558](v15, -1, -1);
    }

    v16[7] = 0;
    return sub_1C13086CC();
  }
  return result;
}

uint64_t sub_1C12EA1F4(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C12EA254(a1 != 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C12EA254(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t result;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v26[4];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1C1308468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1308738();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2 + 32);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = v12;
  LOBYTE(v12) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED78F670 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v14 = sub_1C13086A8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED78F650);
  v15 = sub_1C130869C();
  v16 = sub_1C1308900();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v17 = 67240192;
    LODWORD(v27) = a1 & 1;
    sub_1C1308960();
    _os_log_impl(&dword_1C12C0000, v15, v16, "Device activity state may have changed to %{BOOL,public}d", v17, 8u);
    MEMORY[0x1C3BAA558](v17, -1, -1);
  }

  swift_beginAccess();
  sub_1C12EACD0(v2 + 88, (uint64_t)&v27);
  if (*((_QWORD *)&v28 + 1))
  {
    sub_1C12C3158((uint64_t)&v27, (uint64_t)v26);
    sub_1C12CA4C8((uint64_t)&v27, &qword_1ED78ED68);
    __swift_project_boxed_opaque_existential_1(v26, v26[3]);
    sub_1C13086B4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    sub_1C12CA4C8((uint64_t)&v27, &qword_1ED78ED68);
  }
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
  swift_beginAccess();
  sub_1C12DD99C((uint64_t)&v27, v2 + 88);
  result = swift_endAccess();
  if ((a1 & 1) != 0)
  {
    sub_1C1308450();
    v19 = v2 + OBJC_IVAR____TtC24SessionPushNotifications21DeviceActivityMonitor_queue_lastActivityDate;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v19, v7, v4);
    result = swift_endAccess();
    if ((*(_BYTE *)(v2 + 80) & 1) == 0)
    {
      v20 = sub_1C130869C();
      v21 = sub_1C1308900();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_1C12C0000, v20, v21, "Device is active; publishing budget level change event", v22, 2u);
        MEMORY[0x1C3BAA558](v22, -1, -1);
      }

      *(_BYTE *)(v2 + 80) = 1;
      LOBYTE(v27) = 1;
      return sub_1C13086CC();
    }
  }
  else if (*(_BYTE *)(v2 + 80) == 1)
  {
    v23 = sub_1C130869C();
    v24 = sub_1C1308900();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1C12C0000, v23, v24, "Device is inactive; scheduling check after grace period", v25, 2u);
      MEMORY[0x1C3BAA558](v25, -1, -1);
    }

    *(_BYTE *)(v2 + 80) = 0;
    return sub_1C12E921C();
  }
  return result;
}

uint64_t sub_1C12EA650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_1C12EA698(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1C12EA6BC@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

double sub_1C12EA6E4()
{
  id v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (!os_variant_has_internal_ui())
    return 900.0;
  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_1C13087C8();
  objc_msgSend(v0, sel_doubleForKey_, v1);
  v3 = v2;

  if (v3 <= 0.0)
    return 900.0;
  if (qword_1ED78F670 != -1)
    swift_once();
  v4 = sub_1C13086A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED78F650);
  v5 = sub_1C130869C();
  v6 = sub_1C1308900();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134349056;
    sub_1C1308960();
    _os_log_impl(&dword_1C12C0000, v5, v6, "Device activity timeout overridden; set to %{public}f", v7, 0xCu);
    MEMORY[0x1C3BAA558](v7, -1, -1);
  }

  return v3;
}

uint64_t sub_1C12EA87C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v2 = sub_1C1308468();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v33 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v33 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - v13;
  sub_1C12EA6E4();
  sub_1C130845C();
  sub_1C1308450();
  LODWORD(v15) = sub_1C1308408();
  if ((v15 & 1) != 0)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v16 = sub_1C13086A8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED78F650);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, a1, v2);
    v17 = sub_1C130869C();
    v18 = sub_1C1308900();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v38 = v35;
      v36 = (int)v15;
      *(_DWORD *)v19 = 136315138;
      v34 = v19 + 4;
      sub_1C12CE1CC((unint64_t *)&qword_1ED78ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v20 = sub_1C1308A80();
      v37 = sub_1C13044AC(v20, v21, &v38);
      LOBYTE(v15) = v36;
      sub_1C1308960();
      swift_bridgeObjectRelease();
      v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v22(v9, v2);
      _os_log_impl(&dword_1C12C0000, v17, v18, "Device active (last active at %s)", v19, 0xCu);
      v23 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v23, -1, -1);
      MEMORY[0x1C3BAA558](v19, -1, -1);

    }
    else
    {

      v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v22(v9, v2);
    }
  }
  else
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v24 = sub_1C13086A8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED78F650);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v25 = sub_1C130869C();
    v26 = sub_1C1308900();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v36 = (int)v15;
      v15 = (uint8_t *)v27;
      v35 = swift_slowAlloc();
      v38 = v35;
      *(_DWORD *)v15 = 136315138;
      v34 = v15 + 4;
      sub_1C12CE1CC((unint64_t *)&qword_1ED78ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v28 = sub_1C1308A80();
      v37 = sub_1C13044AC(v28, v29, &v38);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v22(v6, v2);
      _os_log_impl(&dword_1C12C0000, v25, v26, "Device inactive (last active at %s)", v15, 0xCu);
      v30 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v30, -1, -1);
      v31 = v15;
      LOBYTE(v15) = v36;
      MEMORY[0x1C3BAA558](v31, -1, -1);

    }
    else
    {

      v22 = *(void (**)(char *, uint64_t))(v3 + 8);
      v22(v6, v2);
    }
  }
  v22(v12, v2);
  v22(v14, v2);
  return v15 & 1;
}

uint64_t sub_1C12EACD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12EAD18()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C12EAD3C()
{
  uint64_t v0;

  return sub_1C12E9D94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C12EAD44()
{
  uint64_t v0;

  return sub_1C12E9FB8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C12EAD4C(uint64_t a1)
{
  return sub_1C12EA1F4(a1);
}

uint64_t sub_1C12EAD6C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED78);
  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12EADC8@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12EBDA8(a1);
}

uint64_t BudgetCache.__allocating_init(persistentStore:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BudgetCache.init(persistentStore:)(a1);
  return v2;
}

uint64_t BudgetCache.init(persistentStore:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v18 = a1;
  v3 = sub_1C1308924();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C130890C();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v8);
  sub_1C12CD600();
  sub_1C1308720();
  v21[0] = MEMORY[0x1E0DEE9D8];
  sub_1C12D2528();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  sub_1C12EB148();
  sub_1C1308984();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v9 = v18;
  *(_QWORD *)(v1 + 16) = sub_1C1308948();
  sub_1C12EB194(v9, v1 + 24);
  sub_1C12EB194(v9, (uint64_t)&v19);
  if (v20)
  {
    sub_1C12CDAEC(&v19, (uint64_t)v21);
    v10 = v22;
    v11 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    *(_QWORD *)(v1 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_1C12EB1DC((uint64_t)&v19);
    *(_QWORD *)(v1 + 64) = sub_1C12DE2FC(MEMORY[0x1E0DEE9D8]);
  }
  if (qword_1ED78F670 != -1)
    swift_once();
  v12 = sub_1C13086A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED78F650);
  swift_retain();
  v13 = sub_1C130869C();
  v14 = sub_1C1308900();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134349056;
    swift_beginAccess();
    *(_QWORD *)&v19 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 16);
    sub_1C1308960();
    swift_release();
    _os_log_impl(&dword_1C12C0000, v13, v14, "Restored %{public}ld budgets", v15, 0xCu);
    MEMORY[0x1C3BAA558](v15, -1, -1);
  }
  else
  {
    swift_release();
  }

  sub_1C12EB1DC(v9);
  return v2;
}

unint64_t sub_1C12EB148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED78FE08;
  if (!qword_1ED78FE08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED78F6A0);
    result = MEMORY[0x1C3BAA4B0](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED78FE08);
  }
  return result;
}

uint64_t sub_1C12EB194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12EB1DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78ED48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C12EB21C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  return sub_1C1308930();
}

uint64_t sub_1C12EB280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1C12C59E0(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = type metadata accessor for Budget();
      v14 = *(_QWORD *)(v13 - 8);
      sub_1C12EBB78(v12 + *(_QWORD *)(v14 + 72) * v11, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
    }
    else
    {
      v17 = type metadata accessor for Budget();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a4, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v15 = type metadata accessor for Budget();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
}

uint64_t sub_1C12EB3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = type metadata accessor for Budget();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = *(NSObject **)(v1 + 16);
  sub_1C12EBB78(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  sub_1C12EBC60((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1C12EBCA4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1C12D25D4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12CDDC4;
  aBlock[3] = &block_descriptor_3;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C12EB52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Budget();
  v8 = (uint64_t *)(a2 + *(int *)(v7 + 24));
  v9 = *v8;
  v10 = v8[1];
  sub_1C12EBB78(a2, (uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C353C((uint64_t)v6, v9, v10);
  swift_endAccess();
  sub_1C12EB194(a1 + 24, (uint64_t)&v14);
  if (!v15)
    return sub_1C12EB1DC((uint64_t)&v14);
  sub_1C12CDAEC(&v14, (uint64_t)v16);
  v11 = v17;
  v12 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(a2, v11, v12);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1C12EB674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C12EBD28;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_1C12DDA10;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1C12CDDC4;
  v11[3] = &block_descriptor_13_0;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C12EB7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Budget();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C12C353C((uint64_t)v8, a2, a3);
  swift_endAccess();
  sub_1C12EB194(a1 + 24, (uint64_t)&v13);
  if (!v14)
    return sub_1C12EB1DC((uint64_t)&v13);
  sub_1C12CDAEC(&v13, (uint64_t)v15);
  v10 = v16;
  v11 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(a2, a3, v10, v11);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t BudgetCache.deinit()
{
  uint64_t v0;

  sub_1C12EB1DC(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BudgetCache.__deallocating_deinit()
{
  uint64_t v0;

  sub_1C12EB1DC(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12EB94C()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED78);
  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12EB9A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  return sub_1C1308930();
}

uint64_t sub_1C12EBA0C(uint64_t a1)
{
  return sub_1C12EB3AC(a1);
}

uint64_t sub_1C12EBA2C(uint64_t a1, uint64_t a2)
{
  return sub_1C12EB674(a1, a2);
}

uint64_t sub_1C12EBA4C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1C12EBA5C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void *sub_1C12EBA90(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1C1308A74();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

_BYTE **sub_1C12EBB24(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1C12EBB34@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1C12EBB5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1C12EB280(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1C12EBB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12EBBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Budget() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12EBC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C12EBCA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Budget() - 8) + 80);
  return sub_1C12EB52C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1C12EBCD4()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1C12EBCFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C12EBD28()
{
  uint64_t *v0;

  return sub_1C12EB7B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C12EBD34()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for BudgetCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for BudgetCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BudgetCache.budgetsBySubscriptionID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BudgetCache.__allocating_init(persistentStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of BudgetCache.budget(subscriptionID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of BudgetCache.update(budget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of BudgetCache.remove(subscriptionID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1C12EBDA8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12EBDFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C12EBB5C(a1);
}

unint64_t BasicBudgetEnforcementPolicy.priority(for:applying:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t *v3;
  unsigned __int8 v6;
  uint64_t v7;
  unint64_t result;
  char v9;

  v6 = *a1;
  v7 = *v3;
  result = type metadata accessor for Budget();
  if (*(uint64_t *)(a2 + *(int *)(result + 20)) <= 0)
  {
    if (*(_QWORD *)(v7 + 16))
    {
      result = sub_1C12C5A44(v6);
      if ((v9 & 1) != 0)
        v6 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + result);
    }
  }
  *a3 = v6;
  return result;
}

unint64_t sub_1C12EBE80()
{
  unint64_t result;

  result = sub_1C12E2718((uint64_t)&unk_1E7A82710);
  qword_1ED78F638 = result;
  return result;
}

uint64_t static BasicBudgetEnforcementPolicy.standard.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12EBF40(&qword_1ED78F648, &qword_1ED78F638, a1);
}

unint64_t sub_1C12EBEC0()
{
  unint64_t result;

  result = sub_1C12E2718((uint64_t)&unk_1E7A82738);
  qword_1EF6D8280 = result;
  return result;
}

uint64_t static BasicBudgetEnforcementPolicy.simulator.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12EBF40(qword_1EF6D7D00, &qword_1EF6D8280, a1);
}

unint64_t sub_1C12EBF00()
{
  unint64_t result;

  result = sub_1C12E2718((uint64_t)&unk_1E7A82760);
  qword_1ED78F4C8 = result;
  return result;
}

uint64_t static BasicBudgetEnforcementPolicy.uiUnlockedJindo.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12EBF40(&qword_1ED78ED58, &qword_1ED78F4C8, a1);
}

uint64_t sub_1C12EBF40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t BasicBudgetEnforcementPolicy.description.getter()
{
  uint64_t v0;

  sub_1C12EC040();
  swift_bridgeObjectRetain();
  v0 = sub_1C1308768();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C12EBFE0()
{
  uint64_t v0;

  sub_1C12EC040();
  swift_bridgeObjectRetain();
  v0 = sub_1C1308768();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1C12EC040()
{
  unint64_t result;

  result = qword_1ED78FDB8;
  if (!qword_1ED78FDB8)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1ED78FDB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for BasicBudgetEnforcementPolicy()
{
  return &type metadata for BasicBudgetEnforcementPolicy;
}

uint64_t dispatch thunk of MockPushServing.connection(forEnvironmentName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PublicTokenStoring.tokens.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PublicTokenStoring.token(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PublicTokenStoring.update(token:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PushTokenStoring.tokens.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PushTokenStoring.update(token:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PushTokenStoring.remove(token:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PushTokenStoring.remove(environmentName:topic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PushTokenStoring.remove(subscriptionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PushTokenStoring.remove(tokens:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PushTokenStoring.remove(environmentName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PushTokenStoring.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PushTokenStoring.tokens(environmentName:topic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of PushTokenStoring.tokens(environmentName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of PushTokenStoring.token(subscriptionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t sub_1C12EC10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1C13085DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C13086A8();
  __swift_allocate_value_buffer(v4, qword_1ED78F650);
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED78F650);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C8FE58], v0);
  return sub_1C1308690();
}

uint64_t static Logger.pushServer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED78F670 != -1)
    swift_once();
  v2 = sub_1C13086A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED78F650);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t dispatch thunk of PushEventPublishing.eventPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PushServing.tokenPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PushServing.publicTokens.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PushServing.subscribe(subscription:createIfNecessary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PushServing.unsubscribe(subscription:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of PushServing.unsubscribe(activityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of PushServing.token(activityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PushServing.hasSubscription(environmentName:topic:channel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

double sub_1C12EC2B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1C12C59E0(a1, a2), (v7 & 1) != 0))
  {
    sub_1C12D38C8(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1C12EC304(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C12EC330 + 4 * aR[a1]))(7565409, 0xE300000000000000);
}

uint64_t sub_1C12EC330()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1C12EC34C()
{
  return 0x2D746E65746E6F63;
}

uint64_t sub_1C12EC370()
{
  return 0x746E657665;
}

uint64_t sub_1C12EC384()
{
  return 0x617373696D736964;
}

uint64_t sub_1C12EC3A8()
{
  return 0x7472656C61;
}

uint64_t sub_1C12EC3BC()
{
  return 0x656C746974;
}

uint64_t sub_1C12EC3D0()
{
  return 2036625250;
}

uint64_t sub_1C12EC3E0()
{
  return 0x79656B2D636F6CLL;
}

uint64_t sub_1C12EC3F8()
{
  return 0x736772612D636F6CLL;
}

uint64_t sub_1C12EC410()
{
  return 0x646E756F73;
}

uint64_t sub_1C12EC424()
{
  return 0x61642D656C617473;
}

uint64_t sub_1C12EC440()
{
  return 0x636E6176656C6572;
}

uint64_t sub_1C12EC464()
{
  return 0x7475626972747461;
}

uint64_t sub_1C12EC484()
{
  return 0x7475626972747461;
}

unint64_t sub_1C12EC4A8()
{
  return 0xD000000000000010;
}

unint64_t sub_1C12EC4C4()
{
  return 0xD000000000000012;
}

void APSPushConnection.__allocating_init(environmentName:namedDelegatePort:queue:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  id v15;

  v15 = objc_allocWithZone(v7);
  APSPushConnection.init(environmentName:namedDelegatePort:queue:delegate:)(a1, a2, a3, a4, a5, a6, a7);
}

void APSPushConnection.init(environmentName:namedDelegatePort:queue:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  id v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v19;

  *(_QWORD *)&v7[OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate + 8] = 0;
  *(_QWORD *)(swift_unknownObjectWeakInit() + 8) = a7;
  swift_unknownObjectWeakAssign();
  v9 = objc_allocWithZone(MEMORY[0x1E0CFE148]);
  v10 = v7;
  v11 = a5;
  v12 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v9, sel_initWithEnvironmentName_namedDelegatePort_queue_, v12, v13, v11);

  if (v14)
  {
    *(_QWORD *)&v10[OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection] = v14;

    v19.receiver = v10;
    v19.super_class = (Class)type metadata accessor for APSPushConnection();
    v15 = (char *)objc_msgSendSuper2(&v19, sel_init);
    v16 = *(void **)&v15[OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection];
    v17 = v15;
    v18 = v16;
    objc_msgSend(v18, sel_setDelegate_, v17);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for APSPushConnection()
{
  return objc_opt_self();
}

id APSPushConnection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void APSPushConnection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id APSPushConnection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for APSPushConnection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void APSPushConnection.requestToken(for:)(_QWORD *a1)
{
  sub_1C12EC8E8(a1, (SEL *)&selRef_requestTokenForInfo_);
}

Swift::Void __swiftcall APSPushConnection.unsubscribe(from:forTopic:)(Swift::String from, Swift::String forTopic)
{
  sub_1C12EC80C(from._countAndFlagsBits, (uint64_t)from._object, forTopic._countAndFlagsBits, (uint64_t)forTopic._object, (SEL *)&selRef_unsubscribeFromChannel_forTopic_);
}

Swift::Void __swiftcall APSPushConnection.subscribe(to:forTopic:)(Swift::String to, Swift::String forTopic)
{
  sub_1C12EC80C(to._countAndFlagsBits, (uint64_t)to._object, forTopic._countAndFlagsBits, (uint64_t)forTopic._object, (SEL *)&selRef_subscribeToChannel_forTopic_);
}

void sub_1C12EC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v7 = objc_allocWithZone(MEMORY[0x1E0CD22E8]);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithChannelID_, v8);

  v10 = *(void **)(v5 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection);
  v11 = (id)sub_1C13087C8();
  objc_msgSend(v10, *a5, v9, v11);

}

void APSPushConnection.invalidateToken(for:)(_QWORD *a1)
{
  sub_1C12EC8E8(a1, (SEL *)&selRef_invalidateTokenForInfo_);
}

void sub_1C12EC8E8(_QWORD *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[2];

  v4 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v18[0] = *a1;
  v18[1] = v9;
  swift_bridgeObjectRetain();
  sub_1C130884C();
  v10 = objc_allocWithZone(MEMORY[0x1E0CFE138]);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_initWithTopic_identifier_, v11, v12);

  v14 = type metadata accessor for AppTokenInfo(0);
  sub_1C12CA2B4((uint64_t)a1 + *(int *)(v14 + 24), (uint64_t)v8);
  v15 = sub_1C1308468();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) != 1)
  {
    v17 = (void *)sub_1C13083FC();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
  }
  objc_msgSend(v13, sel_setExpirationDate_, v17);

  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection), *a2, v13);
}

Swift::Void __swiftcall APSPushConnection.setEnabledTopics(_:ignoredTopics:opportunisticTopics:nonWakingTopics:)(Swift::OpaquePointer _, Swift::OpaquePointer ignoredTopics, Swift::OpaquePointer opportunisticTopics, Swift::OpaquePointer nonWakingTopics)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v5 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection);
  v6 = (void *)sub_1C13088A0();
  v7 = (void *)sub_1C13088A0();
  v8 = (void *)sub_1C13088A0();
  v9 = (id)sub_1C13088A0();
  objc_msgSend(v5, sel_setEnabledTopics_ignoredTopics_opportunisticTopics_nonWakingTopics_, v6, v7, v8, v9);

}

void sub_1C12ECB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C12ECB7C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_unsubscribeFromChannel_forTopic_);
}

void sub_1C12ECB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C12ECB7C(a1, a2, a3, a4, a5, a6, (SEL *)&selRef_subscribeToChannel_forTopic_);
}

void sub_1C12ECB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  uint64_t v7;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v9 = objc_allocWithZone(MEMORY[0x1E0CD22E8]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1C13087C8();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithChannelID_, v10);

  v12 = *(void **)(v7 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection);
  v13 = (id)sub_1C13087C8();
  objc_msgSend(v12, *a7, v11, v13);

}

void sub_1C12ECC50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_connection);
  v2 = (void *)sub_1C13088A0();
  v3 = (void *)sub_1C13088A0();
  v4 = (void *)sub_1C13088A0();
  v5 = (id)sub_1C13088A0();
  objc_msgSend(v1, sel_setEnabledTopics_ignoredTopics_opportunisticTopics_nonWakingTopics_, v2, v3, v4, v5);

}

void APSPushConnection.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1C12F06C8(a2, a3);
}

void APSPushConnection.connection(_:didReceive:)(uint64_t a1, void *a2)
{
  sub_1C12F0958(a2);
}

id sub_1C12ECDC4@<X0>(void *a1@<X0>, NSObject *a2@<X8>)
{
  uint64_t v2;
  id result;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  objc_class *v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  _BYTE *v35;
  id v36;
  void *v37;
  _QWORD *v38;
  uint8_t *v39;
  uint8_t *v40;
  id v41;
  char v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  _BYTE *v47;
  objc_class *v48;
  objc_class *v49[5];
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  if (objc_msgSend(a1, sel_pushType) != (id)1024)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v10 = sub_1C13086A8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED78F650);
    v11 = a1;
    v12 = sub_1C130869C();
    v13 = sub_1C13088F4();
    if (!os_log_type_enabled(v12, v13))
    {

LABEL_25:
      sub_1C12F1540();
      swift_allocError();
      *v35 = 1;
      return (id)swift_willThrow();
    }
    v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v14 = 134349056;
    v49[0] = (objc_class *)objc_msgSend(v11, sel_pushType);
    sub_1C1308960();

    _os_log_impl(&dword_1C12C0000, v12, v13, "Incoming message has an unexpected push type: %{public}lu", v14, 0xCu);
    v15 = v14;
    goto LABEL_23;
  }
  sub_1C13089B4();
  result = objc_msgSend(a1, sel_userInfo);
  if (!result)
  {
    __break(1u);
    goto LABEL_44;
  }
  v6 = result;
  v7 = sub_1C130875C();

  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1C12C5A9C((uint64_t)v49), (v9 & 1) != 0))
  {
    sub_1C12D38C8(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v50);
  }
  else
  {
    v50 = 0u;
    v51 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C12CA494((uint64_t)v49);
  if (!*((_QWORD *)&v51 + 1))
  {
    sub_1C12CA4C8((uint64_t)&v50, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D82C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    if (qword_1ED78F670 != -1)
      swift_once();
    v32 = sub_1C13086A8();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED78F650);
    v12 = sub_1C130869C();
    v33 = sub_1C13088F4();
    if (!os_log_type_enabled(v12, v33))
      goto LABEL_24;
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1C12C0000, v12, v33, "Incoming message does not contain an aps dictionary", v34, 2u);
    v15 = v34;
LABEL_23:
    MEMORY[0x1C3BAA558](v15, -1, -1);
LABEL_24:

    goto LABEL_25;
  }
  result = objc_msgSend(a1, sel_topic);
  if (!result)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  v16 = result;
  v52 = 7565409;
  sub_1C13087D4();

  v17 = 0x80000001C130BB00;
  if ((sub_1C130887C() & 1) != 0)
  {
    v18 = sub_1C1308810();
    v19 = sub_1C12CC884(v18);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x1C3BA9DB4](v19, v21, v23, v25);
    v28 = v27;
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(a1, sel_perAppToken);
    if (v29)
    {
      v30 = v29;
      v2 = sub_1C13083CC();
      v17 = v31;

    }
    else
    {
      v2 = 0;
      v17 = 0xF000000000000000;
    }
    v36 = objc_msgSend(a1, sel_channelID, v26);
    if (v36)
    {
      v37 = v36;
      v38 = (_QWORD *)sub_1C13087D4();
      v40 = v39;

    }
    else
    {
      v38 = 0;
      v40 = 0;
    }
    v41 = objc_msgSend(a1, sel_priority);
    if (v41 == (id)1)
    {
      v42 = 2;
      goto LABEL_36;
    }
    if (v41 == (id)10)
    {
      v42 = 0;
      goto LABEL_36;
    }
    if (v41 == (id)5)
    {
      v42 = 1;
LABEL_36:
      v49[0] = v48;
      v49[1] = v28;
      LOBYTE(v50) = v42;
      static APSPushConnection.createIncomingMessage(from:topic:priority:token:channelID:)(v52, v49, (unsigned __int8 *)&v50, v2, v17, v38, v40, a2);
      sub_1C12F1688(v2, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED78F670 == -1)
      goto LABEL_38;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_38:
  v43 = sub_1C13086A8();
  __swift_project_value_buffer(v43, (uint64_t)qword_1ED78F650);
  v44 = sub_1C130869C();
  v45 = sub_1C13088F4();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1C12C0000, v44, v45, "Incoming message contains an illegal priority", v46, 2u);
    MEMORY[0x1C3BAA558](v46, -1, -1);
  }

  sub_1C12F1540();
  swift_allocError();
  *v47 = 1;
  swift_willThrow();
  return (id)sub_1C12F1688(v2, v17);
}

void APSPushConnection.connection(_:didReceiveToken:for:)(uint64_t a1, NSObject *a2, unint64_t a3, void *a4)
{
  sub_1C12F0C9C(a2, a3, a4);
}

void APSPushConnection.connection(_:channelSubscriptionsFailedWith:)(uint64_t a1, unint64_t a2)
{
  sub_1C12F111C(a2);
}

uint64_t static APSPushConnection.createIncomingMessage(from:topic:priority:token:channelID:)@<X0>(uint64_t a1@<X0>, objc_class **a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, _QWORD *a6@<X5>, uint8_t *a7@<X6>, NSObject *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  const char *v40;
  _BYTE *v41;
  uint64_t result;
  unint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  const void *v92;
  void *v93;
  uint64_t v94;
  NSObject *v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  NSObject *v99;
  NSObject *v100;
  _QWORD *v101;
  uint8_t *v102;
  NSObject *v103;
  os_log_type_t v104;
  _BOOL4 v105;
  uint64_t v106;
  uint8_t *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  int *v122;
  NSObject *v123;
  uint64_t v124;
  unint64_t v125;
  uint8_t *v126;
  objc_class *v127;
  uint64_t *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  unint64_t v145;
  char v146;
  unint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  id v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  _QWORD *v157;
  _BYTE *v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  const char *v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  _BYTE *v169;
  _QWORD *v170;
  unint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  char v174;
  uint64_t v175;
  NSObject *v176;
  os_log_type_t v177;
  uint8_t *v178;
  _BYTE *v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  __int128 v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  objc_class *v214;
  objc_class *v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  unint64_t v219;
  _QWORD *v220;
  uint8_t *v221;
  NSObject *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __int128 v229;
  __int128 aBlock;
  __int128 v231;
  uint64_t (*v232)();
  uint64_t v233;
  __int128 v234;
  __int128 v235;
  uint64_t v236;

  v221 = a7;
  v220 = a6;
  v219 = a5;
  v218 = a4;
  v222 = a8;
  v236 = *MEMORY[0x1E0C80C00];
  v11 = sub_1C13086A8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v193 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v193 - v16;
  v216 = type metadata accessor for IncomingMessage.EventType(0);
  MEMORY[0x1E0C80A78](v216);
  v217 = (uint64_t *)((char *)&v193 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v19);
  v223 = (uint64_t)&v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_1C1308468();
  v225 = *(_QWORD *)(v226 - 8);
  v21 = MEMORY[0x1E0C80A78](v226);
  v23 = (char *)&v193 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v224 = (char *)&v193 - v24;
  if (!*(_QWORD *)(a1 + 16)
    || (v215 = *a2, v214 = a2[1], v25 = *a3, v26 = sub_1C12C59E0(0x746E657665, 0xE500000000000000), (v27 & 1) == 0)
    || (sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v26, (uint64_t)&aBlock), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
    v37 = sub_1C130869C();
    v38 = sub_1C13088F4();
    if (!os_log_type_enabled(v37, v38))
      goto LABEL_16;
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    v40 = "Incoming message does not contain an event type";
    goto LABEL_15;
  }
  if (!*(_QWORD *)(a1 + 16)
    || (v213 = v235, v28 = sub_1C12C59E0(0x6D617473656D6974, 0xE900000000000070), (v29 & 1) == 0)
    || (sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&aBlock), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED78F670 != -1)
      swift_once();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
    v37 = sub_1C130869C();
    v38 = sub_1C13088F4();
    if (!os_log_type_enabled(v37, v38))
      goto LABEL_16;
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    v40 = "Incoming message does not contain a timestamp";
LABEL_15:
    _os_log_impl(&dword_1C12C0000, v37, v38, v40, v39, 2u);
    MEMORY[0x1C3BAA558](v39, -1, -1);
LABEL_16:

    sub_1C12F1540();
    swift_allocError();
    *v41 = 1;
    return swift_willThrow();
  }
  v202 = v25;
  sub_1C130842C();
  v30 = v226;
  if (*(_QWORD *)(a1 + 16)
    && (v31 = sub_1C12C59E0(0x61642D656C617473, 0xEA00000000006574), (v32 & 1) != 0)
    && (sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v31, (uint64_t)&aBlock), (swift_dynamicCast() & 1) != 0))
  {
    v33 = v223;
    sub_1C130842C();
    v34 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v225 + 56);
    v35 = v33;
    v36 = 0;
  }
  else
  {
    v34 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v225 + 56);
    v35 = v223;
    v36 = 1;
  }
  v199 = v34;
  v34((_QWORD *)v35, v36, 1, v30);
  if (!*(_QWORD *)(a1 + 16))
  {
    v201 = 0;
    v200 = 1;
LABEL_88:
    v80 = 0;
    v209 = 0;
    v75 = 0;
    v76 = 0;
    v77 = 0;
    v207 = 0;
    v211 = 0;
    v78 = 0;
    v79 = 0;
    v208 = 0;
    v210 = 0;
    v212 = 1;
    goto LABEL_89;
  }
  v43 = sub_1C12C59E0(0x636E6176656C6572, 0xEF65726F63732D65);
  if ((v44 & 1) != 0)
  {
    sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v43, (uint64_t)&aBlock);
    v45 = swift_dynamicCast();
    v46 = v235;
    if (!v45)
      v46 = 0;
    v201 = v46;
    v47 = v45 ^ 1;
  }
  else
  {
    v201 = 0;
    v47 = 1;
  }
  v200 = v47;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_88;
  v48 = sub_1C12C59E0(0x7472656C61, 0xE500000000000000);
  if ((v49 & 1) == 0)
    goto LABEL_88;
  sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v48, (uint64_t)&aBlock);
  *(_QWORD *)&v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D82C8);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_88;
  v50 = v235;
  v51 = *(_QWORD *)(v235 + 16);
  *((_QWORD *)&v205 + 1) = v235;
  if (v51)
  {
    v52 = sub_1C12C59E0(0x646E756F73, 0xE500000000000000);
    if ((v53 & 1) != 0)
    {
      sub_1C12D38C8(*(_QWORD *)(*((_QWORD *)&v205 + 1) + 56) + 32 * v52, (uint64_t)&aBlock);
      v54 = swift_dynamicCast();
      v55 = v235;
      if (!v54)
        v55 = 0;
      v208 = v55;
      if (v54)
        v56 = *((_QWORD *)&v235 + 1);
      else
        v56 = 0;
      v210 = v56;
    }
    else
    {
      v208 = 0;
      v210 = 0;
    }
    v50 = *((_QWORD *)&v205 + 1);
  }
  else
  {
    v208 = 0;
    v210 = 0;
  }
  if (*(_QWORD *)(v50 + 16))
  {
    v57 = sub_1C12C59E0(0x656C746974, 0xE500000000000000);
    v50 = *((_QWORD *)&v205 + 1);
    if ((v58 & 1) != 0)
    {
      sub_1C12D38C8(*(_QWORD *)(*((_QWORD *)&v205 + 1) + 56) + 32 * v57, (uint64_t)&aBlock);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v59 = v235;
        if (*(_QWORD *)(v235 + 16))
        {
          v60 = sub_1C12C59E0(0x79656B2D636F6CLL, 0xE700000000000000);
          if ((v61 & 1) != 0)
          {
            sub_1C12D38C8(*(_QWORD *)(v59 + 56) + 32 * v60, (uint64_t)&aBlock);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v212 = *((_QWORD *)&v235 + 1);
              v206 = v235;
              if (*(_QWORD *)(v59 + 16)
                && (v62 = sub_1C12C59E0(0x736772612D636F6CLL, 0xE800000000000000), (v63 & 1) != 0))
              {
                sub_1C12D38C8(*(_QWORD *)(v59 + 56) + 32 * v62, (uint64_t)&aBlock);
              }
              else
              {
                aBlock = 0u;
                v231 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((_QWORD *)&v231 + 1))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F588);
                if (swift_dynamicCast())
                {
                  v163 = v235;
LABEL_159:
                  v209 = sub_1C12EFC5C(v163);
                  swift_bridgeObjectRelease();
                  v207 = 0;
                  v211 = 0;
LABEL_60:
                  v50 = *((_QWORD *)&v205 + 1);
                  goto LABEL_61;
                }
              }
              else
              {
                sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
              }
              v163 = MEMORY[0x1E0DEE9D8];
              goto LABEL_159;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
      v50 = *((_QWORD *)&v205 + 1);
    }
  }
  if (*(_QWORD *)(v50 + 16))
  {
    v64 = sub_1C12C59E0(0x656C746974, 0xE500000000000000);
    v50 = *((_QWORD *)&v205 + 1);
    if ((v65 & 1) != 0)
    {
      sub_1C12D38C8(*(_QWORD *)(*((_QWORD *)&v205 + 1) + 56) + 32 * v64, (uint64_t)&aBlock);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v206 = 0;
        v212 = 0;
        v209 = 0;
        v211 = *((_QWORD *)&v235 + 1);
        v207 = v235;
      }
      else
      {
        v207 = 0;
        v211 = 0;
        v206 = 0;
        v212 = 0;
        v209 = 0;
      }
      goto LABEL_60;
    }
  }
  v207 = 0;
  v211 = 0;
  v206 = 0;
  v212 = 0;
  v209 = 0;
LABEL_61:
  if (!*(_QWORD *)(v50 + 16))
    goto LABEL_72;
  v66 = sub_1C12C59E0(2036625250, 0xE400000000000000);
  v50 = *((_QWORD *)&v205 + 1);
  if ((v67 & 1) == 0)
    goto LABEL_72;
  sub_1C12D38C8(*(_QWORD *)(*((_QWORD *)&v205 + 1) + 56) + 32 * v66, (uint64_t)&aBlock);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_71:
    v50 = *((_QWORD *)&v205 + 1);
LABEL_72:
    if (*(_QWORD *)(v50 + 16))
    {
      v73 = sub_1C12C59E0(2036625250, 0xE400000000000000);
      if ((v74 & 1) != 0)
      {
        sub_1C12D38C8(*(_QWORD *)(*((_QWORD *)&v205 + 1) + 56) + 32 * v73, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v231 = 0u;
      }
    }
    else
    {
      aBlock = 0u;
      v231 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v231 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v75 = 0;
        v76 = 0;
        v77 = 0;
        v79 = *((_QWORD *)&v235 + 1);
        v78 = v235;
LABEL_82:
        v80 = v206;
        v81 = v211;
        goto LABEL_83;
      }
    }
    else
    {
      sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
    }
    v78 = 0;
    v79 = 0;
    v75 = 0;
    v76 = 0;
    v77 = 0;
    goto LABEL_82;
  }
  v68 = v235;
  if (!*(_QWORD *)(v235 + 16)
    || (v69 = sub_1C12C59E0(0x79656B2D636F6CLL, 0xE700000000000000), (v70 & 1) == 0)
    || (sub_1C12D38C8(*(_QWORD *)(v68 + 56) + 32 * v69, (uint64_t)&aBlock), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_71;
  }
  swift_bridgeObjectRelease();
  v205 = v235;
  if (*(_QWORD *)(v68 + 16) && (v71 = sub_1C12C59E0(0x736772612D636F6CLL, 0xE800000000000000), (v72 & 1) != 0))
  {
    sub_1C12D38C8(*(_QWORD *)(v68 + 56) + 32 * v71, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v231 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v231 + 1))
  {
    sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
    goto LABEL_161;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F588);
  if (!swift_dynamicCast())
  {
LABEL_161:
    v164 = MEMORY[0x1E0DEE9D8];
    goto LABEL_162;
  }
  v164 = v235;
LABEL_162:
  v77 = sub_1C12EFC5C(v164);
  swift_bridgeObjectRelease();
  v78 = 0;
  v79 = 0;
  v80 = v206;
  v81 = v211;
  v76 = *((_QWORD *)&v205 + 1);
  v75 = v205;
LABEL_83:
  if (!(v212 | v81))
  {
    v82 = v76;
    v198 = v77;
    v83 = v75;
    swift_bridgeObjectRelease();
    v84 = v83;
    v85 = v82;
LABEL_87:
    sub_1C12F15F8(v84, v85);
    swift_bridgeObjectRelease();
    goto LABEL_88;
  }
  if (!(v76 | v79))
  {
    swift_bridgeObjectRelease();
    v84 = v80;
    v85 = v212;
    goto LABEL_87;
  }
LABEL_89:
  if (*(_QWORD *)(a1 + 16))
  {
    v206 = v80;
    *((_QWORD *)&v205 + 1) = v76;
    *(_QWORD *)&v205 = v75;
    v204 = v78;
    v203 = v79;
    v86 = sub_1C12C59E0(0x2D746E65746E6F63, 0xED00006574617473);
    v76 = *((_QWORD *)&v205 + 1);
    v75 = v205;
    v80 = v206;
    if ((v87 & 1) != 0)
    {
      v198 = v77;
      sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v86, (uint64_t)&aBlock);
      sub_1C12F1628(&aBlock, &v235);
      v88 = swift_allocObject();
      v195 = xmmword_1C130A740;
      *(_OWORD *)(v88 + 16) = xmmword_1C130A740;
      v196 = v88 + 16;
      sub_1C12D38C8((uint64_t)&v235, (uint64_t)&v234);
      v89 = swift_allocObject();
      *(_QWORD *)(v89 + 16) = v88;
      sub_1C12F1628(&v234, (_OWORD *)(v89 + 24));
      v232 = sub_1C12F1988;
      v233 = v89;
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v231 = sub_1C12E8494;
      *((_QWORD *)&v231 + 1) = &block_descriptor_4;
      v90 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v91 = (id)acTryWithObjCException();
      v92 = v90;
      v93 = v91;
      _Block_release(v92);
      if (v93)
      {
        v197 = v88;
        sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
        swift_bridgeObjectRelease();
        if (qword_1ED78F670 != -1)
          swift_once();
        v94 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
        (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v94, v11);
        v95 = v93;
        v96 = sub_1C130869C();
        v97 = sub_1C13088F4();
        if (os_log_type_enabled(v96, v97))
        {
          v98 = (uint8_t *)swift_slowAlloc();
          v220 = (_QWORD *)swift_slowAlloc();
          v221 = v98;
          *(_DWORD *)v98 = 138543362;
          v219 = (unint64_t)v93;
          *(_QWORD *)&aBlock = v95;
          v99 = v95;
          v222 = v95;
          v100 = v99;
          sub_1C1308960();
          v101 = v220;
          *v220 = v219;

          v95 = v222;
          v102 = v221;
          _os_log_impl(&dword_1C12C0000, v96, v97, "Incoming message contains a payload that cannot be serialized to data: %{public}@", v221, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D82C0);
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v101, -1, -1);
          MEMORY[0x1C3BAA558](v102, -1, -1);
        }
        else
        {

          v96 = v95;
        }
        v115 = v226;

        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        sub_1C12F1540();
        swift_allocError();
        *v116 = 1;
        swift_willThrow();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
        sub_1C12CA4C8(v223, &qword_1ED78F6D0);
        (*(void (**)(char *, uint64_t))(v225 + 8))(v224, v115);
        return swift_release();
      }
      swift_beginAccess();
      v196 = *(_QWORD *)(v88 + 24);
      v109 = v226;
      v110 = v88;
      if (v196 >> 60 == 15)
      {
        sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
        swift_bridgeObjectRelease();
        if (qword_1ED78F670 != -1)
          swift_once();
        __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
        v111 = sub_1C130869C();
        v112 = sub_1C13088F4();
        if (os_log_type_enabled(v111, v112))
        {
          v113 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v113 = 0;
          _os_log_impl(&dword_1C12C0000, v111, v112, "Incoming message does not contain a usable payload", v113, 2u);
          MEMORY[0x1C3BAA558](v113, -1, -1);
        }

        sub_1C12F1540();
        swift_allocError();
        *v114 = 1;
        swift_willThrow();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
        sub_1C12CA4C8(v223, &qword_1ED78F6D0);
        (*(void (**)(char *, uint64_t))(v225 + 8))(v224, v109);
        return swift_release();
      }
      v117 = *(_QWORD *)(v88 + 16);
      v118 = v213;
      v197 = v110;
      if (v213 == __PAIR128__(0xE600000000000000, 0x657461647075) || (sub_1C1308A98() & 1) != 0)
      {
        v119 = v196;
        sub_1C12C2F04(v117, v196);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
        v120 = v217;
        swift_storeEnumTagMultiPayload();
        v121 = v117;
LABEL_113:
        v122 = (int *)type metadata accessor for IncomingMessage(0);
        v123 = v222;
        sub_1C12CEE60((uint64_t)v120, (uint64_t)v222 + v122[10]);
        (*(void (**)(char *, char *, uint64_t))(v225 + 32))((char *)v123 + v122[8], v224, v226);
        sub_1C12CE310(v223, (uint64_t)v123 + v122[12]);
        v124 = v218;
        v125 = v219;
        sub_1C12CED3C(v218, v219);
        v126 = v221;
        swift_bridgeObjectRetain();
        v127 = v214;
        swift_bridgeObjectRetain();
        result = swift_release();
        v123->isa = (Class)v124;
        v123[1].isa = (Class)v125;
        v123[2].isa = v215;
        v123[3].isa = v127;
        v123[4].isa = (Class)v220;
        v123[5].isa = (Class)v126;
        LOBYTE(v123[6].isa) = v202;
        v128 = (uint64_t *)((char *)v123 + v122[9]);
        *v128 = v121;
        v128[1] = v119;
        v129 = (Class *)((char *)&v123->isa + v122[11]);
        v130 = v212;
        *v129 = v206;
        v129[1] = v130;
        v131 = v205;
        v129[2] = v209;
        v129[3] = v131;
        v132 = v198;
        v129[4] = *((_QWORD *)&v205 + 1);
        v129[5] = v132;
        v133 = v211;
        v129[6] = v207;
        v129[7] = v133;
        v134 = v203;
        v129[8] = v204;
        v129[9] = v134;
        v135 = v210;
        v129[10] = v208;
        v129[11] = v135;
        v136 = (uint64_t)v123 + v122[13];
        *(_QWORD *)v136 = v201;
        *(_BYTE *)(v136 + 8) = v200;
        return result;
      }
      if (v118 == 6581861 && *((_QWORD *)&v213 + 1) == 0xE300000000000000 || (sub_1C1308A98() & 1) != 0)
      {
        v121 = v117;
        v119 = v196;
        sub_1C12C2F04(v117, v196);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 16)
          && (v137 = sub_1C12C59E0(0x617373696D736964, 0xEE00657461642D6CLL), (v138 & 1) != 0)
          && (sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v137, (uint64_t)&aBlock), (swift_dynamicCast() & 1) != 0))
        {
          sub_1C130842C();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
          v120 = v217;
          v139 = v226;
          (*(void (**)(_QWORD *, char *, uint64_t))(v225 + 32))(v217, v23, v226);
          v140 = v120;
          v141 = 0;
          v142 = v139;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
          v120 = v217;
          v140 = v217;
          v141 = 1;
          v142 = v226;
        }
        v199(v140, v141, 1, v142);
        swift_storeEnumTagMultiPayload();
        goto LABEL_113;
      }
      v143 = v117;
      if (v118 == 0x7472617473 && *((_QWORD *)&v213 + 1) == 0xE500000000000000)
      {
        sub_1C12C2F04(v117, v196);
        swift_bridgeObjectRelease();
      }
      else
      {
        v144 = sub_1C1308A98();
        sub_1C12C2F04(v143, v196);
        swift_bridgeObjectRelease();
        if ((v144 & 1) == 0)
        {
          sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
          if (qword_1ED78F670 != -1)
            swift_once();
          __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
          v159 = sub_1C130869C();
          v160 = sub_1C13088F4();
          if (!os_log_type_enabled(v159, v160))
            goto LABEL_156;
          v161 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v161 = 0;
          v162 = "Incoming message contains an illegal event type";
          goto LABEL_155;
        }
      }
      if (*(_QWORD *)(a1 + 16)
        && (v145 = sub_1C12C59E0(0x7475626972747461, 0xEF657079742D7365), (v146 & 1) != 0)
        && (sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v145, (uint64_t)&aBlock), (swift_dynamicCast() & 1) != 0))
      {
        *((_QWORD *)&v213 + 1) = *((_QWORD *)&v234 + 1);
        if (*(_QWORD *)(a1 + 16))
        {
          v199 = (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v234;
          v147 = sub_1C12C59E0(0x7475626972747461, 0xEA00000000007365);
          if ((v148 & 1) != 0)
          {
            sub_1C12D38C8(*(_QWORD *)(a1 + 56) + 32 * v147, (uint64_t)&aBlock);
            sub_1C12F1628(&aBlock, &v234);
            v149 = swift_allocObject();
            *(_OWORD *)(v149 + 16) = v195;
            v194 = v149 + 16;
            sub_1C12D38C8((uint64_t)&v234, (uint64_t)&v229);
            v150 = swift_allocObject();
            *(_QWORD *)(v150 + 16) = v149;
            sub_1C12F1628(&v229, (_OWORD *)(v150 + 24));
            v232 = sub_1C12F16CC;
            v233 = v150;
            *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
            *((_QWORD *)&aBlock + 1) = 1107296256;
            *(_QWORD *)&v231 = sub_1C12E8494;
            *((_QWORD *)&v231 + 1) = &block_descriptor_10_0;
            v151 = _Block_copy(&aBlock);
            *(_QWORD *)&v213 = v149;
            swift_retain();
            swift_release();
            v152 = (id)acTryWithObjCException();
            _Block_release(v151);
            if (v152)
            {
              sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
              swift_bridgeObjectRelease();
              if (qword_1ED78F670 != -1)
                swift_once();
              v153 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
              (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v153, v11);
              v154 = sub_1C130869C();
              v155 = sub_1C13088F4();
              if (os_log_type_enabled(v154, v155))
              {
                v156 = (uint8_t *)swift_slowAlloc();
                v157 = (_QWORD *)swift_slowAlloc();
                *(_DWORD *)v156 = 138543362;
                *(_QWORD *)&aBlock = 0;
                sub_1C1308960();
                *v157 = 0;
                _os_log_impl(&dword_1C12C0000, v154, v155, "Incoming message contains attributes that cannot be serialized to data: %{public}@", v156, 0xCu);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D82C0);
                swift_arrayDestroy();
                MEMORY[0x1C3BAA558](v157, -1, -1);
                MEMORY[0x1C3BAA558](v156, -1, -1);
              }

              (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
              sub_1C12F1540();
              swift_allocError();
              *v158 = 1;
              swift_willThrow();

LABEL_170:
              sub_1C12F1688(v143, v196);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v234);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
              sub_1C12CA4C8(v223, &qword_1ED78F6D0);
              (*(void (**)(char *, uint64_t))(v225 + 8))(v224, v226);
              swift_release();
              return swift_release();
            }
            swift_beginAccess();
            *(_QWORD *)&v195 = *(_QWORD *)(v213 + 24);
            if ((unint64_t)v195 >> 60 == 15)
            {
              sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
              swift_bridgeObjectRelease();
              if (qword_1ED78F670 != -1)
                swift_once();
              __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
              v166 = sub_1C130869C();
              v167 = sub_1C13088F4();
              if (os_log_type_enabled(v166, v167))
              {
                v168 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v168 = 0;
                _os_log_impl(&dword_1C12C0000, v166, v167, "Incoming message contains attributes that cannot be serialized to data", v168, 2u);
                MEMORY[0x1C3BAA558](v168, -1, -1);
              }

              sub_1C12F1540();
              swift_allocError();
              *v169 = 1;
              swift_willThrow();
              goto LABEL_170;
            }
            v194 = *(_QWORD *)(v213 + 16);
            sub_1C12C2F04(v194, v195);
            sub_1C12EC2B4(0xD000000000000010, 0x80000001C130C790, a1, &aBlock);
            if (*((_QWORD *)&v231 + 1))
            {
              if ((swift_dynamicCast() & 1) != 0 && v227 == 1)
              {
                v170 = sub_1C12F017C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
                v172 = v170[2];
                v171 = v170[3];
                if (v172 >= v171 >> 1)
                  v170 = sub_1C12F017C((_QWORD *)(v171 > 1), v172 + 1, 1, v170);
                v170[2] = v172 + 1;
                v173 = &v170[3 * v172];
                v173[4] = 0;
                v173[5] = 0;
                *((_BYTE *)v173 + 48) = 2;
                v174 = 1;
LABEL_179:
                sub_1C12EC2B4(0xD000000000000012, 0x80000001C130C7B0, a1, &aBlock);
                if (*((_QWORD *)&v231 + 1))
                {
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    v175 = v228;
                    if ((v174 & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (qword_1ED78F670 != -1)
                        swift_once();
                      __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
                      v176 = sub_1C130869C();
                      v177 = sub_1C13088F4();
                      if (os_log_type_enabled(v176, v177))
                      {
                        v178 = (uint8_t *)swift_slowAlloc();
                        *(_WORD *)v178 = 0;
                        _os_log_impl(&dword_1C12C0000, v176, v177, "Incoming message contains two forms of push input", v178, 2u);
                        MEMORY[0x1C3BAA558](v178, -1, -1);
                      }

                      sub_1C12F1540();
                      swift_allocError();
                      *v179 = 1;
                      swift_willThrow();
                      sub_1C12F1688(v194, v195);
                      goto LABEL_170;
                    }
                    v180 = v227;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v170 = sub_1C12F017C(0, v170[2] + 1, 1, v170);
                    v182 = v170[2];
                    v181 = v170[3];
                    if (v182 >= v181 >> 1)
                      v170 = sub_1C12F017C((_QWORD *)(v181 > 1), v182 + 1, 1, v170);
                    v170[2] = v182 + 1;
                    v183 = &v170[3 * v182];
                    v183[4] = v180;
                    v183[5] = v175;
                    *((_BYTE *)v183 + 48) = 0;
                  }
                }
                else
                {
                  sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
                }
                sub_1C12EC2B4(0xD000000000000018, 0x80000001C130C7D0, a1, &aBlock);
                if (*((_QWORD *)&v231 + 1))
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F588);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    v193 = v227;
                    v184 = *(_QWORD *)(v227 + 16);
                    if (v184)
                    {
                      v185 = (uint64_t *)(v193 + 40);
                      do
                      {
                        v186 = *(v185 - 1);
                        v187 = *v185;
                        swift_bridgeObjectRetain();
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                          v170 = sub_1C12F017C(0, v170[2] + 1, 1, v170);
                        v189 = v170[2];
                        v188 = v170[3];
                        if (v189 >= v188 >> 1)
                          v170 = sub_1C12F017C((_QWORD *)(v188 > 1), v189 + 1, 1, v170);
                        v185 += 2;
                        v170[2] = v189 + 1;
                        v190 = &v170[3 * v189];
                        v190[4] = v186;
                        v190[5] = v187;
                        *((_BYTE *)v190 + 48) = 1;
                        --v184;
                      }
                      while (v184);
                    }
                    swift_bridgeObjectRelease();
                  }
                }
                else
                {
                  sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
                }
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v234);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
                v120 = v217;
                v191 = *((_QWORD *)&v213 + 1);
                *v217 = v199;
                v120[1] = v191;
                v192 = v195;
                v120[2] = v194;
                v120[3] = v192;
                v120[4] = v170;
                swift_storeEnumTagMultiPayload();
                swift_release();
                v119 = v196;
                v121 = v143;
                goto LABEL_113;
              }
            }
            else
            {
              sub_1C12CA4C8((uint64_t)&aBlock, (uint64_t *)&unk_1EF6D82B0);
            }
            v174 = 0;
            v170 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_179;
          }
        }
        sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C12F1584(v206, v212, v209, v205, *((uint64_t *)&v205 + 1));
      }
      if (qword_1ED78F670 != -1)
        swift_once();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
      v159 = sub_1C130869C();
      v160 = sub_1C13088F4();
      if (!os_log_type_enabled(v159, v160))
      {
LABEL_156:

        sub_1C12F1540();
        swift_allocError();
        *v165 = 1;
        swift_willThrow();
        sub_1C12F1688(v143, v196);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v235);
        sub_1C12CA4C8(v223, &qword_1ED78F6D0);
        (*(void (**)(char *, uint64_t))(v225 + 8))(v224, v226);
        return swift_release();
      }
      v161 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v161 = 0;
      v162 = "Incoming message does not contain usable attributes";
LABEL_155:
      _os_log_impl(&dword_1C12C0000, v159, v160, v162, v161, 2u);
      MEMORY[0x1C3BAA558](v161, -1, -1);
      goto LABEL_156;
    }
  }
  sub_1C12F1584(v80, v212, v209, v75, v76);
  swift_bridgeObjectRelease();
  if (qword_1ED78F670 != -1)
    swift_once();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED78F650);
  v103 = sub_1C130869C();
  v104 = sub_1C13088F4();
  v105 = os_log_type_enabled(v103, v104);
  v106 = v226;
  if (v105)
  {
    v107 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v107 = 0;
    _os_log_impl(&dword_1C12C0000, v103, v104, "Incoming message does not contain a payload", v107, 2u);
    MEMORY[0x1C3BAA558](v107, -1, -1);
  }

  sub_1C12F1540();
  swift_allocError();
  *v108 = 1;
  swift_willThrow();
  sub_1C12CA4C8(v223, &qword_1ED78F6D0);
  return (*(uint64_t (**)(char *, uint64_t))(v225 + 8))(v224, v106);
}

uint64_t sub_1C12EFC5C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1C12C7AF4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    v5 = MEMORY[0x1E0DEA9D8];
    do
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v14 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
      {
        sub_1C12C7AF4(v8 > 1, v9 + 1, 1);
        v2 = v14;
      }
      v4 += 2;
      v12 = MEMORY[0x1E0DEA968];
      v13 = v5;
      *(_QWORD *)&v11 = v7;
      *((_QWORD *)&v11 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v9 + 1;
      sub_1C12CDAEC(&v11, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C12EFD54(uint64_t a1, _QWORD *a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  id v15[4];

  v15[3] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v15[0] = 0;
  v5 = objc_msgSend(v4, sel_dataWithJSONObject_options_error_, sub_1C1308A8C(), 0, v15);
  swift_unknownObjectRelease();
  v6 = v15[0];
  if (v5)
  {
    v7 = sub_1C13083CC();
    v9 = v8;

  }
  else
  {
    v10 = v6;
    v11 = (void *)sub_1C1308378();

    swift_willThrow();
    v7 = 0;
    v9 = 0xF000000000000000;
  }
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  return sub_1C12F1688(v12, v13);
}

uint64_t APSPushConnectionFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t APSPushConnectionFactory.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1C12EFE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v14;
  id v15;

  v14 = objc_allocWithZone((Class)type metadata accessor for APSPushConnection());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = a5;
  swift_unknownObjectRetain();
  APSPushConnection.init(environmentName:namedDelegatePort:queue:delegate:)(a1, a2, a3, a4, v15, a6, a7);
}

uint64_t APSPushConnectionFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t APSPushConnectionFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_1C12EFF50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C12F04CC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C12F0070(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C12F05D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C12F017C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8340);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C12F0864(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C12F029C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE70);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C12F179C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C12F03A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1C12F188C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C12F04CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F498);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12F05D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

void sub_1C12F06C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, _UNKNOWN **, uint64_t, unint64_t, uint64_t, uint64_t);
  NSObject *oslog;

  if (a2 >> 60 == 15)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v3 = sub_1C13086A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED78F650);
    oslog = sub_1C130869C();
    v4 = sub_1C13088F4();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1C12C0000, oslog, v4, "Incoming public token is nil; abandoning", v5, 2u);
      MEMORY[0x1C3BAA558](v5, -1, -1);
    }

  }
  else
  {
    v8 = v2 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate;
    if (MEMORY[0x1C3BAA5C4](v2 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate))
    {
      v9 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType();
      v11 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8);
      sub_1C12C2F04(a1, a2);
      v11(v2, &protocol witness table for APSPushConnection, a1, a2, ObjectType, v9);
      swift_unknownObjectRelease();
      sub_1C12F1688(a1, a2);
    }
  }
}

uint64_t sub_1C12F0864(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

void sub_1C12F0958(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  NSObject *v14;

  v3 = type metadata accessor for IncomingMessage(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = ((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v6 = a1;
    sub_1C12ECDC4(v6, v5);
    v10 = v1 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate;
    if (MEMORY[0x1C3BAA5C4](v1 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate))
    {
      v11 = *(_QWORD *)(v10 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, NSObject *, uint64_t, uint64_t))(v11 + 16))(v1, &protocol witness table for APSPushConnection, v5, ObjectType, v11);

      swift_unknownObjectRelease();
      sub_1C12DD884((uint64_t)v5, type metadata accessor for IncomingMessage);
    }
    else
    {
      sub_1C12DD884((uint64_t)v5, type metadata accessor for IncomingMessage);

    }
  }
  else
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v7 = sub_1C13086A8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED78F650);
    v14 = sub_1C130869C();
    v8 = sub_1C13088F4();
    if (os_log_type_enabled(v14, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C12C0000, v14, v8, "Incoming message token is nil; abandoning", v9, 2u);
      MEMORY[0x1C3BAA558](v9, -1, -1);
    }

  }
}

void sub_1C12F0C9C(NSObject *a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  NSObject *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  NSObject *v50;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AppTokenInfo(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 >> 60 == 15)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v13 = sub_1C13086A8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED78F650);
    v50 = sub_1C130869C();
    v14 = sub_1C13088F4();
    if (os_log_type_enabled(v50, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C12C0000, v50, v14, "Incoming token is nil; abandoning", v15, 2u);
      MEMORY[0x1C3BAA558](v15, -1, -1);
    }
LABEL_14:

    return;
  }
  if (!a3)
  {
    sub_1C12C2F04((uint64_t)a1, a2);
    if (qword_1ED78F670 == -1)
    {
LABEL_11:
      v37 = sub_1C13086A8();
      __swift_project_value_buffer(v37, (uint64_t)qword_1ED78F650);
      v50 = sub_1C130869C();
      v38 = sub_1C13088F4();
      if (os_log_type_enabled(v50, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_1C12C0000, v50, v38, "Incoming token info is nil; abandoning", v39, 2u);
        MEMORY[0x1C3BAA558](v39, -1, -1);
      }
      sub_1C12F1688((uint64_t)a1, a2);
      goto LABEL_14;
    }
LABEL_20:
    swift_once();
    goto LABEL_11;
  }
  v16 = a3;
  v50 = a1;
  sub_1C12CED3C((uint64_t)a1, a2);
  v17 = objc_msgSend(v16, sel_topic);
  sub_1C13087D4();
  a1 = v18;

  if ((sub_1C130887C() & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v49 = a2;
  v19 = sub_1C1308810();
  v20 = sub_1C12CC884(v19);
  v22 = v21;
  v24 = v23;
  v25 = v16;
  v27 = v26;
  swift_bridgeObjectRelease();
  v28 = MEMORY[0x1C3BA9DB4](v20, v22, v24, v27);
  v47 = v29;
  v48 = v28;
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v25, sel_identifier);
  v31 = sub_1C13087D4();
  v33 = v32;

  v34 = objc_msgSend(v25, sel_expirationDate);
  if (v34)
  {
    v35 = v34;
    sub_1C1308444();

    v36 = sub_1C1308468();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 0, 1, v36);
  }
  else
  {
    v40 = sub_1C1308468();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v9, 1, 1, v40);
  }
  v41 = v47;
  *v12 = v48;
  v12[1] = v41;
  v12[2] = v31;
  v12[3] = v33;
  sub_1C12CE310((uint64_t)v9, (uint64_t)v12 + *(int *)(v10 + 24));
  v42 = v3 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate;
  if (MEMORY[0x1C3BAA5C4](v3 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate))
  {
    v43 = *(_QWORD *)(v42 + 8);
    ObjectType = swift_getObjectType();
    v46 = v49;
    v45 = v50;
    (*(void (**)(uint64_t, _UNKNOWN **, NSObject *, unint64_t, uint64_t *, uint64_t, uint64_t))(v43 + 24))(v3, &protocol witness table for APSPushConnection, v50, v49, v12, ObjectType, v43);

    swift_unknownObjectRelease();
    sub_1C12F1688((uint64_t)v45, v46);
    sub_1C12DD884((uint64_t)v12, type metadata accessor for AppTokenInfo);
  }
  else
  {
    sub_1C12DD884((uint64_t)v12, type metadata accessor for AppTokenInfo);

    sub_1C12F1688((uint64_t)v50, v49);
  }
}

void sub_1C12F111C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  os_log_t v5;
  uint64_t v6;
  os_log_t v7;
  id v8;
  void *v9;
  unsigned int v10;
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  objc_class *v23;
  id v24;
  void *v25;
  uint64_t v26;
  objc_class *v27;
  objc_class *v28;
  unint64_t v29;
  unint64_t isa;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t oslog;
  NSObject *osloga;
  NSObject *v43;

  if (!a1)
  {
    if (qword_1ED78F670 == -1)
    {
LABEL_23:
      v32 = sub_1C13086A8();
      __swift_project_value_buffer(v32, (uint64_t)qword_1ED78F650);
      osloga = sub_1C130869C();
      v33 = sub_1C13088F4();
      if (os_log_type_enabled(osloga, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1C12C0000, osloga, v33, "Incoming channel subscription failures array is nil; abandoning",
          v34,
          2u);
        MEMORY[0x1C3BAA558](v34, -1, -1);
      }

      return;
    }
LABEL_34:
    swift_once();
    goto LABEL_23;
  }
  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    v4 = sub_1C1308A44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = (os_log_t)MEMORY[0x1E0DEE9D8];
  if (!v4)
  {
LABEL_26:
    v35 = v2 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate;
    if (MEMORY[0x1C3BAA5C4](v2 + OBJC_IVAR____TtC24SessionPushNotifications17APSPushConnection_delegate))
    {
      v36 = *(_QWORD *)(v35 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, os_log_t, uint64_t, uint64_t))(v36 + 32))(v2, &protocol witness table for APSPushConnection, v5, ObjectType, v36);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1C12C7B10(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  v38 = v2;
  v39 = v3;
  v6 = 0;
  v7 = v43;
  v40 = v3 & 0xC000000000000001;
  while (1)
  {
    if (v4 == v6)
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    oslog = v7;
    v8 = v40 ? (id)MEMORY[0x1C3BA9FC4](v6, v3) : *(id *)(v3 + 8 * v6 + 32);
    v9 = v8;
    v10 = objc_msgSend(v8, sel_failureReason);
    v11 = v10 ? 2 * (v10 != 1) : 1;
    v12 = objc_msgSend(v9, sel_pushTopic);
    if (!v12)
      break;
    v13 = v12;
    sub_1C13087D4();

    if ((sub_1C130887C() & 1) == 0)
      goto LABEL_30;
    if (sub_1C1308810() < 0)
      goto LABEL_31;
    v2 = v4;
    sub_1C1308834();
    v14 = sub_1C1308894();
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1C3BA9DB4](v14, v16, v18, v20);
    v23 = v22;
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v9, sel_channelID);
    if (!v24)
      goto LABEL_36;
    v25 = v24;
    v26 = sub_1C13087D4();
    v28 = v27;

    v7 = oslog;
    isa = (unint64_t)oslog[2].isa;
    v29 = (unint64_t)oslog[3].isa;
    if (isa >= v29 >> 1)
    {
      sub_1C12C7B10(v29 > 1, isa + 1, 1);
      v7 = oslog;
    }
    ++v6;
    v7[2].isa = (Class)(isa + 1);
    v31 = &v7[5 * isa];
    v31[4].isa = (Class)v21;
    v31[5].isa = v23;
    v31[6].isa = (Class)v26;
    v31[7].isa = v28;
    LOBYTE(v31[8].isa) = v11;
    v4 = v2;
    v3 = v39;
    if (v2 == v6)
    {
      v5 = v7;
      v2 = v38;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

unint64_t sub_1C12F1540()
{
  unint64_t result;

  result = qword_1EF6D82A8;
  if (!qword_1EF6D82A8)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushServer.ServerError, &type metadata for PushServer.ServerError);
    atomic_store(result, (unint64_t *)&qword_1EF6D82A8);
  }
  return result;
}

uint64_t sub_1C12F1584(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 != 1)
  {
    sub_1C12F15F8(result, a2);
    sub_1C12F15F8(a4, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C12F15F8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_OWORD *sub_1C12F1628(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1C12F1638()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 60 != 15)
    sub_1C12C2998(*(_QWORD *)(v0 + 16), v1);
  return swift_deallocObject();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1C12F1688(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C12C2998(a1, a2);
  return a1;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1C12F16CC()
{
  uint64_t v0;

  return sub_1C12EFD54(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t method lookup function for APSPushConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of APSPushConnection.__allocating_init(environmentName:namedDelegatePort:queue:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t type metadata accessor for APSPushConnectionFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for APSPushConnectionFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of APSPushConnectionFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of APSPushConnectionFactory.createConnection(environmentName:namedDelegatePort:queue:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

unint64_t sub_1C12F173C()
{
  unint64_t result;

  result = qword_1EF6D8338;
  if (!qword_1EF6D8338)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF6D8338);
  }
  return result;
}

uint64_t sub_1C12F1778(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1C12F179C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C12F188C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t dispatch thunk of BudgetLevelChangePublishing.budgetLevelChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

BOOL Budget.isExhausted.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Budget() + 20)) < 1;
}

uint64_t Budget.consumedBudget.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = type metadata accessor for Budget();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 44));
  v3 = *(_QWORD *)(v0 + *(int *)(v1 + 20));
  result = v2 - v3;
  if (__OFSUB__(v2, v3))
    __break(1u);
  return result;
}

uint64_t Budget.init(topic:subscriptionID:budgetType:startDate:remainingBudget:level:windowDuration:maximumBudgetPerWindow:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;

  v15 = *a1;
  v16 = a1[1];
  v17 = *a4;
  v18 = *a7;
  sub_1C13083E4();
  v19 = (int *)type metadata accessor for Budget();
  v20 = v19[5];
  *(_QWORD *)(a9 + v20) = 0;
  v21 = (_QWORD *)(a9 + v19[7]);
  *v21 = v15;
  v21[1] = v16;
  v22 = (_QWORD *)(a9 + v19[6]);
  *v22 = a2;
  v22[1] = a3;
  *(_BYTE *)(a9 + v19[9]) = v17;
  v23 = sub_1C1308468();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(a9, a5, v23);
  *(_QWORD *)(a9 + v20) = a6;
  *(double *)(a9 + v19[10]) = a10;
  *(_QWORD *)(a9 + v19[11]) = a8;
  *(_BYTE *)(a9 + v19[8]) = v18;
  return result;
}

uint64_t Budget.expirationDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v1 = sub_1C1308468();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  sub_1C1308450();
  v8 = sub_1C1308408();
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v1);
  if ((v8 & 1) != 0)
    sub_1C13083E4();
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v0, v1);
  type metadata accessor for Budget();
  sub_1C1308420();
  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
}

Swift::Void __swiftcall Budget.reduceBudget()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(int *)(type metadata accessor for Budget() + 20);
  v2 = *(_QWORD *)(v0 + v1);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v0 + v1) = v4;
}

uint64_t Budget.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  char v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1C1308468();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v16 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - v10;
  sub_1C1308450();
  v12 = sub_1C1308408();
  v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  if ((v12 & 1) != 0)
    sub_1C13083E4();
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v1, v2);
  type metadata accessor for Budget();
  sub_1C1308420();
  v13(v9, v2);
  sub_1C1308450();
  v14 = sub_1C1308414();
  v13(v6, v2);
  v13(v11, v2);
  return v14 & 1;
}

BOOL static Budget.BudgetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Budget.Level.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656375646572;
  if (*v0 != 1)
    v1 = 0x746E657571657266;
  if (*v0)
    return v1;
  else
    return 0x6576697463616E69;
}

BOOL static Budget.Level.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Budget.Level.hash(into:)()
{
  return sub_1C1308AF8();
}

BOOL static Budget.Level.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t Budget.Level.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

BOOL sub_1C12F1E60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C12F1E74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1C12F1E88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1C12F1E9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1C12F1EB0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656375646572;
  if (*v0 != 1)
    v1 = 0x746E657571657266;
  if (*v0)
    return v1;
  else
    return 0x6576697463616E69;
}

uint64_t Budget.BudgetType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7974697669746361;
  else
    return 0x74536F5468737570;
}

uint64_t Budget.BudgetType.hash(into:)()
{
  return sub_1C1308AF8();
}

uint64_t Budget.BudgetType.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

uint64_t sub_1C12F1FBC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7974697669746361;
  else
    return 0x74536F5468737570;
}

uint64_t Budget.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C1308468();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Budget.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C1308468();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Budget.startDate.modify())()
{
  return nullsub_1;
}

uint64_t Budget.remainingBudget.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Budget() + 20));
}

uint64_t Budget.remainingBudget.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Budget.remainingBudget.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.subscriptionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Budget() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Budget.subscriptionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Budget() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Budget.subscriptionID.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for Budget() + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t Budget.topic.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(v1 + *(int *)(type metadata accessor for Budget() + 28));
  result = swift_bridgeObjectRelease();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*Budget.topic.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.level.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t Budget.level.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Budget();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*Budget.level.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.budgetType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t Budget.budgetType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for Budget();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*Budget.budgetType.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

double Budget.windowDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Budget() + 40));
}

uint64_t Budget.windowDuration.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*Budget.windowDuration.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.maximumBudgetPerWindow.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Budget() + 44));
}

uint64_t Budget.maximumBudgetPerWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *(_QWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*Budget.maximumBudgetPerWindow.modify())()
{
  type metadata accessor for Budget();
  return nullsub_1;
}

uint64_t Budget.description.getter()
{
  sub_1C13089F0();
  sub_1C130884C();
  type metadata accessor for Budget();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  swift_bridgeObjectRetain();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C1308468();
  sub_1C12CE1CC((unint64_t *)&qword_1ED78ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  sub_1C1308A80();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C1308A80();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  sub_1C130884C();
  sub_1C13088C4();
  sub_1C130884C();
  sub_1C1308A80();
  sub_1C130884C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t Budget.hash(into:)()
{
  sub_1C1308468();
  sub_1C12CE1CC(&qword_1EF6D8070, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1C1308774();
  type metadata accessor for Budget();
  sub_1C1308AF8();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  swift_bridgeObjectRelease();
  sub_1C1308AF8();
  sub_1C1308AF8();
  sub_1C1308B10();
  return sub_1C1308AF8();
}

uint64_t Budget.hashValue.getter()
{
  sub_1C1308AEC();
  Budget.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12F2910()
{
  sub_1C1308AEC();
  Budget.hash(into:)();
  return sub_1C1308B1C();
}

uint64_t sub_1C12F2950()
{
  sub_1C1308AEC();
  Budget.hash(into:)();
  return sub_1C1308B1C();
}

BOOL _s24SessionPushNotifications6BudgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  _BOOL8 result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  char v18;

  if ((sub_1C1308438() & 1) == 0)
    return 0;
  v4 = type metadata accessor for Budget();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 20)) != *(_QWORD *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = (int *)v4;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_1C1308A98(), result = 0, (v11 & 1) != 0))
  {
    v13 = v5[7];
    v14 = *(_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v14 == *v16 && v15 == v16[1];
    if (v17 || (v18 = sub_1C1308A98(), result = 0, (v18 & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + v5[8]) == *(unsigned __int8 *)(a2 + v5[8])
        && *(unsigned __int8 *)(a1 + v5[9]) == *(unsigned __int8 *)(a2 + v5[9])
        && *(double *)(a1 + v5[10]) == *(double *)(a2 + v5[10]))
      {
        return *(_QWORD *)(a1 + v5[11]) == *(_QWORD *)(a2 + v5[11]);
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C12F2AA0()
{
  unint64_t result;

  result = qword_1ED78F4D0;
  if (!qword_1ED78F4D0)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for Budget.Level, &type metadata for Budget.Level);
    atomic_store(result, (unint64_t *)&qword_1ED78F4D0);
  }
  return result;
}

unint64_t sub_1C12F2AE8()
{
  unint64_t result;

  result = qword_1EF6D8348;
  if (!qword_1EF6D8348)
  {
    result = MEMORY[0x1C3BAA4B0]("Ŗw& 4", &type metadata for Budget.BudgetType);
    atomic_store(result, (unint64_t *)&qword_1EF6D8348);
  }
  return result;
}

uint64_t sub_1C12F2B2C()
{
  return sub_1C12CE1CC(&qword_1EF6D8350, (uint64_t (*)(uint64_t))type metadata accessor for Budget, (uint64_t)&protocol conformance descriptor for Budget);
}

_QWORD *initializeBufferWithCopyOfBuffer for Budget(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C1308468();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
    v17 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Budget(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for Budget()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12F2F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C1308468();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for Budget()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C12F3010(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C1308468();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1C12F308C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C1308468();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Budget.Level(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C12F3170 + 4 * byte_1C130A795[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C12F31A4 + 4 * asc_1C130A790[v4]))();
}

uint64_t sub_1C12F31A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12F31AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12F31B4);
  return result;
}

uint64_t sub_1C12F31C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12F31C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C12F31CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12F31D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Budget.Level()
{
  return &type metadata for Budget.Level;
}

uint64_t storeEnumTagSinglePayload for Budget.BudgetType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C12F323C + 4 * byte_1C130A79F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C12F3270 + 4 * byte_1C130A79A[v4]))();
}

uint64_t sub_1C12F3270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12F3278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C12F3280);
  return result;
}

uint64_t sub_1C12F328C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C12F3294);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C12F3298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C12F32A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Budget.BudgetType()
{
  return &type metadata for Budget.BudgetType;
}

uint64_t sub_1C12F32BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C12F3318()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C12F334C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C12F3390())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PublicTokenStore.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

uint64_t PublicTokenStore.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  return result;
}

double sub_1C12F3410@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  double result;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1C12C59E0(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v8);
      v11 = v10[1];
      v12 = v10[2];
      v13 = v10[3];
      *a3 = *v10;
      a3[1] = v11;
      a3[2] = v12;
      a3[3] = v13;
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = 0.0;
  *(_OWORD *)a3 = 0u;
  *((_OWORD *)a3 + 1) = 0u;
  return result;
}

uint64_t sub_1C12F34E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1C12C59E0(v3, v2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v12 = 0;
    v11 = 0;
    v13 = 0;
    v14 = 0;
    goto LABEL_7;
  }
  v10 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 32 * v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  swift_bridgeObjectRetain();
  sub_1C12C2F04(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C12C2F04(v13, v14);
  sub_1C12C2F04(v4, v5);
  sub_1C12F3950(v13, v14);
  v16 = v15;
  sub_1C12C2998(v4, v5);
  sub_1C12C2998(v13, v14);
  if ((v16 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(v13, v14);
    return 0;
  }
LABEL_7:
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1C12C2F04(v4, v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v6;
  *v6 = 0x8000000000000000;
  sub_1C12E1AF0(v3, v2, v4, v5, v3, v2, isUniquelyReferenced_nonNull_native);
  *v6 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1C12F3790(v12, v11, v13, v14);
  return 1;
}

uint64_t PublicTokenStore.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PublicTokenStore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C12F370C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

double sub_1C12F374C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1C12F3410(a1, a2, a3);
}

uint64_t sub_1C12F376C(uint64_t *a1)
{
  return sub_1C12F34E0(a1) & 1;
}

uint64_t sub_1C12F3790(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1C12C2998(a3, a4);
  }
  return result;
}

uint64_t sub_1C12F37C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1C1304000((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1C12F389C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1C1308354();
  v11 = result;
  if (result)
  {
    result = sub_1C130836C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1C1308360();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1C1304000(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1C12F3950(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1C12F399C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1C12F39D0 + *((int *)qword_1C12F3BA8 + (v0 >> 62))))();
}

uint64_t sub_1C12F39E0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C12F3BC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PublicTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for PublicTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PublicTokenStore.tokens.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PublicTokenStore.tokens.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PublicTokenStore.tokens.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of PublicTokenStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PublicTokenStore.token(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of PublicTokenStore.update(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.pushToStartSubscriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.tokenSubscriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.channelSubscriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.environmentNames.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.subscriptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.add(subscription:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.remove(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.remove(environmentName:topic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.subscription(activityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.subscription(environmentName:topic:channel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.subscription(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.hasSubscriptions(environmentName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.hasSubscriptions(environmentName:topic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of PushSubscriptionStoring.hasSubscription(environmentName:topic:channel:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 112))();
}

uint64_t sub_1C12F3CF4()
{
  uint64_t v0;

  MEMORY[0x1C3BAA558](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

BOOL static PushServer.ServerError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PushServer.ServerError.hash(into:)()
{
  return sub_1C1308AF8();
}

uint64_t PushServer.ServerError.hashValue.getter()
{
  sub_1C1308AEC();
  sub_1C1308AF8();
  return sub_1C1308B1C();
}

unint64_t sub_1C12F3DD0()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE78);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C130AB60;
  *(_QWORD *)(inited + 32) = sub_1C13087D4();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = 0xD00000000000002BLL;
  *(_QWORD *)(inited + 56) = 0x80000001C130CF00;
  *(_QWORD *)(inited + 64) = sub_1C13087D4();
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = 0xD00000000000002FLL;
  *(_QWORD *)(inited + 88) = 0x80000001C130CF30;
  result = sub_1C12DE494(inited);
  qword_1ED7903E0 = result;
  return result;
}

uint64_t sub_1C12F3E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6C0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C130AB60;
  *(_QWORD *)(v0 + 32) = sub_1C13087D4();
  *(_QWORD *)(v0 + 40) = v1;
  result = sub_1C13087D4();
  *(_QWORD *)(v0 + 48) = result;
  *(_QWORD *)(v0 + 56) = v3;
  qword_1ED7903E8 = v0;
  return result;
}

uint64_t sub_1C12F3EF0()
{
  return sub_1C12C2FAC((uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__eventPublisher, &qword_1ED78FDE8, &qword_1ED78F678);
}

uint64_t sub_1C12F3F0C()
{
  return sub_1C12C2FAC((uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__tokenPublisher, &qword_1ED78F618, &qword_1ED78F610);
}

uint64_t sub_1C12F3F28()
{
  return sub_1C12F3F64((uint64_t *)&unk_1ED78FDF0);
}

uint64_t sub_1C12F3F3C()
{
  return sub_1C12F3F64(&qword_1ED78F688);
}

uint64_t sub_1C12F3F50()
{
  return sub_1C12F3F64(&qword_1ED78F580);
}

uint64_t sub_1C12F3F64(uint64_t *a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1C1308930();
  return v2;
}

uint64_t sub_1C12F3FC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_1C12C3158(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_publicTokenStore, (uint64_t)v8);
  v3 = v9;
  v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = sub_1C12C84B4(v5);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  *a2 = v6;
  return result;
}

id PushServer.__allocating_init(connectionFactory:subscriptionStore:publicTokenStore:tokenStore:budgetServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return PushServer.init(connectionFactory:subscriptionStore:publicTokenStore:tokenStore:budgetServer:)(a1, a2, a3, a4, a5);
}

id PushServer.init(connectionFactory:subscriptionStore:publicTokenStore:tokenStore:budgetServer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_super v48;
  uint64_t v49;

  v45 = a4;
  v46 = a5;
  v43 = a2;
  v44 = a3;
  v42 = a1;
  v47 = sub_1C1308924();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C130890C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1C130872C();
  MEMORY[0x1E0C80A78](v11);
  v12 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer__eventPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FDE8);
  swift_allocObject();
  v13 = v5;
  *(_QWORD *)&v5[v12] = sub_1C13086D8();
  v14 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer__tokenPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F618);
  swift_allocObject();
  *(_QWORD *)&v13[v14] = sub_1C13086D8();
  v15 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer__subscriptionExceedingReducedBudgetPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F5F0);
  swift_allocObject();
  *(_QWORD *)&v13[v15] = sub_1C13086D8();
  v16 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer__unsubscribedActivityPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F600);
  swift_allocObject();
  *(_QWORD *)&v13[v16] = sub_1C13086D8();
  v41 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue;
  v40 = sub_1C12CD600();
  sub_1C1308720();
  v49 = MEMORY[0x1E0DEE9D8];
  v39 = sub_1C12CE1CC((unint64_t *)&qword_1ED78FE10, v10, MEMORY[0x1E0DEF828]);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F6A0);
  v18 = sub_1C12C3018((unint64_t *)&qword_1ED78FE08, (uint64_t *)&unk_1ED78F6A0, MEMORY[0x1E0DEAF38]);
  v35 = v17;
  v36 = v18;
  v38 = v9;
  sub_1C1308984();
  v37 = *MEMORY[0x1E0DEF8D0];
  v19 = *(void (**)(char *))(v6 + 104);
  v33 = v8;
  v20 = v47;
  v19(v8);
  v34 = (void (*)(char *, uint64_t, uint64_t))v19;
  *(_QWORD *)&v13[v41] = sub_1C1308948();
  v41 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer_calloutQueue;
  sub_1C1308720();
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1C1308984();
  v21 = v33;
  v22 = v37;
  ((void (*)(char *, _QWORD, uint64_t))v19)(v33, v37, v20);
  *(_QWORD *)&v13[v41] = sub_1C1308948();
  v41 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer_apsQueue;
  sub_1C1308720();
  v23 = MEMORY[0x1E0DEE9D8];
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1C1308984();
  v34(v21, v22, v47);
  *(_QWORD *)&v13[v41] = sub_1C1308948();
  v24 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connections;
  *(_QWORD *)&v13[v24] = sub_1C12DE5B4(v23);
  *(_QWORD *)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_topicsByPriority] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_cancellableSubscriptions] = MEMORY[0x1E0DEE9E8];
  v25 = v42;
  sub_1C12C3158(v42, (uint64_t)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connectionFactory]);
  v26 = v43;
  sub_1C12C3158(v43, (uint64_t)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore]);
  v27 = v44;
  sub_1C12C3158(v44, (uint64_t)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_publicTokenStore]);
  v28 = v45;
  sub_1C12C3158(v45, (uint64_t)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore]);
  v29 = v46;
  sub_1C1304D28(v46, (uint64_t)&v13[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer]);

  v30 = (objc_class *)type metadata accessor for PushServer();
  v48.receiver = v13;
  v48.super_class = v30;
  v31 = objc_msgSendSuper2(&v48, sel_init);
  __swift_destroy_boxed_opaque_existential_1(v29);
  __swift_destroy_boxed_opaque_existential_1(v28);
  __swift_destroy_boxed_opaque_existential_1(v27);
  __swift_destroy_boxed_opaque_existential_1(v26);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return v31;
}

uint64_t sub_1C12F45AC()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v8[6];

  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1C1304DB0;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_1C12D25D4;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1C12CDDC4;
  v8[3] = &block_descriptor_5;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C12F46D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED60);
  v3 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  v33 = v3;
  MEMORY[0x1E0C80A78](v2);
  v31 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE18);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F500);
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12F4B60();
  v30 = a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer;
  sub_1C1304D28(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer, (uint64_t)v36);
  v11 = v37;
  v12 = v39;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8))(v11);
  v34 = *(id *)(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v14 = v34;
  v35 = v13;
  v15 = sub_1C1308918();
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v29(v7, 1, 1, v15);
  v27 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F528);
  v26 = sub_1C12CD600();
  sub_1C12C3018(&qword_1ED78F520, &qword_1ED78F528, MEMORY[0x1E0C95D90]);
  sub_1C12CE1CC((unint64_t *)&unk_1ED78FE20, (uint64_t (*)(uint64_t))sub_1C12CD600, MEMORY[0x1E0DEF7F8]);
  sub_1C13086FC();
  sub_1C12CA4C8((uint64_t)v7, &qword_1ED78FE18);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C12C3018(&qword_1ED78F4F8, &qword_1ED78F500, MEMORY[0x1E0C95CB8]);
  sub_1C1308708();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  swift_beginAccess();
  sub_1C13086C0();
  swift_endAccess();
  swift_release();
  sub_1C1304D28(v30, (uint64_t)v36);
  v16 = v37;
  v17 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  v19 = v27;
  v34 = v27;
  v35 = v18;
  v29(v7, 1, 1, v15);
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78ED70);
  sub_1C12C3018(&qword_1ED78F508, &qword_1ED78ED70, MEMORY[0x1E0C95D90]);
  v21 = v31;
  sub_1C13086FC();
  sub_1C12CA4C8((uint64_t)v7, &qword_1ED78FE18);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1C1308264;
  *(_QWORD *)(v23 + 24) = v22;
  sub_1C12C3018(&qword_1ED78F4E0, &qword_1ED78ED60, MEMORY[0x1E0C95CB8]);
  v24 = v32;
  sub_1C1308708();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v24);
  swift_beginAccess();
  sub_1C13086C0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C12F4B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = sub_1C1308738();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
    goto LABEL_27;
  sub_1C12C3158(v1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v33);
  v9 = v34;
  v10 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  v13 = 0;
  v14 = v11 + 56;
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v11 + 56);
  v32 = (unint64_t)(v15 + 63) >> 6;
  *(_QWORD *)&v12 = 136446210;
  v29 = v12;
  v28[1] = MEMORY[0x1E0DEE9B8] + 8;
  v30 = v11 + 56;
  v31 = v1;
  if (v17)
    goto LABEL_7;
  while (1)
  {
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v32)
      return swift_release();
    v22 = *(_QWORD *)(v14 + 8 * v13);
    if (!v22)
      break;
LABEL_18:
    v17 = (v22 - 1) & v22;
    for (i = __clz(__rbit64(v22)) + (v13 << 6); ; i = v19 | (v13 << 6))
    {
      v24 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * i);
      v26 = *v24;
      v25 = v24[1];
      swift_bridgeObjectRetain();
      v27 = sub_1C12F9EC0(v26, v25, 1);
      sub_1C12FA6E8(v26, v25, v27, v18);
      swift_unknownObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v17)
        break;
LABEL_7:
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
  }
  v23 = v13 + 1;
  if (v13 + 1 >= v32)
    return swift_release();
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v13 + 2;
  if (v13 + 2 >= v32)
    return swift_release();
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v13 + 3;
  if (v13 + 3 >= v32)
    return swift_release();
  v22 = *(_QWORD *)(v14 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v13 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v32)
      return swift_release();
    v22 = *(_QWORD *)(v14 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C12F4F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3BAA5C4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_1ED78F670 != -1)
      swift_once();
    v5 = sub_1C13086A8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED78F650);
    v6 = sub_1C130869C();
    v7 = sub_1C1308900();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C12C0000, v6, v7, "Budget server says priority has changed; updating enabled topics", v8, 2u);
      MEMORY[0x1C3BAA558](v8, -1, -1);
    }

    sub_1C12F504C();
  }
}

uint64_t sub_1C12F504C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  int64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  sub_1C12C3158(v0 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v21);
  v1 = v22;
  v2 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v5 = 0;
  v6 = v3 + 56;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v20 = (unint64_t)(v7 + 63) >> 6;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v10 | (v5 << 6); ; i = __clz(__rbit64(v13)) + (v5 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * i);
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain();
    v18 = sub_1C12F9EC0(v17, v16, 0);
    sub_1C12FA6E8(v17, v16, v18, v19);
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v5 >= v20)
      return swift_release();
    v13 = *(_QWORD *)(v6 + 8 * v5);
    if (!v13)
      break;
LABEL_15:
    v9 = (v13 - 1) & v13;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v20)
    return swift_release();
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v5 + 2;
  if (v5 + 2 >= v20)
    return swift_release();
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
    goto LABEL_14;
  v14 = v5 + 3;
  if (v5 + 3 >= v20)
    return swift_release();
  v13 = *(_QWORD *)(v6 + 8 * v14);
  if (v13)
  {
LABEL_14:
    v5 = v14;
    goto LABEL_15;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v20)
      return swift_release();
    v13 = *(_QWORD *)(v6 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_15;
  }
LABEL_24:
  __break(1u);
  return result;
}

void sub_1C12F524C(uint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a3;
  v7 = a4 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1C3BAA5C4](v7);
  if (v8)
  {
    v9 = (void *)v8;
    if (v6 == 1)
    {
      if (qword_1ED78F670 != -1)
        swift_once();
      v10 = sub_1C13086A8();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED78F650);
      swift_bridgeObjectRetain_n();
      v11 = sub_1C130869C();
      v12 = sub_1C1308900();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v14 = swift_slowAlloc();
        v15 = v14;
        *(_DWORD *)v13 = 136446210;
        swift_bridgeObjectRetain();
        sub_1C13044AC(a1, a2, &v15);
        sub_1C1308960();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C12C0000, v11, v12, "Budget server says budget level exceeded for %{public}s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v14, -1, -1);
        MEMORY[0x1C3BAA558](v13, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1C12F5438(a1, a2);
    }

  }
}

void sub_1C12F5438(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v5 = v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore;
  sub_1C12C3158(v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v41);
  v6 = v42;
  v7 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 88))(&v32, a1, a2, v6, v7);
  v8 = v33;
  if (v33)
  {
    v9 = v32;
    v11 = v34;
    v10 = v35;
    v13 = v36;
    v12 = v37;
    v15 = v38;
    v14 = v39;
    v16 = v40;
    swift_bridgeObjectRetain_n();
    sub_1C12C2BD8(v11, v10, v13, v12, v15, v14, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    if ((v16 & 0x800000) != 0)
    {
      if ((v16 & 0x10000) != 0)
      {
        sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v16);
        swift_bridgeObjectRelease_n();
        v29 = v16;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C12CA504(v13, v12, v15, v14, v16);
        swift_bridgeObjectRelease();
        sub_1C12E28F8(v13, v12, v15, v14, v16);
        swift_bridgeObjectRetain();
        sub_1C12CA504(v13, v12, v15, v14, v16);
        sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v16);
        sub_1C12C3158(v5, (uint64_t)v41);
        v30 = v43;
        v31 = v42;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        swift_bridgeObjectRetain();
        v29 = v16 & 0x1FF | 0xFF800000;
        sub_1C12C2BD8(v11, v10, v13, v12, v15, v14, v29);
        swift_bridgeObjectRelease();
        v32 = v9;
        v33 = v8;
        v34 = v11;
        v35 = v10;
        v36 = v13;
        v37 = v12;
        v38 = v15;
        v39 = v14;
        BYTE2(v40) = 0x80;
        LOWORD(v40) = v16 & 0x1FF;
        HIBYTE(v40) = HIBYTE(v16);
        (*(void (**)(uint64_t *, uint64_t))(v30 + 48))(&v32, v31);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v29);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v11, v10, v13, v12, v15, v14, v29);
        swift_bridgeObjectRelease();
        v32 = v9;
        v33 = v8;
        v34 = v11;
        v35 = v10;
        v36 = v13;
        v37 = v12;
        v38 = v15;
        v39 = v14;
        BYTE2(v40) = 0x80;
        LOWORD(v40) = v16 & 0x1FF;
        HIBYTE(v40) = HIBYTE(v16);
        sub_1C130278C((uint64_t)&v32);
        sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v16);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v29);
      }
      swift_bridgeObjectRelease();
      v17 = v11;
      v18 = v10;
      v19 = v13;
      v20 = v12;
      v21 = v15;
      v22 = v14;
      v23 = v29;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_1C12C2CB0(v11, v10, v13, v12, v15, v14, v16);
      swift_bridgeObjectRelease();
      v17 = v11;
      v18 = v10;
      v19 = v13;
      v20 = v12;
      v21 = v15;
      v22 = v14;
      v23 = v16;
    }
    sub_1C12C2CB0(v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    if (qword_1ED78F670 != -1)
      swift_once();
    v24 = sub_1C13086A8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v25 = sub_1C130869C();
    v26 = sub_1C13088F4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v27 = 136446210;
      swift_bridgeObjectRetain();
      v41[0] = sub_1C13044AC(a1, a2, &v32);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C12C0000, v25, v26, "Subscription does not exist: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v28, -1, -1);
      MEMORY[0x1C3BAA558](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1C12F5950(__int128 *a1, char a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  char *v20;
  _QWORD v22[2];
  _QWORD aBlock[6];
  _OWORD v24[4];
  int v25;

  v5 = sub_1C1308714();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C130872C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v24[2] = a1[2];
  v24[3] = v14;
  v25 = *((_DWORD *)a1 + 16);
  v15 = a1[1];
  v24[0] = *a1;
  v24[1] = v15;
  v22[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v16 = swift_allocObject();
  v17 = *a1;
  *(_OWORD *)(v16 + 40) = a1[1];
  v18 = a1[3];
  *(_OWORD *)(v16 + 56) = a1[2];
  *(_OWORD *)(v16 + 72) = v18;
  *(_QWORD *)(v16 + 16) = v2;
  *(_DWORD *)(v16 + 88) = *((_DWORD *)a1 + 16);
  *(_OWORD *)(v16 + 24) = v17;
  *(_BYTE *)(v16 + 92) = a2;
  aBlock[4] = sub_1C1304DE8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12E8494;
  aBlock[3] = &block_descriptor_10_1;
  v19 = _Block_copy(aBlock);
  v20 = v2;
  sub_1C12E2880((uint64_t)v24);
  sub_1C1308720();
  v22[1] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v13, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

__n128 sub_1C12F5B88(uint64_t a1, uint64_t a2, int a3)
{
  __int128 v3;
  __int128 v4;
  __n128 result;
  _OWORD v6[4];
  int v7;

  v3 = *(_OWORD *)(a2 + 48);
  v6[2] = *(_OWORD *)(a2 + 32);
  v6[3] = v3;
  v7 = *(_DWORD *)(a2 + 64);
  v4 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v4;
  sub_1C12F5E34((uint64_t)v6, a3);
  return result;
}

void sub_1C12F5E34(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  id v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  os_log_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  os_log_t v93;
  uint64_t v94;
  uint8_t *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  _DWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  uint64_t v116;
  _DWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint8_t *v129;
  uint64_t v130;
  os_log_t v131;
  uint64_t v132;
  NSObject *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint8_t *v140;
  uint64_t v141;
  uint8_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  int v148;
  __int16 v149;
  uint64_t v150;
  uint64_t ObjectType;
  uint8_t *v152;
  uint64_t v153;
  uint64_t v154;
  os_log_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint8_t *v160;
  uint64_t v161;
  int v162;
  os_log_t v163;
  os_log_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint8_t *v178;
  os_log_t v179;
  uint64_t v180;
  NSObject *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  NSObject *v187;
  NSObject *v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  NSObject *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206[3];
  NSObject *v207;
  uint64_t v208;
  uint64_t v209;
  __int16 v210;
  char v211;
  uint64_t v212;

  LODWORD(v177) = a2;
  v4 = sub_1C1308738();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(NSObject **)a1;
  v186 = *(_QWORD *)(a1 + 8);
  v212 = *(_QWORD *)(a1 + 16);
  v182 = *(_QWORD **)(a1 + 24);
  v185 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 48);
  v187 = *(NSObject **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 56);
  LODWORD(v179) = *(char *)(a1 + 66);
  LODWORD(v178) = *(unsigned __int16 *)(a1 + 64);
  v180 = v2;
  v11 = *(void **)(v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v12 = *(unsigned __int8 *)(a1 + 67);
  *v7 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v13 = v11;
  v14 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_66;
  }
  v181 = v8;
  v188 = v8;
  v14 = v186;
  v189 = (_QWORD *)v186;
  LODWORD(v11) = v178 | ((_DWORD)v179 << 16);
  v190 = v212;
  v7 = v182;
  v191 = (uint64_t)v182;
  v5 = v185;
  v192 = v185;
  v193 = (uint64_t)v187;
  v183 = v9;
  v194 = v9;
  v195 = v10;
  v184 = v10;
  LOWORD(v196) = (_WORD)v178;
  LODWORD(v179) = v11 >> 16;
  BYTE2(v196) = BYTE2(v11);
  HIBYTE(v196) = v12;
  v15 = v12;
  v16 = v180;
  if ((sub_1C12FB0D0((uint64_t)&v188) & 1) == 0)
  {
    if (qword_1ED78F670 == -1)
    {
LABEL_6:
      v27 = sub_1C13086A8();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED78F650);
      swift_bridgeObjectRetain();
      v28 = v212;
      v29 = (uint64_t)v7;
      v30 = (uint64_t)v7;
      v31 = (uint64_t)v187;
      v32 = v183;
      v33 = v184;
      sub_1C12C2BD8(v212, v29, v5, (uint64_t)v187, v183, v184, (int)v11);
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v28, v30, v5, v31, v32, v33, (int)v11);
      v34 = sub_1C130869C();
      LODWORD(v180) = sub_1C13088F4();
      if (os_log_type_enabled(v34, (os_log_type_t)v180))
      {
        v179 = v34;
        v35 = swift_slowAlloc();
        v177 = swift_slowAlloc();
        v206[0] = v177;
        v178 = (uint8_t *)v35;
        LODWORD(v35->isa) = 136446210;
        if ((v11 & 0x80000000) != 0)
        {
          swift_bridgeObjectRetain();
          v38 = v28;
          v39 = v30;
          v40 = (int)v11;
          v41 = (uint64_t)v187;
        }
        else
        {
          v188 = v181;
          v189 = (_QWORD *)v14;
          swift_bridgeObjectRetain_n();
          v36 = v185;
          v37 = (uint64_t)v187;
          sub_1C12C2BD8(v28, v30, v185, (uint64_t)v187, v32, v33, (int)v11);
          swift_bridgeObjectRetain();
          sub_1C130884C();
          swift_bridgeObjectRelease_n();
          sub_1C12C2CB0(v28, v30, v36, v37, v32, v33, (int)v11);
          v38 = (uint64_t)v188;
          v39 = (unint64_t)v189;
          v40 = (int)v11;
          v41 = v37;
        }
        v90 = v178;
        v188 = sub_1C13044AC(v38, v39, v206);
        sub_1C1308960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v91 = v212;
        v92 = v185;
        sub_1C12C2CB0(v212, v30, v185, v41, v32, v33, v40);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v91, v30, v92, v41, v32, v33, v40);
        v93 = v179;
        _os_log_impl(&dword_1C12C0000, v179, (os_log_type_t)v180, "Subscription is invalid: %{public}s", v90, 0xCu);
        v94 = v177;
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v94, -1, -1);
        v95 = v90;
        goto LABEL_28;
      }
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v28, v30, v5, v31, v32, v33, (int)v11);
      swift_bridgeObjectRelease();
      v42 = v28;
      v43 = v30;
      v44 = v5;
      v45 = v31;
      v46 = v32;
      v47 = v33;
      v48 = (int)v11;
LABEL_10:
      sub_1C12C2CB0(v42, v43, v44, v45, v46, v47, v48);

LABEL_29:
      sub_1C12F1540();
      swift_allocError();
      *v96 = 1;
      swift_willThrow();
      return;
    }
LABEL_66:
    swift_once();
    goto LABEL_6;
  }
  v174 = v15;
  v171 = v16 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore;
  sub_1C12C3158(v16 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v206);
  v17 = v207;
  v18 = v208;
  __swift_project_boxed_opaque_existential_1(v206, (uint64_t)v207);
  v175 = (int)v11;
  if ((v11 & 0x80000000) != 0)
  {
    swift_bridgeObjectRetain();
    v26 = v212;
  }
  else
  {
    v188 = v181;
    v189 = (_QWORD *)v186;
    swift_bridgeObjectRetain_n();
    v19 = v212;
    v20 = (uint64_t)v7;
    v173 = v18;
    v21 = v7;
    v22 = v183;
    v178 = (uint8_t *)v17;
    v23 = v184;
    sub_1C12C2BD8(v212, v20, v5, (uint64_t)v187, v183, v184, (int)v11);
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    v24 = (uint64_t)v21;
    v18 = v173;
    v25 = v23;
    v17 = v178;
    sub_1C12C2CB0(v19, v24, v5, (uint64_t)v187, v22, v25, (int)v11);
    v26 = (uint64_t)v188;
    v7 = v189;
  }
  (*(void (**)(NSObject **__return_ptr, uint64_t, _QWORD *, NSObject *, uint64_t))(v18 + 88))(&v188, v26, v7, v17, v18);
  swift_bridgeObjectRelease();
  v178 = (uint8_t *)v188;
  v49 = (uint64_t)v189;
  v50 = v190;
  v51 = v191;
  v52 = v192;
  v53 = v193;
  v54 = v194;
  v55 = v195;
  LODWORD(v173) = v196;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v206);
  if ((v177 & 1) == 0)
  {
    v56 = v181;
    if (v49)
      goto LABEL_16;
    if (qword_1ED78F670 != -1)
      swift_once();
    v97 = sub_1C13086A8();
    __swift_project_value_buffer(v97, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain();
    v98 = v212;
    v99 = (uint64_t)v182;
    v100 = v185;
    v101 = (uint64_t)v187;
    v102 = v183;
    v103 = v184;
    v104 = v175;
    sub_1C12C2BD8(v212, (uint64_t)v182, v185, (uint64_t)v187, v183, v184, v175);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v98, v99, v100, v101, v102, v103, v104);
    v34 = sub_1C130869C();
    LODWORD(v180) = sub_1C13088F4();
    if (os_log_type_enabled(v34, (os_log_type_t)v180))
    {
      v179 = v34;
      v105 = (_DWORD *)swift_slowAlloc();
      v178 = (uint8_t *)swift_slowAlloc();
      v206[0] = (uint64_t)v178;
      v177 = (uint64_t)v105;
      *v105 = 136446210;
      if (v104 < 0)
      {
        swift_bridgeObjectRetain();
        v109 = v212;
        v110 = v99;
        v108 = (uint64_t)v187;
      }
      else
      {
        v188 = v181;
        v189 = (_QWORD *)v186;
        swift_bridgeObjectRetain_n();
        v106 = v212;
        v107 = v185;
        v108 = (uint64_t)v187;
        sub_1C12C2BD8(v212, v99, v185, (uint64_t)v187, v102, v103, v104);
        sub_1C130884C();
        swift_bridgeObjectRelease_n();
        sub_1C12C2CB0(v106, v99, v107, v108, v102, v103, v104);
        v109 = (uint64_t)v188;
        v110 = (unint64_t)v189;
      }
      v152 = (uint8_t *)v177;
      v188 = sub_1C13044AC(v109, v110, v206);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v153 = v212;
      v154 = v185;
      sub_1C12C2CB0(v212, v99, v185, v108, v102, v103, v104);
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v153, v99, v154, v108, v102, v103, v104);
      v93 = v179;
      _os_log_impl(&dword_1C12C0000, v179, (os_log_type_t)v180, "Cannot update subscription for activity %{public}s as no subscription exists", v152, 0xCu);
      v155 = (os_log_t)v178;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v155, -1, -1);
      v95 = v152;
LABEL_28:
      MEMORY[0x1C3BAA558](v95, -1, -1);

      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v98, v99, v100, v101, v102, v103, v104);
    swift_bridgeObjectRelease();
    v42 = v98;
    v43 = v99;
    v44 = v100;
    v45 = v101;
    v46 = v102;
    v47 = v103;
    v48 = v104;
    goto LABEL_10;
  }
  v56 = v181;
  if (!v49)
  {
    v57 = v175;
    v188 = v178;
    v189 = 0;
    v190 = v50;
    v191 = v51;
    v192 = v52;
    v193 = v53;
    v194 = v54;
    v195 = v55;
    v196 = v173;
    v58 = (_QWORD *)v186;
    v197 = v181;
    v198 = v186;
    v59 = v212;
    v60 = (uint64_t)v182;
    v199 = v212;
    v200 = (uint64_t)v182;
    v61 = v185;
    v62 = (uint64_t)v187;
    v201 = v185;
    v202 = (uint64_t)v187;
    v63 = v183;
    v64 = v184;
    v203 = v183;
    v204 = v184;
    v205 = v175 & 0xFFFFFF | (v174 << 24);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v59, v60, v61, v62, v63, v64, v57);
    sub_1C1308194((uint64_t)&v188);
    goto LABEL_37;
  }
LABEL_16:
  v172 = v50;
  if ((v178 != (uint8_t *)v56 || v49 != v186) && (sub_1C1308A98() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v77 = v55;
    v111 = v55;
    v65 = v173;
    sub_1C12C2BD8(v50, v51, v52, v53, v54, v111, v173);
    v80 = v52;
    v73 = (os_log_t)v178;
    goto LABEL_36;
  }
  v188 = v50;
  v189 = (_QWORD *)v51;
  v190 = v52;
  v191 = v53;
  v192 = v54;
  v193 = v55;
  v168 = v55;
  v65 = v173;
  LOWORD(v194) = v173;
  BYTE2(v194) = BYTE2(v173);
  v66 = (uint64_t)v182;
  v206[0] = v212;
  v206[1] = (uint64_t)v182;
  v169 = v49;
  v67 = v185;
  v68 = v52;
  v167 = v52;
  v69 = (uint64_t)v187;
  v206[2] = v185;
  v207 = v187;
  v177 = v54;
  v70 = v183;
  v71 = v184;
  v208 = v183;
  v209 = v184;
  v211 = (char)v179;
  v170 = v53;
  v72 = v175;
  v210 = v175;
  swift_bridgeObjectRetain();
  sub_1C12C2BD8(v212, v66, v67, v69, v70, v71, v72);
  v73 = (os_log_t)v178;
  v74 = v68;
  v75 = v168;
  sub_1C130811C((uint64_t)v178, v169, v172, v51, v74, v170, v177, v168, v65);
  v166 = _s24SessionPushNotifications0B12SubscriptionV0D4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v188, (uint64_t)v206);
  swift_bridgeObjectRelease();
  v76 = v66;
  v77 = v75;
  v49 = v169;
  v78 = v70;
  v54 = v177;
  v79 = v71;
  v80 = v167;
  v81 = v72;
  v53 = v170;
  sub_1C12C2CB0(v212, v76, v185, v69, v78, v79, v81);
  if ((v166 & 1) == 0)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    v112 = v172;
    sub_1C12C2CB0(v172, v51, v80, v53, v54, v77, v65);
    sub_1C12E2944((uint64_t)v73, v49, v112, v51, v80, v53, v54, v77, v65);
    v64 = v184;
    v63 = v183;
    v61 = v185;
    v60 = (uint64_t)v182;
    v57 = v175;
    v58 = (_QWORD *)v186;
    v59 = v212;
    goto LABEL_37;
  }
  v166 = HIBYTE(v65);
  swift_bridgeObjectRelease();
  v82 = v172;
  sub_1C12C2CB0(v172, v51, v80, v53, v54, v77, v65);
  sub_1C12E2944((uint64_t)v73, v49, v82, v51, v80, v53, v54, v77, v65);
  v64 = v184;
  v63 = v183;
  v61 = v185;
  v60 = (uint64_t)v182;
  v57 = v175;
  v58 = (_QWORD *)v186;
  v59 = v212;
  if (v166 == v174)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v83 = sub_1C13086A8();
    __swift_project_value_buffer(v83, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain();
    v84 = (uint64_t)v187;
    sub_1C12C2BD8(v59, v60, v61, (uint64_t)v187, v63, v64, v57);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v59, v60, v61, v84, v63, v64, v57);
    v85 = sub_1C130869C();
    LODWORD(v180) = sub_1C1308900();
    if (os_log_type_enabled(v85, (os_log_type_t)v180))
    {
      v179 = v85;
      v86 = (_DWORD *)swift_slowAlloc();
      v178 = (uint8_t *)swift_slowAlloc();
      v206[0] = (uint64_t)v178;
      v177 = (uint64_t)v86;
      *v86 = 136446210;
      if (v57 < 0)
      {
        swift_bridgeObjectRetain();
        v88 = v59;
        v89 = v60;
      }
      else
      {
        v188 = v181;
        v189 = v58;
        swift_bridgeObjectRetain_n();
        v87 = v185;
        sub_1C12C2BD8(v59, v60, v185, v84, v63, v64, v57);
        sub_1C130884C();
        swift_bridgeObjectRelease_n();
        sub_1C12C2CB0(v59, v60, v87, v84, v63, v64, v57);
        v88 = (uint64_t)v188;
        v89 = (unint64_t)v189;
      }
      v156 = v84;
      v157 = v59;
      v158 = v60;
      v159 = v156;
      v160 = (uint8_t *)v177;
      v188 = sub_1C13044AC(v88, v89, v206);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v161 = v185;
      v162 = v175;
      sub_1C12C2CB0(v157, v158, v185, v159, v63, v64, v175);
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v157, v158, v161, v159, v63, v64, v162);
      v163 = v179;
      _os_log_impl(&dword_1C12C0000, v179, (os_log_type_t)v180, "Subscription has not changed: %{public}s", v160, 0xCu);
      v164 = (os_log_t)v178;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v164, -1, -1);
      MEMORY[0x1C3BAA558](v160, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v59, v60, v61, v84, v63, v64, v57);
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v59, v60, v61, v84, v63, v64, v57);

    }
    return;
  }
LABEL_37:
  if (qword_1ED78F670 != -1)
    swift_once();
  v113 = sub_1C13086A8();
  __swift_project_value_buffer(v113, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain();
  v114 = (uint64_t)v187;
  sub_1C12C2BD8(v59, v60, v61, (uint64_t)v187, v63, v64, v57);
  swift_bridgeObjectRetain();
  sub_1C12C2BD8(v59, v60, v61, v114, v63, v64, v57);
  v115 = sub_1C130869C();
  LODWORD(v182) = sub_1C1308900();
  if (os_log_type_enabled(v115, (os_log_type_t)v182))
  {
    v178 = (uint8_t *)v115;
    v116 = v64;
    v117 = (_DWORD *)swift_slowAlloc();
    v173 = swift_slowAlloc();
    v206[0] = v173;
    v177 = (uint64_t)v117;
    *v117 = 136446210;
    if (v57 < 0)
    {
      swift_bridgeObjectRetain();
      v121 = v59;
      v122 = v60;
      v123 = v59;
      v127 = v114;
      v125 = v57;
      v126 = v60;
      v120 = v185;
    }
    else
    {
      v188 = v181;
      v189 = v58;
      swift_bridgeObjectRetain_n();
      v118 = v60;
      v119 = v60;
      v120 = v185;
      sub_1C12C2BD8(v59, v119, v185, v114, v63, v116, v57);
      sub_1C130884C();
      swift_bridgeObjectRelease_n();
      sub_1C12C2CB0(v59, v118, v120, v114, v63, v116, v57);
      v121 = (uint64_t)v188;
      v122 = (unint64_t)v189;
      v123 = v59;
      v124 = v114;
      v125 = v57;
      v126 = v118;
      v127 = v124;
    }
    v129 = (uint8_t *)v177;
    v188 = sub_1C13044AC(v121, v122, v206);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v130 = v184;
    sub_1C12C2CB0(v123, v126, v120, v127, v63, v184, v125);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v123, v126, v120, v127, v63, v130, v125);
    v131 = (os_log_t)v178;
    _os_log_impl(&dword_1C12C0000, (os_log_t)v178, (os_log_type_t)v182, "Creating new subscription to activity: %{public}s", v129, 0xCu);
    v132 = v173;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v132, -1, -1);
    MEMORY[0x1C3BAA558](v129, -1, -1);

    v128 = v120;
    v60 = v126;
    v57 = v125;
    v114 = v127;
    v59 = v123;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v59, v60, v61, v114, v63, v64, v57);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v59, v60, v61, v114, v63, v64, v57);

    v128 = v61;
  }
  v133 = v181;
  sub_1C12C3158(v171, (uint64_t)v206);
  v134 = (uint64_t)v207;
  v135 = v208;
  __swift_project_boxed_opaque_existential_1(v206, (uint64_t)v207);
  v188 = v133;
  v189 = (_QWORD *)v186;
  v190 = v59;
  v191 = v60;
  v192 = v128;
  v193 = v114;
  v194 = v183;
  v195 = v184;
  BYTE2(v196) = (_BYTE)v179;
  LOWORD(v196) = v57;
  HIBYTE(v196) = v174;
  (*(void (**)(NSObject **, uint64_t, uint64_t))(v135 + 48))(&v188, v134, v135);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v206);
  v136 = v60;
  v137 = v59;
  if ((v57 & 0x80000000) == 0 || (v60 = v114, v59 = v128, (v57 & 0xFE) == 0))
  {
    swift_bridgeObjectRetain();
    v138 = v176;
    v139 = sub_1C12F9EC0(v59, v60, 1);
    if (v138)
    {
      swift_bridgeObjectRelease();
      return;
    }
    v141 = v139;
    v142 = v140;
    v143 = v59;
    v144 = v141;
    sub_1C12FA6E8(v143, v60, v141, v140);
    swift_bridgeObjectRelease();
    if ((v57 & 0x80000000) == 0)
    {
      v188 = v181;
      v189 = (_QWORD *)v186;
      v190 = v137;
      v191 = v136;
      v192 = v185;
      v193 = v114;
      v194 = v183;
      v195 = v184;
      LOWORD(v196) = v57;
      BYTE2(v196) = (_BYTE)v179;
      HIBYTE(v196) = v174;
      v145 = v144;
      v146 = (uint64_t)v142;
LABEL_52:
      sub_1C12FB384((uint64_t)&v188, v145, v146);
LABEL_53:
      swift_unknownObjectRelease();
      return;
    }
    v148 = v57;
    v147 = v57 == 0;
    v149 = v57;
    v150 = v183;
    if (v147)
    {
      v188 = v181;
      v189 = (_QWORD *)v186;
      v190 = v137;
      v191 = v136;
      v192 = v185;
      v193 = v114;
      v194 = v183;
      v195 = v184;
      LOWORD(v196) = v149;
      BYTE2(v196) = (_BYTE)v179;
      HIBYTE(v196) = v174;
      v145 = v144;
      v146 = (uint64_t)v142;
      goto LABEL_52;
    }
    if (v148 != 1)
      goto LABEL_53;
    ObjectType = swift_getObjectType();
    v188 = v181;
    v189 = (_QWORD *)v186;
    swift_bridgeObjectRetain();
    sub_1C130884C();
    (*((void (**)(uint64_t, uint64_t, NSObject *, _QWORD *, uint64_t, uint8_t *))v142 + 3))(v150, v184, v188, v189, ObjectType, v142);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C12F7714(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v5 = sub_1C1308714();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C130872C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)&v2[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1C1304E24;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12E8494;
  aBlock[3] = &block_descriptor_16_0;
  v15 = _Block_copy(aBlock);
  v16 = v2;
  swift_bridgeObjectRetain();
  sub_1C1308720();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1C12F7914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C12F7AE0(a2, a3);
}

uint64_t sub_1C12F7AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = v2;
  v7 = sub_1C1308738();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  sub_1C12C3158(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v43);
  v13 = v44;
  v14 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 72))(&v34, a1, a2, v13, v14);
  v15 = v35;
  if (v35)
  {
    v16 = v42;
    v46 = v4;
    v18 = v40;
    v17 = v41;
    v19 = v38;
    v20 = v39;
    v32 = v39;
    v33 = v3;
    v31 = v38;
    v21 = v36;
    v22 = v37;
    v23 = v34;
    HIDWORD(v30) = HIBYTE(v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    v34 = v23;
    v35 = v15;
    v36 = v21;
    v37 = v22;
    v38 = v19;
    v39 = v20;
    v40 = v18;
    v41 = v17;
    BYTE2(v42) = BYTE2(v16);
    LOWORD(v42) = v16;
    HIBYTE(v42) = BYTE4(v30);
    sub_1C12F8268((uint64_t)&v34);
    return sub_1C12E2944(v23, v15, v21, v22, v31, v32, v18, v17, v16);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  if (qword_1ED78F670 != -1)
    goto LABEL_9;
LABEL_5:
  v25 = sub_1C13086A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED78F650);
  v26 = sub_1C130869C();
  v27 = sub_1C13088F4();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1C12C0000, v26, v27, "Subscription does not exist", v28, 2u);
    MEMORY[0x1C3BAA558](v28, -1, -1);
  }

  sub_1C12F1540();
  swift_allocError();
  *v29 = 1;
  return swift_willThrow();
}

uint64_t sub_1C12F7D90(__int128 *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  char *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];
  _OWORD v22[4];
  int v23;

  v3 = sub_1C1308714();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C130872C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v22[2] = a1[2];
  v22[3] = v12;
  v23 = *((_DWORD *)a1 + 16);
  v13 = a1[1];
  v22[0] = *a1;
  v22[1] = v13;
  v20[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v14 = swift_allocObject();
  v15 = *a1;
  *(_OWORD *)(v14 + 40) = a1[1];
  v16 = a1[3];
  *(_OWORD *)(v14 + 56) = a1[2];
  *(_OWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 16) = v1;
  *(_DWORD *)(v14 + 88) = *((_DWORD *)a1 + 16);
  *(_OWORD *)(v14 + 24) = v15;
  aBlock[4] = sub_1C1304E8C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C12E8494;
  aBlock[3] = &block_descriptor_22;
  v17 = _Block_copy(aBlock);
  v18 = v1;
  sub_1C12E2880((uint64_t)v22);
  sub_1C1308720();
  v20[1] = MEMORY[0x1E0DEE9D8];
  sub_1C12CE1CC(&qword_1ED78F680, v4, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED78F690);
  sub_1C12C3018(&qword_1ED78FE00, (uint64_t *)&unk_1ED78F690, MEMORY[0x1E0DEAF38]);
  sub_1C1308984();
  MEMORY[0x1C3BA9EF8](0, v11, v7, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_1C12F7FC0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[4];
  int v6;

  v2 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v2;
  v6 = *(_DWORD *)(a2 + 64);
  v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  return sub_1C12F8268((uint64_t)v5);
}

uint64_t sub_1C12F8268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  unint64_t v31;
  NSObject *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  unint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  uint64_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint8_t *v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint8_t *v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  uint8_t *v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t ObjectType;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  int v146;
  uint8_t *v147;
  uint64_t v148;
  uint8_t *v149;
  os_log_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  NSObject *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  NSObject *v163;
  uint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  NSObject *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173[3];
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;

  v2 = v1;
  v4 = sub_1C1308738();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v159 = *(_QWORD **)(a1 + 16);
  v10 = *(NSObject **)(a1 + 24);
  v157 = v8;
  v158 = v10;
  v176 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v162 = *(void **)(a1 + 48);
  v163 = v11;
  v161 = *(_QWORD *)(a1 + 56);
  v12 = *(char *)(a1 + 66);
  v13 = *(unsigned __int16 *)(a1 + 64);
  v14 = *(void **)(v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v154 = *(unsigned __int8 *)(a1 + 67);
  *v7 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v15 = v14;
  v16 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_44:
    swift_once();
LABEL_7:
    v151 = sub_1C13086A8();
    __swift_project_value_buffer(v151, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain();
    v31 = v9;
    v32 = v158;
    v33 = (uint64_t)v163;
    sub_1C12C2BD8((uint64_t)v7, (uint64_t)v158, v16, (uint64_t)v163, (uint64_t)v14, v13, v5);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8((uint64_t)v7, (uint64_t)v32, v16, v33, (uint64_t)v14, v13, v5);
    v34 = sub_1C130869C();
    v35 = sub_1C1308900();
    LODWORD(v152) = v35;
    if (os_log_type_enabled(v34, v35))
    {
      v150 = v34;
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v173[0] = v37;
      v149 = v36;
      *(_DWORD *)v36 = 136446210;
      v164 = v155;
      v165 = v31;
      swift_bridgeObjectRetain_n();
      sub_1C12C2BD8((uint64_t)v7, (uint64_t)v32, v176, (uint64_t)v163, (uint64_t)v162, v161, v5);
      sub_1C130884C();
      swift_bridgeObjectRelease_n();
      sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v176, (uint64_t)v163, (uint64_t)v162, v161, v5);
      v164 = sub_1C13044AC(v164, v165, v173);
      v14 = v162;
      v38 = (uint64_t)v163;
      v13 = v161;
      sub_1C1308960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v176, v38, (uint64_t)v14, v13, v5);
      swift_bridgeObjectRelease();
      sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v176, v38, (uint64_t)v14, v13, v5);
      v34 = v150;
      v39 = v149;
      _os_log_impl(&dword_1C12C0000, v150, (os_log_type_t)v152, "Unsubscribing from subscription ID: %{public}s", v149, 0xCu);
      swift_arrayDestroy();
      v40 = v37;
      v16 = v176;
      MEMORY[0x1C3BAA558](v40, -1, -1);
      MEMORY[0x1C3BAA558](v39, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v16, v33, (uint64_t)v14, v13, v5);
      swift_bridgeObjectRelease();
      sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v16, v33, (uint64_t)v14, v13, v5);
    }

    v51 = v160;
    swift_bridgeObjectRetain();
    v52 = sub_1C12F9EC0((uint64_t)v7, (unint64_t)v32, 0);
    v160 = v51;
    if (!v51)
    {
      v150 = v53;
      v152 = v52;
      if (qword_1ED78F670 != -1)
        swift_once();
      __swift_project_value_buffer(v151, (uint64_t)qword_1ED78F650);
      v54 = v157;
      swift_bridgeObjectRetain();
      v55 = (uint64_t)v163;
      sub_1C12C2BD8((uint64_t)v7, (uint64_t)v32, v16, (uint64_t)v163, (uint64_t)v14, v13, v5);
      swift_bridgeObjectRetain();
      sub_1C12C2BD8((uint64_t)v7, (uint64_t)v32, v16, v55, (uint64_t)v14, v13, v5);
      v56 = (uint8_t *)sub_1C130869C();
      v57 = sub_1C13088DC();
      LODWORD(v151) = v57;
      if (os_log_type_enabled((os_log_t)v56, v57))
      {
        v149 = v56;
        v58 = v16;
        v59 = (uint8_t *)swift_slowAlloc();
        v148 = swift_slowAlloc();
        v173[0] = v148;
        v147 = v59;
        *(_DWORD *)v59 = 136380675;
        v164 = v155;
        v165 = v54;
        v166 = v7;
        v167 = v32;
        v168 = v58;
        v169 = (uint64_t)v163;
        v170 = (uint64_t)v162;
        v171 = v13;
        BYTE2(v172) = BYTE2(v5);
        LOWORD(v172) = v5;
        HIBYTE(v172) = v154;
        v60 = PushSubscription.description.getter();
        v164 = sub_1C13044AC(v60, v61, v173);
        v14 = v162;
        v55 = (uint64_t)v163;
        sub_1C1308960();
        swift_bridgeObjectRelease();
        v62 = v176;
        swift_bridgeObjectRelease();
        sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v62, v55, (uint64_t)v14, v13, v5);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v62, v55, (uint64_t)v14, v13, v5);
        v63 = v149;
        v64 = v147;
        _os_log_impl(&dword_1C12C0000, (os_log_t)v149, (os_log_type_t)v151, "Unsubscribing from push-to-start: %{private}s", v147, 0xCu);
        v65 = v148;
        swift_arrayDestroy();
        v66 = v65;
        v7 = v159;
        MEMORY[0x1C3BAA558](v66, -1, -1);
        MEMORY[0x1C3BAA558](v64, -1, -1);

        v67 = v154;
        v68 = v155;
        v69 = v153;
        v13 = v161;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v16, v55, (uint64_t)v14, v13, v5);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0((uint64_t)v7, (uint64_t)v32, v16, v55, (uint64_t)v14, v13, v5);

        v62 = v16;
        v69 = v153;
        v68 = v155;
        v67 = v154;
      }
      v164 = v68;
      v165 = v54;
      v166 = v7;
      v167 = v32;
      v168 = v62;
      v169 = v55;
      v170 = (uint64_t)v14;
      v171 = v13;
      LOWORD(v172) = v5;
      BYTE2(v172) = BYTE2(v5);
      HIBYTE(v172) = v67;
      v77 = v152;
      v78 = (uint8_t *)v150;
      sub_1C12FC934((uint64_t)&v164, v152, (uint64_t)v150);
      v79 = (uint64_t)v7;
LABEL_25:
      sub_1C12FA6E8(v79, (uint64_t)v32, v77, v78);
      sub_1C12C3158(v69, (uint64_t)&v164);
      v80 = (uint64_t)v167;
      v81 = v168;
      __swift_project_boxed_opaque_existential_1(&v164, (uint64_t)v167);
      LOBYTE(v80) = (*(uint64_t (**)(uint64_t, NSObject *, uint64_t, uint64_t))(v81 + 96))(v79, v32, v80, v81);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v164);
      if ((v80 & 1) == 0)
      {
        swift_beginAccess();
        sub_1C12C5F64(v79, (uint64_t)v32);
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  LODWORD(v5) = v13 | (v12 << 16);
  v153 = v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore;
  sub_1C12C3158(v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v173);
  v17 = v174;
  v18 = v175;
  v19 = __swift_project_boxed_opaque_existential_1(v173, v174);
  v156 = v2;
  v155 = v9;
  if ((v5 & 0x80000000) != 0)
  {
    v30 = v158;
    swift_bridgeObjectRetain();
    v29 = (uint64_t)v159;
    v9 = v157;
  }
  else
  {
    v150 = v19;
    v20 = v157;
    v164 = v9;
    v165 = v157;
    swift_bridgeObjectRetain_n();
    v151 = v18;
    v22 = v158;
    v21 = (uint64_t)v159;
    v23 = v176;
    v24 = (uint64_t)v163;
    v152 = v17;
    v25 = v161;
    v26 = (uint64_t)v162;
    sub_1C12C2BD8((uint64_t)v159, (uint64_t)v158, v176, (uint64_t)v163, (uint64_t)v162, v161, v5);
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    v27 = v21;
    v18 = v151;
    v28 = (uint64_t)v22;
    v9 = v20;
    v17 = v152;
    sub_1C12C2CB0(v27, v28, v23, v24, v26, v25, v5);
    v29 = v164;
    v30 = v165;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, NSObject *, uint64_t, uint64_t))(v18 + 56))(&v164, v29, v30, v17, v18);
  swift_bridgeObjectRelease();
  sub_1C12E2944(v164, v165, (uint64_t)v166, (uint64_t)v167, v168, v169, v170, v171, v172);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v173);
  if ((v5 & 0x80000000) == 0)
  {
    v16 = v176;
    v7 = v159;
    v13 = v161;
    v14 = v162;
    if (qword_1ED78F670 == -1)
      goto LABEL_7;
    goto LABEL_44;
  }
  v41 = v176;
  v43 = v161;
  v42 = (uint64_t)v162;
  if (qword_1ED78F670 != -1)
    swift_once();
  v151 = sub_1C13086A8();
  __swift_project_value_buffer(v151, (uint64_t)qword_1ED78F650);
  v44 = v158;
  swift_bridgeObjectRetain();
  v45 = (uint64_t)v163;
  sub_1C12CA504(v41, (uint64_t)v163, v42, v43, v5);
  v46 = sub_1C130869C();
  v47 = sub_1C1308900();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = swift_slowAlloc();
    v164 = v49;
    *(_DWORD *)v48 = 136446210;
    swift_bridgeObjectRetain();
    v50 = (uint64_t)v159;
    v173[0] = sub_1C13044AC((uint64_t)v159, (unint64_t)v44, &v164);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v50, (uint64_t)v44, v176, (uint64_t)v163, (uint64_t)v162, v161, v5);
    _os_log_impl(&dword_1C12C0000, v46, v47, "Unsubscribing from activity ID: %{public}s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v49, -1, -1);
    MEMORY[0x1C3BAA558](v48, -1, -1);
  }
  else
  {
    v50 = (uint64_t)v159;
    sub_1C12C2CB0((uint64_t)v159, (uint64_t)v44, v41, v45, v42, v43, v5);
  }

  v70 = v160;
  v71 = v5;
  v164 = v50;
  v165 = (unint64_t)v44;
  swift_bridgeObjectRetain();
  sub_1C13086CC();
  result = swift_bridgeObjectRelease();
  if (v5 < 2u)
  {
    v73 = (uint64_t)v163;
    swift_bridgeObjectRetain();
    v74 = v176;
    v75 = sub_1C12F9EC0(v176, v73, 0);
    if (!v70)
    {
      v150 = v76;
      v152 = v75;
      if ((_BYTE)v5)
      {
        v82 = v161;
        if (qword_1ED78F670 != -1)
          swift_once();
        v160 = __swift_project_value_buffer(v151, (uint64_t)qword_1ED78F650);
        swift_bridgeObjectRetain();
        v83 = (uint64_t)v162;
        sub_1C12C2BD8(v50, (uint64_t)v44, v74, v73, (uint64_t)v162, v82, v5);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v50, (uint64_t)v44, v74, v73, v83, v82, v5);
        v84 = sub_1C130869C();
        v85 = sub_1C13088DC();
        v86 = v82;
        v87 = v85;
        if (os_log_type_enabled(v84, v85))
        {
          v158 = v84;
          v88 = v74;
          v89 = (uint8_t *)swift_slowAlloc();
          v151 = swift_slowAlloc();
          v173[0] = v151;
          v160 = 0;
          v149 = v89;
          *(_DWORD *)v89 = 136380675;
          LODWORD(v148) = v87;
          v90 = v157;
          v164 = v155;
          v165 = v157;
          v166 = (_QWORD *)v50;
          v167 = v44;
          v168 = v88;
          v169 = (uint64_t)v163;
          v170 = (uint64_t)v162;
          v171 = v86;
          BYTE2(v172) = BYTE2(v71);
          LOWORD(v172) = v71;
          HIBYTE(v172) = v154;
          v91 = PushSubscription.description.getter();
          v164 = sub_1C13044AC(v91, v92, v173);
          v94 = (uint64_t)v162;
          v93 = (uint64_t)v163;
          sub_1C1308960();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v95 = (uint64_t)v159;
          v96 = v176;
          sub_1C12C2CB0((uint64_t)v159, (uint64_t)v44, v176, v93, v94, v86, v71);
          swift_bridgeObjectRelease();
          v97 = (uint64_t)v44;
          v32 = v93;
          sub_1C12C2CB0(v95, v97, v96, v93, v94, v86, v71);
          v98 = v158;
          v99 = v149;
          _os_log_impl(&dword_1C12C0000, v158, (os_log_type_t)v148, "Unsubscribing from channel push: %{private}s", v149, 0xCu);
          v100 = v151;
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v100, -1, -1);
          MEMORY[0x1C3BAA558](v99, -1, -1);

          v101 = v86;
          v79 = v96;
        }
        else
        {
          v90 = v157;
          swift_bridgeObjectRelease();
          v135 = v71;
          v146 = v71;
          v101 = v86;
          v136 = (uint64_t)v162;
          sub_1C12C2CB0(v50, (uint64_t)v44, v74, v73, (uint64_t)v162, v101, v135);
          swift_bridgeObjectRelease();
          v137 = (uint64_t)v44;
          v32 = v73;
          sub_1C12C2CB0(v50, v137, v74, v73, v136, v101, v146);

          v79 = v74;
        }
        v138 = v155;
        v77 = v152;
        ObjectType = swift_getObjectType();
        v164 = v138;
        v165 = v90;
        swift_bridgeObjectRetain();
        sub_1C130884C();
        v140 = v101;
        v78 = (uint8_t *)v150;
        ((void (*)(void *, uint64_t, uint64_t, unint64_t, uint64_t, os_log_t))v150[2].isa)(v162, v140, v164, v165, ObjectType, v150);
        swift_bridgeObjectRelease();
        v69 = v153;
      }
      else
      {
        v102 = v161;
        if (qword_1ED78F670 != -1)
          swift_once();
        v160 = __swift_project_value_buffer(v151, (uint64_t)qword_1ED78F650);
        v103 = v157;
        swift_bridgeObjectRetain();
        v104 = v73;
        v105 = (uint64_t)v162;
        v106 = v102;
        v107 = v73;
        v108 = v71;
        sub_1C12C2BD8(v50, (uint64_t)v44, v74, v104, (uint64_t)v162, v106, v71);
        v109 = v103;
        swift_bridgeObjectRetain();
        v110 = v105;
        v111 = v161;
        v146 = v108;
        sub_1C12C2BD8(v50, (uint64_t)v44, v74, v107, v110, v161, v108);
        v112 = sub_1C130869C();
        v113 = sub_1C13088DC();
        v114 = v111;
        v115 = v113;
        v158 = v112;
        if (os_log_type_enabled(v112, v113))
        {
          v116 = v50;
          v117 = v74;
          v118 = (uint8_t *)swift_slowAlloc();
          v151 = swift_slowAlloc();
          v173[0] = v151;
          v160 = 0;
          v149 = v118;
          *(_DWORD *)v118 = 136380675;
          v164 = v155;
          v165 = v109;
          v119 = v109;
          v166 = (_QWORD *)v116;
          v167 = v44;
          v168 = v117;
          v169 = (uint64_t)v163;
          v170 = (uint64_t)v162;
          v171 = v114;
          v120 = v146;
          BYTE2(v172) = BYTE2(v146);
          LOWORD(v172) = v146;
          HIBYTE(v172) = v154;
          v121 = PushSubscription.description.getter();
          v164 = sub_1C13044AC(v121, v122, v173);
          LODWORD(v148) = v115;
          v123 = (uint64_t)v162;
          v124 = (uint64_t)v163;
          sub_1C1308960();
          swift_bridgeObjectRelease();
          v125 = v119;
          swift_bridgeObjectRelease();
          v126 = (uint64_t)v159;
          v127 = v161;
          sub_1C12C2CB0((uint64_t)v159, (uint64_t)v44, v117, v124, v123, v161, v120);
          swift_bridgeObjectRelease();
          sub_1C12C2CB0(v126, (uint64_t)v44, v117, v124, v123, v127, v120);
          v128 = v158;
          v129 = v149;
          _os_log_impl(&dword_1C12C0000, v158, (os_log_type_t)v148, "Unsubscribing from token push: %{private}s", v149, 0xCu);
          v130 = v151;
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v130, -1, -1);
          MEMORY[0x1C3BAA558](v129, -1, -1);

          v131 = v154;
          v132 = v155;
          v133 = (uint64_t)v159;
          v69 = v153;
          v134 = v127;
        }
        else
        {
          v125 = v109;
          swift_bridgeObjectRelease();
          v141 = (uint64_t)v162;
          v142 = (uint64_t)v163;
          v143 = v114;
          v134 = v114;
          v144 = v146;
          sub_1C12C2CB0(v50, (uint64_t)v44, v74, (uint64_t)v163, (uint64_t)v162, v143, v146);
          swift_bridgeObjectRelease();
          sub_1C12C2CB0(v50, (uint64_t)v44, v74, v142, v141, v134, v144);

          v133 = v50;
          v117 = v74;
          v69 = v153;
          v132 = v155;
          v131 = v154;
        }
        v77 = v152;
        v164 = v132;
        v165 = v125;
        v166 = (_QWORD *)v133;
        v167 = v44;
        v32 = v163;
        v168 = v117;
        v169 = (uint64_t)v163;
        v170 = (uint64_t)v162;
        v171 = v134;
        LOWORD(v172) = v146;
        BYTE2(v172) = BYTE2(v146);
        HIBYTE(v172) = v131;
        v78 = (uint8_t *)v150;
        sub_1C12FC934((uint64_t)&v164, v152, (uint64_t)v150);
        v79 = v117;
      }
      goto LABEL_25;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C12F95C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  return sub_1C1308930();
}

uint64_t sub_1C12F9630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;

  v4 = v3;
  v8 = sub_1C1308738();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD **)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = v12;
  LOBYTE(v12) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    sub_1C12C3158(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v44);
    v15 = v45;
    v16 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 72))(&v35, a1, a2, v15, v16);
    v17 = v36;
    if (!v36)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      v26 = type metadata accessor for PushToken();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a3, 1, 1, v26);
    }
    v34 = a3;
    v18 = v35;
    v20 = v37;
    v19 = v38;
    v22 = v39;
    v21 = v40;
    v24 = v41;
    v23 = v42;
    v25 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    if ((v25 & 0x800000) != 0)
    {
      v33 = v18;
      if (!(_BYTE)v25)
      {
        sub_1C12C3158(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v35);
        v29 = v38;
        v28 = v39;
        v31 = v39;
        v30 = __swift_project_boxed_opaque_existential_1(&v35, v38);
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 88);
        sub_1C12C2BD8(v20, v19, v22, v21, v24, v23, v25);
        swift_bridgeObjectRetain();
        v32(v20, v19, v29, v31);
        sub_1C12C2CB0(v20, v19, v22, v21, v24, v23, v25);
        sub_1C12E2944(v33, v17, v20, v19, v22, v21, v24, v23, v25);
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
      }
      if (v25 == 1)
      {
        sub_1C12C2BD8(v20, v19, v22, v21, v24, v23, v25);
        sub_1C12CA504(v22, v21, v24, v23, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v20, v19, v22, v21, v24, v23, v25);
      }
      sub_1C12E2944(v33, v17, v20, v19, v22, v21, v24, v23, v25);
    }
    else
    {
      sub_1C12E2944(v18, v17, v20, v19, v22, v21, v24, v23, v25);
    }
    v27 = type metadata accessor for PushToken();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v34, 1, 1, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C12F9954()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12F99C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _BYTE *a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _QWORD v25[2];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v22 = a6;
  v23 = a7;
  v24 = a8;
  v13 = sub_1C1308738();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  LOBYTE(v17) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    sub_1C12C3158(a1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v26);
    v20 = v27;
    v21 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v25[0] = a4;
    v25[1] = a5;
    LOBYTE(v20) = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 112))(a2, a3, v25, v22, v23, v20, v21);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    *v24 = v20 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PushServer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PushServer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PushServer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PushServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C12F9CC8(uint64_t a1, uint64_t a2)
{
  return sub_1C12F9E50(a1, a2, (uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__tokenPublisher, &qword_1ED78F618, &qword_1ED78F610);
}

uint64_t sub_1C12F9CE4(uint64_t a1, uint64_t a2)
{
  return sub_1C12C2F48(a1, a2, &qword_1ED78F580);
}

uint64_t sub_1C12F9CF8(__int128 *a1, char a2)
{
  return sub_1C12F5950(a1, a2);
}

uint64_t sub_1C12F9D18(__int128 *a1)
{
  return sub_1C12F7D90(a1);
}

uint64_t sub_1C12F9D38(uint64_t a1, uint64_t a2)
{
  return sub_1C12F7714(a1, a2);
}

uint64_t sub_1C12F9D58()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  return sub_1C1308930();
}

uint64_t sub_1C12F9DC4()
{
  unsigned __int8 v1;

  sub_1C1308930();
  return v1;
}

uint64_t sub_1C12F9E34(uint64_t a1, uint64_t a2)
{
  return sub_1C12F9E50(a1, a2, (uint64_t)&OBJC_IVAR____TtC24SessionPushNotifications10PushServer__eventPublisher, &qword_1ED78FDE8, &qword_1ED78F678);
}

uint64_t sub_1C12F9E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1C12C3018(a5, a4, MEMORY[0x1E0C95F48]);
  return sub_1C13086F0();
}

uint64_t sub_1C12F9EC0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  os_log_type_t v47;
  char *v48;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;

  v4 = v3;
  v8 = sub_1C1308738();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *(_QWORD *)v11 = v12;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = v12;
  LOBYTE(v12) = sub_1C1308744();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_36:
    swift_once();
    goto LABEL_8;
  }
  v11 = (char *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connections);
  swift_beginAccess();
  v14 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1C12C59E0(a1, a2);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 16 * v15);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if ((a3 & 1) == 0)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v34 = sub_1C13086A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v35 = sub_1C130869C();
    v36 = sub_1C13088F4();
    v17 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v52[0] = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain();
      v53 = sub_1C13044AC(a1, a2, v52);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      v39 = "Failed to find a connection for environment %{public}s";
LABEL_19:
      _os_log_impl(&dword_1C12C0000, v35, (os_log_type_t)v17, v39, v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v38, -1, -1);
      MEMORY[0x1C3BAA558](v37, -1, -1);

LABEL_31:
      v45 = 0;
LABEL_32:
      sub_1C12F1540();
      swift_allocError();
      *v48 = v45;
      swift_willThrow();
      return v17;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  if (qword_1ED78FAE8 != -1)
    goto LABEL_36;
LABEL_8:
  v18 = qword_1ED7903E0;
  if (!*(_QWORD *)(qword_1ED7903E0 + 16))
  {
LABEL_21:
    if (qword_1ED78F670 != -1)
      swift_once();
    v40 = sub_1C13086A8();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v41 = sub_1C130869C();
    v42 = sub_1C13088F4();
    v17 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v52[0] = v44;
      *(_DWORD *)v43 = 136446210;
      swift_bridgeObjectRetain();
      v53 = sub_1C13044AC(a1, a2, v52);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C12C0000, v41, (os_log_type_t)v17, "No Mach service name exists for environment %{public}s", v43, 0xCu);
      v45 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v44, -1, -1);
      MEMORY[0x1C3BAA558](v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v45 = 1;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v19 = sub_1C12C59E0(a1, a2);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v21 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v19);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connectionFactory + 24);
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connectionFactory + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connectionFactory), v24);
  v17 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v25 + 8))(a1, a2, v22, v23, *(_QWORD *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_apsQueue), v4, &protocol witness table for PushServer, v24, v25);
  v27 = v26;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v46 = sub_1C13086A8();
    __swift_project_value_buffer(v46, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain_n();
    v35 = sub_1C130869C();
    v47 = sub_1C13088F4();
    v17 = v47;
    if (os_log_type_enabled(v35, v47))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v52[0] = v38;
      *(_DWORD *)v37 = 136446210;
      swift_bridgeObjectRetain();
      v53 = sub_1C13044AC(a1, a2, v52);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      v39 = "Could not create a connection for environment %{public}s";
      goto LABEL_19;
    }
    goto LABEL_30;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53 = *(_QWORD *)v11;
  *(_QWORD *)v11 = 0x8000000000000000;
  sub_1C12E1C94(v17, v27, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v11 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_1ED78F670 != -1)
    swift_once();
  v29 = sub_1C13086A8();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v30 = sub_1C130869C();
  v31 = sub_1C13088DC();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    v52[0] = v51;
    *(_DWORD *)v32 = 136446210;
    v50 = v32 + 4;
    swift_bridgeObjectRetain();
    v53 = sub_1C13044AC(a1, a2, v52);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v30, v31, "Created new connection for environment %{public}s", v32, 0xCu);
    v33 = v51;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v33, -1, -1);
    MEMORY[0x1C3BAA558](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v17;
}

uint64_t sub_1C12FA6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint8_t *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t ObjectType;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint8_t *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v9 = sub_1C1308738();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v14 = v13;
  v15 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  v16 = sub_1C12FC0E8(a1, a2);
  v17 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer_topicsByPriority;
  v18 = *(_QWORD *)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_topicsByPriority);
  if (v18)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1C1304268(v16, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  *(_QWORD *)(v4 + v17) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v16 + 16))
  {
    v33 = MEMORY[0x1E0DEE9D8];
    v25 = MEMORY[0x1E0DEE9D8];
LABEL_33:
    swift_bridgeObjectRelease();
    v50 = MEMORY[0x1E0DEE9D8];
    goto LABEL_34;
  }
  v21 = sub_1C12C5A44(1u);
  if ((v22 & 1) != 0)
  {
    v23 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v21);
    v24 = *(_QWORD *)(v23 + 16);
    v25 = MEMORY[0x1E0DEE9D8];
    if (v24)
    {
      v89 = a4;
      v90 = v16;
      v88 = a3;
      v93 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1C12C7A90(0, v24, 0);
      v25 = v93;
      v26 = (uint64_t *)(v23 + 40);
      do
      {
        v27 = *v26;
        v91 = *(v26 - 1);
        v92 = v27;
        swift_bridgeObjectRetain_n();
        sub_1C130884C();
        swift_bridgeObjectRelease();
        v28 = v91;
        v29 = v92;
        v93 = v25;
        v31 = *(_QWORD *)(v25 + 16);
        v30 = *(_QWORD *)(v25 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1C12C7A90(v30 > 1, v31 + 1, 1);
          v25 = v93;
        }
        v26 += 2;
        *(_QWORD *)(v25 + 16) = v31 + 1;
        v32 = v25 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v28;
        *(_QWORD *)(v32 + 40) = v29;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      a3 = v88;
      a4 = v89;
      v16 = v90;
      if (!*(_QWORD *)(v90 + 16))
        goto LABEL_24;
      goto LABEL_16;
    }
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9D8];
  }
  if (!*(_QWORD *)(v16 + 16))
  {
LABEL_24:
    v33 = MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
LABEL_16:
  v34 = sub_1C12C5A44(0);
  v35 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  if ((v36 & 1) != 0)
  {
    v37 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v34);
    v38 = *(_QWORD *)(v37 + 16);
    v33 = MEMORY[0x1E0DEE9D8];
    if (v38)
    {
      v89 = a4;
      v90 = v16;
      v88 = a3;
      v93 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1C12C7A90(0, v38, 0);
      v33 = v93;
      v87 = v37;
      v39 = (uint64_t *)(v37 + 40);
      do
      {
        v40 = *v39;
        v91 = *(v39 - 1);
        v92 = v40;
        swift_bridgeObjectRetain_n();
        sub_1C130884C();
        swift_bridgeObjectRelease();
        v41 = v91;
        v42 = v92;
        v93 = v33;
        v44 = *(_QWORD *)(v33 + 16);
        v43 = *(_QWORD *)(v33 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1C12C7A90(v43 > 1, v44 + 1, 1);
          v33 = v93;
        }
        v39 += 2;
        *(_QWORD *)(v33 + 16) = v44 + 1;
        v45 = v33 + 16 * v44;
        *(_QWORD *)(v45 + 32) = v41;
        *(_QWORD *)(v45 + 40) = v42;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
      a3 = v88;
      a4 = v89;
      v16 = v90;
      v35 = MEMORY[0x1E0DEE9D8];
    }
  }
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_33;
  v46 = sub_1C12C5A44(2u);
  if ((v47 & 1) == 0)
    goto LABEL_33;
  v48 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v48 + 16);
  if (!v49)
    goto LABEL_33;
  v88 = a3;
  v89 = a4;
  v93 = v35;
  sub_1C12C7A90(0, v49, 0);
  v50 = v93;
  v87 = v48;
  v51 = (uint64_t *)(v48 + 40);
  v90 = 0x80000001C130BB00;
  do
  {
    v52 = *v51;
    v91 = *(v51 - 1);
    v92 = v52;
    swift_bridgeObjectRetain_n();
    sub_1C130884C();
    swift_bridgeObjectRelease();
    v53 = v91;
    v54 = v92;
    v93 = v50;
    v56 = *(_QWORD *)(v50 + 16);
    v55 = *(_QWORD *)(v50 + 24);
    if (v56 >= v55 >> 1)
    {
      sub_1C12C7A90(v55 > 1, v56 + 1, 1);
      v50 = v93;
    }
    v51 += 2;
    *(_QWORD *)(v50 + 16) = v56 + 1;
    v57 = v50 + 16 * v56;
    *(_QWORD *)(v57 + 32) = v53;
    *(_QWORD *)(v57 + 40) = v54;
    --v49;
  }
  while (v49);
  swift_bridgeObjectRelease();
  a4 = v89;
LABEL_34:
  ObjectType = swift_getObjectType();
  (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint8_t *))a4 + 5))(v33, MEMORY[0x1E0DEE9D8], v25, v50, ObjectType, a4);
  if (qword_1ED78F670 != -1)
LABEL_47:
    swift_once();
  v59 = sub_1C13086A8();
  v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain();
  v90 = v60;
  v61 = sub_1C130869C();
  v62 = sub_1C13088DC();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    v91 = v64;
    *(_DWORD *)v63 = 136380675;
    v89 = v63 + 4;
    v65 = swift_bridgeObjectRetain();
    v66 = MEMORY[0x1C3BA9E74](v65, MEMORY[0x1E0DEA968]);
    v68 = v67;
    swift_bridgeObjectRelease();
    v93 = sub_1C13044AC(v66, v68, &v91);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C12C0000, v61, v62, "Normal topics: %{private}s", v63, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v64, -1, -1);
    MEMORY[0x1C3BAA558](v63, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v69 = sub_1C130869C();
  v70 = sub_1C13088DC();
  if (os_log_type_enabled(v69, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc();
    v72 = swift_slowAlloc();
    v91 = v72;
    *(_DWORD *)v71 = 136380675;
    v73 = swift_bridgeObjectRetain();
    v74 = MEMORY[0x1C3BA9E74](v73, MEMORY[0x1E0DEA968]);
    v76 = v75;
    swift_bridgeObjectRelease();
    v93 = sub_1C13044AC(v74, v76, &v91);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C12C0000, v69, v70, "Opportunistic topics: %{private}s", v71, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v72, -1, -1);
    MEMORY[0x1C3BAA558](v71, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v77 = sub_1C130869C();
  v78 = sub_1C13088DC();
  if (os_log_type_enabled(v77, v78))
  {
    v79 = (uint8_t *)swift_slowAlloc();
    v80 = swift_slowAlloc();
    v91 = v80;
    *(_DWORD *)v79 = 136380675;
    v81 = swift_bridgeObjectRetain();
    v82 = MEMORY[0x1C3BA9E74](v81, MEMORY[0x1E0DEA968]);
    v84 = v83;
    swift_bridgeObjectRelease();
    v93 = sub_1C13044AC(v82, v84, &v91);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C12C0000, v77, v78, "Non-waking topics: %{private}s", v79, 0xCu);
    v20 = 1;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v80, -1, -1);
    MEMORY[0x1C3BAA558](v79, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  return v20;
}

uint64_t PushServer.connection(forEnvironmentName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_connections);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(v6 + 16))
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1C12C59E0(a1, a2);
  if ((v8 & 1) != 0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
    swift_unknownObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C12FB0B0(uint64_t a1, uint64_t a2)
{
  return PushServer.connection(forEnvironmentName:)(a1, a2);
}

uint64_t sub_1C12FB0D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  void *v12;
  int v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1C1308738();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(unsigned __int8 *)(a1 + 66);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v13 = *(unsigned __int16 *)(a1 + 64);
  *v6 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v14 = v12;
  LOBYTE(v12) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  if (((v13 | (v11 << 16)) & 0x800000) != 0)
  {
    if ((v13 & 0xFE) != 0)
      return 1;
    v7 = v10;
    v8 = v9;
  }
  swift_bridgeObjectRetain();
  if (qword_1ED78F630 != -1)
    goto LABEL_16;
LABEL_4:
  if ((sub_1C12FCD50(v8, v7, (_QWORD *)qword_1ED7903E8) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (qword_1ED78F670 != -1)
    swift_once();
  v15 = sub_1C13086A8();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain();
  v16 = sub_1C130869C();
  v17 = sub_1C13088F4();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136446210;
    swift_bridgeObjectRetain();
    v21 = sub_1C13044AC(v8, v7, &v22);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v16, v17, "Environment name %{public}s is unsupported", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v19, -1, -1);
    MEMORY[0x1C3BAA558](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_1C12FB384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  int v22;
  id v23;
  char v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint8_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  NSObject *v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t ObjectType;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint8_t *v117;
  os_log_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint8_t *v129;
  uint64_t v130;
  NSObject *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v126 = a3;
  v125 = a2;
  v123 = type metadata accessor for AppTokenInfo(0);
  MEMORY[0x1E0C80A78](v123);
  v124 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1C1308468();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v120 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v119 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v127 = (char *)&v115 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  MEMORY[0x1E0C80A78](v11);
  v131 = ((char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1C1308738();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(_QWORD *)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 24);
  v135 = *(_QWORD *)(a1 + 16);
  v136 = v17;
  v137 = *(_QWORD *)(a1 + 32);
  v146 = *(_QWORD *)(a1 + 40);
  v138 = *(_QWORD *)(a1 + 48);
  v139 = v18;
  v134 = *(_QWORD *)(a1 + 56);
  v20 = *(char *)(a1 + 66);
  v130 = v3;
  v21 = *(void **)(v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v22 = *(unsigned __int16 *)(a1 + 64);
  *v16 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v23 = v21;
  v24 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v24 & 1) != 0)
  {
    LODWORD(v14) = v22 | (v20 << 16);
    if (qword_1ED78F670 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v25 = sub_1C13086A8();
  v26 = (uint8_t *)__swift_project_value_buffer(v25, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain();
  v28 = v134;
  v27 = v135;
  v29 = v137;
  v30 = v138;
  v31 = v146;
  sub_1C12C2BD8(v135, v19, v137, v146, v138, v134, v14);
  swift_bridgeObjectRetain();
  sub_1C12C2BD8(v27, v19, v29, v31, v30, v28, v14);
  v129 = v26;
  v32 = sub_1C130869C();
  LODWORD(v128) = sub_1C1308900();
  v33 = os_log_type_enabled(v32, (os_log_type_t)v128);
  v133 = v14;
  if (v33)
  {
    v34 = v28;
    v118 = v32;
    v35 = (uint8_t *)swift_slowAlloc();
    v116 = swift_slowAlloc();
    v140 = v116;
    v117 = v35;
    *(_DWORD *)v35 = 136380675;
    if ((v14 & 0x80000000) != 0)
    {
      swift_bridgeObjectRetain();
      v37 = v27;
      v38 = v19;
    }
    else
    {
      v142 = v136;
      v143 = v139;
      swift_bridgeObjectRetain_n();
      v36 = v146;
      sub_1C12C2BD8(v27, v19, v29, v146, v30, v34, v14);
      swift_bridgeObjectRetain();
      sub_1C130884C();
      swift_bridgeObjectRelease_n();
      sub_1C12C2CB0(v27, v19, v29, v36, v30, v34, v14);
      v37 = v142;
      v38 = v143;
    }
    v41 = v117;
    v142 = sub_1C13044AC(v37, v38, &v140);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = v135;
    v43 = v146;
    LODWORD(v14) = v133;
    sub_1C12C2CB0(v135, v19, v29, v146, v30, v34, v133);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v42, v19, v29, v43, v30, v34, v14);
    v44 = v118;
    _os_log_impl(&dword_1C12C0000, v118, (os_log_type_t)v128, "Fetching push token for subscription: %{private}s", v41, 0xCu);
    v45 = v116;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v45, -1, -1);
    MEMORY[0x1C3BAA558](v41, -1, -1);

    v40 = v34;
    v27 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    v39 = v146;
    sub_1C12C2CB0(v27, v19, v29, v146, v30, v28, v14);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v27, v19, v29, v39, v30, v28, v14);

    v40 = v28;
  }
  sub_1C12C3158(v130 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v142);
  v128 = v145;
  v130 = v144;
  __swift_project_boxed_opaque_existential_1(&v142, v144);
  if ((v14 & 0x80000000) != 0)
  {
    swift_bridgeObjectRetain();
    v48 = v27;
    v50 = v40;
    v49 = v19;
    v51 = v137;
  }
  else
  {
    v140 = v136;
    v141 = v139;
    swift_bridgeObjectRetain_n();
    v46 = v137;
    v47 = v146;
    sub_1C12C2BD8(v27, v19, v137, v146, v30, v40, v14);
    swift_bridgeObjectRetain();
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    sub_1C12C2CB0(v27, v19, v46, v47, v138, v40, v14);
    v48 = v140;
    v49 = v141;
    v50 = v40;
    v51 = v46;
  }
  v52 = v131;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 88))(v48, v49, v130);
  swift_bridgeObjectRelease();
  v53 = type metadata accessor for PushToken();
  v54 = (*(uint64_t (**)(NSObject *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53);
  sub_1C12CA4C8((uint64_t)v52, &qword_1ED78FA88);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v142);
  swift_bridgeObjectRetain();
  v55 = v146;
  v56 = v138;
  sub_1C12C2BD8(v27, v19, v51, v146, v138, v50, v14);
  swift_bridgeObjectRetain();
  v132 = v19;
  sub_1C12C2BD8(v27, v19, v51, v55, v56, v50, v14);
  v57 = sub_1C130869C();
  v58 = sub_1C1308900();
  v131 = v57;
  v59 = os_log_type_enabled(v57, v58);
  v60 = v50;
  if (v54 == 1)
  {
    if (v59)
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v130 = swift_slowAlloc();
      v140 = v130;
      v129 = v61;
      *(_DWORD *)v61 = 136380675;
      v62 = v139;
      v142 = v136;
      v143 = v139;
      swift_bridgeObjectRetain();
      sub_1C130884C();
      v142 = sub_1C13044AC(v142, v143, &v140);
      v60 = v134;
      v63 = v135;
      sub_1C1308960();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v63;
      v65 = v63;
      v66 = v132;
      v67 = v137;
      v68 = v138;
      v69 = v146;
      v70 = v133;
      sub_1C12C2CB0(v64, v132, v137, v146, v138, v60, v133);
      swift_bridgeObjectRelease();
      v71 = v66;
      v72 = v68;
      sub_1C12C2CB0(v65, v71, v67, v69, v68, v60, v70);
      v73 = v131;
      v74 = v129;
      _os_log_impl(&dword_1C12C0000, v131, v58, "Requesting push token for topic: %{private}s", v129, 0xCu);
      v75 = v130;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v75, -1, -1);
      MEMORY[0x1C3BAA558](v74, -1, -1);

      v76 = (uint64_t)v127;
      if (v70 < 0)
      {
LABEL_15:
        v77 = v120;
        sub_1C1308450();
        v78 = v65;
        v79 = (uint64_t)v119;
        sub_1C130845C();
        v80 = v121;
        v81 = v77;
        v82 = v122;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v81, v122);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v79, 0, 1, v82);
        sub_1C12DD828(v79, v76, &qword_1ED78F6D0);
        swift_bridgeObjectRetain();
        v83 = v132;
        swift_bridgeObjectRetain();
        v84 = v136;
LABEL_20:
        v106 = (uint64_t *)v124;
        sub_1C12DD958(v76, (uint64_t)&v124[*(int *)(v123 + 24)], &qword_1ED78F6D0);
        *v106 = v84;
        v106[1] = v62;
        v106[2] = v78;
        v106[3] = v83;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t *, uint64_t))(v126 + 8))(v106, ObjectType);
        sub_1C12DD884((uint64_t)v106, type metadata accessor for AppTokenInfo);
        sub_1C12CA4C8(v76, &qword_1ED78F6D0);
        return;
      }
    }
    else
    {
      v62 = v139;
      swift_bridgeObjectRelease();
      v65 = v27;
      v96 = v132;
      v97 = v137;
      v98 = v138;
      v99 = v146;
      v70 = v133;
      sub_1C12C2CB0(v27, v132, v137, v146, v138, v60, v133);
      swift_bridgeObjectRelease();
      v100 = v96;
      v72 = v98;
      sub_1C12C2CB0(v27, v100, v97, v99, v98, v60, v70);

      v76 = (uint64_t)v127;
      if (v70 < 0)
        goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v76, 1, 1, v122);
    v84 = v136;
    v142 = v136;
    v143 = v62;
    swift_bridgeObjectRetain_n();
    v101 = v65;
    v102 = v132;
    v103 = v137;
    v104 = v146;
    sub_1C12C2BD8(v101, v132, v137, v146, v72, v60, v70);
    swift_bridgeObjectRetain();
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    v105 = v102;
    v76 = (uint64_t)v127;
    sub_1C12C2CB0(v135, v105, v103, v104, v72, v60, v70);
    v78 = v142;
    v83 = v143;
    goto LABEL_20;
  }
  v85 = v136;
  if (v59)
  {
    v86 = (uint8_t *)swift_slowAlloc();
    v130 = swift_slowAlloc();
    v140 = v130;
    v129 = v86;
    *(_DWORD *)v86 = 136380675;
    v142 = v85;
    v143 = v139;
    swift_bridgeObjectRetain();
    sub_1C130884C();
    v142 = sub_1C13044AC(v142, v143, &v140);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v87 = v132;
    v89 = v137;
    v88 = v138;
    v90 = v146;
    v91 = v134;
    v92 = v133;
    sub_1C12C2CB0(v27, v132, v137, v146, v138, v134, v133);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v27, v87, v89, v90, v88, v91, v92);
    v93 = v131;
    v94 = v129;
    _os_log_impl(&dword_1C12C0000, v131, v58, "Found existing push token for topic: %{private}s", v129, 0xCu);
    v95 = v130;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v95, -1, -1);
    MEMORY[0x1C3BAA558](v94, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    v108 = v27;
    v109 = v27;
    v110 = v132;
    v112 = v137;
    v111 = v138;
    v113 = v146;
    v114 = v133;
    sub_1C12C2CB0(v109, v132, v137, v146, v138, v60, v133);
    swift_bridgeObjectRelease();
    sub_1C12C2CB0(v108, v110, v112, v113, v111, v60, v114);

  }
}

uint64_t sub_1C12FC0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _BOOL4 v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  _QWORD *v61;
  unint64_t v62;
  _QWORD *v63;
  char v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  char isUniquelyReferenced_nonNull_native;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  int64_t v89;
  _QWORD *v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _QWORD v100[2];
  unsigned __int8 v101;
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v3 = v2;
  v92 = a2;
  v94 = a1;
  v4 = sub_1C1308738();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v9 = v8;
  LOBYTE(v8) = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v85 = v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore;
    sub_1C12C3158(v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)v102);
    v10 = v103;
    v11 = v104;
    __swift_project_boxed_opaque_existential_1(v102, v103);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v100[0] = MEMORY[0x1E0DEE9D8];
      sub_1C12C7B2C(0, v13, 0);
      v14 = v100[0];
      v15 = (uint64_t *)(v12 + 40);
      do
      {
        v17 = *(v15 - 1);
        v16 = *v15;
        v100[0] = v14;
        v18 = *(_QWORD *)(v14 + 16);
        v19 = *(_QWORD *)(v14 + 24);
        swift_bridgeObjectRetain();
        if (v18 >= v19 >> 1)
        {
          sub_1C12C7B2C(v19 > 1, v18 + 1, 1);
          v14 = v100[0];
        }
        v15 += 9;
        *(_QWORD *)(v14 + 16) = v18 + 1;
        v20 = v14 + 16 * v18;
        *(_QWORD *)(v20 + 32) = v17;
        *(_QWORD *)(v20 + 40) = v16;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x1E0DEE9D8];
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    v21 = sub_1C12E2A0C(v14);
    swift_bridgeObjectRelease();
    v22 = 0;
    v23 = *(_QWORD *)(v21 + 56);
    v82 = v21 + 56;
    v86 = v21;
    v24 = 1 << *(_BYTE *)(v21 + 32);
    v25 = -1;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    v26 = v25 & v23;
    v84 = v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer;
    v83 = (unint64_t)(v24 + 63) >> 6;
    v27 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v90 = v27;
      if (v26)
      {
        v29 = __clz(__rbit64(v26));
        v26 &= v26 - 1;
        v30 = v29 | (v22 << 6);
      }
      else
      {
        v31 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_79;
        if (v31 >= v83)
        {
LABEL_76:
          swift_release();
          return (uint64_t)v27;
        }
        v32 = *(_QWORD *)(v82 + 8 * v31);
        ++v22;
        if (!v32)
        {
          v22 = v31 + 1;
          if (v31 + 1 >= v83)
            goto LABEL_76;
          v32 = *(_QWORD *)(v82 + 8 * v22);
          if (!v32)
          {
            v22 = v31 + 2;
            if (v31 + 2 >= v83)
              goto LABEL_76;
            v32 = *(_QWORD *)(v82 + 8 * v22);
            if (!v32)
            {
              v33 = v31 + 3;
              if (v33 >= v83)
                goto LABEL_76;
              v32 = *(_QWORD *)(v82 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  v22 = v33 + 1;
                  if (__OFADD__(v33, 1))
                    goto LABEL_80;
                  if (v22 >= v83)
                    goto LABEL_76;
                  v32 = *(_QWORD *)(v82 + 8 * v22);
                  ++v33;
                  if (v32)
                    goto LABEL_29;
                }
              }
              v22 = v33;
            }
          }
        }
LABEL_29:
        v26 = (v32 - 1) & v32;
        v30 = __clz(__rbit64(v32)) + (v22 << 6);
      }
      v34 = (uint64_t *)(*(_QWORD *)(v86 + 48) + 16 * v30);
      v35 = v34[1];
      v97 = *v34;
      sub_1C12C3158(v85, (uint64_t)v102);
      v36 = v103;
      v37 = v104;
      __swift_project_boxed_opaque_existential_1(v102, v103);
      v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 40);
      v96 = v35;
      swift_bridgeObjectRetain();
      v39 = *(_QWORD *)(v38(v36, v37) + 16);
      if (v39)
      {
        v88 = v26;
        v89 = v22;
        v87 = swift_bridgeObjectRetain();
        v40 = v87 + 56;
        v93 = 2;
        while (1)
        {
          v41 = *(_QWORD *)(v40 - 24);
          v42 = *(_QWORD *)(v40 - 16);
          v43 = *(_QWORD *)(v40 - 8);
          v44 = *(_QWORD *)v40;
          v45 = *(_QWORD *)(v40 + 8);
          v46 = *(_QWORD *)(v40 + 16);
          v47 = *(_QWORD *)(v40 + 24);
          v98 = *(_QWORD *)(v40 + 32);
          v48 = *(char *)(v40 + 42);
          v49 = *(unsigned __int16 *)(v40 + 40);
          v95 = *(unsigned __int8 *)(v40 + 43);
          if ((v41 != v97 || v42 != v96) && (sub_1C1308A98() & 1) == 0)
            goto LABEL_32;
          v50 = v49 | (v48 << 16);
          if (v50 < 0)
          {
            if ((_BYTE)v50)
            {
              if (v50 != 1)
                goto LABEL_32;
              swift_bridgeObjectRetain();
              sub_1C12C2BD8(v43, v44, v45, v46, v47, v98, v50);
              swift_bridgeObjectRetain();
            }
            else
            {
              swift_bridgeObjectRetain();
              v54 = v98;
              sub_1C12C2BD8(v43, v44, v45, v46, v47, v98, v50);
              sub_1C12CA504(v45, v46, v47, v54, 0);
            }
            v52 = v45;
            v53 = v46;
          }
          else
          {
            swift_bridgeObjectRetain();
            v51 = v98;
            sub_1C12C2BD8(v43, v44, v45, v46, v47, v98, v50);
            sub_1C12C2BD8(v43, v44, v45, v46, v47, v51, v50);
            v52 = v43;
            v53 = v44;
          }
          if (v52 == v94 && v53 == v92)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C12C2CB0(v43, v44, v45, v46, v47, v98, v50);
LABEL_47:
            if ((_BYTE)v93)
            {
              if (v95 >= 2)
                v55 = 2;
              else
                v55 = v95;
              if (v93 == 1)
                v56 = v95 != 0;
              else
                v56 = v55;
              v93 = v56;
            }
            goto LABEL_32;
          }
          v91 = sub_1C1308A98();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C12C2CB0(v43, v44, v45, v46, v47, v98, v50);
          if ((v91 & 1) != 0)
            goto LABEL_47;
LABEL_32:
          v40 += 72;
          if (!--v39)
          {
            swift_bridgeObjectRelease();
            v26 = v88;
            v22 = v89;
            v57 = v93;
            goto LABEL_57;
          }
        }
      }
      v57 = 2;
LABEL_57:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
      sub_1C1304D28(v84, (uint64_t)v102);
      v58 = v103;
      v59 = v105;
      __swift_project_boxed_opaque_existential_1(v102, v103);
      v100[0] = v97;
      v100[1] = v96;
      v99 = v57;
      (*(void (**)(unsigned __int8 *__return_ptr, _QWORD *, char *, uint64_t, uint64_t))(v59 + 16))(&v101, v100, &v99, v58, v59);
      v60 = v101;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
      v61 = v90;
      if (v90[2])
      {
        v62 = sub_1C12C5A44(v60);
        v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if ((v64 & 1) != 0)
        {
          v63 = *(_QWORD **)(v61[7] + 8 * v62);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1C12F029C(0, v63[2] + 1, 1, v63);
      v66 = v63[2];
      v65 = v63[3];
      if (v66 >= v65 >> 1)
        v63 = sub_1C12F029C((_QWORD *)(v65 > 1), v66 + 1, 1, v63);
      v63[2] = v66 + 1;
      v67 = &v63[2 * v66];
      v68 = v96;
      v67[4] = v97;
      v67[5] = v68;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v102[0] = v61;
      v71 = sub_1C12C5A44(v60);
      v72 = v61[2];
      v73 = (v70 & 1) == 0;
      v74 = v72 + v73;
      if (__OFADD__(v72, v73))
      {
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        break;
      }
      v75 = v70;
      if (v61[3] >= v74)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v27 = (_QWORD *)v102[0];
          if ((v70 & 1) != 0)
            goto LABEL_12;
        }
        else
        {
          sub_1C12C6E4C();
          v27 = (_QWORD *)v102[0];
          if ((v75 & 1) != 0)
            goto LABEL_12;
        }
      }
      else
      {
        sub_1C12E1500(v74, isUniquelyReferenced_nonNull_native);
        v76 = sub_1C12C5A44(v60);
        if ((v75 & 1) != (v77 & 1))
          goto LABEL_82;
        v71 = v76;
        v27 = (_QWORD *)v102[0];
        if ((v75 & 1) != 0)
        {
LABEL_12:
          v28 = v27[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v28 + 8 * v71) = v63;
          goto LABEL_13;
        }
      }
      v27[(v71 >> 6) + 8] |= 1 << v71;
      *(_BYTE *)(v27[6] + v71) = v60;
      *(_QWORD *)(v27[7] + 8 * v71) = v63;
      v78 = v27[2];
      v79 = __OFADD__(v78, 1);
      v80 = v78 + 1;
      if (v79)
        goto LABEL_78;
      v27[2] = v80;
LABEL_13:
      swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_82:
  result = sub_1C1308AB0();
  __break(1u);
  return result;
}

uint64_t sub_1C12FC934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  int v18;
  id v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  void (*v38)(uint64_t *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v47 = a2;
  v48 = a3;
  v46 = type metadata accessor for AppTokenInfo(0);
  MEMORY[0x1E0C80A78](v46);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1C1308738();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v50 = *(_QWORD *)a1;
  v51 = v11;
  v14 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v44 = *(_QWORD *)(a1 + 40);
  v45 = v13;
  v15 = *(_QWORD *)(a1 + 48);
  v42 = *(_QWORD *)(a1 + 56);
  v43 = v15;
  v16 = *(char *)(a1 + 66);
  v49 = v3;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v18 = *(unsigned __int16 *)(a1 + 64);
  *v10 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v19 = v17;
  v20 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  v21 = v18 | (v16 << 16);
  if (v21 < 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v53 = v50;
    v54 = v51;
    swift_bridgeObjectRetain_n();
    v22 = v12;
    v23 = v12;
    v25 = v44;
    v24 = v45;
    v27 = v42;
    v26 = v43;
    sub_1C12C2BD8(v23, v14, v45, v44, v43, v42, v21);
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    sub_1C12C2CB0(v22, v14, v24, v25, v26, v27, v21);
    v12 = v53;
    v14 = v54;
  }
  if (qword_1ED78F670 != -1)
    goto LABEL_11;
LABEL_6:
  v28 = sub_1C13086A8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain_n();
  v29 = sub_1C130869C();
  v30 = sub_1C1308900();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v53 = v32;
    *(_DWORD *)v31 = 136380675;
    swift_bridgeObjectRetain();
    v52 = sub_1C13044AC(v12, v14, &v53);
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v29, v30, "Invalidating token: %{private}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v32, -1, -1);
    MEMORY[0x1C3BAA558](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = (char *)v6 + *(int *)(v46 + 24);
  v34 = sub_1C1308468();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v35 = v51;
  *v6 = v50;
  v6[1] = v35;
  v6[2] = v12;
  v6[3] = v14;
  ObjectType = swift_getObjectType();
  v37 = v48;
  v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v48 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v6, ObjectType, v37);
  sub_1C12C3158(v49 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v53);
  v39 = v55;
  v40 = v56;
  __swift_project_boxed_opaque_existential_1(&v53, v55);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v40 + 40))(v12, v14, v39, v40);
  swift_bridgeObjectRelease();
  sub_1C12DD884((uint64_t)v6, type metadata accessor for AppTokenInfo);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
}

uint64_t sub_1C12FCD50(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1C1308A98();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C1308A98() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t PushServer.connection(_:didReceivePublicToken:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  _QWORD *v9;
  id v10;

  sub_1C1308684();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  v10 = v4;
  swift_unknownObjectRetain();
  sub_1C12C2F04(a3, a4);
  sub_1C1308678();
  return swift_release();
}

void sub_1C12FCEE0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t);
  id v20;
  char v21;
  void (*v22)(_QWORD *, uint64_t);
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD *, uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD v85[3];
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(uint64_t *, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[4];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v99 = a1;
  v100 = a2;
  v96 = type metadata accessor for AppTokenInfo(0);
  MEMORY[0x1E0C80A78](v96);
  v95 = (_QWORD *)((char *)v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1C1308468();
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v89 = (char *)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v88 = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v97 = (uint64_t)v85 - v12;
  v13 = sub_1C1308738();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = v4;
  v17 = *(void **)(v4 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  *v16 = v17;
  v18 = *MEMORY[0x1E0DEF740];
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 104);
  v19(v16, v18, v13);
  v20 = v17;
  v21 = sub_1C1308744();
  v22 = *(void (**)(_QWORD *, uint64_t))(v14 + 8);
  v22(v16, v13);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  *v16 = v20;
  v19(v16, v18, v13);
  v23 = v20;
  v24 = sub_1C1308744();
  v22(v16, v13);
  if ((v24 & 1) == 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
LABEL_10:
    v44 = sub_1C13086A8();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED78F650);
    v45 = sub_1C130869C();
    v46 = sub_1C13088F4();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1C12C0000, v45, v46, "Connection for incoming public token is unknown", v47, 2u);
      MEMORY[0x1C3BAA558](v47, -1, -1);
    }
    goto LABEL_17;
  }
  v25 = v102;
  v26 = swift_beginAccess();
  MEMORY[0x1E0C80A78](v26);
  v27 = v100;
  v85[-2] = v99;
  v85[-1] = v27;
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1C1306C50(v28, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1308310);
  v31 = v30;
  swift_bridgeObjectRelease();
  if (!v31)
  {
    if (qword_1ED78F670 == -1)
      goto LABEL_10;
    goto LABEL_30;
  }
  swift_unknownObjectRelease();
  sub_1C12C3158(v25 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_publicTokenStore, (uint64_t)&v104);
  v32 = v106;
  v33 = v107;
  __swift_project_boxed_opaque_existential_1(&v104, v106);
  v103[0] = v29;
  v103[1] = v31;
  v103[2] = a3;
  v103[3] = a4;
  v34 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v33 + 24);
  swift_bridgeObjectRetain();
  sub_1C12C2F04(a3, a4);
  LOBYTE(v32) = v34(v103, v32, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED78F670 != -1)
      swift_once();
    v48 = sub_1C13086A8();
    __swift_project_value_buffer(v48, (uint64_t)qword_1ED78F650);
    v45 = sub_1C130869C();
    v49 = sub_1C1308900();
    if (os_log_type_enabled(v45, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v50 = 0;
      _os_log_impl(&dword_1C12C0000, v45, v49, "Public token has not changed", v50, 2u);
      MEMORY[0x1C3BAA558](v50, -1, -1);
    }
    swift_bridgeObjectRelease();
    sub_1C12C2998(a3, a4);
LABEL_17:

    return;
  }
  if (qword_1ED78F670 != -1)
    swift_once();
  v35 = sub_1C13086A8();
  __swift_project_value_buffer(v35, (uint64_t)qword_1ED78F650);
  swift_bridgeObjectRetain();
  sub_1C12C2F04(a3, a4);
  swift_bridgeObjectRetain();
  sub_1C12C2F04(a3, a4);
  v36 = sub_1C130869C();
  v37 = sub_1C1308900();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v101 = swift_slowAlloc();
    v104 = v101;
    *(_DWORD *)v38 = 136446466;
    sub_1C12C2F04(a3, a4);
    v39 = sub_1C13083C0();
    v40 = v29;
    v42 = v41;
    sub_1C12C2998(a3, a4);
    v103[0] = sub_1C13044AC(v39, v42, &v104);
    sub_1C1308960();
    v29 = v40;
    swift_bridgeObjectRelease();
    sub_1C12C2998(a3, a4);
    sub_1C12C2998(a3, a4);
    *(_WORD *)(v38 + 12) = 2082;
    swift_bridgeObjectRetain();
    v103[0] = sub_1C13044AC(v40, v31, &v104);
    v25 = v102;
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v36, v37, "Received public token: %{public}s for environment: %{public}s", (uint8_t *)v38, 0x16u);
    v43 = v101;
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v43, -1, -1);
    MEMORY[0x1C3BAA558](v38, -1, -1);

  }
  else
  {
    sub_1C12C2998(a3, a4);
    sub_1C12C2998(a3, a4);

    swift_bridgeObjectRelease_n();
  }
  v51 = v97;
  sub_1C12C3158(v25 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v104);
  v52 = v106;
  v53 = v107;
  __swift_project_boxed_opaque_existential_1(&v104, v106);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v53 + 56))(v29, v31, v52, v53);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
  sub_1C12C3158(v25 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)&v104);
  v54 = v106;
  v55 = v107;
  __swift_project_boxed_opaque_existential_1(&v104, v106);
  v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
  v57 = *(_QWORD *)(v56 + 16);
  if (v57)
  {
    v85[2] = v31;
    v86 = a3;
    v87 = a4;
    ObjectType = swift_getObjectType();
    v91 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v100 + 8);
    v85[1] = v56;
    v58 = v56 + 48;
    v59 = v51;
    do
    {
      v101 = v57;
      v72 = *(_QWORD *)(v58 - 16);
      v102 = *(_QWORD *)(v58 - 8);
      v74 = *(_QWORD *)v58;
      v73 = *(_QWORD *)(v58 + 8);
      v75 = *(_QWORD *)(v58 + 16);
      v76 = *(_QWORD *)(v58 + 24);
      v77 = *(_QWORD *)(v58 + 32);
      v78 = *(_QWORD *)(v58 + 40);
      v79 = *(unsigned __int16 *)(v58 + 48) | (*(char *)(v58 + 50) << 16);
      if (v79 < 0)
      {
        swift_bridgeObjectRetain();
        v90 = v76;
        v60 = v76;
        v61 = v77;
        sub_1C12C2BD8(v74, v73, v75, v60, v77, v78, v79);
        v62 = v72;
        v63 = v89;
        sub_1C1308450();
        v98 = v75;
        v64 = (uint64_t)v88;
        sub_1C130845C();
        v65 = v93;
        v66 = v63;
        v67 = v94;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v66, v94);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v64, 0, 1, v67);
        v68 = v61;
        v69 = v97;
        sub_1C12DD828(v64, v97, &qword_1ED78F6D0);
        swift_bridgeObjectRetain();
        sub_1C12C2CB0(v74, v73, v98, v90, v68, v78, v79);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56))(v59, 1, 1, v94);
        v80 = v74;
        v81 = v102;
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v80, v73, v75, v76, v77, v78, v79);
        v104 = v72;
        v105 = v81;
        swift_bridgeObjectRetain_n();
        sub_1C12C2BD8(v80, v73, v75, v76, v77, v78, v79);
        swift_bridgeObjectRetain();
        v98 = v72;
        sub_1C130884C();
        swift_bridgeObjectRelease_n();
        sub_1C12C2CB0(v80, v73, v75, v76, v77, v78, v79);
        swift_bridgeObjectRelease();
        v82 = v77;
        v62 = v98;
        sub_1C12C2CB0(v80, v73, v75, v76, v82, v78, v79);
        v74 = v104;
        v73 = v105;
        v69 = v97;
      }
      v70 = v95;
      sub_1C12DD958(v69, (uint64_t)v95 + *(int *)(v96 + 24), &qword_1ED78F6D0);
      v71 = v102;
      *v70 = v62;
      v70[1] = v71;
      v70[2] = v74;
      v70[3] = v73;
      v91(v70, ObjectType, v100);
      sub_1C12DD884((uint64_t)v70, type metadata accessor for AppTokenInfo);
      sub_1C12CA4C8(v69, &qword_1ED78F6D0);
      v58 += 72;
      v57 = v101 - 1;
      v59 = v69;
    }
    while (v101 != 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v83 = v86;
    v84 = v87;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v83 = a3;
    v84 = a4;
  }
  sub_1C12C2998(v83, v84);
}

uint64_t PushServer.connection(_:didReceive:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IncomingMessage(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  sub_1C1308684();
  sub_1C12C2D74(a3, (uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for IncomingMessage);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a2;
  sub_1C12C2D20((uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v11 + v10, type metadata accessor for IncomingMessage);
  v12 = v3;
  swift_unknownObjectRetain();
  sub_1C1308678();
  return swift_release();
}

void sub_1C12FDA80(uint64_t a1, uint8_t *a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  uint64_t v52;
  void (*v53)(_QWORD *, uint64_t, uint64_t);
  id v54;
  char v55;
  void (*v56)(_QWORD *, uint64_t);
  id v57;
  char v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t v61;
  void (*v62)(_QWORD *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t *__return_ptr, uint64_t, void (*)(_QWORD, _QWORD), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  unint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t, uint64_t);
  uint64_t v100;
  unint64_t v101;
  _BOOL4 v102;
  uint64_t v103;
  os_log_type_t v104;
  uint8_t *v105;
  const char *v106;
  void *v107;
  uint64_t v108;
  NSObject *v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  char v121;
  int v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *);
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  NSObject *v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint64_t v155;
  uint8_t *v156;
  unsigned int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  BOOL v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(uint64_t *, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  NSObject *v184;
  uint8_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint8_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int EnumCaseMultiPayload;
  char *v204;
  uint64_t v205;
  NSObject *v206;
  os_log_type_t v207;
  _BOOL4 v208;
  uint64_t v209;
  uint64_t v210;
  uint8_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  NSObject *v217;
  os_log_type_t v218;
  _BOOL4 v219;
  uint64_t v220;
  uint8_t *v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  int v236;
  int v237;
  void *v238;
  id v239;
  id v240;
  NSObject *v241;
  os_log_type_t v242;
  uint8_t *v243;
  uint64_t v244;
  id v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  uint8_t *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(_QWORD, _QWORD, _QWORD);
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint8_t *v279;
  uint64_t v280;
  uint8_t *v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  uint64_t v295;
  unsigned __int16 *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  int v307;
  __int128 v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  int v318;
  int v319;
  char v320;
  uint64_t v321;
  NSObject *v322;
  os_log_type_t v323;
  uint8_t *v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void *v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  id v335;
  _QWORD v336[4];
  _BOOL4 v337;
  uint64_t v338;
  void *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  char *v360;
  void (*v361)(_QWORD, _QWORD);
  uint64_t *v362;
  uint64_t v363;
  _QWORD *v364;
  char *v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  NSObject *v374;
  uint64_t isa;
  uint64_t *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint8_t *v383;
  uint64_t v384;
  void *v385;
  _QWORD v386[2];
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  unint64_t v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  int v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;

  v384 = a3;
  v383 = a2;
  v382 = a1;
  v399 = *MEMORY[0x1E0C80C00];
  v349 = type metadata accessor for IncomingMessage.EventType(0);
  v4 = MEMORY[0x1E0C80A78](v349);
  v348 = (uint64_t)v336 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v341 = (uint64_t)v336 - v7;
  MEMORY[0x1E0C80A78](v6);
  v346 = (uint64_t)v336 - v8;
  v350 = type metadata accessor for PushEvent(0);
  v343 = *(_QWORD *)(v350 - 8);
  v9 = MEMORY[0x1E0C80A78](v350);
  v345 = (uint64_t)v336 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v347 = (char *)v336 - v12;
  v344 = v13;
  MEMORY[0x1E0C80A78](v11);
  v362 = (_QWORD *)((char *)v336 - v14);
  v372 = sub_1C1308558();
  v373 = *(_QWORD *)(v372 - 8);
  MEMORY[0x1E0C80A78](v372);
  v367 = (char *)v336 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v16);
  v359 = (uint64_t)v336 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C1308540();
  MEMORY[0x1E0C80A78](v18);
  v358 = (char *)v336 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v370 = sub_1C1308468();
  v356 = *(_QWORD *)(v370 - 8);
  MEMORY[0x1E0C80A78](v370);
  v357 = (char *)v336 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7DD0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v360 = (char *)v336 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v366 = (uint64_t)v336 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8478);
  v26 = MEMORY[0x1E0C80A78](v25);
  v355 = (uint64_t)v336 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v369 = (uint64_t)v336 - v28;
  v29 = type metadata accessor for PushEvent.EventType(0);
  MEMORY[0x1E0C80A78](v29);
  v376 = (_QWORD *)((char *)v336 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = sub_1C1308588();
  v368 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v377 = (uint64_t)v336 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v353 = sub_1C130848C();
  v352 = *(_QWORD *)(v353 - 8);
  MEMORY[0x1E0C80A78](v353);
  v351 = (char *)v336 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v364 = (_QWORD *)type metadata accessor for PushToken();
  v374 = *(v364 - 1);
  v34 = MEMORY[0x1E0C80A78](v364);
  v379 = (uint64_t)v336 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v354 = (uint64_t)v336 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FA88);
  v38 = MEMORY[0x1E0C80A78](v37);
  v363 = (uint64_t)v336 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v365 = (char *)v336 - v40;
  v371 = type metadata accessor for IncomingMessage(0);
  v41 = MEMORY[0x1E0C80A78](v371);
  v342 = (uint64_t)v336 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v41);
  v340 = (uint64_t)v336 - v44;
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)v336 - v45;
  v47 = sub_1C1308738();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v50 = (_QWORD *)((char *)v336 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v385 = v3;
  v51 = *(void **)&v3[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  *v50 = v51;
  v52 = *MEMORY[0x1E0DEF740];
  v53 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v48 + 104);
  v53(v50, v52, v47);
  v54 = v51;
  v55 = sub_1C1308744();
  v56 = *(void (**)(_QWORD *, uint64_t))(v48 + 8);
  v56(v50, v47);
  if ((v55 & 1) == 0)
  {
    __break(1u);
    goto LABEL_116;
  }
  *v50 = v54;
  v53(v50, v52, v47);
  v57 = v54;
  v58 = sub_1C1308744();
  v56(v50, v47);
  if ((v58 & 1) == 0)
  {
LABEL_116:
    __break(1u);
LABEL_117:
    swift_once();
    goto LABEL_5;
  }
  v59 = swift_beginAccess();
  MEMORY[0x1E0C80A78](v59);
  v60 = v383;
  v336[-2] = v382;
  v336[-1] = v60;
  v61 = swift_bridgeObjectRetain();
  v381 = sub_1C1306C50(v61, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1308310);
  v56 = v62;
  swift_bridgeObjectRelease();
  if (!v56)
  {
    if (qword_1ED78F670 != -1)
      swift_once();
    v73 = sub_1C13086A8();
    __swift_project_value_buffer(v73, (uint64_t)qword_1ED78F650);
    v74 = sub_1C130869C();
    v75 = sub_1C13088F4();
    if (!os_log_type_enabled(v74, v75))
      goto LABEL_46;
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    v77 = "Incoming message arrived on an unknown connection";
    goto LABEL_45;
  }
  v339 = 0;
  swift_unknownObjectRelease();
  if (qword_1ED78F670 != -1)
    goto LABEL_117;
LABEL_5:
  v63 = sub_1C13086A8();
  v64 = __swift_project_value_buffer(v63, (uint64_t)qword_1ED78F650);
  v65 = (uint64_t *)v384;
  sub_1C12C2D74(v384, (uint64_t)v46, type metadata accessor for IncomingMessage);
  swift_bridgeObjectRetain_n();
  v66 = sub_1C130869C();
  v67 = sub_1C1308900();
  v68 = os_log_type_enabled(v66, v67);
  v338 = v31;
  if (v68)
  {
    v69 = swift_slowAlloc();
    v70 = swift_slowAlloc();
    v389 = v70;
    *(_DWORD *)v69 = 136446466;
    v71 = IncomingMessage.description.getter();
    v395 = sub_1C13044AC(v71, v72, &v389);
    sub_1C1308960();
    swift_bridgeObjectRelease();
    sub_1C12DD884((uint64_t)v46, type metadata accessor for IncomingMessage);
    *(_WORD *)(v69 + 12) = 2082;
    swift_bridgeObjectRetain();
    v395 = sub_1C13044AC(v381, (unint64_t)v56, &v389);
    v65 = (uint64_t *)v384;
    sub_1C1308960();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C12C0000, v66, v67, "Received message: %{public}s for environment: %{public}s", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v70, -1, -1);
    MEMORY[0x1C3BAA558](v69, -1, -1);

  }
  else
  {
    sub_1C12DD884((uint64_t)v46, type metadata accessor for IncomingMessage);

    swift_bridgeObjectRelease_n();
  }
  v78 = v65[5];
  v380 = v64;
  if (v78)
  {
    v79 = v65[4];
    sub_1C12C3158((uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)&v395);
    v80 = v397;
    v81 = v398;
    __swift_project_boxed_opaque_existential_1(&v395, v397);
    v82 = v65[3];
    v386[0] = v65[2];
    v386[1] = v82;
    v83 = *(void (**)(uint64_t *__return_ptr, uint64_t, void (*)(_QWORD, _QWORD), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 80);
    swift_bridgeObjectRetain();
    v361 = (void (*)(_QWORD, _QWORD))v56;
    v83(&v389, v381, (void (*)(_QWORD, _QWORD))v56, v386, v79, v78, v80, v81);
    swift_bridgeObjectRelease();
  }
  else
  {
    v95 = v65[1];
    if (v95 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      v74 = sub_1C130869C();
      v75 = sub_1C13088F4();
      if (!os_log_type_enabled(v74, v75))
      {
LABEL_46:

        return;
      }
      v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v76 = 0;
      v77 = "Incoming message provides neither token nor channel";
LABEL_45:
      _os_log_impl(&dword_1C12C0000, v74, v75, v77, v76, 2u);
      MEMORY[0x1C3BAA558](v76, -1, -1);
      goto LABEL_46;
    }
    v96 = *v65;
    sub_1C12C3158((uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v389);
    v97 = *((_QWORD *)&v391 + 1);
    v98 = v392;
    __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v391 + 1));
    v99 = *(uint64_t (**)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v98 + 80);
    sub_1C12C2F04(v96, v95);
    v361 = (void (*)(_QWORD, _QWORD))v56;
    v100 = v99(v381, (void (*)(_QWORD, _QWORD))v56, v97, v98);
    if (*(_QWORD *)(v100 + 16))
    {
      v101 = (LOBYTE(v374[10].isa) + 32) & ~(unint64_t)LOBYTE(v374[10].isa);
      v336[0] = v100;
      v102 = __OFSUB__(HIDWORD(v96), (_DWORD)v96);
      v337 = v102;
      v336[3] = HIDWORD(v96) - (int)v96;
      isa = (uint64_t)v374[9].isa;
      v378 = v95 >> 62;
      v103 = v379;
      v336[2] = v96;
      v336[1] = BYTE6(v95);
      sub_1C12C2D74(v100 + v101, v379, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      __asm { BR              X10 }
    }
    v107 = v339;
    v108 = (uint64_t)v365;
    v109 = v374;
    v110 = (void (*)(_QWORD, _QWORD, _QWORD))v364;
    ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v374[7].isa)(v365, 1, 1, v364);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
    v111 = v363;
    sub_1C12DD958(v108, v363, &qword_1ED78FA88);
    v112 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v109[6].isa)(v111, 1, v110);
    if (v112 == 1)
    {
      sub_1C12F1688(v96, v95);
      swift_bridgeObjectRelease();
      sub_1C12CA4C8(v108, &qword_1ED78FA88);
      sub_1C12CA4C8(v111, &qword_1ED78FA88);
      swift_allocObject();
      goto LABEL_43;
    }
    v339 = v107;
    v113 = v354;
    sub_1C12C2D20(v111, v354, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12C3158((uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)&v395);
    v114 = v397;
    v115 = v398;
    __swift_project_boxed_opaque_existential_1(&v395, v397);
    v116 = v95;
    v117 = *(_QWORD *)(v113 + 16);
    v118 = *(_QWORD *)(v113 + 24);
    v119 = v96;
    v120 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 88);
    swift_bridgeObjectRetain();
    v120(&v389, v117, v118, v114, v115);
    sub_1C12F1688(v119, v116);
    swift_bridgeObjectRelease();
    sub_1C12DD884(v113, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    sub_1C12CA4C8(v108, &qword_1ED78FA88);
  }
  v84 = v389;
  v85 = v390;
  v86 = v391;
  v87 = v392;
  v88 = v393;
  v89 = v394;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v395);
  v90 = swift_allocObject();
  v91 = v90;
  if (!v85)
  {
    swift_bridgeObjectRelease();
LABEL_43:
    swift_deallocUninitializedObject();
    v74 = sub_1C130869C();
    v75 = sub_1C13088F4();
    if (!os_log_type_enabled(v74, v75))
      goto LABEL_46;
    v76 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v76 = 0;
    v77 = "Incoming message does not belong to an activity";
    goto LABEL_45;
  }
  *(_QWORD *)(v90 + 16) = v84;
  *(_QWORD *)(v90 + 24) = v85;
  *(_OWORD *)(v90 + 32) = v86;
  *(_OWORD *)(v90 + 48) = v87;
  *(_OWORD *)(v90 + 64) = v88;
  *(_DWORD *)(v90 + 80) = v89;
  v92 = v384;
  if ((v84 != *(_QWORD *)(v384 + 16) || v85 != *(_QWORD *)(v384 + 24)) && (sub_1C1308A98() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v74 = sub_1C130869C();
    v104 = sub_1C13088F4();
    if (os_log_type_enabled(v74, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v105 = 0;
      v106 = "Incoming message topic does not match subscription topic";
LABEL_39:
      _os_log_impl(&dword_1C12C0000, v74, v104, v106, v105, 2u);
      MEMORY[0x1C3BAA558](v105, -1, -1);
    }
LABEL_40:
    swift_release();
    goto LABEL_46;
  }
  if ((v89 & 0x8000FF) != 0x800001)
  {
    if (!*(_QWORD *)(v92 + 40))
      goto LABEL_49;
    goto LABEL_32;
  }
  v93 = *(_QWORD *)(v92 + 32);
  v94 = *(_QWORD *)(v92 + 40);
  swift_bridgeObjectRetain();
  if (!v94)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_37:
    v74 = sub_1C130869C();
    v104 = sub_1C13088F4();
    if (os_log_type_enabled(v74, v104))
    {
      v105 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v105 = 0;
      v106 = "Incoming message channel does not match subscription channel";
      goto LABEL_39;
    }
    goto LABEL_40;
  }
  if (v88 == __PAIR128__(v94, v93))
  {
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  v121 = sub_1C1308A98();
  swift_bridgeObjectRelease();
  if ((v121 & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
LABEL_49:
  v122 = *(unsigned __int16 *)(v91 + 80) | (*(char *)(v91 + 82) << 16);
  if (v122 < 0)
  {
    v126 = *(_QWORD *)(v91 + 32);
    v125 = *(_QWORD *)(v91 + 40);
    swift_bridgeObjectRetain();
    v365 = (char *)v126;
    v378 = v125;
  }
  else
  {
    v123 = v351;
    sub_1C1308480();
    v365 = (char *)sub_1C1308474();
    v378 = v124;
    (*(void (**)(char *, uint64_t))(v352 + 8))(v123, v353);
    v126 = *(_QWORD *)(v91 + 32);
    v125 = *(_QWORD *)(v91 + 40);
    v122 = *(unsigned __int16 *)(v91 + 80) | (*(unsigned __int8 *)(v91 + 82) << 16);
  }
  v128 = *(_QWORD *)(v91 + 16);
  v127 = *(_QWORD *)(v91 + 24);
  v129 = *(_QWORD *)(v91 + 48);
  v130 = *(_QWORD *)(v91 + 56);
  v131 = *(_QWORD *)(v91 + 64);
  v379 = v91;
  v132 = *(_QWORD *)(v91 + 72);
  v133 = *(_BYTE *)(v91 + 83);
  v389 = v128;
  v390 = v127;
  *(_QWORD *)&v391 = v126;
  *((_QWORD *)&v391 + 1) = v125;
  *(_QWORD *)&v392 = v129;
  *((_QWORD *)&v392 + 1) = v130;
  *(_QWORD *)&v393 = v131;
  *((_QWORD *)&v393 + 1) = v132;
  BYTE2(v394) = BYTE2(v122);
  LOWORD(v394) = v122;
  HIBYTE(v394) = v133;
  swift_bridgeObjectRetain();
  v134 = v125;
  v135 = v379;
  sub_1C12C2BD8(v126, v134, v129, v130, v131, v132, v122);
  sub_1C1303234((uint64_t)&v389, v377);
  v136 = *(_QWORD *)(v135 + 24);
  v137 = *(_DWORD *)(v135 + 80);
  v389 = *(_QWORD *)(v135 + 16);
  v390 = v136;
  v138 = *(_OWORD *)(v135 + 48);
  v391 = *(_OWORD *)(v135 + 32);
  v392 = v138;
  v393 = *(_OWORD *)(v135 + 64);
  v394 = v137;
  v139 = v384;
  sub_1C1303498((uint64_t)&v389, v376);
  v140 = v369;
  sub_1C1303AAC(v369);
  v141 = v371;
  v142 = *(void (**)(char *))(v356 + 16);
  isa = v139 + *(int *)(v371 + 32);
  v142(v357);
  v143 = (uint64_t *)(v139 + *(int *)(v141 + 36));
  v144 = *v143;
  v145 = v143[1];
  sub_1C12DD958(v139 + *(int *)(v141 + 48), v359, &qword_1ED78F6D0);
  sub_1C12C2F04(v144, v145);
  sub_1C1308534();
  sub_1C12DD958(v140, v355, &qword_1EF6D8478);
  v146 = v366;
  v147 = v339;
  sub_1C130854C();
  if (v147)
  {

    v148 = v373;
    v149 = v372;
    v374 = *(NSObject **)(v373 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v374)(v146, 1, 1, v372);
  }
  else
  {
    v148 = v373;
    v149 = v372;
    v374 = *(NSObject **)(v373 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v374)(v146, 0, 1, v372);
  }
  v150 = (uint64_t)v360;
  v151 = *(unsigned __int8 *)(v384 + 48);
  sub_1C12DD958(v146, (uint64_t)v360, &qword_1EF6D7DD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v150, 1, v149) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C12CA4C8(v150, &qword_1EF6D7DD0);
    v152 = sub_1C130869C();
    v153 = sub_1C13088F4();
    v154 = os_log_type_enabled(v152, v153);
    v155 = v338;
    if (v154)
    {
      v156 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v156 = 0;
      _os_log_impl(&dword_1C12C0000, v152, v153, "Error extracing payload from incoming message", v156, 2u);
      MEMORY[0x1C3BAA558](v156, -1, -1);
    }

    sub_1C12CA4C8(v146, &qword_1EF6D7DD0);
    sub_1C12CA4C8(v140, &qword_1EF6D8478);
    sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
    (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v155);
    goto LABEL_114;
  }
  v364 = v142;
  v360 = 0;
  v157 = v151 - 3;
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 32))(v367, v150, v149);
  v159 = *(_QWORD *)(v135 + 32);
  v158 = *(_QWORD *)(v135 + 40);
  v160 = v135;
  v161 = *(unsigned __int16 *)(v135 + 80) | (*(char *)(v135 + 82) << 16);
  if (v161 < 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v163 = *(_QWORD *)(v135 + 64);
    v162 = *(_QWORD *)(v135 + 72);
    LODWORD(v363) = v157;
    v165 = *(_QWORD *)(v135 + 48);
    v164 = *(_QWORD *)(v160 + 56);
    v166 = *(_QWORD *)(v160 + 24);
    v389 = *(_QWORD *)(v160 + 16);
    v390 = v166;
    swift_bridgeObjectRetain_n();
    sub_1C12C2BD8(v159, v158, v165, v164, v163, v162, v161);
    sub_1C130884C();
    swift_bridgeObjectRelease_n();
    v167 = v164;
    v157 = v363;
    v168 = v163;
    v149 = v372;
    sub_1C12C2CB0(v159, v158, v165, v167, v168, v162, v161);
    v159 = v389;
    v158 = v390;
  }
  v169 = v157 < 0xFFFFFFFE;
  v171 = *(_QWORD *)(v160 + 16);
  v170 = *(_QWORD *)(v160 + 24);
  v172 = (int *)v350;
  v173 = v362;
  ((void (*)(char *, uint64_t, uint64_t))v364)((char *)v362 + *(int *)(v350 + 28), isa, v370);
  sub_1C12C2D74((uint64_t)v376, (uint64_t)v173 + v172[8], type metadata accessor for PushEvent.EventType);
  (*(void (**)(char *, uint64_t, uint64_t))(v368 + 16))((char *)v173 + v172[9], v377, v338);
  v174 = (char *)v173 + v172[10];
  (*(void (**)(char *, char *, uint64_t))(v373 + 16))(v174, v367, v149);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v374)(v174, 0, 1, v149);
  *v173 = v159;
  v173[1] = v158;
  v175 = v378;
  v173[2] = (uint64_t)v365;
  v173[3] = v175;
  v173[4] = v171;
  v173[5] = v170;
  *((_BYTE *)v173 + v172[11]) = v169;
  v176 = (uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer;
  sub_1C1304D28((uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer, (uint64_t)&v389);
  v177 = *((_QWORD *)&v391 + 1);
  v179 = v392;
  __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v391 + 1));
  v178 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v179 + 56);
  swift_bridgeObjectRetain();
  v178(v173, v177, v179);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
  LODWORD(v179) = *(unsigned __int16 *)(v160 + 80) | (*(char *)(v160 + 82) << 16);
  if ((v179 & 0x80000000) != 0)
  {
    v198 = *(_QWORD *)(v160 + 40);
    v370 = *(_QWORD *)(v160 + 32);
    v199 = *(uint8_t **)(v160 + 48);
    v200 = *(_QWORD *)(v160 + 56);
    v202 = *(_QWORD *)(v160 + 64);
    v201 = *(_QWORD *)(v160 + 72);
    v382 = v198;
    swift_bridgeObjectRetain();
    v383 = v199;
    sub_1C12CA504((uint64_t)v199, v200, v202, v201, v179);
    swift_bridgeObjectRelease();
    sub_1C12C2D74(v384 + *(int *)(v371 + 40), v346, type metadata accessor for IncomingMessage.EventType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      v204 = v347;
      if (EnumCaseMultiPayload == 1)
      {
        v381 = v200;
        v378 = v201;
        v205 = v340;
        sub_1C12C2D74(v384, v340, type metadata accessor for IncomingMessage);
        v206 = sub_1C130869C();
        v207 = sub_1C13088F4();
        v208 = os_log_type_enabled(v206, v207);
        v209 = v338;
        if (v208)
        {
          v210 = swift_slowAlloc();
          LODWORD(v374) = v179;
          v211 = (uint8_t *)v210;
          v212 = swift_slowAlloc();
          isa = v202;
          v213 = v212;
          v389 = v212;
          *(_DWORD *)v211 = 136446210;
          sub_1C12C2D74(v205 + *(int *)(v371 + 40), v341, type metadata accessor for IncomingMessage.EventType);
          v214 = sub_1C13087EC();
          v395 = sub_1C13044AC(v214, v215, &v389);
          sub_1C1308960();
          swift_bridgeObjectRelease();
          sub_1C12DD884(v340, type metadata accessor for IncomingMessage);
          _os_log_impl(&dword_1C12C0000, v206, v207, "Unsupported push notification event type for activity subscription: %{public}s", v211, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v213, -1, -1);
          MEMORY[0x1C3BAA558](v211, -1, -1);
          swift_bridgeObjectRelease();

          sub_1C12E28F8((uint64_t)v383, v381, isa, v378, (char)v374);
          sub_1C12DD884((uint64_t)v362, type metadata accessor for PushEvent);
          (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v149);
          sub_1C12CA4C8(v366, &qword_1EF6D7DD0);
          sub_1C12CA4C8(v369, &qword_1EF6D8478);
          sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
          (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v338);
        }
        else
        {

          sub_1C12DD884(v205, type metadata accessor for IncomingMessage);
          swift_bridgeObjectRelease();
          sub_1C12E28F8((uint64_t)v383, v381, v202, v378, v179);
          sub_1C12DD884((uint64_t)v362, type metadata accessor for PushEvent);
          (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v149);
          sub_1C12CA4C8(v366, &qword_1EF6D7DD0);
          sub_1C12CA4C8(v369, &qword_1EF6D8478);
          sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
          (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v209);
        }
        v225 = v346;
        goto LABEL_85;
      }
      if (*(_BYTE *)(v384 + 48) == 2 || (v179 & 0x10000) != 0)
      {
        swift_bridgeObjectRetain();
        v256 = v383;
        sub_1C12CA504((uint64_t)v383, v200, v202, v201, v179);
        v248 = (uint64_t)v204;
      }
      else
      {
        isa = v202;
        sub_1C1304D28(v176, (uint64_t)&v389);
        v371 = v392;
        v384 = *((_QWORD *)&v391 + 1);
        v365 = (char *)__swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v391 + 1));
        v249 = *(_QWORD *)(v160 + 32);
        v250 = *(_QWORD *)(v160 + 40);
        v251 = *(unsigned __int16 *)(v160 + 80) | (*(char *)(v160 + 82) << 16);
        LODWORD(v374) = v179;
        v378 = v201;
        v381 = v200;
        if (v251 < 0)
        {
          v261 = v382;
          swift_bridgeObjectRetain();
          v256 = v383;
          sub_1C12CA504((uint64_t)v383, v200, isa, v201, v179);
          swift_bridgeObjectRetain();
        }
        else
        {
          v252 = *(_QWORD *)(v160 + 64);
          v364 = *(_QWORD **)(v160 + 72);
          v359 = v249;
          v361 = (void (*)(_QWORD, _QWORD))v252;
          v253 = (_QWORD *)v160;
          v254 = *(_QWORD *)(v160 + 56);
          v360 = (char *)v254;
          v363 = v253[6];
          v255 = v253[3];
          v395 = v253[2];
          v396 = v255;
          swift_bridgeObjectRetain();
          v179 = v382;
          swift_bridgeObjectRetain();
          v256 = v383;
          sub_1C12CA504((uint64_t)v383, v381, isa, v201, (char)v374);
          swift_bridgeObjectRetain_n();
          v257 = v249;
          v258 = v363;
          v259 = v252;
          v260 = (void (*)(_QWORD, _QWORD, _QWORD))v364;
          sub_1C12C2BD8(v257, v250, v363, v254, v259, (uint64_t)v364, v251);
          sub_1C130884C();
          v200 = v381;
          v261 = v179;
          swift_bridgeObjectRelease_n();
          LOWORD(v179) = (_WORD)v374;
          sub_1C12C2CB0(v359, v250, v258, (uint64_t)v360, (uint64_t)v361, (uint64_t)v260, v251);
          v249 = v395;
          v250 = v396;
        }
        v248 = (uint64_t)v204;
        LOBYTE(v395) = 1;
        v294 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v371 + 40))(v249, v250, &v395, v384);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
        v149 = v372;
        v201 = v378;
        v202 = isa;
        if ((v294 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1C12CA504((uint64_t)v256, v200, v202, v201, v179);
          sub_1C12E28F8((uint64_t)v256, v200, v202, v201, v179);
          swift_bridgeObjectRelease();
          v295 = v261;
          v296 = (unsigned __int16 *)(v379 + 80);
          v297 = *(_QWORD *)(v379 + 32);
          v298 = *(_QWORD *)(v379 + 40);
          v299 = *(_QWORD *)(v379 + 48);
          v300 = *(_QWORD *)(v379 + 56);
          v301 = *(_QWORD *)(v379 + 64);
          v302 = *(_QWORD *)(v379 + 72);
          v303 = *(unsigned __int16 *)(v379 + 80) | (*(unsigned __int8 *)(v379 + 82) << 16);
          *(_QWORD *)(v379 + 32) = v370;
          *((_QWORD *)v296 - 5) = v295;
          *((_QWORD *)v296 - 4) = v256;
          *((_QWORD *)v296 - 3) = v200;
          *((_QWORD *)v296 - 2) = v202;
          *((_QWORD *)v296 - 1) = v201;
          *v296 = v179 & 0x1FF;
          *((_BYTE *)v296 + 2) = -127;
          sub_1C12C2CB0(v297, v298, v299, v300, v301, v302, v303);
          sub_1C12C3158((uint64_t)v385 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)&v395);
          v304 = v397;
          v305 = v398;
          __swift_project_boxed_opaque_existential_1(&v395, v397);
          v306 = *((_QWORD *)v296 - 7);
          v307 = *(_DWORD *)v296;
          v389 = *((_QWORD *)v296 - 8);
          v390 = v306;
          v308 = *((_OWORD *)v296 - 2);
          v391 = *((_OWORD *)v296 - 3);
          v392 = v308;
          v393 = *((_OWORD *)v296 - 1);
          v394 = v307;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v305 + 48))(&v389, v304, v305);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v395);
          v309 = *((_QWORD *)v296 - 8);
          v310 = *((_QWORD *)v296 - 7);
          v311 = *((_QWORD *)v296 - 6);
          v312 = *((_QWORD *)v296 - 5);
          v313 = *((_QWORD *)v296 - 4);
          v314 = *((_QWORD *)v296 - 3);
          v315 = *((_QWORD *)v296 - 2);
          v316 = *((_QWORD *)v296 - 1);
          v317 = *((unsigned __int8 *)v296 + 2);
          v318 = *v296;
          v319 = v318 | (v317 << 16);
          LODWORD(v384) = v319;
          v320 = *((_BYTE *)v296 + 3);
          v389 = v309;
          v390 = v310;
          *(_QWORD *)&v391 = v311;
          *((_QWORD *)&v391 + 1) = v312;
          *(_QWORD *)&v392 = v313;
          *((_QWORD *)&v392 + 1) = v314;
          *(_QWORD *)&v393 = v315;
          *((_QWORD *)&v393 + 1) = v316;
          BYTE2(v394) = v317;
          LOWORD(v394) = v318;
          HIBYTE(v394) = v320;
          swift_bridgeObjectRetain();
          sub_1C12C2BD8(v311, v312, v313, v314, v315, v316, v319);
          sub_1C130278C((uint64_t)&v389);
          swift_bridgeObjectRelease();
          v321 = v316;
          v149 = v372;
          sub_1C12C2CB0(v311, v312, v313, v314, v315, v321, v384);
          swift_bridgeObjectRelease();
          sub_1C12E28F8((uint64_t)v383, v381, isa, v378, (char)v374);
          goto LABEL_110;
        }
      }
      swift_bridgeObjectRelease();
      sub_1C12E28F8((uint64_t)v256, v200, v202, v201, v179);
      sub_1C12E28F8((uint64_t)v256, v200, v202, v201, v179);
LABEL_109:
      swift_bridgeObjectRelease();
      goto LABEL_110;
    }
    v381 = v200;
    isa = v202;
    v378 = v201;
    LODWORD(v374) = v179;
    v226 = *(_QWORD *)(v160 + 16);
    v227 = *(_QWORD *)(v160 + 24);
    v228 = *(_QWORD *)(v160 + 32);
    v229 = *(_QWORD *)(v160 + 40);
    v231 = *(_QWORD *)(v160 + 48);
    v230 = *(_QWORD *)(v160 + 56);
    v232 = v160;
    v233 = *(_QWORD *)(v160 + 64);
    v234 = *(_QWORD *)(v232 + 72);
    v235 = *(unsigned __int8 *)(v232 + 82);
    v236 = *(unsigned __int16 *)(v232 + 80);
    v237 = v236 | (v235 << 16);
    LOBYTE(v232) = *(_BYTE *)(v232 + 83);
    v389 = v226;
    v390 = v227;
    *(_QWORD *)&v391 = v228;
    *((_QWORD *)&v391 + 1) = v229;
    *(_QWORD *)&v392 = v231;
    *((_QWORD *)&v392 + 1) = v230;
    *(_QWORD *)&v393 = v233;
    *((_QWORD *)&v393 + 1) = v234;
    BYTE2(v394) = v235;
    LOWORD(v394) = v236;
    HIBYTE(v394) = v232;
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v228, v229, v231, v230, v233, v234, v237);
    v238 = v360;
    sub_1C12F8268((uint64_t)&v389);
    if (v238)
    {
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v228, v229, v231, v230, v233, v234, v237);
      v239 = v238;
      v240 = v238;
      v241 = sub_1C130869C();
      v242 = sub_1C13088F4();
      if (os_log_type_enabled(v241, v242))
      {
        v243 = (uint8_t *)swift_slowAlloc();
        v244 = swift_slowAlloc();
        v389 = v244;
        *(_DWORD *)v243 = 136446210;
        v395 = (uint64_t)v238;
        v245 = v238;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8480);
        v246 = sub_1C13087EC();
        v395 = sub_1C13044AC(v246, v247, &v389);
        v248 = (uint64_t)v347;
        sub_1C1308960();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C12C0000, v241, v242, "Error unsubscribing from push notifications: %{public}s", v243, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v244, -1, -1);
        MEMORY[0x1C3BAA558](v243, -1, -1);

        swift_bridgeObjectRelease();
        sub_1C12E28F8((uint64_t)v383, v381, isa, v378, (char)v374);
        v149 = v372;
LABEL_101:
        sub_1C12CA4C8(v346, &qword_1ED78F6D0);
LABEL_110:
        sub_1C12C2D74((uint64_t)v362, v248, type metadata accessor for PushEvent);
        v322 = sub_1C130869C();
        v323 = sub_1C1308900();
        if (os_log_type_enabled(v322, v323))
        {
          v324 = (uint8_t *)swift_slowAlloc();
          v325 = swift_slowAlloc();
          v389 = v325;
          *(_DWORD *)v324 = 136446210;
          v326 = PushEvent.description.getter();
          v387 = sub_1C13044AC(v326, v327, &v389);
          sub_1C1308960();
          swift_bridgeObjectRelease();
          sub_1C12DD884(v248, type metadata accessor for PushEvent);
          _os_log_impl(&dword_1C12C0000, v322, v323, "Publishing event: %{public}s", v324, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v325, -1, -1);
          MEMORY[0x1C3BAA558](v324, -1, -1);
        }
        else
        {
          sub_1C12DD884(v248, type metadata accessor for PushEvent);
        }

        v328 = v366;
        v329 = v343;
        sub_1C1308684();
        v330 = v385;
        v331 = (uint64_t)v362;
        v332 = v345;
        sub_1C12C2D74((uint64_t)v362, v345, type metadata accessor for PushEvent);
        v333 = (*(unsigned __int8 *)(v329 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v329 + 80);
        v334 = swift_allocObject();
        *(_QWORD *)(v334 + 16) = v330;
        sub_1C12C2D20(v332, v334 + v333, type metadata accessor for PushEvent);
        v335 = v330;
        sub_1C1308678();
        swift_release();
        sub_1C12DD884(v331, type metadata accessor for PushEvent);
        (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v149);
        sub_1C12CA4C8(v328, &qword_1EF6D7DD0);
        sub_1C12CA4C8(v369, &qword_1EF6D8478);
        sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
        (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v338);
        goto LABEL_114;
      }

      swift_bridgeObjectRelease();
      sub_1C12E28F8((uint64_t)v383, v381, isa, v378, (char)v374);
      v149 = v372;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v228, v229, v231, v230, v233, v234, v237);
      sub_1C12C2CB0(v370, v382, (uint64_t)v383, v381, isa, v378, (int)v374);
      v149 = v372;
    }
    v248 = (uint64_t)v347;
    goto LABEL_101;
  }
  v180 = v384;
  v181 = v348;
  sub_1C12C2D74(v384 + *(int *)(v371 + 40), v348, type metadata accessor for IncomingMessage.EventType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v384 = v176;
    v182 = *(_QWORD *)(v181 + 16);
    v183 = *(_QWORD *)(v181 + 24);
    swift_bridgeObjectRelease();
    sub_1C12C2998(v182, v183);
    swift_bridgeObjectRelease();
    swift_retain_n();
    v184 = sub_1C130869C();
    LODWORD(v181) = sub_1C1308900();
    if (os_log_type_enabled(v184, (os_log_type_t)v181))
    {
      v185 = (uint8_t *)swift_slowAlloc();
      v186 = swift_slowAlloc();
      v395 = v186;
      *(_DWORD *)v185 = 136380675;
      swift_beginAccess();
      v187 = v160;
      v188 = *(_QWORD *)(v160 + 32);
      v189 = *(_QWORD *)(v160 + 40);
      v190 = *(unsigned __int16 *)(v187 + 80) | (*(char *)(v187 + 82) << 16);
      if (v190 < 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v370 = *(_QWORD *)(v187 + 72);
        v191 = v370;
        v374 = v184;
        v371 = (uint64_t)v185;
        v193 = *(_QWORD *)(v187 + 56);
        v192 = *(_QWORD *)(v187 + 64);
        LODWORD(v378) = v181;
        v181 = *(_QWORD *)(v187 + 48);
        isa = v186;
        v194 = *(_QWORD *)(v187 + 24);
        v389 = *(_QWORD *)(v187 + 16);
        v390 = v194;
        swift_bridgeObjectRetain_n();
        sub_1C12C2BD8(v188, v189, v181, v193, v192, v191, v190);
        sub_1C130884C();
        v186 = isa;
        swift_bridgeObjectRelease_n();
        v195 = v181;
        LOBYTE(v181) = v378;
        v196 = v193;
        v185 = (uint8_t *)v371;
        v197 = v192;
        v184 = v374;
        sub_1C12C2CB0(v188, v189, v195, v196, v197, v370, v190);
        v188 = v389;
        v189 = v390;
      }
      v389 = sub_1C13044AC(v188, v189, &v395);
      sub_1C1308960();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C12C0000, v184, (os_log_type_t)v181, "Received pushToStart notification for %{private}s", v185, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v186, -1, -1);
      MEMORY[0x1C3BAA558](v185, -1, -1);

      v160 = v187;
    }
    else
    {

      swift_release_n();
    }
    sub_1C1304D28(v384, (uint64_t)&v389);
    v262 = *((_QWORD *)&v391 + 1);
    v263 = v392;
    __swift_project_boxed_opaque_existential_1(&v389, *((uint64_t *)&v391 + 1));
    swift_beginAccess();
    v265 = *(_QWORD *)(v160 + 32);
    v264 = *(_QWORD *)(v160 + 40);
    v266 = *(unsigned __int16 *)(v160 + 80) | (*(char *)(v160 + 82) << 16);
    if (v266 < 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v384 = v263;
      v267 = (_QWORD *)v160;
      v270 = v160 + 64;
      v269 = *(_QWORD *)(v160 + 64);
      v268 = *(_QWORD *)(v270 + 8);
      v378 = v262;
      v271 = v267[6];
      v272 = v267[7];
      v273 = v267[3];
      v387 = v267[2];
      v388 = v273;
      swift_bridgeObjectRetain_n();
      sub_1C12C2BD8(v265, v264, v271, v272, v269, v268, v266);
      sub_1C130884C();
      swift_bridgeObjectRelease_n();
      v274 = v271;
      v262 = v378;
      v275 = v268;
      v263 = v384;
      sub_1C12C2CB0(v265, v264, v274, v272, v269, v275, v266);
      v265 = v387;
      v264 = v388;
    }
    v276 = v338;
    v149 = v372;
    v248 = (uint64_t)v347;
    v277 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v263 + 32))(v265, v264, v262, v263);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v389);
    if ((v277 & 1) != 0)
    {
      sub_1C12FA6E8(v381, (uint64_t)v361, v382, v383);
      swift_bridgeObjectRelease();
      v278 = v379;
      swift_retain_n();
      v279 = (uint8_t *)sub_1C130869C();
      LODWORD(v280) = sub_1C1308900();
      if (os_log_type_enabled((os_log_t)v279, (os_log_type_t)v280))
      {
        v281 = (uint8_t *)swift_slowAlloc();
        v282 = swift_slowAlloc();
        v283 = v282;
        v387 = v282;
        *(_DWORD *)v281 = 136446210;
        v285 = *(_QWORD *)(v278 + 32);
        v284 = *(_QWORD *)(v278 + 40);
        v286 = *(unsigned __int16 *)(v278 + 80) | (*(char *)(v278 + 82) << 16);
        if (v286 < 0)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v382 = *(_QWORD *)(v278 + 72);
          v287 = v382;
          LODWORD(v384) = v280;
          v383 = v279;
          v288 = *(_QWORD *)(v278 + 56);
          v280 = *(_QWORD *)(v278 + 64);
          v385 = (void *)v282;
          v289 = *(_QWORD *)(v278 + 48);
          v290 = *(_QWORD *)(v379 + 24);
          v389 = *(_QWORD *)(v379 + 16);
          v390 = v290;
          swift_bridgeObjectRetain_n();
          sub_1C12C2BD8(v285, v284, v289, v288, v280, v287, v286);
          sub_1C130884C();
          v276 = v338;
          swift_bridgeObjectRelease_n();
          v291 = v289;
          v283 = (uint64_t)v385;
          v292 = v288;
          v279 = v383;
          v293 = v280;
          LOBYTE(v280) = v384;
          sub_1C12C2CB0(v285, v284, v291, v292, v293, v382, v286);
          v285 = v389;
          v284 = v390;
        }
        v389 = sub_1C13044AC(v285, v284, &v387);
        sub_1C1308960();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C12C0000, (os_log_t)v279, (os_log_type_t)v280, "Push-to-start budget exceeded for %{public}s; not starting activity",
          v281,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v283, -1, -1);
        MEMORY[0x1C3BAA558](v281, -1, -1);

        sub_1C12DD884((uint64_t)v362, type metadata accessor for PushEvent);
        (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v372);
      }
      else
      {
        swift_release_n();

        sub_1C12DD884((uint64_t)v362, type metadata accessor for PushEvent);
        (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v149);
      }
      sub_1C12CA4C8(v366, &qword_1EF6D7DD0);
      sub_1C12CA4C8(v369, &qword_1EF6D8478);
      sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
      (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v276);
      goto LABEL_114;
    }
    goto LABEL_109;
  }
  swift_bridgeObjectRelease();
  v216 = v342;
  sub_1C12C2D74(v180, v342, type metadata accessor for IncomingMessage);
  v217 = sub_1C130869C();
  v218 = sub_1C13088F4();
  v219 = os_log_type_enabled(v217, v218);
  v220 = v338;
  if (v219)
  {
    v221 = (uint8_t *)swift_slowAlloc();
    v222 = swift_slowAlloc();
    v389 = v222;
    *(_DWORD *)v221 = 136446210;
    sub_1C12C2D74(v216 + *(int *)(v371 + 40), v341, type metadata accessor for IncomingMessage.EventType);
    v223 = sub_1C13087EC();
    v395 = sub_1C13044AC(v223, v224, &v389);
    v181 = v348;
    sub_1C1308960();
    swift_bridgeObjectRelease();
    sub_1C12DD884(v216, type metadata accessor for IncomingMessage);
    _os_log_impl(&dword_1C12C0000, v217, v218, "Unsupported push notification event type for pushToStart subscription: %{public}s", v221, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAA558](v222, -1, -1);
    MEMORY[0x1C3BAA558](v221, -1, -1);

  }
  else
  {

    sub_1C12DD884(v216, type metadata accessor for IncomingMessage);
  }
  sub_1C12DD884((uint64_t)v362, type metadata accessor for PushEvent);
  (*(void (**)(char *, uint64_t))(v373 + 8))(v367, v372);
  sub_1C12CA4C8(v366, &qword_1EF6D7DD0);
  sub_1C12CA4C8(v369, &qword_1EF6D8478);
  sub_1C12DD884((uint64_t)v376, type metadata accessor for PushEvent.EventType);
  (*(void (**)(uint64_t, uint64_t))(v368 + 8))(v377, v220);
  v225 = v181;
LABEL_85:
  sub_1C12DD884(v225, type metadata accessor for IncomingMessage.EventType);
LABEL_114:
  swift_release();
}

uint64_t PushServer.connection(_:didReceiveToken:for:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char *v17;
  _QWORD v19[2];

  v11 = type metadata accessor for AppTokenInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = sub_1C1308684();
  v19[0] = *(_QWORD *)&v5[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v19[1] = v14;
  sub_1C12C2D74(a5, (uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AppTokenInfo);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v5;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  sub_1C12C2D20((uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15, type metadata accessor for AppTokenInfo);
  v17 = v5;
  swift_unknownObjectRetain();
  sub_1C12C2F04(a3, a4);
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C1300DBC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FB30);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12C2D74(a8, (uint64_t)v16, type metadata accessor for AppTokenInfo);
  v17 = type metadata accessor for AppTokenInfo(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  sub_1C1300EBC(a4, a5, a6, a7, (uint64_t)v16);
  v18 = sub_1C12CA4C8((uint64_t)v16, &qword_1ED78FB30);
  return a1(v18);
}

void sub_1C1300EBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v37;
  void (*v38)(_QWORD *, uint64_t, uint64_t);
  id v39;
  char v40;
  void (*v41)(_QWORD *, uint64_t);
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  char *v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  int v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t (*v118)(_QWORD);
  unsigned int (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t ObjectType;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;

  v146 = a5;
  v135 = a4;
  v134 = a3;
  v144 = a2;
  v143 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  MEMORY[0x1E0C80A78](v6);
  v133 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for PushToken();
  v8 = MEMORY[0x1E0C80A78](v131);
  v132 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v136 = (uint64_t)&v123 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FB30);
  v12 = MEMORY[0x1E0C80A78](v11);
  v128 = (uint64_t)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v126 = (uint64_t)&v123 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v127 = (uint64_t)&v123 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v137 = (uint64_t)&v123 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v138 = (uint64_t *)((char *)&v123 - v21);
  v22 = MEMORY[0x1E0C80A78](v20);
  v140 = (uint64_t)&v123 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v123 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v123 - v27;
  v142 = sub_1C13086A8();
  v141 = *(_QWORD *)(v142 - 8);
  v29 = MEMORY[0x1E0C80A78](v142);
  v130 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v145 = (char *)&v123 - v31;
  v32 = sub_1C1308738();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v35 = (uint64_t *)((char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = v5;
  v36 = *(void **)&v5[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  *v35 = v36;
  v37 = *MEMORY[0x1E0DEF740];
  v38 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 104);
  v38(v35, v37, v32);
  v39 = v36;
  v40 = sub_1C1308744();
  v41 = *(void (**)(_QWORD *, uint64_t))(v33 + 8);
  v41(v35, v32);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  *v35 = v39;
  v38(v35, v37, v32);
  v42 = v39;
  v43 = sub_1C1308744();
  v41(v35, v32);
  if ((v43 & 1) == 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
LABEL_5:
    v48 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED78F650);
    v49 = v141;
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 16);
    v124 = v48;
    v125 = v50;
    ((void (*)(char *))v50)(v145);
    v51 = v146;
    sub_1C12DD958(v146, (uint64_t)v28, &qword_1ED78FB30);
    swift_bridgeObjectRetain_n();
    v52 = sub_1C130869C();
    v53 = sub_1C1308900();
    v54 = os_log_type_enabled(v52, v53);
    v139 = v35;
    if (v54)
    {
      v55 = swift_slowAlloc();
      v123 = swift_slowAlloc();
      v148 = v123;
      *(_DWORD *)v55 = 136446466;
      sub_1C12DD958((uint64_t)v28, (uint64_t)v26, &qword_1ED78FB30);
      v56 = type metadata accessor for AppTokenInfo(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v26, 1, v56) == 1)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_36;
      }
      v57 = *((_QWORD *)v26 + 2);
      v58 = *((_QWORD *)v26 + 3);
      swift_bridgeObjectRetain();
      sub_1C12DD884((uint64_t)v26, type metadata accessor for AppTokenInfo);
      v157 = sub_1C13044AC(v57, v58, &v148);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      sub_1C12CA4C8((uint64_t)v28, &qword_1ED78FB30);
      *(_WORD *)(v55 + 12) = 2082;
      v59 = (unint64_t)v139;
      swift_bridgeObjectRetain();
      v157 = sub_1C13044AC(v129, v59, &v148);
      sub_1C1308960();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C12C0000, v52, v53, "Received app token with identifier: %{public}s for environment: %{public}s", (uint8_t *)v55, 0x16u);
      v60 = v123;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v60, -1, -1);
      MEMORY[0x1C3BAA558](v55, -1, -1);

      v61 = *(void (**)(char *, uint64_t))(v141 + 8);
      v61(v145, v33);
      v51 = v146;
    }
    else
    {
      sub_1C12CA4C8((uint64_t)v28, &qword_1ED78FB30);

      swift_bridgeObjectRelease_n();
      v61 = *(void (**)(char *, uint64_t))(v49 + 8);
      v61(v145, v33);
    }
    sub_1C12C3158((uint64_t)v147 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore, (uint64_t)&v157);
    v66 = v158;
    v67 = v159;
    __swift_project_boxed_opaque_existential_1(&v157, v158);
    v68 = v140;
    sub_1C12DD958(v51, v140, &qword_1ED78FB30);
    v69 = type metadata accessor for AppTokenInfo(0);
    v70 = *(char **)(*(_QWORD *)(v69 - 8) + 48);
    v141 = v69;
    v145 = v70;
    if (((unsigned int (*)(uint64_t, uint64_t))v70)(v68, 1) == 1)
    {
      __break(1u);
    }
    else
    {
      v71 = *(_QWORD *)(v68 + 16);
      v72 = *(_QWORD *)(v68 + 24);
      swift_bridgeObjectRetain();
      sub_1C12DD884(v68, type metadata accessor for AppTokenInfo);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 88))(&v148, v71, v72, v66, v67);
      swift_bridgeObjectRelease();
      v73 = v149;
      if (!v149)
      {
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
        v82 = v130;
        v125(v130, v124, v33);
        v83 = v127;
        sub_1C12DD958(v51, v127, &qword_1ED78FB30);
        v84 = sub_1C130869C();
        v85 = sub_1C13088F4();
        if (os_log_type_enabled(v84, v85))
        {
          v86 = (uint8_t *)swift_slowAlloc();
          v87 = swift_slowAlloc();
          v148 = v87;
          *(_DWORD *)v86 = 136446210;
          v88 = v126;
          sub_1C12DD958(v83, v126, &qword_1ED78FB30);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v145)(v88, 1, v141) == 1)
          {
LABEL_37:
            __break(1u);
            return;
          }
          v89 = *(_QWORD *)(v88 + 16);
          v90 = *(_QWORD *)(v88 + 24);
          swift_bridgeObjectRetain();
          sub_1C12DD884(v88, type metadata accessor for AppTokenInfo);
          v157 = sub_1C13044AC(v89, v90, &v148);
          sub_1C1308960();
          swift_bridgeObjectRelease();
          sub_1C12CA4C8(v83, &qword_1ED78FB30);
          _os_log_impl(&dword_1C12C0000, v84, v85, "Subscription for token does not exist: %{public}s", v86, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAA558](v87, -1, -1);
          MEMORY[0x1C3BAA558](v86, -1, -1);

          v61(v130, v142);
          v51 = v146;
        }
        else
        {
          sub_1C12CA4C8(v83, &qword_1ED78FB30);

          v61(v82, v33);
        }
        v119 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v145;
        v120 = v141;
        v121 = v128;
        sub_1C12DD958(v51, v128, &qword_1ED78FB30);
        if (v119(v121, 1, v120) != 1)
        {
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v144 + 32))(v121, ObjectType);
          v118 = type metadata accessor for AppTokenInfo;
          v117 = v121;
          goto LABEL_28;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v74 = v148;
      v76 = v150;
      v75 = v151;
      v77 = v152;
      v78 = v153;
      v80 = v154;
      v79 = v155;
      v81 = v156;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
      if ((v81 & 0x800000) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1C12E2944(v74, v73, v76, v75, v77, v78, v80, v79, v81);
      }
      else
      {
        v148 = v74;
        v149 = v73;
        swift_bridgeObjectRetain_n();
        sub_1C130884C();
        swift_bridgeObjectRelease();
        sub_1C12E2944(v74, v73, v76, v75, v77, v78, v80, v79, v81);
        v76 = v148;
        v75 = v149;
      }
      v91 = v146;
      v92 = v138;
      sub_1C12DD958(v146, (uint64_t)v138, &qword_1ED78FB30);
      v93 = v141;
      v94 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v145;
      v95 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v145)(v92, 1, v141);
      v96 = v139;
      if (v95 != 1)
      {
        v98 = *v92;
        v97 = v92[1];
        swift_bridgeObjectRetain();
        sub_1C12DD884((uint64_t)v92, type metadata accessor for AppTokenInfo);
        v99 = v91;
        v100 = v137;
        sub_1C12DD958(v99, v137, &qword_1ED78FB30);
        if (v94(v100, 1, v93) != 1)
        {
          v101 = v133;
          sub_1C12DD958(v100 + *(int *)(v93 + 24), v133, &qword_1ED78F6D0);
          sub_1C12DD884(v100, type metadata accessor for AppTokenInfo);
          v102 = (uint64_t *)v132;
          v103 = (uint64_t)&v132[*(int *)(v131 + 32)];
          v104 = sub_1C1308468();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v103, 1, 1, v104);
          v102[2] = v76;
          v102[3] = v75;
          v102[4] = v129;
          v102[5] = (uint64_t)v96;
          v102[6] = v98;
          v102[7] = v97;
          v105 = v134;
          v106 = v135;
          *v102 = v134;
          v102[1] = v106;
          sub_1C12C2F04(v105, v106);
          sub_1C12E38EC(v101, v103);
          v107 = v136;
          sub_1C12C2D20((uint64_t)v102, v136, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
          v108 = v147;
          v109 = (uint64_t)v147 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore;
          sub_1C12C3158((uint64_t)v147 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_tokenStore, (uint64_t)&v148);
          v110 = v151;
          v111 = v152;
          __swift_project_boxed_opaque_existential_1(&v148, v151);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v107, v110, v111);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
          sub_1C12C3158(v109, (uint64_t)&v148);
          v112 = v151;
          v113 = v152;
          __swift_project_boxed_opaque_existential_1(&v148, v151);
          v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
          sub_1C1308684();
          v115 = swift_allocObject();
          *(_QWORD *)(v115 + 16) = v108;
          *(_QWORD *)(v115 + 24) = v114;
          v116 = v108;
          sub_1C1308678();
          swift_release();
          v117 = v107;
          v118 = (uint64_t (*)(_QWORD))type metadata accessor for PushToken;
LABEL_28:
          sub_1C12DD884(v117, v118);
          return;
        }
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v44 = swift_beginAccess();
  MEMORY[0x1E0C80A78](v44);
  v45 = swift_bridgeObjectRetain();
  v46 = sub_1C1306C50(v45, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1307DD0);
  v35 = v47;
  swift_bridgeObjectRelease();
  if (v35)
  {
    v129 = v46;
    swift_unknownObjectRelease();
    v33 = v142;
    if (qword_1ED78F670 == -1)
      goto LABEL_5;
    goto LABEL_31;
  }
  v62 = v142;
  if (qword_1ED78F670 != -1)
    swift_once();
  __swift_project_value_buffer(v62, (uint64_t)qword_1ED78F650);
  v63 = sub_1C130869C();
  v64 = sub_1C13088F4();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v65 = 0;
    _os_log_impl(&dword_1C12C0000, v63, v64, "Connection for incoming push token is unknown", v65, 2u);
    MEMORY[0x1C3BAA558](v65, -1, -1);
  }

}

uint64_t PushServer.connection(_:channelSubscriptionsFailedWith:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v7;
  id v8;

  sub_1C1308684();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  v8 = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C1301D58(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  void *v4;
  _QWORD *v9;
  id v10;

  sub_1C1308684();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  v10 = v4;
  swift_unknownObjectRetain();
  sub_1C12C2F04(a3, a4);
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C1301E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IncomingMessage(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  sub_1C1308684();
  sub_1C12C2D74(a3, (uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for IncomingMessage);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a2;
  sub_1C12C2D20((uint64_t)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v11 + v10, type metadata accessor for IncomingMessage);
  v12 = v3;
  swift_unknownObjectRetain();
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C1301F54(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char *v17;
  _QWORD v19[2];

  v11 = type metadata accessor for AppTokenInfo(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = sub_1C1308684();
  v19[0] = *(_QWORD *)&v5[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  v19[1] = v14;
  sub_1C12C2D74(a5, (uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AppTokenInfo);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v5;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  sub_1C12C2D20((uint64_t)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v16 + v15, type metadata accessor for AppTokenInfo);
  v17 = v5;
  swift_unknownObjectRetain();
  sub_1C12C2F04(a3, a4);
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C13020A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v7;
  id v8;

  sub_1C1308684();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  v8 = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1308678();
  return swift_release();
}

uint64_t sub_1C1302164(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v58 = a2;
  v59 = a4;
  v57 = a1;
  v56 = type metadata accessor for PushEvent(0);
  MEMORY[0x1E0C80A78](v56);
  v54 = (_QWORD *)((char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1C13085D0();
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C13085A0();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C13084F8();
  v60 = *(_QWORD *)(v10 - 8);
  v61 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = sub_1C1308528();
  v68 = *(_QWORD *)(v55 - 8);
  result = MEMORY[0x1E0C80A78](v55);
  v71 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 16);
  if (v15)
  {
    v52 = OBJC_IVAR____TtC24SessionPushNotifications10PushServer__eventPublisher;
    v48 = *MEMORY[0x1E0C8F4A0];
    v49 = *MEMORY[0x1E0C8F498];
    v50 = *MEMORY[0x1E0C8F490];
    v51 = *MEMORY[0x1E0C8F750];
    swift_bridgeObjectRetain();
    v47[1] = a3;
    v16 = a3 + 48;
    v53 = v12;
    while (1)
    {
      v64 = v15;
      v18 = *(_QWORD *)(v16 - 16);
      v17 = *(_QWORD *)(v16 - 8);
      v19 = *(_QWORD *)v16;
      v20 = *(_QWORD *)(v16 + 16);
      v73 = *(_QWORD *)(v16 + 8);
      v74 = v19;
      v21 = *(_QWORD *)(v16 + 24);
      v22 = *(_QWORD *)(v16 + 32);
      v23 = *(_QWORD *)(v16 + 40);
      v24 = *(unsigned __int16 *)(v16 + 48) | (*(char *)(v16 + 50) << 16);
      v66 = v21;
      v67 = v22;
      v65 = v20;
      v72 = v18;
      if ((v24 & 0x80000000) == 0)
        break;
      if ((_BYTE)v24)
      {
        if (v24 != 1)
        {
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v12, v48, v61);
          swift_bridgeObjectRetain();
          v28 = v73;
          v27 = v74;
          goto LABEL_5;
        }
        *v12 = v20;
        v12[1] = v21;
        v12[2] = v22;
        v12[3] = v23;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v12, v49, v61);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v74, v73, v20, v21, v22, v23, v24);
        swift_bridgeObjectRetain();
        sub_1C12CA504(v20, v21, v22, v23, 1);
      }
      else
      {
        *v12 = v20;
        v12[1] = v21;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v12, v50, v61);
        swift_bridgeObjectRetain();
        sub_1C12C2BD8(v74, v73, v20, v21, v22, v23, v24);
        swift_bridgeObjectRetain();
        sub_1C12CA504(v20, v21, v22, v23, 0);
      }
LABEL_6:
      v29 = v23;
      sub_1C1308510();
      sub_1C13085C4();
      v30 = v62;
      sub_1C1308594();
      if ((v24 & 0x80000000) == 0)
      {
        v75 = v72;
        v76 = v17;
        swift_bridgeObjectRetain_n();
        v42 = v73;
        v43 = v74;
        v45 = v65;
        v44 = v66;
        v46 = v67;
        sub_1C12C2BD8(v74, v73, v65, v66, v67, v29, v24);
        swift_bridgeObjectRetain();
        sub_1C130884C();
        swift_bridgeObjectRelease_n();
        result = sub_1C12C2CB0(v43, v42, v45, v44, v46, v29, v24);
        __break(1u);
        return result;
      }
      v31 = (int *)v56;
      v32 = v54;
      swift_bridgeObjectRetain();
      v33 = v73;
      swift_bridgeObjectRetain_n();
      sub_1C1308450();
      swift_bridgeObjectRelease();
      v34 = v74;
      sub_1C12C2CB0(v74, v33, v65, v66, v67, v29, v24);
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))((char *)v32 + v31[8], v30, v70);
      type metadata accessor for PushEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      v35 = (char *)v32 + v31[9];
      v36 = v71;
      v37 = v55;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v35, v71, v55);
      v38 = sub_1C1308588();
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v35, v51, v38);
      v39 = (char *)v32 + v31[10];
      v40 = sub_1C1308558();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
      *v32 = v34;
      v32[1] = v33;
      v32[2] = v34;
      v32[3] = v33;
      v32[4] = v72;
      v32[5] = v17;
      *((_BYTE *)v32 + v31[11]) = 0;
      v41 = sub_1C13086CC();
      v57(v41);
      sub_1C12DD884((uint64_t)v32, type metadata accessor for PushEvent);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v70);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v36, v37);
      v16 += 72;
      v15 = v64 - 1;
      v12 = v53;
      if (v64 == 1)
        return swift_bridgeObjectRelease();
    }
    v26 = v73;
    v25 = v74;
    *v12 = v74;
    v12[1] = v26;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v60 + 104))(v12, v50, v61);
    swift_bridgeObjectRetain();
    sub_1C12C2BD8(v25, v26, v20, v21, v22, v23, v24);
    v27 = v25;
    v28 = v26;
LABEL_5:
    sub_1C12C2BD8(v27, v28, v20, v21, v22, v23, v24);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  return result;
}

void sub_1C130278C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  void *v21;
  int v22;
  id v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint8_t *v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_t v68;
  uint8_t *v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  os_log_t v73;
  int v74;
  int v75;
  int v76;
  uint8_t *v77;
  os_log_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint8_t *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int16 v98;
  char v99;
  char v100;
  uint64_t v101;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F4D8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Budget();
  v79 = *(uint8_t **)(v6 - 8);
  v80 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v77 = (uint8_t *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v78 = (os_log_t)((char *)&v72 - v9);
  v10 = sub_1C1308738();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(uint8_t **)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v87 = *(_QWORD *)(a1 + 24);
  v88 = v16;
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v83 = v14;
  v84 = v18;
  v89 = *(_QWORD *)(a1 + 48);
  v85 = *(_QWORD *)(a1 + 56);
  v86 = (_QWORD *)v17;
  v19 = *(char *)(a1 + 66);
  v20 = *(unsigned __int16 *)(a1 + 64);
  v82 = v1;
  v21 = *(void **)(v1 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue);
  v22 = *(unsigned __int8 *)(a1 + 67);
  *v13 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v23 = v21;
  v24 = sub_1C1308744();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  LODWORD(v11) = v20 | (v19 << 16);
  v81 = v15;
  if ((v11 & 0x80000000) == 0)
  {
    v10 = v84;
    v13 = v86;
    if (qword_1ED78F670 == -1)
    {
LABEL_4:
      v25 = sub_1C13086A8();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED78F650);
      v26 = v83;
      swift_bridgeObjectRetain();
      v27 = v87;
      v28 = v88;
      v29 = v89;
      v30 = v85;
      sub_1C12C2BD8(v88, v87, (uint64_t)v13, v10, v89, v85, v11);
      swift_bridgeObjectRetain();
      sub_1C12C2BD8(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
      v31 = sub_1C130869C();
      v32 = sub_1C13088F4();
      v33 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v34 = swift_slowAlloc();
        LODWORD(v80) = v33;
        v35 = (uint8_t *)v34;
        v82 = swift_slowAlloc();
        v101 = v82;
        v78 = v31;
        v79 = v35;
        *(_DWORD *)v35 = 136380675;
        v77 = v35 + 4;
        v90 = v81;
        v91 = v26;
        swift_bridgeObjectRetain_n();
        sub_1C12C2BD8(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
        swift_bridgeObjectRetain();
        sub_1C130884C();
        swift_bridgeObjectRelease_n();
        sub_1C12C2CB0(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
        v90 = (uint8_t *)sub_1C13044AC((uint64_t)v90, v91, &v101);
        sub_1C1308960();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
        v31 = v78;
        v36 = v79;
        _os_log_impl(&dword_1C12C0000, v78, (os_log_type_t)v80, "Cannot request frequent updates for push-to-start subscription: %{private}s", v79, 0xCu);
        v37 = v82;
        swift_arrayDestroy();
        MEMORY[0x1C3BAA558](v37, -1, -1);
        MEMORY[0x1C3BAA558](v36, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
        swift_bridgeObjectRelease();
        sub_1C12C2CB0(v28, v27, (uint64_t)v13, v10, v29, v30, v11);
      }

      return;
    }
LABEL_22:
    swift_once();
    goto LABEL_4;
  }
  sub_1C1304D28(v82 + OBJC_IVAR____TtC24SessionPushNotifications10PushServer_budgetServer, (uint64_t)&v90);
  v38 = v93;
  v39 = v94;
  __swift_project_boxed_opaque_existential_1(&v90, v93);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 48);
  v41 = v20 | (v19 << 16);
  v42 = v87;
  v43 = v88;
  v44 = (uint64_t)v86;
  v45 = v84;
  v76 = v41;
  sub_1C12C2BD8(v88, v87, (uint64_t)v86, v84, v89, v85, v41);
  swift_bridgeObjectRetain();
  v40(v43, v42, v38, v39);
  swift_bridgeObjectRelease();
  v46 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v79 + 6))(v5, 1, v80);
  v75 = v22;
  if (v46 == 1)
  {
    sub_1C12CA4C8((uint64_t)v5, &qword_1ED78F4D8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    if (qword_1ED78F670 != -1)
      swift_once();
    v47 = sub_1C13086A8();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED78F650);
    swift_bridgeObjectRetain();
    v48 = v89;
    v49 = v85;
    v50 = v76;
    sub_1C12CA504(v44, v45, v89, v85, v76);
    v51 = sub_1C130869C();
    v52 = sub_1C1308900();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = (uint8_t *)swift_slowAlloc();
      v90 = v54;
      *(_DWORD *)v53 = 136446210;
      v48 = v89;
      swift_bridgeObjectRetain();
      v55 = v88;
      v101 = sub_1C13044AC(v88, v87, (uint64_t *)&v90);
      v50 = v76;
      v45 = v84;
      sub_1C1308960();
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v55, v87, (uint64_t)v86, v45, v48, v49, v50);
      sub_1C12C2CB0(v55, v87, (uint64_t)v86, v45, v48, v49, v50);
      _os_log_impl(&dword_1C12C0000, v51, v52, "Requesting frequent updates permission for activity exceeding reduced budget %{public}s", v53, 0xCu);
      swift_arrayDestroy();
      v56 = v54;
      v44 = (uint64_t)v86;
      MEMORY[0x1C3BAA558](v56, -1, -1);
      MEMORY[0x1C3BAA558](v53, -1, -1);

      v57 = v55;
      v42 = v87;
    }
    else
    {
      v71 = v88;
      sub_1C12C2CB0(v88, v42, v44, v45, v48, v49, v50);
      sub_1C12C2CB0(v71, v42, v44, v45, v48, v49, v50);

      v57 = v71;
    }
  }
  else
  {
    v58 = v78;
    sub_1C12C2D20((uint64_t)v5, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    if (qword_1ED78F670 != -1)
      swift_once();
    v59 = sub_1C13086A8();
    __swift_project_value_buffer(v59, (uint64_t)qword_1ED78F650);
    v60 = (uint64_t)v77;
    sub_1C12C2D74((uint64_t)v58, (uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    swift_bridgeObjectRetain();
    v48 = v89;
    v49 = v85;
    v50 = v76;
    sub_1C12CA504(v44, v45, v89, v85, v76);
    v61 = sub_1C130869C();
    v62 = sub_1C1308900();
    v63 = v62;
    if (os_log_type_enabled(v61, v62))
    {
      v64 = swift_slowAlloc();
      v74 = v63;
      v65 = v64;
      v79 = (uint8_t *)swift_slowAlloc();
      v90 = v79;
      *(_DWORD *)v65 = 136446466;
      v73 = v61;
      v72 = v65 + 4;
      swift_bridgeObjectRetain();
      v66 = v88;
      v101 = sub_1C13044AC(v88, v42, (uint64_t *)&v90);
      sub_1C1308960();
      swift_bridgeObjectRelease();
      sub_1C12C2CB0(v66, v42, v44, v45, v48, v49, v50);
      sub_1C12C2CB0(v66, v42, v44, v45, v48, v49, v50);
      *(_WORD *)(v65 + 12) = 2050;
      v67 = *(_QWORD *)(v60 + *(int *)(v80 + 20));
      sub_1C12DD884(v60, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
      v101 = v67;
      v48 = v89;
      sub_1C1308960();
      v68 = v73;
      _os_log_impl(&dword_1C12C0000, v73, (os_log_type_t)v74, "Requesting frequent updates permission for activity exceeding reduced budget %{public}s; remaining budget: %{public}ld",
        (uint8_t *)v65,
        0x16u);
      v69 = v79;
      swift_arrayDestroy();
      MEMORY[0x1C3BAA558](v69, -1, -1);
      MEMORY[0x1C3BAA558](v65, -1, -1);

      v57 = v88;
      v70 = v78;
      v44 = (uint64_t)v86;
    }
    else
    {
      sub_1C12DD884(v60, (uint64_t (*)(_QWORD))type metadata accessor for Budget);

      v57 = v88;
      sub_1C12C2CB0(v88, v42, v44, v45, v48, v49, v50);
      sub_1C12C2CB0(v57, v42, v44, v45, v48, v49, v50);
      v70 = v58;
    }
    sub_1C12DD884((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
  }
  v90 = v81;
  v91 = v83;
  v92 = v57;
  v93 = v42;
  v94 = v44;
  v95 = v45;
  v96 = v48;
  v97 = v49;
  v99 = BYTE2(v50);
  v98 = v50;
  v100 = v75;
  sub_1C13086CC();
}

uint64_t sub_1C1303234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t *, _QWORD, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t *, _QWORD, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = sub_1C13084F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1C1308528();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v15 = *(unsigned __int16 *)(a1 + 64) | (*(char *)(a1 + 66) << 16);
  if (v15 < 0)
  {
    if ((_BYTE)v15)
    {
      v24[0] = v9;
      if (v15 == 1)
      {
        *v6 = v11;
        v6[1] = v12;
        v6[2] = v14;
        v6[3] = v13;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0C8F498], v3);
        sub_1C12CA504(v11, v12, v14, v13, 1);
      }
      else
      {
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0C8F4A0], v3);
      }
      v17 = v24[0];
    }
    else
    {
      *v6 = v11;
      v6[1] = v12;
      v18 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104);
      v17 = v9;
      v18(v6, *MEMORY[0x1E0C8F490], v3);
      sub_1C12CA504(v11, v12, v14, v13, 0);
    }
  }
  else
  {
    *v6 = v9;
    v6[1] = v10;
    v16 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104);
    v17 = v9;
    v16(v6, *MEMORY[0x1E0C8F490], v3);
    sub_1C12C2BD8(v17, v10, v11, v12, v14, v13, v15);
  }
  swift_bridgeObjectRetain();
  v19 = v25;
  sub_1C1308510();
  swift_bridgeObjectRelease();
  sub_1C12C2CB0(v17, v10, v11, v12, v14, v13, v15);
  v20 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v19, v27);
  v21 = *MEMORY[0x1E0C8F750];
  v22 = sub_1C1308588();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
}

uint64_t sub_1C1303498@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(unint64_t, _QWORD, uint64_t);
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  __int128 v71[4];
  int v72;
  _OWORD v73[2];

  v69 = a2;
  v65 = sub_1C1308600();
  v63 = *(_QWORD *)(v65 - 8);
  v3 = MEMORY[0x1E0C80A78](v65);
  v64 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)v59 - v5;
  v6 = sub_1C13085D0();
  MEMORY[0x1E0C80A78](v6);
  v68 = type metadata accessor for PushEvent.EventType(0);
  MEMORY[0x1E0C80A78](v68);
  v8 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1308468();
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v59 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78F6D0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v59 - v19;
  v21 = type metadata accessor for IncomingMessage.EventType(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (_QWORD *)((char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(_OWORD *)(a1 + 48);
  v71[2] = *(_OWORD *)(a1 + 32);
  v71[3] = v24;
  v72 = *(_DWORD *)(a1 + 64);
  v25 = *(_OWORD *)(a1 + 16);
  v71[0] = *(_OWORD *)a1;
  v71[1] = v25;
  v26 = type metadata accessor for IncomingMessage(0);
  sub_1C12C2D74(v70 + *(int *)(v26 + 40), (uint64_t)v23, type metadata accessor for IncomingMessage.EventType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v28 = *v23;
      v29 = v23[1];
      v30 = v23[2];
      v31 = v23[3];
      sub_1C12E2880((uint64_t)v71);
      v32 = swift_bridgeObjectRetain();
      v33 = sub_1C1306910(v32, v71);
      sub_1C1308068((uint64_t)v71);
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v33 + 16))
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D7D28);
        v70 = sub_1C130857C();
        v61 = *(_QWORD *)(v70 - 8);
        v66 = *(_QWORD *)(v61 + 72);
        v67 = v28;
        v34 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1C130AB60;
        v35 = v33 + v34;
        v36 = (uint64_t *)(v33 + v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8490) + 48));
        sub_1C1308504();
        v73[0] = v71[0];
        v59[2] = *(_QWORD *)&v71[0];
        v60 = v29;
        v59[1] = *((_QWORD *)&v71[0] + 1);
        sub_1C12E29BC((uint64_t)v73);
        v37 = v62;
        sub_1C13085E8();
        v38 = sub_1C13085F4();
        v40 = v39;
        v63 = *(_QWORD *)(v63 + 8);
        v41 = v37;
        v42 = v65;
        ((void (*)(char *, uint64_t))v63)(v41, v65);
        *v36 = v38;
        v36[1] = v40;
        v43 = *(void (**)(unint64_t, _QWORD, uint64_t))(v61 + 104);
        v43(v35, *MEMORY[0x1E0C8F768], v70);
        v44 = (uint64_t *)(v35 + v66);
        sub_1C12E29BC((uint64_t)v73);
        v45 = v64;
        sub_1C13085E8();
        v46 = sub_1C13085F4();
        v48 = v47;
        v49 = v45;
        v28 = v67;
        ((void (*)(char *, uint64_t))v63)(v49, v42);
        *v44 = v46;
        v44[1] = v48;
        v29 = v60;
        v43((unint64_t)v44, *MEMORY[0x1E0C8F770], v70);
      }
      swift_bridgeObjectRetain();
      sub_1C12C2F04(v30, v31);
      swift_bridgeObjectRelease();
      sub_1C12C2998(v30, v31);
      swift_bridgeObjectRelease();
      v50 = v69;
      *v69 = v28;
      v50[1] = v29;
      v50[2] = v30;
      v50[3] = v31;
      v50[4] = v33;
    }
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1C12DD828((uint64_t)v23, (uint64_t)v20, &qword_1ED78F6D0);
    sub_1C12DD958((uint64_t)v20, (uint64_t)v18, &qword_1ED78F6D0);
    v51 = v66;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v18, 1, v67) == 1)
    {
      sub_1C12CA4C8((uint64_t)v18, &qword_1ED78F6D0);
      sub_1C13085B8();
      sub_1C1308594();
      sub_1C12CA4C8((uint64_t)v20, &qword_1ED78F6D0);
      swift_storeEnumTagMultiPayload();
      return sub_1C12C2D20((uint64_t)v8, (uint64_t)v69, type metadata accessor for PushEvent.EventType);
    }
    else
    {
      v53 = v14;
      v54 = v18;
      v55 = v67;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v14, v54, v67);
      sub_1C1308450();
      sub_1C12CE1CC(&qword_1EF6D8498, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v56 = sub_1C13087B0();
      v57 = *(void (**)(char *, uint64_t))(v51 + 8);
      v57(v12, v55);
      v58 = v69;
      if ((v56 & 1) != 0)
        sub_1C13085AC();
      else
        sub_1C13085C4();
      sub_1C1308594();
      v57(v53, v67);
      sub_1C12CA4C8((uint64_t)v20, &qword_1ED78F6D0);
      swift_storeEnumTagMultiPayload();
      return sub_1C12C2D20((uint64_t)v8, (uint64_t)v58, type metadata accessor for PushEvent.EventType);
    }
  }
}

uint64_t sub_1C1303AAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v87 = a1;
  v72 = sub_1C1308624();
  v77 = *(_QWORD *)(v72 - 8);
  v2 = MEMORY[0x1E0C80A78](v72);
  v74 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v75 = (char *)&v60 - v4;
  v76 = sub_1C1308390();
  v73 = *(_QWORD *)(v76 - 8);
  v5 = MEMORY[0x1E0C80A78](v76);
  v71 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v60 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v83 = (char *)&v60 - v10;
  MEMORY[0x1E0C80A78](v9);
  v85 = (char *)&v60 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8478);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v86 = (uint64_t)&v60 - v16;
  v17 = *(int *)(type metadata accessor for IncomingMessage(0) + 44);
  v82 = v1;
  v18 = (uint64_t *)(v1 + v17);
  v19 = v18[1];
  v20 = v18[2];
  v78 = *v18;
  v79 = v20;
  v21 = v18[4];
  v80 = v18[3];
  v23 = v18[5];
  v22 = v18[6];
  v25 = v18[7];
  v24 = v18[8];
  v27 = v18[9];
  v26 = v18[10];
  v28 = v18[11];
  v29 = sub_1C130863C();
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v81 = v19;
  if (v19 == 1)
    return v30(v87, 1, 1, v29);
  v66 = v25;
  v67 = v22;
  v68 = v27;
  v69 = v24;
  v70 = v21;
  v65 = v23;
  v60 = v26;
  v61 = v28;
  v32 = v84;
  v64 = v15;
  v33 = v86;
  v63 = v29;
  v62 = v30;
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v86, 1, 1);
  v35 = *(_QWORD *)(v82 + 16);
  v34 = *(_QWORD *)(v82 + 24);
  type metadata accessor for StringLocalizer();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  sub_1C12E4910(v35, v34);
  v36 = v81;
  if (v81)
  {
    swift_bridgeObjectRetain();
    v37 = v79;
    swift_bridgeObjectRetain();
    v38 = v32;
    v39 = v70;
    v40 = v78;
  }
  else
  {
    v37 = 0;
    v40 = 0;
    v38 = v32;
    v39 = v70;
  }
  sub_1C12E4C18(v40, v36, v37, v67);
  v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_bridgeObjectRetain();
    v43 = v65;
    swift_bridgeObjectRetain();
    v44 = v83;
    v45 = v80;
  }
  else
  {
    v43 = 0;
    v45 = 0;
    v44 = v83;
  }
  sub_1C12E4C18(v45, v39, v43, v69);
  v47 = v46;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v42 && v47)
  {
    sub_1C1308384();
    sub_1C1308384();
    if (v61)
    {
      swift_bridgeObjectRetain();
      v48 = v75;
      sub_1C130860C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = v75;
      sub_1C1308618();
    }
    v50 = v76;
    v49 = v77;
    v52 = v73;
    v51 = v74;
    v53 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
    v54 = v38;
    v55 = v85;
    v53(v54, v85, v76);
    v53(v71, v44, v50);
    v56 = v72;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v48, v72);
    v57 = v44;
    v58 = (uint64_t)v64;
    sub_1C1308630();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v56);
    v59 = *(void (**)(char *, uint64_t))(v52 + 8);
    v59(v57, v50);
    v59(v55, v50);
    v33 = v86;
    sub_1C12CA4C8(v86, &qword_1EF6D8478);
    v62(v58, 0, 1, v63);
    sub_1C12DD828(v58, v33, &qword_1EF6D8478);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return sub_1C12DD828(v33, v87, &qword_1EF6D8478);
}

void sub_1C1304000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1C1304060(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1C1304244);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

unint64_t sub_1C1304268(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _QWORD *v20;
  _QWORD *v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  do
  {
LABEL_6:
    if (!v8)
    {
      v12 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
      }
      else
      {
        if (v12 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v12);
        ++v4;
        if (v13)
          goto LABEL_23;
        v4 = v12 + 1;
        if (v12 + 1 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (v13)
          goto LABEL_23;
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (v13)
          goto LABEL_23;
        v4 = v12 + 3;
        if (v12 + 3 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (v13)
          goto LABEL_23;
        v14 = v12 + 4;
        if (v14 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v14);
        if (v13)
        {
          v4 = v14;
LABEL_23:
          v8 = (v13 - 1) & v13;
          v11 = __clz(__rbit64(v13)) + (v4 << 6);
          goto LABEL_24;
        }
        while (1)
        {
          v4 = v14 + 1;
          if (__OFADD__(v14, 1))
            break;
          if (v4 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          ++v14;
          if (v13)
            goto LABEL_23;
        }
      }
      __break(1u);
      return result;
    }
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    result = sub_1C12C5A44(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11));
    if ((v16 & 1) == 0)
      return 0;
    v17 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * result);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18 != *(_QWORD *)(v15 + 16))
      return 0;
    if (v18)
      v19 = v17 == v15;
    else
      v19 = 1;
  }
  while (v19);
  v20 = (_QWORD *)(v17 + 40);
  v21 = (_QWORD *)(v15 + 40);
  while (1)
  {
    result = *(v20 - 1);
    if (result != *(v21 - 1) || *v20 != *v21)
    {
      result = sub_1C1308A98();
      if ((result & 1) == 0)
        return 0;
    }
    v20 += 2;
    v21 += 2;
    if (!--v18)
      goto LABEL_6;
  }
}

uint64_t sub_1C130443C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1C13044AC(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1C1308960();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1C13044AC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1C130457C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1C12D38C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1C12D38C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1C130457C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C130896C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1C1304734(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1C1308A14();
  if (!v8)
  {
    sub_1C1308A38();
    __break(1u);
LABEL_17:
    result = sub_1C1308A74();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1C1304734(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1C13047C8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1C1304A18(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1C1304A18(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C13047C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1C130493C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1C13089FC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1C1308A38();
      __break(1u);
LABEL_10:
      v2 = sub_1C1308858();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1C1308A74();
    __break(1u);
LABEL_14:
    result = sub_1C1308A38();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1C130493C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE80);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C13049A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1C1308870();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1C3BA9E20](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1C1304A18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED78FE80);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1308A74();
  __break(1u);
  return result;
}

uint64_t sub_1C1304B64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1C1308AEC();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  v8 = sub_1C1308B1C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C1308A98() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C1308A98() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C1305D28(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C1304D10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1C12F3FC4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1C1304D28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for PushServer()
{
  return objc_opt_self();
}

uint64_t sub_1C1304D8C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C1304DB0()
{
  uint64_t v0;

  return sub_1C12F46D4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C1304DB8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1C1304DE0()
{
  return objectdestroy_6Tm();
}

double sub_1C1304DE8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = sub_1C12F5B88(*(_QWORD *)(v0 + 16), v0 + 24, *(unsigned __int8 *)(v0 + 92)).n128_u64[0];
  return result;
}

uint64_t sub_1C1304DF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1304E24()
{
  uint64_t *v0;

  return sub_1C12F7914(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C1304E30()
{
  return objectdestroy_6Tm();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C12C2CB0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(unsigned __int16 *)(v0 + 88) | (*(unsigned __int8 *)(v0 + 90) << 16));
  return swift_deallocObject();
}

uint64_t sub_1C1304E8C()
{
  uint64_t v0;

  return sub_1C12F7FC0(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1C1304E98@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1305594(a1);
}

uint64_t sub_1C1304EAC@<X0>(_BYTE *a1@<X8>)
{
  return sub_1C1305570(a1);
}

unint64_t sub_1C1304EE4()
{
  unint64_t result;

  result = qword_1EF6D8470;
  if (!qword_1EF6D8470)
  {
    result = MEMORY[0x1C3BAA4B0](&protocol conformance descriptor for PushServer.ServerError, &type metadata for PushServer.ServerError);
    atomic_store(result, (unint64_t *)&qword_1EF6D8470);
  }
  return result;
}

uint64_t method lookup function for PushServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PushServer.eventPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of PushServer.tokenPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of PushServer.subscriptions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of PushServer.pushTokens.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of PushServer.publicTokens.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of PushServer.__allocating_init(connectionFactory:subscriptionStore:publicTokenStore:tokenStore:budgetServer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of PushServer.start()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of PushServer.subscribe(subscription:createIfNecessary:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of PushServer.unsubscribe(activityIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of PushServer.unsubscribe(subscription:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PushServer.token(activityIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PushServer.hasSubscription(environmentName:topic:channel:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t storeEnumTagSinglePayload for PushServer.ServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C13050BC + 4 * byte_1C130AB75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C13050F0 + 4 * byte_1C130AB70[v4]))();
}

uint64_t sub_1C13050F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13050F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C1305100);
  return result;
}

uint64_t sub_1C130510C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1305114);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C1305118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1305120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushServer.ServerError()
{
  return &type metadata for PushServer.ServerError;
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1305174(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1C13070F4(*(_QWORD *)(v1 + 40));
  return a1(v3);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for AppTokenInfo(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);

  swift_unknownObjectRelease();
  sub_1C12C2998(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 56) & ~v2) + *(int *)(v1 + 24);
  v4 = sub_1C1308468();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1C1305280(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppTokenInfo(0) - 8) + 80);
  return sub_1C1300DBC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), v2 + ((v5 + 56) & ~v5));
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  int EnumCaseMultiPayload;
  char *v11;
  uint64_t v12;
  char *v13;

  v1 = (int *)type metadata accessor for IncomingMessage(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  swift_unknownObjectRelease();
  v3 = (uint64_t *)(v0 + ((v2 + 40) & ~v2));
  v4 = v3[1];
  if (v4 >> 60 != 15)
    sub_1C12C2998(*v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (char *)v3 + v1[8];
  v6 = sub_1C1308468();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(char *, uint64_t))(v7 + 8);
  v8(v5, v6);
  sub_1C12C2998(*(uint64_t *)((char *)v3 + v1[9]), *(uint64_t *)((char *)v3 + v1[9] + 8));
  v9 = (char *)v3 + v1[10];
  type metadata accessor for IncomingMessage.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*((_QWORD *)v9 + 2), *((_QWORD *)v9 + 3));
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload && !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
  {
    v8(v9, v6);
  }
  v11 = (char *)v3 + v1[11];
  v12 = *((_QWORD *)v11 + 1);
  if (v12)
  {
    if (v12 == 1)
      goto LABEL_14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*((_QWORD *)v11 + 4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_14:
  v13 = (char *)v3 + v1[12];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6))
    v8(v13, v6);
  return swift_deallocObject();
}

uint64_t sub_1C1305498(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IncomingMessage(0) - 8) + 80);
  sub_1C12FDA80(*(_QWORD *)(v1 + 24), *(uint8_t **)(v1 + 32), v1 + ((v3 + 40) & ~v3));
  return a1();
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1C12C2998(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1C130552C(uint64_t (*a1)(void))
{
  uint64_t v1;

  sub_1C12FCEE0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  return a1();
}

uint64_t sub_1C1305570@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_1C12F99C4(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_1C1305594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C12F9630(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1C13055C4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1C1308AEC();
  swift_bridgeObjectRetain();
  sub_1C1308804();
  v8 = sub_1C1308B1C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C1308A98() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C1308A98() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C1305EC0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C1305770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D84A0);
  v3 = sub_1C13089CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1C1308AEC();
      sub_1C1308804();
      result = sub_1C1308B1C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C1305A4C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8488);
  v3 = sub_1C13089CC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1C1308AEC();
      sub_1C1308804();
      result = sub_1C1308B1C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C1305D28(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C1305770();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C1306058();
      goto LABEL_22;
    }
    sub_1C13063B8();
  }
  v11 = *v4;
  sub_1C1308AEC();
  sub_1C1308804();
  result = sub_1C1308B1C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C1308A98(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C1308AA4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C1308A98();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1C1305EC0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C1305A4C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C1306208();
      goto LABEL_22;
    }
    sub_1C1306664();
  }
  v11 = *v4;
  sub_1C1308AEC();
  sub_1C1308804();
  result = sub_1C1308B1C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C1308A98(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C1308AA4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C1308A98();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1C1306058()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D84A0);
  v2 = *v0;
  v3 = sub_1C13089C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1306208()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8488);
  v2 = *v0;
  v3 = sub_1C13089C0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C13063B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6D84A0);
  v3 = sub_1C13089CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1C1308AEC();
    swift_bridgeObjectRetain();
    sub_1C1308804();
    result = sub_1C1308B1C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1306664()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6D8488);
  v3 = sub_1C13089CC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1C1308AEC();
    swift_bridgeObjectRetain();
    sub_1C1308804();
    result = sub_1C1308B1C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1306910(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v29 = a2;
  v4 = sub_1C1308600();
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C130851C();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v28 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C130857C();
  v35 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v25[1] = v2;
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1C12C7B48(0, v11, 0);
    v12 = v38;
    v13 = (_BYTE *)(a1 + 48);
    v34 = v10;
    v26 = v8;
    v27 = v6;
    do
    {
      v14 = *((_QWORD *)v13 - 2);
      v15 = *((_QWORD *)v13 - 1);
      if (*v13)
      {
        if (*v13 == 1)
        {
          swift_bridgeObjectRetain();
          sub_1C1308570();
          sub_1C12D1848(v14, v15, 1u);
        }
        else
        {
          v19 = v28;
          sub_1C1308504();
          v36 = *v29;
          sub_1C12E29BC((uint64_t)&v36);
          v20 = v31;
          sub_1C13085E8();
          sub_1C13085F4();
          v21 = v20;
          v10 = v34;
          (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v33);
          sub_1C1308564();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v6);
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v16 = v28;
        sub_1C13084EC();
        v37 = *v29;
        sub_1C12E29BC((uint64_t)&v37);
        v17 = v31;
        sub_1C13085E8();
        sub_1C13085F4();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
        v10 = v34;
        sub_1C1308564();
        v6 = v27;
        swift_bridgeObjectRelease();
        v18 = v16;
        v8 = v26;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v6);
        sub_1C12D1848(v14, v15, 0);
      }
      v38 = v12;
      v23 = *(_QWORD *)(v12 + 16);
      v22 = *(_QWORD *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1C12C7B48(v22 > 1, v23 + 1, 1);
        v12 = v38;
      }
      v13 += 24;
      *(_QWORD *)(v12 + 16) = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v12+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v23, v10, v8);
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1C1306C50(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t j;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  j = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (j << 6); ; i = __clz(__rbit64(v12)) + (j << 6))
  {
    v14 = 16 * i;
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v14);
    v17 = *v15;
    v16 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v14);
    v19 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if ((a2(v17, v16, v19, v20) & 1) != 0)
    {
      swift_release();
      return v17;
    }
    swift_unknownObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v11 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * v11);
    ++j;
    if (v12)
      goto LABEL_19;
    j = v11 + 1;
    if (v11 + 1 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    j = v11 + 2;
    if (v11 + 2 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    j = v11 + 3;
    if (v11 + 3 >= v22)
      goto LABEL_24;
    v12 = *(_QWORD *)(v21 + 8 * j);
    if (v12)
      goto LABEL_19;
    v13 = v11 + 4;
    if (v13 >= v22)
    {
LABEL_24:
      swift_release();
      return 0;
    }
    v12 = *(_QWORD *)(v21 + 8 * v13);
    for (j = v13; !v12; ++v13)
    {
      j = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_27;
      if (j >= v22)
        goto LABEL_24;
      v12 = *(_QWORD *)(v21 + 8 * j);
    }
LABEL_19:
    v6 = (v12 - 1) & v12;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1306E60(uint64_t result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = 0;
    v4 = result + 56;
    v24 = v2 - 1;
    v5 = MEMORY[0x1E0DEE9D8];
    v29 = *(_QWORD *)(result + 16);
    v25 = result + 56;
    while (1)
    {
      v26 = v5;
      if (v3 <= v2)
        v6 = v2;
      else
        v6 = v3;
      v7 = v4 + 72 * v3;
      v8 = v3;
      v28 = v6;
      while (1)
      {
        if (v6 == v8)
        {
          __break(1u);
          return result;
        }
        v9 = *(unsigned __int16 *)(v7 + 40) | (*(char *)(v7 + 42) << 16);
        if (v9 < 0 && *(_WORD *)(v7 + 40) == 1)
          break;
LABEL_9:
        ++v8;
        v7 += 72;
        if (v2 == v8)
          return v26;
      }
      v10 = *(_QWORD *)(v7 - 16);
      v33 = *(_QWORD *)(v7 - 24);
      v11 = *(_QWORD *)(v7 - 8);
      v12 = *(_QWORD *)v7;
      v13 = *(_QWORD *)(v7 + 8);
      v14 = *(_QWORD *)(v7 + 16);
      v15 = *(_QWORD *)(v7 + 24);
      v16 = *(_QWORD *)(v7 + 32);
      v27 = *(_BYTE *)(v7 + 43);
      swift_bridgeObjectRetain();
      v31 = v13;
      v32 = v14;
      sub_1C12C2BD8(v11, v12, v13, v14, v15, v16, v9);
      v18 = a2[2];
      v17 = a2[3];
      swift_bridgeObjectRetain();
      if (v15 == v18 && v16 == v17)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = sub_1C1308A98();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          goto LABEL_8;
      }
      if ((v33 != *a2 || v10 != a2[1]) && (sub_1C1308A98() & 1) == 0)
      {
LABEL_8:
        swift_bridgeObjectRelease();
        result = sub_1C12C2CB0(v11, v12, v31, v32, v15, v16, v9);
        v6 = v28;
        v2 = v29;
        goto LABEL_9;
      }
      v5 = v26;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1C12C7AD8(0, *(_QWORD *)(v26 + 16) + 1, 1);
        v5 = v26;
      }
      v21 = *(_QWORD *)(v5 + 16);
      v20 = *(_QWORD *)(v5 + 24);
      v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        result = sub_1C12C7AD8(v20 > 1, v21 + 1, 1);
        v22 = v21 + 1;
        v5 = v26;
      }
      v3 = v8 + 1;
      *(_QWORD *)(v5 + 16) = v22;
      v23 = v5 + 72 * v21;
      *(_QWORD *)(v23 + 32) = v33;
      *(_QWORD *)(v23 + 40) = v10;
      *(_QWORD *)(v23 + 48) = v11;
      *(_QWORD *)(v23 + 56) = v12;
      *(_QWORD *)(v23 + 64) = v31;
      *(_QWORD *)(v23 + 72) = v32;
      *(_QWORD *)(v23 + 80) = v15;
      *(_QWORD *)(v23 + 88) = v16;
      *(_BYTE *)(v23 + 98) = BYTE2(v9);
      *(_WORD *)(v23 + 96) = v9;
      *(_BYTE *)(v23 + 99) = v27;
      v2 = v29;
      v4 = v25;
      if (v24 == v8)
        return v5;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C13070F4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  _QWORD v99[3];
  uint64_t v100;
  uint64_t v101;
  _OWORD v102[2];
  char v103;

  v3 = sub_1C1308738();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char **)((char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)&v1[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_queue];
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1C1308744();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
    {
      v77 = v1;
      v91 = &v1[OBJC_IVAR____TtC24SessionPushNotifications10PushServer_subscriptionStore];
      swift_bridgeObjectRetain();
      v11 = 0;
      v88 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = 32;
      *(_QWORD *)&v13 = 136446210;
      v87 = v13;
      v79 = MEMORY[0x1E0DEE9B8] + 8;
      v80 = a1;
      while (1)
      {
        v14 = *(_OWORD *)(a1 + v12 + 16);
        v102[0] = *(_OWORD *)(a1 + v12);
        v102[1] = v14;
        v103 = *(_BYTE *)(a1 + v12 + 32);
        v15 = v14;
        sub_1C12C3158((uint64_t)v91, (uint64_t)v92);
        v16 = v93;
        v17 = v94;
        __swift_project_boxed_opaque_existential_1(v92, v93);
        v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 24);
        sub_1C1307D34((uint64_t)v102);
        v19 = v18(v16, v17);
        sub_1C1307D34((uint64_t)v102);
        v20 = sub_1C1306E60(v19, v102);
        sub_1C1307D68((uint64_t)v102);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
        v21 = *(_QWORD *)(v20 + 16);
        if (v21)
        {
          v22 = *(unsigned __int16 *)(v20 + 96) | (*(char *)(v20 + 98) << 16);
          if (v22 < 0)
          {
            v33 = *(_QWORD *)(v20 + 40);
            v83 = *(_QWORD *)(v20 + 32);
            v34 = *(_QWORD *)(v20 + 48);
            v35 = *(_QWORD *)(v20 + 56);
            v89 = *(_QWORD *)(v20 + 64);
            v36 = *(_QWORD *)(v20 + 80);
            v90 = *(_QWORD *)(v20 + 72);
            v37 = *(_QWORD *)(v20 + 88);
            v84 = *(unsigned __int8 *)(v20 + 99);
            v86 = v34;
            v85 = v33;
            if (v103)
            {
              v81 = v37;
              v82 = v36;
              if (v103 == 1)
              {
                swift_bridgeObjectRetain();
                sub_1C12C2BD8(v34, v35, v89, v90, v36, v37, v22);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (qword_1ED78F670 != -1)
                  swift_once();
                v38 = sub_1C13086A8();
                __swift_project_value_buffer(v38, (uint64_t)qword_1ED78F650);
                swift_bridgeObjectRetain();
                v39 = sub_1C130869C();
                v40 = sub_1C13088F4();
                if (os_log_type_enabled(v39, v40))
                {
                  v41 = swift_slowAlloc();
                  v42 = swift_slowAlloc();
                  v92[0] = v42;
                  *(_DWORD *)v41 = v87;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v41 + 4) = sub_1C13044AC(v34, v35, v92);
                  swift_bridgeObjectRelease_n();
                  v43 = v39;
                  v44 = v40;
                  v45 = "Subscription for activity %{public}s failed with a bad channel ID";
                  goto LABEL_34;
                }
              }
              else
              {
                swift_bridgeObjectRetain();
                sub_1C12C2BD8(v34, v35, v89, v90, v36, v37, v22);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (qword_1ED78F670 != -1)
                  swift_once();
                v55 = sub_1C13086A8();
                __swift_project_value_buffer(v55, (uint64_t)qword_1ED78F650);
                swift_bridgeObjectRetain();
                v39 = sub_1C130869C();
                v56 = sub_1C13088F4();
                if (os_log_type_enabled(v39, v56))
                {
                  v41 = swift_slowAlloc();
                  v42 = swift_slowAlloc();
                  v92[0] = v42;
                  *(_DWORD *)v41 = v87;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v41 + 4) = sub_1C13044AC(v34, v35, v92);
                  swift_bridgeObjectRelease_n();
                  v43 = v39;
                  v44 = v56;
                  v45 = "Subscription for activity %{public}s failed for an unknown reason";
LABEL_34:
                  _os_log_impl(&dword_1C12C0000, v43, v44, v45, (uint8_t *)v41, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAA558](v42, -1, -1);
                  v54 = v41;
LABEL_35:
                  MEMORY[0x1C3BAA558](v54, -1, -1);

LABEL_37:
                  sub_1C1307D68((uint64_t)v102);
                  sub_1C12C3158((uint64_t)v91, (uint64_t)v99);
                  v57 = v100;
                  v58 = v101;
                  __swift_project_boxed_opaque_existential_1(v99, v100);
                  v59 = *(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v58 + 56);
                  swift_bridgeObjectRetain();
                  v59(v92, v34, v35, v57, v58);
                  swift_bridgeObjectRelease();
                  sub_1C12E2944(v92[0], v92[1], v92[2], v93, v94, v95, v96, v97, v98);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                    v60 = v88;
                  else
                    v60 = sub_1C12F03A8(0, v88[2] + 1, 1, v88);
                  v61 = v81;
                  v62 = v90;
                  v63 = v89;
                  v65 = v60[2];
                  v64 = v60[3];
                  if (v65 >= v64 >> 1)
                    v60 = sub_1C12F03A8((_QWORD *)(v64 > 1), v65 + 1, 1, v60);
                  v60[2] = v65 + 1;
                  v88 = v60;
                  v66 = &v60[9 * v65];
                  v67 = v85;
                  v66[4] = v83;
                  v66[5] = v67;
                  v66[6] = v86;
                  v66[7] = v35;
                  v66[8] = v63;
                  v66[9] = v62;
                  v66[10] = v82;
                  v66[11] = v61;
                  *((_BYTE *)v66 + 98) = BYTE2(v22);
                  *((_WORD *)v66 + 48) = v22;
                  *((_BYTE *)v66 + 99) = v84;
LABEL_42:
                  a1 = v80;
                  goto LABEL_6;
                }
              }
            }
            else
            {
              v78 = v11;
              swift_bridgeObjectRetain();
              v46 = v34;
              v47 = v89;
              v48 = v90;
              sub_1C12C2BD8(v46, v35, v89, v90, v36, v37, v22);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (v21 < 2)
              {
                swift_bridgeObjectRelease();
                sub_1C12C2CB0(v86, v35, v47, v48, v36, v37, v22);
                if (qword_1ED78F670 != -1)
                  swift_once();
                v68 = sub_1C13086A8();
                __swift_project_value_buffer(v68, (uint64_t)qword_1ED78F650);
                swift_bridgeObjectRetain();
                v69 = sub_1C130869C();
                v70 = sub_1C1308900();
                v71 = os_log_type_enabled(v69, v70);
                v11 = v78;
                if (v71)
                {
                  v72 = swift_slowAlloc();
                  v73 = swift_slowAlloc();
                  v92[0] = v73;
                  *(_DWORD *)v72 = v87;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v72 + 4) = sub_1C13044AC(v86, v35, v92);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1C12C0000, v69, v70, "Subscription for activity %{public}s already exists; we will reuse it",
                    (uint8_t *)v72,
                    0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAA558](v73, -1, -1);
                  MEMORY[0x1C3BAA558](v72, -1, -1);

                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                sub_1C1307D68((uint64_t)v102);
                goto LABEL_42;
              }
              v82 = v36;
              if (qword_1ED78F670 != -1)
                swift_once();
              v49 = sub_1C13086A8();
              __swift_project_value_buffer(v49, (uint64_t)qword_1ED78F650);
              swift_bridgeObjectRetain();
              v39 = sub_1C130869C();
              v50 = sub_1C13088F4();
              v51 = os_log_type_enabled(v39, v50);
              v34 = v86;
              v11 = v78;
              v81 = v37;
              if (v51)
              {
                v52 = swift_slowAlloc();
                v53 = swift_slowAlloc();
                v92[0] = v53;
                *(_DWORD *)v52 = v87;
                swift_bridgeObjectRetain();
                *(_QWORD *)(v52 + 4) = sub_1C13044AC(v34, v35, v92);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1C12C0000, v39, v50, "Subscription for activity %{public}s failed as it is a duplicate", (uint8_t *)v52, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3BAA558](v53, -1, -1);
                v54 = v52;
                goto LABEL_35;
              }
            }

            swift_bridgeObjectRelease_n();
            goto LABEL_37;
          }
          swift_bridgeObjectRelease();
          if (qword_1ED78F670 != -1)
            swift_once();
          v23 = sub_1C13086A8();
          __swift_project_value_buffer(v23, (uint64_t)qword_1ED78F650);
          sub_1C1307D34((uint64_t)v102);
          v24 = sub_1C130869C();
          v25 = sub_1C13088F4();
          if (os_log_type_enabled(v24, v25))
          {
            v26 = swift_slowAlloc();
            v27 = swift_slowAlloc();
            v92[0] = v27;
            *(_DWORD *)v26 = v87;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v26 + 4) = sub_1C13044AC(v15, *((unint64_t *)&v15 + 1), v92);
            swift_bridgeObjectRelease();
            sub_1C1307D68((uint64_t)v102);
            sub_1C1307D68((uint64_t)v102);
            _os_log_impl(&dword_1C12C0000, v24, v25, "Subscription has no activityIdentifier for failed channel: %{public}s ", (uint8_t *)v26, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3BAA558](v27, -1, -1);
            v28 = v26;
LABEL_17:
            MEMORY[0x1C3BAA558](v28, -1, -1);
            goto LABEL_5;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_1ED78F670 != -1)
            swift_once();
          v29 = sub_1C13086A8();
          __swift_project_value_buffer(v29, (uint64_t)qword_1ED78F650);
          sub_1C1307D34((uint64_t)v102);
          v24 = sub_1C130869C();
          v30 = sub_1C13088F4();
          if (os_log_type_enabled(v24, v30))
          {
            v31 = swift_slowAlloc();
            v32 = swift_slowAlloc();
            v92[0] = v32;
            *(_DWORD *)v31 = v87;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v31 + 4) = sub_1C13044AC(v15, *((unint64_t *)&v15 + 1), v92);
            swift_bridgeObjectRelease();
            sub_1C1307D68((uint64_t)v102);
            sub_1C1307D68((uint64_t)v102);
            _os_log_impl(&dword_1C12C0000, v24, v30, "Cannot find subscription for failed channel: %{public}s ", (uint8_t *)v31, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3BAA558](v32, -1, -1);
            v28 = v31;
            goto LABEL_17;
          }
        }
        sub_1C1307D68((uint64_t)v102);
        sub_1C1307D68((uint64_t)v102);
LABEL_5:

LABEL_6:
        v12 += 40;
        if (!--v10)
        {
          swift_bridgeObjectRelease();
          v1 = v77;
          v74 = v88;
          goto LABEL_52;
        }
      }
    }
    v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_52:
    sub_1C1308684();
    v75 = swift_allocObject();
    *(_QWORD *)(v75 + 16) = v74;
    *(_QWORD *)(v75 + 24) = v1;
    v76 = v1;
    sub_1C1308678();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1307D34(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1307D68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1307D9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C1307DC8(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_1C1302164(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

BOOL sub_1C1307DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return *(_QWORD *)(v3 + 16) == a3;
}

uint64_t sub_1C1307DE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1307E0C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  v2 = sub_1C13086CC();
  return a1(v2);
}

uint64_t sub_1C1307E60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1C12C2CB0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(unsigned __int16 *)(v0 + 80) | (*(unsigned __int8 *)(v0 + 82) << 16));
  return swift_deallocObject();
}

uint64_t sub_1C1307EA0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for PushEvent(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[7];
  v5 = sub_1C1308468();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + v1[8];
  type metadata accessor for PushEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C12C2998(*(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24));
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v8 = sub_1C13085A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  v9 = v3 + v1[9];
  v10 = sub_1C1308588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v3 + v1[10];
  v12 = sub_1C1308558();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return swift_deallocObject();
}

uint64_t sub_1C1308008(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;

  type metadata accessor for PushEvent(0);
  v2 = sub_1C13086CC();
  return a1(v2);
}

uint64_t sub_1C1308068(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int16 *)(a1 + 64) | (*(unsigned __int8 *)(a1 + 66) << 16);
  swift_bridgeObjectRelease();
  sub_1C12C2CB0(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1C13080E0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy51_8(a2, a1);
  return a2;
}

uint64_t sub_1C130811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return sub_1C12C2BD8(a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

uint64_t sub_1C1308194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_DWORD *)(a1 + 136);
  sub_1C12E2944(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_DWORD *)(a1 + 64));
  sub_1C12E2944(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1C1308238()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C130825C(uint64_t a1)
{
  uint64_t v1;

  sub_1C12F4F44(a1, v1);
}

void sub_1C1308264(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;

  sub_1C12F524C(a1, a2, a3, v3);
}

uint64_t sub_1C130826C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1308290(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD *))(v1 + 16))(*a1, a1[1], a1 + 2);
}

uint64_t sub_1C13082BC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12C309C(a1);
}

uint64_t sub_1C13082D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C1304D10(a1);
}

uint64_t sub_1C13082E4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1C12C3278(a1);
}

uint64_t dispatch thunk of PushPriorityProviding.priority(topic:defaultPriority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of BudgetServing.pushPriorityChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BudgetServing.budgetLevelExceededPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BudgetServing.budgets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BudgetServing.hasExceededMaximumPushToStartBudget(subscriptionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of BudgetServing.hasExceededMaximumActivityBudget(subscriptionID:level:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of BudgetServing.budget(subscriptionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of BudgetServing.handle(pushEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1C1308354()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1C1308360()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1C130836C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1C1308378()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1C1308384()
{
  return MEMORY[0x1E0CAF9B0]();
}

uint64_t sub_1C1308390()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1C130839C()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1C13083A8()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1C13083B4()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1C13083C0()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1C13083CC()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1C13083D8()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1C13083E4()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1C13083F0()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1C13083FC()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1C1308408()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1C1308414()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1C1308420()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t sub_1C130842C()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1C1308438()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1C1308444()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1C1308450()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1C130845C()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1C1308468()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1C1308474()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1C1308480()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1C130848C()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1C1308498()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1C13084A4()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1C13084B0()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1C13084BC()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1C13084C8()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1C13084D4()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1C13084E0()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1C13084EC()
{
  return MEMORY[0x1E0C8F488]();
}

uint64_t sub_1C13084F8()
{
  return MEMORY[0x1E0C8F4A8]();
}

uint64_t sub_1C1308504()
{
  return MEMORY[0x1E0C8F4B0]();
}

uint64_t sub_1C1308510()
{
  return MEMORY[0x1E0C8F4B8]();
}

uint64_t sub_1C130851C()
{
  return MEMORY[0x1E0C8F4E0]();
}

uint64_t sub_1C1308528()
{
  return MEMORY[0x1E0C8F4F8]();
}

uint64_t sub_1C1308534()
{
  return MEMORY[0x1E0C8F510]();
}

uint64_t sub_1C1308540()
{
  return MEMORY[0x1E0C8F520]();
}

uint64_t sub_1C130854C()
{
  return MEMORY[0x1E0C8F560]();
}

uint64_t sub_1C1308558()
{
  return MEMORY[0x1E0C8F570]();
}

uint64_t sub_1C1308564()
{
  return MEMORY[0x1E0C8F730]();
}

uint64_t sub_1C1308570()
{
  return MEMORY[0x1E0C8F738]();
}

uint64_t sub_1C130857C()
{
  return MEMORY[0x1E0C8F778]();
}

uint64_t sub_1C1308588()
{
  return MEMORY[0x1E0C8F798]();
}

uint64_t sub_1C1308594()
{
  return MEMORY[0x1E0C8F7C8]();
}

uint64_t sub_1C13085A0()
{
  return MEMORY[0x1E0C8F7D8]();
}

uint64_t sub_1C13085AC()
{
  return MEMORY[0x1E0C8F990]();
}

uint64_t sub_1C13085B8()
{
  return MEMORY[0x1E0C8F998]();
}

uint64_t sub_1C13085C4()
{
  return MEMORY[0x1E0C8F9A0]();
}

uint64_t sub_1C13085D0()
{
  return MEMORY[0x1E0C8F9A8]();
}

uint64_t sub_1C13085DC()
{
  return MEMORY[0x1E0C8FF30]();
}

uint64_t sub_1C13085E8()
{
  return MEMORY[0x1E0C90080]();
}

uint64_t sub_1C13085F4()
{
  return MEMORY[0x1E0C90090]();
}

uint64_t sub_1C1308600()
{
  return MEMORY[0x1E0C900E0]();
}

uint64_t sub_1C130860C()
{
  return MEMORY[0x1E0C90100]();
}

uint64_t sub_1C1308618()
{
  return MEMORY[0x1E0C90108]();
}

uint64_t sub_1C1308624()
{
  return MEMORY[0x1E0C90110]();
}

uint64_t sub_1C1308630()
{
  return MEMORY[0x1E0C90138]();
}

uint64_t sub_1C130863C()
{
  return MEMORY[0x1E0C90140]();
}

uint64_t sub_1C1308648()
{
  return MEMORY[0x1E0D8CD20]();
}

uint64_t sub_1C1308654()
{
  return MEMORY[0x1E0D8CD40]();
}

uint64_t sub_1C1308660()
{
  return MEMORY[0x1E0D8CD60]();
}

uint64_t sub_1C130866C()
{
  return MEMORY[0x1E0D8CD78]();
}

uint64_t sub_1C1308678()
{
  return MEMORY[0x1E0D8CDB8]();
}

uint64_t sub_1C1308684()
{
  return MEMORY[0x1E0D8CDC0]();
}

uint64_t sub_1C1308690()
{
  return MEMORY[0x1E0C90220]();
}

uint64_t sub_1C130869C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1C13086A8()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1C13086B4()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1C13086C0()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1C13086CC()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1C13086D8()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1C13086E4()
{
  return MEMORY[0x1E0C96128]();
}

uint64_t sub_1C13086F0()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1C13086FC()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1C1308708()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1C1308714()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1C1308720()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1C130872C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1C1308738()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1C1308744()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1C1308750()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1C130875C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1C1308768()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1C1308774()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1C1308780()
{
  return MEMORY[0x1E0DEA280]();
}

uint64_t sub_1C130878C()
{
  return MEMORY[0x1E0DEA288]();
}

uint64_t sub_1C1308798()
{
  return MEMORY[0x1E0DEA2B8]();
}

uint64_t sub_1C13087A4()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1C13087B0()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1C13087BC()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1C13087C8()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1C13087D4()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1C13087E0()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1C13087EC()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1C13087F8()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1C1308804()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1C1308810()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1C130881C()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1C1308828()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1C1308834()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1C1308840()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1C130884C()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1C1308858()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1C1308864()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1C1308870()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1C130887C()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1C1308888()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1C1308894()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1C13088A0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1C13088AC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1C13088B8()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1C13088C4()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1C13088D0()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1C13088DC()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1C13088E8()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1C13088F4()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1C1308900()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1C130890C()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1C1308918()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1C1308924()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1C1308930()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1C130893C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1C1308948()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1C1308954()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1C1308960()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1C130896C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1C1308978()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1C1308984()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1C1308990()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1C130899C()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1C13089A8()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1C13089B4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1C13089C0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1C13089CC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1C13089D8()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1C13089E4()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1C13089F0()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1C13089FC()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1C1308A08()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1C1308A14()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1C1308A20()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1C1308A2C()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1C1308A38()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1C1308A44()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1C1308A50()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1C1308A5C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1C1308A68()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1C1308A74()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1C1308A80()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1C1308A8C()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1C1308A98()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1C1308AA4()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1C1308AB0()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1C1308ABC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1C1308AC8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1C1308AD4()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1C1308AE0()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1C1308AEC()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1C1308AF8()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1C1308B04()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1C1308B10()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1C1308B1C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t CFBundleCopyLocalizedStringForLocalization()
{
  return MEMORY[0x1E0C98060]();
}

uint64_t IOPMScheduleUserActivityLevelNotificationWithTimeout()
{
  return MEMORY[0x1E0CBB808]();
}

uint64_t IOPMUnregisterNotification()
{
  return MEMORY[0x1E0CBB840]();
}

uint64_t IOPSCopyPowerSourcesByTypePrecise()
{
  return MEMORY[0x1E0CBB870]();
}

CFArrayRef IOPSCopyPowerSourcesList(CFTypeRef blob)
{
  return (CFArrayRef)MEMORY[0x1E0CBB880](blob);
}

CFDictionaryRef IOPSGetPowerSourceDescription(CFTypeRef blob, CFTypeRef ps)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBB8A8](blob, ps);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1E0C99FF0]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t acTryWithObjCException()
{
  return MEMORY[0x1E0C90240]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x1E0C84A00]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1E0DEEB70]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

